{"version":3,"file":"8.chunk.js","sources":["webpack:///./src/app/pages/systemadmin/systemadmin.module.ts","webpack:///./src/app/pages/systemadmin/systemconfiguration/divi.service.ts","webpack:///./src/app/pages/systemadmin/systemconfiguration/otpAuth.component.ts","webpack:///./src/app/pages/systemadmin/systemadmin.component.ts","webpack:///./src/app/pages/systemadmin/systemconfiguration/adddivision.component.ts","webpack:///./src/app/pages/systemadmin/systemconfiguration/divisionmaster.component.ts","webpack:///./src/app/pages/systemadmin/systemconfiguration/settingmaster.component.ts","webpack:///./src/app/pages/systemadmin/systemconfiguration/systemconfiguration.component.ts","webpack:///./src/app/pages/systemadmin/systemconfiguration/taxconfigcharges.component.ts","webpack:///./src/app/pages/systemadmin/systemadmin.routing.ts","webpack:///./src/app/pages/systemadmin/systemconfiguration/printfilesetup.component.ts","webpack:///./src/app/pages/systemadmin/systemconfiguration/resettodefault.component.ts","webpack:///./src/app/pages/systemadmin/systemconfiguration/search.pipe.ts","webpack:///./~/ng-multiselect-dropdown/fesm5/ng-multiselect-dropdown.js","webpack:///./src/app/pages/systemadmin/systemconfiguration/adddivision.component.html","webpack:///./src/app/pages/systemadmin/systemconfiguration/divisionmaster.component.html","webpack:///./src/app/pages/systemadmin/systemconfiguration/otpAuth.component.html","webpack:///./src/app/pages/systemadmin/systemconfiguration/printfilesetup.component.html","webpack:///./src/app/pages/systemadmin/systemconfiguration/resettodefault.component.html","webpack:///./src/app/pages/systemadmin/systemconfiguration/settingmaster.component.html","webpack:///./src/app/pages/systemadmin/systemconfiguration/systemconfiguration.component.html","webpack:///./src/app/pages/systemadmin/systemconfiguration/taxconfigcharges.component.html"],"sourcesContent":["import { CommonModule } from \"@angular/common\";\r\nimport { NgModule } from \"@angular/core\";\r\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\r\nimport { SystemAdmin } from \"./systemadmin.component\";\r\nimport { SystemConfiguration } from \"./systemconfiguration/systemconfiguration.component\";\r\nimport { CanActivateTeam } from \"../../common/services/permission\";\r\nimport { routing } from \"./systemadmin.routing\";\r\nimport { PrintFileSetup } from \"./systemconfiguration/printfilesetup.component\";\r\nimport { SettingMaster } from \"./systemconfiguration/settingmaster.component\";\r\nimport { DivisionMaster } from \"./systemconfiguration/divisionmaster.component\";\r\nimport { TaxConfigCharges } from \"./systemconfiguration/taxconfigcharges.component\";\r\nimport { ResetToDefult } from \"./systemconfiguration/resettodefault.component\";\r\nimport { AddDivision } from \"./systemconfiguration/adddivision.component\";\r\nimport { AllSetting } from \"./systemconfiguration/allsetting.component\";\r\nimport { NgMultiSelectDropDownModule } from 'ng-multiselect-dropdown';\r\nimport { GenericPopupGridModule } from \"../../common/popupLists/generic-grid/generic-popup-grid.module\";\r\nimport { OtpAuth } from \"./systemconfiguration/otpAuth.component\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { DiviService } from \"./systemconfiguration/divi.service\";\r\nimport { SearchPipe } from \"./systemconfiguration/search.pipe\";\r\n\r\n@NgModule({\r\n    imports:[\r\n        CommonModule,\r\n        FormsModule,\r\n        routing,\r\n        ReactiveFormsModule,\r\n        NgMultiSelectDropDownModule.forRoot(),\r\n        GenericPopupGridModule.forRoot()\r\n    ],\r\n    declarations:[\r\n        SystemAdmin, \r\n        SystemConfiguration, \r\n        PrintFileSetup, \r\n        SettingMaster,\r\n        ResetToDefult,\r\n        DivisionMaster,\r\n        TaxConfigCharges,\r\n        AddDivision,\r\n        OtpAuth,\r\n        SearchPipe\r\n    ],\r\n    providers:[CanActivateTeam, DiviService]\r\n})\r\n\r\nexport class SystemAdminModule{}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/pages/systemadmin/systemadmin.module.ts","import { Injectable } from '@angular/core';\r\nimport { Http, RequestOptions ,Headers} from '@angular/http';\r\nimport { Subject } from 'rxjs/Subject';\r\nimport { AuthService } from '../../../common/services/permission';\r\nimport { GlobalState } from '../../../global.state';\r\nimport { Observable } from 'rxjs';\r\n//import { HttpHeaders } from '@angular/common/http';\r\n\r\n\r\n@Injectable()\r\nexport class DiviService {\r\n  private divisions: any[] = [];\r\n  private currentDivision: any;\r\n  private get apiUrl(): string {\r\n    let url = this.gblState.getGlobalSetting(\"apiUrl\");\r\n    let apiUrl = \"\";\r\n\r\n    if (!!url && url.length > 0) { apiUrl = url[0] };\r\n    return apiUrl\r\n}\r\n\r\n  constructor(private http: Http, private authService: AuthService, private gblState: GlobalState) {\r\n   \r\n  }\r\n\r\n  getDivisions() {\r\n    let res = { status: \"error\", result: \"\" };\r\n    let returnSubject: Subject<any> = new Subject();\r\n    this.http.get(this.apiUrl + '/getDivisionMasterList' , this.authService.getRequestOption())\r\n        .subscribe(response => {\r\n            let data = response.json();\r\n            if (data.status == 'ok') {\r\n                returnSubject.next(data);\r\n                returnSubject.unsubscribe();\r\n            }\r\n            else {\r\n                returnSubject.next(data)\r\n                returnSubject.unsubscribe();\r\n            }\r\n        }, error => {\r\n            res.status = 'error'; res.result = error;\r\n            returnSubject.next(res);\r\n            returnSubject.unsubscribe();\r\n        }\r\n        );\r\n    return returnSubject;\r\n \r\n}\r\ndeleteDivision(INITIAL:string){\r\n  let res = { status: \"error\", result: \"\" };\r\n  let returnSubject: Subject<any> = new Subject();\r\n  let bodyData = { INITIAL: INITIAL };\r\n  this.http.post(this.apiUrl + '/deleteDivisionMaster',bodyData, this.authService.getRequestOption())\r\n      .subscribe(response => {\r\n          let data = response.json();\r\n          if (data.status == 'ok') {\r\n              returnSubject.next(data);\r\n              returnSubject.unsubscribe();\r\n          }\r\n          else {\r\n              returnSubject.next(data)\r\n              returnSubject.unsubscribe();\r\n          }\r\n      }, error => {\r\n          res.status = 'error'; res.result = error;\r\n          returnSubject.next(res);\r\n          returnSubject.unsubscribe();\r\n      }\r\n      );\r\n  return returnSubject;\r\n};\r\n\r\ngetRategrp() {\r\n  let res = { status: \"error\", result: \"\" };\r\n    let returnSubject: Subject<any> = new Subject();\r\n    this.http.get(this.apiUrl + '/getAllRateGroupList' , this.authService.getRequestOption())\r\n        .subscribe(response => {\r\n            let data = response.json();\r\n            if (data.status == 'ok') {\r\n                returnSubject.next(data);\r\n                returnSubject.unsubscribe();\r\n            }\r\n            else {\r\n                returnSubject.next(data)\r\n                returnSubject.unsubscribe();\r\n            }\r\n        }, error => {\r\n            res.status = 'error'; res.result = error;\r\n            returnSubject.next(res);\r\n            returnSubject.unsubscribe();\r\n        }\r\n        );\r\n    return returnSubject;\r\n};\r\n\r\ngetCostCenter(){\r\n    let res = { status: \"error\", result: \"\" };\r\n      let returnSubject: Subject<any> = new Subject();\r\n      this.http.get(this.apiUrl + '/getAllCostCenterList' , this.authService.getRequestOption())\r\n          .subscribe(response => {\r\n              let data = response.json();\r\n              if (data.status == 'ok') {\r\n                  returnSubject.next(data);\r\n                  returnSubject.unsubscribe();\r\n              }\r\n              else {\r\n                  returnSubject.next(data)\r\n                  returnSubject.unsubscribe();\r\n              }\r\n          }, error => {\r\n              res.status = 'error'; res.result = error;\r\n              returnSubject.next(res);\r\n              returnSubject.unsubscribe();\r\n          }\r\n          );\r\n      return returnSubject;\r\n  };\r\n\r\ngetDivisionDetails(initial:string){\r\n  let res = { status: \"error\", result: \"\" };\r\n  let returnSubject: Subject<any> = new Subject();\r\n  this.http.get(this.apiUrl + `/getDivisionDetails?initial=${initial}`, this.authService.getRequestOption())\r\n      .subscribe(response => {\r\n          let data = response.json();\r\n          if (data.status == 'ok') {\r\n              returnSubject.next(data);\r\n              returnSubject.unsubscribe();\r\n          }\r\n          else {\r\n              returnSubject.next(data)\r\n              returnSubject.unsubscribe();\r\n          }\r\n      }, error => {\r\n          res.status = 'error'; res.result = error;\r\n          returnSubject.next(res);\r\n          returnSubject.unsubscribe();\r\n      }\r\n      );\r\n  return returnSubject;\r\n};\r\n\r\n\r\nsaveMaster(mode:any,data:any){\r\nlet res = { status: \"error\", result: \"\" };\r\n  let returnSubject: Subject<any> = new Subject();\r\n    let bodyData = {mode:mode, data:data}\r\n    this.http.post(this.apiUrl +'/saveDivisionMaster',bodyData, this.authService.getRequestOption())\r\n    .subscribe(response => {\r\n        let data = response.json();\r\n        if (data.status == 'ok') {\r\n            returnSubject.next(data);\r\n            returnSubject.unsubscribe();\r\n        }\r\n        else {\r\n            returnSubject.next(data)\r\n            returnSubject.unsubscribe();\r\n        }\r\n    }, error => {\r\n        res.status = 'error'; res.result = error;\r\n        returnSubject.next(res);\r\n        returnSubject.unsubscribe();\r\n    }\r\n    );\r\nreturn returnSubject;\r\n  };\r\n  \r\n  getTaxConfig(){\r\n    let res = { status: \"error\", result: \"\" };\r\n  let returnSubject: Subject<any> = new Subject();\r\n    this.http.get(this.apiUrl +'/getTaxConfigChargesList', this.authService.getRequestOption())\r\n    .subscribe(response => {\r\n        let data = response.json();\r\n        if (data.status == 'ok') {\r\n            returnSubject.next(data);\r\n            returnSubject.unsubscribe();\r\n        }\r\n        else {\r\n            returnSubject.next(data)\r\n            returnSubject.unsubscribe();\r\n        }\r\n    }, error => {\r\n        res.status = 'error'; res.result = error;\r\n        returnSubject.next(res);\r\n        returnSubject.unsubscribe();\r\n    }\r\n    );\r\nreturn returnSubject;\r\n  };\r\n  \r\n  getcheckList(acid:any){\r\n    let res = { status: \"error\", result: \"\" };\r\n  let returnSubject: Subject<any> = new Subject();\r\n    this.http.get(this.apiUrl +`/checkTaxConfigCharge?acid=${acid}`, this.authService.getRequestOption())\r\n    .subscribe(response => {\r\n        let data = response.json();\r\n        if (data.status == 'ok') {\r\n            returnSubject.next(data);\r\n            returnSubject.unsubscribe();\r\n        }\r\n        else {\r\n            returnSubject.next(data)\r\n            returnSubject.unsubscribe();\r\n        }\r\n    }, error => {\r\n        res.status = 'error'; res.result = error;\r\n        returnSubject.next(res);\r\n        returnSubject.unsubscribe();\r\n    }\r\n    );\r\nreturn returnSubject;\r\n  };\r\n  \r\n  resetDefault(selectedItems) {\r\n    let res = { status: \"error\", result: \"\" };\r\n  let returnSubject: Subject<any> = new Subject();\r\n  console.log(\"ddss\")\r\n    this.http.post(this.apiUrl +`/resetToDefaultValue`,selectedItems, this.authService.getRequestOption())\r\n    .subscribe((response:any) => {\r\n\r\n        let data = response.json();\r\n      \r\n        if (data.status == 'ok') {\r\n            returnSubject.next(data);\r\n            returnSubject.unsubscribe();\r\n        }\r\n        else {\r\n            returnSubject.next(data)\r\n            returnSubject.unsubscribe();\r\n        }\r\n    }, error => {\r\n        res.status = 'error'; \r\n        res.result = error;\r\n        returnSubject.next(res);\r\n        returnSubject.unsubscribe();\r\n    }\r\n    );\r\nreturn returnSubject;\r\n  };\r\n\r\n  resetAllToDefault(){\r\n    let res = { status: \"error\", result: \"\" };\r\n  let returnSubject: Subject<any> = new Subject();\r\n    this.http.get(this.apiUrl +'/resetPrintToDefault', this.authService.getRequestOption())\r\n    .subscribe(response => {\r\n        let data = response.json();\r\n        if (data.status == 'ok') {\r\n            returnSubject.next(data);\r\n            returnSubject.unsubscribe();\r\n        }\r\n        else {\r\n            returnSubject.next(data)\r\n            returnSubject.unsubscribe();\r\n        }\r\n    }, error => {\r\n        res.status = 'error'; res.result = error;\r\n        returnSubject.next(res);\r\n        returnSubject.unsubscribe();\r\n    }\r\n    );\r\nreturn returnSubject;\r\n  }\r\n  resetVoucherType(id:any){\r\n    let res = { status: \"error\", result: \"\" };\r\n    let returnSubject: Subject<any> = new Subject();\r\n  this.http.get(this.apiUrl +`/resetSelectedPrintToDefault?voucherPrefix=${id}`, this.authService.getRequestOption())\r\n  .subscribe(response => {\r\n      let data = response.json();\r\n      if (data.status == 'ok') {\r\n          returnSubject.next(data);\r\n          returnSubject.unsubscribe();\r\n      }\r\n      else {\r\n          returnSubject.next(data)\r\n          returnSubject.unsubscribe();\r\n      }\r\n  }, error => {\r\n      res.status = 'error'; res.result = error;\r\n      returnSubject.next(res);\r\n      returnSubject.unsubscribe();\r\n  }\r\n  );\r\nreturn returnSubject;\r\n  }\r\n  \r\n  getPrintFileName() {\r\n    let res = { status: \"error\", result: \"\" };\r\n    let returnSubject: Subject<any> = new Subject();\r\n      this.http.get(this.apiUrl +'/getVoucherWisePrintFileName', this.authService.getRequestOption())\r\n      .subscribe(response => {\r\n          let data = response.json();\r\n          if (data.status == 'ok') {\r\n              returnSubject.next(data);\r\n              returnSubject.unsubscribe();\r\n          }\r\n          else {\r\n              returnSubject.next(data)\r\n              returnSubject.unsubscribe();\r\n          }\r\n      }, error => {\r\n          res.status = 'error'; res.result = error;\r\n          returnSubject.next(res);\r\n          returnSubject.unsubscribe();\r\n      }\r\n      );\r\n  return returnSubject;\r\n    };\r\n  \r\n    getVoucherType() {\r\n        let res = { status: \"error\", result: \"\" };\r\n        let returnSubject: Subject<any> = new Subject();\r\n      this.http.get(this.apiUrl +'/getVouchertypeForPrint', this.authService.getRequestOption())\r\n      .subscribe(response => {\r\n          let data = response.json();\r\n          if (data.status == 'ok') {\r\n              returnSubject.next(data);\r\n              returnSubject.unsubscribe();\r\n          }\r\n          else {\r\n              returnSubject.next(data)\r\n              returnSubject.unsubscribe();\r\n          }\r\n      }, error => {\r\n          res.status = 'error'; res.result = error;\r\n          returnSubject.next(res);\r\n          returnSubject.unsubscribe();\r\n      }\r\n      );\r\n  return returnSubject;\r\n    };\r\n      \r\n    getDefaultPrintFile(id:any) {\r\n        let res = { status: \"error\", result: \"\" };\r\n        let returnSubject: Subject<any> = new Subject();\r\n      this.http.get(this.apiUrl +`/getDefaultPrintFile?voucherType=${id}`, this.authService.getRequestOption())\r\n      .subscribe(response => {\r\n          let data = response.json();\r\n          if (data.status == 'ok') {\r\n              returnSubject.next(data);\r\n              returnSubject.unsubscribe();\r\n          }\r\n          else {\r\n              returnSubject.next(data)\r\n              returnSubject.unsubscribe();\r\n          }\r\n      }, error => {\r\n          res.status = 'error'; res.result = error._body;\r\n          returnSubject.next(res);\r\n          returnSubject.unsubscribe();\r\n      }\r\n      );\r\n  return returnSubject;\r\n    };\r\n  \r\n  getSettingDes() {\r\n    let res = { status: \"error\", result: \"\" };\r\n    let returnSubject: Subject<any> = new Subject();\r\n  this.http.get(this.apiUrl +'/getSettingDescription', this.authService.getRequestOption())\r\n  .subscribe(response => {\r\n      let data = response.json();\r\n      if (data.status == 'ok') {\r\n          returnSubject.next(data);\r\n          returnSubject.unsubscribe();\r\n      }\r\n      else {\r\n          returnSubject.next(data)\r\n          returnSubject.unsubscribe();\r\n      }\r\n  }, error => {\r\n      res.status = 'error'; res.result = error;\r\n      returnSubject.next(res);\r\n      returnSubject.unsubscribe();\r\n  }\r\n  );\r\nreturn returnSubject;\r\n};\r\n\r\n   authOTP(otp:any){\r\n    let res = { status: \"error\", result: \"\" };\r\n    let returnSubject: Subject<any> = new Subject();\r\n  this.http.get(this.apiUrl +`/authenticateOTP?OTP=${otp}`, this.authService.getRequestOption())\r\n  .subscribe(response => {\r\n      let data = response.json();\r\n      if (data.status == 'ok') {\r\n          returnSubject.next(data);\r\n          returnSubject.unsubscribe();\r\n      }\r\n      else {\r\n          returnSubject.next(data)\r\n          returnSubject.unsubscribe();\r\n      }\r\n  }, error => {\r\n      res.status = 'error'; res.result = error;\r\n      returnSubject.next(res);\r\n      returnSubject.unsubscribe();\r\n  }\r\n  );\r\nreturn returnSubject;\r\n   }\r\n \r\n  uploadPrintFile(file:any,id:any){\r\n    let res = { status: \"error\", result: \"\" };\r\n    let returnSubject: Subject<any> = new Subject();\r\n    const options = this.getRequestOptionwithoutContent();\r\n  this.http.post(this.apiUrl +`/uploadReportFile?voucherPrefix=${id}`, file,options)\r\n  .subscribe(response => {\r\n      let data = response.json();\r\n      if (data.status == 'ok') {\r\n          returnSubject.next(data);\r\n          returnSubject.unsubscribe();\r\n      }\r\n      else {\r\n          returnSubject.next(data)\r\n          returnSubject.unsubscribe();\r\n      }\r\n  }, error => {\r\n      res.status = 'error'; res.result = error;\r\n      returnSubject.next(res);\r\n      returnSubject.unsubscribe();\r\n  }\r\n  );\r\nreturn returnSubject;\r\n  }\r\n\r\n  updateSettingDes(value:any[], mode:string){\r\n    let res = { status: \"error\", result: \"\" };\r\n    let returnSubject: Subject<any> = new Subject();\r\n    let data = {mode: mode, data: value};\r\n  this.http.post(this.apiUrl +`/updateSettingDescription`,data,this.authService.getRequestOption())\r\n  .subscribe(response => {\r\n      let data = response.json();\r\n      if (data.status == 'ok') {\r\n          returnSubject.next(data);\r\n          returnSubject.unsubscribe();\r\n      }\r\n      else {\r\n          returnSubject.next(data)\r\n          returnSubject.unsubscribe();\r\n      }\r\n  }, error => {\r\n      res.status = 'error'; res.result = error;\r\n      returnSubject.next(res);\r\n      returnSubject.unsubscribe();\r\n  }\r\n  );\r\nreturn returnSubject;\r\n  }\r\n\r\n//   private getRequestOptionwithoutContent(){\r\n//     const headers =  new HttpHeaders({\r\n//       Authorization: this.authService.getAuth().token\r\n//     });\r\n//     return headers;\r\n//   }\r\n\r\nprivate getRequestOptionwithoutContent(): RequestOptions {\r\n    let headers = new Headers({\r\n        Authorization: this.authService.getAuth().token\r\n        // Don't set Content-Type, let the browser handle it for FormData\r\n    });\r\n\r\n    return new RequestOptions({ headers: headers });\r\n}\r\n\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/pages/systemadmin/systemconfiguration/divi.service.ts","import { Component, EventEmitter, Output } from \"@angular/core\";\r\nimport { DiviService } from \"./divi.service\";\r\nimport { AlertService } from \"../../../common/services/alert/alert.service\";\r\n\r\n@Component({\r\n    selector: 'otpAuth',\r\n    template: require('./otpAuth.component.html'),\r\n})\r\n\r\nexport class OtpAuth{\r\n    @Output() hideOtp = new EventEmitter<string>();\r\n\r\n    authOTP:any;\r\n    isOtpVisible:boolean=false;\r\n\r\n    constructor(private service:DiviService, private alertService: AlertService){}\r\n    \r\n  closeOtp(value: string | null) {\r\n    this.isOtpVisible = false;\r\n    this.hideOtp.emit(value || \"\");  \r\n    this.authOTP=\"\";\r\n  }\r\n\r\n\r\n    showOTPpopUp(){\r\n        this.isOtpVisible = true;\r\n    }\r\nonSubmit(){\r\nthis.service.authOTP(this.authOTP).subscribe(data =>{\r\n    if (data.status=='ok'){\r\n      this.alertService.success(data.result);\r\n      this.closeOtp(data.result);\r\n    }else{\r\n        this.alertService.error(data.result._body);\r\n      }\r\n      this.authOTP=\"\";\r\n    },error => {\r\n  this.alertService.error(error.result._body);\r\n    this.closeOtp(null);\r\n  });\r\n}\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/pages/systemadmin/systemconfiguration/otpAuth.component.ts","import { Component } from \"@angular/core\";\r\n\r\n@Component({\r\n    selector:'systemadmin',\r\n    template:'<router-outlet></router-outlet>'\r\n})\r\n\r\nexport class SystemAdmin{}\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/pages/systemadmin/systemadmin.component.ts","import { Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { ActivatedRoute, Router } from \"@angular/router\";\r\nimport { GenericPopUpComponent, GenericPopUpSettings } from \"../../../common/popupLists/generic-grid/generic-popup-grid.component\";\r\nimport { DiviService } from \"./divi.service\";\r\nimport { SpinnerService } from \"../../../common/services/spinner/spinner.service\";\r\nimport { AlertService } from \"../../../common/services/alert/alert.service\";\r\nimport { OtpAuth } from \"./otpAuth.component\";\r\nimport { MasterRepo } from \"../../../common/repositories\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\n\r\n@Component({\r\n    selector: 'adddivision',\r\n    template: require('./adddivision.component.html')\r\n})\r\n\r\nexport class AddDivision implements OnInit{\r\n  division: any = {};\r\n  divisionList:any[]=[];\r\n  initial:string='';\r\n  name:string='';\r\n  rategrp: any[]=[];\r\n  costCenters : any[]=[];\r\n  priorities =[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25, 26];\r\n  locationCategories =[\r\n    {location_id: '0', locationName: 'Inside Valley'},\r\n    {location_id: '1', locationName: 'Outside Valley'}\r\n  ];\r\n  modeTitle:string='';\r\n  mode: any;\r\n  divisionDetail: any;\r\n  returnUrl: any;\r\n  form: FormGroup;\r\n\r\n    @ViewChild(\"genericGridBranchAccList\")\r\n    genericGridBranchAccList: GenericPopUpComponent;\r\n    gridBranchAccListPopupSettings: GenericPopUpSettings = new GenericPopUpSettings();\r\n\r\n    @ViewChild(\"genericGridCashAccList\")\r\n    genericGridCashAccList: GenericPopUpComponent;\r\n    gridCashAccListPopupSettings: GenericPopUpSettings = new GenericPopUpSettings();\r\n    @ViewChild(\"OTPpopUp\") OtpPopUp: OtpAuth;\r\n\r\n   \r\n    constructor(private router: Router, private divisionService: DiviService, private route: ActivatedRoute,  private loadingService: SpinnerService, private alertService: AlertService, private masterService : MasterRepo,  private _fb: FormBuilder){\r\n      this.division.comid = this.masterService.userProfile.CompanyInfo.COMID;\r\n    }\r\n\r\n    \r\n  ngOnInit() {\r\n\r\n    this.initializeForm();\r\n    this.loadRategrp();\r\n    this.loadCostCenter();\r\n\r\n    this.route.params.subscribe(params => {\r\n      this.mode = params['mode'];\r\n      if (this.mode === 'edit' || this.mode === 'view') {\r\n        let initial =  params[\"Initial\"];\r\n        this.modeTitle = this.mode === 'edit' ? 'Edit Division' : 'View Division';\r\n        this.divisionService.getDivisionDetails(initial).subscribe(data =>{\r\n          this.division=data.result;\r\n          this.form.patchValue(this.division);\r\n          // this.division.BRANCHNAME = data.result.ACNAME;\r\n          // this.division.BRANCH = data.result.ACID;\r\n          // this.division.RATEGRUOPID= data.result.RateGroupID;\r\n          // this.division.NAME= data.result.NAME;\r\n          // this.division.INITIAL= data.result.INITIAL;\r\n          // this.division.ADDRESS2=data.result.ADDRESS2;\r\n          // this.division.REMARKS=data.result.REMARKS;\r\n          // this.division.ID=data.result.ID;\r\n\r\n          if (this.mode == 'edit') {\r\n            this.form.get('INITIAL').disable();\r\n          }\r\n\r\n          if (this.mode == 'view') {\r\n            this.form.get('INITIAL').disable();\r\n            this.form.get('NAME').disable();\r\n            this.form.get('ADDRESS2').disable();\r\n            this.form.get('REMARKS').disable();\r\n            this.form.get('ACNAME').disable();\r\n            this.form.get('RateGroupID').disable();\r\n            this.form.get('COSTCENTER').disable();\r\n            this.form.get('Priority').disable();\r\n            this.form.get('LocationCategory').disable();\r\n            this.form.get('CASH_AC_NAME').disable();\r\n          }\r\n\r\n        },error => {\r\n          console.error('Error fetching permissions', error);\r\n        });\r\n        console.log(this.division);\r\n      } else {\r\n        this.modeTitle = 'New Division';\r\n      }\r\n    });\r\n    \r\n  }\r\n\r\n  initializeForm() {\r\n    this.form = this._fb.group({\r\n      INITIAL: ['', [Validators.required, Validators.maxLength(3)]],\r\n      NAME: ['', Validators.required],\r\n      ADDRESS2: ['', Validators.required],\r\n      REMARKS: [''],\r\n      ACNAME: [''],\r\n      RateGroupID: [''],\r\n      COSTCENTER: [''],\r\n      Priority: [''],\r\n      LocationCategory: [''],\r\n      CASH_AC_NAME: [''],\r\n  });\r\n  }\r\n  \r\n  toggleOtpPopup() {\r\n    this.OtpPopUp.showOTPpopUp();\r\n  }\r\n\r\n  hideOtpPopup(value){\r\n    if(value === \"Authentication successful!\"){\r\n      this.onSave();\r\n      \r\n    }else{\r\n      return;\r\n    }\r\n    console.log(\"emitted value\",value);\r\n  }\r\n\r\n  BranchListPopup(){\r\n    this.gridBranchAccListPopupSettings = {\r\n      title: \"Branch Account\",\r\n      apiEndpoints: `/getAccountPagedListByPType/PA/C/0`,\r\n      defaultFilterIndex: 0,\r\n      columns: [\r\n        { key: \"ACNAME\", title: \" Name\", hidden: false, noSearch: false },\r\n        { key: \"VATNO\", title: \" VAT No.\", hidden: false, noSearch: false },\r\n        { key: \"ADDRESS\", title: \" ADDRESS\", hidden: false, noSearch: false },\r\n        { key: \"MOBILE\", title: \" Mobile No.\", hidden: false, noSearch: false }\r\n      ]\r\n      };\r\n\r\n    this.genericGridBranchAccList.show();\r\n  }\r\n\r\n  CashListPopup(){\r\n    this.gridCashAccListPopupSettings = {\r\n      title: \"Cash Account\",\r\n      apiEndpoints: `/getAllCashAccountsPagedList`,\r\n      defaultFilterIndex: 0,\r\n      columns: [\r\n        { key: \"ACCODE\", title: \" AC Code\", hidden: false, noSearch: false },\r\n        { key: \"ACNAME\", title: \" AC Name\", hidden: false, noSearch: false }\r\n      ]\r\n      };\r\n\r\n    this.genericGridCashAccList.show();\r\n  }\r\n  loadRategrp() {\r\n    this.divisionService.getRategrp().subscribe(data =>{\r\n      this.rategrp=data;\r\n    },error => {\r\n      console.error('Error fetching permissions', error);\r\n    });\r\n   }\r\n   loadCostCenter() {\r\n    this.divisionService.getCostCenter().subscribe(data =>{\r\n      this.costCenters=data;\r\n    },error => {\r\n      console.error('Error fetching permissions', error);\r\n    });\r\n   }\r\n   \r\n   cancel(){\r\n    this.returnUrl = \"pages/systemadmin/adddivision\"\r\n    this.router.navigate([this.returnUrl]);\r\n}\r\n   onSave(){\r\n    this.loadingService.show(\"Data is Saving ..\")\r\n  this.divisionService.saveMaster(this.mode, this.division)\r\n    .subscribe(response => {\r\n      if(response.status == 'ok'){\r\n        this.loadingService.hide();\r\n        // this.alertService.info(response.result);\r\n        this.alertService.success(\"Data Saved Successfully\");\r\n        this.division=\"\";\r\n        this.router.navigate(['pages/systemadmin/divisionmaster']);\r\n        setTimeout(() => {\r\n            this.alertService.hide()\r\n          }, 1000);\r\n        this.cancel();\r\n     }else{\r\n        this.loadingService.hide();\r\n        this.alertService.info(response.result._body);\r\n     }\r\n},error =>{\r\n    this.loadingService.hide();\r\n}\r\n                );\r\n      }\r\n  \r\n   goback(){\r\n    this.router.navigate(['pages/systemadmin/divisionmaster']);\r\n   }\r\n\r\n   preventInput($event) {\r\n    $event.preventDefault();\r\n    return false;\r\n  }\r\n\r\n  onBranchAccSelect(value){\r\n    this.division.ACNAME = value.ACNAME;\r\n    this.division.ACID= value.ACID;\r\n\r\n    this.form.patchValue({\r\n      ACNAME: value.ACNAME,\r\n      ACID: value.ACID\r\n    });\r\n  }\r\n\r\n  onCashAccSelect(value){\r\n    this.division.CASH_AC_NAME=value.ACNAME;\r\n    this.division.CASH_AC=value.ACID;\r\n\r\n    this.form.patchValue({\r\n      CASH_AC_NAME: value.ACNAME,\r\n      CASH_AC: value.ACID\r\n    });\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/pages/systemadmin/systemconfiguration/adddivision.component.ts","import { Component } from \"@angular/core\";\r\nimport { Router } from \"@angular/router\";\r\nimport { DiviService } from \"./divi.service\";\r\nimport { AlertService } from \"../../../common/services/alert/alert.service\";\r\n\r\n@Component({\r\n    selector: 'divisionmaster',\r\n    template: require('./divisionmaster.component.html')\r\n})\r\n\r\nexport class DivisionMaster{\r\n\r\n  divisionList: any[] = [];\r\n  subcriptions: any;\r\n  searchedTerm:any;\r\n  settings = {\r\n    mode: \"external\",\r\n    add: {\r\n      addButtonContent: '',\r\n    },\r\n    view: {\r\n      viewButtonContent: 'View',\r\n      saveButtonContent: '<i class=\"ion-checkmark\"></i>',\r\n      cancelButtonContent: '<i class=\"ion-close\"></i>',\r\n    },\r\n    edit: {\r\n      editButtonContent: 'Edit',\r\n      saveButtonContent: '<i class=\"ion-checkmark\"></i>',\r\n      cancelButtonContent: '<i class=\"ion-close\"></i>',\r\n    },\r\n    delete: {\r\n      deleteButtonContent: '',\r\n    },\r\n    pager: {\r\n      display: true,\r\n      perPage: 14\r\n    },\r\n    columns: {\r\n      INITIAL: {\r\n        title: 'Initial',\r\n        type: 'string'\r\n\r\n      },\r\n      NAME:{\r\n        title:'Name',\r\n        type: 'string'\r\n      },\r\n      ADDRESS2: {\r\n        title: 'ADDRESS',\r\n        type: 'string'\r\n      },\r\n      REMARKS: {\r\n        title: 'Remarks',\r\n        type: 'string'\r\n\r\n      }\r\n      ,\r\n      ACNAME: {\r\n        title: 'Branch Account',\r\n        type: 'string'\r\n\r\n      }\r\n      ,\r\n      RateGroup_Name: {\r\n        title: 'Rate Group List',\r\n        type: 'string',\r\n        width: '20px'\r\n      }\r\n      ,\r\n      COSTCENTER: {\r\n        title: 'Cost Center',\r\n        type: 'string',\r\n        width: '20px'\r\n      }\r\n    }\r\n  };\r\n\r\n    constructor(private router: Router, private divisionService : DiviService, private alertService:AlertService){\r\n    }\r\n\r\n   ngOnInit(): void {\r\n    this.loadDivisions();\r\n   } \r\n\r\n loadDivisions() {\r\n  this.divisionService.getDivisions().subscribe(data =>{\r\n    this.divisionList=data.result;\r\n  },error => {\r\n    console.error('Error fetching permissions', error);\r\n  });\r\n }\r\n  \r\n goback(){\r\n  this.router.navigate([\"pages/dashboard/dashboard\"])\r\n }\r\n\r\n addDivi() {\r\n  this.router.navigate(['pages/systemadmin/adddivision', { mode: \"add\", returnUrl: this.router.url }]);\r\n}\r\n\r\nonView(division){\r\n  this.router.navigate([\"pages/systemadmin/adddivision\", { Initial: division.INITIAL, mode: \"view\", returnUrl: this.router.url }]);\r\n}\r\n\r\nonEdit(division):void{\r\n \r\n  this.router.navigate([\"pages/systemadmin/adddivision\", { Initial: division.INITIAL, mode: \"edit\", returnUrl: this.router.url }]);\r\n    \r\n}\r\n\r\nonDelete(division):void{\r\n  if (window.confirm('Are you sure you want to delete?')) {\r\n    this.divisionService.deleteDivision(division.INITIAL).subscribe((data:any)=>{\r\n      if(data.status==\"ok\"){\r\n        this.alertService.success(data.result);\r\n        this.loadDivisions()\r\n      }\r\n    })\r\n\r\n  } else {\r\n    division.confirm.reject();\r\n  }\r\n\r\n}\r\n}\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/pages/systemadmin/systemconfiguration/divisionmaster.component.ts","import { Router } from '@angular/router';\r\nimport { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { OtpAuth } from './otpAuth.component';\r\nimport { DiviService } from './divi.service';\r\nimport { SpinnerService } from '../../../common/services/spinner/spinner.service';\r\nimport { AlertService } from '../../../common/services/alert/alert.service';\r\n\r\n@Component({\r\n  selector: 'settingmaster',\r\n  template: require('./settingmaster.component.html')\r\n})\r\n\r\nexport class SettingMaster implements OnInit{\r\n\r\n  modeTitle: string;\r\n  activerowIndex: number = 0;\r\n  searchSetting: any;\r\n  isActiveSettingList: boolean;\r\n  isActiveSettingData: boolean;\r\n  currentChoiceCat: any;\r\n  currentChoiceList: any;\r\n  categoryName: any;\r\n  settingName: any;\r\n  settingDetails: any;\r\n  modeName: string;\r\n  moduleArray: any;\r\n  allSettings: any;\r\n  currentCatName: any;\r\n  currnetSetting: any;\r\n  showCategoryWiseSetting: boolean = true;\r\n  showAllSetting: boolean = false;\r\n\r\n  @ViewChild(\"OTPpopUp\") OtpPopUp: OtpAuth;\r\n\r\n  constructor(\r\n    private alertService: AlertService,\r\n    private loadingService: SpinnerService,\r\n    private router: Router,\r\n    private masterSettingService: DiviService,\r\n  ) {\r\n    this.searchSetting = 'searchName';\r\n    this.loadingService.show(\"Loading setting data...\")\r\n        this.masterSettingService.getSettingDes().subscribe((res: any) => {\r\n          if (res) {\r\n            this.loadingService.hide();\r\n            if (res.status == \"ok\") {\r\n              this.allSettings = res.result;\r\n              this.filterCategory();\r\n            } else {\r\n              this.alertService.error(res.result)\r\n            }\r\n          }\r\n        }, error => {\r\n          this.loadingService.hide();\r\n        })\r\n  }\r\n\r\n  hideOtpPopup(value: string) {\r\n\r\n    if (value === \"Authentication successful!\") {\r\n     this.confirmationOkClicked(true);\r\n    } else {\r\n     return;\r\n    }\r\n  }\r\n  filterCategory() {\r\n    let result = this.allSettings\r\n    let arr = [];\r\n    for (let i = 0; i < this.allSettings.length; i++) {\r\n      let catgories = (result[i].CATEGORY)\r\n      arr.push(catgories)\r\n    }\r\n    this.categoryName = Array.from(new Set(arr.filter(item => item === 'Account Settings')));\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.modeTitle = \"Master Setting Info\";\r\n  }\r\n\r\n  categoryClick(catName: string) {\r\n    this.isActiveSettingList = true;\r\n    this.filterModule(catName);\r\n    if (catName !== (this.settingName && this.settingName.CATEGORY)) {\r\n      this.isActiveSettingData = false;\r\n    }\r\n    this.currentChoiceCat = catName;\r\n  }\r\n\r\n  filterModule(catName: string) {\r\n    this.currentCatName = catName;\r\n    let moduleList = this.allSettings.filter(x => x.CATEGORY == catName && x.MODULE);\r\n    let arr = [];\r\n    for (let i = 0; i < moduleList.length; i++) {\r\n      let module = moduleList[i].MODULE;\r\n      arr.push(module);\r\n    }\r\n    this.moduleArray = Array.from(new Set(arr));\r\n    this.settingName = moduleList;\r\n  }\r\n\r\n  settingClick(setName: string) {\r\n    this.currnetSetting = setName;\r\n    this.isActiveSettingData = true;\r\n    let setting = this.settingName.filter(x => x.MODULE == setName);\r\n    this.settingDetails = setting;\r\n    for (var i = 0; i < (this.settingDetails ? this.settingDetails.length : 0); i++) {\r\n      if (this.settingDetails[i] && this.settingDetails[i].DATA_TYPE && this.settingDetails[i].DATA_TYPE.toLowerCase() === 'select') {\r\n        this.settingDetails[i].POSSIBLE_VALUES_LIST = this.settingDetails[i].POSSIBLE_VALUES.split(',');\r\n      }\r\n    }    \r\n    this.currentChoiceList = setName;\r\n  }\r\n\r\n\r\n  getActiveCat(catName: string): string {\r\n    if (this.currentChoiceCat === catName) {\r\n      return 'active';\r\n    }\r\n    else {\r\n      return 'not';\r\n    }\r\n  }\r\n\r\n  getActive(choiceList: string): string {\r\n    if (this.currentChoiceList === choiceList) {\r\n      return 'activeList';\r\n    }\r\n    else {\r\n      return 'not';\r\n    }\r\n  }\r\n\r\n  onUpdate() {    \r\n    this.OtpPopUp.showOTPpopUp();\r\n    this.modeName = \"\";\r\n  }\r\n\r\n  onInvUpdate(settingData: any){\r\n    let arr=[];\r\n    arr.push(settingData)\r\n    this.settingDetails = arr;\r\n    this.OtpPopUp.showOTPpopUp();\r\n    this.modeName = \"\";\r\n  }\r\n\r\n  onInvReset(settingData: any){\r\n    let arr=[];\r\n    arr.push(settingData)\r\n    this.settingDetails = arr;\r\n    this.OtpPopUp.showOTPpopUp();\r\n    this.modeName = 'reset';\r\n  }\r\n\r\n  confirmationOkClicked(event: boolean) {\r\n    if (event == true) {\r\n      if (confirm(\"Are you sure you want to save?\") == true) {\r\n        this.loadingService.show(\"Updating...\");\r\n        this.masterSettingService.updateSettingDes(this.settingDetails, this.modeName).subscribe((res: any) => {\r\n          if (res) {\r\n            this.loadingService.hide();\r\n            if (res.status == \"ok\") {\r\n              this.alertService.success(res.result)\r\n              this.isActiveSettingData = false;\r\n              this.loadingService.show(\"Loading setting...\")\r\n              this.masterSettingService.getSettingDes().subscribe((res: any) => {\r\n                if (res) {\r\n                  this.allSettings = res.result;\r\n                  this.filterCategory();\r\n                  this.filterModule(this.currentCatName);\r\n                  this.settingClick(this.currnetSetting);\r\n                  this.loadingService.hide();\r\n                  this.isActiveSettingData = true;\r\n                } else {\r\n                  this.loadingService.hide();\r\n                  this.alertService.warning(res.result);\r\n                }\r\n              })\r\n            } else {\r\n              this.loadingService.hide();\r\n              this.alertService.warning(res.result);\r\n            }\r\n          } else {\r\n            this.loadingService.hide();\r\n            this.alertService.warning(res.result);\r\n          }\r\n        })\r\n      }\r\n    } else {\r\n      this.alertService.error(\"OTP Invalid\");\r\n    }\r\n  }\r\n\r\n  allSetting() {\r\n    if (this.allSettings) { \r\n      for (let i = 0; i < this.allSettings.length; i++) {\r\n        let setting = this.allSettings[i];\r\n       if (setting && setting.CATEGORY === 'Account Settings') {\r\n    if (setting.DATA_TYPE && setting.DATA_TYPE.toLowerCase() === 'select') {\r\n      setting.POSSIBLE_VALUES_LIST = setting.POSSIBLE_VALUES ? setting.POSSIBLE_VALUES.split(',') : [];\r\n  }\r\n}\r\n      }\r\n    }\r\n    this.showCategoryWiseSetting = false;\r\n    this.showAllSetting = true;\r\n  }\r\n//   allSetting() {\r\n//     if (this.allSettings) { \r\n//       for(let i=0; i< ) {\r\n//             let setting = this.allSettings[i];\r\n            \r\n//         }\r\n//     }\r\n//     this.showCategoryWiseSetting = false;\r\n//     this.showAllSetting = true;\r\n// }\r\n\r\n  \r\n\r\n  categoryWiseSetting(){\r\n    this.showCategoryWiseSetting = true;\r\n    this.showAllSetting = false;\r\n  }\r\n\r\n  setToDefault() {\r\n    this.OtpPopUp.showOTPpopUp();\r\n    this.modeName = \"reset\";\r\n  }\r\n\r\n  inputChange() {\r\n    this.isActiveSettingData = true;\r\n    this.isActiveSettingList = true;\r\n  }\r\n\r\n  cancel() {\r\n    try {\r\n      this.router.navigate([\"./pages/dashboard\"]);\r\n    } catch (ex) {\r\n      alert(ex);\r\n    }\r\n  }\r\n\r\n  resetAllNormalSetting(){\r\n    this.settingDetails = this.allSettings.filter(x => x.MODULE != 'Mandatory Settings');\r\n    this.OtpPopUp.showOTPpopUp();\r\n    this.modeName = 'reset';\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/pages/systemadmin/systemconfiguration/settingmaster.component.ts","import { Component } from \"@angular/core\";\r\nimport { Router } from \"@angular/router\";\r\n\r\n@Component({\r\n    selector:\"systemconfiguration\",\r\n    template: require('./systemconfiguration.component.html'),\r\n    styles: [`\r\n    background-color:white;\r\n    `]\r\n})\r\n\r\nexport class SystemConfiguration{\r\n    constructor(private route:Router){};\r\n    onDivisionClick(){\r\n        this.route.navigate(['/pages/systemadmin/divisionmaster']);\r\n    }\r\n    onSettingMasterClick(){\r\n        this.route.navigate(['/pages/systemadmin/settingmaster']);\r\n    }\r\n    onTaxconfigClick(){\r\n        this.route.navigate(['/pages/systemadmin/taxconfigcharges']);\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/pages/systemadmin/systemconfiguration/systemconfiguration.component.ts","import { Component, OnInit } from \"@angular/core\";\r\nimport { ActivatedRoute, Router } from \"@angular/router\";\r\nimport { DiviService } from \"./divi.service\";\r\nimport { AlertService } from \"../../../common/services/alert/alert.service\";\r\n\r\n@Component({\r\n    selector: 'taxconfigcharges',\r\n    template: require('./taxconfigcharges.component.html')\r\n})\r\n\r\nexport class TaxConfigCharges implements OnInit{\r\n  configItems :any []= [];\r\n  checkTaxList: any;\r\n\r\n  ngOnInit(): void {\r\n      this.loadTaxconfig();\r\n  }\r\n\r\n      constructor(private router: Router, private taxconfig: DiviService, private route: ActivatedRoute, private alertservice:AlertService){}\r\n      goback(){\r\n        this.router.navigate([\"pages/dashboard/dashboard\"])\r\n       }\r\n       \r\n       loadTaxconfig() {\r\n        this.taxconfig.getTaxConfig().subscribe(data =>{\r\n          this.configItems=data.result;\r\n        },error => {\r\n          console.error('Error fetching permissions', error);\r\n        });\r\n       }\r\n       preventInput($event) {\r\n        $event.preventDefault();\r\n        return false;\r\n      }\r\n    \r\n      checkList(acid: any){\r\n        if(acid==null){\r\n          acid=\"\";\r\n        }\r\n        this.taxconfig.getcheckList(acid).subscribe(data =>{\r\n         this.alertservice.error(data.result._body);\r\n        },error => {\r\n         console.error('Error fetching Acid', error);\r\n       });\r\n      }\r\n}\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/pages/systemadmin/systemconfiguration/taxconfigcharges.component.ts","import { Routes, RouterModule } from \"@angular/router\";\r\nimport { CanActivateTeam } from \"../../common/services/permission/guard.service\";\r\nimport { SystemAdmin } from \"./systemadmin.component\";\r\nimport { SystemConfiguration } from \"./systemconfiguration/systemconfiguration.component\";\r\nimport { PrintFileSetup } from \"./systemconfiguration/printfilesetup.component\";\r\nimport { ResetToDefult } from \"./systemconfiguration/resettodefault.component\";\r\nimport { SettingMaster } from \"./systemconfiguration/settingmaster.component\";\r\nimport { DivisionMaster } from \"./systemconfiguration/divisionmaster.component\";\r\nimport { TaxConfigCharges } from \"./systemconfiguration/taxconfigcharges.component\";\r\nimport { AddDivision } from \"./systemconfiguration/adddivision.component\";\r\nimport { AllSetting } from \"./systemconfiguration/allsetting.component\";\r\nimport { OtpAuth } from \"./systemconfiguration/otpAuth.component\";\r\n\r\n\r\nconst routes : Routes=[\r\n    {\r\n        path:'',\r\n        component: SystemAdmin,\r\n        children:[\r\n            \r\n             {path:'systemconfiguration',component:SystemConfiguration, canActivate: [CanActivateTeam]},\r\n             {path:'adddivision',component:AddDivision},\r\n             {path:'divisionmaster',component:DivisionMaster},\r\n             {path:'settingmaster',component:SettingMaster},\r\n             {path:'otpAuth', component: OtpAuth},\r\n             {path:'taxconfigcharges',component:TaxConfigCharges}\r\n            \r\n        ]\r\n        \r\n    }\r\n];\r\n\r\n\r\nexport const routing = RouterModule.forChild(routes);\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/pages/systemadmin/systemadmin.routing.ts","import { Component, ElementRef, OnInit, ViewChild } from \"@angular/core\";\r\nimport { Router } from \"@angular/router\";\r\nimport { DiviService } from \"./divi.service\";\r\nimport { AnonymousSubscription } from \"rxjs/Subscription\";\r\nimport { AlertService } from \"../../../common/services/alert/alert.service\";\r\nimport { AppConfiguration, environment } from \"../../../environment\";\r\nimport { Spinner } from \"primeng/primeng\";\r\nimport { SpinnerService } from \"../../../common/services/spinner/spinner.service\";\r\nimport { data } from \"jquery\";\r\nimport { OtpAuth } from \"./otpAuth.component\";\r\n\r\n@Component({\r\n    selector: 'printfilesetup',\r\n    template: require('./printfilesetup.component.html'),\r\n})\r\n\r\nexport class PrintFileSetup implements OnInit{\r\n  isModalVisible = false;\r\n  @ViewChild('modalcheckbox') checkbox: ElementRef; \r\n  @ViewChild(\"OTPpopUp\") OtpPopUp: OtpAuth;\r\n  isOtpVisible :boolean=false;\r\n  fileName: any[]=[];\r\n  vouchertype: any[]=[];\r\n  defaultPrintFile: any;\r\n  selectedVoucherType: any;\r\n  BtnClicked:string;\r\n  fileList: FileList=null;\r\n  \r\n  \r\nngOnInit(): void {\r\n    this.loadVoucherType();\r\n}\r\n\r\n\r\n  toggleOtpPopup(btnClicked:string) {\r\n    this.BtnClicked = btnClicked;\r\n    this.OtpPopUp.showOTPpopUp();\r\n  }\r\n\r\n  hideOtpPopup(value: string){\r\n    if(value === \"Authentication successful!\"){\r\n        switch(this.BtnClicked){\r\n          case \"RESETTODEFAULT\" : this.reset();\r\n          break;\r\n          case \"UPLOAD\": this.confirmationUploadClicked(true);\r\n          break;\r\n        }\r\n        \r\n      }else{\r\n        return;\r\n      }\r\n      console.log(\"emitted value\",value);\r\n  }\r\n\r\n  toggleModal(event: Event) {\r\n    const checkbox = event.target as HTMLInputElement;\r\n    this.isModalVisible = checkbox.checked;\r\n    this.Service.getPrintFileName().subscribe(data =>{\r\n      this.fileName=data.result;\r\n    },error => {\r\n      console.error('Error fetching permissions', error);\r\n    });\r\n  }\r\n\r\n  hideModal() {\r\n    this.isModalVisible = false;\r\n    const checkbox = this.checkbox.nativeElement as HTMLInputElement;\r\n    checkbox.checked = false;\r\n    console.log('Hiding modal');\r\n  }\r\n\r\n  constructor(private router: Router, private Service:DiviService, private alertservice: AlertService, private loadingService:SpinnerService) {}\r\n\r\n  goback() {\r\n    this.router.navigate(['pages/dashboard/dashboard']);\r\n  }\r\n\r\n  loadVoucherType(){\r\n    this.Service.getVoucherType().subscribe(data =>{\r\n      this.vouchertype=data;\r\n    },error => {\r\n      console.error('Error fetching Voucher Type', error);\r\n    });\r\n  }\r\n\r\n  // onDefaultPrintFile(){\r\n  //   this.Service.getDefaultPrintFile(this.selectedVoucherType).subscribe(data =>{\r\n  //     if (data.status === 'ok') {\r\n  //       this.defaultPrintFile=data.result;\r\n  //     }\r\n  //   },error => {\r\n  //     console.error('Error fetching File', error);\r\n  //   });\r\n  // }\r\n \r\n  reset(){\r\n    this.Service.resetVoucherType(this.selectedVoucherType).subscribe(data =>{\r\n      if (data.status='ok'){\r\n        this.alertservice.success(data.result);\r\n      }\r\n      else{\r\n        this.alertservice.error(data.result._body);\r\n      }\r\n      // this.selectedVoucherType=[];\r\n    },error => {\r\n      console.error('Error fetching permissions', error);\r\n    });\r\n  }\r\n  resetAll(){\r\n    this.Service.resetAllToDefault().subscribe(data =>{\r\n      if(data.status='ok'){\r\n        this.alertservice.success(\"PrintFile is successfully reset to default\");\r\n      }else{\r\n        this.alertservice.error(data.result._body);\r\n      }\r\n    },error => {\r\n      console.error('Error fetching permissions', error);\r\n    });\r\n  }\r\n\r\n  downloadJS(printfilename){\r\n    var url =AppConfiguration.apiUrl+`/downloadPrintFilesForSystemUser/${printfilename}`\r\n    fetch(url)\r\n      .then(resp => resp.blob())\r\n      .then(blob => {\r\n        const url = window.URL.createObjectURL(blob);\r\n        const a = document.createElement('a');\r\n        a.style.display = 'none';\r\n        a.href = url;\r\n        // the filename you want\r\n        a.download = printfilename\r\n        document.body.appendChild(a);\r\n        a.click();\r\n        window.URL.revokeObjectURL(url);\r\n        this.alertservice.success('Your file has downloaded!'); \r\n      })\r\n      .catch(() => alert('Download Failed'));\r\n    }\r\n\r\ndownloadDefaultFile() {\r\n  this.Service.getDefaultPrintFile(this.selectedVoucherType).subscribe(\r\n    (res: any) => {\r\n      if(res.status=='ok'){\r\n        let printfilename = res.result;\r\n        this.downloadJS(printfilename);\r\n      }\r\n  else{\r\n    this.alertservice.error(res.result);\r\n  }\r\n    },\r\n    error => {\r\n      console.log(\"w\",error)\r\n      this.alertservice.error(error.error.result);\r\n      this.loadingService.hide();\r\n})\r\n}\r\n\r\nonFileChange($event){\r\n  this.fileList = $event.target.files;\r\n}\r\nconfirmationUploadClicked(event:boolean){\r\n  if(event == true){\r\n    console.log(\"FILE LIST\", this.fileList);\r\n  if (this.selectedVoucherType == null || this.selectedVoucherType == \"\") {\r\n    this.alertservice.info(\"Please Select Master.\");\r\n    return;\r\n  }\r\n\r\n  if (this.fileList == null || this.fileList.length == 0) {\r\n    this.alertservice.info(\"Please Select File.\");\r\n    return;\r\n  }\r\n\r\n  if (this.fileList.length > 0) {\r\n    let file: File = this.fileList[0];\r\n    let formData: FormData = new FormData();\r\n    formData.append(\"config\", file, file.name);\r\n\r\n    this.loadingService.show(\"Uploading. Please Wait...this may take some time\");\r\n    this.Service.uploadPrintFile(formData, this.selectedVoucherType).subscribe(\r\n      res=>{\r\n        console.log(\"result from print file upload\",res);\r\n        this.loadingService.hide();    \r\n            console.log(\"result\");\r\n            if (res.status == \"ok\") {\r\n              this.alertservice.success(\"Request Successful\");\r\n              this.selectedVoucherType.VOUCHER_NAME = \"\";\r\n              this.fileList = null;\r\n              //this.fileSelector_Import.nativeElement.value = null;\r\n              // this.PrintFileUpload.nativeElement.value = null;\r\n            } else if (res.status == \"errorfile\") {\r\n              this.alertservice.error(\"Some of the rows cannot be saved. Please check 'Upload Status' for more details.\");\r\n            } else if (res.status == \"error\") {\r\n                this.alertservice.error(\"Error :\"+res.result.error);\r\n            }\r\n            else {\r\n              this.loadingService.hide();\r\n              this.alertservice.error(res.result);\r\n            }\r\n      }, \r\n      error =>{\r\n        this.loadingService.hide();\r\n        this.alertservice.error(error);\r\n      }\r\n    )\r\n    \r\n  }\r\n  }else {\r\n    this.alertservice.error(\"OTP Invalid\");\r\n    }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/pages/systemadmin/systemconfiguration/printfilesetup.component.ts","import { Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { IDropdownSettings } from \"ng-multiselect-dropdown/multiselect.model\";\r\nimport { DiviService } from \"./divi.service\";\r\nimport { AlertService } from \"../../../common/services/alert/alert.service\";\r\nimport { OtpAuth } from \"./otpAuth.component\";\r\n\r\n\r\n@Component({\r\n    selector: 'resetdefault',\r\n    template: require('./resettodefault.component.html')\r\n})\r\n\r\nexport class ResetToDefult implements OnInit{\r\n  dropdownList = [];\r\n  selectedItems = [];\r\n  dropdownSettings:IDropdownSettings={};\r\n  default: any;\r\n  isOtpVisible: boolean;\r\n  @ViewChild(\"OTPpopUp\") OtpPopUp: OtpAuth;\r\n\r\n  toggleOtpPopup() {\r\n    this.OtpPopUp.showOTPpopUp();\r\n  }\r\n\r\n  hideOtpPopup(value: string) {\r\n\r\n    if (value === \"Authentication successful!\") {\r\n      this.reset();\r\n    } else {\r\n     return;\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n    this.dropdownSettings= {\r\n      singleSelection: false,\r\n      idField: 'item_id',\r\n      textField: 'item_text',\r\n      selectAllText: 'Select All',\r\n      unSelectAllText: 'UnSelect All',\r\n      itemsShowLimit: 5,\r\n      allowSearchFilter: true,\r\n      \r\n    };\r\n    this.dropdownList = [\r\n      { item_id: 'formwiseprintformat', item_text: 'Formwise Print Format'},\r\n      { item_id: 'reportcolumnformat', item_text: 'Report Column Format' },\r\n      { item_id: 'storedprocedure', item_text: 'Update Stored Procedure / Views' },\r\n      { item_id: 'taxchargesconfig', item_text: 'Tax Config Charges' },\r\n      { item_id: 'reportmaster', item_text: 'Default Report Master & Report Details'},\r\n      { item_id: 'directorapp', item_text: 'Directors app Stored Procedure'},\r\n       {item_id: 'reportcontextmenu', item_text: 'Drill Down'},\r\n    ];\r\n\r\n  }\r\n  constructor(private resetService: DiviService, private alertService:AlertService){}\r\n\r\n  reset(){\r\n    let printFormat= [];\r\n    this.selectedItems.forEach((x) => \r\n    {\r\n      printFormat.push(x.item_id);\r\n    })\r\n    this.resetService.resetDefault(printFormat).subscribe(data =>{\r\n      if (data.status=='ok'){\r\n        this.alertService.success(data.result);\r\n      }else{\r\n        this.alertService.error(data.result._body);\r\n      }\r\n      this.selectedItems=[];\r\n    },error => {\r\n      this.alertService.error(error);\r\n    });\r\n  }\r\n\r\n  onItemSelect(item: any) {\r\n    console.log(item);\r\n  \r\n  }\r\n  onSelectAll(items: any) {\r\n    console.log(items);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/pages/systemadmin/systemconfiguration/resettodefault.component.ts","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({ name: 'searchData', pure: false })\r\n\r\nexport class SearchPipe implements PipeTransform {\r\n  transform(data, query: string): any {\r\n    if (data) {\r\n      if (query) {\r\n        return data.filter(item => {\r\n          const searchedQuery = query.replace(/[^A-Z0-9]/ig, '').toLowerCase();\r\n          const comId = (item.INITIAL) ? (item.INITIAL).replace(/[^A-Z0-9]/ig, '').toLowerCase() : '';\r\n          if (\r\n            comId.indexOf(searchedQuery) !== -1\r\n          ) {\r\n            return item;\r\n          }\r\n        });\r\n      \r\n      } else {\r\n        return data;\r\n      }\r\n    }\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/pages/systemadmin/systemconfiguration/search.pipe.ts","import { __decorate, __metadata } from 'tslib';\nimport { Pipe, forwardRef, EventEmitter, Input, Output, HostListener, Component, ChangeDetectionStrategy, Directive, ElementRef, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, FormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\n\nvar ListItem = /** @class */ (function () {\n    function ListItem(source) {\n        if (typeof source === 'string' || typeof source === 'number') {\n            this.id = this.text = source;\n            this.isDisabled = false;\n        }\n        if (typeof source === 'object') {\n            this.id = source.id;\n            this.text = source.text;\n            this.isDisabled = source.isDisabled;\n        }\n    }\n    return ListItem;\n}());\n\nvar ListFilterPipe = /** @class */ (function () {\n    function ListFilterPipe() {\n    }\n    ListFilterPipe.prototype.transform = function (items, filter) {\n        var _this = this;\n        if (!items || !filter) {\n            return items;\n        }\n        return items.filter(function (item) { return _this.applyFilter(item, filter); });\n    };\n    ListFilterPipe.prototype.applyFilter = function (item, filter) {\n        if (typeof item.text === 'string' && typeof filter.text === 'string') {\n            return !(filter.text && item.text && item.text.toLowerCase().indexOf(filter.text.toLowerCase()) === -1);\n        }\n        else {\n            return !(filter.text && item.text && item.text.toString().toLowerCase().indexOf(filter.text.toString().toLowerCase()) === -1);\n        }\n    };\n    ListFilterPipe = __decorate([\n        Pipe({\n            name: 'multiSelectFilter',\n            pure: false\n        })\n    ], ListFilterPipe);\n    return ListFilterPipe;\n}());\n\nvar DROPDOWN_CONTROL_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(function () { return MultiSelectComponent; }),\n    multi: true\n};\nvar noop = function () { };\nvar ɵ0 = noop;\nvar MultiSelectComponent = /** @class */ (function () {\n    function MultiSelectComponent(listFilterPipe) {\n        this.listFilterPipe = listFilterPipe;\n        this._data = [];\n        this.selectedItems = [];\n        this.isDropdownOpen = true;\n        this._placeholder = \"Select\";\n        this._sourceDataType = null; // to keep note of the source data type. could be array of string/number/object\n        this._sourceDataFields = []; // store source data fields names\n        this.filter = new ListItem(this.data);\n        this.defaultSettings = {\n            singleSelection: false,\n            idField: \"id\",\n            textField: \"text\",\n            disabledField: \"isDisabled\",\n            enableCheckAll: true,\n            selectAllText: \"Select All\",\n            unSelectAllText: \"UnSelect All\",\n            allowSearchFilter: false,\n            limitSelection: -1,\n            clearSearchFilter: true,\n            maxHeight: 197,\n            itemsShowLimit: 999999999999,\n            searchPlaceholderText: \"Search\",\n            noDataAvailablePlaceholderText: \"No data available\",\n            closeDropDownOnSelection: false,\n            showSelectedItemsAtTop: false,\n            defaultOpen: false,\n            allowRemoteDataSearch: false\n        };\n        this.disabled = false;\n        this.onFilterChange = new EventEmitter();\n        this.onDropDownClose = new EventEmitter();\n        this.onSelect = new EventEmitter();\n        this.onDeSelect = new EventEmitter();\n        this.onSelectAll = new EventEmitter();\n        this.onDeSelectAll = new EventEmitter();\n        this.onTouchedCallback = noop;\n        this.onChangeCallback = noop;\n    }\n    Object.defineProperty(MultiSelectComponent.prototype, \"placeholder\", {\n        set: function (value) {\n            if (value) {\n                this._placeholder = value;\n            }\n            else {\n                this._placeholder = \"Select\";\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MultiSelectComponent.prototype, \"settings\", {\n        set: function (value) {\n            if (value) {\n                this._settings = Object.assign(this.defaultSettings, value);\n            }\n            else {\n                this._settings = Object.assign(this.defaultSettings);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MultiSelectComponent.prototype, \"data\", {\n        set: function (value) {\n            var _this = this;\n            if (!value) {\n                this._data = [];\n            }\n            else {\n                var firstItem = value[0];\n                this._sourceDataType = typeof firstItem;\n                this._sourceDataFields = this.getFields(firstItem);\n                this._data = value.map(function (item) {\n                    return typeof item === \"string\" || typeof item === \"number\"\n                        ? new ListItem(item)\n                        : new ListItem({\n                            id: item[_this._settings.idField],\n                            text: item[_this._settings.textField],\n                            isDisabled: item[_this._settings.disabledField]\n                        });\n                });\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    MultiSelectComponent.prototype.onFilterTextChange = function ($event) {\n        this.onFilterChange.emit($event);\n    };\n    MultiSelectComponent.prototype.onItemClick = function ($event, item) {\n        if (this.disabled || item.isDisabled) {\n            return false;\n        }\n        var found = this.isSelected(item);\n        var allowAdd = this._settings.limitSelection === -1 || (this._settings.limitSelection > 0 && this.selectedItems.length < this._settings.limitSelection);\n        if (!found) {\n            if (allowAdd) {\n                this.addSelected(item);\n            }\n        }\n        else {\n            this.removeSelected(item);\n        }\n        if (this._settings.singleSelection && this._settings.closeDropDownOnSelection) {\n            this.closeDropdown();\n        }\n    };\n    MultiSelectComponent.prototype.writeValue = function (value) {\n        var _this = this;\n        if (value !== undefined && value !== null && value.length > 0) {\n            if (this._settings.singleSelection) {\n                try {\n                    if (value.length >= 1) {\n                        var firstItem = value[0];\n                        this.selectedItems = [\n                            typeof firstItem === \"string\" || typeof firstItem === \"number\"\n                                ? new ListItem(firstItem)\n                                : new ListItem({\n                                    id: firstItem[this._settings.idField],\n                                    text: firstItem[this._settings.textField],\n                                    isDisabled: firstItem[this._settings.disabledField]\n                                })\n                        ];\n                    }\n                }\n                catch (e) {\n                    // console.error(e.body.msg);\n                }\n            }\n            else {\n                var _data = value.map(function (item) {\n                    return typeof item === \"string\" || typeof item === \"number\"\n                        ? new ListItem(item)\n                        : new ListItem({\n                            id: item[_this._settings.idField],\n                            text: item[_this._settings.textField],\n                            isDisabled: item[_this._settings.disabledField]\n                        });\n                });\n                if (this._settings.limitSelection > 0) {\n                    this.selectedItems = _data.splice(0, this._settings.limitSelection);\n                }\n                else {\n                    this.selectedItems = _data;\n                }\n            }\n        }\n        else {\n            this.selectedItems = [];\n        }\n        this.onChangeCallback(value);\n    };\n    // From ControlValueAccessor interface\n    MultiSelectComponent.prototype.registerOnChange = function (fn) {\n        this.onChangeCallback = fn;\n    };\n    // From ControlValueAccessor interface\n    MultiSelectComponent.prototype.registerOnTouched = function (fn) {\n        this.onTouchedCallback = fn;\n    };\n    // Set touched on blur\n    MultiSelectComponent.prototype.onTouched = function () {\n        this.closeDropdown();\n        this.onTouchedCallback();\n    };\n    MultiSelectComponent.prototype.trackByFn = function (index, item) {\n        return item.id;\n    };\n    MultiSelectComponent.prototype.isSelected = function (clickedItem) {\n        var found = false;\n        this.selectedItems.forEach(function (item) {\n            if (clickedItem.id === item.id) {\n                found = true;\n            }\n        });\n        return found;\n    };\n    MultiSelectComponent.prototype.isLimitSelectionReached = function () {\n        return this._settings.limitSelection === this.selectedItems.length;\n    };\n    MultiSelectComponent.prototype.isAllItemsSelected = function () {\n        // get disabld item count\n        var filteredItems = this.listFilterPipe.transform(this._data, this.filter);\n        var itemDisabledCount = filteredItems.filter(function (item) { return item.isDisabled; }).length;\n        // take disabled items into consideration when checking\n        if ((!this.data || this.data.length === 0) && this._settings.allowRemoteDataSearch) {\n            return false;\n        }\n        return filteredItems.length === this.selectedItems.length + itemDisabledCount;\n    };\n    MultiSelectComponent.prototype.showButton = function () {\n        if (!this._settings.singleSelection) {\n            if (this._settings.limitSelection > 0) {\n                return false;\n            }\n            // this._settings.enableCheckAll = this._settings.limitSelection === -1 ? true : false;\n            return true; // !this._settings.singleSelection && this._settings.enableCheckAll && this._data.length > 0;\n        }\n        else {\n            // should be disabled in single selection mode\n            return false;\n        }\n    };\n    MultiSelectComponent.prototype.itemShowRemaining = function () {\n        return this.selectedItems.length - this._settings.itemsShowLimit;\n    };\n    MultiSelectComponent.prototype.addSelected = function (item) {\n        if (this._settings.singleSelection) {\n            this.selectedItems = [];\n            this.selectedItems.push(item);\n        }\n        else {\n            this.selectedItems.push(item);\n        }\n        this.onChangeCallback(this.emittedValue(this.selectedItems));\n        this.onSelect.emit(this.emittedValue(item));\n    };\n    MultiSelectComponent.prototype.removeSelected = function (itemSel) {\n        var _this = this;\n        this.selectedItems.forEach(function (item) {\n            if (itemSel.id === item.id) {\n                _this.selectedItems.splice(_this.selectedItems.indexOf(item), 1);\n            }\n        });\n        this.onChangeCallback(this.emittedValue(this.selectedItems));\n        this.onDeSelect.emit(this.emittedValue(itemSel));\n    };\n    MultiSelectComponent.prototype.emittedValue = function (val) {\n        var _this = this;\n        var selected = [];\n        if (Array.isArray(val)) {\n            val.map(function (item) {\n                selected.push(_this.objectify(item));\n            });\n        }\n        else {\n            if (val) {\n                return this.objectify(val);\n            }\n        }\n        return selected;\n    };\n    MultiSelectComponent.prototype.objectify = function (val) {\n        if (this._sourceDataType === 'object') {\n            var obj = {};\n            obj[this._settings.idField] = val.id;\n            obj[this._settings.textField] = val.text;\n            if (this._sourceDataFields.includes(this._settings.disabledField)) {\n                obj[this._settings.disabledField] = val.isDisabled;\n            }\n            return obj;\n        }\n        if (this._sourceDataType === 'number') {\n            return Number(val.id);\n        }\n        else {\n            return val.text;\n        }\n    };\n    MultiSelectComponent.prototype.toggleDropdown = function (evt) {\n        evt.preventDefault();\n        if (this.disabled && this._settings.singleSelection) {\n            return;\n        }\n        this._settings.defaultOpen = !this._settings.defaultOpen;\n        if (!this._settings.defaultOpen) {\n            this.onDropDownClose.emit();\n        }\n    };\n    MultiSelectComponent.prototype.closeDropdown = function () {\n        this._settings.defaultOpen = false;\n        // clear search text\n        if (this._settings.clearSearchFilter) {\n            this.filter.text = \"\";\n        }\n        this.onDropDownClose.emit();\n    };\n    MultiSelectComponent.prototype.toggleSelectAll = function () {\n        if (this.disabled) {\n            return false;\n        }\n        if (!this.isAllItemsSelected()) {\n            // filter out disabled item first before slicing\n            this.selectedItems = this.listFilterPipe.transform(this._data, this.filter).filter(function (item) { return !item.isDisabled; }).slice();\n            this.onSelectAll.emit(this.emittedValue(this.selectedItems));\n        }\n        else {\n            this.selectedItems = [];\n            this.onDeSelectAll.emit(this.emittedValue(this.selectedItems));\n        }\n        this.onChangeCallback(this.emittedValue(this.selectedItems));\n    };\n    MultiSelectComponent.prototype.getFields = function (inputData) {\n        var fields = [];\n        if (typeof inputData !== \"object\") {\n            return fields;\n        }\n        // tslint:disable-next-line:forin\n        for (var prop in inputData) {\n            fields.push(prop);\n        }\n        return fields;\n    };\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", String),\n        __metadata(\"design:paramtypes\", [String])\n    ], MultiSelectComponent.prototype, \"placeholder\", null);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], MultiSelectComponent.prototype, \"disabled\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object),\n        __metadata(\"design:paramtypes\", [Object])\n    ], MultiSelectComponent.prototype, \"settings\", null);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Array),\n        __metadata(\"design:paramtypes\", [Array])\n    ], MultiSelectComponent.prototype, \"data\", null);\n    __decorate([\n        Output(\"onFilterChange\"),\n        __metadata(\"design:type\", EventEmitter)\n    ], MultiSelectComponent.prototype, \"onFilterChange\", void 0);\n    __decorate([\n        Output(\"onDropDownClose\"),\n        __metadata(\"design:type\", EventEmitter)\n    ], MultiSelectComponent.prototype, \"onDropDownClose\", void 0);\n    __decorate([\n        Output(\"onSelect\"),\n        __metadata(\"design:type\", EventEmitter)\n    ], MultiSelectComponent.prototype, \"onSelect\", void 0);\n    __decorate([\n        Output(\"onDeSelect\"),\n        __metadata(\"design:type\", EventEmitter)\n    ], MultiSelectComponent.prototype, \"onDeSelect\", void 0);\n    __decorate([\n        Output(\"onSelectAll\"),\n        __metadata(\"design:type\", EventEmitter)\n    ], MultiSelectComponent.prototype, \"onSelectAll\", void 0);\n    __decorate([\n        Output(\"onDeSelectAll\"),\n        __metadata(\"design:type\", EventEmitter)\n    ], MultiSelectComponent.prototype, \"onDeSelectAll\", void 0);\n    __decorate([\n        HostListener(\"blur\"),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], MultiSelectComponent.prototype, \"onTouched\", null);\n    MultiSelectComponent = __decorate([\n        Component({\n            selector: \"ng-multiselect-dropdown\",\n            template: \"<div tabindex=\\\"0\\\" (blur)=\\\"onTouched()\\\" class=\\\"multiselect-dropdown\\\" (clickOutside)=\\\"closeDropdown()\\\">\\n  <div [class.disabled]=\\\"disabled\\\">\\n    <span tabindex=\\\"-1\\\" class=\\\"dropdown-btn\\\" (click)=\\\"toggleDropdown($event)\\\">\\n      <span *ngIf=\\\"selectedItems.length == 0\\\">{{_placeholder}}</span>\\n      <span class=\\\"selected-item\\\" *ngFor=\\\"let item of selectedItems;trackBy: trackByFn;let k = index\\\" [hidden]=\\\"k > _settings.itemsShowLimit-1\\\">\\n        {{item.text}}\\n        <a style=\\\"padding-top:2px;padding-left:2px;color:white\\\" (click)=\\\"onItemClick($event,item)\\\">x</a>\\n      </span>\\n      <span [ngClass]=\\\"{ 'dropdown-multiselect--active': _settings.defaultOpen }\\\" style=\\\"float:right !important;padding-right:4px\\\">\\n        <span style=\\\"padding-right: 6px;\\\" *ngIf=\\\"itemShowRemaining()>0\\\">+{{itemShowRemaining()}}</span>\\n        <span class=\\\"dropdown-multiselect__caret\\\"></span>\\n      </span>\\n    </span>\\n  </div>\\n  <div class=\\\"dropdown-list\\\" [hidden]=\\\"!_settings.defaultOpen\\\">\\n    <ul class=\\\"item1\\\">\\n      <li (click)=\\\"toggleSelectAll()\\\" *ngIf=\\\"(_data.length > 0 || _settings.allowRemoteDataSearch) && !_settings.singleSelection && _settings.enableCheckAll && _settings.limitSelection===-1\\\" class=\\\"multiselect-item-checkbox\\\" style=\\\"border-bottom: 1px solid #ccc;padding:10px\\\">\\n        <input type=\\\"checkbox\\\" aria-label=\\\"multiselect-select-all\\\" [checked]=\\\"isAllItemsSelected()\\\" [disabled]=\\\"disabled || isLimitSelectionReached()\\\" />\\n        <div>{{!isAllItemsSelected() ? _settings.selectAllText : _settings.unSelectAllText}}</div>\\n      </li>\\n      <li class=\\\"filter-textbox\\\" *ngIf=\\\"(_data.length>0 || _settings.allowRemoteDataSearch) && _settings.allowSearchFilter\\\">\\n        <input type=\\\"text\\\" aria-label=\\\"multiselect-search\\\" [readOnly]=\\\"disabled\\\" [placeholder]=\\\"_settings.searchPlaceholderText\\\" [(ngModel)]=\\\"filter.text\\\" (ngModelChange)=\\\"onFilterTextChange($event)\\\">\\n      </li>\\n    </ul>\\n    <ul class=\\\"item2\\\" [style.maxHeight]=\\\"_settings.maxHeight+'px'\\\">\\n      <li *ngFor=\\\"let item of _data | multiSelectFilter:filter; let i = index;\\\" (click)=\\\"onItemClick($event,item)\\\" class=\\\"multiselect-item-checkbox\\\">\\n        <input type=\\\"checkbox\\\" [attr.aria-label]=\\\"item.text\\\" [checked]=\\\"isSelected(item)\\\" [disabled]=\\\"disabled || (isLimitSelectionReached() && !isSelected(item)) || item.isDisabled\\\" />\\n        <div>{{item.text}}</div>\\n      </li>\\n      <li class='no-data' *ngIf=\\\"_data.length == 0 && !_settings.allowRemoteDataSearch\\\">\\n        <h5>{{_settings.noDataAvailablePlaceholderText}}</h5>\\n      </li>\\n    </ul>\\n  </div>\\n</div>\\n\",\n            providers: [DROPDOWN_CONTROL_VALUE_ACCESSOR],\n            changeDetection: ChangeDetectionStrategy.OnPush,\n            styles: [\".multiselect-dropdown{position:relative;width:100%;font-size:inherit;font-family:inherit}.multiselect-dropdown .dropdown-btn{display:inline-block;border:1px solid #adadad;width:100%;padding:6px 12px;margin-bottom:0;font-weight:400;line-height:1.52857143;text-align:left;vertical-align:middle;cursor:pointer;background-image:none;border-radius:4px}.multiselect-dropdown .dropdown-btn .selected-item{border:1px solid #337ab7;margin-right:4px;background:#337ab7;padding:0 5px;color:#fff;border-radius:2px;float:left}.multiselect-dropdown .dropdown-btn .selected-item a{text-decoration:none}.multiselect-dropdown .dropdown-btn .selected-item:hover{box-shadow:1px 1px #959595}.multiselect-dropdown .dropdown-btn .dropdown-multiselect__caret{line-height:16px;display:block;position:absolute;box-sizing:border-box;width:40px;height:38px;right:1px;top:0;padding:4px 8px;margin:0;text-decoration:none;text-align:center;cursor:pointer;transition:transform .2s}.multiselect-dropdown .dropdown-btn .dropdown-multiselect__caret:before{position:relative;right:0;top:65%;color:#999;margin-top:4px;border-style:solid;border-width:8px 8px 0;border-color:#999 transparent;content:\\\"\\\"}.multiselect-dropdown .dropdown-btn .dropdown-multiselect--active .dropdown-multiselect__caret{transform:rotateZ(180deg)}.multiselect-dropdown .disabled>span{background-color:#eceeef}.dropdown-list{position:absolute;padding-top:6px;width:100%;z-index:9999;border:1px solid #ccc;border-radius:3px;background:#fff;margin-top:10px;box-shadow:0 1px 5px #959595}.dropdown-list ul{padding:0;list-style:none;overflow:auto;margin:0}.dropdown-list li{padding:6px 10px;cursor:pointer;text-align:left}.dropdown-list .filter-textbox{border-bottom:1px solid #ccc;position:relative;padding:10px}.dropdown-list .filter-textbox input{border:0;width:100%;padding:0 0 0 26px}.dropdown-list .filter-textbox input:focus{outline:0}.multiselect-item-checkbox:hover{background-color:#e4e3e3}.multiselect-item-checkbox input[type=checkbox]{border:0;clip:rect(0 0 0 0);height:1px;margin:-1px;overflow:hidden;padding:0;position:absolute;width:1px}.multiselect-item-checkbox input[type=checkbox]:focus+div:before,.multiselect-item-checkbox input[type=checkbox]:hover+div:before{border-color:#337ab7;background-color:#f2f2f2}.multiselect-item-checkbox input[type=checkbox]:active+div:before{transition-duration:0s}.multiselect-item-checkbox input[type=checkbox]+div{position:relative;padding-left:2em;vertical-align:middle;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;margin:0;color:#000}.multiselect-item-checkbox input[type=checkbox]+div:before{box-sizing:content-box;content:\\\"\\\";color:#337ab7;position:absolute;top:50%;left:0;width:14px;height:14px;margin-top:-9px;border:2px solid #337ab7;text-align:center;transition:.4s}.multiselect-item-checkbox input[type=checkbox]+div:after{box-sizing:content-box;content:\\\"\\\";position:absolute;transform:scale(0);transform-origin:50%;transition:transform .2s ease-out;background-color:transparent;top:50%;left:4px;width:8px;height:3px;margin-top:-4px;border-style:solid;border-color:#fff;border-width:0 0 3px 3px;-o-border-image:none;border-image:none;transform:rotate(-45deg) scale(0)}.multiselect-item-checkbox input[type=checkbox]:disabled+div:before{border-color:#ccc}.multiselect-item-checkbox input[type=checkbox]:disabled:focus+div:before .multiselect-item-checkbox input[type=checkbox]:disabled:hover+div:before{background-color:inherit}.multiselect-item-checkbox input[type=checkbox]:disabled:checked+div:before{background-color:#ccc}.multiselect-item-checkbox input[type=checkbox]:checked+div:after{content:\\\"\\\";transition:transform .2s ease-out;transform:rotate(-45deg) scale(1)}.multiselect-item-checkbox input[type=checkbox]:checked+div:before{-webkit-animation:.2s ease-in borderscale;animation:.2s ease-in borderscale;background:#337ab7}@-webkit-keyframes borderscale{50%{box-shadow:0 0 0 2px #337ab7}}@keyframes borderscale{50%{box-shadow:0 0 0 2px #337ab7}}\"]\n        }),\n        __metadata(\"design:paramtypes\", [ListFilterPipe])\n    ], MultiSelectComponent);\n    return MultiSelectComponent;\n}());\n\nvar ClickOutsideDirective = /** @class */ (function () {\n    function ClickOutsideDirective(_elementRef) {\n        this._elementRef = _elementRef;\n        this.clickOutside = new EventEmitter();\n    }\n    ClickOutsideDirective.prototype.onClick = function (event, targetElement) {\n        if (!targetElement) {\n            return;\n        }\n        var clickedInside = this._elementRef.nativeElement.contains(targetElement);\n        if (!clickedInside) {\n            this.clickOutside.emit(event);\n        }\n    };\n    __decorate([\n        Output(),\n        __metadata(\"design:type\", Object)\n    ], ClickOutsideDirective.prototype, \"clickOutside\", void 0);\n    __decorate([\n        HostListener('document:click', ['$event', '$event.target']),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [MouseEvent, HTMLElement]),\n        __metadata(\"design:returntype\", void 0)\n    ], ClickOutsideDirective.prototype, \"onClick\", null);\n    ClickOutsideDirective = __decorate([\n        Directive({\n            selector: '[clickOutside]'\n        }),\n        __metadata(\"design:paramtypes\", [ElementRef])\n    ], ClickOutsideDirective);\n    return ClickOutsideDirective;\n}());\n\nvar NgMultiSelectDropDownModule = /** @class */ (function () {\n    function NgMultiSelectDropDownModule() {\n    }\n    NgMultiSelectDropDownModule_1 = NgMultiSelectDropDownModule;\n    NgMultiSelectDropDownModule.forRoot = function () {\n        return {\n            ngModule: NgMultiSelectDropDownModule_1\n        };\n    };\n    var NgMultiSelectDropDownModule_1;\n    NgMultiSelectDropDownModule = NgMultiSelectDropDownModule_1 = __decorate([\n        NgModule({\n            imports: [CommonModule, FormsModule],\n            declarations: [MultiSelectComponent, ClickOutsideDirective, ListFilterPipe],\n            providers: [ListFilterPipe],\n            exports: [MultiSelectComponent]\n        })\n    ], NgMultiSelectDropDownModule);\n    return NgMultiSelectDropDownModule;\n}());\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MultiSelectComponent, NgMultiSelectDropDownModule, DROPDOWN_CONTROL_VALUE_ACCESSOR as ɵa, ListFilterPipe as ɵb, ClickOutsideDirective as ɵc };\n//# sourceMappingURL=ng-multiselect-dropdown.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ng-multiselect-dropdown/fesm5/ng-multiselect-dropdown.js\n// module id = 1688\n// module chunks = 8","module.exports = \"<div class=\\\"sticky-top\\\">\\r\\n  <div class=\\\"header\\\">\\r\\n    <h1>Division Master</h1>\\r\\n    <button class=\\\"btn btn-info pull-right\\\" style=\\\"margin-bottom: 10px; margin-left: 77rem;\\\" [disabled]=\\\"!form.valid || mode=='view'\\\" (click)=\\\"toggleOtpPopup()\\\">Save</button>\\r\\n    <button class=\\\"btn btn-info pull-right\\\" style=\\\"margin-bottom: 10px; margin-left: 10px;\\\" (click)=\\\"goback()\\\">Back</button>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<form [formGroup]=\\\"form\\\"> \\r\\n<div class=\\\"row\\\" style=\\\"align-items: center; margin-top: 50px;\\\">\\r\\n  <div class=\\\"col-md-12 col-sm-8\\\">\\r\\n    <div class=\\\"card\\\" style=\\\"margin: auto; width: 60rem;\\\">\\r\\n      <div class=\\\"card-header\\\" style=\\\"background: #e1e1e1; \\\">\\r\\n        <span class=\\\"col-md-8\\\">{{modeTitle}}</span>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"card-body\\\">\\r\\n        <div class=\\\"content\\\" style=\\\"margin-top: 0.5rem; padding: 2px;\\\">\\r\\n          <!-- Form Controls -->\\r\\n          <div class=\\\"form-group row\\\">\\r\\n            <label class=\\\"col-sm-3 form-control-label\\\">Initial:</label>\\r\\n            <div class=\\\"col-sm-7\\\">\\r\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"INITIAL\\\">\\r\\n              <div class=\\\"alert alert-danger\\\" *ngIf=\\\"form.controls['INITIAL'].touched && !form.controls['INITIAL'].valid\\\">Initial must be of 3 characters.</div>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"form-group row\\\">\\r\\n            <label class=\\\"col-sm-3 form-control-label\\\">Name:</label>\\r\\n            <div class=\\\"col-sm-7\\\">\\r\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"NAME\\\">\\r\\n              <div class=\\\"alert alert-danger\\\" *ngIf=\\\"form.controls['NAME'].touched && !form.controls['NAME'].valid\\\">Name is Required.</div>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"form-group row\\\">\\r\\n            <label class=\\\"col-sm-3 form-control-label\\\">Address:</label>\\r\\n            <div class=\\\"col-sm-7\\\">\\r\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"ADDRESS2\\\">\\r\\n              <div class=\\\"alert alert-danger\\\" *ngIf=\\\"form.controls['ADDRESS2'].touched && !form.controls['ADDRESS2'].valid\\\">Address is Required.</div>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"form-group row\\\">\\r\\n            <label class=\\\"col-sm-3 form-control-label\\\">Remarks:</label>\\r\\n            <div class=\\\"col-sm-7\\\">\\r\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"REMARKS\\\">\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"form-group row\\\">\\r\\n            <label class=\\\"col-sm-3 form-control-label\\\">Branch Account:</label>\\r\\n            <div class=\\\"col-sm-7\\\">\\r\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Press Enter to select...\\\" (keydown.enter)=\\\"BranchListPopup()\\\" formControlName=\\\"ACNAME\\\">\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <!-- Additional Form Controls -->\\r\\n          <div class=\\\"form-group row\\\">\\r\\n            <label class=\\\"col-sm-3 form-control-label\\\">Rate Group:</label>\\r\\n            <div class=\\\"col-sm-7\\\">\\r\\n              <select class=\\\"form-control\\\" formControlName=\\\"RateGroupID\\\">\\r\\n                <option></option>\\r\\n                <option *ngFor=\\\"let rate of this.rategrp\\\" [value]=\\\"rate.RateGroup_ID\\\">{{rate.RateGroup_Name}}</option>\\r\\n              </select>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"form-group row\\\">\\r\\n            <label class=\\\"col-sm-3 form-control-label\\\">Cost Center:</label>\\r\\n            <div class=\\\"col-sm-7\\\">\\r\\n              <select class=\\\"form-control\\\" formControlName=\\\"COSTCENTER\\\">\\r\\n                <option></option>\\r\\n                <option *ngFor=\\\"let cost of this.costCenters\\\">{{cost.COSTCENTERNAME}}</option>\\r\\n              </select>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"form-group row\\\">\\r\\n            <label class=\\\"col-sm-3 form-control-label\\\">Priority:</label>\\r\\n            <div class=\\\"col-sm-7\\\">\\r\\n              <select class=\\\"form-control\\\" formControlName=\\\"Priority\\\">\\r\\n                <option *ngFor=\\\"let priority of priorities\\\" [value]=\\\"priority\\\">{{priority}}</option>\\r\\n              </select>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"form-group row\\\">\\r\\n            <label class=\\\"col-sm-3 form-control-label\\\">Location Category:</label>\\r\\n            <div class=\\\"col-sm-7\\\">\\r\\n              <select class=\\\"form-control\\\" formControlName=\\\"LocationCategory\\\">\\r\\n                <option *ngFor=\\\"let location of locationCategories\\\" [value]=\\\"location.location_id\\\">{{location.locationName}}</option>\\r\\n              </select>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"form-group row\\\">\\r\\n            <label class=\\\"col-sm-3 form-control-label\\\">Cash Account:</label>\\r\\n            <div class=\\\"col-sm-7\\\">\\r\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Press Enter or Tab to select...\\\" (keydown.enter)=\\\"CashListPopup()\\\" (keydown.Tab)=\\\"CashListPopup()\\\" formControlName=\\\"CASH_AC_NAME\\\">\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n</form>\\r\\n\\r\\n<generic-popup-grid #genericGridBranchAccList [popupsettings]=\\\"gridBranchAccListPopupSettings\\\" (onItemDoubleClick)=\\\"onBranchAccSelect($event)\\\"></generic-popup-grid>\\r\\n<generic-popup-grid #genericGridCashAccList [popupsettings]=\\\"gridCashAccListPopupSettings\\\" (onItemDoubleClick)=\\\"onCashAccSelect($event)\\\"></generic-popup-grid>\\r\\n\\r\\n<otpAuth (hideOtp)=\\\"hideOtpPopup($event)\\\"  #OTPpopUp></otpAuth>\\r\\n\\r\\n  <style>\\r\\n     .header {\\r\\n    display: flex;\\r\\n    /* padding: 10px; */\\r\\n  }\\r\\n  \\r\\n  .header h1 {\\r\\n    margin: 0;\\r\\n    font-size: medium;\\r\\n    font-weight: bold;\\r\\n  }\\r\\n .card{\\r\\n    height: 600px;\\r\\n   \\r\\n }\\r\\n  .form-group  label{\\r\\n    font-size: 14px;\\r\\n    font-weight: 560;\\r\\n  }\\r\\n  .form-control{\\r\\n    font-size: 14px;\\r\\n  }\\r\\n  span{\\r\\n    font-weight: bold;\\r\\n  }\\r\\n  button{\\r\\n    font-size: 12px;\\r\\n    border-radius: 0;\\r\\n    text-align: center;\\r\\n}\\r\\n  </style>\\r\\n  \\r\\n  \\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/systemadmin/systemconfiguration/adddivision.component.html\n// module id = 1872\n// module chunks = 8","module.exports = \"<div class=\\\"sticky-top \\\">\\r\\n  <div class=\\\"row col-md-12 header-buttons\\\">\\r\\n  <div class=\\\"col-md-4\\\">\\r\\n      <h5 style=\\\"font-weight: bold;\\\" >Division Master</h5>\\r\\n  </div>\\r\\n  <div class=\\\"col-md-8\\\">\\r\\n    <button class=\\\"btn btn-info pull-right\\\" style=\\\"font-size: 12px; margin-left: 2px;\\\" (click)=\\\"goback()\\\"> Back</button>\\r\\n    <button class=\\\"btn btn-info pull-right\\\" style=\\\"font-size: 12px;margin-left: 2px;\\\" (click)=\\\"addDivi()\\\">Add Division</button>\\r\\n  </div>\\r\\n</div>\\r\\n</div> \\r\\n\\r\\n<div class=\\\"row\\\" style=\\\"align-items: center;margin-top: 50px;\\\">\\r\\n  <div class=\\\"col-md-12 col-sm-8\\\" >\\r\\n    <div class=\\\"card\\\" style=\\\"margin: auto; width: 85rem;\\\">\\r\\n      <div class=\\\"card-header\\\" style=\\\"  background: #e1e1e1;\\\">\\r\\n        <span class=\\\"col-md-8\\\" >Division  Lists</span>\\r\\n        <div style=\\\"margin-left: 57rem; margin-top: -6px;\\\">\\r\\n          <input type=\\\"text\\\" name=\\\"search\\\"  class=\\\"form-control\\\" placeholder=\\\"Search by Initial...\\\" style=\\\"width: 25rem; height: 1.7rem; padding: 0px 6px;\\\" [(ngModel)]=\\\"searchedTerm\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"card-body\\\">\\r\\n        <table class=\\\"table table-striped\\\">\\r\\n          <thead style=\\\"   background: #FFF; border-bottom: 1px #e1e1e1 solid; text-align: left;\\\">\\r\\n              <tr style=\\\"position: sticky; top:0;line-height: 1rem; \\\">\\r\\n                <th scope=\\\"col\\\" style=\\\"width:3%; font-weight: bold;\\\">S.N</th>\\r\\n                <th scope=\\\"col\\\" style=\\\"width:4%; font-weight: bold;\\\">Initial</th>\\r\\n                <th scope=\\\"col\\\" style=\\\"width:15%; font-weight: bold;\\\">Name</th>\\r\\n                <th scope=\\\"col\\\" style=\\\"width:8%; font-weight: bold;\\\">Address</th>\\r\\n                <th scope=\\\"col\\\" style=\\\"width:10%; font-weight: bold;\\\">Remarks</th>\\r\\n                <th scope=\\\"col\\\" style=\\\"width:15%; font-weight: bold;\\\">Branch Account</th>\\r\\n                <th scope=\\\"col\\\" style=\\\"width:15%; font-weight: bold;\\\">Rate Group List</th>\\r\\n                <th scope=\\\"col\\\" style=\\\"width:10%; font-weight: bold;\\\">Cost Center</th>\\r\\n                <th scope=\\\"col\\\" style=\\\"width:25%; font-weight: bold; text-align: center; \\\">Action</th>\\r\\n              </tr>\\r\\n          </thead>\\r\\n          <tbody>\\r\\n            <ng-container *ngIf=\\\"this.divisionList && this.divisionList.length > 0\\\">\\r\\n              <tr *ngFor=\\\"let division of (this.divisionList| searchData: searchedTerm); let i=index\\\">\\r\\n                <td style=\\\"width:3%;\\\">{{i+1}}</td>\\r\\n                <td style=\\\"width:4%;\\\">{{division.INITIAL}}</td>\\r\\n                <td style=\\\"width:15%;\\\">{{division.NAME}}</td>\\r\\n                <td style=\\\"width:7%;\\\">{{division.ADDRESS2}} </td>\\r\\n                <td style=\\\"width:9%;\\\">{{division.REMARKS}}</td>\\r\\n                <td style=\\\"width:15%;\\\">{{division.ACNAME}}</td>\\r\\n                <td style=\\\"width:15%;\\\">{{division.RateGroup_Name}}</td>\\r\\n                <td style=\\\"width:10%;\\\">{{division.COSTCENTER}}</td>\\r\\n                <td style=\\\"width:25%;text-align: center; display: flex;\\\">\\r\\n                  <button style=\\\"width: 50px;margin:5px ; padding: 1px 10px 1px 10px;\\\" type=\\\"button\\\" class=\\\"btn btn-sm btn-info mr-1 btn-sm\\\" data-toggle=\\\"modal\\\" (click)=\\\"onView(division)\\\">View</button>\\r\\n                  <button style=\\\"width: 50px; margin: 5px; padding: 1px 10px 1px 10px;\\\" type=\\\"button\\\" class=\\\"btn btn-sm btn-info mr-1 btn-sm\\\" data-toggle=\\\"modal\\\" (click)=\\\"onEdit(division)\\\">Edit</button>\\r\\n                  <button style=\\\"width: 50px;margin: 5px; padding: 1px 10px 1px 10px;\\\" type=\\\"button\\\" class=\\\"btn btn-sm btn-info mr-1 btn-sm\\\" data-toggle=\\\"modal\\\" (click)=\\\"onDelete(division)\\\">Delete</button>\\r\\n                </td>\\r\\n                </tr>\\r\\n            </ng-container>\\r\\n            <ng-container *ngIf=\\\"this.divisionList && (this.divisionList|searchData:searchedTerm).length === 0\\\">\\r\\n              <tr>\\r\\n                <td colspan=\\\"4\\\">\\r\\n                  <div class=\\\"font-weight-bold\\\">Division Information are unavailable.</div>\\r\\n                </td>\\r\\n              </tr>\\r\\n          </ng-container>\\r\\n          </tbody>\\r\\n      </table>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<style>\\r\\n  .header {\\r\\n    display: flex;\\r\\n    padding: 10px;\\r\\n  }\\r\\n  \\r\\n  .header h1 {\\r\\n    margin: 0;\\r\\n    font-size: medium;\\r\\n    font-weight: bold;\\r\\n  }\\r\\n  .card{\\r\\n    max-height: 520px;\\r\\n    overflow: hidden;\\r\\n  }\\r\\n\\r\\n  tbody {\\r\\n    display:block;\\r\\n    height: 400px;\\r\\n    overflow:auto;\\r\\n}\\r\\n\\r\\nthead, tbody tr {\\r\\n  display:table;\\r\\n  width:100%;\\r\\n  table-layout:fixed;\\r\\n}\\r\\n\\r\\nth{\\r\\n  font-size: 14px;\\r\\n  font-weight: bold;\\r\\n}\\r\\n\\r\\ntd{\\r\\n  font-size: 12px;\\r\\n}\\r\\n\\r\\n  table button{\\r\\n    height: 25px;\\r\\n    text-align: center;\\r\\n    font-size: 12px;\\r\\n    width: 60px;\\r\\n    margin: 5px; \\r\\n  }\\r\\n  \\r\\n  button{\\r\\n    font-size: 12px;\\r\\n    border-radius: 0;\\r\\n}\\r\\n  </style>\\r\\n\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/systemadmin/systemconfiguration/divisionmaster.component.html\n// module id = 1873\n// module chunks = 8","module.exports = \"<div class=\\\"card\\\" *ngIf=\\\"isOtpVisible\\\" >\\r\\n  <div class=\\\"content\\\">\\r\\n    <div class=\\\"otp-header\\\" style=\\\"background-color: #93acba; padding: 10px;\\\">\\r\\n      <h5 >OTP Authorization</h5>\\r\\n  </div>\\r\\n  <div class=\\\"mid\\\" style=\\\"padding: 10px;\\\">\\r\\n      <p>OTP Authorization is required to perform selected Action. Please enter OTP Pin to continue.</p>\\r\\n      <div class=\\\"otp-pin\\\" style=\\\"display: flex;\\\">\\r\\n        <label > OTP Pin:</label>\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" style=\\\"width: 300px; height: 25px; margin-left: 30px;\\\" [(ngModel)]=\\\"authOTP\\\">\\r\\n      </div>\\r\\n      </div>\\r\\n      <div style=\\\"display: flex; justify-content: center; padding: 12px; margin-top: 10px; border-radius: 2px;\\\">\\r\\n        <button class=\\\"btn btn-info \\\" style=\\\"margin-right: 5px; width: 75px; font-size: 12px;\\\" (click)=\\\"onSubmit()\\\">SUBMIT</button>\\r\\n        <button class=\\\"btn btn-info \\\" style=\\\"margin-right: 2px; width: 75px; font-size: 12px;\\\" (click)=\\\"closeOtp(null)\\\">CANCEL</button>\\r\\n  </div>\\r\\n  </div>\\r\\n \\r\\n</div>\\r\\n     \\r\\n<style>\\r\\n.card{\\r\\n  display: block; \\r\\n  position: fixed;\\r\\n  top: 45%;\\r\\n  left: 50%;\\r\\n  transform: translate(-50%, -50%);\\r\\n  z-index: 1050;\\r\\n  background-color: white;\\r\\n  border: 1px solid #22638f;\\r\\n  width: 500px;\\r\\n  height: 230px;\\r\\n  font-weight: bold;\\r\\n}\\r\\n\\r\\n.content{\\r\\n  position: absolute;\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\n</style>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/systemadmin/systemconfiguration/otpAuth.component.html\n// module id = 1874\n// module chunks = 8","module.exports = \"<div class=\\\"main-container\\\" style=\\\"margin-bottom: 0px\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-12\\\">\\r\\n          <div class=\\\"col-md-10\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                  <label class=\\\"col-md-4 from-control-label\\\">Select a Voucher type</label>\\r\\n                  <div class=\\\"col-md-6\\\">\\r\\n                    <select  style=\\\"width: 86%; font-size: 12px;\\\" [(ngModel)]=\\\"selectedVoucherType\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n                        <option></option>\\r\\n                        <option *ngFor=\\\"let voucher of vouchertype\\\" [value]=\\\"voucher.VOUCHER_ID\\\">{{voucher.VOUCHER_NAME}}</option>\\r\\n                      </select>\\r\\n                  </div>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"form-group row\\\">\\r\\n                  <label class=\\\"col-md-4 from-control-label\\\">Choose a Path</label>\\r\\n                  <div class=\\\"row\\\">\\r\\n                      <div class=\\\"col-md-6\\\">\\r\\n                          <input type=\\\"file\\\" class=\\\"form-control\\\" style=\\\"height: 35px;width: 91.5%; font-size: 14px;\\\" (change)=\\\"onFileChange($event)\\\">\\r\\n                      </div>\\r\\n                      <div class=\\\"col-md-7\\\">\\r\\n                          <div class=\\\"form-check\\\">\\r\\n                              <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" data-toggle=\\\"modal\\\" #modalcheckbox (change)=\\\"toggleModal($event)\\\" style=\\\"width: 17px; height: 17px;\\\">\\r\\n                              <label class=\\\"form-check-label\\\" for=\\\"gridCheck\\\" style=\\\"padding-top: 5px;\\\">\\r\\n                                  Show All Print File Name\\r\\n                              </label>\\r\\n                          </div>\\r\\n                      </div>\\r\\n                  </div>\\r\\n              </div>\\r\\n\\r\\n              <button type=\\\"button\\\" class=\\\"btn btn-info pull-left\\\" style=\\\"margin-left: 10px;\\\" (click)=\\\"downloadDefaultFile()\\\">\\r\\n                  Download Default Print File\\r\\n              </button>\\r\\n              <button type=\\\"button\\\" class=\\\"btn btn-info pull-left\\\" style=\\\"margin-left: 10px;\\\" (click)=\\\"toggleOtpPopup('UPLOAD')\\\">\\r\\n                  Upload Print File\\r\\n              </button>\\r\\n              <button class=\\\"btn btn-info pull-left\\\" style=\\\"margin-left: 10px;\\\" (click)=\\\"toggleOtpPopup('RESETTODEFAULT')\\\">\\r\\n                  Reset To Default\\r\\n              </button>\\r\\n              <button class=\\\"btn btn-info pull-left\\\" style=\\\"margin-left: 10px;\\\" (click)=\\\"goback()\\\">\\r\\n                  Back\\r\\n              </button>\\r\\n          </div>\\r\\n      </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"modal-sticky\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-hidden=\\\"true\\\" *ngIf=\\\"isModalVisible\\\">\\r\\n  <div class=\\\"modal-content\\\">\\r\\n      <table class=\\\"table table-sm\\\">\\r\\n          <thead>\\r\\n              <tr style=\\\"position: sticky; top: 0; line-height: 1rem; background-color: #7c9eb0; color: #ffffff; padding: 10px;\\\">\\r\\n                  <th style=\\\"width: 30%; font-weight: bold; text-align: left;\\\">Voucher Name</th>\\r\\n                  <th style=\\\"width: 60%; font-weight: bold; text-align: left;\\\">Print File Name</th>\\r\\n                  <th>\\r\\n                      <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\r\\n                          <span aria-hidden=\\\"true\\\" (click)=\\\"hideModal()\\\">&times;</span>\\r\\n                      </button>\\r\\n                  </th>\\r\\n              </tr>\\r\\n          </thead>\\r\\n          <tbody style=\\\"cursor: pointer;padding: 5px; font-size: 12px;\\\">\\r\\n            <tr *ngFor=\\\"let name of fileName\\\">\\r\\n                <td style=\\\"width: 50%;\\\">{{name.VoucherName}}</td>\\r\\n                <td style=\\\"width: 50%;\\\">{{name.FileName}}</td>\\r\\n              </tr>      \\r\\n          </tbody>\\r\\n      </table>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<otpAuth (hideOtp)=\\\"hideOtpPopup($event)\\\"  #OTPpopUp></otpAuth>\\r\\n\\r\\n \\r\\n  <style>\\r\\n    .form-group{\\r\\n        display:flex;\\r\\n        flex-direction:column;\\r\\n    }\\r\\n    .main-container{\\r\\n        justify-content: space-between;\\r\\n    }\\r\\n    .checkbox-group{\\r\\n      direction: flex;\\r\\n      align-items: center;\\r\\n    }\\r\\n    select{\\r\\n      height: 33px;\\r\\n      border: 1px solid #d6d6d6;\\r\\n      border-radius: 5px;\\r\\n    }\\r\\n    .row{\\r\\n      display: flex;\\r\\n      margin-left: 1px;\\r\\n    }\\r\\n    .modal-content {\\r\\n    position: relative;\\r\\n    width: 100%;\\r\\n    z-index: 1051;\\r\\n    max-height: 500px;\\r\\n    overflow: auto;\\r\\n  }\\r\\n\\r\\n  .modal-sticky {\\r\\n    display: block;\\r\\n    position: fixed;\\r\\n    top: 45%;\\r\\n    left: 54%;\\r\\n    transform: translate(-50%, -50%);\\r\\n    z-index: 1050;\\r\\n    background-color: white;\\r\\n    border: 1px solid #ccc;\\r\\n    box-shadow: 0 5px 15px rgba(154, 154, 154, 0.5);\\r\\n    height: 400px;\\r\\n    width: 50%;\\r\\n  }\\r\\n  .table tbody td {\\r\\n    text-align: left;\\r\\n  }\\r\\n\\r\\n</style>\\r\\n\\r\\n\\r\\n  \"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/systemadmin/systemconfiguration/printfilesetup.component.html\n// module id = 1875\n// module chunks = 8","module.exports = \"<style>\\r\\n button {\\r\\n  background-color: #009688;\\r\\n  color: white;\\r\\n  border: none;\\r\\n  padding: 10px;\\r\\n  cursor: pointer;\\r\\n  border-radius: 5px;\\r\\n  margin-left: 30px;\\r\\n  font-size: small;\\r\\n}\\r\\n.resetdefault{\\r\\n  display: inline-flex;\\r\\n  margin-left: 50px;\\r\\n  margin-top: 15px;\\r\\n}\\r\\n.multi{\\r\\n  width: 550px;\\r\\n}\\r\\n</style>\\r\\n\\r\\n<div class=\\\"resetdefault\\\">\\r\\n\\r\\n<div class=\\\"multi\\\">\\r\\n  <ng-multiselect-dropdown\\r\\n[placeholder]=\\\"'Select for Reset'\\\"\\r\\n[settings]=\\\"dropdownSettings\\\"\\r\\n[data]=\\\"dropdownList\\\"\\r\\n[(ngModel)]=\\\"selectedItems\\\"\\r\\n(onSelect)=\\\"onItemSelect($event)\\\"\\r\\n(onSelectAll)=\\\"onSelectAll($event)\\\"\\r\\n>\\r\\n</ng-multiselect-dropdown>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"reset-button\\\">\\r\\n<button (click)=\\\"toggleOtpPopup()\\\">Reset To Default</button>\\r\\n\\r\\n</div>\\r\\n</div> \\r\\n\\r\\n\\r\\n<otpAuth (hideOtp)=\\\"hideOtpPopup($event)\\\"  #OTPpopUp></otpAuth>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/systemadmin/systemconfiguration/resettodefault.component.html\n// module id = 1876\n// module chunks = 8","module.exports = \"<div class=\\\"sticky-top\\\">\\r\\n  <div class=\\\"col-md-8 col-5\\\">\\r\\n    <h5>{{modeTitle}}</h5>\\r\\n  </div>\\r\\n  <div class=\\\"col-md-4 col-7 pull-right\\\">\\r\\n    <div class=\\\"pull-right mx-2\\\" style=\\\"width: 100%\\\">\\r\\n      <div class=\\\"mx-2\\\" style=\\\" width: 100%\\\">\\r\\n        <div class=\\\"pull-right mx-2\\\" class=\\\"top-bar\\\">\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-info btn-sm all_setting\\\" (click)=\\\"allSetting()\\\">ALL SETTING</button>\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-info btn-sm category_setting\\\" (click)=\\\"categoryWiseSetting()\\\">CATEGORY WISE SETTING</button>\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-info btn-sm\\\" (click)=\\\"cancel()\\\">BACK</button>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<div class=\\\"sidebar mx-auto\\\">\\r\\n  <div class=\\\"sidebar-list\\\" *ngIf=\\\"this.showCategoryWiseSetting\\\">\\r\\n    <!-- first column -->\\r\\n    <div class=\\\"setting-category\\\">\\r\\n      <table class=\\\"table table-bordered table-sm\\\">\\r\\n        <thead>\\r\\n          <tr>\\r\\n            <th scope=\\\"col\\\">Setting Category</th>\\r\\n          </tr>\\r\\n        </thead>\\r\\n        <tbody>\\r\\n          <tr *ngFor='let catList of this.categoryName'>\\r\\n            <td (click)=\\\"categoryClick(catList)\\\" class=\\\"category-list {{ getActiveCat(catList) }}\\\">\\r\\n              {{catList}}</td>\\r\\n          </tr>\\r\\n        </tbody>\\r\\n      </table>\\r\\n    </div>\\r\\n    <!-- second column -->\\r\\n    <div class=\\\"setting-list\\\">\\r\\n      <div *ngIf=\\\"isActiveSettingList\\\" class=\\\"setting-list-2\\\">\\r\\n        <table class=\\\"table table-bordered table-sm\\\">\\r\\n          <thead>\\r\\n            <tr>\\r\\n              <th scope=\\\"col\\\">Module</th>\\r\\n            </tr>\\r\\n          </thead>\\r\\n          <tbody>\\r\\n            <tr *ngFor='let setList of this.moduleArray'>\\r\\n              <td (click)=\\\"settingClick(setList)\\\" class=\\\"setting-datalist {{ getActive(setList) }}\\\">\\r\\n                {{setList}}</td>\\r\\n            </tr>\\r\\n          </tbody>\\r\\n        </table>\\r\\n      </div>\\r\\n    </div>\\r\\n    <!-- third column -->\\r\\n    <div class=\\\"data-table\\\" *ngIf=\\\"isActiveSettingData\\\">\\r\\n      <div class=\\\"data-table-2\\\">\\r\\n        <table class=\\\"table table-sm\\\">\\r\\n          <thead>\\r\\n            <tr>\\r\\n              <th scope=\\\"col\\\" class=\\\"setting-name\\\">Setting Name</th>\\r\\n              <th scope=\\\"col\\\" class=\\\"setting-value\\\">Setting Value</th>\\r\\n              <th scope=\\\"col\\\" class=\\\"setting-description\\\">Description</th>\\r\\n            </tr>\\r\\n          </thead>\\r\\n          <tbody>\\r\\n            <tr *ngFor=\\\"let settingData of this.settingDetails \\\">\\r\\n              <td class=\\\"setting-name-data\\\">{{settingData.SETTING_NAME}}</td>\\r\\n              <td class=\\\"setting-value-data\\\">\\r\\n                <div *ngIf=\\\"(settingData.DATA_TYPE).toLowerCase() == 'text' \\\">\\r\\n                  <input class=\\\"setting-value-input\\\" type=\\\"text\\\" [(ngModel)]=\\\"settingData.SETTING_VALUE\\\" />\\r\\n                </div>\\r\\n                <div *ngIf=\\\"(settingData.DATA_TYPE).toLowerCase() == 'number' \\\">\\r\\n                  <input class=\\\"setting-value-checkbox\\\" type=\\\"checkbox\\\"\\r\\n                    (change)=\\\"$event.target.checked? (settingData.SETTING_VALUE = 1) : (settingData.SETTING_VALUE = 0)\\\"\\r\\n                    [checked]=\\\"settingData.SETTING_VALUE == 1\\\" />\\r\\n                </div>\\r\\n                <div *ngIf=\\\"settingData.DATA_TYPE == 'select' \\\">\\r\\n                  <select class=\\\"setting-value-select\\\" [(ngModel)]=\\\"settingData.SETTING_VALUE\\\">\\r\\n                    <option value=\\\"\\\" *ngFor=\\\"let list of settingData.POSSIBLE_VALUES_LIST\\\" [ngValue]=\\\"list\\\">{{list}}\\r\\n                    </option>\\r\\n                  </select>\\r\\n                </div>\\r\\n              </td>\\r\\n              <td>{{settingData.DESCRIPTION}}</td>\\r\\n            </tr>\\r\\n          </tbody>\\r\\n        </table>\\r\\n      </div>\\r\\n      <div class=\\\"buttons\\\">\\r\\n        <div class=\\\"mx-auto\\\">\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-info btn-sm\\\" (click)=\\\"setToDefault()\\\">RESET TO DEFAULT</button>\\r\\n          <button type=\\\"submit\\\" class=\\\"btn btn-info btn-sm\\\" (click)=\\\"onUpdate()\\\">UPDATE</button>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"sidebar-list\\\" *ngIf=\\\"this.showAllSetting\\\">\\r\\n    <div class=\\\"all-data-table\\\">\\r\\n      <div class=\\\"data-table-2\\\">\\r\\n        <table class=\\\"table table-sm\\\">\\r\\n          <thead>\\r\\n            <tr>\\r\\n              <th scope=\\\"col\\\" class=\\\"setting-name\\\">Setting Name</th>\\r\\n              <th scope=\\\"col\\\" class=\\\"setting-value\\\">Setting Value</th>\\r\\n              <th scope=\\\"col\\\" class=\\\"setting-description\\\">Description</th>\\r\\n              <th scope=\\\"col\\\" class=\\\"actions\\\">Action</th>\\r\\n            </tr>\\r\\n          </thead>\\r\\n          <tbody>\\r\\n            <tr *ngFor=\\\"let settingData of this.allSettings\\\">\\r\\n              <td class=\\\"setting-name-data\\\">{{settingData.SETTING_NAME}}</td>\\r\\n              <td class=\\\"setting-value-data\\\">\\r\\n                <div *ngIf=\\\"(settingData.DATA_TYPE).toLowerCase() == 'text' \\\">\\r\\n                  <input class=\\\"setting-value-input\\\" type=\\\"text\\\" [(ngModel)]=\\\"settingData.SETTING_VALUE\\\" />\\r\\n                </div>\\r\\n                <div *ngIf=\\\"(settingData.DATA_TYPE).toLowerCase() == 'number' \\\">\\r\\n                  <input class=\\\"setting-value-checkbox\\\" type=\\\"checkbox\\\"\\r\\n                    (change)=\\\"$event.target.checked? (settingData.SETTING_VALUE = 1) : (settingData.SETTING_VALUE = 0)\\\"\\r\\n                    [checked]=\\\"settingData.SETTING_VALUE == 1\\\" />\\r\\n                </div>\\r\\n                <div *ngIf=\\\"settingData.DATA_TYPE == 'select' \\\">\\r\\n                  <select class=\\\"setting-value-select\\\" [(ngModel)]=\\\"settingData.SETTING_VALUE\\\">\\r\\n                    <option *ngFor=\\\"let list of settingData.POSSIBLE_VALUES_LIST\\\" [ngValue]=\\\"list\\\">{{list}}\\r\\n                    </option>\\r\\n                  </select>\\r\\n                </div>\\r\\n              </td>\\r\\n              <td class=\\\"setting-value-desc\\\">{{settingData.DESCRIPTION}}</td>\\r\\n              <td class=\\\"action-button-group\\\">\\r\\n                <button class=\\\"btn btn-info btn-sm action-button\\\" (click)=\\\"onInvUpdate(settingData)\\\">Update</button>\\r\\n                <button class=\\\"btn btn-info btn-sm action-button\\\" (click)=\\\"onInvReset(settingData)\\\">Reset to Default</button>\\r\\n              </td>\\r\\n            </tr>\\r\\n          </tbody>\\r\\n        </table>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<otpAuth (hideOtp)=\\\"hideOtpPopup($event)\\\"  #OTPpopUp></otpAuth>\\r\\n\\r\\n\\r\\n<style>\\r\\n  input, select, textarea {\\r\\n  border: 1px solid #cbcbcb;\\r\\n  border-radius: 3px;\\r\\n  color: black;\\r\\n}\\r\\n\\r\\nbutton{\\r\\n  font-size: 11px;\\r\\n  letter-spacing: 0.5px;\\r\\n}\\r\\n\\r\\n\\r\\n.all_setting{\\r\\n  width: 25%;\\r\\n  margin: 2px;\\r\\n}\\r\\n\\r\\n.category_setting{\\r\\n  width: 40%;\\r\\n  margin: 2px;\\r\\n}\\r\\n\\r\\nlabel {\\r\\n  width: 62px;\\r\\n  height: 25px;\\r\\n  font-size: 13px;\\r\\n}\\r\\np {\\r\\n  font-size: 13px;\\r\\n}\\r\\n\\r\\n.form-control {\\r\\n  font-size: 13px;\\r\\n}\\r\\n\\r\\ntd {\\r\\n  border-bottom: 1px solid #cacaca;\\r\\n  font-size: 12px;\\r\\n}\\r\\n\\r\\ninput {\\r\\n  padding: 8px;\\r\\n}\\r\\n\\r\\n.form-group {\\r\\n  margin-bottom: 0rem;\\r\\n}\\r\\n\\r\\n.card-header {\\r\\n  background-color: #c0c0c0;\\r\\n}\\r\\n\\r\\n.top-bar{\\r\\n  display: flex; \\r\\n  max-width: 50%; \\r\\n  min-width: 100%; \\r\\n  align-items: center;\\r\\n}\\r\\n\\r\\n.top-bar-2{\\r\\n  display: flex; \\r\\n  align-items: center; \\r\\n  width: 100%;\\r\\n\\r\\n  label{\\r\\n    font-weight: bold;\\r\\n  }\\r\\n}\\r\\n\\r\\n.top-bar-input{\\r\\n  width: 100%; \\r\\n  margin-top: 0.2%;\\r\\n\\r\\n  input{\\r\\n    height: 1.5rem;\\r\\n    font-size:13px; \\r\\n    width: 100%;\\r\\n  }\\r\\n}\\r\\n\\r\\n.sticky-top{\\r\\n  justify-content: space-between;\\r\\n}\\r\\n\\r\\nthead {\\r\\n  background: #9ccae4;\\r\\n  position: sticky;\\r\\n  top: 0;\\r\\n  font-size: 13px;\\r\\n  background: #628FA5;\\r\\n  color: white;\\r\\n  font-weight: bold;\\r\\n}\\r\\n\\r\\n.tr-flex {\\r\\n  display: flex;\\r\\n  flex-direction: column;\\r\\n}\\r\\n\\r\\n.sidebar {\\r\\n  width: 99%;\\r\\n  height: 80vh;\\r\\n  margin-top: 3.3%;\\r\\n}\\r\\n\\r\\n.sidebar-list {\\r\\n  display: flex;\\r\\n  width: 100%;\\r\\n  height: 100%;\\r\\n}\\r\\n\\r\\n.data-table {\\r\\n  height: 91%;\\r\\n  width: 67%;\\r\\n  border-right: 1px solid #cacaca;\\r\\n}\\r\\n\\r\\n.data-table-2{\\r\\n  max-height: 100%; \\r\\n  overflow-y: auto;\\r\\n}\\r\\n\\r\\n.setting-name {\\r\\n  width: 25%;\\r\\n  border-right:1px solid #cacaca;\\r\\n}\\r\\n\\r\\n.setting-value {\\r\\n  width: 13%;\\r\\n  border-right: 1px solid #cacaca;\\r\\n  height: 20px;\\r\\n}\\r\\n\\r\\n.setting-description{\\r\\n  border-right: 1px solid #cacaca;\\r\\n}\\r\\n\\r\\n.actions{\\r\\n  width: 14%;\\r\\n}\\r\\n\\r\\n.setting-action {\\r\\n  width: 13%;\\r\\n}\\r\\n\\r\\n.action-button-group{\\r\\n  display: flex;\\r\\n  justify-content: center;\\r\\n  align-items: center;\\r\\n}\\r\\n\\r\\n.setting-category {\\r\\n  width: 13%;\\r\\n  min-width: 74px;\\r\\n  background-color: lightgray;\\r\\n  border-bottom: 1px solid #cacaca;\\r\\n}\\r\\n\\r\\n.setting-list {\\r\\n  height: 100%; \\r\\n  overflow-y: auto; \\r\\n  overflow-x: hidden; \\r\\n  width: 20%;  \\r\\n}\\r\\n\\r\\n.setting-list-2{\\r\\n  border-right: 1px solid #cacaca; \\r\\n  height:100%; \\r\\n  border-bottom: 1px solid #cacaca;\\r\\n\\r\\n  th{\\r\\n    position: sticky;\\r\\n  }\\r\\n}\\r\\n\\r\\n.all-data-table{\\r\\n  width: 100%;\\r\\n  border-right: 1px solid #cacaca;\\r\\n  border-bottom: 1px solid #cacaca;\\r\\n  border-left: 1px solid #cacaca;\\r\\n}\\r\\n\\r\\n.action-button{\\r\\n  font: 10px;\\r\\n  margin: 2px;\\r\\n}\\r\\n\\r\\n.setting-value-desc{\\r\\n  border-right: 1px solid #cacaca;\\r\\n}\\r\\n\\r\\nth {\\r\\n  font-weight: 400;\\r\\n}\\r\\n\\r\\n.category-list {\\r\\n  cursor: pointer;\\r\\n}\\r\\n\\r\\n.setting-datalist {\\r\\n  cursor: pointer;\\r\\n}\\r\\n\\r\\n.active {\\r\\n  background-color: #cacaca;\\r\\n  color: black;\\r\\n}\\r\\n\\r\\n.activeList {\\r\\n  background-color: #cacaca;\\r\\n  color: black;\\r\\n}\\r\\n\\r\\n.setting-value-input{\\r\\n  width: 70%;\\r\\n  text-align: center;\\r\\n}\\r\\n\\r\\n.setting-value-checkbox{\\r\\n  width: 70%;\\r\\n  text-align: center;\\r\\n  height: 16px;\\r\\n}\\r\\n\\r\\n.setting-value-select{\\r\\n  width: 70%;\\r\\n  text-align: center;\\r\\n}\\r\\n\\r\\n.setting-value-data{\\r\\n  text-align: center; \\r\\n  border-right: 1px solid #cacaca;\\r\\n  vertical-align: middle;\\r\\n}\\r\\n\\r\\n.setting-name-data{\\r\\n  border-right: 1px solid #cacaca;\\r\\n  border-left: 1px solid #cacaca;\\r\\n}\\r\\n\\r\\n.buttons{\\r\\n  width: 100%; \\r\\n  display: flex;\\r\\n  justify-content: center;\\r\\n}\\r\\n</style>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/systemadmin/systemconfiguration/settingmaster.component.html\n// module id = 1877\n// module chunks = 8","module.exports = \"<div class=\\\"clearfix\\\" style=\\\"margin-top: 5px; font-size: 12px; font-weight:550;\\\">\\r\\n    <ul class=\\\"nav nav-tabs\\\" style=\\\"background-color: #d7e5f2  !important \\\">\\r\\n      <li class=\\\"nav-item\\\">\\r\\n        <a class=\\\"nav-link active\\\" href=\\\"#PrintFileSetup\\\" data-toggle=\\\"tab\\\" style=\\\"color:black\\\">Print File Setup</a>\\r\\n      </li>\\r\\n      <li class=\\\"nav-item\\\">\\r\\n        <a class=\\\"nav-link\\\" href=\\\"#ResetToDefaul\\\" data-toggle=\\\"tab\\\" style=\\\"color:black\\\">Reset to Default</a>\\r\\n      </li>\\r\\n      <li class=\\\"nav-item\\\">\\r\\n        <a class=\\\"nav-link\\\"  data-toggle=\\\"tab\\\" style=\\\"color:black;cursor: pointer;\\\" (click)=\\\"onSettingMasterClick()\\\">Setting Master</a>\\r\\n      </li>\\r\\n      <li class=\\\"nav-item\\\">\\r\\n        <a class=\\\"nav-link\\\"  data-toggle=\\\"tab\\\" style=\\\"color:black;cursor: pointer;\\\" (click)=\\\"onDivisionClick()\\\">Division Master</a>\\r\\n      </li>\\r\\n      <li class=\\\"nav-item\\\">\\r\\n        <a class=\\\"nav-link\\\"  data-toggle=\\\"tab\\\" style=\\\"color:black;cursor: pointer;\\\" (click)=\\\"onTaxconfigClick()\\\">Tax Config Charges</a>\\r\\n      </li>\\r\\n    </ul>\\r\\n</div>\\r\\n<form >\\r\\n  <div class=\\\"tab-content\\\">\\r\\n    <div class=\\\"tab-pane active\\\" id=\\\"PrintFileSetup\\\">\\r\\n      <div class=\\\"row clearfix\\\">\\r\\n        <div class=\\\"col-md-12 row\\\" style=\\\"width: 100%;\\\">\\r\\n          <printfilesetup></printfilesetup>\\r\\n        </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n    <div class=\\\"tab-pane \\\" id=\\\"ResetToDefaul\\\">\\r\\n      <div class=\\\"row clearfix\\\">\\r\\n      <div class=\\\"col-md-12 row\\\" style=\\\"width: 100%;\\\">\\r\\n        <resetdefault></resetdefault>\\r\\n      </div>\\r\\n  </div>\\r\\n  </div>\\r\\n  </div>\\r\\n</form>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/systemadmin/systemconfiguration/systemconfiguration.component.html\n// module id = 1878\n// module chunks = 8","module.exports = \"<div class=\\\"sticky-top\\\">\\r\\n    <div class=\\\"header\\\">\\r\\n        <h1>Tax Config Charges</h1>\\r\\n          <button class=\\\"btn btn-info pull-right\\\" (click)=\\\"goback()\\\" >Back</button>\\r\\n          <button class=\\\"btn btn-info pull-right\\\" >Save</button>\\r\\n      </div>\\r\\n</div>\\r\\n\\r\\n    <div class=\\\"content\\\">\\r\\n      <div class=\\\"config-list\\\">\\r\\n        <div class=\\\"config-item\\\" *ngFor=\\\"let item of configItems\\\">\\r\\n          <label>{{item.Caption}}</label>\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" style=\\\"font-size: 12px;\\\" placeholder=\\\"Press Enter to select...\\\" (keydown.enter)=\\\"checkList(item.ACID)\\\" (keydown)=\\\"preventInput($event)\\\" [(ngModel)]=\\\"item.ACNAME\\\">\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n  \\r\\n  <style>\\r\\n\\r\\n.header {\\r\\n  display: flex;\\r\\n  justify-content: space-between;\\r\\n  align-items: center;\\r\\n  padding-right: 30px;\\r\\n  padding-left: 10px;\\r\\n}\\r\\n\\r\\n.header h1 {\\r\\n  margin: 0;\\r\\n  font-weight: bold;   \\r\\n  font-size: medium;\\r\\n}\\r\\n\\r\\nbutton{\\r\\n    margin-bottom: 5px; \\r\\n    margin-left: 5px;\\r\\n    padding-right: 10px;\\r\\n    padding-left: 10px;\\r\\n}\\r\\n.content {\\r\\n  margin-top:65px;\\r\\n  padding: 20px;\\r\\n  border: 1px solid #ddd;\\r\\n  align-items: center;\\r\\n  margin-left: 4.5rem;\\r\\n  margin-right: 4.5rem;\\r\\n  max-height: 560px;\\r\\n  overflow: auto;\\r\\n  font-family: Arial, sans-serif;\\r\\n  background-color: white;\\r\\n}\\r\\n\\r\\n.config-list {\\r\\n  display: flex;\\r\\n  flex-wrap: wrap;\\r\\n}\\r\\n\\r\\n.config-item {\\r\\n  width: 50%;\\r\\n  padding: 5px;\\r\\n  display: flex;\\r\\n  align-items: center;\\r\\n}\\r\\n\\r\\n.config-item label {\\r\\n  display: inline-block;\\r\\n  margin-bottom: 0;\\r\\n  font-size: 12px;\\r\\n  font-weight:545;\\r\\n  width: 320px;\\r\\n}\\r\\n.config-item input{\\r\\n    flex-grow: 1;\\r\\n    width: 100px;\\r\\n    height: 28px;\\r\\n    background-color: rgb(236, 236, 236);\\r\\n    margin-right: 50px ;\\r\\n    margin-left: 20px;\\r\\n    border: 1px solid rgb(200, 200, 200);\\r\\n}\\r\\n  </style>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/systemadmin/systemconfiguration/taxconfigcharges.component.html\n// module id = 1879\n// module chunks = 8"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AA0BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7CA;AACA;AACA;AACA;AACA;AAEA;AAIA;AAWA;AAAA;AAAA;AAAA;AAVA;AAYA;AAVA;AAAA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;;;AAAA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAGA;AAAA;AAtcA;AADA;AAYA;AAXA;AAAA;;;;;;;;;;;;;;;;ACVA;AACA;AACA;AAOA;AAMA;AAAA;AAAA;AALA;AAGA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAhCA;AAAA;;AAAA;AADA;AALA;AACA;AACA;AACA;AAQA;AANA;AAAA;;;;;;;;;;;;;ACTA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AALA;AACA;AACA;AACA;AAEA;AAAA;;;;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAOA;AA4BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAQA;AAIA;AAKA;AACA;AAGA;AAAA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAlMA;AADA;AACA;AAAA;AAIA;AADA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAzBA;AALA;AACA;AACA;AACA;AA8BA;AA5BA;AAAA;;;;;;;;;;;;;;;;;;;ACfA;AACA;AACA;AACA;AAOA;AAmEA;AAAA;AAAA;AAAA;AAjEA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAEA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AAEA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AAEA;AACA;AAAA;AAlHA;AALA;AACA;AACA;AACA;AAqEA;AAnEA;AAAA;;;;;;;;;;;;;;ACVA;AACA;AACA;AACA;AACA;AACA;AAOA;AAsBA;AAAA;AACA;AACA;AACA;AACA;AAvBA;AAcvNA;AAAA;AAAA;AAAA;AApBA;AALA;AACA;AACA;AACA;AAyBA;AACA;AACA;AACA;AA1BA;AAAA;;;;;;;;;;;;;;;;ACZA;AACA;AAUA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAXA;AARA;AACA;AACA;AACA;AAGA;AAGA;AADA;AAAA;;;;;;;;;;;;ACXA;AACA;AACA;AACA;AAOA;AAQA;AAAA;AAAA;AAAA;AAAA;AAPA;AAOA;AAJA;AACA;AACA;AAGA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAnCA;AALA;AACA;AACA;AACA;AAUA;AARA;AAAA;;;;;;;;;;;;;;ACVA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAEA;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAGA;;;;;;;;;;;;;;;;;;;ACjCA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AAOA;AAuDA;AAAA;AAAA;AAAA;AAAA;AAtDA;AAGA;AACA;AACA;AAIA;AA6CA;AA1CA;AACA;AACA;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAGA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAjMA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAHA;AALA;AACA;AACA;AACA;AAyDA;AAvDA;AAAA;;;;;;;;;;;;;;;;;AChBA;AAEA;AACA;AACA;AAQA;AA4CA;AAAA;AAAA;AA3CA;AACA;AACA;AAyCA;AApCA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAjEA;AAAA;AAAA;AAAA;AANA;AALA;AACA;AACA;AACA;AA8CA;AA5CA;AAAA;;;;;;;;;;;;;;ACZA;AAIA;AAAA;AAmBA;AAlBA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAnBA;AAFA;AAEA;AAAA;;;;;;;;;;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACzeA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;","sourceRoot":""}