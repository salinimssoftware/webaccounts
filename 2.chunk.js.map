{"version":3,"file":"2.chunk.js","sources":["webpack:///./src/app/pages/Purchases/purchases.module.ts","webpack:///./src/app/~/ng2-smart-table/src/ng2-smart-table/lib/grid.ts?59c4","webpack:///./src/app/~/ng2-smart-table/src/ng2-smart-table/lib/data-set/cell.ts?44de","webpack:///./src/app/~/ng2-smart-table/src/ng2-smart-table/components/cell/cell-editors/default-editor.ts?97a9","webpack:///./src/app/~/ng2-smart-table/src/ng2-smart-table/lib/data-source/data-source.ts?42be","webpack:///./src/app/~/ng2-smart-table/src/ng2-smart-table/lib/data-set/column.ts?97c4","webpack:///./src/app/~/ng2-smart-table/src/ng2-smart-table/lib/data-set/row.ts?abb5","webpack:///./src/app/~/ng2-smart-table/src/ng2-smart-table/components/filter/filter-types/default-filter.ts?ca82","webpack:///./src/app/~/ng2-smart-table/src/ng2-smart-table/lib/helpers.ts?b08c","webpack:///./src/app/~/ng2-smart-table/src/ng2-smart-table.module.ts?09a6","webpack:///./src/app/~/ng2-smart-table/src/ng2-smart-table/components/cell/cell-editors/editor.component.scss?44e2","webpack:///./src/app/~/ng2-smart-table/src/ng2-smart-table/lib/data-source/local/local.data-source.ts?e321","webpack:///./src/app/~/ng2-smart-table/src/ng2-smart-table/components/cell/cell-edit-mode/edit-cell-default.ts?c749","webpack:///./src/app/common/popupLists/report-filter/report-filter.module.ts?414b","webpack:///./src/app/~/ng2-smart-table/ng2-smart-table.js","webpack:///./src/app/~/ng2-smart-table/src/ng2-smart-table.directives.ts?ac82","webpack:///./src/app/~/ng2-smart-table/src/ng2-smart-table/ng2-smart-table.component.ts?667b","webpack:///./src/app/common/popupLists/report-filter/report-filter.component.ts?d243","webpack:///./src/app/~/ng2-smart-table/src/ng2-smart-table/components/cell/cell-edit-mode/custom-edit.component.ts?97d7","webpack:///./src/app/~/ng2-smart-table/src/ng2-smart-table/components/cell/cell-edit-mode/default-edit.component.ts?57d5","webpack:///./src/app/~/ng2-smart-table/src/ng2-smart-table/components/cell/cell-edit-mode/edit-cell.component.ts?0a03","webpack:///./src/app/~/ng2-smart-table/src/ng2-smart-table/components/cell/cell-edit-mode/index.ts?e3f1","webpack:///./src/app/~/ng2-smart-table/src/ng2-smart-table/components/cell/cell-editors/checkbox-editor.component.ts?9442","webpack:///./src/app/~/ng2-smart-table/src/ng2-smart-table/components/cell/cell-editors/completer-editor.component.ts?7a76","webpack:///./src/app/~/ng2-smart-table/src/ng2-smart-table/components/cell/cell-editors/index.ts?a42e","webpack:///./src/app/~/ng2-smart-table/src/ng2-smart-table/components/cell/cell-editors/input-editor.component.ts?c478","webpack:///./src/app/~/ng2-smart-table/src/ng2-smart-table/components/cell/cell-editors/select-editor.component.ts?66c0","webpack:///./src/app/~/ng2-smart-table/src/ng2-smart-table/components/cell/cell-editors/textarea-editor.component.ts?8b4a","webpack:///./src/app/~/ng2-smart-table/src/ng2-smart-table/components/cell/cell-view-mode/custom-view.component.ts?bb2c","webpack:///./src/app/~/ng2-smart-table/src/ng2-smart-table/components/cell/cell-view-mode/index.ts?3c88","webpack:///./src/app/~/ng2-smart-table/src/ng2-smart-table/components/cell/cell-view-mode/view-cell.component.ts?dc1e","webpack:///./src/app/~/ng2-smart-table/src/ng2-smart-table/components/cell/cell.component.ts?6c90","webpack:///./src/app/~/ng2-smart-table/src/ng2-smart-table/components/filter/filter-types/checkbox-filter.component.ts?384d","webpack:///./src/app/~/ng2-smart-table/src/ng2-smart-table/components/filter/filter-types/completer-filter.component.ts?d6aa","webpack:///./src/app/~/ng2-smart-table/src/ng2-smart-table/components/filter/filter-types/index.ts?221b","webpack:///./src/app/~/ng2-smart-table/src/ng2-smart-table/components/filter/filter-types/input-filter.component.ts?2cf7","webpack:///./src/app/~/ng2-smart-table/src/ng2-smart-table/components/filter/filter-types/select-filter.component.ts?ed45","webpack:///./src/app/~/ng2-smart-table/src/ng2-smart-table/components/filter/filter.component.ts?c167","webpack:///./src/app/~/ng2-smart-table/src/ng2-smart-table/components/pager/pager.component.ts?5a7e","webpack:///./src/app/~/ng2-smart-table/src/ng2-smart-table/components/tbody/cells/create-cancel.component.ts?91b0","webpack:///./src/app/~/ng2-smart-table/src/ng2-smart-table/components/tbody/cells/edit-delete.component.ts?6876","webpack:///./src/app/~/ng2-smart-table/src/ng2-smart-table/components/tbody/cells/index.ts?6fcc","webpack:///./src/app/~/ng2-smart-table/src/ng2-smart-table/components/tbody/tbody.component.ts?94f6","webpack:///./src/app/~/ng2-smart-table/src/ng2-smart-table/components/tbody/tbody.directives.ts?91d7","webpack:///./src/app/~/ng2-smart-table/src/ng2-smart-table/components/thead/cells/actions-title.component.ts?9d3c","webpack:///./src/app/~/ng2-smart-table/src/ng2-smart-table/components/thead/cells/actions.component.ts?259a","webpack:///./src/app/~/ng2-smart-table/src/ng2-smart-table/components/thead/cells/add-button.component.ts?8d0e","webpack:///./src/app/~/ng2-smart-table/src/ng2-smart-table/components/thead/cells/checkbox-select-all.component.ts?4c5c","webpack:///./src/app/~/ng2-smart-table/src/ng2-smart-table/components/thead/cells/column-title.component.ts?3c38","webpack:///./src/app/~/ng2-smart-table/src/ng2-smart-table/components/thead/cells/index.ts?9111","webpack:///./src/app/~/ng2-smart-table/src/ng2-smart-table/components/thead/cells/title/title.component.ts?e40c","webpack:///./src/app/~/ng2-smart-table/src/ng2-smart-table/components/thead/rows/index.ts?736c","webpack:///./src/app/~/ng2-smart-table/src/ng2-smart-table/components/thead/rows/thead-filters-row.component.ts?1669","webpack:///./src/app/~/ng2-smart-table/src/ng2-smart-table/components/thead/rows/thead-form-row.component.ts?8afe","webpack:///./src/app/~/ng2-smart-table/src/ng2-smart-table/components/thead/rows/thead-titles-row.component.ts?ec26","webpack:///./src/app/~/ng2-smart-table/src/ng2-smart-table/components/thead/thead.component.ts?6f0f","webpack:///./src/app/~/ng2-smart-table/src/ng2-smart-table/components/thead/thead.directives.ts?23ad","webpack:///./src/app/~/ng2-smart-table/src/ng2-smart-table/lib/data-set/data-set.ts?db19","webpack:///./src/app/~/ng2-smart-table/src/ng2-smart-table/lib/data-source/local/local.filter.ts?b0ab","webpack:///./src/app/~/ng2-smart-table/src/ng2-smart-table/lib/data-source/local/local.pager.ts?2c30","webpack:///./src/app/~/ng2-smart-table/src/ng2-smart-table/lib/data-source/local/local.sorter.ts?6076","webpack:///./src/app/~/ng2-smart-table/src/ng2-smart-table/components/filter/filter.scss?60ae","webpack:///./src/app/~/ng2-smart-table/src/ng2-smart-table/components/pager/pager.scss?342a","webpack:///./src/app/~/ng2-smart-table/src/ng2-smart-table/components/thead/cells/title/title.component.scss?5bad","webpack:///./src/app/~/ng2-smart-table/src/ng2-smart-table/ng2-smart-table.scss?9c76","webpack:///./src/app/~/ng2-smart-table/src/ng2-smart-table/components/cell/cell-edit-mode/default-edit.component.html?1cac","webpack:///./src/app/~/ng2-smart-table/src/ng2-smart-table/components/tbody/tbody.component.html?a1ec","webpack:///./src/app/~/ng2-smart-table/src/ng2-smart-table/components/thead/thead.component.html?4521","webpack:///./src/app/~/ng2-smart-table/src/ng2-smart-table/ng2-smart-table.html?1599","webpack:///./src/app/pages/Purchases/components/purchaseinvoice/AddPurchaseInvoice.ts?df31","webpack:///./src/app/common/interfaces/bank-reconciliation.interface.ts?504a","webpack:///./src/app/pages/AccountVoucher/accountvoucher.component.ts?d3c1","webpack:///./src/app/pages/AccountVoucher/components/BulkPrint/bulk-print.component.ts?817b","webpack:///./src/app/pages/AccountVoucher/components/CashCollection/cashcollection.component.ts?b43d","webpack:///./src/app/pages/AccountVoucher/components/CellPayVoucher/CellPay-Voucher.component.ts?de98","webpack:///./src/app/pages/AccountVoucher/components/CreditNote/credit-note.component.ts?36aa","webpack:///./src/app/pages/AccountVoucher/components/DebitNote/debit-note.component.ts?506e","webpack:///./src/app/pages/AccountVoucher/components/ExpensesVoucher/expenses-voucher.component.ts?00cc","webpack:///./src/app/pages/AccountVoucher/components/IncomeVoucher/income-voucher.component.ts?3bd2","webpack:///./src/app/pages/AccountVoucher/components/PaymentCollection/PaymentCollection.component.ts?8e4e","webpack:///./src/app/pages/AccountVoucher/components/PostDirectory/postdirectory.component.ts?6545","webpack:///./src/app/pages/AccountVoucher/components/ReverseCreditNote/reverse-credit-note.component.ts?bc80","webpack:///./src/app/pages/AccountVoucher/components/account-headingwise-depreciation-detail/account-headingwise-depreciation-detail.component.ts?5de7","webpack:///./src/app/pages/AccountVoucher/components/account-opening-balance/account-opening-balance.component.ts?cc3a","webpack:///./src/app/pages/AccountVoucher/components/bank-reconciliation/bank-reconciliation.component.ts?07bf","webpack:///./src/app/pages/AccountVoucher/components/bill-tracking-amendment/bill-tracking-amendment.component.ts?0f0d","webpack:///./src/app/pages/AccountVoucher/components/capital-voucher/capital-voucher.component.ts?3476","webpack:///./src/app/pages/AccountVoucher/components/contra/contra-voucher.component.ts?db99","webpack:///./src/app/pages/AccountVoucher/components/depreciation-detail/depreciation-detail.component.ts?8a52","webpack:///./src/app/pages/AccountVoucher/components/itemwise-depreciation-detail/itemwise-depreciation-detail.component.ts?b412","webpack:///./src/app/pages/AccountVoucher/components/journal/journal-voucher.component.ts?706a","webpack:///./src/app/pages/AccountVoucher/components/party-balance-confirmation/party-balance-confirmation.component.ts?6fc5","webpack:///./src/app/pages/AccountVoucher/components/party-opening-balance/party-opening-balance.component.ts?3a4d","webpack:///./src/app/pages/AccountVoucher/components/party-reconciliation/party-reconciliation.component.ts?90a4","webpack:///./src/app/pages/AccountVoucher/components/voucher-posting/voucher-posting.component.ts?90b3","webpack:///./src/app/pages/AccountVoucher/components/voucher-renumbering/voucher-renumbering.component.ts?80ca","webpack:///./src/app/pages/Purchases/components/AdditionalCost/masterPageAdditional.component.ts?fd96","webpack:///./src/app/pages/Purchases/components/NewAdditionalCost/newmasterPageAdditional.component.ts?e109","webpack:///./src/assets/css/styles.css?33da","webpack:///./src/app/~/ng2-smart-table/src/ng2-smart-table/lib/data-source/server/server-source.conf.ts","webpack:///./src/app/~/ng2-smart-table/src/ng2-smart-table/lib/data-source/server/server.data-source.ts","webpack:///./src/app/~/ng2-smart-table/src/ng2-smart-table/lib/index.ts","webpack:///./src/app/pages/AccountVoucher/components/vehicle-cost-tracking/vehicle-cost-tracking.service.ts?7c9d","webpack:///./src/app/common/Prefix/prefix.component.ts?a2ff","webpack:///./src/app/common/Prefix/prefix.service.ts?9a11","webpack:///./src/app/common/directives/onlynumber.directive.ts?49c5","webpack:///./src/app/pages/AccountVoucher/accountvoucher.routing.ts?9643","webpack:///./src/app/pages/AccountVoucher/components/DebitNote/FooterwithIncludedVAT.component.ts?47bf","webpack:///./src/app/pages/AccountVoucher/components/IncomeVoucher/CustomerTracking/customerTracking.component.ts?43b3","webpack:///./src/app/pages/AccountVoucher/components/MultipleSeries/MultipleSeries.component.ts?318d","webpack:///./src/app/pages/AccountVoucher/components/bank-reconciliation/bank-reconciliation.service.ts?860f","webpack:///./src/app/pages/AccountVoucher/components/debit-note-rate-adjustment/debit-note-rate-adjustment.component.ts?19c0","webpack:///./src/app/pages/AccountVoucher/components/debit-note-rate-adjustment/debit-note-rate-adjustment.service.ts?dbbc","webpack:///./src/app/pages/AccountVoucher/components/journal/test.ts?df54","webpack:///./src/app/pages/AccountVoucher/components/journal/trnmain-journal-entry.component.ts?ceee","webpack:///./src/app/pages/AccountVoucher/components/journal/trntran-journal-entry.component.ts?f1cd","webpack:///./src/app/pages/AccountVoucher/components/party-reconciliation/party-reconciliation.service.ts?9ac4","webpack:///./src/app/pages/AccountVoucher/components/payment-single/payment-single.component.ts?c4c6","webpack:///./src/app/pages/AccountVoucher/components/voucher-renumbering/search.pipe.ts?dd42","webpack:///./src/app/pages/Purchases/components/AdditionalCost/ImportDocumentDetails.component.ts?6490","webpack:///./src/app/pages/Purchases/components/AdditionalCost/additionalCost.component.ts?d23f","webpack:///./src/app/pages/Purchases/components/AdditionalCost/costingDetail.component.ts?7a73","webpack:///./src/app/pages/Purchases/components/AdditionalCost/purchaseDetail.component.ts?fd91","webpack:///./src/app/pages/Purchases/components/AdditionalCost/tab.ts?eb9a","webpack:///./src/app/pages/Purchases/components/AdditionalCost/tabs.ts?a37a","webpack:///./src/app/pages/Purchases/components/NewAdditionalCost/newIndividualCost.component .ts?d2ab","webpack:///./src/app/pages/Purchases/components/NewAdditionalCost/newadditionalCost.component.ts?4f08","webpack:///./src/app/pages/Purchases/components/NewAdditionalCost/newcostingDetail.component.ts?3ae3","webpack:///./src/app/pages/Purchases/components/NewAdditionalCost/newpurchaseDetail.component.ts?bb82","webpack:///./~/events/events.js?7c71","webpack:///./src/app/common/Prefix/prefix.component.html?592e","webpack:///./src/app/common/popupLists/report-filter/report-filter.component.html?948b","webpack:///./src/app/pages/AccountVoucher/components/BulkPrint/bulk-print.component.css?6a45","webpack:///./src/app/pages/AccountVoucher/components/BulkPrint/bulk-print.component.html?a294","webpack:///./src/app/pages/AccountVoucher/components/CashCollection/cashcollection.component.html?9934","webpack:///./src/app/pages/AccountVoucher/components/CellPayVoucher/CellPay-Voucher.component.html?0206","webpack:///./src/app/pages/AccountVoucher/components/CreditNote/credit-note.component.html?80b4","webpack:///./src/app/pages/AccountVoucher/components/DebitNote/FooterwithIncludedVAT.component.html?a6f4","webpack:///./src/app/pages/AccountVoucher/components/DebitNote/debit-note.component.html?287f","webpack:///./src/app/pages/AccountVoucher/components/ExpensesVoucher/expenses-voucher.component.html?4c66","webpack:///./src/app/pages/AccountVoucher/components/IncomeVoucher/CustomerTracking/customerTracking.component.html?1a23","webpack:///./src/app/pages/AccountVoucher/components/IncomeVoucher/income-voucher.component.html?49db","webpack:///./src/app/pages/AccountVoucher/components/MultipleSeries/MultipleSeries.component.html?e66b","webpack:///./src/app/pages/AccountVoucher/components/PaymentCollection/PaymentCollection.component.html?72a1","webpack:///./src/app/pages/AccountVoucher/components/PostDirectory/postdirectory.component.html?973a","webpack:///./src/app/pages/AccountVoucher/components/ReverseCreditNote/reverse-credit-note.component.html?2367","webpack:///./src/app/pages/AccountVoucher/components/account-headingwise-depreciation-detail/account-headingwise-depreciation-detail.component.html?5e8c","webpack:///./src/app/pages/AccountVoucher/components/account-opening-balance/account-opening-balance.component.html?4b2d","webpack:///./src/app/pages/AccountVoucher/components/bank-reconciliation/bank-reconciliation.component.html?044c","webpack:///./src/app/pages/AccountVoucher/components/bill-tracking-amendment/bill-tracking-amendment.component.html?6249","webpack:///./src/app/pages/AccountVoucher/components/capital-voucher/capital-voucher.component.html?a4ed","webpack:///./src/app/pages/AccountVoucher/components/contra/contra-voucher.component.html?2d8a","webpack:///./src/app/pages/AccountVoucher/components/debit-note-rate-adjustment/debit-note-rate-adjustment.comopnent.html?a9c6","webpack:///./src/app/pages/AccountVoucher/components/depreciation-detail/depreciation-detail.component.css?c933","webpack:///./src/app/pages/AccountVoucher/components/depreciation-detail/depreciation-detail.component.html?7b9b","webpack:///./src/app/pages/AccountVoucher/components/itemwise-depreciation-detail/itemwise-depreciation-detail.component.html?72a4","webpack:///./src/app/pages/AccountVoucher/components/journal/journal-voucher.component.html?6ead","webpack:///./src/app/pages/AccountVoucher/components/journal/trnmain-journal-entry.component.html?037d","webpack:///./src/app/pages/AccountVoucher/components/journal/trntran-journal-entry.component.html?7bb8","webpack:///./src/app/pages/AccountVoucher/components/party-balance-confirmation/party-balance-confirmation.component.html?783f","webpack:///./src/app/pages/AccountVoucher/components/party-opening-balance/party-opening-balance.component.html?ea25","webpack:///./src/app/pages/AccountVoucher/components/party-reconciliation/party-reconciliation.component.html?a60b","webpack:///./src/app/pages/AccountVoucher/components/payment-single/payment-single.component.html?e980","webpack:///./src/app/pages/AccountVoucher/components/voucher-posting/voucher-posting.component.html?3d92","webpack:///./src/app/pages/AccountVoucher/components/voucher-renumbering/voucher-renumbering.component.css?6571","webpack:///./src/app/pages/AccountVoucher/components/voucher-renumbering/voucher-renumbering.component.html?8ba5","webpack:///./src/app/pages/Purchases/components/AdditionalCost/ImportDocumentDetail.component.html?0f65","webpack:///./src/app/pages/Purchases/components/AdditionalCost/additionalCost.component.html?6aed","webpack:///./src/app/pages/Purchases/components/AdditionalCost/costingDetail.component.html?8852","webpack:///./src/app/pages/Purchases/components/AdditionalCost/masterPageAdditional.component.html?e714","webpack:///./src/app/pages/Purchases/components/AdditionalCost/purchaseDetail.component.html?4e6a","webpack:///./src/app/pages/Purchases/components/NewAdditionalCost/newIndividualCost.component.html?a6e7","webpack:///./src/app/pages/Purchases/components/NewAdditionalCost/newadditionalCost.component.html?3513","webpack:///./src/app/pages/Purchases/components/NewAdditionalCost/newcostingDetail.component.html?f5b2","webpack:///./src/app/pages/Purchases/components/NewAdditionalCost/newmasterPageAdditional.component.html?cfc0","webpack:///./src/app/pages/Purchases/components/NewAdditionalCost/newpurchaseDetail.component.html?9f2d","webpack:///./src/app/pages/Purchases/components/purchaseinvoice/addpurchaseinvoice.html?b625","webpack:///./src/app/pages/Purchases/components/DebitNoteItemWise/debitnote-itembase.component.ts","webpack:///./src/app/pages/Purchases/purchases.component.ts","webpack:///./src/app/common/Transaction Components/delivery-order.component.ts","webpack:///./src/app/common/popupLists/dynamic-filter-option-popup/dynamic-filter-option-popup.component.ts","webpack:///./src/app/common/popupLists/dynamic-filter-option-popup/dynamic-filter-option-popup.module.ts","webpack:///./src/app/pages/Purchases/components/DebitNoteItemWise/debitnote-itembase-list.component.ts","webpack:///./src/app/pages/Purchases/components/DebitNoteItemWise/purchaseinvoices.service.ts","webpack:///./src/app/pages/Purchases/components/purchase.service.ts","webpack:///./src/app/pages/Purchases/purchases.routing.ts","webpack:///./src/app/pages/Purchases/components/DebitNoteItemWise/smartTables.scss","webpack:///./src/app/common/Transaction Components/delivery-order.component.html","webpack:///./src/app/common/popupLists/dynamic-filter-option-popup/dynamic-filter-option-popup.component.html","webpack:///./src/app/pages/Purchases/components/DebitNoteItemWise/debitnote-itembase-list.component.html","webpack:///./src/app/pages/Purchases/components/DebitNoteItemWise/debitnote-itembase.component.html","webpack:///./src/app/pages/Purchases/components/DebitNoteItemWise/smartTables.scss?232b","webpack:///./src/app/pages/AccountVoucher/accountvoucher.module.ts?3d82"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { TransactionService } from \"./../../common/Transaction Components/transaction.service\";\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { NgaModule } from '../../theme/nga.module';\r\nimport { Ng2SmartTableModule } from '../../node_modules/ng2-smart-table/src/ng2-smart-table.module';\r\nimport { routing } from './purchases.routing';\r\nimport { Purchases } from './purchases.component';\r\nimport { CanActivateTeam } from '../../common/services/permission/guard.service'\r\nimport { ModalModule } from 'ng2-bootstrap';\r\nimport { NguiAutoCompleteModule } from '@ngui/auto-complete';\r\nimport { AccountVouchersModule } from \"../AccountVoucher/accountvoucher.module\";\r\nimport { AutoCompleteModule } from 'primeng/components/autocomplete/autocomplete'\r\nimport { TransactionModule } from \"../../common/Transaction Components/transaction.module\";\r\nimport { GenericPopupGridModule } from '../../common/popupLists/generic-grid/generic-popup-grid.module';\r\nimport { FileUploaderPopupModule } from '../../common/popupLists/file-uploader/file-uploader-popup.module';\r\nimport { DynamicFilterOptionModule } from '../../common/popupLists/dynamic-filter-option-popup/dynamic-filter-option-popup.module';\r\nimport { DeliveryOrderComponent } from '../../common/Transaction Components/delivery-order.component';\r\nimport { NgxDaterangepickerMd } from 'ngx-daterangepicker-material';\r\nimport { PurchaseService } from './components/purchase.service';\r\nimport { NgxPaginationModule } from 'ngx-pagination';\r\nimport { DebitNoteItemBaseListComponent } from './components/DebitNoteItemWise/debitnote-itembase-list.component';\r\nimport { DebitNoteItemBaseComponent } from './components/DebitNoteItemWise/debitnote-itembase.component';\r\nimport { AddPurchaseInvoiceComponent } from './components/purchaseinvoice/AddPurchaseInvoice';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    NgaModule,\r\n    routing,\r\n    ReactiveFormsModule,\r\n    Ng2SmartTableModule,\r\n    NguiAutoCompleteModule,\r\n    ModalModule.forRoot(),\r\n    // LoginModule,\r\n    AccountVouchersModule,\r\n    AutoCompleteModule,\r\n    TransactionModule,\r\n    GenericPopupGridModule.forRoot(),\r\n    FileUploaderPopupModule.forRoot(),\r\n    DynamicFilterOptionModule.forRoot(),\r\n    NgxDaterangepickerMd.forRoot(),\r\n    NgxPaginationModule\r\n  ],\r\n  declarations: [\r\n    Purchases,\r\n    DebitNoteItemBaseListComponent,\r\n    DebitNoteItemBaseComponent,\r\n\r\n    DeliveryOrderComponent,\r\n    // AddPurchaseInvoiceComponent\r\n   // InvoiceListComponent,\r\n\r\n  ],\r\n  providers: [\r\n    CanActivateTeam, TransactionService,PurchaseService\r\n  ],\r\n  exports: []\r\n})\r\nexport class PurchasesModule {\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/pages/Purchases/purchases.module.ts","import { Column } from './data-set/column';\r\nimport { Row } from './data-set/row';\r\nimport { DataSet } from './data-set/data-set';\r\nimport { DataSource } from './data-source/data-source';\r\nimport { Subject, Observable } from 'rxjs/Rx';\r\nimport { EventEmitter } from '@angular/core';\r\nimport { Deferred, getDeepFromObject } from './helpers';\r\n\r\nexport class Grid {\r\n\r\n  createFormShown: boolean = false;\r\n\r\n  source: DataSource;\r\n  settings: any;\r\n  dataSet: DataSet;\r\n\r\n  onSelectRowSource = new Subject<any>();\r\n\r\n  constructor(source: DataSource, settings) {\r\n    this.setSettings(settings);\r\n    this.setSource(source);\r\n  }\r\n\r\n  showActionColumn(position: string): boolean {\r\n    return this.isCurrentActionsPosition(position) && this.isActionsVisible();\r\n  }\r\n\r\n  isCurrentActionsPosition(position: string): boolean {\r\n    return position == this.getSetting('actions.position')\r\n  }\r\n\r\n  isActionsVisible(): boolean {\r\n    return this.getSetting('actions.add') || this.getSetting('actions.edit') || this.getSetting('actions.delete');\r\n  }\r\n\r\n  isMultiSelectVisible(): boolean {\r\n    return this.getSetting('selectMode') === 'multi';\r\n  }\r\n\r\n  getNewRow(): Row {\r\n    return this.dataSet.newRow;\r\n  }\r\n\r\n  setSettings(settings: Object): void {\r\n    this.settings = settings;\r\n    this.dataSet = new DataSet([], this.getSetting('columns'));\r\n\r\n    if (this.source) {\r\n      this.source.refresh();\r\n    }\r\n  }\r\n\r\n  getDataSet(): DataSet {\r\n    return this.dataSet;\r\n  }\r\n\r\n  setSource(source: DataSource): void {\r\n    this.source = this.prepareSource(source);\r\n\r\n    this.source.onChanged().subscribe((changes) => this.processDataChange(changes));\r\n\r\n    this.source.onUpdated().subscribe((data) => {\r\n      let changedRow = this.dataSet.findRowByData(data);\r\n      changedRow.setData(data);\r\n    });\r\n  }\r\n\r\n  getSetting(name: string, defaultValue?: any): any {\r\n    return getDeepFromObject(this.settings, name, defaultValue);\r\n  }\r\n\r\n  getColumns(): Array<Column> {\r\n    return this.dataSet.getColumns();\r\n  }\r\n\r\n  getRows(): Array<Row> {\r\n    return this.dataSet.getRows();\r\n  }\r\n\r\n  selectRow(row: Row): void {\r\n    this.dataSet.selectRow(row);\r\n  }\r\n\r\n  multipleSelectRow(row: Row): void {\r\n    this.dataSet.multipleSelectRow(row);\r\n  }\r\n\r\n  onSelectRow(): Observable<any> {\r\n    return this.onSelectRowSource.asObservable();\r\n  }\r\n\r\n  edit(row: Row): void {\r\n    row.isInEditing = true;\r\n  }\r\n\r\n  view(row: Row): void {\r\n    row.isInEditing = true;\r\n  }\r\n\r\n  create(row: Row, confirmEmitter: EventEmitter<any>): void {\r\n\r\n    let deferred = new Deferred();\r\n    deferred.promise.then((newData) => {\r\n      newData = newData ? newData : row.getNewData();\r\n      this.source.prepend(newData).then(() => {\r\n        this.createFormShown = false;\r\n        this.dataSet.createNewRow();\r\n      })\r\n    }).catch((err) => {\r\n      // doing nothing\r\n    });\r\n\r\n    if (this.getSetting('add.confirmCreate')) {\r\n      confirmEmitter.emit({\r\n        newData: row.getNewData(),\r\n        source: this.source,\r\n        confirm: deferred\r\n      });\r\n    } else {\r\n      deferred.resolve();\r\n    }\r\n  }\r\n\r\n  save(row: Row, confirmEmitter: EventEmitter<any>): void {\r\n\r\n    let deferred = new Deferred();\r\n    deferred.promise.then((newData) => {\r\n      newData = newData ? newData : row.getNewData();\r\n      this.source.update(row.getData(), newData).then(() => {\r\n        row.isInEditing = false;\r\n      })\r\n    }).catch((err) => {\r\n      // doing nothing\r\n    });\r\n\r\n    if (this.getSetting('edit.confirmSave')) {\r\n      confirmEmitter.emit({\r\n        data: row.getData(),\r\n        newData: row.getNewData(),\r\n        source: this.source,\r\n        confirm: deferred\r\n      });\r\n    } else {\r\n      deferred.resolve();\r\n    }\r\n  }\r\n\r\n  delete(row: Row, confirmEmitter: EventEmitter<any>): void {\r\n\r\n    let deferred = new Deferred();\r\n    deferred.promise.then(() => {\r\n      this.source.remove(row.getData());\r\n    }).catch((err) => {\r\n      // doing nothing\r\n    });\r\n\r\n    if (this.getSetting('delete.confirmDelete')) {\r\n      confirmEmitter.emit({\r\n        data: row.getData(),\r\n        source: this.source,\r\n        confirm: deferred\r\n      });\r\n    } else {\r\n      deferred.resolve();\r\n    }\r\n  }\r\n\r\n  processDataChange(changes): void {\r\n    if (this.shouldProcessChange(changes)) {\r\n      this.dataSet.setData(changes['elements']);\r\n      if (this.getSetting('selectMode') !== 'multi') {\r\n        let row = this.determineRowToSelect(changes);\r\n\r\n        if (row) {\r\n          this.onSelectRowSource.next(row);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  shouldProcessChange(changes): boolean {\r\n    if (['filter', 'sort', 'page', 'remove', 'refresh', 'load', 'paging'].indexOf(changes['action']) !== -1) {\r\n      return true;\r\n    } else if (['prepend', 'append'].indexOf(changes['action']) !== -1 && !this.getSetting('pager.display')) {\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  // TODO: move to selectable? Separate directive\r\n  determineRowToSelect(changes): Row {\r\n\r\n    if (['load', 'page', 'filter', 'sort', 'refresh'].indexOf(changes['action']) !== -1) {\r\n      return this.dataSet.select();\r\n    }\r\n    if (changes['action'] === 'remove') {\r\n      if (changes['elements'].length === 0) {\r\n        // we have to store which one to select as the data will be reloaded\r\n        this.dataSet.willSelectLastRow();\r\n      } else {\r\n        return this.dataSet.selectPreviousRow();\r\n      }\r\n    }\r\n    if (changes['action'] === 'append') {\r\n      // we have to store which one to select as the data will be reloaded\r\n      this.dataSet.willSelectLastRow();\r\n    }\r\n    if (changes['action'] === 'add') {\r\n      return this.dataSet.selectFirstRow();\r\n    }\r\n    if (changes['action'] === 'update') {\r\n      return this.dataSet.selectFirstRow();\r\n    }\r\n    if (changes['action'] === 'prepend') {\r\n      // we have to store which one to select as the data will be reloaded\r\n      this.dataSet.willSelectFirstRow();\r\n    }\r\n    return null;\r\n  }\r\n\r\n  prepareSource(source): DataSource {\r\n    let initialSource = this.getInitialSort();\r\n    if (initialSource && initialSource['field'] && initialSource['direction']) {\r\n      source.setSort([initialSource], false);\r\n    }\r\n    if (this.getSetting('pager.display') === true) {\r\n      source.setPaging(1, this.getSetting('pager.perPage'), false);\r\n    }\r\n\r\n    source.refresh();\r\n    return source;\r\n  }\r\n\r\n  getInitialSort() {\r\n    let sortConf = {};\r\n    this.getColumns().forEach((column: Column) => {\r\n      if (column.isSortable && column.defaultSortDirection) {\r\n        sortConf['field'] = column.id;\r\n        sortConf['direction'] = column.defaultSortDirection;\r\n        sortConf['compare'] = column.getCompareFunction();\r\n      }\r\n    });\r\n    return sortConf;\r\n  }\r\n\r\n  getSelectedRows(): Array<any> {\r\n    return this.dataSet.getRows()\r\n      .filter(r => r.isSelected)\r\n      .map(r => r.getData());\r\n  }\r\n\r\n  selectAllRows(status) {\r\n    this.dataSet.getRows()\r\n      .forEach(r => r.isSelected = status);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/~/ng2-smart-table/src/ng2-smart-table/lib/grid.ts","import { Column } from './column';\r\nimport { DataSet } from './data-set';\r\nimport { Row } from './row';\r\n\r\nexport class Cell {\r\n\r\n  newValue: any = '';\r\n  protected static PREPARE = (value) => value;\r\n\r\n  constructor(protected value: any, protected row: Row, protected column, protected dataSet: DataSet) {\r\n    this.newValue = value;\r\n  }\r\n\r\n  getColumn(): Column {\r\n    return this.column;\r\n  }\r\n\r\n  getRow(): Row {\r\n    return this.row;\r\n  }\r\n\r\n  getValue(): any {\r\n    let valid = this.column.getValuePrepareFunction() instanceof Function;\r\n    let prepare = valid ? this.column.getValuePrepareFunction() : Cell.PREPARE;\r\n    return prepare.call(null, this.value, this.row.getData());\r\n  }\r\n\r\n  setValue(value: any): any {\r\n    this.newValue = value;\r\n  }\r\n\r\n  getId(): string {\r\n    return this.getColumn().id;\r\n  }\r\n\r\n  getTitle(): string {\r\n    return this.getColumn().title;\r\n  }\r\n\r\n  isEditable(): boolean {\r\n    return this.getColumn().isEditable;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/~/ng2-smart-table/src/ng2-smart-table/lib/data-set/cell.ts","import { Component, Output, EventEmitter, Input } from '@angular/core';\r\n\r\nimport { Cell } from '../../../lib/data-set/cell';\r\n\r\nexport class DefaultEditor implements Editor {\r\n  @Input() cell: Cell;\r\n  @Input() inputClass: string;\r\n\r\n  @Output() onStopEditing = new EventEmitter<any>();\r\n  @Output() onEdited = new EventEmitter<any>();\r\n  @Output() onClick = new EventEmitter<any>();\r\n}\r\n\r\nexport interface Editor {\r\n  cell: Cell;\r\n  inputClass: string;\r\n  onStopEditing: EventEmitter<any>;\r\n  onEdited: EventEmitter<any>;\r\n  onClick: EventEmitter<any>;\r\n}\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/~/ng2-smart-table/src/ng2-smart-table/components/cell/cell-editors/default-editor.ts","import { Subject, Observable } from 'rxjs/Rx';\r\n\r\nexport abstract class DataSource {\r\n\r\n  protected onChangedSource = new Subject<any>();\r\n  protected onAddedSource = new Subject<any>();\r\n  protected onUpdatedSource = new Subject<any>();\r\n  protected onRemovedSource = new Subject<any>();\r\n\r\n  abstract getAll(): Promise<any>;\r\n  abstract getElements(): Promise<any>;\r\n  abstract getSort(): any;\r\n  abstract getFilter(): any;\r\n  abstract getPaging(): any;\r\n  abstract count(): number;\r\n\r\n  refresh(): void {\r\n    this.emitOnChanged('refresh');\r\n  }\r\n\r\n  load(data: Array<any>): Promise<any> {\r\n    this.emitOnChanged('load');\r\n    return Promise.resolve();\r\n  }\r\n\r\n  onChanged(): Observable<any> {\r\n    return this.onChangedSource.asObservable();\r\n  }\r\n\r\n  onAdded(): Observable<any> {\r\n    return this.onAddedSource.asObservable();\r\n  }\r\n\r\n  onUpdated(): Observable<any> {\r\n    return this.onUpdatedSource.asObservable();\r\n  }\r\n\r\n  onRemoved(): Observable<any> {\r\n    return this.onRemovedSource.asObservable();\r\n  }\r\n\r\n  prepend(element: any): Promise<any> {\r\n    this.emitOnAdded(element);\r\n    this.emitOnChanged('prepend');\r\n    return Promise.resolve();\r\n  }\r\n\r\n  append(element: any): Promise<any> {\r\n    this.emitOnAdded(element);\r\n    this.emitOnChanged('append');\r\n    return Promise.resolve();\r\n  }\r\n\r\n  add(element: any): Promise<any> {\r\n    this.emitOnAdded(element);\r\n    this.emitOnChanged('add');\r\n    return Promise.resolve();\r\n  }\r\n\r\n  remove(element: any): Promise<any> {\r\n    this.emitOnRemoved(element);\r\n    this.emitOnChanged('remove');\r\n    return Promise.resolve();\r\n  }\r\n\r\n  update(element: any, values: any): Promise<any> {\r\n    this.emitOnUpdated(element);\r\n    this.emitOnChanged('update');\r\n    return Promise.resolve();\r\n  }\r\n\r\n  empty(): Promise<any> {\r\n    this.emitOnChanged('empty');\r\n    return Promise.resolve();\r\n  }\r\n\r\n  setSort(conf: Array<any>, doEmit?: boolean): void {\r\n    if (doEmit) {\r\n      this.emitOnChanged('sort');\r\n    }\r\n  }\r\n\r\n  setFilter(conf: Array<any>, andOperator?: boolean, doEmit?: boolean): void {\r\n    if (doEmit) {\r\n      this.emitOnChanged('filter');\r\n    }\r\n  }\r\n\r\n  addFilter(fieldConf: {}, andOperator?: boolean, doEmit?: boolean): void {\r\n    if (doEmit) {\r\n      this.emitOnChanged('filter');\r\n    }\r\n  }\r\n\r\n  setPaging(page: number, perPage: number, doEmit?: boolean): void {\r\n    if (doEmit) {\r\n      this.emitOnChanged('paging');\r\n    }\r\n  }\r\n\r\n  setPage(page: number, doEmit?: boolean): void {\r\n    if (doEmit) {\r\n      this.emitOnChanged('page');\r\n    }\r\n  }\r\n\r\n  protected emitOnRemoved(element: any): void {\r\n    this.onRemovedSource.next(element);\r\n  }\r\n\r\n  protected emitOnUpdated(element: any): void {\r\n    this.onUpdatedSource.next(element);\r\n  }\r\n\r\n  protected emitOnAdded(element: any): void {\r\n    this.onAddedSource.next(element);\r\n  }\r\n\r\n  protected emitOnChanged(action: string): void {\r\n    this.getElements().then((elements) => this.onChangedSource.next({\r\n      action: action,\r\n      elements: elements,\r\n      paging: this.getPaging(),\r\n      filter: this.getFilter(),\r\n      sort: this.getSort()\r\n    }));\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/~/ng2-smart-table/src/ng2-smart-table/lib/data-source/data-source.ts","import { DataSet } from './data-set';\r\n\r\nexport class Column {\r\n\r\n  public title: string = '';\r\n  public type: string = '';\r\n  public class: string = '';\r\n  public isSortable: boolean = false;\r\n  public isEditable: boolean = true;\r\n  public isFilterable: boolean = false;\r\n  public sortDirection: string = '';\r\n  public defaultSortDirection: string = '';\r\n  public editor: { type: string, config: any, component: any } = { type: '', config: {}, component: null };\r\n  public filter: { type: string, config: any } = { type: '', config: {} };\r\n  public renderComponent: any = null;\r\n  compareFunction: Function;\r\n  valuePrepareFunction: Function;\r\n  filterFunction: Function;\r\n\r\n  constructor(public id: string, protected settings: any, protected dataSet: DataSet) {\r\n    this.process();\r\n  }\r\n\r\n  public getCompareFunction(): Function {\r\n    return this.compareFunction;\r\n  }\r\n\r\n  public getValuePrepareFunction(): Function {\r\n    return this.valuePrepareFunction;\r\n  }\r\n\r\n  public getFilterFunction(): Function {\r\n    return this.filterFunction;\r\n  }\r\n\r\n  public getConfig(): any {\r\n    return this.editor.config;\r\n  }\r\n\r\n  getFilterType(): any {\r\n    return this.filter && this.filter.type;\r\n  }\r\n\r\n  getFilterConfig(): any {\r\n    return this.filter && this.filter.config;\r\n  }\r\n\r\n  protected process(): void {\r\n    this.title = this.settings['title'];\r\n    this.class = this.settings['class'];\r\n    this.type = this.prepareType();\r\n    this.editor = this.settings['editor'];\r\n    this.filter = this.settings['filter'];\r\n    this.renderComponent = this.settings['renderComponent'];\r\n\r\n    this.isFilterable = typeof this.settings['filter'] === 'undefined' ? true : !!this.settings['filter'];\r\n    this.defaultSortDirection = ['asc', 'desc'].indexOf(this.settings['sortDirection']) !== -1 ? this.settings['sortDirection'] : '';\r\n    this.isSortable = typeof this.settings['sort'] === 'undefined' ? true : !!this.settings['sort'];\r\n    this.isEditable = typeof this.settings['editable'] === 'undefined' ? true : !!this.settings['editable'];\r\n    this.sortDirection = this.prepareSortDirection();\r\n\r\n    this.compareFunction = this.settings['compareFunction'];\r\n    this.valuePrepareFunction = this.settings['valuePrepareFunction'];\r\n    this.filterFunction = this.settings['filterFunction'];\r\n  }\r\n\r\n  prepareType(): string {\r\n    return this.settings['type'] || this.determineType();\r\n  }\r\n\r\n  prepareSortDirection(): string {\r\n    return this.settings['sort'] === 'desc' ? 'desc' : 'asc';\r\n  }\r\n\r\n  determineType(): string {\r\n    // TODO: determine type by data\r\n    return 'text';\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/~/ng2-smart-table/src/ng2-smart-table/lib/data-set/column.ts","import { Cell } from './cell';\r\nimport { Column } from './column';\r\nimport { DataSet } from './data-set';\r\n\r\nexport class Row {\r\n\r\n  isSelected: boolean = false;\r\n  isInEditing: boolean = false;\r\n  cells: Array<Cell> = [];\r\n\r\n\r\n  constructor(public index: number, protected data: any, protected _dataSet: DataSet) {\r\n    this.process();\r\n  }\r\n\r\n  getCell(column: Column): Cell {\r\n    return this.cells.find(el => el.getColumn() === column);\r\n  }\r\n\r\n  getCells() {\r\n    return this.cells;\r\n  }\r\n\r\n  getData(): any {\r\n    return this.data;\r\n  }\r\n\r\n  getNewData(): any {\r\n    let values = Object.assign({}, this.data);\r\n    this.getCells().forEach((cell) => values[cell.getColumn().id] = cell.newValue);\r\n    return values;\r\n  }\r\n\r\n  setData(data): any {\r\n    this.data = data;\r\n    this.process();\r\n  }\r\n\r\n  process(): void {\r\n    this.cells = [];\r\n    this._dataSet.getColumns().forEach((column: Column) => {\r\n      let cell = this.createCell(column);\r\n      this.cells.push(cell);\r\n    });\r\n  }\r\n\r\n  createCell(column: Column): Cell {\r\n    let value = typeof this.data[column.id] === 'undefined' ? '' : this.data[column.id];\r\n    return new Cell(value, this, column, this._dataSet);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/~/ng2-smart-table/src/ng2-smart-table/lib/data-set/row.ts","import { Component, Input, Output, EventEmitter, OnInit, OnDestroy } from '@angular/core';\r\nimport { Subscription } from 'rxjs/Subscription';\r\n\r\nimport { Column } from '../../../lib/data-set/column';\r\n\r\nexport class DefaultFilter implements Filter, OnDestroy {\r\n\r\n  delay: number = 300;\r\n  changesSubscription: Subscription;\r\n  @Input() query: string;\r\n  @Input() inputClass: string;\r\n  @Input() column: Column;\r\n  @Output() filter = new EventEmitter<string>();\r\n\r\n  ngOnDestroy() {\r\n    if (this.changesSubscription)\r\n      this.changesSubscription.unsubscribe();\r\n  }\r\n\r\n  setFilter() {\r\n    this.filter.emit(this.query);\r\n  }\r\n}\r\n\r\nexport interface Filter {\r\n\r\n  delay?: number;\r\n  changesSubscription?: Subscription;\r\n  query: string;\r\n  inputClass: string;\r\n  column: Column;\r\n  filter: EventEmitter<string>;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/~/ng2-smart-table/src/ng2-smart-table/components/filter/filter-types/default-filter.ts","function isSpecificValue(val) {\r\n  return (\r\n    val instanceof Buffer\r\n    || val instanceof Date\r\n    || val instanceof RegExp\r\n  ) ? true : false;\r\n}\r\n\r\nfunction cloneSpecificValue(val): any {\r\n  if (val instanceof Buffer) {\r\n    var x = new Buffer(val.length);\r\n    val.copy(x);\r\n    return x;\r\n  } else if (val instanceof Date) {\r\n    return new Date(val.getTime());\r\n  } else if (val instanceof RegExp) {\r\n    return new RegExp(val);\r\n  } else {\r\n    throw new Error('Unexpected situation');\r\n  }\r\n}\r\n\r\n/**\r\n * Recursive cloning array.\r\n */\r\nfunction deepCloneArray(arr): any {\r\n  var clone = [];\r\n  arr.forEach(function (item, index) {\r\n    if (typeof item === 'object' && item !== null) {\r\n      if (Array.isArray(item)) {\r\n        clone[index] = deepCloneArray(item);\r\n      } else if (isSpecificValue(item)) {\r\n        clone[index] = cloneSpecificValue(item);\r\n      } else {\r\n        clone[index] = deepExtend({}, item);\r\n      }\r\n    } else {\r\n      clone[index] = item;\r\n    }\r\n  });\r\n  return clone;\r\n}\r\n\r\n/**\r\n * Extending object that entered in first argument.\r\n *\r\n * Returns extended object or false if have no target object or incorrect type.\r\n *\r\n * If you wish to clone source object (without modify it), just use empty new\r\n * object as first argument, like this:\r\n *   deepExtend({}, yourObj_1, [yourObj_N]);\r\n */\r\nexport const deepExtend = function (...objects): any {\r\n  if (arguments.length < 1 || typeof arguments[0] !== 'object') {\r\n    return false;\r\n  }\r\n\r\n  if (arguments.length < 2) {\r\n    return arguments[0];\r\n  }\r\n\r\n  var target = arguments[0];\r\n\r\n  // convert arguments to array and cut off target object\r\n  var args = Array.prototype.slice.call(arguments, 1);\r\n\r\n  var val, src, clone;\r\n\r\n  args.forEach(function (obj) {\r\n    // skip argument if it is array or isn't object\r\n    if (typeof obj !== 'object' || Array.isArray(obj)) {\r\n      return;\r\n    }\r\n\r\n    Object.keys(obj).forEach(function (key) {\r\n      src = target[key]; // source value\r\n      val = obj[key]; // new value\r\n\r\n      // recursion prevention\r\n      if (val === target) {\r\n        return;\r\n\r\n        /**\r\n         * if new value isn't object then just overwrite by new value\r\n         * instead of extending.\r\n         */\r\n      } else if (typeof val !== 'object' || val === null) {\r\n        target[key] = val;\r\n        return;\r\n\r\n        // just clone arrays (and recursive clone objects inside)\r\n      } else if (Array.isArray(val)) {\r\n        target[key] = deepCloneArray(val);\r\n        return;\r\n\r\n        // custom cloning and overwrite for specific objects\r\n      } else if (isSpecificValue(val)) {\r\n        target[key] = cloneSpecificValue(val);\r\n        return;\r\n\r\n        // overwrite by new value if source isn't object or array\r\n      } else if (typeof src !== 'object' || src === null || Array.isArray(src)) {\r\n        target[key] = deepExtend({}, val);\r\n        return;\r\n\r\n        // source value and new value is objects both, extending...\r\n      } else {\r\n        target[key] = deepExtend(src, val);\r\n        return;\r\n      }\r\n    });\r\n  });\r\n\r\n  return target;\r\n};\r\n\r\nexport class Deferred {\r\n\r\n  promise: Promise<any>;\r\n  \r\n  resolve: any;\r\n  reject: any;\r\n  \r\n  constructor () {\r\n    this.promise = new Promise((resolve, reject) => {\r\n      this.resolve = resolve;\r\n      this.reject = reject;\r\n    })\r\n  }\r\n}\r\n\r\n// getDeepFromObject({result: {data: 1}}, 'result.data', 2); // returns 1\r\nexport function getDeepFromObject(object = {}, name: string, defaultValue?: any) {\r\n  let keys = name.split('.');\r\n  // clone the object\r\n  let level = deepExtend({}, object);\r\n  keys.forEach((k) => {\r\n    if (level && typeof level[k] !== 'undefined') {\r\n      level = level[k];\r\n    }\r\n  });\r\n\r\n  return typeof level === 'undefined' ? defaultValue : level;\r\n}\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/~/ng2-smart-table/src/ng2-smart-table/lib/helpers.ts","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { Ng2CompleterModule } from 'ng2-completer';\r\n\r\nimport { NG2_SMART_TABLE_DIRECTIVES } from './ng2-smart-table.directives';\r\nimport { CellComponent } from './ng2-smart-table/components/cell/cell.component';\r\nimport {\r\n  ViewCellComponent,\r\n  CustomViewComponent } from './ng2-smart-table/components/cell/cell-view-mode';\r\nimport {\r\n  EditCellComponent,\r\n  DefaultEditComponent,\r\n  CustomEditComponent } from './ng2-smart-table/components/cell/cell-edit-mode';\r\nimport {\r\n  CompleterEditorComponent,\r\n  InputEditorComponent,\r\n  SelectEditorComponent,\r\n  TextareaEditorComponent,\r\n  CheckboxEditorComponent } from './ng2-smart-table/components/cell/cell-editors';\r\nimport { FilterComponent } from './ng2-smart-table/components/filter/filter.component';\r\nimport {\r\n  InputFilterComponent,\r\n  SelectFilterComponent,\r\n  CheckboxFilterComponent,\r\n  CompleterFilterComponent } from './ng2-smart-table/components/filter/filter-types';\r\nimport { PagerComponent } from './ng2-smart-table/components/pager/pager.component';\r\nimport { NG2_SMART_TABLE_THEAD_DIRECTIVES } from './ng2-smart-table/components/thead/thead.directives';\r\nimport { NG2_SMART_TABLE_TBODY_DIRECTIVES } from './ng2-smart-table/components/tbody/tbody.directives';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    Ng2CompleterModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n  ],\r\n  declarations: [\r\n    CellComponent,\r\n    ViewCellComponent,\r\n    DefaultEditComponent,\r\n    CustomEditComponent,\r\n    CustomViewComponent,\r\n    EditCellComponent,\r\n    CompleterEditorComponent,\r\n    InputEditorComponent,\r\n    SelectEditorComponent,\r\n    TextareaEditorComponent,\r\n    CheckboxEditorComponent,\r\n    FilterComponent,\r\n    InputFilterComponent,\r\n    SelectFilterComponent,\r\n    CheckboxFilterComponent,\r\n    CompleterFilterComponent,\r\n    PagerComponent,\r\n    ...NG2_SMART_TABLE_THEAD_DIRECTIVES,\r\n    ...NG2_SMART_TABLE_TBODY_DIRECTIVES,\r\n    ...NG2_SMART_TABLE_DIRECTIVES\r\n  ],\r\n  exports: [\r\n    ...NG2_SMART_TABLE_DIRECTIVES\r\n  ]\r\n})\r\nexport class Ng2SmartTableModule {\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/~/ng2-smart-table/src/ng2-smart-table.module.ts","module.exports = \"input, textarea {\\n  width: 100%;\\n  line-height: normal;\\n  padding: .375rem .75rem; }\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/~/ng2-smart-table/src/ng2-smart-table/components/cell/cell-editors/editor.component.scss\n// module id = 1172\n// module chunks = 1 2 3 4 5 6","import { LocalSorter } from './local.sorter';\r\nimport { LocalFilter } from './local.filter';\r\nimport { LocalPager } from './local.pager';\r\nimport { DataSource } from '../data-source';\r\nimport { deepExtend } from '../../helpers';\r\n\r\nexport class LocalDataSource extends DataSource {\r\n\r\n  protected data: Array<any> = [];\r\n  protected filteredAndSorted: Array<any> = [];\r\n  protected sortConf: Array<any> = [];\r\n  protected filterConf = {\r\n    filters: [],\r\n    andOperator: true\r\n  };\r\n  protected pagingConf = {};\r\n\r\n  constructor(data: Array<any> = []) {\r\n    super();\r\n\r\n    this.data = data;\r\n  }\r\n\r\n  load(data: Array<any>): Promise<any> {\r\n    this.data = data;\r\n\r\n    return super.load(data);\r\n  }\r\n\r\n  prepend(element: any): Promise<any> {\r\n    this.reset(true);\r\n\r\n    this.data.unshift(element);\r\n    return super.prepend(element);\r\n  }\r\n\r\n  append(element: any): Promise<any> {\r\n    this.reset(true);\r\n\r\n    this.data.push(element);\r\n    return super.append(element);\r\n  }\r\n\r\n  add(element: any): Promise<any> {\r\n    this.data.push(element);\r\n\r\n    return super.add(element);\r\n  }\r\n\r\n  remove(element: any): Promise<any> {\r\n    this.data = this.data.filter(el => el !== element);\r\n\r\n    return super.remove(element);\r\n  }\r\n\r\n  update(element: any, values: any): Promise<any> {\r\n    return new Promise((resolve, reject) => {\r\n      this.find(element).then((found) => {\r\n        found = deepExtend(found, values);\r\n        super.update(found, values).then(resolve).catch(reject);\r\n      }).catch(reject);\r\n    });\r\n  }\r\n\r\n  find(element: any): Promise<any> {\r\n    let found = this.data.find(el => el === element);\r\n    if (found) {\r\n      return Promise.resolve(found);\r\n    }\r\n\r\n    return Promise.reject(new Error('Element was not found in the dataset'));\r\n  }\r\n\r\n  getElements(): Promise<any> {\r\n    let data = this.data.slice(0);\r\n    return Promise.resolve(this.prepareData(data));\r\n  }\r\n\r\n  getAll(): Promise<any> {\r\n    let data = this.data.slice(0);\r\n    return Promise.resolve(data);\r\n  }\r\n\r\n  reset(silent = false): void {\r\n    if (silent) {\r\n      this.filterConf = {\r\n        filters: [],\r\n        andOperator: true\r\n      };\r\n      this.sortConf = [];\r\n      this.pagingConf['page'] = 1;\r\n    } else {\r\n      this.setFilter([], true, false);\r\n      this.setSort([], false);\r\n      this.setPage(1);\r\n    }\r\n  }\r\n\r\n  empty(): Promise<any> {\r\n    this.data = [];\r\n\r\n    return super.empty();\r\n  }\r\n\r\n  count(): number {\r\n    return this.filteredAndSorted.length;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * Array of conf objects\r\n   * [\r\n   *  {field: string, direction: asc|desc|null, compare: Function|null},\r\n   * ]\r\n   * @param conf\r\n   * @param doEmit\r\n   * @returns {LocalDataSource}\r\n   */\r\n  setSort(conf: Array<any>, doEmit = true): LocalDataSource {\r\n    if (conf !== null) {\r\n\r\n      conf.forEach((fieldConf) => {\r\n        if (!fieldConf['field'] || typeof fieldConf['direction']  === 'undefined') {\r\n          throw new Error('Sort configuration object is not valid');\r\n        }\r\n      });\r\n      this.sortConf = conf;\r\n    }\r\n\r\n    super.setSort(conf, doEmit);\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * Array of conf objects\r\n   * [\r\n   *  {field: string, search: string, filter: Function|null},\r\n   * ]\r\n   * @param conf\r\n   * @param andOperator\r\n   * @param doEmit\r\n   * @returns {LocalDataSource}\r\n   */\r\n  setFilter(conf: Array<any>, andOperator = true, doEmit = true): LocalDataSource {\r\n    if (conf && conf.length > 0) {\r\n      conf.forEach((fieldConf) => {\r\n        this.addFilter(fieldConf, andOperator, false);\r\n      });\r\n    } else {\r\n      this.filterConf = {\r\n        filters: [],\r\n        andOperator: true\r\n      };\r\n    }\r\n    this.filterConf.andOperator = andOperator;\r\n    this.pagingConf['page'] = 1;\r\n    \r\n    super.setFilter(conf, andOperator, doEmit);\r\n    return this;\r\n  }\r\n\r\n  addFilter(fieldConf, andOperator = true, doEmit: boolean = true): LocalDataSource {\r\n    if (!fieldConf['field'] || typeof fieldConf['search'] === 'undefined') {\r\n      throw new Error('Filter configuration object is not valid');\r\n    }\r\n\r\n    let found = false;\r\n    this.filterConf.filters.forEach((currentFieldConf, index) => {\r\n      if (currentFieldConf['field'] === fieldConf['field']) {\r\n        this.filterConf.filters[index] = fieldConf;\r\n        found = true;\r\n      }\r\n    });\r\n    if (!found) {\r\n      this.filterConf.filters.push(fieldConf);\r\n    }\r\n    this.filterConf.andOperator = andOperator;\r\n    super.addFilter(fieldConf, andOperator, doEmit);\r\n    return this;\r\n  }\r\n\r\n  setPaging(page: number, perPage: number, doEmit: boolean = true): LocalDataSource {\r\n    this.pagingConf['page'] = page;\r\n    this.pagingConf['perPage'] = perPage;\r\n\r\n    super.setPaging(page, perPage, doEmit);\r\n    return this;\r\n  }\r\n\r\n  setPage(page: number, doEmit: boolean = true): LocalDataSource {\r\n    this.pagingConf['page'] = page;\r\n    super.setPage(page, doEmit);\r\n    return this;\r\n  }\r\n\r\n  getSort(): any {\r\n    return this.sortConf;\r\n  }\r\n\r\n  getFilter(): any {\r\n    return this.filterConf;\r\n  }\r\n\r\n  getPaging(): any {\r\n    return this.pagingConf;\r\n  }\r\n\r\n  protected prepareData(data: Array<any>): Array<any> {\r\n    data = this.filter(data);\r\n    data = this.sort(data);\r\n    this.filteredAndSorted = data.slice(0);\r\n\r\n    return this.paginate(data);\r\n  }\r\n\r\n  protected sort(data: Array<any>): Array<any> {\r\n    if (this.sortConf) {\r\n      this.sortConf.forEach((fieldConf) => {\r\n        data = LocalSorter\r\n          .sort(data, fieldConf['field'], fieldConf['direction'], fieldConf['compare']);\r\n      });\r\n    }\r\n    return data;\r\n  }\r\n\r\n  // TODO: refactor?\r\n  protected filter(data: Array<any>): Array<any> {\r\n    if (this.filterConf.filters) {\r\n      if (this.filterConf.andOperator) {\r\n        this.filterConf.filters.forEach((fieldConf) => {\r\n          data = LocalFilter\r\n            .filter(data, fieldConf['field'], fieldConf['search'], fieldConf['filter']);\r\n        });\r\n      } else {\r\n        let mergedData = [];\r\n        this.filterConf.filters.forEach((fieldConf) => {\r\n          mergedData = mergedData.concat(LocalFilter\r\n            .filter(data, fieldConf['field'], fieldConf['search'], fieldConf['filter']));\r\n        });\r\n        // remove non unique items\r\n        data = mergedData.filter((elem, pos, arr) => {\r\n          return arr.indexOf(elem) === pos;\r\n        });\r\n      }\r\n    }\r\n    return data;\r\n  }\r\n\r\n  protected paginate(data: Array<any>): Array<any> {\r\n    if (this.pagingConf && this.pagingConf['page'] && this.pagingConf['perPage']) {\r\n      data = LocalPager.paginate(data, this.pagingConf['page'], this.pagingConf['perPage']);\r\n    }\r\n    return data;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/~/ng2-smart-table/src/ng2-smart-table/lib/data-source/local/local.data-source.ts","import { Component, Output, EventEmitter, Input } from '@angular/core';\r\n\r\nimport { Cell } from '../../../lib/data-set/cell';\r\n\r\nexport class EditCellDefault {\r\n\r\n  @Input() cell: Cell;\r\n  @Input() inputClass: string = '';\r\n\r\n  @Output() edited = new EventEmitter<any>();\r\n\r\n  onEdited(event): boolean {\r\n    this.edited.next(event);\r\n    return false;\r\n  }\r\n\r\n  onStopEditing(): boolean {\r\n    this.cell.getRow().isInEditing = false;\r\n    return false;\r\n  }\r\n\r\n  onClick(event): void {\r\n    event.stopPropagation();\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/~/ng2-smart-table/src/ng2-smart-table/components/cell/cell-edit-mode/edit-cell-default.ts","import { MasterRepo } from \"../../repositories\";\r\nimport { ModuleWithProviders, NgModule } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\r\nimport { ReportFilterComponent } from \"./report-filter.component\";\r\nimport { NgxDaterangepickerMd } from \"ngx-daterangepicker-material\";\r\nimport { NguiAutoCompleteModule } from '@ngui/auto-complete';\r\nimport { OnlyNumber } from \"../../directives/onlynumber.directive\";\r\nimport { GenericPopupGridModule } from \"../generic-grid/generic-popup-grid.module\";\r\nimport { NepaliDatePickerModule } from \"../../nepali-date-picker/nepali-date-picker.module\";\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    NgxDaterangepickerMd.forRoot(),\r\n    NguiAutoCompleteModule,\r\n    GenericPopupGridModule.forRoot(),\r\n    NepaliDatePickerModule\r\n \r\n  \r\n  ],\r\n  declarations: [ReportFilterComponent,OnlyNumber],\r\n  providers:[MasterRepo],\r\n  exports: [ReportFilterComponent]\r\n})\r\nexport class ReportFilterModule {\r\n  static forRoot(): ModuleWithProviders {\r\n    return {\r\n      ngModule: ReportFilterModule,\r\n      providers: [MasterRepo]\r\n    };\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/common/popupLists/report-filter/report-filter.module.ts","\"use strict\";\r\nfunction __export(m) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n__export(require('./src/ng2-smart-table.directives'));\r\n__export(require('./src/ng2-smart-table/ng2-smart-table.component'));\r\n__export(require('./src/ng2-smart-table/lib'));\r\n__export(require('./src/ng2-smart-table.module'));\r\nvar cell_1 = require('./src/ng2-smart-table/lib/data-set/cell');\r\nexports.Cell = cell_1.Cell;\r\nvar default_editor_1 = require('./src/ng2-smart-table/components/cell/cell-editors/default-editor');\r\nexports.DefaultEditor = default_editor_1.DefaultEditor;\r\n//# sourceMappingURL=ng2-smart-table.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/~/ng2-smart-table/ng2-smart-table.js\n// module id = 1177\n// module chunks = 2 4 6 11","import { Ng2SmartTableComponent } from './ng2-smart-table/ng2-smart-table.component';\r\n\r\nexport const NG2_SMART_TABLE_DIRECTIVES = [Ng2SmartTableComponent];\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/~/ng2-smart-table/src/ng2-smart-table.directives.ts","import { Component, Input, Output, SimpleChange, EventEmitter, OnChanges, ViewEncapsulation } from '@angular/core';\r\n\r\nimport { Grid } from './lib/grid';\r\nimport { DataSource } from './lib/data-source/data-source';\r\nimport { Row } from './lib/data-set/row';\r\nimport { deepExtend } from './lib/helpers';\r\nimport { LocalDataSource } from './lib/data-source/local/local.data-source';\r\n\r\n@Component({\r\n  selector: 'ng2-smart-table',\r\n  styles: [require('./ng2-smart-table.scss')],\r\n  template: require('./ng2-smart-table.html')\r\n})\r\nexport class Ng2SmartTableComponent implements OnChanges {\r\n  menuItem: any;\r\n  @Input() source: any;\r\n  @Input() settings: Object = {};\r\n\r\n  @Output() public rowSelect: EventEmitter<any> = new EventEmitter<any>();\r\n  @Output() public userRowSelect: EventEmitter<any> = new EventEmitter<any>();\r\n  @Output() public delete: EventEmitter<any> = new EventEmitter<any>();\r\n  @Output() public edit: EventEmitter<any> = new EventEmitter<any>();\r\n  @Output() public view: EventEmitter<any> = new EventEmitter<any>();\r\n  @Output() public create: EventEmitter<any> = new EventEmitter<any>();\r\n  @Output() public deleteConfirm: EventEmitter<any> = new EventEmitter<any>();\r\n  @Output() public editConfirm: EventEmitter<any> = new EventEmitter<any>();\r\n  @Output() public viewConfirm: EventEmitter<any> = new EventEmitter<any>();\r\n  @Output() public createConfirm: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n  grid: Grid;\r\n  defaultSettings: Object = {\r\n\r\n    mode: 'inline', // inline|external|click-to-edit\r\n    selectMode: 'single', // single|multi\r\n    hideHeader: false,\r\n    hideSubHeader: false,\r\n    actions: {\r\n      columnTitle: 'Actions',\r\n      add: true,\r\n      edit: true,\r\n      view: true,\r\n      delete: true,\r\n      position: 'left' // left|right\r\n    },\r\n    filter: {\r\n      inputClass: '',\r\n    },\r\n    edit: {\r\n      inputClass: '',\r\n      editButtonContent: 'Edit',\r\n      saveButtonContent: 'Update',\r\n      cancelButtonContent: 'Cancel',\r\n      confirmSave: false\r\n    },\r\n    view: {\r\n      inputClass: '',\r\n      viewButtonContent: '',\r\n      saveButtonContent: 'Update',\r\n      cancelButtonContent: 'Cancel',\r\n      confirmSave: false\r\n    },\r\n    add: {\r\n      inputClass: '',\r\n      addButtonContent: 'Add New',\r\n      createButtonContent: 'Create',\r\n      cancelButtonContent: 'Cancel',\r\n      confirmCreate: false\r\n    },\r\n    delete: {\r\n      deleteButtonContent: 'Delete',\r\n      confirmDelete: false\r\n    },\r\n    attr: {\r\n      id: '',\r\n      class: '',\r\n    },\r\n    noDataMessage: 'No data found',\r\n    columns: {},\r\n    pager: {\r\n      display: true,\r\n      perPage: 10\r\n    }\r\n  };\r\n\r\n  isAllSelected: boolean = false;\r\n\r\n  ngOnChanges(changes: { [propertyName: string]: SimpleChange }) {\r\n    if (this.grid) {\r\n      if (changes['settings']) {\r\n        this.grid.setSettings(this.prepareSettings());\r\n      }\r\n      if (changes['source']) {\r\n        this.grid.setSource(this.source);\r\n      }\r\n    } else {\r\n      this.initGrid();\r\n    }\r\n  }\r\n\r\n  editRowSelect(row: Row) {\r\n    if (this.grid.getSetting('selectMode') === 'multi')\r\n      this.onMultipleSelectRow(row);\r\n    else\r\n      this.onSelectRow(row);\r\n  }\r\n\r\n  viewRowSelect(row: Row) {\r\n    if (this.grid.getSetting('selectMode') === 'multi')\r\n      this.onMultipleSelectRow(row);\r\n    else\r\n      this.onSelectRow(row);\r\n  }\r\n\r\n  onUserSelectRow(row: Row) {\r\n    if (this.grid.getSetting('selectMode') !== 'multi') {\r\n      this.grid.selectRow(row);\r\n      this._onUserSelectRow(row.getData());\r\n      this.onSelectRow(row);\r\n    }\r\n  }\r\n\r\n  multipleSelectRow(row: Row) {\r\n    this.grid.multipleSelectRow(row);\r\n    this._onUserSelectRow(row.getData());\r\n    this._onSelectRow(row.getData());\r\n  }\r\n\r\n  onSelectAllRows($event: any) {\r\n    this.isAllSelected = !this.isAllSelected;\r\n    this.grid.selectAllRows(this.isAllSelected);\r\n    let selectedRows = this.grid.getSelectedRows();\r\n\r\n    this._onUserSelectRow(selectedRows[0], selectedRows);\r\n    this._onSelectRow(selectedRows[0]);\r\n  }\r\n\r\n  onSelectRow(row: Row) {\r\n    this.grid.selectRow(row);\r\n    this._onSelectRow(row.getData());\r\n  }\r\n\r\n  onMultipleSelectRow(row: Row) {\r\n    this._onSelectRow(row.getData());\r\n  }\r\n\r\n  initGrid() {\r\n    this.source = this.prepareSource();\r\n    this.grid = new Grid(this.source, this.prepareSettings());\r\n    this.grid.onSelectRow().subscribe((row) => this.onSelectRow(row));\r\n  }\r\n\r\n  prepareSource(): DataSource {\r\n    if (this.source instanceof DataSource) {\r\n      return this.source;\r\n    } else if (this.source instanceof Array) {\r\n      return new LocalDataSource(this.source);\r\n    }\r\n\r\n    return new LocalDataSource();\r\n  }\r\n\r\n  prepareSettings(): Object {\r\n    return deepExtend({}, this.defaultSettings, this.settings);\r\n  }\r\n\r\n  changePage($event: any) {\r\n    this.resetAllSelector();\r\n  }\r\n\r\n  sort($event: any) {\r\n    this.resetAllSelector();\r\n  }\r\n\r\n  filter($event: any) {\r\n    this.resetAllSelector();\r\n  }\r\n\r\n  private _onSelectRow(data: any) {\r\n    this.rowSelect.emit({\r\n      data: data || null,\r\n      source: this.source,\r\n    });\r\n  }\r\n\r\n  private _onUserSelectRow(data: any, selected: Array<any> = []) {\r\n    this.userRowSelect.emit({\r\n      data: data || null,\r\n      source: this.source,\r\n      selected: selected.length ? selected : this.grid.getSelectedRows(),\r\n    });\r\n  }\r\n\r\n  private resetAllSelector() {\r\n    this.isAllSelected = false;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/~/ng2-smart-table/src/ng2-smart-table/ng2-smart-table.component.ts","import { Component, ViewChild, ElementRef, OnInit, Output, EventEmitter, Input } from \"@angular/core\";\r\nimport * as moment from 'moment'\r\nimport { MasterRepo } from \"../../repositories\";\r\nimport { Observable, Subscriber } from \"rxjs\";\r\nimport { AlertService } from \"../../services/alert/alert.service\";\r\nimport { ReportFilterService } from \"./report-filter.service\";\r\nimport { GenericPopUpComponent, GenericPopUpSettings } from \"../generic-grid/generic-popup-grid.component\";\r\nimport { AuthService } from \"../../services/permission\";\r\n\r\n@Component({\r\n  selector: \"report-filter\",\r\n  template: require('./report-filter.component.html'),\r\n  // styles: [require('../../../pages/Style.css'), require('../pStyle.css')]\r\n})\r\nexport class ReportFilterComponent implements OnInit {\r\n  @ViewChild(\"genericGrid\") genericGrid: GenericPopUpComponent;\r\n  gridPopupSettings: GenericPopUpSettings = new GenericPopUpSettings();\r\n  private isActive: boolean = false\r\n  @ViewChild('division') division: ElementRef\r\n  @ViewChild('voucherType') voucherType: ElementRef\r\n  @ViewChild('showNarration') showNarration: ElementRef\r\n  @Output() filterEmiiter = new EventEmitter()\r\n  @Input() reportType: string\r\n  ReportFilterObj: ReportFilterOption = <ReportFilterOption>{}\r\n  selectedDate: { startDate: moment.Moment, endDate: moment.Moment };\r\n  ranges: any = {\r\n    'Today': [moment(), moment()],\r\n    'Yesterday': [moment().subtract(1, 'days'), moment().subtract(1, 'days')],\r\n    'Last 7 Days': [moment().subtract(6, 'days'), moment()],\r\n    'Last 30 Days': [moment().subtract(29, 'days'), moment()],\r\n    'This Month': [moment().startOf('month'), moment().endOf('month')],\r\n    'Last Month': [moment().subtract(1, 'month').startOf('month'), moment().subtract(1, 'month').endOf('month')],\r\n    'Financial Year': [moment().set('date', 1).set('month', 3), moment().endOf('month').set('month', 2).add(1, 'year')],\r\n\r\n  }\r\n  locale = {\r\n    format: 'DD/MM/YYYY',\r\n    direction: 'ltr', // could be rtl\r\n    weekLabel: 'W',\r\n    separator: ' - ', // default is ' - '\r\n    cancelLabel: 'Cancel', // detault is 'Cancel'\r\n    applyLabel: 'Okay', // detault is 'Apply'\r\n    clearLabel: 'Clear', // detault is 'Clear'\r\n    customRangeLabel: 'Custom Range',\r\n    daysOfWeek: moment.weekdaysMin(),\r\n    monthNames: moment.monthsShort(),\r\n    firstDay: 0 // first day is monday\r\n  }\r\n  private divisionList = []\r\n  private vouchertypeList = [];\r\n  userProfile:any;\r\n  CostcenterList : any[] = [];\r\n  userSetting:any;\r\n\r\n  constructor(private _masterRepo: MasterRepo, private alertService: AlertService,\r\n    private _authService: AuthService, \r\n     private _alertService: AlertService, public _reportFilterService: ReportFilterService) {\r\n      var PID = this._masterRepo.PhiscalObj.PhiscalID;\r\n      var division = this._masterRepo.PhiscalObj.Div;\r\n      PID = PID.replace(\"/\",\"ZZ\")\r\n    this.gridPopupSettings = {\r\n      title: \"Group Ledger\",\r\n      apiEndpoints: `/getMasterPagedListOfAny/${PID}/vtype/${division}`,\r\n      defaultFilterIndex: 0,\r\n      columns: [\r\n        {\r\n          key: \"ACNAME\",\r\n          title: \"NAME\",\r\n          hidden: false,\r\n          noSearch: false\r\n        },\r\n        {\r\n          key: \"ACCODE\",\r\n          title: \"CODE\",\r\n          hidden: false,\r\n          noSearch: false\r\n        }\r\n      ]\r\n    };\r\n\r\n    this.userProfile = this._authService.getUserProfile();\r\n    this.userSetting = _authService.getSetting();\r\n\r\n    \r\n    if (this._masterRepo.userSetting.userwisedivision == 1) {\r\n      this._masterRepo.getDivisionFromRightPrivelege().subscribe(res => {\r\n          if (res.status == 'ok') {\r\n            this.divisionList = res.result;\r\n          }\r\n      })\r\n  }\r\n  else {\r\n    this._masterRepo.getAllDivisions().subscribe((res) => {\r\n      this.divisionList.push(res)\r\n    })\r\n  }\r\n    this._masterRepo.getAllVoucherType().subscribe((res) => {\r\n      this.vouchertypeList.push(res)\r\n\r\n    })\r\n    this.selectedDate = {\r\n      startDate: moment(new Date()),\r\n      endDate: moment(new Date())\r\n    }\r\n\r\n    this._masterRepo.getCostcenter().subscribe(res => {\r\n      this.CostcenterList = res;\r\n  })\r\n  this._masterRepo.getAccDivList();\r\n\r\n  }\r\n  ngOnInit() {\r\n    this.loadParams(this.reportType)\r\n   this._reportFilterService.ReportFilterObj.DATE1 = moment(this.selectedDate.startDate).format('MM-DD-YYYY')\r\n    //this._reportFilterService.ReportFilterObj.DATE2 = moment(this.selectedDate.endDate).format('MM-DD-YYYY')\r\n \r\n    \r\n    this._reportFilterService.ReportFilterObj.DATE1=this._masterRepo.PhiscalObj.BeginDate.split('T')[0];\r\n    this.changeEntryDate(this._reportFilterService.ReportFilterObj.DATE1, \"AD\");\r\n    this._reportFilterService.ReportFilterObj.DATE2 = this._masterRepo.PhiscalObj.EndDate.split('T')[0];\r\n    this.changeEndDate(this._reportFilterService.ReportFilterObj.DATE2, \"AD\");\r\n    \r\n  }\r\nngAfterViewInit(){\r\n  this.calcStock()\r\n}\r\n  changeEntryDate(value, format: string) {\r\n    var adbs = require(\"ad-bs-converter\");\r\n    if (format == \"AD\") {\r\n        var adDate = (value.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n        var bsDate = adbs.ad2bs(adDate);\r\n        this._reportFilterService.ReportFilterObj.BSDATE1 = this._masterRepo.toBSDate(value);\r\n       // this.startDateResponse.emit(value);\r\n    } \r\n    else if (format == \"BS\") {\r\n      var datearr = value.split('/');\r\n      const bsDate = datearr[2]+\"/\"+datearr[1]+\"/\"+datearr[0];\r\n        // var bsDate = (value.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n        var adDate = adbs.bs2ad(bsDate);\r\n        var Engdate = this._masterRepo.toADDate(value);\r\n            const Validatedata = this._masterRepo.ValidateNepaliDate(Engdate)\r\n            if(Validatedata == true){\r\n              const bsDate1 = datearr[2]+\"/\"+datearr[1]+\"/\"+datearr[0];\r\n              var adDate1 = adbs.bs2ad(bsDate1);\r\n              this._reportFilterService.ReportFilterObj.DATE1 = this._masterRepo.toADDate(value);\r\n            }else{\r\n                this.alertService.error(\"Cannot Change the date\");\r\n              return;\r\n            } \r\n        // this._reportFilterService.ReportFilterObj.DATE1 = this.masterService.toBSDate(value);\r\n    }\r\n}\r\n\r\nchangeEndDate(value, format: string) {\r\n    var adbs = require(\"ad-bs-converter\");\r\n    if (format == \"AD\") {\r\n        var adDate = (value.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n        var bsDate = adbs.ad2bs(adDate);\r\n        this._reportFilterService.ReportFilterObj.BSDATE2 = this._masterRepo.toBSDate(value);\r\n       // this.endDateResponse.emit(value);\r\n    }\r\n    else if (format == \"BS\") {\r\n      var datearr = value.split('/');\r\n      const bsDate = datearr[2]+\"/\"+datearr[1]+\"/\"+datearr[0];\r\n        // var bsDate = (value.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n        var adDate = adbs.bs2ad(bsDate);\r\n        var Engdate = this._masterRepo.toADDate(value);\r\n        const Validatedata = this._masterRepo.ValidateNepaliDate(Engdate)\r\n        if(Validatedata == true){\r\n          const bsDate1 = datearr[2]+\"/\"+datearr[1]+\"/\"+datearr[0];\r\n          var adDate1 = adbs.bs2ad(bsDate1);\r\n          this._reportFilterService.ReportFilterObj.DATE2  = this._masterRepo.toADDate(value);\r\n        }else{\r\n            this.alertService.error(\"Cannot Change the date\");\r\n          return;\r\n        } \r\n        // this._reportFilterService.ReportFilterObj.DATE2 = this.masterService.toBSDate(value);\r\n    }\r\n}\r\n\r\n\r\n\r\n  dateChanged(date) {\r\n    this._reportFilterService.ReportFilterObj.DATE1 = moment(this.selectedDate.startDate).format('MM-DD-YYYY')\r\n    this._reportFilterService.ReportFilterObj.DATE2 = moment(this.selectedDate.endDate).format('MM-DD-YYYY')\r\n\r\n  }\r\n  divisionChanged() {\r\n    this._reportFilterService.ReportFilterObj.DIV = this.division.nativeElement.value\r\n\r\n  }\r\n\r\n  showNarrationChanged() {\r\n    this._reportFilterService.ReportFilterObj.SHOWNARRATION = this.showNarration.nativeElement.value\r\n  }\r\n\r\n\r\n  voucherTypeChanged() {\r\n    this._reportFilterService.ReportFilterObj.VTYPE = this.voucherType.nativeElement.value\r\n  }\r\n\r\n\r\n  setVoucherName(id: string) {\r\n    this._reportFilterService.ReportFilterObj.VOUCHERNAME = \"All\"\r\n    this.vouchertypeList.forEach(x => {\r\n      if (x.VOUCHER_ID == id) {\r\n        this._reportFilterService.ReportFilterObj.VOUCHERNAME = x.VOUCHER_TYPE\r\n      }\r\n    })\r\n  }\r\n\r\n\r\n\r\n  show() {\r\n    this.isActive = true\r\n  }\r\n\r\n  popupClose() {\r\n    this.isActive = false;\r\n  }\r\n\r\n  accodeChanged(value: string) {\r\n    let item = this._masterRepo.accountList.find(x => x.ACCODE == value);\r\n    this._reportFilterService.ReportFilterObj.ACCNAME = '';\r\n    if (item) {\r\n      value = item.ACNAME;\r\n      this._reportFilterService.ReportFilterObj.ACCNAME = value;\r\n    }\r\n  }\r\n\r\n\r\n  itemChanged(value: any) {\r\n    if (typeof (value) === \"object\") {\r\n      this._reportFilterService.ReportFilterObj.ACCNAME = value.ACNAME;\r\n      this._reportFilterService.ReportFilterObj.ACCODE = value.ACCODE;\r\n      this._reportFilterService.ReportFilterObj.ACID = value.ACID;\r\n    }\r\n  }\r\n\r\n\r\n  dropListItem = (keyword: any): Observable<Array<any>> => {\r\n\r\n    return new Observable((observer: Subscriber<Array<any>>) => {\r\n      this._masterRepo.getAccount(\"report\").map(res => {\r\n        if (this.reportType == \"Cash Book\") { return res.filter(x => x.TYPE == 'A' && x.MAPID == 'C'); }\r\n        else if (this.reportType == \"Bank Book\") { return res.filter(x => x.TYPE == 'A' && x.MAPID == 'B'); }\r\n        else { return res.filter(x => x.TYPE == 'A'); }\r\n\r\n      }).map(data => {\r\n        return data.filter(ac => ac.ACNAME.toUpperCase().indexOf(keyword.toUpperCase()) > -1 && ac.TYPE == 'A');\r\n      }\r\n      ).subscribe(res => { observer.next(res); })\r\n    }).share();\r\n  }\r\n\r\n  onLedgerTypeChange() {\r\n    this._reportFilterService.ReportFilterObj.ACCNAME = \"\";\r\n    this._reportFilterService.ReportFilterObj.ACCODE = \"\";\r\n    this._reportFilterService.ReportFilterObj.ACID = \"\";\r\n  }\r\n\r\n\r\n  onGroupEntered() {\r\n    this.genericGrid.show(\"\", false, \"groupLedger\");\r\n  }\r\n\r\n  onItemSelected(event) {\r\n    this._reportFilterService.ReportFilterObj.ACID = event.ACID;\r\n    this._reportFilterService.ReportFilterObj.ACCODE = event.ACCODE;\r\n    this._reportFilterService.ReportFilterObj.ACCNAME = event.ACNAME;\r\n  }\r\n\r\n  preventInput($event) {\r\n    $event.preventDefault();\r\n    return false;\r\n  }\r\n\r\n\r\n\r\n  applyClicked() {\r\n    this.popupClose();\r\n    \r\n    if (this.reportType != \"OpeningBalance\" && this.reportType != \"Cash Book\" && this.reportType != \"Bank Book\") {\r\n      if (this.division != null) {\r\n        this._reportFilterService.ReportFilterObj.DIV = this.division.nativeElement.value;\r\n      }\r\n    }\r\n    if (this.reportType == \"Ledger Voucher\") {\r\n      if ('ACID' in this._reportFilterService.ReportFilterObj) {\r\n        this.filterEmiiter.emit(this._reportFilterService.ReportFilterObj)\r\n      } else {\r\n        this._alertService.error(\"No Account Selected\")\r\n      }\r\n    } else if (this.reportType == 'Voucher Register' || this.reportType == 'Day Book') {\r\n      this.setVoucherName(this.voucherType.nativeElement.value)\r\n      this._reportFilterService.ReportFilterObj.VTYPE = this.voucherType.nativeElement.value;\r\n      this._reportFilterService.ReportFilterObj.SHOWNARRATION = this.showNarration.nativeElement.value;\r\n      this.filterEmiiter.emit(this._reportFilterService.ReportFilterObj)\r\n    } else {\r\n      if (this.reportType == \"PL\"){\r\n        if(this._reportFilterService.ReportFilterObj.DIV){\r\n          if (this._reportFilterService.ReportFilterObj.DIV == '%') {\r\n            this._reportFilterService.ReportFilterObj.PL_DIVISIONNAME = 'All';\r\n          }else if(this._reportFilterService.ReportFilterObj.DIV!= '%'){\r\n            let abc = this.divisionList.filter(x=>x.INITIAL == this._reportFilterService.ReportFilterObj.DIV);\r\n              if(abc && abc.length>0 && abc[0]){\r\n                this._reportFilterService.ReportFilterObj.PL_DIVISIONNAME = abc[0].NAME;\r\n              }else{\r\n                this._reportFilterService.ReportFilterObj.PL_DIVISIONNAME = '';\r\n              }\r\n          }else{\r\n            this._reportFilterService.ReportFilterObj.PL_DIVISIONNAME = '';\r\n          }\r\n        }\r\n      }else if (this.reportType == \"BS\"){\r\n        if(this._reportFilterService.ReportFilterObj.DIV){\r\n          if (this._reportFilterService.ReportFilterObj.DIV == '%') {\r\n            this._reportFilterService.ReportFilterObj.BS_DIVISIONNAME = 'All';\r\n          }else if(this._reportFilterService.ReportFilterObj.DIV!= '%'){\r\n            let abc = this.divisionList.filter(x=>x.INITIAL == this._reportFilterService.ReportFilterObj.DIV);\r\n              if(abc && abc.length>0 && abc[0]){\r\n                this._reportFilterService.ReportFilterObj.BS_DIVISIONNAME = abc[0].NAME;\r\n              }else{\r\n                this._reportFilterService.ReportFilterObj.BS_DIVISIONNAME = '';\r\n              }\r\n          }else{\r\n            this._reportFilterService.ReportFilterObj.BS_DIVISIONNAME = '';\r\n          }\r\n        }\r\n      }\r\n\r\n      this.filterEmiiter.emit(this._reportFilterService.ReportFilterObj)\r\n    }\r\n  }\r\n\r\n\r\n  queryAndLoadData(dataStore) {\r\n    if (this._reportFilterService.ReportFilterObj.isTBLDataLoaded) {\r\n      if (this._reportFilterService.ReportFilterObj.isSummary && !this._reportFilterService.ReportFilterObj.isLedgerWise) {\r\n\r\n        this._reportFilterService.ReportFilterObj.tblData = dataStore.summaryTrialBalance\r\n        this._reportFilterService.selectedRowIndex = 0\r\n      } else if (!this._reportFilterService.ReportFilterObj.isSummary && !this._reportFilterService.ReportFilterObj.isLedgerWise && !this._reportFilterService.ReportFilterObj.showAllLevel) {\r\n\r\n        this._reportFilterService.ReportFilterObj.tblData = dataStore.detailTrialBalance\r\n        this._reportFilterService.selectedRowIndex = 0\r\n\r\n      } else if (this._reportFilterService.ReportFilterObj.showAllLevel && !this._reportFilterService.ReportFilterObj.isLedgerWise) {\r\n\r\n        this._reportFilterService.ReportFilterObj.tblData = dataStore.allLevelTrialBalance\r\n        this._reportFilterService.selectedRowIndex = 0\r\n      } else if (this._reportFilterService.ReportFilterObj.isLedgerWise) {\r\n\r\n        this._reportFilterService.ReportFilterObj.tblData = dataStore.ledgerTrialBalance\r\n        this._reportFilterService.selectedRowIndex = 0\r\n      }\r\n    } else {\r\n      this._reportFilterService.ReportFilterObj.isTBLDataLoaded = false\r\n      this._reportFilterService.selectedRowIndex = 0\r\n    }\r\n  }\r\n\r\n\r\n  loadParams(reportType: string) {\r\n    this._reportFilterService.ReportFilterObj.DIV = \"%\";\r\n    if(this.userSetting.IS_NESTLE==1){\r\n      this._reportFilterService.ReportFilterObj.COMPANYTYPE = 'DMS';\r\n    }else{\r\n      this._reportFilterService.ReportFilterObj.COMPANYTYPE = 'NONDMS';\r\n    }\r\n    switch (reportType) {\r\n      case \"TBL\":\r\n        this.checkOpeningBalance();\r\n        // this._reportFilterService.ReportFilterObj.showOpeningBalance = true,\r\n          // this._reportFilterService.ReportFilterObj.showTransaction = true,\r\n          this._reportFilterService.ReportFilterObj.isSummary = true,\r\n          this._reportFilterService.ReportFilterObj.isLedgerWise = false,\r\n          this._reportFilterService.ReportFilterObj.isZeroBalance = false,\r\n          this._reportFilterService.ReportFilterObj.showAllLevel = false,\r\n          // this._reportFilterService.ReportFilterObj.showClosingBalance = true,\r\n          this._reportFilterService.ReportFilterObj.showAll = true,\r\n          this._reportFilterService.ReportFilterObj.nodeACID = \"AL\"\r\n        this._reportFilterService.ReportFilterObj.nodeACNAME = \"ACCOUNT\"\r\n        break;\r\n      case \"BS\":\r\n        this._reportFilterService.ReportFilterObj.stockCalcAuto = false\r\n        this._reportFilterService.ReportFilterObj.doStockEvaluation = false\r\n        break;\r\n      case \"PL\":\r\n        this._reportFilterService.ReportFilterObj.stockCalcAuto = false\r\n        this._reportFilterService.ReportFilterObj.doStockEvaluation = false\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n  calcStock() {\r\n    this._reportFilterService.stockCalculation(this._reportFilterService.ReportFilterObj).subscribe((res) => {\r\n      this._reportFilterService.ReportFilterObj.openingStock = res.result\r\n      this._reportFilterService.ReportFilterObj.closingStock = res.result2\r\n    })\r\n  }\r\n\r\n  checkOpeningBalance(){\r\n    if(this._reportFilterService.ReportFilterObj.SHOWOPENINGTRIALONLY == true && \r\n      this._reportFilterService.ReportFilterObj.showPartylistInTrialBalance!=true &&\r\n        this._reportFilterService.ReportFilterObj.showSubLedgerInTrialBalance!=true &&\r\n        this._reportFilterService.ReportFilterObj.showClosingStockValueInTrialBalance!=true &&\r\n        this._reportFilterService.ReportFilterObj.isZeroBalance!==true){\r\n      this._reportFilterService.ReportFilterObj.showOpeningBalance = true;\r\n      this._reportFilterService.ReportFilterObj.showClosingBalance = false;\r\n      this._reportFilterService.ReportFilterObj.showTransaction = false;\r\n    }else{\r\n      this._reportFilterService.ReportFilterObj.showOpeningBalance = true;\r\n      this._reportFilterService.ReportFilterObj.showClosingBalance = true;\r\n      this._reportFilterService.ReportFilterObj.showTransaction = true;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport interface ReportFilterOption {\r\n  DATE1: string;\r\n  DATE2: string;\r\n  BSDATE1:string;\r\n  BSDATE2:string;\r\n  ACID: string;\r\n  DIV: string;\r\n  ACCNAME: string;\r\n  ACCODE: string;\r\n  SHOWNARRATION: boolean;\r\n  VTYPE: string;\r\n  VOUCHERNAME: string;\r\n  showClosingBalance: boolean;\r\n  showOpeningBalance: boolean;\r\n  showTransaction: boolean;\r\n  showPartylistInTrialBalance:boolean;\r\n  showSubLedgerInTrialBalance:boolean;\r\n  showClosingStockValueInTrialBalance:boolean;\r\n  isSummary: boolean;\r\n  isLedgerWise: boolean;\r\n  isZeroBalance: boolean;\r\n  showAllLevel: boolean;\r\n  nodeACID: string;\r\n  nodeACNAME: string;\r\n  isTBLDataLoaded: boolean;\r\n  tblDataStore: any;\r\n  tblData: [];\r\n  showAll: boolean;\r\n  stockCalcAuto: boolean;\r\n  openingStock: number;\r\n  closingStock: number;\r\n  doStockEvaluation: boolean;\r\n  trialBalanceTotalRow: any;\r\n  directIncome: any;\r\n  directExpense: any;\r\n  directIncomeTotal: any;\r\n  directExpenseTotal: any;\r\n  directIncomeExpenseTotal: any;\r\n  grossProfitCD: any;\r\n  grossLossCD: any;\r\n  indirectIncome: any;\r\n  indirectExpense: any;\r\n  netLoss: any;\r\n  netProfit: any;\r\n  indirectIncomeExpenseTotal: any;\r\n  isPlLoaded: boolean\r\n  lengthOfIncomeExpense: any\r\n  lengthOfIndirectIncomeExpense: any\r\n  assets: any;\r\n  liabilities: any;\r\n  differenceInClosingBalance: any;\r\n  differenceInOpeningBalance: any;\r\n  asstesTotal: any;\r\n  liabilitiesTotal: any;\r\n  isBSLoaded: boolean;\r\n  lengthOfATLB: any;\r\n  summaryreport: number;\r\n  ledgerType: string;\r\n  ShowSubLedgerBS: any;\r\n  SHOWDEBTORSCREDITORSBS: any;\r\n  ShowSubLedgerPL: any;\r\n  TBL_CostCenter : any;\r\n  SHOWOPENINGTRIALONLY:any;\r\n  IsSubLedger:string;\r\n  ACIDwithPA:boolean;\r\n  COMPANYTYPE:string;\r\n  PL_DIVISIONNAME:string;\r\n  BS_DIVISIONNAME:string;\r\n}\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/common/popupLists/report-filter/report-filter.component.ts","import {\r\n  Component,\r\n  ComponentFactoryResolver,\r\n  ViewChild,\r\n  ViewContainerRef,\r\n  SimpleChanges,\r\n  OnChanges,\r\n  OnDestroy } from '@angular/core';\r\n\r\nimport { EditCellDefault } from './edit-cell-default';\r\nimport { Cell } from '../../../lib/data-set/cell';\r\n\r\n@Component({\r\n  selector: 'table-cell-custom-editor',\r\n  template: `\r\n    <ng-template #dynamicTarget></ng-template>\r\n  `,\r\n})\r\nexport class CustomEditComponent extends EditCellDefault implements OnChanges {\r\n\r\n  customComponent: any;\r\n  @ViewChild('dynamicTarget', {read: ViewContainerRef}) dynamicTarget: any;\r\n\r\n  constructor(private resolver: ComponentFactoryResolver) {\r\n    super();\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (this.cell && !this.customComponent){\r\n      let componentFactory = this.resolver.resolveComponentFactory(this.cell.getColumn().editor.component);\r\n      this.customComponent = this.dynamicTarget.createComponent(componentFactory);\r\n\r\n      // set @Inputs and @Outputs of custom component\r\n      this.customComponent.instance.cell = this.cell;\r\n      this.customComponent.instance.inputClass = this.inputClass;\r\n      this.customComponent.instance.onStopEditing.subscribe(() => this.onStopEditing());\r\n      this.customComponent.instance.onEdited.subscribe((event) => this.onEdited(event));\r\n      this.customComponent.instance.onClick.subscribe((event) => this.onClick(event));\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.customComponent) {\r\n      this.customComponent.destroy();\r\n    }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/~/ng2-smart-table/src/ng2-smart-table/components/cell/cell-edit-mode/custom-edit.component.ts","import { Component } from '@angular/core';\r\n\r\nimport { EditCellDefault } from './edit-cell-default';\r\nimport { Cell } from '../../../lib/data-set/cell';\r\n\r\n@Component({\r\n  selector: 'table-cell-default-editor',\r\n  template: require('./default-edit.component.html'),\r\n})\r\nexport class DefaultEditComponent extends EditCellDefault {\r\n\r\n  constructor(){\r\n    super();\r\n  }\r\n\r\n  getEditorType(): string {\r\n    return this.cell.getColumn().editor && this.cell.getColumn().editor.type;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/~/ng2-smart-table/src/ng2-smart-table/components/cell/cell-edit-mode/default-edit.component.ts","import { Component, Input, Output, EventEmitter } from '@angular/core';\r\n\r\nimport { Cell } from '../../../lib/data-set/cell';\r\n\r\n@Component({\r\n    selector: 'table-cell-edit-mode',\r\n    template: `\r\n      <div [ngSwitch]=\"getEditorType()\">\r\n        <table-cell-custom-editor *ngSwitchCase=\"'custom'\"\r\n                                  [cell]=\"cell\"\r\n                                  [inputClass]=\"inputClass\"\r\n                                  (edited)=\"onEdited($event)\">\r\n        </table-cell-custom-editor>\r\n        <table-cell-default-editor *ngSwitchDefault\r\n                                  [cell]=\"cell\"\r\n                                  [inputClass]=\"inputClass\"\r\n                                  (edited)=\"onEdited($event)\">\r\n        </table-cell-default-editor>\r\n      </div>\r\n    `\r\n})\r\nexport class EditCellComponent {\r\n\r\n  @Input() cell: Cell;\r\n  @Input() inputClass: string = '';\r\n\r\n  @Output() edited = new EventEmitter<any>();\r\n\r\n  onEdited(event): boolean {\r\n    this.edited.next(event);\r\n    return false;\r\n  }\r\n\r\n  getEditorType(): string {\r\n    return this.cell.getColumn().editor && this.cell.getColumn().editor.type;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/~/ng2-smart-table/src/ng2-smart-table/components/cell/cell-edit-mode/edit-cell.component.ts","export * from './custom-edit.component';\r\nexport * from './default-edit.component';\r\nexport * from './edit-cell.component';\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/~/ng2-smart-table/src/ng2-smart-table/components/cell/cell-edit-mode/index.ts","import { Component } from '@angular/core';\r\n\r\nimport { DefaultEditor } from './default-editor';\r\n\r\n@Component({\r\n  selector: 'checkbox-editor',\r\n  styles: [require('./editor.component.scss')],\r\n  template: `\r\n    <input [ngClass]=\"inputClass\"\r\n           type=\"checkbox\"\r\n           class=\"form-control\"\r\n           [name]=\"cell.getId()\"\r\n           [disabled]=\"!cell.isEditable()\"\r\n           [checked]=\"cell.getValue() == (cell.getColumn().getConfig()?.true || true)\"\r\n           (click)=\"onClick.emit($event)\"\r\n           (change)=\"onChange($event)\">\r\n    `,\r\n})\r\nexport class CheckboxEditorComponent extends DefaultEditor {\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  onChange(event: any): void {\r\n    const trueVal = (this.cell.getColumn().getConfig() && this.cell.getColumn().getConfig().true) || true;\r\n    const falseVal = (this.cell.getColumn().getConfig() && this.cell.getColumn().getConfig().false) || false;\r\n    this.cell.newValue = event.target.checked ? trueVal : falseVal;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/~/ng2-smart-table/src/ng2-smart-table/components/cell/cell-editors/checkbox-editor.component.ts","import { Component, OnInit } from '@angular/core';\r\nimport { CompleterService } from 'ng2-completer';\r\n\r\nimport { DefaultEditor } from './default-editor';\r\n\r\n@Component({\r\n  selector: 'completer-editor',\r\n  template: `\r\n    <ng2-completer [(ngModel)]=\"completerStr\"\r\n                   [dataService]=\"cell.getColumn().getConfig().completer.dataService\"\r\n                   [minSearchLength]=\"cell.getColumn().getConfig().completer.minSearchLength || 0\"\r\n                   [pause]=\"cell.getColumn().getConfig().completer.pause || 0\"\r\n                   [placeholder]=\"cell.getColumn().getConfig().completer.placeholder || 'Start typing...'\"\r\n                   (selected)=\"onEditedCompleter($event)\">\r\n    </ng2-completer>\r\n    `\r\n})\r\nexport class CompleterEditorComponent extends DefaultEditor implements OnInit {\r\n\r\n  completerStr: string = '';\r\n\r\n  constructor(private completerService: CompleterService) {\r\n    super();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    if (this.cell.getColumn().editor && this.cell.getColumn().editor.type === 'completer') {\r\n      let config = this.cell.getColumn().getConfig().completer;\r\n      config.dataService = this.completerService.local(config.data, config.searchFields, config.titleField);\r\n      config.dataService.descriptionField(config.descriptionField);\r\n    }\r\n  }\r\n\r\n  onEditedCompleter(event): boolean {\r\n    this.cell.newValue = event.title;\r\n    return false;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/~/ng2-smart-table/src/ng2-smart-table/components/cell/cell-editors/completer-editor.component.ts","export * from './completer-editor.component';\r\nexport * from './input-editor.component';\r\nexport * from './select-editor.component';\r\nexport * from './textarea-editor.component';\r\nexport * from './checkbox-editor.component';\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/~/ng2-smart-table/src/ng2-smart-table/components/cell/cell-editors/index.ts","import { Component } from '@angular/core';\r\n\r\nimport { DefaultEditor } from './default-editor';\r\n\r\n@Component({\r\n  selector: 'input-editor',\r\n  styles: [require('./editor.component.scss')],\r\n  template: `\r\n    <input [ngClass]=\"inputClass\"\r\n           class=\"form-control\"\r\n           [(ngModel)]=\"cell.newValue\"\r\n           [name]=\"cell.getId()\"\r\n           [placeholder]=\"cell.getTitle()\"\r\n           [disabled]=\"!cell.isEditable()\"\r\n           (click)=\"onClick.emit($event)\"\r\n           (keydown.enter)=\"onEdited.emit($event)\"\r\n           (keydown.esc)=\"onStopEditing.emit()\">\r\n    `,\r\n})\r\nexport class InputEditorComponent extends DefaultEditor {\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/~/ng2-smart-table/src/ng2-smart-table/components/cell/cell-editors/input-editor.component.ts","import { Component } from '@angular/core';\r\n\r\nimport { DefaultEditor } from './default-editor';\r\n\r\n@Component({\r\n  selector: 'select-editor',\r\n  template: `\r\n    <select [ngClass]=\"inputClass\"\r\n            class=\"form-control\"\r\n            [(ngModel)]=\"cell.newValue\"\r\n            [name]=\"cell.getId()\"\r\n            [disabled]=\"!cell.isEditable()\"\r\n            (click)=\"onClick.emit($event)\"\r\n            (keydown.enter)=\"onEdited.emit($event)\"\r\n            (keydown.esc)=\"onStopEditing.emit()\">\r\n\r\n        <option *ngFor=\"let option of cell.getColumn().getConfig()?.list\" [value]=\"option.value\"\r\n                [selected]=\"option.value === cell.getValue()\">{{ option.title }}\r\n        </option>\r\n    </select>\r\n    `\r\n})\r\nexport class SelectEditorComponent extends DefaultEditor {\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/~/ng2-smart-table/src/ng2-smart-table/components/cell/cell-editors/select-editor.component.ts","import { Component } from '@angular/core';\r\n\r\nimport { DefaultEditor } from './default-editor';\r\n\r\n@Component({\r\n  selector: 'textarea-editor',\r\n  styles: [require('./editor.component.scss')],\r\n  template: `\r\n    <textarea [ngClass]=\"inputClass\"\r\n              class=\"form-control\"\r\n              [(ngModel)]=\"cell.newValue\"\r\n              [name]=\"cell.getId()\"\r\n              [disabled]=\"!cell.isEditable()\"\r\n              [placeholder]=\"cell.getTitle()\"\r\n              (click)=\"onClick.emit($event)\"\r\n              (keydown.enter)=\"onEdited.emit($event)\"\r\n              (keydown.esc)=\"onStopEditing.emit()\">\r\n    </textarea>\r\n    `,\r\n})\r\nexport class TextareaEditorComponent extends DefaultEditor {\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/~/ng2-smart-table/src/ng2-smart-table/components/cell/cell-editors/textarea-editor.component.ts","import {\r\n  Component,\r\n  Input,\r\n  ComponentFactoryResolver,\r\n  ViewChild,\r\n  ViewContainerRef,\r\n  OnInit,\r\n  OnDestroy } from '@angular/core';\r\n\r\nimport { Cell } from '../../../lib/data-set/cell';\r\n\r\n@Component({\r\n  selector: 'custom-view-component',\r\n  template: `\r\n    <ng-template #dynamicTarget></ng-template>\r\n  `,\r\n})\r\nexport class CustomViewComponent implements OnInit {\r\n\r\n  customComponent: any;\r\n  @Input() cell: Cell;\r\n  @ViewChild('dynamicTarget', {read: ViewContainerRef}) dynamicTarget: any;\r\n\r\n  constructor(private resolver: ComponentFactoryResolver) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    if (this.cell && !this.customComponent){\r\n      let componentFactory = this.resolver.resolveComponentFactory(this.cell.getColumn().renderComponent);\r\n      this.customComponent = this.dynamicTarget.createComponent(componentFactory);\r\n\r\n      // set @Inputs and @Outputs of custom component\r\n      this.customComponent.instance.value = this.cell.getValue();\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.customComponent) {\r\n      this.customComponent.destroy();\r\n    }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/~/ng2-smart-table/src/ng2-smart-table/components/cell/cell-view-mode/custom-view.component.ts","export * from './custom-view.component';\r\nexport * from './view-cell.component';\r\nexport * from './view-cell';\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/~/ng2-smart-table/src/ng2-smart-table/components/cell/cell-view-mode/index.ts","import { Component, Input, ViewChild, ElementRef } from '@angular/core';\r\n\r\nimport { Cell } from '../../../lib/data-set/cell';\r\n\r\n@Component({\r\n  selector: 'table-cell-view-mode',\r\n  template: `\r\n    <div [ngSwitch]=\"cell.getColumn().type\">\r\n        <custom-view-component *ngSwitchCase=\"'custom'\" [cell]=\"cell\"></custom-view-component>\r\n        <div *ngSwitchCase=\"'html'\" [innerHTML]=\"cell.getValue()\"></div>\r\n        <div *ngSwitchDefault>{{ cell.getValue() }}</div>\r\n    </div>\r\n    `\r\n})\r\nexport class ViewCellComponent {\r\n\r\n  @Input() cell: Cell;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/~/ng2-smart-table/src/ng2-smart-table/components/cell/cell-view-mode/view-cell.component.ts","import { Component, Input, Output, EventEmitter } from '@angular/core';\r\n\r\nimport { Grid } from '../../lib/grid';\r\nimport { Cell } from '../../lib/data-set/cell';\r\nimport { Row } from '../../lib/data-set/row';\r\n\r\n@Component({\r\n  selector: 'ng2-smart-table-cell',\r\n  template: `\r\n    <table-cell-view-mode *ngIf=\"!isInEditing\" [cell]=\"cell\"></table-cell-view-mode>\r\n    <table-cell-edit-mode *ngIf=\"isInEditing\" [cell]=\"cell\"\r\n                          [inputClass]=\"inputClass\"\r\n                          (edited)=\"onEdited($event)\">\r\n    </table-cell-edit-mode>\r\n  `,\r\n})\r\nexport class CellComponent {\r\n\r\n  @Input() grid: Grid;\r\n  @Input() row: Row;\r\n  @Input() editConfirm: EventEmitter<any>;\r\n  @Input() createConfirm: EventEmitter<any>;\r\n  @Input() isNew: boolean;\r\n  @Input() cell: Cell;\r\n  @Input() inputClass: string = '';\r\n  @Input() mode: string = 'inline';\r\n  @Input() isInEditing: boolean = false;\r\n\r\n  @Output() edited = new EventEmitter<any>();\r\n\r\n  onEdited(event) {\r\n    if (this.isNew) {\r\n      this.grid.create(this.grid.getNewRow(), this.createConfirm);\r\n    } else {\r\n      this.grid.save(this.row, this.editConfirm);\r\n    }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/~/ng2-smart-table/src/ng2-smart-table/components/cell/cell.component.ts","import { Component, OnInit } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\n\r\nimport { DefaultFilter } from './default-filter';\r\nimport { Column } from '../../../lib/data-set/column';\r\n\r\n@Component({\r\n  selector: 'checkbox-filter',\r\n  template: `\r\n    <input type=\"checkbox\" [formControl]=\"inputControl\" [ngClass]=\"inputClass\" class=\"form-control\">\r\n    <a href=\"#\" *ngIf=\"filterActive\" (click)=\"resetFilter($event)\">{{column.getFilterConfig()?.resetText || 'reset'}}</a>\r\n  `\r\n})\r\nexport class CheckboxFilterComponent extends DefaultFilter implements OnInit {\r\n\r\n  filterActive: boolean = false;\r\n  inputControl = new FormControl();\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.changesSubscription = this.inputControl.valueChanges\r\n      .debounceTime(this.delay)\r\n      .subscribe((checked: boolean) => {\r\n        this.filterActive = true;\r\n        const trueVal = (this.column.getFilterConfig() && this.column.getFilterConfig().true) || true;\r\n        const falseVal = (this.column.getFilterConfig() && this.column.getFilterConfig().false) || false;\r\n        this.query = checked ? trueVal : falseVal;\r\n        this.setFilter();\r\n      });\r\n  }\r\n\r\n  resetFilter(event) {\r\n    event.preventDefault();\r\n    this.query = '';\r\n    this.inputControl.setValue(false, { emitEvent: false });\r\n    this.filterActive = false;\r\n    this.setFilter();\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/~/ng2-smart-table/src/ng2-smart-table/components/filter/filter-types/checkbox-filter.component.ts","import { Component, OnInit } from '@angular/core';\r\nimport { Subject } from 'rxjs/Subject';\r\nimport { CompleterService } from 'ng2-completer';\r\n\r\nimport { DefaultFilter } from './default-filter';\r\nimport { Column } from '../../../lib/data-set/column';\r\n\r\n@Component({\r\n  selector: 'completer-filter',\r\n  template: `\r\n    <ng2-completer [(ngModel)]=\"query\"\r\n                   (ngModelChange)=\"inputTextChanged($event)\"\r\n                   [dataService]=\"column.getFilterConfig().completer.dataService\"\r\n                   [minSearchLength]=\"column.getFilterConfig().completer.minSearchLength || 0\"\r\n                   [pause]=\"column.getFilterConfig().completer.pause || 0\"\r\n                   [placeholder]=\"column.getFilterConfig().completer.placeholder || 'Start typing...'\"\r\n                   (selected)=\"completerContent.next($event)\">\r\n    </ng2-completer>\r\n  `\r\n})\r\nexport class CompleterFilterComponent extends DefaultFilter implements OnInit {\r\n\r\n  completerContent = new Subject<any>();\r\n\r\n  constructor(private completerService: CompleterService) {\r\n    super();\r\n  }\r\n\r\n  ngOnInit() {\r\n    let config = this.column.getFilterConfig().completer;\r\n    config.dataService = this.completerService.local(config.data, config.searchFields, config.titleField);\r\n    config.dataService.descriptionField(config.descriptionField);\r\n\r\n    this.changesSubscription = this.completerContent\r\n      .map((ev: any) => (ev && ev.title) || ev || '')\r\n      .distinctUntilChanged()\r\n      .debounceTime(this.delay)\r\n      .subscribe((search: string) => {\r\n        this.query = search;\r\n        this.setFilter();\r\n      });\r\n  }\r\n\r\n  inputTextChanged(event: string) {\r\n    // workaround to trigger the search event when the home/end buttons are clicked\r\n    // when this happens the [(ngModel)]=\"query\" is set to \"\" but the (selected) method is not called\r\n    // so here it gets called manually\r\n    if (event === '')\r\n      this.completerContent.next(event);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/~/ng2-smart-table/src/ng2-smart-table/components/filter/filter-types/completer-filter.component.ts","export * from './input-filter.component';\r\nexport * from './select-filter.component';\r\nexport * from './checkbox-filter.component';\r\nexport * from './completer-filter.component';\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/~/ng2-smart-table/src/ng2-smart-table/components/filter/filter-types/index.ts","import { Component, OnInit } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\n\r\nimport { DefaultFilter } from './default-filter';\r\nimport { Column } from '../../../lib/data-set/column';\r\n\r\n@Component({\r\n  selector: 'input-filter',\r\n  template: `\r\n    <input [(ngModel)]=\"query\"\r\n           [ngClass]=\"inputClass\"\r\n           [formControl]=\"inputControl\"\r\n           class=\"form-control\"\r\n           type=\"text\" \r\n           placeholder=\"{{ column.title }}\" />\r\n  `\r\n})\r\nexport class InputFilterComponent extends DefaultFilter implements OnInit {\r\n\r\n  inputControl = new FormControl();\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.inputControl.valueChanges\r\n      .distinctUntilChanged()\r\n      .debounceTime(this.delay)\r\n      .subscribe((value: string) => this.setFilter());\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/~/ng2-smart-table/src/ng2-smart-table/components/filter/filter-types/input-filter.component.ts","import { Component, OnInit } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\n\r\nimport { DefaultFilter } from './default-filter';\r\nimport { Column } from '../../../lib/data-set/column';\r\n\r\n@Component({\r\n  selector: 'select-filter',\r\n  template: `\r\n    <select [ngClass]=\"inputClass\"\r\n            class=\"form-control\"\r\n            [(ngModel)]=\"query\"\r\n            [formControl]=\"inputControl\">\r\n\r\n        <option value=\"\">{{ column.getFilterConfig().selectText }}</option>\r\n        <option *ngFor=\"let option of column.getFilterConfig().list\" [value]=\"option.value\">\r\n          {{ option.title }}\r\n        </option>\r\n    </select>\r\n  `\r\n})\r\nexport class SelectFilterComponent extends DefaultFilter implements OnInit {\r\n\r\n  inputControl = new FormControl();\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.inputControl.valueChanges\r\n      .distinctUntilChanged()\r\n      .debounceTime(this.delay)\r\n      .subscribe((value: string) => this.setFilter());\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/~/ng2-smart-table/src/ng2-smart-table/components/filter/filter-types/select-filter.component.ts","import { Component, Input, Output, EventEmitter, AfterViewInit } from '@angular/core';\r\n\r\nimport { DataSource } from '../../lib/data-source/data-source';\r\nimport { Column } from '../../lib/data-set/column';\r\n\r\n@Component({\r\n  selector: 'ng2-smart-table-filter',\r\n  styles: [require('./filter.scss')],\r\n  template: `\r\n    <div class=\"ng2-smart-filter\" *ngIf=\"column.isFilterable\" [ngSwitch]=\"column.getFilterType()\">\r\n      <select-filter *ngSwitchCase=\"'list'\"\r\n                     [query]=\"query\"\r\n                     [ngClass]=\"inputClass\"\r\n                     [column]=\"column\"\r\n                     (filter)=\"onFilter($event)\">\r\n      </select-filter>\r\n      <checkbox-filter *ngSwitchCase=\"'checkbox'\"\r\n                       [query]=\"query\"\r\n                       [ngClass]=\"inputClass\"\r\n                       [column]=\"column\"\r\n                       (filter)=\"onFilter($event)\">\r\n      </checkbox-filter>\r\n      <completer-filter *ngSwitchCase=\"'completer'\"\r\n                        [query]=\"query\"\r\n                        [ngClass]=\"inputClass\"\r\n                        [column]=\"column\"\r\n                        (filter)=\"onFilter($event)\">\r\n      </completer-filter>\r\n      <input-filter *ngSwitchDefault\r\n                    [query]=\"query\"\r\n                    [ngClass]=\"inputClass\"\r\n                    [column]=\"column\"\r\n                    (filter)=\"onFilter($event)\">\r\n      </input-filter>\r\n    </div>\r\n  `\r\n})\r\nexport class FilterComponent implements AfterViewInit {\r\n\r\n  @Input() column: Column;\r\n  @Input() source: DataSource;\r\n  @Input() inputClass: string = '';\r\n\r\n  @Output() filter = new EventEmitter<any>();\r\n\r\n  query: string = '';\r\n\r\n  ngAfterViewInit() {\r\n    this.source.onChanged().subscribe((elements) => {\r\n      let filterConf = this.source.getFilter();\r\n      if (filterConf && filterConf.filters && filterConf.filters.length === 0) {\r\n        this.query = '';\r\n      }\r\n    });\r\n  }\r\n\r\n  onFilter(query: string) {\r\n    this.source.addFilter({\r\n      field: this.column.id,\r\n      search: query,\r\n      filter: this.column.getFilterFunction()\r\n    });\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/~/ng2-smart-table/src/ng2-smart-table/components/filter/filter.component.ts","import { Component, Input, Output, EventEmitter } from '@angular/core';\r\n\r\nimport { DataSource } from '../../lib/data-source/data-source';\r\n\r\n@Component({\r\n  selector: 'ng2-smart-table-pager',\r\n  styles: [require('./pager.scss')],\r\n  template: `\r\n    <nav *ngIf=\"shouldShow()\" class=\"ng2-smart-pagination-nav\">\r\n      <ul class=\"ng2-smart-pagination pagination\">\r\n        <li class=\"ng2-smart-page-item page-item\" [ngClass]=\"{disabled: getPage() == 1}\">\r\n          <a class=\"ng2-smart-page-link page-link\" href=\"#\" \r\n          (click)=\"getPage() == 1 ? false : paginate(1)\" aria-label=\"First\">\r\n            <span aria-hidden=\"true\">&laquo;</span>\r\n            <span class=\"sr-only\">First</span>\r\n          </a>\r\n        </li>\r\n        <li class=\"ng2-smart-page-item page-item\" \r\n        [ngClass]=\"{active: getPage() == page}\" *ngFor=\"let page of getPages()\">\r\n          <span class=\"ng2-smart-page-link page-link\" \r\n          *ngIf=\"getPage() == page\">{{ page }} <span class=\"sr-only\">(current)</span></span>\r\n          <a class=\"ng2-smart-page-link page-link\" href=\"#\" \r\n          (click)=\"paginate(page)\" *ngIf=\"getPage() != page\">{{ page }}</a>\r\n        </li>\r\n  \r\n        <li class=\"ng2-smart-page-item page-item\" \r\n        [ngClass]=\"{disabled: getPage() == getLast()}\">\r\n          <a class=\"ng2-smart-page-link page-link\" href=\"#\" \r\n          (click)=\"getPage() == getLast() ? false : paginate(getLast())\" aria-label=\"Last\">\r\n            <span aria-hidden=\"true\">&raquo;</span>\r\n            <span class=\"sr-only\">Last</span>\r\n          </a>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  `\r\n})\r\nexport class PagerComponent {\r\n\r\n  @Input() perPage: number;\r\n  @Input() source: DataSource;\r\n\r\n  @Output() changePage = new EventEmitter<any>();\r\n\r\n  protected pages: Array<any>;\r\n  protected page: number;\r\n  protected count: number = 0;\r\n\r\n  ngOnInit(): void {\r\n    this.source.onChanged().subscribe((changes) => {\r\n      this.page = this.source.getPaging().page;\r\n      this.count = this.source.count();\r\n\r\n      if (this.isPageOutOfBounce()) {\r\n        this.source.setPage(--this.page);\r\n      }\r\n\r\n      this.processPageChange(changes);\r\n      this.initPages();\r\n    });\r\n  }\r\n\r\n  /**\r\n   * We change the page here depending on the action performed against data source\r\n   * if a new element was added to the end of the table - then change the page to the last\r\n   * if a new element was added to the beginning of the table - then to the first page\r\n   * @param changes\r\n   */\r\n  processPageChange(changes): void {\r\n    if (changes['action'] === 'prepend') {\r\n      this.source.setPage(1);\r\n    }\r\n    if (changes['action'] === 'append') {\r\n      this.source.setPage(this.getLast());\r\n    }\r\n  }\r\n\r\n  shouldShow(): boolean {\r\n    return this.source.count() > this.perPage;\r\n  }\r\n\r\n  paginate(page: number): boolean {\r\n    this.source.setPage(page);\r\n    this.page = page;\r\n    this.changePage.emit({ page });\r\n    return false;\r\n  }\r\n\r\n  getPage(): number {\r\n    return this.page;\r\n  }\r\n\r\n  getPages(): Array<any> {\r\n    return this.pages;\r\n  }\r\n\r\n  getLast(): number {\r\n    return Math.ceil(this.count / this.perPage);\r\n  }\r\n\r\n  isPageOutOfBounce(): boolean {\r\n    return (this.page * this.perPage) >= (this.count + this.perPage) && this.page > 1;\r\n  }\r\n\r\n  initPages() {\r\n    let pagesCount = this.getLast();\r\n    let showPagesCount = 4;\r\n    showPagesCount = pagesCount < showPagesCount ? pagesCount : showPagesCount;\r\n    this.pages = [];\r\n\r\n    if (this.shouldShow()) {\r\n\r\n      let middleOne = Math.ceil(showPagesCount / 2);\r\n      middleOne = this.page >= middleOne ? this.page : middleOne;\r\n\r\n      let lastOne = middleOne + Math.floor(showPagesCount / 2);\r\n      lastOne = lastOne >= pagesCount ? pagesCount : lastOne;\r\n\r\n      let firstOne = lastOne - showPagesCount + 1;\r\n\r\n      for (let i = firstOne; i <= lastOne; i++) {\r\n        this.pages.push(i);\r\n      }\r\n    }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/~/ng2-smart-table/src/ng2-smart-table/components/pager/pager.component.ts","import { Component, Input, Output, EventEmitter } from '@angular/core';\r\n\r\nimport { Grid } from '../../../lib/grid';\r\nimport { Row } from '../../../lib/data-set/row';\r\n\r\n@Component({\r\n  selector: 'ng2-st-tbody-create-cancel',\r\n  template: `\r\n    <a href=\"#\" class=\"ng2-smart-action ng2-smart-action-edit-save\"\r\n        [innerHTML]=\"grid.getSetting('edit.saveButtonContent')\" (click)=\"onSave($event)\"></a>\r\n    <a href=\"#\" class=\"ng2-smart-action ng2-smart-action-edit-cancel\"\r\n        [innerHTML]=\"grid.getSetting('edit.cancelButtonContent')\" (click)=\"onCancelEdit($event)\"></a>\r\n  `\r\n})\r\nexport class TbodyCreateCancelComponent {\r\n\r\n  @Input() grid: Grid;\r\n  @Input() row: Row;\r\n  @Input() editConfirm: EventEmitter<any>;\r\n\r\n  onSave(event: any) {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n\r\n    this.grid.save(this.row, this.editConfirm);\r\n  }\r\n\r\n  onCancelEdit(event: any) {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n\r\n    this.row.isInEditing = false;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/~/ng2-smart-table/src/ng2-smart-table/components/tbody/cells/create-cancel.component.ts","import { Component, Input, Output, EventEmitter } from '@angular/core';\r\n\r\nimport { Grid } from '../../../lib/grid';\r\nimport { Row } from '../../../lib/data-set/row';\r\n\r\n@Component({\r\n  selector: 'ng2-st-tbody-edit-delete',\r\n  template: `\r\n    <a href=\"#\" *ngIf=\"grid.getSetting('actions.view')\" class=\"ng2-smart-action ng2-smart-action-view-view\"\r\n        [innerHTML]=\"grid.getSetting('view.viewButtonContent')\" (click)=\"onView($event)\"></a>\r\n    <a href=\"#\" *ngIf=\"grid.getSetting('actions.edit')\" class=\"ng2-smart-action ng2-smart-action-edit-edit\"\r\n        [innerHTML]=\"grid.getSetting('edit.editButtonContent')\" (click)=\"onEdit($event)\"></a>\r\n    <a href=\"#\" *ngIf=\"grid.getSetting('actions.delete')\" class=\"ng2-smart-action ng2-smart-action-delete-delete\"\r\n        [innerHTML]=\"grid.getSetting('delete.deleteButtonContent')\" (click)=\"onDelete($event)\"></a>\r\n  `\r\n})\r\nexport class TbodyEditDeleteComponent {\r\n\r\n  @Input() grid: Grid;\r\n  @Input() row: Row;\r\n  @Input() source: any;\r\n  @Input() deleteConfirm: EventEmitter<any>;\r\n  @Input() editConfirm: EventEmitter<any>;\r\n  @Input() viewConfirm: EventEmitter<any>;\r\n\r\n  @Output() edit = new EventEmitter<any>();\r\n  @Output() view = new EventEmitter<any>();\r\n  @Output() delete = new EventEmitter<any>();\r\n  @Output() editRowSelect = new EventEmitter<any>();\r\n  @Output() viewRowSelect = new EventEmitter<any>();\r\n\r\n  onEdit(event: any) {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n\r\n    this.editRowSelect.emit(this.row);\r\n\r\n    if (this.grid.getSetting('mode') === 'external') {\r\n      this.edit.emit({\r\n        data: this.row.getData(),\r\n        source: this.source\r\n      });\r\n    } else {\r\n      this.grid.edit(this.row);\r\n    }\r\n  }\r\n\r\n  onView(event: any) {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n\r\n    this.viewRowSelect.emit(this.row);\r\n\r\n    if (this.grid.getSetting('mode') === 'external') {\r\n      this.view.emit({\r\n        data: this.row.getData(),\r\n        source: this.source\r\n      });\r\n    } else {\r\n      this.grid.view(this.row);\r\n    }\r\n  }\r\n\r\n  onDelete(event: any) {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n\r\n    if (this.grid.getSetting('mode') === 'external') {\r\n      this.delete.emit({\r\n        data: this.row.getData(),\r\n        source: this.source\r\n      });\r\n    } else {\r\n      this.grid.delete(this.row, this.deleteConfirm);\r\n    }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/~/ng2-smart-table/src/ng2-smart-table/components/tbody/cells/edit-delete.component.ts","export * from './edit-delete.component';\r\nexport * from './create-cancel.component';\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/~/ng2-smart-table/src/ng2-smart-table/components/tbody/cells/index.ts","import { Component, Input, Output, EventEmitter } from '@angular/core';\r\nimport { Grid } from '../../lib/grid';\r\n\r\n@Component({\r\n    selector: '[ng2-st-tbody]',\r\n    template: require('./tbody.component.html')\r\n})\r\nexport class Ng2SmartTableTbodyComponent {\r\n\r\n    @Input() grid: Grid;\r\n    @Input() source: any;\r\n    @Input() deleteConfirm: EventEmitter<any>;\r\n    @Input() editConfirm: EventEmitter<any>;\r\n    @Input() viewConfirm: EventEmitter<any>;\r\n\r\n    @Output() save = new EventEmitter<any>();\r\n    @Output() cancel = new EventEmitter<any>();\r\n    @Output() edit = new EventEmitter<any>();\r\n    @Output() view = new EventEmitter<any>();\r\n    @Output() delete = new EventEmitter<any>();\r\n    @Output() edited = new EventEmitter<any>();\r\n    @Output() userSelectRow = new EventEmitter<any>();\r\n    @Output() editRowSelect = new EventEmitter<any>();\r\n    @Output() viewRowSelect = new EventEmitter<any>();\r\n    @Output() multipleSelectRow = new EventEmitter<any>();\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/~/ng2-smart-table/src/ng2-smart-table/components/tbody/tbody.component.ts","import {\r\n  TbodyCreateCancelComponent,\r\n  TbodyEditDeleteComponent } from './cells';\r\nimport { Ng2SmartTableTbodyComponent } from './tbody.component';\r\n\r\nexport const NG2_SMART_TABLE_TBODY_DIRECTIVES = [\r\n  TbodyCreateCancelComponent,\r\n  TbodyEditDeleteComponent,\r\n  Ng2SmartTableTbodyComponent,\r\n];\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/~/ng2-smart-table/src/ng2-smart-table/components/tbody/tbody.directives.ts","import { Component, Input, AfterViewInit, ElementRef } from '@angular/core';\r\n\r\nimport { Grid } from '../../../lib/grid';\r\n\r\n@Component({\r\n  selector: '[ng2-st-actions-title]',\r\n  template: `\r\n    <div class=\"ng2-smart-title\">{{ grid.getSetting('actions.columnTitle') }}</div>\r\n  `\r\n})\r\nexport class ActionsTitleComponent implements AfterViewInit {\r\n\r\n  @Input() grid: Grid;\r\n\r\n  constructor(private ref: ElementRef) {\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.ref.nativeElement.classList.add('ng2-smart-actions');\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/~/ng2-smart-table/src/ng2-smart-table/components/thead/cells/actions-title.component.ts","import { Component, Input, Output, EventEmitter } from '@angular/core';\r\n\r\nimport { Grid } from '../../../lib/grid';\r\n\r\n@Component({\r\n  selector: 'ng2-st-actions',\r\n  template: `\r\n    <a href=\"#\" class=\"ng2-smart-action ng2-smart-action-add-create\"\r\n        [innerHTML]=\"grid.getSetting('add.createButtonContent')\" (click)=\"$event.preventDefault();create.emit($event)\"></a>\r\n    <a href=\"#\" class=\"ng2-smart-action ng2-smart-action-add-cancel\"\r\n        [innerHTML]=\"grid.getSetting('add.cancelButtonContent')\" (click)=\"$event.preventDefault();grid.createFormShown = false;\"></a>\r\n  `\r\n})\r\nexport class ActionsComponent {\r\n\r\n  @Input() grid: Grid;\r\n  @Output() create = new EventEmitter<any>();\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/~/ng2-smart-table/src/ng2-smart-table/components/thead/cells/actions.component.ts","import { Component, Input, Output, EventEmitter, AfterViewInit, ElementRef } from '@angular/core';\r\n\r\nimport { Grid } from '../../../lib/grid';\r\n\r\n@Component({\r\n  selector: '[ng2-st-add-button]',\r\n  template: `\r\n    <a *ngIf=\"grid.getSetting('actions.add')\" href=\"#\" class=\"ng2-smart-action ng2-smart-action-add-add\"\r\n        [innerHTML]=\"grid.getSetting('add.addButtonContent')\" (click)=\"onAdd($event)\"></a>\r\n  `\r\n})\r\nexport class AddButtonComponent implements AfterViewInit {\r\n\r\n  @Input() grid: Grid;\r\n  @Input() source: any;\r\n  @Output() create = new EventEmitter<any>();\r\n\r\n  constructor(private ref: ElementRef) {\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.ref.nativeElement.classList.add('ng2-smart-actions-title', 'ng2-smart-actions-title-add');\r\n  }\r\n\r\n  onAdd(event: any) {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n    if (this.grid.getSetting('mode') === 'external') {\r\n      this.create.emit({\r\n        source: this.source\r\n      });\r\n    } else\r\n      this.grid.createFormShown = true;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/~/ng2-smart-table/src/ng2-smart-table/components/thead/cells/add-button.component.ts","import { Component, Input } from '@angular/core';\r\n\r\nimport { Grid } from '../../../lib/grid';\r\n\r\n@Component({\r\n  selector: '[ng2-st-checkbox-select-all]',\r\n  template: `\r\n    <input type=\"checkbox\" [ngModel]=\"isAllSelected\">\r\n  `\r\n})\r\nexport class CheckboxSelectAllComponent {\r\n\r\n  @Input() grid: Grid;\r\n  @Input() source: any;\r\n  @Input() isAllSelected: boolean;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/~/ng2-smart-table/src/ng2-smart-table/components/thead/cells/checkbox-select-all.component.ts","import { Component, Input, Output, EventEmitter } from '@angular/core';\r\n\r\nimport { Column } from '../../../lib/data-set/column';\r\n\r\n@Component({\r\n  selector: 'ng2-st-column-title',\r\n  template: `\r\n    <div class=\"ng2-smart-title\">\r\n      <ng2-smart-table-title [source]=\"source\" [column]=\"column\" (sort)=\"sort.emit($event)\"></ng2-smart-table-title>\r\n    </div>\r\n  `\r\n})\r\nexport class ColumnTitleComponent {\r\n\r\n  @Input() column: Column;\r\n  @Input() source: any;\r\n  @Output() sort = new EventEmitter<any>();\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/~/ng2-smart-table/src/ng2-smart-table/components/thead/cells/column-title.component.ts","export * from './title/title.component';\r\nexport * from './actions-title.component';\r\nexport * from './actions.component';\r\nexport * from './add-button.component';\r\nexport * from './checkbox-select-all.component';\r\nexport * from './column-title.component';\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/~/ng2-smart-table/src/ng2-smart-table/components/thead/cells/index.ts","import { Component, Input, Output, EventEmitter, OnInit } from '@angular/core';\r\n\r\nimport { DataSource } from '../../../../lib/data-source/data-source';\r\nimport { Column } from '../../../../lib/data-set/column';\r\n\r\n@Component({\r\n  selector: 'ng2-smart-table-title',\r\n  styles: [require('./title.component.scss')],\r\n  template: `\r\n    <a href=\"#\" *ngIf=\"column.isSortable\"\r\n                (click)=\"_sort($event, column)\" \r\n                class=\"ng2-smart-sort-link sort\"\r\n                [ngClass]=\"currentDirection\">\r\n      {{ column.title }}\r\n    </a>\r\n    <span class=\"ng2-smart-sort\" *ngIf=\"!column.isSortable\">{{ column.title }}</span>\r\n  `\r\n})\r\nexport class TitleComponent implements OnInit {\r\n\r\n  currentDirection = '';\r\n  @Input() column: Column;\r\n  @Input() source: DataSource;\r\n  @Output() sort = new EventEmitter<any>();\r\n\r\n  ngOnInit() {\r\n    this.source.onChanged().subscribe((elements) => {\r\n      let sortConf = this.source.getSort();\r\n\r\n      if (sortConf.length > 0 && sortConf[0]['field'] === this.column.id)\r\n        this.currentDirection = sortConf[0]['direction'];\r\n      else\r\n        this.currentDirection = '';\r\n\r\n      sortConf.forEach((fieldConf) => {\r\n\r\n      });\r\n    });\r\n  }\r\n\r\n  _sort(event: any) {\r\n    event.preventDefault();\r\n    this.changeSortDirection();\r\n    this.source.setSort([\r\n      {\r\n        field: this.column.id,\r\n        direction: this.currentDirection,\r\n        compare: this.column.getCompareFunction()\r\n      }\r\n    ]);\r\n    this.sort.emit(null);\r\n  }\r\n\r\n  changeSortDirection(): string {\r\n    if (this.currentDirection) {\r\n      let newDirection = this.currentDirection === 'asc' ? 'desc' : 'asc';\r\n      this.currentDirection = newDirection;\r\n    } else {\r\n      this.currentDirection = this.column.sortDirection;\r\n    }\r\n    return this.currentDirection;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/~/ng2-smart-table/src/ng2-smart-table/components/thead/cells/title/title.component.ts","export * from './thead-filters-row.component';\r\nexport * from './thead-form-row.component';\r\nexport * from './thead-titles-row.component';\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/~/ng2-smart-table/src/ng2-smart-table/components/thead/rows/index.ts","import { Component, Input, Output, EventEmitter } from '@angular/core';\r\n\r\nimport { Grid } from '../../../lib/grid';\r\n\r\n@Component({\r\n  selector: '[ng2-st-thead-filters-row]',\r\n  template: `\r\n    <th *ngIf=\"grid.isMultiSelectVisible()\"></th>\r\n    <th ng2-st-add-button *ngIf=\"grid.showActionColumn('left')\"\r\n                          [grid]=\"grid\"\r\n                          (create)=\"create.emit($event)\">\r\n    </th>\r\n    <th *ngFor=\"let column of grid.getColumns()\" class=\"ng2-smart-th {{ column.id }}\">\r\n      <ng2-smart-table-filter [source]=\"source\"\r\n                              [column]=\"column\"\r\n                              [inputClass]=\"grid.getSetting('filter.inputClass')\"\r\n                              (filter)=\"filter.emit($event)\">\r\n      </ng2-smart-table-filter>\r\n    </th>\r\n    <th ng2-st-add-button *ngIf=\"grid.showActionColumn('right')\"\r\n                          [grid]=\"grid\"\r\n                          [source]=\"source\"                          \r\n                          (create)=\"create.emit($event)\">\r\n    </th>\r\n    `\r\n})\r\nexport class TheadFitlersRowComponent {\r\n\r\n  @Input() grid: Grid;\r\n  @Input() source: any;\r\n  @Output() create = new EventEmitter<any>();\r\n  @Output() filter = new EventEmitter<any>();\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/~/ng2-smart-table/src/ng2-smart-table/components/thead/rows/thead-filters-row.component.ts","import { Component, Input, Output, EventEmitter } from '@angular/core';\r\n\r\nimport { Grid } from '../../../lib/grid';\r\nimport { Row } from '../../../lib/data-set/row';\r\n\r\n@Component({\r\n  selector: '[ng2-st-thead-form-row]',\r\n  template: `\r\n      <td *ngIf=\"grid.isMultiSelectVisible()\"></td>\r\n      <td class=\"ng2-smart-actions\">\r\n        <ng2-st-actions [grid]=\"grid\" (create)=\"onCreate($event)\"></ng2-st-actions>\r\n      </td>\r\n      <td *ngFor=\"let cell of grid.getNewRow().getCells()\">\r\n        <ng2-smart-table-cell [cell]=\"cell\"\r\n                              [grid]=\"grid\"\r\n                              [isNew]=\"true\"\r\n                              [createConfirm]=\"createConfirm\"\r\n                              [inputClass]=\"grid.getSetting('add.inputClass')\"\r\n                              [isInEditing]=\"grid.getNewRow().isInEditing\"\r\n                              (edited)=\"onCreate($event)\">\r\n        </ng2-smart-table-cell>\r\n      </td>\r\n    `\r\n})\r\nexport class TheadFormRowComponent {\r\n\r\n  @Input() grid: Grid;\r\n  @Input() row: Row;\r\n  @Input() createConfirm: EventEmitter<any>;\r\n  @Output() create = new EventEmitter<any>();\r\n\r\n  onCreate(event: any) {\r\n    event.stopPropagation();\r\n\r\n    this.grid.create(this.grid.getNewRow(), this.createConfirm);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/~/ng2-smart-table/src/ng2-smart-table/components/thead/rows/thead-form-row.component.ts","import { Component, Input, Output, EventEmitter } from '@angular/core';\r\n\r\nimport { Grid } from '../../../lib/grid';\r\n\r\n@Component({\r\n  selector: '[ng2-st-thead-titles-row]',\r\n  template: `\r\n    <th ng2-st-checkbox-select-all *ngIf=\"grid.isMultiSelectVisible()\"\r\n                                   [grid]=\"grid\"\r\n                                   [source]=\"source\"\r\n                                   [isAllSelected]=\"isAllSelected\"\r\n                                   (click)=\"selectAllRows.emit($event)\">\r\n    </th>\r\n    <th ng2-st-actions-title *ngIf=\"grid.showActionColumn('left')\" [grid]=\"grid\"></th>\r\n    <th *ngFor=\"let column of grid.getColumns()\" class=\"ng2-smart-th {{ column.id }}\" [ngClass]=\"column.class\">\r\n      <ng2-st-column-title [source]=\"source\" [column]=\"column\" (sort)=\"sort.emit($event)\"></ng2-st-column-title>\r\n    </th>\r\n    <th ng2-st-actions-title *ngIf=\"grid.showActionColumn('right')\" [grid]=\"grid\"></th>\r\n    `\r\n})\r\nexport class TheadTitlesRowComponent {\r\n\r\n  @Input() grid: Grid;\r\n  @Input() isAllSelected: boolean;\r\n  @Input() source: any;\r\n\r\n  @Output() sort = new EventEmitter<any>();\r\n  @Output() selectAllRows = new EventEmitter<any>();\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/~/ng2-smart-table/src/ng2-smart-table/components/thead/rows/thead-titles-row.component.ts","import { Component, Input, Output, EventEmitter } from '@angular/core';\r\n\r\nimport { Grid } from '../../lib/grid';\r\n\r\n@Component({\r\n    selector: '[ng2-st-thead]',\r\n    template: require('./thead.component.html')\r\n})\r\nexport class Ng2SmartTableTheadComponent {\r\n\r\n    @Input() grid: Grid;\r\n    @Input() source: any;\r\n    @Input() isAllSelected: boolean;\r\n    @Input() createConfirm: EventEmitter<any>;\r\n\r\n    @Output() sort = new EventEmitter<any>();\r\n    @Output() selectAllRows = new EventEmitter<any>();\r\n    @Output() create = new EventEmitter<any>();\r\n    @Output() filter = new EventEmitter<any>();\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/~/ng2-smart-table/src/ng2-smart-table/components/thead/thead.component.ts","import {\r\n  ActionsComponent,\r\n  ActionsTitleComponent,\r\n  AddButtonComponent,\r\n  CheckboxSelectAllComponent,\r\n  ColumnTitleComponent,\r\n  TitleComponent } from './cells';\r\nimport {\r\n  TheadFitlersRowComponent,\r\n  TheadFormRowComponent,\r\n  TheadTitlesRowComponent } from './rows';\r\nimport { Ng2SmartTableTheadComponent } from './thead.component';\r\n\r\nexport const NG2_SMART_TABLE_THEAD_DIRECTIVES = [\r\n  ActionsComponent,\r\n  ActionsTitleComponent,\r\n  AddButtonComponent,\r\n  CheckboxSelectAllComponent,\r\n  ColumnTitleComponent,\r\n  TitleComponent,\r\n  TheadFitlersRowComponent,\r\n  TheadFormRowComponent,\r\n  TheadTitlesRowComponent,\r\n  Ng2SmartTableTheadComponent,\r\n];\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/~/ng2-smart-table/src/ng2-smart-table/components/thead/thead.directives.ts","import { Row } from './row';\r\nimport { Column } from './column';\r\n\r\nexport class DataSet {\r\n\r\n  public newRow: Row;\r\n\r\n  protected data: Array<any> = [];\r\n  protected columns: Array<Column> = [];\r\n  protected rows: Array<Row> = [];\r\n  protected selectedRow: Row;\r\n  protected willSelect: string = 'first';\r\n\r\n  constructor(data: Array<any> = [], protected columnSettings: Object) {\r\n    this.createColumns(columnSettings);\r\n    this.setData(data);\r\n\r\n    this.createNewRow();\r\n  }\r\n\r\n  setData(data: Array<any>): void {\r\n    this.data = data;\r\n    this.createRows();\r\n  }\r\n\r\n  getColumns(): Array<Column> {\r\n    return this.columns;\r\n  }\r\n\r\n  getRows(): Array<Row> {\r\n    return this.rows;\r\n  }\r\n\r\n  findRowByData(data): Row {\r\n    return this.rows.find((row: Row) => row.getData() === data);\r\n  }\r\n\r\n  deselectAll(): void {\r\n    this.rows.forEach((row) => {\r\n      row.isSelected = false;\r\n    });\r\n  }\r\n\r\n  selectRow(row: Row): Row {\r\n    this.deselectAll();\r\n\r\n    row.isSelected = true;\r\n    this.selectedRow = row;\r\n\r\n    return this.selectedRow;\r\n  }\r\n\r\n  multipleSelectRow(row: Row): Row {\r\n    row.isSelected = !row.isSelected;\r\n    this.selectedRow = row;\r\n\r\n    return this.selectedRow;\r\n  }\r\n\r\n  selectPreviousRow(): Row {\r\n    if (this.rows.length > 0) {\r\n      let index = this.selectedRow ? this.selectedRow.index : 0;\r\n      if (index > this.rows.length - 1) {\r\n        index = this.rows.length - 1;\r\n      }\r\n      this.selectRow(this.rows[index]);\r\n      return this.selectedRow;\r\n    }\r\n  }\r\n\r\n  selectFirstRow(): Row {\r\n    if (this.rows.length > 0) {\r\n      this.selectRow(this.rows[0]);\r\n      return this.selectedRow;\r\n    }\r\n  }\r\n\r\n  selectLastRow(): Row {\r\n    if (this.rows.length > 0) {\r\n      this.selectRow(this.rows[this.rows.length - 1]);\r\n      return this.selectedRow;\r\n    }\r\n  }\r\n\r\n  willSelectFirstRow(): void {\r\n    this.willSelect = 'first';\r\n  }\r\n\r\n  willSelectLastRow(): void {\r\n    this.willSelect = 'last';\r\n  }\r\n\r\n  select(): Row {\r\n    if (this.getRows().length === 0) {\r\n      return;\r\n    }\r\n    if (this.willSelect) {\r\n      if (this.willSelect === 'first') {\r\n        this.selectFirstRow();\r\n      }\r\n      if (this.willSelect === 'last') {\r\n        this.selectLastRow();\r\n      }\r\n      this.willSelect = '';\r\n    } else {\r\n      this.selectFirstRow();\r\n    }\r\n\r\n    return this.selectedRow;\r\n  }\r\n\r\n  createNewRow(): void {\r\n    this.newRow = new Row(0, {}, this);\r\n    this.newRow.isInEditing = true;\r\n  }\r\n\r\n  /**\r\n   * Create columns by mapping from the settings\r\n   * @param settings\r\n   * @private\r\n   */\r\n  createColumns(settings) {\r\n    for (let id in settings) {\r\n      if (settings.hasOwnProperty(id)) {\r\n        this.columns.push(new Column(id, settings[id], this));\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Create rows based on current data prepared in data source\r\n   * @private\r\n   */\r\n  createRows() {\r\n    this.rows = [];\r\n    this.data.forEach((el, index) => {\r\n      this.rows.push(new Row(index, el, this));\r\n    });\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/~/ng2-smart-table/src/ng2-smart-table/lib/data-set/data-set.ts","export class LocalFilter {\r\n\r\n  protected static FILTER = (value: string, search: string) => {\r\n    return value.toString().toLowerCase().includes(search.toString().toLowerCase());\r\n  };\r\n\r\n  static filter(data: Array<any>, field: string, search: string, customFilter?: Function): Array<any> {\r\n    let filter: Function = customFilter ? customFilter : this.FILTER;\r\n\r\n    return data.filter((el) => {\r\n      let value = typeof el[field] === 'undefined' || el[field] === null ? '' : el[field];\r\n      return filter.call(null, value, search);\r\n    });\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/~/ng2-smart-table/src/ng2-smart-table/lib/data-source/local/local.filter.ts","export class LocalPager {\r\n  \r\n  static paginate(data: Array<any>, page: number, perPage: number): Array<any> {\r\n    return data.slice(perPage * (page - 1), perPage * page);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/~/ng2-smart-table/src/ng2-smart-table/lib/data-source/local/local.pager.ts","export class LocalSorter {\r\n\r\n  protected static COMPARE = (direction, a, b) => {\r\n    if (a < b) {\r\n      return -1 * direction;\r\n    }\r\n    if (a > b) {\r\n      return direction;\r\n    }\r\n    return 0;\r\n  };\r\n\r\n  static sort(data: Array<any>, field: string, direction: string, customCompare?: Function): Array<any> {\r\n\r\n    let dir: number = (direction === 'asc') ? 1 : -1;\r\n    let compare: Function = customCompare ? customCompare : this.COMPARE;\r\n\r\n    return data.sort((a, b) => {\r\n      return compare.call(null, dir, a[field], b[field]);\r\n    });\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/~/ng2-smart-table/src/ng2-smart-table/lib/data-source/local/local.sorter.ts","module.exports = \"/deep/ .ng2-smart-filter input, /deep/ .ng2-smart-filter select {\\n  width: 100%;\\n  line-height: normal;\\n  padding: 0.3rem 0.5rem;\\n  font-weight: normal; }\\n\\n/deep/ .ng2-smart-filter input[type=\\\"search\\\"] {\\n  box-sizing: inherit; }\\n\\n/deep/ .ng2-smart-filter .completer-dropdown-holder {\\n  font-weight: normal; }\\n\\n/deep/ .ng2-smart-filter a {\\n  font-weight: normal; }\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/~/ng2-smart-table/src/ng2-smart-table/components/filter/filter.scss\n// module id = 1226\n// module chunks = 1 2 3 4 5 6","module.exports = \".ng2-smart-pagination {\\n  display: inline-block;\\n  font-size: .875rem;\\n  padding: 0; }\\n  .ng2-smart-pagination .sr-only {\\n    position: absolute;\\n    width: 1px;\\n    height: 1px;\\n    padding: 0;\\n    margin: -1px;\\n    overflow: hidden;\\n    clip: rect(0, 0, 0, 0);\\n    border: 0; }\\n  .ng2-smart-pagination .ng2-smart-page-item {\\n    display: inline; }\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/~/ng2-smart-table/src/ng2-smart-table/components/pager/pager.scss\n// module id = 1227\n// module chunks = 1 2 3 4 5 6","module.exports = \"a.sort.asc, a.sort.desc {\\n  font-weight: bold; }\\n  a.sort.asc::after, a.sort.desc::after {\\n    content: '';\\n    display: inline-block;\\n    width: 0;\\n    height: 0;\\n    border-bottom: 4px solid rgba(0, 0, 0, 0.3);\\n    border-top: 4px solid transparent;\\n    border-left: 4px solid transparent;\\n    border-right: 4px solid transparent;\\n    margin-bottom: 2px; }\\n\\na.sort.desc::after {\\n  transform: rotate(-180deg);\\n  margin-bottom: -2px; }\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/~/ng2-smart-table/src/ng2-smart-table/components/thead/cells/title/title.component.scss\n// module id = 1228\n// module chunks = 1 2 3 4 5 6","module.exports = \"/deep/ table.ng2-smart-table {\\n  font-family: \\\"Open Sans\\\", \\\"Helvetica Neue\\\", Helvetica, Arial, sans-serif;\\n  font-size: 16px;\\n  line-height: 1.5;\\n  color: #606c71;\\n  border-collapse: collapse;\\n  border-spacing: 0;\\n  display: table;\\n  width: 100%;\\n  max-width: 100%;\\n  overflow: auto;\\n  word-break: normal;\\n  word-break: keep-all; }\\n  /deep/ table.ng2-smart-table td, /deep/ table.ng2-smart-table th {\\n    font-size: .875rem;\\n    margin: 0;\\n    padding: 0.5rem 1rem;\\n    border: 1px solid #e9ebec; }\\n  /deep/ table.ng2-smart-table .ng2-smart-row.selected {\\n    background: rgba(0, 0, 0, 0.05); }\\n  /deep/ table.ng2-smart-table .ng2-smart-row .ng2-smart-actions.ng2-smart-action-multiple-select {\\n    text-align: center; }\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/~/ng2-smart-table/src/ng2-smart-table/ng2-smart-table.scss\n// module id = 1229\n// module chunks = 1 2 3 4 5 6","module.exports = \"<div [ngSwitch]=\\\"getEditorType()\\\">\\r\\n    <select-editor *ngSwitchCase=\\\"'list'\\\"\\r\\n                   [cell]=\\\"cell\\\"\\r\\n                   [inputClass]=\\\"inputClass\\\"\\r\\n                   (onClick)=\\\"onClick($event)\\\"\\r\\n                   (onEdited)=\\\"onEdited($event)\\\"\\r\\n                   (onStopEditing)=\\\"onStopEditing()\\\">\\r\\n    </select-editor>\\r\\n\\r\\n    <textarea-editor *ngSwitchCase=\\\"'textarea'\\\"\\r\\n                     [cell]=\\\"cell\\\"\\r\\n                     [inputClass]=\\\"inputClass\\\"\\r\\n                     (onClick)=\\\"onClick($event)\\\"\\r\\n                     (onEdited)=\\\"onEdited($event)\\\"\\r\\n                     (onStopEditing)=\\\"onStopEditing()\\\">\\r\\n    </textarea-editor>\\r\\n\\r\\n    <checkbox-editor *ngSwitchCase=\\\"'checkbox'\\\"\\r\\n                     [cell]=\\\"cell\\\"\\r\\n                     [inputClass]=\\\"inputClass\\\"\\r\\n                     (onClick)=\\\"onClick($event)\\\">\\r\\n    </checkbox-editor>\\r\\n\\r\\n    <completer-editor *ngSwitchCase=\\\"'completer'\\\"\\r\\n                      [cell]=\\\"cell\\\">\\r\\n    </completer-editor>\\r\\n\\r\\n    <input-editor *ngSwitchDefault\\r\\n                  [cell]=\\\"cell\\\"\\r\\n                  [inputClass]=\\\"inputClass\\\"\\r\\n                  (onClick)=\\\"onClick($event)\\\"\\r\\n                  (onEdited)=\\\"onEdited($event)\\\"\\r\\n                  (onStopEditing)=\\\"onStopEditing()\\\">\\r\\n    </input-editor>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/~/ng2-smart-table/src/ng2-smart-table/components/cell/cell-edit-mode/default-edit.component.html\n// module id = 1230\n// module chunks = 1 2 3 4 5 6","module.exports = \"<tr *ngFor=\\\"let row of grid.getRows()\\\" (click)=\\\"userSelectRow.emit(row)\\\" class=\\\"ng2-smart-row\\\" [ngClass]=\\\"{selected: row.isSelected}\\\">\\r\\n  <td *ngIf=\\\"grid.isMultiSelectVisible()\\\" class=\\\"ng2-smart-actions ng2-smart-action-multiple-select\\\" (click)=\\\"multipleSelectRow.emit(row)\\\">\\r\\n    <input type=\\\"checkbox\\\" class=\\\"form-control\\\" [ngModel]=\\\"row.isSelected\\\">\\r\\n  </td>\\r\\n  <td *ngIf=\\\"!row.isInEditing && grid.showActionColumn('left')\\\" class=\\\"ng2-smart-actions\\\" style=\\\"width: 120px;\\\">\\r\\n    <ng2-st-tbody-edit-delete [grid]=\\\"grid\\\"\\r\\n                              [deleteConfirm]=\\\"deleteConfirm\\\"\\r\\n                              [editConfirm]=\\\"editConfirm\\\"\\r\\n                              [viewConfirm]=\\\"viewConfirm\\\"\\r\\n                              (edit)=\\\"edit.emit(row)\\\"\\r\\n                              (view)=\\\"view.emit(row)\\\"\\r\\n                              (delete)=\\\"delete.emit(row)\\\"\\r\\n                              (editRowSelect)=\\\"editRowSelect.emit($event)\\\"\\r\\n                              (viewRowSelect)=\\\"viewRowSelect.emit($event)\\\"\\r\\n                              [row]=\\\"row\\\"\\r\\n                              [source]=\\\"source\\\">\\r\\n    </ng2-st-tbody-edit-delete>\\r\\n  </td>\\r\\n  <td *ngIf=\\\"row.isInEditing\\\" class=\\\"ng2-smart-actions\\\">\\r\\n    <ng2-st-tbody-create-cancel [grid]=\\\"grid\\\" [row]=\\\"row\\\" [editConfirm]=\\\"editConfirm\\\"></ng2-st-tbody-create-cancel>\\r\\n  </td>\\r\\n  <td *ngFor=\\\"let cell of row.getCells()\\\">\\r\\n    <ng2-smart-table-cell [cell]=\\\"cell\\\"\\r\\n                          [grid]=\\\"grid\\\"\\r\\n                          [row]=\\\"row\\\"\\r\\n                          [isNew]=\\\"false\\\"\\r\\n                          [mode]=\\\"grid.getSetting('mode')\\\"\\r\\n                          [editConfirm]=\\\"editConfirm\\\"\\r\\n                          [inputClass]=\\\"grid.getSetting('edit.inputClass')\\\"\\r\\n                          [isInEditing]=\\\"row.isInEditing\\\">\\r\\n    </ng2-smart-table-cell>\\r\\n  </td>\\r\\n  \\r\\n  <td *ngIf=\\\"!row.isInEditing && grid.showActionColumn('right')\\\" class=\\\"ng2-smart-actions\\\">\\r\\n    <ng2-st-tbody-edit-delete [grid]=\\\"grid\\\"\\r\\n                              [deleteConfirm]=\\\"deleteConfirm\\\"\\r\\n                              [editConfirm]=\\\"editConfirm\\\"\\r\\n                              [row]=\\\"row\\\"\\r\\n                              [source]=\\\"source\\\"\\r\\n                              (edit)=\\\"edit.emit(row)\\\"\\r\\n                              (delete)=\\\"delete.emit(row)\\\"\\r\\n                              (editRowSelect)=\\\"editRowSelect.emit($event)\\\">\\r\\n    </ng2-st-tbody-edit-delete>\\r\\n  </td>\\r\\n  </tr>\\r\\n\\r\\n  <tr *ngIf=\\\"grid.getRows().length == 0\\\">\\r\\n  <td [attr.colspan]=\\\"grid.getColumns().length + (grid.getSetting('actions.add') || grid.getSetting('actions.edit') || grid.getSetting('actions.delete'))\\\">\\r\\n    {{ grid.getSetting('noDataMessage') }}\\r\\n  </td>\\r\\n</tr>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/~/ng2-smart-table/src/ng2-smart-table/components/tbody/tbody.component.html\n// module id = 1231\n// module chunks = 1 2 3 4 5 6","module.exports = \"<tr ng2-st-thead-titles-row *ngIf=\\\"!grid.getSetting('hideHeader')\\\"\\r\\n                            class=\\\"ng2-smart-titles\\\"\\r\\n                            [grid]=\\\"grid\\\"\\r\\n                            [isAllSelected]=\\\"isAllSelected\\\"\\r\\n                            [source]=\\\"source\\\"\\r\\n                            (sort)=\\\"sort.emit($event)\\\"\\r\\n                            (selectAllRows)=\\\"selectAllRows.emit($event)\\\">\\r\\n</tr>\\r\\n\\r\\n<tr ng2-st-thead-filters-row *ngIf=\\\"!grid.getSetting('hideSubHeader')\\\"\\r\\n                              class=\\\"ng2-smart-filters\\\"\\r\\n                              [grid]=\\\"grid\\\"\\r\\n                              [source]=\\\"source\\\"\\r\\n                              (create)=\\\"create.emit($event)\\\"\\r\\n                              (filter)=\\\"filter.emit($event)\\\">\\r\\n</tr>\\r\\n<tr ng2-st-thead-form-row *ngIf=\\\"grid.createFormShown\\\"\\r\\n                          [grid]=\\\"grid\\\"\\r\\n                          [createConfirm]=\\\"createConfirm\\\">\\r\\n</tr>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/~/ng2-smart-table/src/ng2-smart-table/components/thead/thead.component.html\n// module id = 1232\n// module chunks = 1 2 3 4 5 6","module.exports = \"<div class=\\\"ng2-smart-table-container\\\">\\r\\n  <table class=\\\"ng2-smart-table table\\\" [id]=\\\"grid.getSetting('attr.id')\\\" [ngClass]=\\\"grid.getSetting('attr.class')\\\">\\r\\n\\r\\n    <thead ng2-st-thead *ngIf=\\\"!grid.getSetting('hideHeader') || !grid.getSetting('hideSubHeader')\\\"\\r\\n                        [grid]=\\\"grid\\\"\\r\\n                        [isAllSelected]=\\\"isAllSelected\\\"\\r\\n                        [source]=\\\"source\\\"\\r\\n                        [createConfirm]=\\\"createConfirm\\\"\\r\\n                        (create)=\\\"create.emit($event)\\\"\\r\\n                        (selectAllRows)=\\\"onSelectAllRows($event)\\\"\\r\\n                        (sort)=\\\"sort($event)\\\"\\r\\n                        (filter)=\\\"filter($event)\\\">\\r\\n    </thead>\\r\\n\\r\\n    <tbody ng2-st-tbody [grid]=\\\"grid\\\"\\r\\n                        [source]=\\\"source\\\"\\r\\n                        [deleteConfirm]=\\\"deleteConfirm\\\"\\r\\n                        [editConfirm]=\\\"editConfirm\\\"\\r\\n                        [viewConfirm]=\\\"viewConfirm\\\"\\r\\n                        (edit)=\\\"edit.emit($event)\\\"\\r\\n                        (view)=\\\"view.emit($event)\\\"\\r\\n                        (delete)=\\\"delete.emit($event)\\\"\\r\\n                        (userSelectRow)=\\\"onUserSelectRow($event)\\\"\\r\\n                        (editRowSelect)=\\\"editRowSelect($event)\\\"\\r\\n                        (viewRowSelect)=\\\"viewRowSelect($event)\\\"\\r\\n                        (multipleSelectRow)=\\\"multipleSelectRow($event)\\\">\\r\\n    </tbody>\\r\\n\\r\\n  </table>\\r\\n\\r\\n  <ng2-smart-table-pager *ngIf=\\\"grid.getSetting('pager.display')\\\"\\r\\n                         [source]=\\\"source\\\"\\r\\n                         [perPage]=\\\"grid.getSetting('pager.perPage')\\\"\\r\\n                         (changePage)=\\\"changePage($event)\\\">\\r\\n  </ng2-smart-table-pager>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/~/ng2-smart-table/src/ng2-smart-table/ng2-smart-table.html\n// module id = 1233\n// module chunks = 1 2 3 4 5 6","//import { BehaviorSubject } from 'rxjs/BehaviorSubject';\r\nimport { Component, ViewChild } from \"@angular/core\";\r\nimport { MdDialog } from \"@angular/material\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport * as moment from 'moment';\r\nimport { BehaviorSubject } from \"rxjs/BehaviorSubject\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { TAcList } from \"../../../../common/interfaces/index\";\r\nimport { FileUploaderPopUpSettings, FileUploaderPopupComponent } from \"../../../../common/popupLists/file-uploader/file-uploader-popup.component\";\r\nimport {\r\n  GenericPopUpComponent,\r\n  GenericPopUpSettings\r\n} from \"../../../../common/popupLists/generic-grid/generic-popup-grid.component\";\r\nimport { AlertService } from \"../../../../common/services/alert/alert.service\";\r\nimport { SpinnerService } from \"../../../../common/services/spinner/spinner.service\";\r\nimport { TransactionService } from \"./../../../../common/Transaction Components/transaction.service\";\r\nimport { PREFIX } from \"./../../../../common/interfaces/Prefix.interface\";\r\nimport { MasterRepo } from \"./../../../../common/repositories/masterRepo.service\";\r\n\r\n@Component({\r\n  selector: 'addpurchaseinvoice',\r\n  template: require('./addpurchaseinvoice.html'),\r\n  providers: [TransactionService],\r\n  styles: [\r\n    `\r\n      .GRNPopUp tbody tr:hover {\r\n        background-color: #e0e0e0;\r\n      }\r\n      .GRNPopUp tr.active td {\r\n        background-color: #123456 !important;\r\n        color: white;\r\n      }\r\n      .modal-dialog.modal-md {\r\n        top: 45%;\r\n        margin-top: 0px;\r\n      }\r\n\r\n      .modal-dialog.modal-sm {\r\n        top: 45%;\r\n        margin-top: 0px;\r\n      }\r\n    `\r\n  ]\r\n})\r\nexport class AddPurchaseInvoiceComponent {\r\n  @ViewChild(\"genericHOSalesInvoiceGridTI\")\r\n  genericHOSalesInvoiceGridTI: GenericPopUpComponent;\r\n\r\n  @ViewChild(\"genericsGridSAPPI\")\r\n  genericsGridSAPPI: GenericPopUpComponent;\r\n\r\n  @ViewChild(\"fileUploadPopup\") fileUploadPopup: FileUploaderPopupComponent;\r\n  fileUploadPopupSettings: FileUploaderPopUpSettings = new FileUploaderPopUpSettings();\r\n\r\n  gridHoSalesInvoicePopupSettings: GenericPopUpSettings = new GenericPopUpSettings();\r\n  gridSAPPIPopupSettings: GenericPopUpSettings = new GenericPopUpSettings();\r\n\r\n  invoiceType: string;\r\n\r\n  prefix: PREFIX = <PREFIX>{};\r\n  argument: any;\r\n  printInvoice: any;\r\n  dataArriveSubject: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(\r\n    false\r\n  );\r\n  dataArrive$: Observable<boolean> = this.dataArriveSubject.asObservable();\r\n  constructor(\r\n    public masterService: MasterRepo,\r\n    private _trnMainService: TransactionService,\r\n    public dialog: MdDialog,\r\n    private alertService: AlertService,\r\n    private loadingSerive: SpinnerService,\r\n    public route: ActivatedRoute,\r\n  ) {\r\n    this._trnMainService.initialFormLoad(3);\r\n    masterService.Currencies = [];\r\n    masterService.getCurrencies();\r\n\r\n    this.masterService.ShowMore == true;\r\n\r\n\r\n\r\n\r\n    this.route.queryParams\r\n    .subscribe(params => {\r\n      if (params.from == \"Ledger\") {\r\n        if (params.voucherNumber) {\r\n          let VCHR = params.voucherNumber;\r\n          let divphiscal = []\r\n          divphiscal = VCHR.split('-')\r\n          this.loadingSerive.show(\"Loading Invoice\")\r\n          this.masterService.LoadTransaction(VCHR, divphiscal[1], divphiscal[2]).subscribe((res) => {\r\n            if (res.status == \"ok\") {\r\n              this.loadingSerive.hide()\r\n              this._trnMainService.TrnMainObj = res.result;\r\n              this._trnMainService.TrnMainObj.VoucherType = 3;\r\n              this._trnMainService.pageHeading = \"Purchase Invoice\";\r\n              this._trnMainService.TrnMainObj.VoucherPrefix = \"PI\";\r\n              this._trnMainService.TrnMainObj.Mode = \"VIEW\";\r\n            }\r\n          }, err => {\r\n            this.loadingSerive.hide()\r\n            this.alertService.error(err)\r\n          })\r\n    \r\n        }\r\n      }\r\n    });\r\n\r\n    this.gridHoSalesInvoicePopupSettings = {\r\n      title: \"Sales Invoices From Supplier\",\r\n      apiEndpoints: `/getAllHOTaxInvoicePagedList`,\r\n      defaultFilterIndex : 0,\r\n      columns: [\r\n        {\r\n          key: \"CHALANNO\",\r\n          title: \"Bill No\",\r\n          hidden: false,\r\n          noSearch: false\r\n        },\r\n        {\r\n          key: \"TRNDATE\",\r\n          title: \"Date\",\r\n          hidden: false,\r\n          noSearch: false\r\n        },\r\n        {\r\n          key: \"NETAMNT\",\r\n          title: \"Amount\",\r\n          hidden: false,\r\n          noSearch: false\r\n        },\r\n       \r\n      ]\r\n    };\r\n\r\n    this.gridSAPPIPopupSettings = {\r\n      title: \"Purchase Invoice From SAP\",\r\n      apiEndpoints: `/getAllSAPPurchaseInvoicePagedList`,\r\n      defaultFilterIndex : 0,\r\n      columns: [\r\n        {\r\n          key: \"VCHRNO\",\r\n          title: \"VOUCHER NO.\",\r\n          hidden: false,\r\n          noSearch: false\r\n        },\r\n        {\r\n          key: \"PLANTDESC\",\r\n          title: \"PLANT\",\r\n          hidden: false,\r\n          noSearch: false\r\n        },\r\n        {\r\n          key: \"INVDATE\",\r\n          title: \"INVOICE DATE\",\r\n          hidden: false,\r\n          noSearch: false\r\n        }\r\n    ]\r\n    };\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.route.queryParams.subscribe(params => {\r\n      if (params['mode']==\"DRILL\") {\r\n        let VCHR = params['voucher']\r\n        let vparams = []\r\n        vparams = VCHR.split('-');\r\n        let pcl = params['pcl'];\r\n        this.masterService.PCL_VALUE=pcl;\r\n        this.loadingSerive.show(\"Loading Invoice\")\r\n        this.masterService.LoadTransaction(VCHR, vparams[1], vparams[2]).subscribe((res) => {\r\n          if (res.status == \"ok\") {\r\n            this.loadingSerive.hide()\r\n            this._trnMainService.TrnMainObj = res.result;\r\n            this._trnMainService.TrnMainObj.VoucherType = 3;\r\n            this._trnMainService.pageHeading = \"Purchase Invoice\";\r\n            this._trnMainService.TrnMainObj.VoucherPrefix = \"PI\";\r\n            this._trnMainService.TrnMainObj.Mode = \"VIEW\";\r\n\r\n            this._trnMainService.TrnMainObj.TRNDATE=(this._trnMainService.TrnMainObj.TRNDATE == null || this._trnMainService.TrnMainObj.TRNDATE == \"\" || this._trnMainService.TrnMainObj.TRNDATE === undefined)?this._trnMainService.TrnMainObj.TRNDATE:moment(this._trnMainService.TrnMainObj.TRNDATE).format(\"YYYY-MM-DD\");\r\n            this._trnMainService.TrnMainObj.TRN_DATE=(this._trnMainService.TrnMainObj.TRN_DATE == null || this._trnMainService.TrnMainObj.TRN_DATE == \"\" || this._trnMainService.TrnMainObj.TRN_DATE === undefined)?this._trnMainService.TrnMainObj.TRN_DATE:moment(this._trnMainService.TrnMainObj.TRN_DATE).format(\"YYYY-MM-DD\");\r\n            this._trnMainService.TrnMainObj.TOTALQTY=0\r\n            this._trnMainService.TrnMainObj.GROSSAMNT=0\r\n            this._trnMainService.TrnMainObj.ProdList.forEach(x=>{\r\n             // x.ALTERNATEQUANTIY == 0 ?x.ALTERNATEQUANTIY=x.AltQty:x.ALTERNATEQUANTIY,\r\n             this._trnMainService.TrnMainObj.TOTALQTY += this._trnMainService.nullToZeroConverter(x.ALTERNATEQUANTIY);\r\n             this._trnMainService.TrnMainObj.GROSSAMNT += this._trnMainService.nullToZeroConverter(x.AMOUNT);\r\n            })\r\n            this._trnMainService.TrnMainObj.NETWITHOUTROUNDOFF= this._trnMainService.TrnMainObj.NETWITHOUTROUNDOFF==0?  this._trnMainService.TrnMainObj.NETAMNT:this._trnMainService.TrnMainObj.NETWITHOUTROUNDOFF\r\n            if (this._trnMainService.TrnMainObj.AdditionalObj == null) {\r\n              this._trnMainService.TrnMainObj.AdditionalObj = <any>{};\r\n            }\r\n          }\r\n        }, err => {\r\n          this.loadingSerive.hide()\r\n          this.alertService.error(err)\r\n        })\r\n  \r\n      }else if (params['mode']==\"fromLatepost\") {\r\n        this.loadingSerive.show(\"Loading Invoice\")\r\n        let pcl = params['pcl'];\r\n        this.masterService.PCL_VALUE=pcl;\r\n        this.masterService.LoadTransaction(params.voucher, params.DIVISION, params.PHISCALID).subscribe((res) => {\r\n          if (res.status == \"ok\") {\r\n            this.loadingSerive.hide()\r\n            this._trnMainService.TrnMainObj = res.result;\r\n            this._trnMainService.TrnMainObj.VoucherType = 3;\r\n            this._trnMainService.pageHeading = \"Purchase Invoice\";\r\n            this._trnMainService.TrnMainObj.VoucherPrefix = \"PI\";\r\n            this._trnMainService.TrnMainObj.Mode = \"VIEW\";\r\n            this._trnMainService.TrnMainObj.TRNDATE=(this._trnMainService.TrnMainObj.TRNDATE == null || this._trnMainService.TrnMainObj.TRNDATE == \"\" || this._trnMainService.TrnMainObj.TRNDATE === undefined)?this._trnMainService.TrnMainObj.TRNDATE:moment(this._trnMainService.TrnMainObj.TRNDATE).format(\"YYYY-MM-DD\");\r\n            this._trnMainService.TrnMainObj.TRN_DATE=(this._trnMainService.TrnMainObj.TRN_DATE == null || this._trnMainService.TrnMainObj.TRN_DATE == \"\" || this._trnMainService.TrnMainObj.TRN_DATE === undefined)?this._trnMainService.TrnMainObj.TRN_DATE:moment(this._trnMainService.TrnMainObj.TRN_DATE).format(\"YYYY-MM-DD\");\r\n\r\n            if (this._trnMainService.TrnMainObj.AdditionalObj == null) {\r\n              this._trnMainService.TrnMainObj.AdditionalObj = <any>{};\r\n            }          }\r\n        }, err => {\r\n          this.loadingSerive.hide()\r\n          this.alertService.error(err)\r\n        })\r\n\r\n      }else{\r\n        this.masterService.refreshTransactionList();\r\n\r\n        this._trnMainService.TrnMainObj.TRNMODE = \"credit\";\r\n        this.masterService.getPurchaseAcList().subscribe(\r\n          res => {\r\n            this._trnMainService.PurchaseAcList.push(<TAcList>res);\r\n          },\r\n          error => {\r\n            this.masterService.resolveError(\r\n              error,\r\n              \"trnmain-purchase-getPurchaseList\"\r\n            );\r\n          },\r\n          () => {\r\n            if (this._trnMainService.AppSettings.MultiplePurchaseAccount == 0) {\r\n              this._trnMainService.TrnMainObj.RETTO = this._trnMainService.AppSettings.PurchaseAc;\r\n            }\r\n            // ////console.log(\"trnmainpurchaseac\",this.TrnMainObj.RETTO,this.AppSettings.PurchaseAc);\r\n          }\r\n        );\r\n    \r\n        this.masterService.getCashList().subscribe(\r\n          res => {\r\n            this._trnMainService.CashList = res;\r\n          },\r\n          error => {\r\n            this.masterService.resolveError(error, \"trnmain-purchase-getCashList\");\r\n          }\r\n        );\r\n    \r\n        this.fileUploadPopupSettings = Object.assign(new FileUploaderPopUpSettings(), \r\n        {\r\n          title : \"Import Purchase Invoice\",\r\n          sampleFileUrl : `/downloadSampleFile/${this._trnMainService.TrnMainObj.VoucherPrefix}`,  \r\n          uploadEndpoints : `/importFileForTransaction/${this._trnMainService.TrnMainObj.VoucherPrefix}`,\r\n          allowMultiple : false,\r\n          acceptFormat : \".xlsx\",\r\n         // note: this.note\r\n        }); \r\n    \r\n      } \r\n    });\r\n      \r\n\r\n  }\r\n  showPurchaseInvoicePopup(){\r\n    this.fileUploadPopup.show();\r\n  }\r\n\r\n  fileUploadSuccess(uploadResult){\r\n    if(uploadResult.status == 'ok'){\r\n         ////console.log(\"purchase invoice\"+JSON.stringify(uploadResult.result))\r\n         //////console.log(\"purchase invoice\"+JSON.stringify(uploadResult.result.prodList)) \r\n        this._trnMainService.initialFormLoad(3);\r\n         this._trnMainService.TrnMainObj.ProdList = uploadResult.result;\r\n         if (\r\n          !this._trnMainService.TrnMainObj ||\r\n          !this._trnMainService.TrnMainObj.ProdList ||\r\n          this._trnMainService.TrnMainObj.ProdList == undefined\r\n        ) \r\n        return;\r\n        this._trnMainService.TrnMainObj.VoucherType = 3;\r\n        this._trnMainService.TrnMainObj.VoucherPrefix = \"PI\";\r\n        this._trnMainService.TrnMainObj.VoucherAbbName = \"PI\";\r\n        this._trnMainService.getVoucherNumber();\r\n        this._trnMainService.getCurrentDate();\r\n        \r\n        \r\n        this._trnMainService.TrnMainObj.Mode = \"NEW\";\r\n       // this._trnMainService.TrnMainObj.REFBILL = voucherNo;\r\n        this._trnMainService.TrnMainObj.VCHRNO = \"\";\r\n        this._trnMainService.TrnMainObj.CHALANNO = \"\";\r\n\r\n        for (let i in this._trnMainService.TrnMainObj.ProdList) {\r\n          //////console.log(\"ProdList Rate\"+this._trnMainService.TrnMainObj.ProdList[i].RATE);\r\n          this._trnMainService.setAltunitDropDownForView(i);\r\n          ////console.log(\"ProdList Rate\"+this._trnMainService.TrnMainObj.ProdList[i].RATE);\r\n         // ////console.log(\"PurchaseInvoice\",this._trnMainService.TrnMainObj.ProdList[i].RATE,this._trnMainService.TrnMainObj.ProdList[i].ALTRATE2,i, this._trnMainService.TrnMainObj.ProdList[i].ALTUNITObj);\r\n          this._trnMainService.AssignSellingPriceAndDiscounts(this._trnMainService.TrnMainObj.ProdList[i].PClist,i,this._trnMainService.TrnMainObj.PARTY_ORG_TYPE);\r\n          this._trnMainService.setunit(this._trnMainService.TrnMainObj.ProdList[i].RATE,this._trnMainService.TrnMainObj.ProdList[i].ALTRATE2,i, this._trnMainService.TrnMainObj.ProdList[i].ALTUNITObj);\r\n          this._trnMainService.CalculateNormalNew(i);\r\n         \r\n          this._trnMainService.TrnMainObj.ProdList[i].MFGDATE = ((this._trnMainService.TrnMainObj.ProdList[i].MFGDATE == null) ? \"\" : this._trnMainService.TrnMainObj.ProdList[i].MFGDATE.toString().substring(0, 10));\r\n          this._trnMainService.TrnMainObj.ProdList[i].EXPDATE = ((this._trnMainService.TrnMainObj.ProdList[i].EXPDATE == null) ? \"\" : this._trnMainService.TrnMainObj.ProdList[i].EXPDATE.toString().substring(0, 10));\r\n\r\n\r\n       \r\n        }\r\n         \r\n        this._trnMainService.ReCalculateBill(); \r\n\r\n\r\n    } else{\r\n      this.loadingSerive.show(\"Error\"+uploadResult.error);\r\n\r\n    }   \r\n\r\n  }\r\n\r\n\r\n  showSupplierSalesInvoiceFromHOPopup() {\r\n    this.genericHOSalesInvoiceGridTI.show();\r\n  }\r\n\r\n  onHoSalesInvoiceSelect(item) {\r\n    ////console.log(\"checkmmm\",item);\r\n    this.getSalesInvoiceFromSupplier(item.VCHRNO,item.FROMCOMPANYID);\r\n  }\r\n\r\n  getSalesInvoiceFromSupplier(voucherNo: string,FROMCOMPANYID:string) {\r\n    this.loadingSerive.show(\"Getting Data. Please Wait...\");\r\n    this.masterService.loadSalesInvoiceFromSupplierHO(voucherNo,FROMCOMPANYID).subscribe(\r\n      result => {\r\n        this.loadingSerive.hide();\r\n        if (result.status == \"ok\") {\r\n          this._trnMainService.TrnMainObj = result.result; //Object.assign({}, this._trnMainService.TrnMainObj, result.result );\r\n\r\n          if (\r\n            !this._trnMainService.TrnMainObj ||\r\n            !this._trnMainService.TrnMainObj.ProdList ||\r\n            this._trnMainService.TrnMainObj.ProdList == undefined\r\n          )\r\n            return;\r\n\r\n            this._trnMainService.TrnMainObj.VoucherType = 3;\r\n            this._trnMainService.TrnMainObj.VoucherPrefix = \"PI\";\r\n            this._trnMainService.TrnMainObj.VoucherAbbName = \"PI\";\r\n           \r\n           \r\n  \r\n            this._trnMainService.TrnMainObj.Mode = \"NEW\";\r\n          this._trnMainService.TrnMainObj.REFBILL = voucherNo;\r\n          this._trnMainService.TrnMainObj.VCHRNO = \"\";\r\n          this._trnMainService.TrnMainObj.CHALANNO = \"\";\r\n        \r\n          for (let i in this._trnMainService.TrnMainObj.ProdList) {\r\n            this._trnMainService.TrnMainObj.ProdList[i].inputMode=false;\r\n            this._trnMainService.setAltunitDropDownForView(i);\r\n            \r\n            this._trnMainService.AssignSellingPriceAndDiscounts(this._trnMainService.TrnMainObj.ProdList[i].PClist,i,this._trnMainService.TrnMainObj.PARTY_ORG_TYPE);\r\n            this._trnMainService.setunit(this._trnMainService.TrnMainObj.ProdList[i].RATE,this._trnMainService.TrnMainObj.ProdList[i].SPRICE,i, this._trnMainService.TrnMainObj.ProdList[i].ALTUNITObj);\r\n            this._trnMainService.CalculateNormalNew(i);\r\n         \r\n            this._trnMainService.TrnMainObj.ProdList[i].MFGDATE = ((this._trnMainService.TrnMainObj.ProdList[i].MFGDATE == null) ? \"\" : this._trnMainService.TrnMainObj.ProdList[i].MFGDATE.toString().substring(0, 10));\r\n            this._trnMainService.TrnMainObj.ProdList[i].EXPDATE = ((this._trnMainService.TrnMainObj.ProdList[i].EXPDATE == null) ? \"\" : this._trnMainService.TrnMainObj.ProdList[i].EXPDATE.toString().substring(0, 10));\r\n\r\n          }       \r\n          this._trnMainService.ReCalculateBill(); \r\n          this._trnMainService.getVoucherNumber();\r\n          this._trnMainService.getCurrentDate();\r\n        }\r\n      },\r\n      error => {\r\n        this.loadingSerive.hide();\r\n      }\r\n    );\r\n  }\r\n\r\n  showSAPPurchaseInvoice(){\r\n    this.genericsGridSAPPI.show();\r\n  }\r\n\r\n  onSAPPurchaseInvoiceSelect(item){\r\n    this.loadSAPPurchaseInvoice(item.VCHRNO);\r\n  }\r\n\r\n  loadSAPPurchaseInvoice(voucherNo : string){\r\n    this.loadingSerive.show(\"Getting Data. Please Wait...\");\r\n    this.masterService.loadSAPPurchaseInvoiceDetail(voucherNo).subscribe(\r\n      result => {\r\n        this.loadingSerive.hide();\r\n        if (result.status == \"ok\") {\r\n          this._trnMainService.TrnMainObj = result.result; //Object.assign({}, this._trnMainService.TrnMainObj, result.result );\r\n\r\n       \r\n          if (\r\n            !this._trnMainService.TrnMainObj ||\r\n            !this._trnMainService.TrnMainObj.ProdList ||\r\n            this._trnMainService.TrnMainObj.ProdList == undefined\r\n          )\r\n            return;\r\n            this._trnMainService.TrnMainObj.VoucherType = 3;\r\n            this._trnMainService.TrnMainObj.VoucherPrefix = \"PI\";\r\n            this._trnMainService.TrnMainObj.VoucherAbbName = \"PI\";\r\n            \r\n  \r\n            this._trnMainService.TrnMainObj.Mode = \"NEW\";\r\n          this._trnMainService.TrnMainObj.REFBILL = voucherNo;\r\n          this._trnMainService.TrnMainObj.VCHRNO = \"\";\r\n          this._trnMainService.TrnMainObj.CHALANNO = \"\";\r\n          this._trnMainService.TrnMainObj.tag=\"FTP\";\r\n          for (let i in this._trnMainService.TrnMainObj.ProdList) {\r\n            this._trnMainService.TrnMainObj.ProdList[i].inputMode=false;\r\n            this._trnMainService.setAltunitDropDownForView(i);\r\n            \r\n            this._trnMainService.AssignSellingPriceAndDiscounts(this._trnMainService.TrnMainObj.ProdList[i].PClist,i,this._trnMainService.TrnMainObj.PARTY_ORG_TYPE);\r\n            this._trnMainService.setunit(this._trnMainService.TrnMainObj.ProdList[i].RATE,this._trnMainService.TrnMainObj.ProdList[i].SPRICE,i, this._trnMainService.TrnMainObj.ProdList[i].ALTUNITObj);\r\n            this._trnMainService.CalculateNormalNew(i);\r\n           \r\n            this._trnMainService.TrnMainObj.ProdList[i].MFGDATE = ((this._trnMainService.TrnMainObj.ProdList[i].MFGDATE == null) ? \"\" : this._trnMainService.TrnMainObj.ProdList[i].MFGDATE.toString().substring(0, 10));\r\n            this._trnMainService.TrnMainObj.ProdList[i].EXPDATE = ((this._trnMainService.TrnMainObj.ProdList[i].EXPDATE == null) ? \"\" : this._trnMainService.TrnMainObj.ProdList[i].EXPDATE.toString().substring(0, 10));\r\n\r\n            // this._trnMainService.setAltunitDropDownForView(i);\r\n            // this._trnMainService.getPricingOfItem(i, \"\", false);\r\n\r\n            // this._trnMainService.TrnMainObj.ProdList[i].inputMode = false;\r\n            // this._trnMainService.TrnMainObj.ProdList[i].VoucherType = 3;\r\n\r\n            // this._trnMainService.TrnMainObj.ProdList[i].MFGDATE =\r\n            //   this._trnMainService.TrnMainObj.ProdList[i].MFGDATE == null\r\n            //     ? \"\"\r\n            //     : this._trnMainService.TrnMainObj.ProdList[\r\n            //         i\r\n            //       ].MFGDATE.toString().substring(0, 10);\r\n            // this._trnMainService.TrnMainObj.ProdList[i].EXPDATE =\r\n            //   this._trnMainService.TrnMainObj.ProdList[i].EXPDATE == null\r\n            //     ? \"\"\r\n            //     : this._trnMainService.TrnMainObj.ProdList[\r\n            //         i\r\n            //       ].EXPDATE.toString().substring(0, 10);\r\n          }\r\n\r\n        //   var ZeroStockedProduct = this._trnMainService.TrnMainObj.ProdList.filter(\r\n        //     x => x.SELECTEDITEM.STOCK <= 0\r\n        //   );\r\n        //   this._trnMainService.TrnMainObj.ProdList = this._trnMainService.TrnMainObj.ProdList.filter(\r\n        //     x => x.SELECTEDITEM.STOCK > 0\r\n        //   );\r\n\r\n        \r\n          this._trnMainService.ReCalculateBill(); \r\n          this._trnMainService.getVoucherNumber();\r\n            this._trnMainService.getCurrentDate();\r\n        }\r\n        else\r\n        {\r\n          this.loadingSerive.hide();\r\n          this.alertService.error(result.result._body);\r\n        }\r\n      },\r\n      error => {\r\n        this.loadingSerive.hide();\r\n      }\r\n    );\r\n  }\r\n\r\n\r\n\r\n  saveTaxInvoice(){\r\n    this._trnMainService.TrnMainObj.Mode = 'NEW';\r\n    this._trnMainService.TrnMainObj.tag=\"shipto\";\r\n    this.alertService.show()\r\n    this.masterService.saveTransaction(this._trnMainService.TrnMainObj.Mode, this._trnMainService.TrnMainObj)\r\n    .subscribe((data)=>{\r\n      if(data.status==\"ok\"){\r\n        this.alertService.hide()\r\n        this.popupClose()\r\n      }\r\n    },error=>{\r\n      this.alertService.error(error)\r\n    })\r\n  }\r\n\r\n\r\n  popupClose(){\r\n    this._trnMainService.initialFormLoad(3)\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/pages/Purchases/components/purchaseinvoice/AddPurchaseInvoice.ts","export class BankReconciliation\r\n{    \r\n     DATE1 : string;\r\n     DATE2 : string;\r\n     ACID : string;\r\n     ACNAME : string;\r\n     DIV : string;\r\n     SHOWRECONSILLED : boolean;\r\n     PHISCALID:string;\r\n     COMPANYID:string;\r\n     BSDATE1 : string;\r\n     BSDATE2 : string;\r\n     PARTYTYPE:any;\r\n}\r\n\r\nexport class Reconcile\r\n{\r\n     isChecked :boolean;\r\n     TRNDATE : Date;\r\n     BSDATE : string;\r\n     PARTICULARS :string;\r\n     VCHRTYPE :string;\r\n     CHEQUENO :string;\r\n     CHEQUEDATE : Date;\r\n     BANKDATE : string;\r\n     DRAMNT :number;\r\n     CRAMNT :number;\r\n     VNO : string;\r\n     DIV : string;\r\n     B_ACID :string;\r\n     STAMP :string;\r\n     isReconciled:boolean\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/common/interfaces/bank-reconciliation.interface.ts","import {Component} from '@angular/core';\r\n\r\n@Component({\r\n    selector:'accountvouchers',\r\n    template:'<router-outlet></router-outlet>'\r\n})\r\n\r\nexport class AccountVouchers{\r\n    constructor(){};\r\n}\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/pages/AccountVoucher/accountvoucher.component.ts","import { AuthService } from '../../../../common/services/permission/authService.service';\r\nimport { PAGES_MENU } from '../../../pages.menu';\r\nimport { Component, ViewChild, ElementRef, PLATFORM_ID, Inject } from \"@angular/core\";\r\nimport { MasterRepo } from \"../../../../common/repositories/masterRepo.service\";\r\nimport { SpinnerService } from \"../../../../common/services/spinner/spinner.service\";\r\nimport { AlertService } from \"../../../../common/services/alert/alert.service\";\r\nimport { TransactionService } from \"../../../../common/Transaction Components/transaction.service\";\r\nimport { FormGroup, FormControl, FormBuilder, Validators } from '@angular/forms';\r\nimport { Subscription } from \"rxjs/Subscription\";\r\nimport { result } from 'lodash';\r\nimport { forEach } from '@angular/router/src/utils/collection';\r\nimport * as XLSX from 'xlsx';\r\nimport * as FileSaver from 'file-saver';\r\nimport { GenericPopUpComponent, GenericPopUpSettings } from '../../../../common/popupLists/generic-grid/generic-popup-grid.component';\r\nconst EXCEL_EXTENSION = '.xlsx';\r\nconst EXCEL_TYPE = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8';\r\n@Component({\r\n    selector: 'bulk-print',\r\n    template: require('./bulk-print.component.html'),\r\n    styles: [require('./bulk-print.component.css')]\r\n\r\n})\r\n\r\nexport class BulkPrintComponent {\r\n    BulkVoucherPrintBodyList: any[]=[];\r\n    // accoutingVouchersList =\r\n    // [{name:\"Journal Voucher\"},{name:\"Contra Voucher\"},{name:\"Payment Voucher\"},{name:\"Receipt Voucher\"},{name:\"Debit Note -AC Base\"},{name:\"Credit Note - AC Base\"},{name:\"Bill Tracking Amendment\"},{name:\"Additional Cost\"},{name:\"Capital Purchase Voucher\"},{name:\"Payment Collection\"}];\r\n    //\r\n    userProfile: any = <any>{};\r\n    userSetting: any;\r\n    filter: string;\r\n    PhiscalObj: any = <any>{};\r\n    isLoader = true;\r\n    currentPage = 1;\r\n    totalCount: number;\r\n    itemsPerPage = 10;\r\n    offset = 0;\r\n    filename: any;\r\n    rownumber: any;\r\n    numtowords: any;\r\n    voucherPrefix:string='';\r\n    FROM:number;\r\n    TO:number;\r\n    SelectAll:boolean = false;\r\n    itemsToProcess:number=0;\r\n    currentPrefix:string;\r\n    @ViewChild(\"genericGridVoucherList\")\r\n    genericGridVoucherList: GenericPopUpComponent;\r\n    gridVoucherListPopupSettings: GenericPopUpSettings = new GenericPopUpSettings();\r\n    constructor(\r\n        public masterService: MasterRepo,\r\n        private spinnerService: SpinnerService,\r\n        private alertSerivces: AlertService,\r\n        private _transactionService: TransactionService,\r\n        private fb: FormBuilder,\r\n        private authService: AuthService,\r\n        private _authService: AuthService\r\n\r\n    ) {\r\n\r\n        this.userProfile = authService.getUserProfile();\r\n        this.PhiscalObj = authService.getPhiscalInfo();\r\n        this.userSetting = this._authService.getSetting();\r\n    }\r\n\r\n    ngOnInit() {\r\n\r\n    }\r\n\r\n    PrepareVoucherListForPrint(value){\r\n        if(value.IS_CHECKED){\r\n          //   let duplicate_vchrno = this.masterService.voucherListsForBulkPrint.find((voucher) => voucher.VCHRNO == value.VCHRNO);\r\n          //  if(duplicate_vchrno){\r\n          //   this.alertSerivces.info(\"Voucher Already Select.\");\r\n          //   setTimeout(() => {\r\n          //       this.alertSerivces.hide();\r\n                \r\n          //   }, 3000);\r\n          //  }else {\r\n          //      this.masterService.voucherListsForBulkPrint.push(value);\r\n          //      this.PrepareBodyDataForBulkPrint(value.VCHRNO);\r\n          //  }\r\n           this.PrepareBodyDataForBulkPrint(value.VCHRNO).then(() => {\r\n              if (this.itemsToProcess === 0) {\r\n              this.spinnerService.hide();\r\n            }\r\n           });\r\n        }else if(!value.IS_CHECKED){\r\n            // this.masterService.voucherListsForBulkPrint.forEach((voucher,i) => {\r\n            //     if(voucher.VCHRNO == value.VCHRNO){\r\n            //         this.masterService.voucherListsForBulkPrint.splice(i,1);\r\n            //     }\r\n            // });\r\n            this.BulkVoucherPrintBodyList.forEach((VBody,i) => {\r\n                if(VBody.Parameter.vchrno == value.VCHRNO){\r\n                    this.BulkVoucherPrintBodyList.splice(i,1);\r\n                }\r\n            })\r\n        }\r\n        this.checkSelectAll();\r\n    }\r\n    onPrintClicked(){\r\n      if(this.BulkVoucherPrintBodyList.length == 0){\r\n        this.alertSerivces.info(\"No Voucher is Selected.\");\r\n        return;\r\n      }\r\n      this.spinnerService.show(\"Printing, Please Wait...\");\r\n        this.masterService.BulkVoucherPrint(this.BulkVoucherPrintBodyList).subscribe((res) => {\r\n            ////console.log(\"pdfresponse\", res);\r\n\r\n            const blobUrl = URL.createObjectURL(res.content);\r\n            const iframe = document.createElement('iframe');\r\n            iframe.style.display = 'none';\r\n            iframe.src = blobUrl;\r\n            document.body.appendChild(iframe);\r\n            iframe.contentWindow.print();\r\n            this.spinnerService.hide();\r\n\r\n          },error=>{\r\n            this.spinnerService.hide();\r\n            this.alertSerivces.info(\"Issue in print file.\");\r\n          });            \r\n    }\r\n\r\n    PrepareBodyDataForBulkPrint(VCHRNO):Promise<void> {\r\n        let vat = this.userProfile.CompanyInfo.VAT;\r\n        let VATresult = vat.split(\"\");\r\n        let voucherprefix= this.voucherPrefix;\r\n    \r\n        return new Promise((resolve) => {\r\n          this.masterService.getPrintFileName(voucherprefix).subscribe((res) => {\r\n            if (res.status == \"ok\") {\r\n              this.filename = res.result ? res.result[0].FileName : '';\r\n              this.rownumber = res.result ? res.result[0].RowsNumber : 0;\r\n      \r\n      \r\n      \r\n              this.masterService.getNumberToWords(VCHRNO, this.userProfile.CompanyInfo.INITIAL, this.masterService.PhiscalObj.PhiscalID, this.userProfile.CompanyInfo.COMPANYID,'').subscribe(\r\n                (res) => {\r\n                  if (res.status == \"ok\") {\r\n                    this.numtowords = res.result ? res.result[0].NUMTOWORDS : '';\r\n      \r\n                    let userdivision = this.userProfile.userDivision ? this.userProfile.userDivision : this.userProfile.CompanyInfo.INITIAL;\r\n                    let ADDRESS = this.userProfile.CompanyInfo.ADDRESS;\r\n                    let BRANCHNAME = this.userProfile.CompanyInfo.INITIAL;\r\n                    this.masterService.getDetailsByUserDivision(userdivision).subscribe((res: any) => {\r\n                      if (res.status == \"ok\") {\r\n                        if (res.result && res.result.length > 0 && res.result[0] && res.result[0].COMADD) {\r\n                          ADDRESS = res.result[0].COMADD;\r\n                        }\r\n                        if (ADDRESS === null || ADDRESS === undefined || ADDRESS === '') {\r\n                          ADDRESS = this.userProfile.CompanyInfo.ADDRESS;\r\n                        }\r\n                        if (res.result && res.result.length > 0 && res.result[0] && res.result[0].BRANCHNAME) {\r\n                          BRANCHNAME = res.result[0].BRANCHNAME;\r\n                        }\r\n                        if (BRANCHNAME === null || BRANCHNAME === undefined || BRANCHNAME === '') {\r\n                          BRANCHNAME = this.userProfile.CompanyInfo.INITIAL;\r\n                        }\r\n      \r\n                        let pdfPrintFormatParameters: any = <any>{}\r\n                        pdfPrintFormatParameters.filename = this.filename;\r\n                        pdfPrintFormatParameters.rownumber = this.rownumber;\r\n                        pdfPrintFormatParameters.VCHRNO = VCHRNO;\r\n                        pdfPrintFormatParameters.NAME = this.userProfile.CompanyInfo.NAME;\r\n                        pdfPrintFormatParameters.ADDRESS = ADDRESS ? ADDRESS : ' ';\r\n                        pdfPrintFormatParameters.INITIAL = this.userProfile.CompanyInfo.INITIAL;\r\n                        pdfPrintFormatParameters.PhiscalID = this.userProfile.CompanyInfo.PhiscalID,\r\n                        pdfPrintFormatParameters.COMPANYID = this.userProfile.CompanyInfo.COMPANYID;\r\n                        pdfPrintFormatParameters.phone1 = this.userProfile.CompanyInfo.TELA?this.userProfile.CompanyInfo.TELA:' ';\r\n                        pdfPrintFormatParameters.phone2 = this.userProfile.CompanyInfo.TELB?this.userProfile.CompanyInfo.TELB:' ';\r\n                        pdfPrintFormatParameters.EMAIL = this.userProfile.CompanyInfo.EMAIL?this.userProfile.CompanyInfo.EMAIL:' ';\r\n                        pdfPrintFormatParameters.numtowords = this.numtowords ? this.numtowords : ' ';\r\n                        pdfPrintFormatParameters.panno1 = VATresult[0] ? VATresult[0] : ' ';\r\n                        pdfPrintFormatParameters.panno2 = VATresult[1] ? VATresult[1] : ' ';\r\n                        pdfPrintFormatParameters.panno3 = VATresult[2] ? VATresult[2] : ' ';\r\n                        pdfPrintFormatParameters.panno4 = VATresult[3] ? VATresult[3] : ' ';\r\n                        pdfPrintFormatParameters.panno5 = VATresult[4] ? VATresult[4] : ' ';\r\n                        pdfPrintFormatParameters.panno6 = VATresult[5] ? VATresult[5] : ' ';\r\n                        pdfPrintFormatParameters.panno7 = VATresult[6] ? VATresult[6] : ' ';\r\n                        pdfPrintFormatParameters.panno8 = VATresult[7] ? VATresult[7] : ' ';\r\n                        pdfPrintFormatParameters.panno9 = VATresult[8] ? VATresult[8] : ' ';\r\n                        pdfPrintFormatParameters.VoucherPrefix = this.voucherPrefix;\r\n                        pdfPrintFormatParameters.PRINTBY = this.userProfile.username ? this.userProfile.username : ' ';\r\n                        pdfPrintFormatParameters.COMPANYVAT = vat?vat:this.userProfile.CompanyInfo.VAT;\r\n                        pdfPrintFormatParameters.BRANCHNAME = BRANCHNAME?BRANCHNAME:' ';\r\n      \r\n                      let bodyData = {\r\n                          \"filename\": pdfPrintFormatParameters.filename,\r\n                          \"Parameter\": {\r\n                            \"vchrno\": pdfPrintFormatParameters.VCHRNO, \"voucherno\": pdfPrintFormatParameters.VCHRNO, \"rowsnumber\": pdfPrintFormatParameters.rownumber,\r\n                            \"companyname\": pdfPrintFormatParameters.NAME, \"companyaddress\": pdfPrintFormatParameters.ADDRESS,\r\n                            \"division\": pdfPrintFormatParameters.INITIAL, \"phiscalid\": pdfPrintFormatParameters.PhiscalID, \"companyid\": pdfPrintFormatParameters.COMPANYID, \"numtowords\": pdfPrintFormatParameters.numtowords,\r\n                            \"p1\": pdfPrintFormatParameters.panno1, \"p2\": pdfPrintFormatParameters.panno2, \"p3\": pdfPrintFormatParameters.panno3, \"p4\": pdfPrintFormatParameters.panno4, \"p5\": pdfPrintFormatParameters.panno5, \"p6\": pdfPrintFormatParameters.panno6, \"p7\": pdfPrintFormatParameters.panno7, \"p8\": pdfPrintFormatParameters.panno8, \"p9\": pdfPrintFormatParameters.panno9,\r\n                            \"branchname\": pdfPrintFormatParameters.BRANCHNAME,\r\n                            \"phone1\": pdfPrintFormatParameters.phone1, \"phone2\": pdfPrintFormatParameters.phone2, \"email\": pdfPrintFormatParameters.EMAIL,\r\n                            \"PRINTBY\": pdfPrintFormatParameters.PRINTBY, \"companyemail\": pdfPrintFormatParameters.EMAIL, \"companyvat\": pdfPrintFormatParameters.COMPANYVAT\r\n                    \r\n                          }\r\n                        };\r\n                      this.BulkVoucherPrintBodyList.push(bodyData);\r\n                      }\r\n                      if(this.itemsToProcess>0)this.itemsToProcess--; \r\n                      resolve();     \r\n      \r\n                    })\r\n      \r\n      \r\n      \r\n                  }\r\n                })\r\n      \r\n      \r\n            }\r\n\r\n          })      \r\n        })\r\n    \r\n      }\r\n\r\n\r\n\r\n    onSelectAllClicked()\r\n    {\r\n      if(this.SelectAll){\r\n        this.spinnerService.show(\"Prepearing Voucher for Print, Please Wait...\");\r\n        this.itemsToProcess = this.masterService.voucherListsForBulkPrint.filter(x => !x.IS_CHECKED).length;\r\n        this.masterService.voucherListsForBulkPrint.forEach((x) => {\r\n          if (x.IS_CHECKED) {\r\n            return;\r\n          } else {\r\n            x.IS_CHECKED = true;\r\n            this.PrepareVoucherListForPrint(x);\r\n          }\r\n        });\r\n      }\r\n      else if(!this.SelectAll){\r\n        this.masterService.voucherListsForBulkPrint.forEach((x) => {\r\n          x.IS_CHECKED = false;\r\n          this.PrepareVoucherListForPrint(x);\r\n        })\r\n      }\r\n    }\r\n\r\n    checkSelectAll(){\r\n      let unSelected = this.masterService.voucherListsForBulkPrint.filter((x) => x.IS_CHECKED == false);\r\n      if(unSelected && unSelected.length>0){\r\n        this.SelectAll = false;\r\n      }else{\r\n        this.SelectAll = true;\r\n      }\r\n    }\r\n    \r\n    \r\n\r\n\r\n\r\n\r\n    onLoadVoucherList( VType:string){\r\n        var PID = this.PhiscalObj.PhiscalID;\r\n        PID = PID.replace(\"/\", \"ZZ\")\r\n        var division = this.PhiscalObj.Div;\r\n        if(VType == 'JV'){\r\n            this.gridVoucherListPopupSettings = {\r\n                title: \"Journal Vouchers\",\r\n                apiEndpoints: `/getMasterPagedListOfAny/${PID}/${VType}/${division}`,\r\n                defaultFilterIndex: 1,\r\n                columns: Object.assign(\r\n                  [{\r\n                    key: 'TRNDATE',\r\n                    title: 'DATE',\r\n                    hidden: false,\r\n                    noSearch: false,\r\n                    alignment: 'left',\r\n                  },\r\n                  {\r\n                    key: 'VCHRNO',\r\n                    title: 'VOUCHER NO.',\r\n                    hidden: false,\r\n                    noSearch: false,\r\n                    alignment: 'left',\r\n                  },\r\n                  {\r\n                    key: 'NETAMNT',\r\n                    title: 'AMOUNT',\r\n                    hidden: false,\r\n                    noSearch: false,\r\n                    alignment: 'right',\r\n                  },\r\n                  {\r\n                    key: 'PREFIXREMOVECHALANNO',\r\n                    title: 'REF NO',\r\n                    hidden: false,\r\n                    noSearch: false,\r\n                    alignment: 'left',\r\n                  },\r\n                  ])\r\n        \r\n   \r\n              };\r\n            this.genericGridVoucherList.show('',false,'journal',true);\r\n        }else if(VType == 'CV'){\r\n            this.gridVoucherListPopupSettings = {\r\n                title: \"Contra Vouchers\",\r\n                apiEndpoints: `/getTrnMainPagedList/${VType}/${PID}`,\r\n                defaultFilterIndex: 1,\r\n                columns: Object.assign(\r\n                  [{\r\n                    key: 'TRNDATE',\r\n                    title: 'DATE',\r\n                    hidden: false,\r\n                    noSearch: false,\r\n                    alignment: 'left',\r\n                  },\r\n                  {\r\n                    key: 'VCHRNO',\r\n                    title: 'VOUCHER NO.',\r\n                    hidden: false,\r\n                    noSearch: false,\r\n                    alignment: 'left',\r\n                  },\r\n                  {\r\n                    key: 'NETAMNT',\r\n                    title: 'AMOUNT',\r\n                    hidden: false,\r\n                    noSearch: false,\r\n                    alignment: 'right',\r\n                  },\r\n                  ])\r\n        \r\n   \r\n              };\r\n            this.genericGridVoucherList.show('',false,'',true);\r\n        }else if(VType == 'PV'){\r\n            this.gridVoucherListPopupSettings = {\r\n                title: \"Payment Vouchers\",\r\n                apiEndpoints: `/getTrnMainPagedList/${VType}/${PID}`,\r\n                defaultFilterIndex: 1,\r\n                columns: Object.assign(\r\n                  [{\r\n                    key: 'TRNDATE',\r\n                    title: 'DATE',\r\n                    hidden: false,\r\n                    noSearch: false,\r\n                    alignment: 'left',\r\n                  },\r\n                  {\r\n                    key: 'VCHRNO',\r\n                    title: 'VOUCHER NO.',\r\n                    hidden: false,\r\n                    noSearch: false,\r\n                    alignment: 'left',\r\n                  },\r\n                  {\r\n                    key: 'NETAMNT',\r\n                    title: 'AMOUNT',\r\n                    hidden: false,\r\n                    noSearch: false,\r\n                    alignment: 'right',\r\n                  },\r\n                  ])\r\n        \r\n   \r\n              };\r\n            this.genericGridVoucherList.show('',false,'',true);\r\n        }else if(VType == 'RV'){\r\n            this.gridVoucherListPopupSettings = {\r\n                title: \"Receipt Vouchers\",\r\n                apiEndpoints: `/getTrnMainPagedList/${VType}/${PID}`,\r\n                defaultFilterIndex: 1,\r\n                columns: Object.assign(\r\n                  [{\r\n                    key: 'TRNDATE',\r\n                    title: 'DATE',\r\n                    hidden: false,\r\n                    noSearch: false,\r\n                    alignment: 'left',\r\n                  },\r\n                  {\r\n                    key: 'VCHRNO',\r\n                    title: 'VOUCHER NO.',\r\n                    hidden: false,\r\n                    noSearch: false,\r\n                    alignment: 'left',\r\n                  },\r\n                  {\r\n                    key: 'NETAMNT',\r\n                    title: 'AMOUNT',\r\n                    hidden: false,\r\n                    noSearch: false,\r\n                    alignment: 'right',\r\n                  },\r\n                  ])\r\n        \r\n   \r\n              };\r\n            this.genericGridVoucherList.show('',false,'',true);\r\n        }\r\n    }\r\n\r\n    LoadVoucherWiseList(VType:string)\r\n    {\r\n      if(this.FROM == null || this.FROM <= 0 || this.TO == null || this.TO <= 0 || this.TO < this.FROM){\r\n        this.alertSerivces.info(\"Please Enter Valid Range.\");\r\n        return;\r\n      }\r\n      this.masterService.voucherListsForBulkPrint = [];\r\n      this.BulkVoucherPrintBodyList = [];\r\n      var PID = this.PhiscalObj.PhiscalID;\r\n      PID = PID.replace(\"/\", \"ZZ\")\r\n      var division = this.PhiscalObj.Div;\r\n      this.spinnerService.show(\"Loading Data...\");\r\n      this.masterService.getBulkVoucherList(VType,PID,division,this.FROM,this.TO).subscribe((res) => {\r\n        if(res.result.length>0){\r\n          this.masterService.voucherListsForBulkPrint = res.result;\r\n          this.masterService.voucherListsForBulkPrint.forEach((x) => {\r\n            x.IS_CHECKED = false;\r\n          });\r\n          this.checkSelectAll();\r\n          this.spinnerService.hide();\r\n          }\r\n          else{\r\n            this.alertSerivces.info(\"No Voucher found within the given range.\");\r\n            this.spinnerService.hide();\r\n          }\r\n          },error => {\r\n            this.alertSerivces.error(error._body);\r\n            this.spinnerService.hide();\r\n      })\r\n    }\r\n\r\n    \r\n\r\n\r\n    /**\r\n     * to export renumbering voucher to excel\r\n     */\r\n    exportTOExcel(dataList: any, excelFileName: string) {\r\n        var newArray: any[] = [];\r\n        dataList.forEach((data) => {\r\n            newArray.push({\r\n                OLD_VOUCHERNO: data.old_vchrno,\r\n                NEW_VOUCHERNO: data.new_vchrno,\r\n                ENTRY_DATE : data.TRNDATE,\r\n                ENTRY_DATEBS: data.BSDATE,\r\n                NETAMNT: data.NETAMNT,\r\n                TRNMODE: data.TRNMODE,\r\n                FISCALYEAR: data.PhiscalID\r\n            })\r\n        })\r\n        var exportArray = Object.assign([], newArray);\r\n        const ws: XLSX.WorkSheet = XLSX.utils.json_to_sheet(exportArray);\r\n        const wb: XLSX.WorkBook = XLSX.utils.book_new();\r\n        XLSX.utils.book_append_sheet(wb, ws, \"ABC\");\r\n\r\n        excelFileName += '.xlsx';\r\n        /* save to file */\r\n        const excelBuffer: any = XLSX.write(wb, { bookType: 'xlsx', type: 'buffer' });\r\n        this.saveAsExcelFile(excelBuffer, excelFileName);\r\n    }\r\n\r\n\r\n    private saveAsExcelFile(buffer: any, fileName: string): void {\r\n        const data: Blob = new Blob([buffer], { type: EXCEL_TYPE });\r\n        FileSaver.saveAs(data, fileName + EXCEL_EXTENSION);\r\n    }\r\n\r\n\r\n    VoucherPagination(event) {\r\n        this.currentPage = event;\r\n        const t = this;\r\n        window.scrollTo({ top: 0, behavior: 'smooth' });\r\n      }\r\n\r\n  onReset(){\r\n    this.voucherPrefix = \"\";\r\n    this.masterService.voucherListsForBulkPrint = [];\r\n    this.BulkVoucherPrintBodyList = [];\r\n    this.FROM = null;\r\n    this.TO = null;\r\n\r\n  }\r\n\r\n  onVoucherTypeChange(event:Event){\r\n    if(this.BulkVoucherPrintBodyList.length > 0){\r\n      if(confirm(\"All prepeared voucher data will reset. Are you sure you want to change voucher type? \")){\r\n        this.BulkVoucherPrintBodyList = [];\r\n      }else{\r\n       setTimeout(() => {\r\n        this.voucherPrefix = this.currentPrefix;\r\n       },200)\r\n        return;\r\n      }\r\n    }\r\n    this.currentPrefix = this.voucherPrefix;\r\n    this.masterService.voucherListsForBulkPrint = [];\r\n    this.FROM = null;\r\n    this.TO = null;\r\n  }\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/pages/AccountVoucher/components/BulkPrint/bulk-print.component.ts","import { Component, HostListener, ViewChild } from '@angular/core';\r\nimport { GenericPopUpComponent, GenericPopUpSettings } from '../../../../common/popupLists/generic-grid/generic-popup-grid.component';\r\nimport { MasterRepo } from '../../../../common/repositories';\r\nimport { AlertService } from '../../../../common/services/alert/alert.service';\r\nimport { SpinnerService } from '../../../../common/services/spinner/spinner.service';\r\nimport { TransactionService } from '../../../../common/Transaction Components/transaction.service';\r\nimport * as moment from 'moment';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from '../../../../common/services/permission/authService.service';\r\nimport { BillTrack, TAcList } from '../../../../common/interfaces';\r\n@Component({\r\n  selector: 'cash-collection-selector',\r\n  template: require('./cashcollection.component.html'),\r\n})\r\n\r\nexport class CashCollection {\r\n  /**Generic Group */\r\n  @ViewChild(\"genericGridACList\")\r\n  genericGridACList: GenericPopUpComponent;\r\n  gridACListPopupSettings: GenericPopUpSettings = new GenericPopUpSettings();\r\n\r\n  @ViewChild(\"genericeSalesManList\")\r\n  genericeSalesManList: GenericPopUpComponent;\r\n  gridCostSalesManPopupSetting: GenericPopUpSettings = new GenericPopUpSettings();\r\n\r\n  @ViewChild(\"genericGridCashBankList\")\r\n  genericGridCashBankList: GenericPopUpComponent;\r\n  gridCashBankListPopupSettings: GenericPopUpSettings = new GenericPopUpSettings();\r\n\r\n  @ViewChild(\"genericGridCostCenterList\")\r\n  genericGridCostCenterList: GenericPopUpComponent;\r\n  gridCostCenterListPopupSettings: GenericPopUpSettings = new GenericPopUpSettings();\r\n\r\n  @ViewChild(\"genericGridCCvoucherList\")\r\n  genericGridCCvoucherList: GenericPopUpComponent;\r\n  gridCCvoucherListPopupSettings: GenericPopUpSettings = new GenericPopUpSettings();\r\n\r\n  /**Initialize Module */\r\n  public DetailList: CashCollection[];\r\n  public CashCollectionObj: CashCollection = <CashCollection>{}\r\n  public SaveCashCollectionObj: Pobj = <Pobj>{};\r\n  userProfile: any = <any>{};\r\n  returnUrl: string;\r\n  CashCollectionBillAmount: number;\r\n  CashCollectionDueAmount: number;\r\n  CashCollectionTotalBalance: number;\r\n  TOTAL_CASHCOLLECTION: number;\r\n  TotalBillCount: number;\r\n\r\n\r\n  constructor(public masterService: MasterRepo, private loadingService: SpinnerService,\r\n    private _transactionService: TransactionService, private alertService: AlertService,\r\n    private authService: AuthService, private router: Router) {\r\n    this.userProfile = authService.getUserProfile();\r\n    this.reset();\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  reset() {\r\n    this.CashCollectionBillAmount = 0\r\n    this.CashCollectionDueAmount = 0;\r\n    this.CashCollectionTotalBalance = 0;\r\n    this.TotalBillCount=0;\r\n    this.CashCollectionObj = {} as CashCollection;\r\n    this.DetailList = [] as Array<CashCollection>;\r\n    this.CashCollectionObj.TOTAL_CASHCOLLECTION = 0;\r\n    this.CashCollectionObj.RECEIPT_MODE = \"cash\";\r\n    this.CashCollectionObj.DAYS_BASIS = \"BILLDATE_WISE\";\r\n    this._transactionService.TrnMainObj.VoucherName = \"CashCollection\";\r\n    this._transactionService.TrnMainObj.DIVISION = this.userProfile.division;\r\n    this._transactionService.TrnMainObj.PhiscalID = this.userProfile.PhiscalYearInfo.PhiscalID;\r\n    this.masterService.getVoucherNo(this._transactionService.TrnMainObj, \"CC\").subscribe(res => {\r\n      if (res.status == \"ok\") {\r\n        this.CashCollectionObj.CC_VCHRNO = res.result.VCHRNO;\r\n      } else {\r\n        alert(\"Failed to retrieve VoucherNo\");\r\n      }\r\n    });\r\n  }\r\n\r\n  ValidateSaveObj() {\r\n    if (this.DetailList.length == 0) {\r\n      this.alertService.info(\"No data to save!\");\r\n      return false;\r\n    }\r\n\r\n    this.DetailList.forEach(x => {\r\n\r\n      let neg_cashcollectedlist = this.DetailList.filter(x => x.CASH_COLLECTION < 0);\r\n      if (neg_cashcollectedlist && neg_cashcollectedlist.length && neg_cashcollectedlist.length > 0) {\r\n        this.alertService.info(`Please enter valid cash collection amount for Bill no ${x.BILL_NO}.`);\r\n        return false;\r\n      }\r\n\r\n      let cashcollectedlist = this.DetailList.filter(x => x.CASH_COLLECTION > 0);\r\n      if (cashcollectedlist.length == 0) {\r\n        this.alertService.info(`Please enter cash collected in atleast one row.`);\r\n        return false;\r\n      }\r\n\r\n      if (x.CASH_COLLECTION > 0 && (x.CASH_COLLECTION > x.DUE_AMOUNT || x.CASH_COLLECTION < x.DUE_AMOUNT)) {\r\n        this.alertService.info(`Cash Collection should be equal to Due Amount for Bill no ${x.BILL_NO}.`);\r\n        return false;\r\n      } else {\r\n        this.DetailList.forEach(x => {\r\n          x.BALANCE = x.DUE_AMOUNT - x.CASH_COLLECTION;\r\n        })\r\n        this.CalculateSum();\r\n      }\r\n    })\r\n\r\n    if (this.CashCollectionObj.CASHBANK_ACID == null ||\r\n      this.CashCollectionObj.CASHBANK_ACID == \"\" ||\r\n      this.CashCollectionObj.CASHBANK_ACID == undefined) {\r\n      this.alertService.info(\"Please select Cash/Bank!\");\r\n      return false;\r\n    }\r\n\r\n  }\r\n  BillList: any[] = [];\r\n\r\n  saveClick() {\r\n    if (this.ValidateSaveObj() == false) {\r\n      return;\r\n    }\r\n\r\n    if (!this.CashCollectionObj.ENTRYDATE) {\r\n      this.CashCollectionObj.ENTRYDATE = new Date().toJSON().split('T')[0];\r\n      this.changeEntryDate(this.CashCollectionObj.ENTRYDATE, 'AD');\r\n    }\r\n    if (!this.CashCollectionObj.DATE1) {\r\n      this.CashCollectionObj.DATE1 = new Date().toJSON().split('T')[0];\r\n      this.changeDate1(this.CashCollectionObj.DATE1, 'AD');\r\n    }\r\n    if (!this.CashCollectionObj.DATE2) {\r\n      this.CashCollectionObj.DATE2 = new Date().toJSON().split('T')[0];\r\n      this.changeDate2(this.CashCollectionObj.DATE2, 'AD');\r\n    }\r\n\r\n    //main and tran data prepare starts\r\n    this._transactionService.initialFormLoad(18,\"cashcollection\");\r\n    this._transactionService.TrnMainObj.TRNACName = this.CashCollectionObj.CASHBANK_ACNAME;\r\n    this._transactionService.TrnMainObj.TRNAC = this.CashCollectionObj.CASHBANK_ACID;\r\n    this._transactionService.TrnMainObj.REMARKS = this.CashCollectionObj.REMARKS;\r\n    this._transactionService.TrnMainObj.TRNDATE = this._transactionService.TrnMainObj.TRN_DATE = this.CashCollectionObj.ENTRYDATE;\r\n    this._transactionService.TrnMainObj.BSDATE = this._transactionService.TrnMainObj.BS_DATE = this.CashCollectionObj.ENTRY_BSDATE;\r\n    this._transactionService.TrnMainObj.TRNMODE = \"Party Receipt\";\r\n    this._transactionService.TrnMainObj.TOTAMNT = this._transactionService.TrnMainObj.NETAMNT = this.CashCollectionObj.TOTAL_CASHCOLLECTION;\r\n    this._transactionService.TrnMainObj.TrntranList = [];\r\n    // this._transactionService.TrnMainObj.BillTrackedList = [];\r\n\r\n    if (this.DetailList.filter(x => x.CASH_COLLECTION > 0).length > 0 &&\r\n      this.DetailList.filter(x => x.CASH_COLLECTION > x.DUE_AMOUNT).length == 0 &&\r\n      this.DetailList.filter(x => x.BALANCE < 0).length == 0 &&\r\n      this.DetailList.filter(x => x.CASH_COLLECTION < 0).length == 0 &&\r\n      this.DetailList.filter(x => x.CASH_COLLECTION > 0 && (x.CASH_COLLECTION < x.DUE_AMOUNT)).length == 0) {\r\n      this.SaveCashCollectionObj.CashDataList = this.DetailList.filter(x => x.CASH_COLLECTION > 0);\r\n\r\n      this.SaveCashCollectionObj.CashDataList.forEach(x => {\r\n        //cashcollection data prepare starts\r\n        x.ENTRYDATE = this.CashCollectionObj.ENTRYDATE;\r\n        x.ENTRY_BSDATE = this.CashCollectionObj.ENTRY_BSDATE;\r\n        x.CASHBANK_ACID = this.CashCollectionObj.CASHBANK_ACID;\r\n        x.CASHBANK_ACNAME = this.CashCollectionObj.CASHBANK_ACNAME;\r\n        x.SALESMAN_ID = this.CashCollectionObj.SALESMAN_ID;\r\n        x.SALESMAN_NAME = this.CashCollectionObj.SALESMAN_NAME;\r\n        x.REMARKS = this.CashCollectionObj.REMARKS;\r\n        x.DIVISION = this.userProfile.division;\r\n        x.PHISCALID = this.userProfile.PhiscalYearInfo.PhiscalID;\r\n        x.COMPANYID = this.userProfile.CompanyInfo.COMPANYID;\r\n        x.CC_VCHRNO = this.CashCollectionObj.CC_VCHRNO;\r\n        x.TOTAL_CASHCOLLECTION = this.CashCollectionObj.TOTAL_CASHCOLLECTION;\r\n        x.DATE1 = this.CashCollectionObj.DATE1;\r\n        x.BSDATE1 = this.CashCollectionObj.BSDATE1;\r\n        x.DATE2 = this.CashCollectionObj.DATE2;\r\n        x.BSDATE2 = this.CashCollectionObj.BSDATE2;\r\n        x.RECEIPT_MODE = this.CashCollectionObj.RECEIPT_MODE;\r\n        x.DAYS_BASIS = this.CashCollectionObj.DAYS_BASIS;\r\n        x.CUS_ACID = this.CashCollectionObj.CUS_ACID;\r\n        x.CUS_ACNAME = this.CashCollectionObj.CUS_ACNAME;\r\n\r\n        //cashcollection data prepare ends\r\n\r\n        var val: any = <any>{ AccountItem: <TAcList>{} }\r\n        val.AccountItem.ACNAME = x.CUSTOMER_ACNAME;\r\n        val.AccountItem.ACID = x.CUSTOMER_ACID;\r\n        val.CRAMNT = x.CASH_COLLECTION;\r\n        this._transactionService.TrnMainObj.TrntranList.push(val);\r\n        for (let x of this._transactionService.TrnMainObj.TrntranList) {\r\n          x.acitem = x.AccountItem;\r\n        }\r\n        this._transactionService.calculateDrCrDifferences();\r\n        //main and tran data prepare ends\r\n\r\n        //billtracking data prepare starts\r\n        // let a: BillTrack = <BillTrack>{} //billtracking comment for 1st phase\r\n        // if (x.BALANCE > 0 && x.CASH_COLLECTION > 0) {\r\n        //   a.AMOUNT = x.BALANCE;\r\n        //   a.REFBILL = x.BILL_NO;\r\n        //   a.VCHRNO = this._transactionService.TrnMainObj.VCHRNO;\r\n        //   a.DIVISION = x.DIVISION;\r\n        //   a.ACID = x.CUSTOMER_ACID;\r\n        //   a.REFDIVISION = x.DIVISION;\r\n        //   a.TBillNo = this._transactionService.TrnMainObj.CHALANNO;\r\n        //   a.VOUCHERTYPE = this._transactionService.TrnMainObj.VoucherPrefix;\r\n        //   a.ID = this._transactionService.TrnMainObj.guid;\r\n        //   this._transactionService.TrnMainObj.BillTrackedList.push(a);\r\n        // }\r\n      })\r\n      //billtracking data prepare ends\r\n\r\n      let bodyData = { data: this.SaveCashCollectionObj };\r\n      let rv_voucherno = this._transactionService.TrnMainObj.VCHRNO;\r\n      this.masterService.saveCashCollection(bodyData).subscribe(x => {\r\n        if (x.status == \"ok\") {\r\n          this.masterService.saveTransaction(this._transactionService.TrnMainObj.Mode, this._transactionService.TrnMainObj)\r\n            .subscribe(\r\n              data => {\r\n                if (data.status == \"ok\") {\r\n                  this.reset();\r\n                  this.alertService.info(`Cash Collection Saved Successfully as Receipt Voucher No. ${data.savedvchrno}`);\r\n                } else {\r\n                  this.alertService.error(x.result);\r\n                }\r\n              }), err => {\r\n                this.alertService.error(err);\r\n              }\r\n        } else {\r\n          this.alertService.error(x.result);\r\n        }\r\n      }), err => {\r\n        this.alertService.error(err);\r\n      }\r\n    }\r\n  }\r\n\r\n  changeEntryDate(value, format: string) {\r\n    var adbs = require(\"ad-bs-converter\");\r\n    if (format == \"AD\") {\r\n      let yearValue = moment(value).year();\r\n      if (yearValue.toString().length == 4) {\r\n        var adDate = (value.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n        var bsDate = adbs.ad2bs(adDate);\r\n        bsDate.en.month = bsDate.en.month <= 9 ? \"0\" + (bsDate.en.month) : bsDate.en.month\r\n        this.CashCollectionObj.ENTRY_BSDATE =\r\n          this.masterService.toBSDate(value);\r\n      }\r\n    }\r\n    else if (format == \"BS\") {\r\n      var datearr = value.split('/');\r\n      const bsDate = datearr[2] + \"/\" + datearr[1] + \"/\" + datearr[0];\r\n      let yearValue = moment(value).year();\r\n      var adDate = adbs.bs2ad(bsDate);\r\n      this.CashCollectionObj.ENTRYDATE = this.masterService.toADDate(value);\r\n    }\r\n  }\r\n\r\n  changeDate1(value, format: string) {\r\n    var adbs = require(\"ad-bs-converter\");\r\n    if (format == \"AD\") {\r\n      let yearValue = moment(value).year();\r\n      if (yearValue.toString().length == 4) {\r\n        var adDate = (value.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n        var bsDate = adbs.ad2bs(adDate);\r\n        bsDate.en.month = bsDate.en.month <= 9 ? \"0\" + (bsDate.en.month) : bsDate.en.month\r\n        this.CashCollectionObj.BSDATE1 =\r\n          this.masterService.toBSDate(value);\r\n      }\r\n    }\r\n    else if (format == \"BS\") {\r\n      var datearr = value.split('/');\r\n      const bsDate = datearr[2] + \"/\" + datearr[1] + \"/\" + datearr[0];\r\n      let yearValue = moment(value).year();\r\n      var adDate = adbs.bs2ad(bsDate);\r\n      this.CashCollectionObj.DATE1 = this.masterService.toADDate(value);\r\n    }\r\n  }\r\n\r\n  changeDate2(value, format: string) {\r\n    var adbs = require(\"ad-bs-converter\");\r\n    if (format == \"AD\") {\r\n      let yearValue = moment(value).year();\r\n      if (yearValue.toString().length == 4) {\r\n        var adDate = (value.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n        var bsDate = adbs.ad2bs(adDate);\r\n        bsDate.en.month = bsDate.en.month <= 9 ? \"0\" + (bsDate.en.month) : bsDate.en.month\r\n        this.CashCollectionObj.BSDATE2 =\r\n        this.masterService.toBSDate(value);\r\n      }\r\n    }\r\n    else if (format == \"BS\") {\r\n      var datearr = value.split('/');\r\n      const bsDate = datearr[2] + \"/\" + datearr[1] + \"/\" + datearr[0];\r\n      let yearValue = moment(value).year();\r\n      var adDate = adbs.bs2ad(bsDate);\r\n      this.CashCollectionObj.DATE2 = this.masterService.toADDate(value);\r\n    }\r\n  }\r\n\r\n\r\n  showAcList() {\r\n    this._transactionService.TrnMainObj.TRNMODE = \"Customer_Pay\";\r\n    var TRNMODE = `${this._transactionService.TrnMainObj.TRNMODE}`;\r\n    this.gridACListPopupSettings = {\r\n      title: \"Accounts\",\r\n      apiEndpoints: `/getAccountPagedListByMapId/Details/${TRNMODE}`,\r\n      defaultFilterIndex: 1,\r\n      columns: [\r\n        {\r\n          key: \"ACID\",\r\n          title: \"AC CODE\",\r\n          hidden: false,\r\n          noSearch: false\r\n        },\r\n        {\r\n          key: \"ACNAME\",\r\n          title: \"A/C NAME\",\r\n          hidden: false,\r\n          noSearch: false\r\n        }\r\n      ]\r\n    };\r\n\r\n    this.genericGridACList.show();\r\n  }\r\n\r\n  onAcSelect(acItem) {\r\n    this.CashCollectionObj.CUS_ACID = acItem.ACID;\r\n    this.CashCollectionObj.CUS_ACNAME = acItem.ACNAME;\r\n  }\r\n\r\n  EnterClick() {\r\n    this.gridCostSalesManPopupSetting = {\r\n      title: \"Salesman List\",\r\n      apiEndpoints: `/getSalesManPageList`,\r\n      defaultFilterIndex: 0,\r\n      columns: [\r\n        {\r\n          key: \"Name\",\r\n          title: \"Name\",\r\n          hidden: false,\r\n          noSearch: false\r\n        }\r\n      ]\r\n    };\r\n\r\n    this.genericeSalesManList.show();\r\n  }\r\n\r\n  onSalesManSelect(salesman) {\r\n    this.CashCollectionObj.SALESMAN_ID = salesman.SALESMANID;\r\n    this.CashCollectionObj.SALESMAN_NAME = salesman.Name;\r\n  }\r\n\r\n  CashBankList() {\r\n    var TRNMODE = \"Cash Transfer PV\"\r\n    this.gridCashBankListPopupSettings = {\r\n      title: \"Accounts\",\r\n      apiEndpoints: `/getAccountPagedListByMapId/Master/${TRNMODE}/`,\r\n      defaultFilterIndex: 1,\r\n      columns: [\r\n        {\r\n          key: \"ACCODE\",\r\n          title: \"AC CODE\",\r\n          hidden: false,\r\n          noSearch: false\r\n        },\r\n        {\r\n          key: \"ACNAME\",\r\n          title: \"A/C NAME\",\r\n          hidden: false,\r\n          noSearch: false\r\n        }\r\n      ]\r\n    };\r\n\r\n    this.genericGridCashBankList.show();\r\n  }\r\n\r\n  onCashBankSelect(cashbank) {\r\n    this.CashCollectionObj.CASHBANK_ACID = cashbank.ACID;\r\n    this.CashCollectionObj.CASHBANK_ACNAME = cashbank.ACNAME;\r\n  }\r\n\r\n  showCostCenterList(i) {\r\n    this.gridCostCenterListPopupSettings = {\r\n      title: \"Cost Centers\",\r\n      apiEndpoints: `/getCostCenterPagedList`,\r\n      defaultFilterIndex: 0,\r\n      columns: [\r\n        {\r\n          key: \"COSTCENTERNAME\",\r\n          title: \"Cost Center Name\",\r\n          hidden: false,\r\n          noSearch: false\r\n        }\r\n      ]\r\n    };\r\n    this.genericGridCostCenterList.show();\r\n  }\r\n\r\n  onCostcenterSelect(costcenter) {\r\n    this.CashCollectionObj.COSTCENTER_ID = costcenter.CCID;\r\n    this.CashCollectionObj.COSTCENTER_NAME = costcenter.COSTCENTERNAME;\r\n  }\r\n\r\n  @HostListener(\"document : keydown\", [\"$event\"])\r\n  handleKeyDownboardEvent($event: KeyboardEvent) {\r\n    if ($event.code == \"F3\") {\r\n      $event.preventDefault();\r\n      this.reset();\r\n    } else if ($event.code == \"F6\") {\r\n      $event.preventDefault();\r\n      this.saveClick();\r\n    } else if ($event.code == \"F10\") {\r\n      $event.preventDefault();\r\n      this.back();\r\n    }\r\n  }\r\n\r\n  back() {\r\n    this.returnUrl = \"/pages/dashboard/dashboard\";\r\n    this.router.navigate([this.returnUrl]);\r\n  }\r\n\r\n  loadsalesdata() {\r\n    // if (this.CashCollectionObj.CUS_ACID == \"\" ||\r\n    //   this.CashCollectionObj.CUS_ACID == null ||\r\n    //   this.CashCollectionObj.CUS_ACID == undefined) {\r\n    //   this.alertService.info(\"Please select customer.\");\r\n    //   return;\r\n    // }\r\n    this.loadingService.show(\"Please wait. Data is Loading.\")\r\n    let cashCollectionParameters = <CashCollection>{}\r\n    cashCollectionParameters.DATE1 = this.CashCollectionObj.DATE1 ? this.CashCollectionObj.DATE1 : new Date().toJSON().split('T')[0];\r\n    cashCollectionParameters.DATE2 = this.CashCollectionObj.DATE2 ? this.CashCollectionObj.DATE2 : new Date().toJSON().split('T')[0];\r\n    cashCollectionParameters.AREA_ID = this.CashCollectionObj.AREA_ID ? this.CashCollectionObj.AREA_ID : '%';\r\n    cashCollectionParameters.SALESMAN_ID = this.CashCollectionObj.SALESMAN_ID ? this.CashCollectionObj.SALESMAN_ID : '%';\r\n    cashCollectionParameters.RECEIPT_MODE = '%';\r\n    cashCollectionParameters.DAYS_BASIS = '%';\r\n    cashCollectionParameters.CASHBANK_ACID = this.CashCollectionObj.CASHBANK_ACID ? this.CashCollectionObj.CASHBANK_ACID : '%';\r\n    cashCollectionParameters.CUS_ACID = this.CashCollectionObj.CUS_ACID ? this.CashCollectionObj.CUS_ACID : '%';\r\n    cashCollectionParameters.COSTCENTER_ID = this.CashCollectionObj.COSTCENTER_ID ? this.CashCollectionObj.COSTCENTER_ID : '%';\r\n    cashCollectionParameters.DIVISION = this.userProfile.division;\r\n    cashCollectionParameters.COMPANYID = this.userProfile.CompanyInfo.COMPANYID;\r\n    cashCollectionParameters.PHISCALID = this.userProfile.PhiscalYearInfo.PhiscalID;\r\n    cashCollectionParameters.VIEWMODE = 0;\r\n    cashCollectionParameters.VNO = 0;\r\n\r\n    this.masterService.getCashCollectionDetails(cashCollectionParameters).subscribe(res => {\r\n      if (res.status == 'ok') {\r\n        this.loadingService.hide();\r\n        if (res.result == 0) {\r\n          this.alertService.info(`No data found.`);\r\n          return;\r\n        }\r\n        this.DetailList = [];\r\n\r\n        for (let i of res.result) {\r\n          var load_val: any = <CashCollection>{};\r\n          load_val.CUSTOMER_ACID = i.ACID;\r\n          load_val.CUSTOMER_ACNAME = i.CUSTOMERNAME;\r\n          load_val.BILL_NO = i.BILLNO;\r\n          load_val.BILL_DATE = this._transactionService.transformDate(i.BILLDATE);\r\n          load_val.BILL_BSDATE = i.BSDATE;\r\n          load_val.DUE_DATE = this._transactionService.transformDate(i.DUEDATE);\r\n          load_val.BILL_AMOUNT = i.BILLAMOUNT;\r\n          load_val.DUE_AMOUNT = i.DUEAMOUNT;\r\n          load_val.BALANCE = i.DUEAMOUNT;\r\n          load_val.IS_CHECKED = false;\r\n          load_val.CASH_COLLECTION = 0;\r\n          load_val.RECEIPT_NO = \"\";\r\n          this.DetailList.push(load_val);\r\n        }\r\n        this.CalculateSum();\r\n      } else {\r\n        this.alertService.error(res.result._body);\r\n        this.loadingService.hide();\r\n      }\r\n    }), err => {\r\n      this.alertService.error(err);\r\n      this.loadingService.hide();\r\n    }\r\n  }\r\n\r\n  CalculateSum() {\r\n    this.CashCollectionBillAmount = 0;\r\n    this.CashCollectionDueAmount = 0;\r\n    this.CashCollectionTotalBalance = 0;\r\n    this.CashCollectionObj.TOTAL_CASHCOLLECTION = 0;\r\n    this.TotalBillCount=0;\r\n    this.DetailList.forEach(x => {\r\n      this.CashCollectionBillAmount += Number(x.BILL_AMOUNT);\r\n      this.CashCollectionDueAmount += Number(x.DUE_AMOUNT);\r\n      this.CashCollectionTotalBalance += Number(x.BALANCE);\r\n      this.CashCollectionObj.TOTAL_CASHCOLLECTION += Number(x.CASH_COLLECTION);\r\n    })\r\n    this.TotalBillCount=this.DetailList && this.DetailList.length;\r\n  }\r\n\r\n\r\n  CalculateBal(index) {\r\n    if (this.DetailList[index].CASH_COLLECTION > 0 &&\r\n      (this.DetailList[index].CASH_COLLECTION < this.DetailList[index].DUE_AMOUNT ||\r\n        this.DetailList[index].CASH_COLLECTION > this.DetailList[index].DUE_AMOUNT)) {\r\n      this.alertService.info(\"Cash Collection should be equal to  Due Amount.\");\r\n      return;\r\n    }\r\n    this.DetailList[index].BALANCE = this.DetailList[index].DUE_AMOUNT - this.DetailList[index].CASH_COLLECTION;\r\n    this.CalculateSum();\r\n  }\r\n\r\n  ChooseCashCollection(event: any, index) {\r\n    this.calculation(event.target.checked, index);\r\n  }\r\n\r\n  calculation(isChecked: boolean, index: any) {\r\n    if (isChecked) {\r\n      this.DetailList[index].CASH_COLLECTION = this.DetailList[index].DUE_AMOUNT;\r\n      this.DetailList[index].IS_CHECKED = true;\r\n      this.DetailList[index].BALANCE = 0;\r\n    } else {\r\n      this.DetailList[index].CASH_COLLECTION = 0;\r\n      this.DetailList[index].IS_CHECKED = false;\r\n      this.DetailList[index].BALANCE = this.DetailList[index].DUE_AMOUNT;\r\n    }\r\n    this.CalculateSum();\r\n  }\r\n\r\n  handleChange(event: any) {\r\n    // Handle the change event here\r\n    if (event.target.checked == true) {\r\n      this.DetailList.forEach(x => {\r\n        x.CASH_COLLECTION = x.DUE_AMOUNT;\r\n        x.BALANCE = x.DUE_AMOUNT - x.CASH_COLLECTION;\r\n        x.IS_CHECKED = true;\r\n      })\r\n    } else {\r\n      this.DetailList.forEach(x => {\r\n        x.CASH_COLLECTION = 0;\r\n        x.BALANCE = x.DUE_AMOUNT;\r\n        x.IS_CHECKED = false;\r\n      })\r\n    }\r\n    this.CalculateSum();\r\n  }\r\n\r\n  preventInput($event) {\r\n    $event.preventDefault();\r\n    return false;\r\n  }\r\n\r\n  onViewClicked() {\r\n    this.gridCCvoucherListPopupSettings = this.masterService.getGenericGridPopUpSettings(\"CC\", \"CC\");\r\n    this.genericGridCCvoucherList.show();\r\n  }\r\n\r\n  onVoucherDoubleClick(event) {\r\n    this.CashCollectionObj.MODE = \"VIEW\";\r\n    this.masterService.LoadCashCollection(event.CC_VCHRNO).subscribe(res => {\r\n      if (res.result && res.result.length && res.result.length > 0) {\r\n        this.DetailList = res.result;\r\n        this.CalculateSum();\r\n        this.DetailList.forEach(x => {\r\n          if (x.BALANCE == 0) {\r\n            x.IS_CHECKED = true;\r\n          }\r\n        })\r\n        this.CashCollectionObj.CC_VCHRNO = event.CC_VCHRNO;\r\n        this.CashCollectionObj.RV_VCHRNO = res.result[0].RV_VCHRNO;\r\n        this.CashCollectionObj.CASHBANK_ACNAME = res.result[0].CASHBANK_ACNAME;\r\n        this.CashCollectionObj.CUS_ACNAME = res.result[0].CUSTOMER_ACNAME;\r\n        this.CashCollectionObj.REMARKS = res.result[0].REMARKS;\r\n        this.CashCollectionObj.ENTRYDATE = res.result[0].ENTRYDATE;\r\n        this.CashCollectionObj.ENTRY_BSDATE = res.result[0].ENTRY_BSDATE;\r\n        this.CashCollectionObj.DATE1 = res.result[0].DATE1;\r\n        this.CashCollectionObj.BSDATE1 = res.result[0].BSDATE1;\r\n        this.CashCollectionObj.DATE2 = res.result[0].DATE2;\r\n        this.CashCollectionObj.BSDATE2 = res.result[0].BSDATE2;\r\n        this.CashCollectionObj.SALESMAN_NAME = res.result[0].SALESMAN_NAME;\r\n        this.CashCollectionObj.CUS_ACNAME = res.result[0].CUS_ACNAME;\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nexport interface Pobj {\r\n  CashDataList: CashCollection[];\r\n}\r\nexport interface CashCollection {\r\n  VIEWMODE: any;\r\n  VNO: any;\r\n  ENTRYDATE: Date | string;\r\n  ENTRY_BSDATE: string;\r\n  DATE1: Date | string;\r\n  DATE2: Date | string;\r\n  BSDATE1: Date | string;\r\n  BSDATE2: Date | string;\r\n  AREA_ID: string;\r\n  AREA_NAME: string;\r\n  SALESMAN_ID: string;\r\n  SALESMAN_NAME: string;\r\n  RECEIPT_MODE: string;\r\n  DAYS_BASIS: string;\r\n  CUS_ACID: string;\r\n  CUS_ACNAME: string;\r\n  COSTCENTER_ID: string;\r\n  COSTCENTER_NAME: string;\r\n  REMARKS: string;\r\n\r\n  CUSTOMER_ACID: string;\r\n  CUSTOMER_ACNAME: string;\r\n  BILL_NO: string;\r\n  BILL_DATE: Date | string;\r\n  BILL_BSDATE: Date | string;\r\n  DUE_DATE: Date | string;\r\n  BILL_AMOUNT: number;\r\n  DUE_AMOUNT: number;\r\n  BALANCE: number;\r\n  IS_CHECKED: boolean;\r\n  CASH_COLLECTION: number;\r\n  RECEIPT_NO: number;\r\n  CASHBANK_ACID: string;\r\n  CASHBANK_ACNAME: string;\r\n  DIVISION: string;\r\n  PHISCALID: string;\r\n  COMPANYID: string;\r\n  CC_VCHRNO: string;\r\n  RV_VCHRNO: string;\r\n  MODE: string;\r\n  TOTAL_CASHCOLLECTION: number;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/pages/AccountVoucher/components/CashCollection/cashcollection.component.ts","import { Component, ViewChild } from \"@angular/core\";\r\nimport { TransactionService } from \"../../../../common/Transaction Components/transaction.service\";\r\nimport { PREFIX } from \"../../../../common/interfaces/Prefix.interface\";\r\nimport { VoucherTypeEnum } from \"../../../../common/interfaces/TrnMain\";\r\nimport { TrnMain } from \"../../../../common/interfaces/TrnMain\";\r\nimport { MasterRepo } from \"../../../../common/repositories/masterRepo.service\";\r\nimport { Router, ActivatedRoute } from \"@angular/router\";\r\nimport { SettingService } from \"../../../../common/services/index\";\r\nimport { AlertService } from \"../../../../common/services/alert/alert.service\";\r\nimport { SpinnerService } from \"../../../../common/services/spinner/spinner.service\";\r\nimport { TrnTranVoucherEntryComponent } from \"../../../../common/Transaction Components/trntran-voucher-entry.component\";\r\n\r\n@Component({\r\n  selector: \"cellpay-voucher\",\r\n  template: require('./CellPay-Voucher.component.html'),\r\n  providers: [TransactionService],\r\n  styles: [require('../../../modal-style.css')]\r\n})\r\nexport class CellPayVoucherComponent {\r\n  TrnMainObj: TrnMain = <TrnMain>{};\r\n  voucherType: VoucherTypeEnum = VoucherTypeEnum.PaymentVoucher;\r\n  prefix: PREFIX = <PREFIX>{};\r\n  @ViewChild(\"trnmainentry\") trnmainentry: TrnTranVoucherEntryComponent;\r\n\r\n  constructor(\r\n    private masterService: MasterRepo,\r\n    public _trnMainService: TransactionService,\r\n    private setting: SettingService,\r\n    private _loadingSerive: SpinnerService,\r\n    private _alertService: AlertService,\r\n    private _activatedRoute: ActivatedRoute\r\n  ) {\r\n    this.TrnMainObj = this._trnMainService.TrnMainObj;\r\n    this._trnMainService.initialFormLoad(75);\r\n    this.masterService.ShowMore = false;\r\n    // this._trnMainService.TrnMainObj.TRNAC = \"AG10278\";\r\n    //       this._trnMainService.TrnMainObj.TRNACName = \"NIBL\";\r\n    //       this._trnMainService.masterSelectACID = \"AG10278\";\r\n  }\r\n\r\n  ngOnInit() {\r\n    this._activatedRoute.queryParams.subscribe(params => {\r\n      if (params['mode']==\"DRILL\") {\r\n        let VCHR = params['voucher']\r\n        let vparams = []\r\n        vparams = VCHR.split('-')\r\n        this._loadingSerive.show(\"Loading Invoice\")\r\n        this.masterService.LoadTransaction(VCHR, vparams[1], vparams[2]).subscribe((res) => {\r\n          if (res.status == \"ok\") {\r\n            this._loadingSerive.hide()\r\n            this._trnMainService.TrnMainObj = res.result;\r\n            this._trnMainService.TrnMainObj.VoucherType = 17;\r\n              this._trnMainService.pageHeading = \"CellPay Voucher\";\r\n              this._trnMainService.TrnMainObj.VoucherPrefix = \"PV\";\r\n            this._trnMainService.TrnMainObj.Mode = \"VIEW\";\r\n            this._trnMainService.viewDate.next();\r\n          }\r\n        }, err => {\r\n          this._loadingSerive.hide()\r\n          this._alertService.error(err)\r\n        })\r\n  \r\n      }else{\r\n        if (this._activatedRoute.snapshot.params['from']) {\r\n          let VCHR = this._activatedRoute.snapshot.params['voucherNumber']\r\n          let params = []\r\n          params = VCHR.split('-')\r\n          this._loadingSerive.show(\"Loading Invoice\")\r\n          this.masterService.LoadTransaction(VCHR, params[1], params[2]).subscribe((res) => {\r\n            if (res.status == \"ok\") {\r\n              this._loadingSerive.hide()\r\n              this._trnMainService.TrnMainObj = res.result;\r\n              this._trnMainService.TrnMainObj.VoucherType = 17;\r\n              this._trnMainService.pageHeading = \"CellPay Voucher\";\r\n              this._trnMainService.TrnMainObj.VoucherPrefix = \"PV\";\r\n              this._trnMainService.TrnMainObj.Mode = \"VIEW\";\r\n            }\r\n          }, err => {\r\n            this._loadingSerive.hide()\r\n            this._alertService.error(err)\r\n          })\r\n    \r\n        } else {\r\n          this.TrnMainObj.Mode = \"NEW\";\r\n          this.masterService.ShowMore = false;\r\n        }\r\n      }\r\n    })\r\n    this._trnMainService.DrillMode = \"New\";\r\n   \r\n  }\r\n\r\n  prefixChanged(pref: any) {\r\n    try {\r\n      this._trnMainService.prefix = pref;\r\n      this.prefix = pref;\r\n      if (this.TrnMainObj.Mode == \"NEW\") {\r\n        if (\r\n          this.TrnMainObj.DIVISION == \"\" ||\r\n          this.TrnMainObj.DIVISION == null\r\n        ) {\r\n          this.TrnMainObj.DIVISION = this.setting.appSetting.DefaultDivision;\r\n        }\r\n        this.masterService.getVoucherNo(this.TrnMainObj).subscribe(res => {\r\n          if (res.status == \"ok\") {\r\n            let TMain = <TrnMain>res.result;\r\n            this.TrnMainObj.VCHRNO = TMain.VCHRNO.substr(\r\n              2,\r\n              TMain.VCHRNO.length - 2\r\n            );\r\n            this.TrnMainObj.CHALANNO = TMain.CHALANNO;\r\n          } else {\r\n            alert(\"Failed to retrieve VoucherNo\");\r\n          }\r\n        });\r\n      }\r\n    } catch (ex) {\r\n    }\r\n  }\r\n\r\n  BillTrack() {\r\n    this.trnmainentry.BillTrack()\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/pages/AccountVoucher/components/CellPayVoucher/CellPay-Voucher.component.ts","import { Component } from \"@angular/core\";\r\nimport { TransactionService } from \"../../../../common/Transaction Components/transaction.service\";\r\nimport { PREFIX } from \"../../../../common/interfaces/Prefix.interface\";\r\nimport { VoucherTypeEnum } from \"../../../../common/interfaces/TrnMain\";\r\nimport { TrnMain } from \"../../../../common/interfaces/TrnMain\";\r\nimport { MasterRepo } from \"../../../../common/repositories/masterRepo.service\";\r\nimport { SettingService } from \"../../../../common/services/setting.service\";\r\nimport { SpinnerService } from \"../../../../common/services/spinner/spinner.service\";\r\nimport { AlertService } from \"../../../../common/services/alert/alert.service\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { AuthService } from \"../../../../common/services/permission\";\r\n\r\n@Component({\r\n  selector: \"credit-note\",\r\n  template: require('./credit-note.component.html'),\r\n  providers: [TransactionService],\r\n  styles: [require('../../../modal-style.css')]\r\n})\r\nexport class CreditNoteComponent {\r\n  TrnMainObj: TrnMain = <TrnMain>{};\r\n  voucherType: VoucherTypeEnum = VoucherTypeEnum.CreditNote;\r\n  prefix: PREFIX = <PREFIX>{};\r\n  userSetting: any;\r\n\r\n  constructor(\r\n    private masterService: MasterRepo,\r\n    public _trnMainService: TransactionService,\r\n    private setting: SettingService,\r\n    private _loadingSerive: SpinnerService,\r\n    private _alertService: AlertService,\r\n    private _activatedRoute: ActivatedRoute,\r\n    private authservice: AuthService\r\n  ) {\r\n    this.TrnMainObj = _trnMainService.TrnMainObj;\r\n    this._trnMainService.initialFormLoad(15);\r\n    this._trnMainService.TrnMainObj.VATBILL = 0;\r\n    this.userSetting = authservice.getSetting()\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n    this._activatedRoute.queryParams.subscribe(params => {\r\n      if (params['mode']==\"DRILL\") {\r\n        let VCHR = params['voucher']\r\n        let vparams = []\r\n        vparams = VCHR.split('-')\r\n        this._loadingSerive.show(\"Loading Invoice\")\r\n        this.masterService.LoadTransaction(VCHR, vparams[1], vparams[2]).subscribe((res) => {\r\n          if (res.status == \"ok\") {\r\n            this._loadingSerive.hide()\r\n            this._trnMainService.TrnMainObj = res.result;\r\n            //console.log(\"salesreturn\", this.userSetting,this.userSetting.Vat_Sales)\r\n            let abc = this._trnMainService.TrnMainObj.TrntranList.findIndex(x => x.A_ACID == this.userSetting.Vat_Sales);\r\n            //console.log(\"abc\", abc)\r\n            if (abc >= 0) {\r\n              this._trnMainService.TrnMainObj.TrntranList.splice(abc, 1)\r\n            }\r\n            this._trnMainService.TrnMainObj.VoucherType = 15;\r\n            this._trnMainService.pageHeading = \"CreditNote\";\r\n            this._trnMainService.TrnMainObj.VoucherPrefix = \"CN\";\r\n            this._trnMainService.TrnMainObj.Mode = \"VIEW\";\r\n            this._trnMainService.viewDate.next();\r\n          }\r\n        }, err => {\r\n          this._loadingSerive.hide()\r\n          this._alertService.error(err)\r\n        })\r\n  \r\n      }else{\r\n        this.TrnMainObj.Mode = \"NEW\";\r\n    this.masterService.ShowMore = false;\r\n    this._trnMainService.TrnMainObj.ProdList = [];\r\n    this._trnMainService.TrnMainObj.IsAccountBase = true;\r\n    this._trnMainService.TrnMainObj.CNDN_MODE = 1;\r\n      }\r\n    })\r\n\r\n    \r\n\r\n\r\n  }\r\n\r\n  prefixChanged(pref: any) {\r\n    try {\r\n      this._trnMainService.prefix = pref;\r\n      this.prefix = pref;\r\n      if (this.TrnMainObj.Mode == \"NEW\") {\r\n        var tMain = <TrnMain>{ VoucherPrefix: pref.VNAME };\r\n        if (\r\n          this.TrnMainObj.DIVISION == \"\" ||\r\n          this.TrnMainObj.DIVISION == null\r\n        ) {\r\n          tMain.DIVISION = this.setting.appSetting.DefaultDivision;\r\n        }\r\n        this.masterService.getVoucherNo(tMain).subscribe(res => {\r\n          if (res.status == \"ok\") {\r\n            let TMain = <TrnMain>res.result;\r\n            this.TrnMainObj.VCHRNO = TMain.VCHRNO.substr(\r\n              2,\r\n              TMain.VCHRNO.length - 2\r\n            );\r\n            this.TrnMainObj.CHALANNO = TMain.CHALANNO;\r\n          } else {\r\n            alert(\"Failed to retrieve VoucherNo\");\r\n          }\r\n        });\r\n      }\r\n    } catch (ex) {\r\n    }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/pages/AccountVoucher/components/CreditNote/credit-note.component.ts","import { Component } from \"@angular/core\";\r\nimport { TransactionService } from \"../../../../common/Transaction Components/transaction.service\";\r\nimport { PREFIX } from \"../../../../common/interfaces/Prefix.interface\";\r\nimport { VoucherTypeEnum } from \"../../../../common/interfaces/TrnMain\";\r\nimport { TrnMain } from \"../../../../common/interfaces/TrnMain\";\r\nimport { MasterRepo } from \"../../../../common/repositories/masterRepo.service\";\r\nimport { SettingService } from \"../../../../common/services/setting.service\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { SpinnerService } from \"../../../../common/services/spinner/spinner.service\";\r\nimport { AlertService } from \"../../../../common/services/alert/alert.service\";\r\nimport { AuthService } from \"../../../../common/services/permission\";\r\n\r\n@Component({\r\n  selector: \"debit-note\",\r\n  template: require('./debit-note.component.html'),\r\n  providers: [TransactionService],\r\n  styles: [require('../../../modal-style.css')]\r\n})\r\nexport class DebitNoteComponent {\r\n  TrnMainObj: TrnMain = <TrnMain>{};\r\n  voucherType: VoucherTypeEnum = VoucherTypeEnum.DebitNote;\r\n  prefix: PREFIX = <PREFIX>{};\r\n  userSetting: any;\r\n\r\n  constructor(\r\n    private masterService: MasterRepo,\r\n    private _trnMainService: TransactionService,\r\n    private setting: SettingService,\r\n    private _activatedRoute: ActivatedRoute,\r\n    private _loadingSerive: SpinnerService,\r\n    private _alertService: AlertService,\r\n    private authservice: AuthService\r\n  ) {\r\n    this.TrnMainObj = _trnMainService.TrnMainObj;\r\n    this._trnMainService.initialFormLoad(16);\r\n    this.userSetting = authservice.getSetting()\r\n  }\r\n\r\n  ngOnInit() {\r\n    this._activatedRoute.queryParams.subscribe(params => {\r\n      if (params['mode']==\"DRILL\") {\r\n        let VCHR = params['voucher']\r\n        let vparams = []\r\n        vparams = VCHR.split('-')\r\n        this._loadingSerive.show(\"Loading Invoice\")\r\n        this.masterService.LoadTransaction(VCHR, vparams[1], vparams[2]).subscribe((res) => {\r\n          if (res.status == \"ok\") {\r\n            this._loadingSerive.hide()\r\n            this._trnMainService.TrnMainObj = res.result;\r\n            //console.log(\"Vat_Purchase\", this.userSetting.Vat_Purchase)\r\n            let abc = this._trnMainService.TrnMainObj.TrntranList.findIndex(x => x.A_ACID == this.userSetting.Vat_Purchase);\r\n            //console.log(\"abc\", abc)\r\n            if (abc >= 0) {\r\n              this._trnMainService.TrnMainObj.TrntranList.splice(abc, 1)\r\n            }\r\n            this._trnMainService.TrnMainObj.VoucherType = 16;\r\n            this._trnMainService.pageHeading = \"DebitNote\";\r\n            this._trnMainService.TrnMainObj.VoucherPrefix = \"DN\";\r\n            this._trnMainService.TrnMainObj.Mode = \"VIEW\";\r\n            this._trnMainService.viewDate.next();\r\n          }\r\n        }, err => {\r\n          this._loadingSerive.hide()\r\n          this._alertService.error(err)\r\n        })\r\n  \r\n      }else{\r\n        this.TrnMainObj.Mode = \"NEW\";\r\n        this.masterService.ShowMore = false;\r\n        this._trnMainService.TrnMainObj.ProdList = [];\r\n        \r\n        this._trnMainService.TrnMainObj.IsAccountBase = true;\r\n        this._trnMainService.TrnMainObj.VATBILL = 0;\r\n        this._trnMainService.TrnMainObj.CNDN_MODE = 1;\r\n      }\r\n    })\r\n   \r\n  }\r\n\r\n  prefixChanged(pref: any) {\r\n    try {\r\n      this._trnMainService.prefix = pref;\r\n      this.prefix = pref;\r\n      if (this.TrnMainObj.Mode == \"NEW\") {\r\n        var tMain = <TrnMain>{ VoucherPrefix: pref.VNAME };\r\n        if (\r\n          this.TrnMainObj.DIVISION == \"\" ||\r\n          this.TrnMainObj.DIVISION == null\r\n        ) {\r\n          tMain.DIVISION = this.setting.appSetting.DefaultDivision;\r\n        }\r\n        this.masterService.getVoucherNo(tMain).subscribe(res => {\r\n          if (res.status == \"ok\") {\r\n            let TMain = <TrnMain>res.result;\r\n            this.TrnMainObj.VCHRNO = TMain.VCHRNO.substr(\r\n              2,\r\n              TMain.VCHRNO.length - 2\r\n            );\r\n            this.TrnMainObj.CHALANNO = TMain.CHALANNO;\r\n          } else {\r\n            alert(\"Failed to retrieve VoucherNo\");\r\n          }\r\n        });\r\n      }\r\n    } catch (ex) {\r\n      alert(ex);\r\n    }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/pages/AccountVoucher/components/DebitNote/debit-note.component.ts","import { Component, ViewChild } from \"@angular/core\";\r\nimport { TransactionService } from \"./../../../../common/Transaction Components/transaction.service\";\r\nimport { PREFIX } from \"./../../../../common/interfaces/Prefix.interface\";\r\nimport { VoucherTypeEnum } from \"./../../../../common/interfaces/TrnMain\";\r\nimport { TrnMain } from \"./../../../../common/interfaces/TrnMain\";\r\nimport { MasterRepo } from \"./../../../../common/repositories/masterRepo.service\";\r\nimport { Router, ActivatedRoute } from \"@angular/router\";\r\nimport { SettingService } from \"../../../../common/services/index\";\r\nimport { AlertService } from \"../../../../common/services/alert/alert.service\";\r\nimport { SpinnerService } from \"../../../../common/services/spinner/spinner.service\";\r\nimport { TrnTranVoucherEntryComponent } from \"../../../../common/Transaction Components/trntran-voucher-entry.component\";\r\n\r\n@Component({\r\n  selector: \"expenses-voucher\",\r\n  template: require('./expenses-voucher.component.html'),\r\n  providers: [TransactionService],\r\n  styles: [require('../../../modal-style.css')]\r\n})\r\nexport class ExpensesVoucherComponent {\r\n  TrnMainObj: TrnMain = <TrnMain>{};\r\n  voucherType: VoucherTypeEnum = VoucherTypeEnum.PaymentVoucher;\r\n  prefix: PREFIX = <PREFIX>{};\r\n  @ViewChild(\"trnmainentry\") trnmainentry: TrnTranVoucherEntryComponent;\r\n\r\n  constructor(\r\n    private masterService: MasterRepo,\r\n    public _trnMainService: TransactionService,\r\n    private setting: SettingService,\r\n    private _loadingSerive: SpinnerService,\r\n    private _alertService: AlertService,\r\n    private _activatedRoute: ActivatedRoute\r\n  ) {\r\n    this.TrnMainObj = this._trnMainService.TrnMainObj;\r\n    this._trnMainService.initialFormLoad(17);\r\n    this.masterService.ShowMore = false;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this._activatedRoute.queryParams.subscribe(params => {\r\n      if (params['mode']==\"DRILL\") {\r\n        let VCHR = params['voucher']\r\n        let vparams = []\r\n        vparams = VCHR.split('-')\r\n        this._loadingSerive.show(\"Loading Invoice\")\r\n        this.masterService.LoadTransaction(VCHR, vparams[1], vparams[2]).subscribe((res) => {\r\n          if (res.status == \"ok\") {\r\n            this._loadingSerive.hide()\r\n            this._trnMainService.TrnMainObj = res.result;\r\n            this._trnMainService.TrnMainObj.VoucherType = 17;\r\n              this._trnMainService.pageHeading = \"Payment Voucher\";\r\n              this._trnMainService.TrnMainObj.VoucherPrefix = \"PV\";\r\n            this._trnMainService.TrnMainObj.Mode = \"VIEW\";\r\n            this._trnMainService.viewDate.next();\r\n            this._trnMainService.calculateCrDrTotal();\r\n            this._trnMainService.calculateDrCrDifferences();\r\n          }\r\n        }, err => {\r\n          this._loadingSerive.hide()\r\n          this._alertService.error(err)\r\n        })\r\n  \r\n      } else if (params['mode']==\"fromLatepost\"){\r\n        // alert(\"params['mode']== Payment voucher \")\r\n        this.masterService.LoadTransaction(params.voucher, params.DIVISION, params.PHISCALID).subscribe((res) => {\r\n          if (res.status == \"ok\") {\r\n            this._loadingSerive.hide()\r\n            this._trnMainService.TrnMainObj = res.result;\r\n            this._trnMainService.TrnMainObj.VoucherType = 17;\r\n              this._trnMainService.pageHeading = \"Payment Voucher\";\r\n              this._trnMainService.TrnMainObj.VoucherPrefix = \"PV\";\r\n            this._trnMainService.TrnMainObj.Mode = \"VIEW\";\r\n            this._trnMainService.viewDate.next();\r\n          }\r\n        }, err => {\r\n          this._loadingSerive.hide()\r\n          this._alertService.error(err)\r\n        })\r\n\r\n      }\r\n      else{\r\n        if (this._activatedRoute.snapshot.params['from']) {\r\n          let VCHR = this._activatedRoute.snapshot.params['voucherNumber']\r\n          let params = []\r\n          params = VCHR.split('-')\r\n          this._loadingSerive.show(\"Loading Invoice\")\r\n          this.masterService.LoadTransaction(VCHR, params[1], params[2]).subscribe((res) => {\r\n            if (res.status == \"ok\") {\r\n              this._loadingSerive.hide()\r\n              this._trnMainService.TrnMainObj = res.result;\r\n              this._trnMainService.TrnMainObj.VoucherType = 17;\r\n              this._trnMainService.pageHeading = \"Payment Voucher\";\r\n              this._trnMainService.TrnMainObj.VoucherPrefix = \"PV\";\r\n              this._trnMainService.TrnMainObj.Mode = \"VIEW\";\r\n            }\r\n          }, err => {\r\n            this._loadingSerive.hide()\r\n            this._alertService.error(err)\r\n          })\r\n    \r\n        } else {\r\n          this.TrnMainObj.Mode = \"NEW\";\r\n          this.masterService.ShowMore = false;\r\n        }\r\n      }\r\n    })\r\n    this._trnMainService.DrillMode = \"New\";\r\n   \r\n  }\r\n\r\n  prefixChanged(pref: any) {\r\n    try {\r\n      this._trnMainService.prefix = pref;\r\n      this.prefix = pref;\r\n      if (this.TrnMainObj.Mode == \"NEW\") {\r\n        if (\r\n          this.TrnMainObj.DIVISION == \"\" ||\r\n          this.TrnMainObj.DIVISION == null\r\n        ) {\r\n          this.TrnMainObj.DIVISION = this.setting.appSetting.DefaultDivision;\r\n        }\r\n        this.masterService.getVoucherNo(this.TrnMainObj).subscribe(res => {\r\n          if (res.status == \"ok\") {\r\n            let TMain = <TrnMain>res.result;\r\n            this.TrnMainObj.VCHRNO = TMain.VCHRNO.substr(\r\n              2,\r\n              TMain.VCHRNO.length - 2\r\n            );\r\n            this.TrnMainObj.CHALANNO = TMain.CHALANNO;\r\n          } else {\r\n            alert(\"Failed to retrieve VoucherNo\");\r\n          }\r\n        });\r\n      }\r\n    } catch (ex) {\r\n    }\r\n  }\r\n\r\n  BillTrack() {\r\n    this.trnmainentry.BillTrack()\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/pages/AccountVoucher/components/ExpensesVoucher/expenses-voucher.component.ts","import { Component, ViewChild } from \"@angular/core\";\r\nimport { TransactionService } from \"./../../../../common/Transaction Components/transaction.service\";\r\nimport { PREFIX } from \"./../../../../common/interfaces/Prefix.interface\";\r\nimport { VoucherTypeEnum } from \"./../../../../common/interfaces/TrnMain\";\r\nimport { TrnMain } from \"./../../../../common/interfaces/TrnMain\";\r\nimport { MasterRepo } from \"./../../../../common/repositories/masterRepo.service\";\r\nimport { Router, ActivatedRoute } from \"@angular/router\";\r\nimport { Subscription } from \"rxjs/Subscription\";\r\nimport { HotkeysService, Hotkey } from \"angular2-hotkeys\";\r\nimport { SettingService } from \"../../../../common/services/index\";\r\nimport { CustomerTrackingComponent } from \"./CustomerTracking/customerTracking.component\";\r\nimport { VoucherTrackingComponent } from \"../VoucherTracking/VoucherTracking.component\";\r\nimport { SpinnerService } from \"../../../../common/services/spinner/spinner.service\";\r\nimport { AlertService } from \"../../../../common/services/alert/alert.service\";\r\nimport { TrnTranVoucherEntryComponent } from \"../../../../common/Transaction Components/trntran-voucher-entry.component\";\r\n\r\n@Component({\r\n  selector: \"income-voucher\",\r\n  template: require('./income-voucher.component.html'),\r\n  providers: [TransactionService],\r\n  styles: [require('../../../modal-style.css')]\r\n})\r\nexport class IncomeVoucherComponent {\r\n  TrnMainObj: TrnMain = <TrnMain>{};\r\n  voucherType: VoucherTypeEnum = VoucherTypeEnum.ReceiveVoucher;\r\n  prefix: PREFIX = <PREFIX>{};\r\n  @ViewChild(\"voucherTrack\") VoucherTrackingComponent: VoucherTrackingComponent;\r\n  @ViewChild(\"trnmainentry\") trnmainentry: TrnTranVoucherEntryComponent;\r\n  constructor(\r\n    private masterService: MasterRepo,\r\n    private _trnMainService: TransactionService,\r\n    private setting: SettingService,\r\n    private _hotkeysService: HotkeysService,\r\n    private _loadingSerive: SpinnerService,\r\n    private _alertService: AlertService,\r\n    private _activatedRoute: ActivatedRoute\r\n\r\n  ) {\r\n    this.TrnMainObj = this._trnMainService.TrnMainObj;\r\n    this._trnMainService.initialFormLoad(18);\r\n    this.masterService.ShowMore = false;\r\n  }\r\n\r\n\r\n  ngOnInit() {\r\n    this._activatedRoute.queryParams.subscribe(params => {\r\n      if (params['mode']==\"DRILL\") {\r\n        let VCHR = params['voucher']\r\n        let vparams = []\r\n        vparams = VCHR.split('-')\r\n        this._loadingSerive.show(\"Loading Invoice\")\r\n        this.masterService.LoadTransaction(VCHR, vparams[1], vparams[2]).subscribe((res) => {\r\n          if (res.status == \"ok\") {\r\n            this._loadingSerive.hide()\r\n            this._trnMainService.TrnMainObj = res.result;\r\n            this._trnMainService.TrnMainObj.VoucherType = 18;\r\n              this._trnMainService.pageHeading = \"Receipt Voucher\";\r\n              this._trnMainService.TrnMainObj.VoucherPrefix = \"RV\";\r\n              this._trnMainService.TrnMainObj.Mode = \"VIEW\";\r\n              this._trnMainService.viewDate.next();\r\n              this._trnMainService.calculateCrDrTotal();\r\n              this._trnMainService.calculateDrCrDifferences();\r\n          }\r\n        }, err => {\r\n          this._loadingSerive.hide()\r\n          this._alertService.error(err)\r\n        })\r\n  \r\n      }else if (params['mode']==\"fromLatepost\"){\r\n        // alert(\"params['mode']== Receipt voucher \")\r\n        this.masterService.LoadTransaction(params.voucher, params.DIVISION, params.PHISCALID).subscribe((res) => {\r\n          if (res.status == \"ok\") {\r\n            this._loadingSerive.hide()\r\n            this._trnMainService.TrnMainObj = res.result;\r\n            this._trnMainService.TrnMainObj.VoucherType = 18;\r\n              this._trnMainService.pageHeading = \"Receipt Voucher\";\r\n              this._trnMainService.TrnMainObj.VoucherPrefix = \"RV\";\r\n              this._trnMainService.TrnMainObj.Mode = \"VIEW\";\r\n              this._trnMainService.viewDate.next();\r\n          }\r\n        }, err => {\r\n          this._loadingSerive.hide()\r\n          this._alertService.error(err)\r\n        })\r\n\r\n      }\r\n      else{\r\n        if (this._activatedRoute.snapshot.params['from']) {\r\n          let VCHR = this._activatedRoute.snapshot.params['voucherNumber']\r\n          let params = []\r\n          params = VCHR.split('-')\r\n          this._loadingSerive.show(\"Loading Invoice\")\r\n          this.masterService.LoadTransaction(VCHR, params[1], params[2]).subscribe((res) => {\r\n            if (res.status == \"ok\") {\r\n              this._loadingSerive.hide()\r\n              this._trnMainService.TrnMainObj = res.result;\r\n              this._trnMainService.TrnMainObj.VoucherType = 18;\r\n              this._trnMainService.pageHeading = \"Receipt Voucher\";\r\n              this._trnMainService.TrnMainObj.VoucherPrefix = \"RV\";\r\n              this._trnMainService.TrnMainObj.Mode = \"VIEW\";\r\n            }\r\n          }, err => {\r\n            this._loadingSerive.hide()\r\n            this._alertService.error(err)\r\n          })\r\n    \r\n        } else {\r\n          this.TrnMainObj.Mode = \"NEW\";\r\n          this.masterService.ShowMore = false;\r\n        }\r\n      }\r\n    });\r\n    this._trnMainService.DrillMode = \"New\";\r\n\r\n  }\r\n\r\n  prefixChanged(pref: any) {\r\n    try {\r\n      this._trnMainService.prefix = pref;\r\n      this.prefix = pref;\r\n      if (this.TrnMainObj.Mode == \"NEW\") {\r\n        var tMain = <TrnMain>{ VoucherPrefix: pref.VNAME };\r\n        if (\r\n          this.TrnMainObj.DIVISION == \"\" ||\r\n          this.TrnMainObj.DIVISION == null\r\n        ) {\r\n          tMain.DIVISION = this.setting.appSetting.DefaultDivision;\r\n        }\r\n        this.masterService.getVoucherNo(tMain).subscribe(res => {\r\n          if (res.status == \"ok\") {\r\n            let TMain = <TrnMain>res.result;\r\n            this.TrnMainObj.VCHRNO = TMain.VCHRNO.substr(\r\n              2,\r\n              TMain.VCHRNO.length - 2\r\n            );\r\n            this.TrnMainObj.CHALANNO = TMain.CHALANNO;\r\n          } else {\r\n            alert(\"Failed to retrieve VoucherNo\");\r\n          }\r\n        });\r\n      }\r\n    } catch (ex) {\r\n    }\r\n  }\r\n\r\n  BillTrack() {\r\n    this.trnmainentry.BillTrack()\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/pages/AccountVoucher/components/IncomeVoucher/income-voucher.component.ts","import { Component, ElementRef, HostListener, ViewChild } from '@angular/core';\r\nimport { xor } from 'lodash';\r\nimport { ModalDirective } from 'ng2-bootstrap';\r\nimport { GenericPopUpComponent, GenericPopUpSettings } from '../../../../common/popupLists/generic-grid/generic-popup-grid.component';\r\nimport { MasterRepo } from '../../../../common/repositories';\r\nimport { AlertService } from '../../../../common/services/alert/alert.service';\r\nimport { SpinnerService } from '../../../../common/services/spinner/spinner.service';\r\nimport { TransactionService } from '../../../../common/Transaction Components/transaction.service';\r\nimport * as moment from 'moment';\r\nimport { Router } from '@angular/router';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\n@Component({\r\n  selector: 'PaymentCollection',\r\n  template: require('./PaymentCollection.component.html')\r\n})\r\n\r\nexport class PaymentCollection {\r\n  /**Generic Group */\r\n  @ViewChild(\"genericGridACList\")\r\n  genericGridACList: GenericPopUpComponent;\r\n  gridACListPopupSettings: GenericPopUpSettings = new GenericPopUpSettings();\r\n\r\n  @ViewChild(\"genericVchrnoList\")\r\n  genericVchrnoList: GenericPopUpComponent;\r\n  gridvchrnoListPopupSettings: GenericPopUpSettings = new GenericPopUpSettings();\r\n\r\n  @ViewChild(\"genericeSalesManList\")\r\n  genericeSalesManList: GenericPopUpComponent;\r\n  gridCostSalesManPopupSetting: GenericPopUpSettings = new GenericPopUpSettings();\r\n\r\n  @ViewChild('ShowDate') ShowDate: ModalDirective;\r\n\r\n  @ViewChild(\"genericGrid\") genericGrid: GenericPopUpComponent;\r\n  gridPopupSettings: GenericPopUpSettings = new GenericPopUpSettings();\r\n\r\n  @ViewChild('ShowCellPay') ShowCellPay: ModalDirective;\r\n  /**Initialize Module */\r\n  public DetailList: PaymentCollection[];\r\n  public DetailObj: PaymentCollection = <PaymentCollection>{}\r\n  public PayMainObj: Pobj = <Pobj>{};\r\n  mode: any;\r\n  custAcid: any\r\n  rowIndex: any;\r\n  isViewMode: boolean = false;\r\n  SelectedPopupDate: any;\r\n  EntryDate: any = <any>{};\r\n  BSDATE: string;\r\n  @ViewChild ('customerInput') customerInput:ElementRef;\r\n  @ViewChild ('chequeDate') chequeDate:ElementRef;\r\n  CellPayForm: FormGroup;\r\n\r\n  constructor(public masterService: MasterRepo, private loadingService: SpinnerService,\r\n    private _transactionService: TransactionService, private alertService: AlertService,\r\n    private router: Router,private _fb: FormBuilder) {\r\n    this.reset();\r\n    // this.masterService.focusAnyControl(\"ACCODEInput_Cust\" + 1)\r\n    this._transactionService.DrillMode = \"New\";\r\n    this.CellPayForm = this._fb.group({\r\n      merchant_id: [''],\r\n      product_id: [''],\r\n      description: [''],\r\n      amount: [''],\r\n      quantity: [''],\r\n      invoice_number: [''],\r\n      sucess_callback: [''],\r\n      failure_callback: [''],\r\n      transaction_type: [''],\r\n      cancel_callback: [''],\r\n      is_live: ['']\r\n\r\n  });\r\n  }\r\n\r\n  reset() {\r\n    var guid = null;\r\n    const uuidV1 = require('uuid/v1');\r\n    guid = uuidV1();\r\n    this.DetailObj = {} as PaymentCollection;\r\n    this.DetailList = [] as Array<PaymentCollection>\r\n    var nulltt = <any>{};\r\n    nulltt.customerName = ''\r\n    nulltt.BillNo = '';\r\n    nulltt.Amount = 0;\r\n    nulltt.PaymentMode = 'Cheque',\r\n      nulltt.ChequeDate = this._transactionService.transformDate(new Date()),\r\n      nulltt.ChequeNo = '',\r\n      nulltt.CostCenter = '';\r\n    nulltt.isChequeMode = true;\r\n    nulltt.GUID = guid;\r\n    nulltt.IsStatusOne = false;\r\n    nulltt.STATUS = '0';\r\n    this.DetailList.push(nulltt);\r\n    this.isViewMode = false;\r\n    this.mode = \"NEW\";\r\n    this.EntryDate.RECEIVEDATEIS = this._transactionService.transformDate(new Date());\r\n    this.changeEntryDate(this.EntryDate.RECEIVEDATEIS,'AD')\r\n    // this.masterService.focusAnyControl(\"ACCODEInput_Cust\" + 0)\r\n    setTimeout(()=>{\r\n      this.customerInput.nativeElement.focus();\r\n    },10);\r\n    this.rowIndex=0;\r\n\r\n  }\r\n\r\n  ngAfterViewInit() { }\r\n\r\n  saveClick() {\r\n    this.ValidateSaveObj();\r\n   \r\n    \r\n\r\n    // ////console.log(\"@@this.DetailList\",this.DetailList)\r\n    let EmptyChequeNo = this.DetailList.filter(x => x.PaymentMode == \"Cheque\" && x.ChequeNo == \"\")\r\n    ////console.log(\"EmptyChequeNo\", EmptyChequeNo)\r\n    if (EmptyChequeNo.length > 0) {\r\n      this.alertService.info(\"Please Enter Cheque No. and Cheque Date for Payment Mode Cheque\");\r\nreturn;\r\n    }\r\n\r\n    if (this._transactionService.subtractDates(this._transactionService.transformDatetoMMddYY(new Date()), this._transactionService.transformDatetoMMddYY(this.EntryDate.RECEIVEDATEIS)) > 0) {\r\n      this.alertService.info(\"Received Date should not be future date!\")\r\n      return;\r\n    }\r\n    this.PayMainObj.PList = this.DetailList;\r\n    if (!this.EntryDate.RECEIVEDATEIS) {\r\n      this.EntryDate.RECEIVEDATEIS = this._transactionService.transformDate(new Date());\r\n    }\r\n\r\n    this.EntryDate.mode = this.mode;\r\n    let bodyData = { data: this.PayMainObj, EntryDate: this.EntryDate };\r\n    if (this.DetailList.length > 0) {\r\n      this.loadingService.show(\"Please wait. Saving Payment Collection.\")\r\n      this.masterService.savePaymentCollection(bodyData).subscribe(x => {\r\n        if (x.status == \"ok\") {\r\n          this.reset();\r\n          this.loadingService.hide();\r\n          this.alertService.info(\"Payment Collection saved successfully.\");\r\n        } else {\r\n          this.loadingService.hide();\r\n          this.alertService.error(x.result);\r\n        }\r\n      }, error => {\r\n        this.loadingService.hide();\r\n        // ////console.log(\"@@error\",error)\r\n      })\r\n    }\r\n\r\n  }\r\n  changeEntryDate(value, format: string) {\r\n    var adbs = require(\"ad-bs-converter\");\r\n    if (format == \"AD\") {\r\n      let yearValue = moment(value).year();\r\n      if (yearValue.toString().length == 4) {\r\n        var adDate = (value.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n        var bsDate = adbs.ad2bs(adDate);\r\n        bsDate.en.month = bsDate.en.month <= 9 ? \"0\" + (bsDate.en.month) : bsDate.en.month\r\n        this.EntryDate.BSDATE =\r\n          this.masterService.toADDate(value);\r\n      }\r\n\r\n\r\n      // this.VoucherEntry.BSDATE1.disableBefore = 5/4/2020;\r\n    }\r\n    else if (format == \"BS\") {\r\n      var datearr = value.split('/');\r\n    const bsDate = datearr[2]+\"/\"+datearr[1]+\"/\"+datearr[0];\r\n      let yearValue = moment(value).year();\r\n      ////console.log(\"momentyes\", yearValue);\r\n      // var bsDate = (value.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n      var adDate = adbs.bs2ad(bsDate);\r\n\r\n      this.EntryDate.RECEIVEDATEIS = this.masterService.toADDate(value);\r\n\r\n\r\n    }\r\n\r\n  }\r\n ValidateSaveObj() {\r\n    this.DetailList.forEach(element => {\r\n      let indexnum = 0\r\n      if (element.ACID) {\r\n        if (element.ACID == '' || element.ACID == undefined || element.ACID == null) {\r\n          indexnum += 1\r\n          this.DetailList.splice(indexnum);\r\n          return true;\r\n        }\r\n      }\r\n      if (!element.ACID) {\r\n        this.DetailList.splice(-1);\r\n      }\r\n    });\r\n    \r\n    const index = this.DetailList.findIndex(x => x.STATUS == '1');\r\n    if (index >= 0) {\r\n      this.DetailList.splice(index);\r\n    }\r\n    this.DetailList.forEach(element => {\r\n      if(element.Amount <= 0){\r\n        this.alertService.warning(\"Amount is missing\")\r\n        return;\r\n      }\r\n    })\r\n\r\n  }\r\n  NextRow() {\r\n    if (this.DetailList.length > 0) {\r\n      if (!this.DetailList[this.DetailList.length - 1].ACID) {\r\n        return;\r\n      }\r\n    }\r\n\r\n    var guid = null;\r\n    const uuidV1 = require('uuid/v1');\r\n    guid = uuidV1();\r\n    this.rowIndex = this.rowIndex + 1;\r\n    this.DetailObj = {} as PaymentCollection;\r\n    this.DetailObj.PaymentMode = 'Cheque',\r\n      this.DetailObj.isChequeMode = true;\r\n    this.DetailObj.ChequeDate = this._transactionService.transformDate(new Date());\r\n    this.DetailObj.GUID = guid;\r\n    this.DetailObj.IsStatusOne = false;\r\n    this.DetailObj.STATUS = '0';\r\n    this.DetailList.push(this.DetailObj);\r\n\r\n\r\n\r\n\r\n  }\r\n  NewRowForSalesman() {\r\n    if (this.DetailList.length > 0) {\r\n      if (!this.DetailList[this.DetailList.length - 1].ACID) {\r\n        return;\r\n      }\r\n    }\r\n\r\n    var guid = null;\r\n    const uuidV1 = require('uuid/v1');\r\n    guid = uuidV1();\r\n    \r\n    this.DetailObj = {} as PaymentCollection;\r\n    this.DetailObj.PaymentMode = 'Cheque',\r\n      this.DetailObj.isChequeMode = true;\r\n    this.DetailObj.ChequeDate = this._transactionService.transformDate(new Date());\r\n    this.DetailObj.GUID = guid;\r\n    this.DetailObj.IsStatusOne = false;\r\n    this.DetailObj.STATUS = '0';\r\n    this.DetailList.push(this.DetailObj);\r\n\r\n\r\n\r\n\r\n  }\r\n\r\n  showAcList(i) {\r\n    this._transactionService.TrnMainObj.TRNMODE = \"Customer_Pay\";\r\n    var TRNMODE = `${this._transactionService.TrnMainObj.TRNMODE}`;\r\n    this.gridACListPopupSettings = {\r\n      title: \"Accounts\",\r\n      apiEndpoints: `/getAccountPagedListByMapId/Details/${TRNMODE}`,\r\n      defaultFilterIndex: 1,\r\n      columns: [\r\n        {\r\n          key: \"ACID\",\r\n          title: \"AC CODE\",\r\n          hidden: false,\r\n          noSearch: false\r\n        },\r\n        {\r\n          key: \"ACNAME\",\r\n          title: \"A/C NAME\",\r\n          hidden: false,\r\n          noSearch: false\r\n        }\r\n      ]\r\n    };\r\n\r\n    this.genericGridACList.show();\r\n\r\n\r\n  }\r\n\r\n  onAcSelect(acItem) {\r\n    ////console.log(\"ChecKVa@\", acItem, this.rowIndex);\r\n    this.DetailList[this.rowIndex].customerName = acItem.ACNAME;\r\n    this.DetailList[this.rowIndex].ACID = this.custAcid = acItem.ACID;\r\n    this.masterService.focusAnyControl('BillInput' + this.rowIndex);\r\n    // this.onBillShow();\r\n\r\n\r\n  }\r\n\r\n  onBillShow() {\r\n    if (!this.custAcid) { this.alertService.warning(\"Please select the customer first!\") }\r\n    this.gridvchrnoListPopupSettings = {\r\n      title: \"BillList\",\r\n      apiEndpoints: `/getAllTrnMainFromParty/${this.custAcid}`,\r\n      defaultFilterIndex: 0,\r\n      columns: [\r\n        {\r\n          key: \"vchrno\",\r\n          title: \"VCHRNO\",\r\n          hidden: false,\r\n          noSearch: false\r\n        },\r\n        {\r\n          key: \"trndate\",\r\n          title: \"TRNDATE\",\r\n          hidden: false,\r\n          noSearch: false\r\n        },\r\n        {\r\n          key: \"billto\",\r\n          title: \"CUSTOMER\",\r\n          hidden: false,\r\n          noSearch: false\r\n        }\r\n      ]\r\n    };\r\n    this.genericGridACList.hide();\r\n    this.genericVchrnoList.show();\r\n  }\r\n\r\n  rowClick(i) {\r\n    this.rowIndex = i;\r\n\r\n  }\r\n\r\n  onVchrnoSelect(value) {\r\n    this.DetailList[this.rowIndex].BillNo = value.vchrno;\r\n    // this.DetailList[this.rowIndex].Amount = value.netamnt;\r\n    this.genericGridACList.hide();\r\n    this.masterService.focusAnyControl('amountInput' + this.rowIndex);\r\n  }\r\n\r\n  clearRow(value) {\r\n    this.DetailList.splice(this.rowIndex);\r\n\r\n  }\r\n\r\n  onSalesManSelect(value) {\r\n    this.DetailList[this.rowIndex].CostCenter = value.Name;\r\n    this.rowIndex=this.rowIndex+1;\r\n    this.masterService.focusAnyControl('ACCODEInput_Cust' + this.rowIndex);\r\n  }\r\n\r\n  EnterClick() {\r\n    this.gridCostSalesManPopupSetting = {\r\n      title: \"Salesman List\",\r\n      apiEndpoints: `/getSalesManPageList`,\r\n      defaultFilterIndex: 0,\r\n      columns: [\r\n        {\r\n          key: \"Name\",\r\n          title: \"Salesman\",\r\n          hidden: false,\r\n          noSearch: false\r\n        }\r\n      ]\r\n    };\r\n\r\n    this.genericeSalesManList.show();\r\n  }\r\n\r\n  DisableInputFunction() {\r\n    if (this.mode == 'EDIT') {\r\n      this\r\n    }\r\n  }\r\n\r\n  ChangePMode(value) {\r\n\r\n\r\n\r\n    this.DetailList[this.rowIndex].ChequeNo = '';\r\n    this.DetailList[this.rowIndex].PaymentMode == \"Cheque\" ?\r\n      this.DetailList[this.rowIndex].isChequeMode = true :\r\n      this.DetailList[this.rowIndex].isChequeMode = false\r\n    if (this.DetailList[this.rowIndex].PaymentMode == \"Cheque\") {\r\n      this.DetailList[this.rowIndex].ChequeDate = this._transactionService.transformDate(new Date());\r\n      // document.getElementById('chequeNo_Pay'+this.rowIndex).focus();\r\n      // this.masterService.focusAnyControl(\"chequeNo_Pay\"+this.rowIndex);\r\n    } else {\r\n      this.DetailList[this.rowIndex].ChequeDate = null;\r\n      this.masterService.focusAnyControl(\"sm_Pay\"+this.rowIndex);\r\n      // this.checkValidation(this.DetailList[this.rowIndex]);\r\n    }\r\n\r\n  }\r\n\r\n  checkValidation(i) {\r\n\r\n    let sameCustomer = this.DetailList.filter(x => x.customerName == i.customerName && x.BillNo == i.BillNo && x.CostCenter == i.CostCenter)\r\n    if (sameCustomer.length > 1) {\r\n      if (confirm(\"Same Customer, Bill No. and Costcenter detected. Do you want to continue?\")) {\r\n      } else {\r\n        return;\r\n      }\r\n    }\r\n\r\n    if (i.customerName && i.customerName != \"\") {\r\n      if (i.PaymentMode == \"Cheque\") {\r\n        if (i.ChequeNo === \"\" || i.ChequeNo == null || i.ChequeNo === undefined || i.ChequeNo == undefined) {\r\n          this.alertService.info(\"Please Enter Cheque No.\");\r\n          return;\r\n        }\r\n        if (!i.ChequeDate) {\r\n          this.alertService.info(\"Please Enter Cheque Date.\");\r\n          return;\r\n        }\r\n      }\r\n    }\r\n\r\n    if (this.mode == 'NEW') {\r\n      \r\n      if (i.customerName && i.customerName != \"\") {\r\n        this.NewRowForSalesman();\r\n      \r\n  \r\n    \r\n      }\r\n    }\r\n\r\n  }\r\n\r\n  SelectDate() {\r\n    this.ShowDate.show();\r\n  }\r\n\r\n  ShowDateOk() {\r\n    this.masterService.getReceiveLogDataFromDate(this.SelectedPopupDate, 'PC').subscribe((x => {\r\n      if (x.status == 'ok') {\r\n        this.DetailList.splice(0);\r\n        if (x.result) {\r\n          for (let i of x.result) {\r\n            var val: any = <PaymentCollection>{};\r\n            val.customerName = i.customerName;\r\n            val.BillNo = i.BillNO;\r\n            val.Amount = i.Amount;\r\n            val.PaymentMode = i.PaymentMode;\r\n            val.ChequeNo = i.ChequeNo;\r\n            val.ChequeDate = this._transactionService.transformDate(i.ChequeDate);\r\n            val.CostCenter = i.CostCenter;\r\n            this.DetailList.push(val)\r\n          }\r\n        }\r\n        this.ShowDate.hide();\r\n      }\r\n    }))\r\n  }\r\n\r\n  ShoWdateClose() {\r\n    this.ShowDate.hide()\r\n  }\r\n\r\n  view() {\r\n    this.mode = \"VIEW\";\r\n    this.gridPopupSettings = this.masterService.getGenericGridPopUpSettings('PAYMENTCOLLECTION');\r\n    this.genericGrid.show('', false, \"paymentcollectionview\");\r\n\r\n  }\r\n\r\n  edit() {\r\n    this.mode = \"EDIT\";\r\n    this.gridPopupSettings = this.masterService.getGenericGridPopUpSettings('PAYMENTCOLLECTION');\r\n    this.genericGrid.show('', false, \"paymentcollectionedit\");\r\n  }\r\n\r\n  delete() {\r\n    this.masterService.deletePaymentCollection(this.SelectedPopupDate).subscribe(x => {\r\n      if (x.status == 'ok') {\r\n        this.reset();\r\n      }\r\n    })\r\n  }\r\n\r\n  onItemDoubleClick(event) {\r\n    this.SelectedPopupDate = event.RECEIVEDATE;\r\n    this.masterService.getReceiveLogDataFromDate(this.SelectedPopupDate, 'PC').subscribe((x => {\r\n      if (x.status == 'ok') {\r\n        if (x.result.length == 0) {\r\n          this.ShowDate.hide();\r\n          this.alertService.info(`No data found on ${this.SelectedPopupDate}`);\r\n          return;\r\n        }\r\n\r\n        this.DetailList = [];\r\n        if (x.result) {\r\n          for (let i of x.result) {\r\n            var val: any = <PaymentCollection>{};\r\n            // ////console.log(\"@@i\",i)\r\n            val.customerName = i.customerName;\r\n            val.BillNo = i.BillNO;\r\n            val.Amount = i.Amount;\r\n            val.PaymentMode = i.PaymentMode;\r\n            val.ChequeNo = i.ChequeNo;\r\n            if (i.PaymentMode == \"Cheque\") {\r\n              val.ChequeDate = this._transactionService.transformDate(i.ChequeDate);\r\n              val.isChequeMode = true;\r\n            }\r\n            val.CostCenter = i.CostCenter;\r\n            val.STATUS = i.STATUS;\r\n            val.ACID = i.ACID;\r\n            val.GUID = i.GUID;\r\n            if (i.STATUS == '1') {\r\n              val.IsStatusOne = true;\r\n            }\r\n            this.DetailList.push(val);\r\n            this.EntryDate.RECEIVEDATEIS = this._transactionService.transformDate(i.ReceiveDate);\r\n          }\r\n        }\r\n        this.ShowDate.hide();\r\n      }\r\n    }))\r\n\r\n    if (this.mode == \"EDIT\") {\r\n      this.isViewMode = false;\r\n    } else if (this.mode == \"VIEW\") {\r\n      this.isViewMode = true;\r\n    }\r\n\r\n  }\r\n\r\n  focusPmode(value) {\r\n    this.masterService.focusAnyControl('PmodeInput' + this.rowIndex);\r\n  }\r\n\r\n  focusChequeDate(value) {\r\n    this.masterService.focusAnyControl('chequeDate' + this.rowIndex);\r\n  }\r\n\r\n  focusSalesman(value) {\r\n    this.masterService.focusAnyControl('sm_Pay' + this.rowIndex);\r\n    // this.checkValidation(this.DetailList[this.rowIndex]);\r\n  }\r\n\r\n  focusCustomer(){\r\n    setTimeout(()=>{\r\n      this.customerInput.nativeElement.focus();\r\n    },10);\r\n    this.rowIndex=0;\r\n  }\r\n\r\n  focusChequeNo(i){\r\n    if(i.PaymentMode == \"Cheque\"){\r\n      this.masterService.focusAnyControl('chequeNo_Pay' + this.rowIndex);\r\n    }\r\n  }\r\n\r\n  Focus_Salesman(){\r\n    this.checkValidation(this.DetailList[this.rowIndex]);\r\n  }\r\n\r\n  @HostListener(\"document : keydown\", [\"$event\"])\r\n  handleKeyDownboardEvent($event: KeyboardEvent) {\r\n    \r\n    if ($event.code == \"F3\") {\r\n      $event.preventDefault();\r\n      this.reset();\r\n    } else if ($event.code == \"F6\") {\r\n      $event.preventDefault();\r\n     \r\n        this.saveClick();\r\n    }\r\n    else if ($event.code == \"F5\") {\r\n      $event.preventDefault();\r\n      this.edit();\r\n    } else if ($event.code == \"F4\") {\r\n      $event.preventDefault();\r\n      this.view();\r\n    }else if ($event.code == \"F10\") {\r\n      $event.preventDefault();\r\n      this.back();\r\n    }\r\n\r\n\r\n  }\r\n  returnUrl : string;\r\n  back(){\r\n    this.returnUrl = \"/pages/dashboard/dashboard\";\r\n    this.router.navigate([this.returnUrl]);\r\n  }\r\n  \r\n\r\n}\r\n\r\nexport interface Pobj {\r\n  PList: PaymentCollection[];\r\n}\r\nexport interface PaymentCollection {\r\n  customerName: string;\r\n  BillNo: string;\r\n  Amount: number;\r\n  PaymentMode: string;\r\n  ChequeNo: string;\r\n  ChequeDate: Date | string;\r\n  CostCenter: string;\r\n  ACID: string;\r\n  isChequeMode: boolean;\r\n  GUID: string;\r\n  IsStatusOne: boolean;\r\n  STATUS: string;\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/pages/AccountVoucher/components/PaymentCollection/PaymentCollection.component.ts","import { Component, ViewChild } from \"@angular/core\";\r\nimport { TransactionService } from \"../../../../common/Transaction Components/transaction.service\";\r\nimport { PREFIX } from \"../../../../common/interfaces/Prefix.interface\";\r\nimport { VoucherTypeEnum } from \"../../../../common/interfaces/TrnMain\";\r\nimport { TrnMain } from \"../../../../common/interfaces/TrnMain\";\r\nimport { MasterRepo } from \"../../../../common/repositories/masterRepo.service\";\r\nimport { Router, ActivatedRoute } from \"@angular/router\";\r\nimport { Subscription } from \"rxjs/Subscription\";\r\nimport { HotkeysService, Hotkey } from \"angular2-hotkeys\";\r\nimport { SettingService } from \"../../../../common/services/index\";\r\nimport { CustomerTrackingComponent } from \"./CustomerTracking/customerTracking.component\";\r\nimport { VoucherTrackingComponent } from \"../VoucherTracking/VoucherTracking.component\";\r\nimport { SpinnerService } from \"../../../../common/services/spinner/spinner.service\";\r\nimport { AlertService } from \"../../../../common/services/alert/alert.service\";\r\nimport { TrnTranVoucherEntryComponent } from \"../../../../common/Transaction Components/trntran-voucher-entry.component\";\r\n\r\n@Component({\r\n  selector: \"postdirectory\",\r\n  template: require('./postdirectory.component.html'),\r\n  providers: [TransactionService],\r\n  styles: [require('../../../modal-style.css')]\r\n})\r\nexport class PostDirectoryComponent {\r\n  TrnMainObj: TrnMain = <TrnMain>{};\r\n  voucherType: VoucherTypeEnum = VoucherTypeEnum.PostDirectory;\r\n  prefix: PREFIX = <PREFIX>{};\r\n  @ViewChild(\"voucherTrack\") VoucherTrackingComponent: VoucherTrackingComponent;\r\n  @ViewChild(\"trnmainentry\") trnmainentry: TrnTranVoucherEntryComponent;\r\n  constructor(\r\n    private masterService: MasterRepo,\r\n    private _trnMainService: TransactionService,\r\n    private setting: SettingService,\r\n    private _hotkeysService: HotkeysService,\r\n    private _loadingSerive: SpinnerService,\r\n    private _alertService: AlertService,\r\n    private _activatedRoute: ActivatedRoute\r\n\r\n  ) {\r\n    this.TrnMainObj = this._trnMainService.TrnMainObj;\r\n    this._trnMainService.initialFormLoad(72);\r\n    this.masterService.ShowMore = false;\r\n  }\r\n\r\n\r\n  ngOnInit() {\r\n    this._activatedRoute.queryParams.subscribe(params => {\r\n      if (params['mode']==\"DRILL\") {\r\n        let VCHR = params['voucher']\r\n        let vparams = []\r\n        vparams = VCHR.split('-')\r\n        this._loadingSerive.show(\"Loading Invoice\")\r\n        this.masterService.LoadTransaction(VCHR, vparams[1], vparams[2]).subscribe((res) => {\r\n          if (res.status == \"ok\") {\r\n            this._loadingSerive.hide()\r\n            this._trnMainService.TrnMainObj = res.result;\r\n            this._trnMainService.TrnMainObj.VoucherType = 72;\r\n              this._trnMainService.pageHeading = \"Post Directory\";\r\n              this._trnMainService.TrnMainObj.VoucherPrefix = \"PC\";\r\n              this._trnMainService.TrnMainObj.Mode = \"VIEW\";\r\n              this._trnMainService.viewDate.next();\r\n              this._trnMainService.calculateCrDrTotal();\r\n              this._trnMainService.calculateDrCrDifferences();\r\n          }\r\n        }, err => {\r\n          this._loadingSerive.hide()\r\n          this._alertService.error(err)\r\n        })\r\n  \r\n      }else{\r\n        if (this._activatedRoute.snapshot.params['from']) {\r\n          let VCHR = this._activatedRoute.snapshot.params['voucherNumber']\r\n          let params = []\r\n          params = VCHR.split('-')\r\n          this._loadingSerive.show(\"Loading Invoice\")\r\n          this.masterService.LoadTransaction(VCHR, params[1], params[2]).subscribe((res) => {\r\n            if (res.status == \"ok\") {\r\n              this._loadingSerive.hide()\r\n              this._trnMainService.TrnMainObj = res.result;\r\n              this._trnMainService.TrnMainObj.VoucherType = 72;\r\n              this._trnMainService.pageHeading = \"Post Directory\";\r\n              this._trnMainService.TrnMainObj.VoucherPrefix = \"PC\";\r\n              this._trnMainService.TrnMainObj.Mode = \"VIEW\";\r\n            }\r\n          }, err => {\r\n            this._loadingSerive.hide()\r\n            this._alertService.error(err)\r\n          })\r\n    \r\n        } else {\r\n          this.TrnMainObj.Mode = \"NEW\";\r\n          this.masterService.ShowMore = false;\r\n          this._trnMainService.TrnMainObj.TRNMODE = 'Party Receipt';\r\n        }\r\n      }\r\n    });\r\n   \r\n\r\n  }\r\n\r\n  prefixChanged(pref: any) {\r\n    try {\r\n      this._trnMainService.prefix = pref;\r\n      this.prefix = pref;\r\n      if (this.TrnMainObj.Mode == \"NEW\") {\r\n        var tMain = <TrnMain>{ VoucherPrefix: pref.VNAME };\r\n        if (\r\n          this.TrnMainObj.DIVISION == \"\" ||\r\n          this.TrnMainObj.DIVISION == null\r\n        ) {\r\n          tMain.DIVISION = this.setting.appSetting.DefaultDivision;\r\n        }\r\n        this.masterService.getVoucherNo(tMain).subscribe(res => {\r\n          if (res.status == \"ok\") {\r\n            let TMain = <TrnMain>res.result;\r\n            this.TrnMainObj.VCHRNO = TMain.VCHRNO.substr(\r\n              2,\r\n              TMain.VCHRNO.length - 2\r\n            );\r\n            this.TrnMainObj.CHALANNO = TMain.CHALANNO;\r\n          } else {\r\n            alert(\"Failed to retrieve VoucherNo\");\r\n          }\r\n        });\r\n      }\r\n    } catch (ex) {\r\n    }\r\n  }\r\n\r\n  BillTrack() {\r\n    this.trnmainentry.BillTrack()\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/pages/AccountVoucher/components/PostDirectory/postdirectory.component.ts","import { Component } from \"@angular/core\";\r\nimport { TransactionService } from \"../../../../common/Transaction Components/transaction.service\";\r\nimport { PREFIX } from \"../../../../common/interfaces/Prefix.interface\";\r\nimport { VoucherTypeEnum } from \"../../../../common/interfaces/TrnMain\";\r\nimport { TrnMain } from \"../../../../common/interfaces/TrnMain\";\r\nimport { MasterRepo } from \"../../../../common/repositories/masterRepo.service\";\r\nimport { SettingService } from \"../../../../common/services/setting.service\";\r\nimport { SpinnerService } from \"../../../../common/services/spinner/spinner.service\";\r\nimport { AlertService } from \"../../../../common/services/alert/alert.service\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { AuthService } from \"../../../../common/services/permission\";\r\n\r\n@Component({\r\n  selector: \"reverse-credit-note\",\r\n  template: require('./reverse-credit-note.component.html'),\r\n  providers: [TransactionService],\r\n  styles: [require('../../../modal-style.css')]\r\n})\r\nexport class ReverseCreditNoteComponent {\r\n  TrnMainObj: TrnMain = <TrnMain>{};\r\n  voucherType: VoucherTypeEnum = VoucherTypeEnum.ReverseCreditNote;\r\n  prefix: PREFIX = <PREFIX>{};\r\n  userSetting: any;\r\n\r\n  constructor(\r\n    private masterService: MasterRepo,\r\n    public _trnMainService: TransactionService,\r\n    private setting: SettingService,\r\n    private _loadingSerive: SpinnerService,\r\n    private _alertService: AlertService,\r\n    private _activatedRoute: ActivatedRoute,\r\n    private authservice: AuthService\r\n  ) {\r\n    this.TrnMainObj = _trnMainService.TrnMainObj;\r\n    this._trnMainService.initialFormLoad(41);\r\n    this._trnMainService.TrnMainObj.VATBILL = 0;\r\n    this.userSetting = authservice.getSetting()\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n    this._activatedRoute.queryParams.subscribe(params => {\r\n      if (params['mode']==\"DRILL\") {\r\n        let VCHR = params['voucher']\r\n        let vparams = []\r\n        vparams = VCHR.split('-')\r\n        this._loadingSerive.show(\"Loading Invoice\")\r\n        this.masterService.LoadTransaction(VCHR, vparams[1], vparams[2]).subscribe((res) => {\r\n          if (res.status == \"ok\") {\r\n            this._loadingSerive.hide()\r\n            this._trnMainService.TrnMainObj = res.result;\r\n            //console.log(\"salesreturn\", this.userSetting,this.userSetting.Vat_Sales)\r\n            let abc = this._trnMainService.TrnMainObj.TrntranList.findIndex(x => x.A_ACID == this.userSetting.Vat_Sales);\r\n            //console.log(\"abc\", abc)\r\n            if (abc >= 0) {\r\n              this._trnMainService.TrnMainObj.TrntranList.splice(abc, 1)\r\n            }\r\n            this._trnMainService.TrnMainObj.VoucherType = 41;\r\n            this._trnMainService.pageHeading = \"Reverse Credit Note\";\r\n            this._trnMainService.TrnMainObj.VoucherPrefix = \"RR\";\r\n            this._trnMainService.TrnMainObj.Mode = \"VIEW\";\r\n            this._trnMainService.viewDate.next();\r\n          }\r\n        }, err => {\r\n          this._loadingSerive.hide()\r\n          this._alertService.error(err)\r\n        })\r\n  \r\n      }else{\r\n        this._trnMainService.TrnMainObj.Mode = \"NEW\";\r\n    this.masterService.ShowMore = false;\r\n    this._trnMainService.TrnMainObj.ProdList = [];\r\n    this._trnMainService.TrnMainObj.IsAccountBase = true;\r\n    this._trnMainService.TrnMainObj.CNDN_MODE = 1;\r\n      }\r\n    })\r\n\r\n    \r\n\r\n\r\n  }\r\n\r\n  prefixChanged(pref: any) {\r\n    try {\r\n      this._trnMainService.prefix = pref;\r\n      this.prefix = pref;\r\n      if (this.TrnMainObj.Mode == \"NEW\") {\r\n        var tMain = <TrnMain>{ VoucherPrefix: pref.VNAME };\r\n        if (\r\n          this.TrnMainObj.DIVISION == \"\" ||\r\n          this.TrnMainObj.DIVISION == null\r\n        ) {\r\n          tMain.DIVISION = this.setting.appSetting.DefaultDivision;\r\n        }\r\n        this.masterService.getVoucherNo(tMain).subscribe(res => {\r\n          if (res.status == \"ok\") {\r\n            let TMain = <TrnMain>res.result;\r\n            this.TrnMainObj.VCHRNO = TMain.VCHRNO.substr(\r\n              2,\r\n              TMain.VCHRNO.length - 2\r\n            );\r\n            this.TrnMainObj.CHALANNO = TMain.CHALANNO;\r\n          } else {\r\n            alert(\"Failed to retrieve VoucherNo\");\r\n          }\r\n        });\r\n      }\r\n    } catch (ex) {\r\n    }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/pages/AccountVoucher/components/ReverseCreditNote/reverse-credit-note.component.ts","import { Component, ViewChild } from '@angular/core';\r\nimport { TransactionService } from '../../../../common/Transaction Components/transaction.service';\r\nimport { GenericPopUpComponent, GenericPopUpSettings } from '../../../../common/popupLists/generic-grid/generic-popup-grid.component';\r\nimport { MasterRepo } from '../../../../common/repositories/masterRepo.service';\r\nimport { AuthService } from '../../../../common/services/permission/authService.service';\r\nimport { TwoDigitNumber } from '../../../../theme/pipes';\r\n@Component({\r\n  selector: 'account-headingwise-depreciation-detail',\r\n  template: require('./account-headingwise-depreciation-detail.component.html'),\r\n  providers: [TwoDigitNumber]\r\n  // styles: [require('./party-balance-confirmation.component.styl')]\r\n})\r\nexport class AccountHeadingWiseDepreciationDetailComponent {\r\n\r\n  @ViewChild(\"genericGridACList\") genericGridACList: GenericPopUpComponent;\r\n  gridACListPopupSettings: GenericPopUpSettings = new GenericPopUpSettings();\r\n\r\n  rowIndex = 0;\r\n  custAcid: any;\r\n  customerName: string;\r\n\r\n  PartyInfo = [];\r\n  costlists = [];\r\n  public PartyBalanceData: PARTYBALANCE = <PARTYBALANCE>{}\r\n\r\n\r\n\r\n\r\n  constructor(\r\n    private _transactionService: TransactionService,\r\n    public masterService: MasterRepo,\r\n    private authService: AuthService,\r\n  ) {\r\n    this.userProfile = this.authService.getUserProfile();\r\n    this.PartyBalanceData.DATE1 = this.masterService.PhiscalObj.BeginDate.split('T')[0];\r\n    this.changeEntryDate(this.PartyBalanceData.DATE1, \"AD\");\r\n    this.PartyBalanceData.DATE2 = this.masterService.PhiscalObj.EndDate.split('T')[0];\r\n    this.changeEndDate(this.PartyBalanceData.DATE2, \"AD\");\r\n    this.PartyBalanceData.INCLUDECASHTRANSACTION = 0\r\n    this.masterService.getAllNEWCostCenter().subscribe(res => {\r\n      if (res) {\r\n        this.costlists = res.result;\r\n      }\r\n    }, error => {\r\n      this.costlists = [];\r\n    });\r\n    this.PartyBalanceData.PARTYTYPE = \"C\";\r\n\r\n  }\r\n\r\n  showAcList(i) {\r\n    this._transactionService.TrnMainObj.TRNMODE = \"SinglePayment_Party\";\r\n    var TRNMODE = `${this._transactionService.TrnMainObj.TRNMODE}`;\r\n    if (this.PartyBalanceData.PARTYTYPE == \"C\") {\r\n      TRNMODE = \"PartyBalance_Customer\";\r\n    } else {\r\n      TRNMODE = \"SinglePayment_Party\";\r\n    }\r\n    this.gridACListPopupSettings = {\r\n      title: \"Accounts\",\r\n      apiEndpoints: `/getAccountPagedListByMapId/Details/${TRNMODE}`,\r\n      defaultFilterIndex: 1,\r\n      columns: [\r\n        {\r\n          key: \"ACID\",\r\n          title: \"AC CODE\",\r\n          hidden: false,\r\n          noSearch: false\r\n        },\r\n        {\r\n          key: \"ACNAME\",\r\n          title: \"A/C NAME\",\r\n          hidden: false,\r\n          noSearch: false\r\n        }\r\n      ]\r\n    };\r\n\r\n    this.genericGridACList.show();\r\n\r\n\r\n  }\r\n  // ngOnInit(){\r\n  //   this.changeEntryDate(this.PartyBalanceData.DATE1, \"AD\");\r\n  //   this.changeEndDate(this.PartyBalanceData.DATE2, \"AD\");\r\n\r\n  // }\r\n\r\n  onAcSelect(acItem) {\r\n    //console.log('sdgfgsdh', acItem);\r\n    this.PartyBalanceData.CUSTOMERNAME = acItem.ACNAME;\r\n    this.PartyBalanceData.ACID = acItem.ACID;\r\n    this.PartyBalanceData.PANNO = acItem.VATNO\r\n    this.PartyBalanceData.COMPANYADDRESS = acItem.ADDRESS\r\n    //  this.setFocus();\r\n\r\n  }\r\n\r\n  setFocus() {\r\n    document.getElementById('Name0').focus();\r\n  }\r\n  onLoad() {\r\n    // //console.log('hello its working',this.PartyBalanceData);\r\n    this.PartyBalanceData.DIVISION = this.userProfile.CompanyInfo.INITIAL;\r\n    this.PartyBalanceData.PHISCALID = this.userProfile.CompanyInfo.PhiscalID;\r\n    this.PartyBalanceData.COMPANYID = this.userProfile.CompanyInfo.COMPANYID;\r\n    if (!this.PartyBalanceData.COSTCENTER) {\r\n      this.PartyBalanceData.COSTCENTER = '%';\r\n    }\r\n    if (!this.PartyBalanceData.ACID) {\r\n      this.PartyBalanceData.ACID = '%';\r\n    }\r\n\r\n    this.masterService.LoadPartyBalanceData(this.PartyBalanceData).subscribe(res => {\r\n      //console.log(\"@@@res.result\",res.result)\r\n      this.PartyInfo = res.result;\r\n      let abcd = this.PartyInfo.filter(x => (x.PARTICULAR == 'Net Receivable' || x.PARTICULAR == 'Net Payable')); //check for Net Receivable and Net Payable\r\n      //console.log(\"abcd\",abcd)\r\n      if (abcd.length > 0 && abcd[0] && abcd[0].AMOUNT) {\r\n        if (abcd[0].AMOUNT < 0) {\r\n          this.PartyBalanceData.NETAMOUNT = abcd[0].AMOUNT * (-1); // send positive netamount for partbalnce print if in negative.\r\n        } else {\r\n          this.PartyBalanceData.NETAMOUNT = abcd[0].AMOUNT;\r\n        }\r\n      } else {\r\n        this.PartyBalanceData.NETAMOUNT = 0;\r\n      }\r\n    })\r\n\r\n\r\n  }\r\n  reSet() {\r\n    this.PartyInfo = [];\r\n    this.PartyBalanceData = <PARTYBALANCE>{}\r\n  }\r\n\r\n  // **********For Date Format**************\r\n\r\n  changeEntryDate(value, format: string) {\r\n    //console.log('working');\r\n    var adbs = require(\"ad-bs-converter\");\r\n    if (format == \"AD\") {\r\n      var adDate = (value.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n      var bsDate = adbs.ad2bs(adDate);\r\n      this.PartyBalanceData.BSDATE1 = this.masterService.toADDate(value);\r\n    }\r\n    else if (format == \"BS\") {\r\n      var datearr = value.split('/');\r\n      const bsDate = datearr[2] + \"/\" + datearr[1] + \"/\" + datearr[0];\r\n      // var bsDate = (value.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n      var adDate = adbs.bs2ad(bsDate);\r\n      this.PartyBalanceData.DATE1 = this.masterService.toBSDate(value);\r\n    }\r\n  }\r\n\r\n  changeEndDate(value, format: string) {\r\n    var adbs = require(\"ad-bs-converter\");\r\n    if (format == \"AD\") {\r\n      var adDate = (value.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n      var bsDate = adbs.ad2bs(adDate);\r\n      this.PartyBalanceData.BSDATE2 = this.masterService.toADDate(value);\r\n    }\r\n    else if (format == \"BS\") {\r\n      var datearr = value.split('/');\r\n      const bsDate = datearr[2] + \"/\" + datearr[1] + \"/\" + datearr[0];\r\n      // var bsDate = (value.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n      var adDate = adbs.bs2ad(bsDate);\r\n      this.PartyBalanceData.DATE2 = this.masterService.toBSDate(value);\r\n    }\r\n  }\r\n\r\n  // printPage(){\r\n  //   window.print();\r\n  // }\r\n\r\n  // *****************For Print************************\r\n  changeCursor: boolean;\r\n  showVoucherReplicateButton: boolean;\r\n  userProfile: any = <any>{};\r\n  filename: any;\r\n  rownumber: any;\r\n  numtowords: any;\r\n  onPrintClicked() {\r\n    //console.log('Its working');\r\n    // if (this._trnMainService.TrnMainObj.TrntranList.length > 0) {\r\n    //   this.promptPrintDevice = true;\r\n    // } else {\r\n    //   this.alertService.warning(\"No voucher Found for Printing\");\r\n    // }\r\n\r\n    this.showVoucherReplicateButton = false;\r\n    let vat = 606764917;\r\n    // let VATresult = vat.split(\"\");\r\n\r\n    // this.masterService.getPrintFileName(\"PV\").subscribe((res) => {\r\n    // if (res.status == \"ok\") {\r\n    this.filename = 'PARTYBALANCE.ims';\r\n    this.rownumber = 0;\r\n\r\n    this.changeCursor = true;\r\n    this.masterService.getGivenNumberToWords(this.PartyBalanceData.NETAMOUNT).subscribe(\r\n      (res) => {\r\n        if (res.status == \"ok\") {\r\n          this.numtowords = res.result ? res.result[0].NUMTOWORDS : '';\r\n          ////console.log(\"@@numtowords\", this.numtowords);\r\n\r\n          let userdivision = this.userProfile.userDivision ? this.userProfile.userDivision : this.userProfile.CompanyInfo.INITIAL;\r\n          let ADDRESS = this.userProfile.CompanyInfo.ADDRESS;\r\n          this.masterService.getDetailsByUserDivision(userdivision).subscribe((res: any) => {\r\n            if (res.status == \"ok\") {\r\n              if (res.result && res.result.length > 0 && res.result[0] && res.result[0].COMADD) {\r\n                ADDRESS = res.result[0].COMADD;\r\n              }\r\n              if (ADDRESS === null || ADDRESS === undefined || ADDRESS === '') {\r\n                ADDRESS = this.userProfile.CompanyInfo.ADDRESS;\r\n              }\r\n\r\n              this.PartyBalanceData.DIVISION = this.userProfile.CompanyInfo.INITIAL; // must for SP\r\n              this.PartyBalanceData.PHISCALID = this.userProfile.CompanyInfo.PhiscalID; // must for SP\r\n              this.PartyBalanceData.COMPANYID = this.userProfile.CompanyInfo.COMPANYID; // must for SP\r\n              this.PartyBalanceData.NAME = this.userProfile.CompanyInfo.NAME ? this.userProfile.CompanyInfo.NAME : '';\r\n              this.PartyBalanceData.ADDRESS = this.userProfile.CompanyInfo.ADDRESS ? this.userProfile.CompanyInfo.ADDRESS : ''\r\n              this.PartyBalanceData.VATNO = this.userProfile.CompanyInfo.VAT ? this.userProfile.CompanyInfo.VAT : '';\r\n              this.PartyBalanceData.numtowords = this.numtowords ? this.numtowords : '';\r\n              this.PartyBalanceData.NETAMOUNT = this.PartyBalanceData.NETAMOUNT ? this.PartyBalanceData.NETAMOUNT : 0;\r\n              this.PartyBalanceData.COMPANYNAME = this.PartyBalanceData.CUSTOMERNAME ? this.PartyBalanceData.CUSTOMERNAME : '';\r\n              this.PartyBalanceData.COMPANYADDRESS = this.PartyBalanceData.COMPANYADDRESS ? this.PartyBalanceData.COMPANYADDRESS : '';\r\n              this.PartyBalanceData.PANNO = this.PartyBalanceData.PANNO ? this.PartyBalanceData.PANNO : 0;\r\n              this.PartyBalanceData.INCLUDECASHTRANSACTION = this.PartyBalanceData.INCLUDECASHTRANSACTION ? this.PartyBalanceData.INCLUDECASHTRANSACTION : 0\r\n              if (!this.PartyBalanceData.COSTCENTER) {\r\n                this.PartyBalanceData.COSTCENTER = '%'; // must for SP\r\n              }\r\n              if (!this.PartyBalanceData.ACID) {\r\n                this.PartyBalanceData.ACID = '%'; // must for SP\r\n              }\r\n              console.log(\"d\", this.PartyBalanceData)\r\n              this.masterService.printPartyBalance(this.filename, this.PartyBalanceData).subscribe(\r\n                (res) => {\r\n                  ////console.log(\"pdfresponse\", res);\r\n\r\n                  const blobUrl = URL.createObjectURL(res.content);\r\n                  const iframe = document.createElement('iframe');\r\n                  iframe.style.display = 'none';\r\n                  iframe.src = blobUrl;\r\n                  document.body.appendChild(iframe);\r\n                  iframe.contentWindow.print();\r\n                  this.changeCursor = false;\r\n\r\n                }\r\n              )\r\n\r\n            }\r\n          })\r\n\r\n\r\n        }\r\n\r\n      })\r\n    this.changeCursor = false;\r\n\r\n  }\r\n\r\n  parttypeChange() {\r\n    this.PartyBalanceData.CUSTOMERNAME = \"\";\r\n    this.PartyBalanceData.ACID = \"\";\r\n  }\r\n\r\n}\r\nexport interface PARTYBALANCE {\r\n  DATE1: Date | string;\r\n  DATE2: Date | string;\r\n  BSDATE1: Date | string;\r\n  BSDATE2: Date | string;\r\n  DIVISION: string;\r\n  PHISCALID: string;\r\n  COMPANYID: string;\r\n  ACID: string;\r\n  COSTCENTER: string;\r\n  CUSTOMERNAME: string;\r\n  COMPANYNAME: string;\r\n  COMPANYADDRESS: string;\r\n  PANNO: number;\r\n  numtowords: string;\r\n  NETAMOUNT: number;\r\n  PARTYTYPE: any;\r\n  INCLUDECASHTRANSACTION: number;\r\n  NAME: string;\r\n  ADDRESS: string;\r\n  VATNO: number;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/pages/AccountVoucher/components/account-headingwise-depreciation-detail/account-headingwise-depreciation-detail.component.ts","import { Component, OnDestroy } from \"@angular/core\";\r\nimport { TransactionService } from \"../../../../common/Transaction Components/transaction.service\";\r\nimport { PREFIX } from \"../../../../common/interfaces/Prefix.interface\";\r\nimport { VoucherTypeEnum } from \"../../../../common/interfaces/TrnMain\";\r\nimport { TrnMain } from \"../../../../common/interfaces/TrnMain\";\r\nimport { MasterRepo } from \"../../../../common/repositories/masterRepo.service\";\r\nimport { Router, ActivatedRoute } from \"@angular/router\";\r\nimport { Subscription } from \"rxjs/Subscription\";\r\nimport { HotkeysService, Hotkey } from \"angular2-hotkeys\";\r\nimport { SettingService } from \"../../../../common/services/setting.service\";\r\nimport {\r\n  FormGroup,\r\n  FormControl,\r\n  FormBuilder,\r\n  Validators\r\n} from \"@angular/forms\";\r\nimport { AppSettings } from \"../../../../common/services/AppSettings\";\r\nimport { BehaviorSubject } from \"rxjs/BehaviorSubject\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { MdDialog } from \"@angular/material\";\r\nimport { MessageDialog } from \"../../../modaldialogs/messageDialog/messageDialog.component\";\r\nimport { TAcList } from \"../../../../common/interfaces/Account.interface\";\r\nimport { Subscriber } from \"rxjs/Subscriber\";\r\nimport { AutoComplete } from \"primeng/components/autocomplete/autocomplete\";\r\n//import { MdDialog } from \"@angular/material/material\";\r\n\r\n@Component({\r\n  selector: \"account-opening-balance\",\r\n  template: require('./account-opening-balance.component.html'),\r\n  providers: [TransactionService]\r\n})\r\nexport class AccountOpeningBalance {\r\n  TrnMainObj: TrnMain;\r\n  voucherType: VoucherTypeEnum = VoucherTypeEnum.AccountOpeningBalance;\r\n  prefix: PREFIX = <PREFIX>{};\r\n  argument: any;\r\n  printInvoice: any;\r\n  form: FormGroup;\r\n  accountList: TAcList[];\r\n  dialogMessageSubject: BehaviorSubject<string> = new BehaviorSubject<string>(\r\n    \"\"\r\n  );\r\n  dialogMessage$: Observable<string> = this.dialogMessageSubject.asObservable();\r\n\r\n  results: Observable<TAcList[]>;\r\n  selectedAccount: TAcList;\r\n  TranList: any[] = [];\r\n  TotalDebit: number;\r\n  TotalCredit: number;\r\n  previousOpeningAccountData: any[] = [];\r\n\r\n  constructor(\r\n    public masterService: MasterRepo,\r\n    private _trnMainService: TransactionService,\r\n    private setting: SettingService,\r\n    private AppSettings: AppSettings,\r\n    public dialog: MdDialog\r\n  ) {\r\n    this.TrnMainObj = this._trnMainService.TrnMainObj;\r\n    this.TrnMainObj.DIVISION = this.AppSettings.DefaultDivision;\r\n    this._trnMainService.initialFormLoad(22);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.TrnMainObj.Mode = \"NEW\";\r\n    this.masterService.ShowMore = false;\r\n    this.voucherType = this._trnMainService.TrnMainObj.VoucherType\r\n  }\r\n\r\n  prefixChanged(pref: any) {\r\n    try {\r\n      this._trnMainService.prefix = pref;\r\n      this.prefix = pref;\r\n      if (this.TrnMainObj.Mode == \"NEW\") {\r\n        if (\r\n          this.TrnMainObj.DIVISION == \"\" ||\r\n          this.TrnMainObj.DIVISION == null\r\n        ) {\r\n          this.TrnMainObj.DIVISION = this.setting.appSetting.DefaultDivision;\r\n        }\r\n        this.masterService.getVoucherNo(this.TrnMainObj).subscribe(res => {\r\n          if (res.status == \"ok\") {\r\n            let TMain = <TrnMain>res.result;\r\n            this.TrnMainObj.VCHRNO = TMain.VCHRNO.substr(\r\n              2,\r\n              TMain.VCHRNO.length - 2\r\n            );\r\n            this.TrnMainObj.CHALANNO = TMain.CHALANNO;\r\n          } else {\r\n            alert(\"Failed to retrieve VoucherNo\");\r\n          }\r\n        });\r\n      }\r\n    } catch (ex) {\r\n    }\r\n  }\r\n\r\n  // handleDropdownClick() {\r\n  //     let resultDataSubject: BehaviorSubject<TAcList[]> = new BehaviorSubject<TAcList[]>([]);\r\n  //     this.results = resultDataSubject.asObservable();\r\n  //     let allItems: TAcList[] = [];\r\n  //     this.masterService.getAccount(\"ac opeinging balance\").map(x => {\r\n  //         if (this.voucherType == VoucherTypeEnum.AccountOpeningBalance) {\r\n  //             return x.filter(a => a.ACID.substring(0, 2).toUpperCase() != 'PA')\r\n  //         }\r\n  //         else if (this.voucherType == VoucherTypeEnum.PartyOpeningBalance) {\r\n  //             return x.filter(a => a.ACID.substring(0, 2).toUpperCase() == 'PA')\r\n  //         }\r\n  //     })\r\n  //         .subscribe(data => {\r\n  //             allItems = data;\r\n  //             resultDataSubject.next(allItems)\r\n  //         }, error => this.masterService.resolveError(Error, 'opeinigbalacnsr-handledropdown')\r\n  //         );\r\n\r\n  // }\r\n\r\n  // onIFocus(event) {\r\n  //     if (event.target.value == \"\") return;\r\n  //     this.search({ query: event.target.value });\r\n  // }\r\n\r\n  // search(event) {\r\n  //     if (event.query == '') {\r\n  //         this.results = this.dropListItem('a');\r\n  //         return;\r\n  //     }\r\n  //     this.results = this.dropListItem(event.query);\r\n  // }\r\n\r\n  // dropListItem = (keyword: any): Observable<Array<TAcList>> => {\r\n  //     try {\r\n  //         return new Observable((observer: Subscriber<Array<TAcList>>) => {\r\n  //             let sub11 = this.masterService.getAccount(\"ac opeinging balance\").map(alist => {\r\n  //                 if (this.voucherType == VoucherTypeEnum.AccountOpeningBalance) {\r\n  //                     return alist.filter(a => a.ACID.substring(0, 2).toUpperCase() != 'PA')\r\n  //                 }\r\n  //                 else if (this.voucherType == VoucherTypeEnum.PartyOpeningBalance) {\r\n  //                     return alist.filter(a => a.ACID.substring(0, 2).toUpperCase() == 'PA')\r\n  //                 }\r\n  //             })\r\n  //                 .map(fList => {\r\n  //                     return fList.filter((data: TAcList) =>\r\n  //                         data.ACNAME == null ? '' : data.ACNAME.toUpperCase().indexOf(keyword.toUpperCase()) > -1)\r\n  //                 })\r\n  //                 .map(res => res.slice(0, 20))\r\n  //                 .subscribe(data => {\r\n  //                     observer.next(data);\r\n  //                 }, Error => {\r\n  //                     this.masterService.resolveError(Error, \"account Opening Balance Insert - getaccountList\");\r\n  //                     observer.complete();\r\n  //                 },\r\n  //                 () => { observer.complete(); }\r\n  //                 )\r\n  //         });\r\n  //     }\r\n  //     catch (ex) {\r\n  //     }\r\n  // }\r\n  // acChanged(v) {\r\n\r\n  //     if (typeof (v) === 'object') {\r\n  //         this.selectedAccount = v;\r\n  //         this.form.patchValue({ ACCODE: v.ACCODE });\r\n  //           this.previousOpeningAccountData=[];\r\n  //          this.getPreviousAccountOpeningBalance(v.ACID);\r\n  //     }\r\n  // }\r\n  // accodeChanged(accode) {\r\n  //     if (accode == '') return;\r\n  //     var ac = this.accountList.find(x => x.ACCODE == accode);\r\n  //     if (accode) {\r\n  //         this.selectedAccount = ac;\r\n  //         this.form.patchValue({ ACNAME: ac.ACNAME });\r\n  //          this.previousOpeningAccountData=[];\r\n  //         this.getPreviousAccountOpeningBalance(ac.ACID);\r\n  //     }\r\n  // }\r\n  // onAddClick() {\r\n  //     this.TranList.push({\r\n  //         account: this.selectedAccount,\r\n  //         DRAMOUNT: (this.form.value.DEBITORCREDIT == 'd') ? this.form.value.AMOUNT : '',\r\n  //         CRAMOUNT: (this.form.value.DEBITORCREDIT == 'c') ? this.form.value.AMOUNT : ''\r\n  //     });\r\n  //     this.calculateTotal();\r\n  //     this.selectedAccount = <TAcList>{};\r\n  //     this.form.patchValue({ ACCODE: '', ACNAME: '', AMOUNT: '' });\r\n  // }\r\n  // addButtonDisable() {\r\n  //     if (this.selectedAccount == null || this.selectedAccount.ACID == null || this.form.value.AMOUNT == null || this.form.value.AMOUNT == '' || this.form.value.AMOUNT <= 0) {\r\n  //         return true;\r\n  //     }\r\n  //     else { return false; }\r\n  // }\r\n  // calculateTotal() {\r\n  //     if (this.TranList) {\r\n  //         this.TotalDebit = 0; this.TranList.forEach(d => { this.TotalDebit += d.DRAMOUNT == '' ? 0 : d.DRAMOUNT });\r\n  //         this.TotalCredit = 0; this.TranList.forEach(c => { this.TotalCredit += c.CRAMOUNT == '' ? 0 : c.CRAMOUNT })\r\n  //     }\r\n  // }\r\n  // TableRowDoubleClickEvent(row, index) {\r\n  //     this.selectedAccount = row.account;\r\n  //     this.form.patchValue({ ACCODE: row.account.ACCODE, ACNAME: row.account.ACNAME, AMOUNT: row.DRAMOUNT == '' ? row.CRAMOUNT : row.DRAMOUNT, DEBITORCREDIT: row.DRAMOUNT == '' ? 'c' : 'd' });\r\n  //     this.TranList.splice(index, 1);\r\n  //     this.calculateTotal();\r\n  // }\r\n  // onSaveClicked() {\r\n  //     if (this.TranList.length == 0) { return; }\r\n  //     if (this.form.value.DIVISION == null) { alert(\"Division Compulsory\"); return; }\r\n  //     this.dialogMessageSubject.next(\"Saving Data please wait...\");\r\n  //     var dialogRef = this.dialog.open(MessageDialog, { hasBackdrop: true, data: { header: 'Information', message: this.dialogMessage$ } })\r\n  //     this.TrnMainObj.DIVISION = this.form.value.DIVISION;\r\n  //     let sub = this.masterService.getSingleObject({ TrnMainObj: this.TrnMainObj, TranTrnList: this.TranList }, '/saveopeningstock')\r\n  //         .subscribe(data => {\r\n  //             if (data.status == 'ok') {\r\n  //                 this.dialogMessageSubject.next(\"Data Saved Successfully\")\r\n\r\n  //             }\r\n  //             else {\r\n  //                 this.dialogMessageSubject.next(data.result);\r\n  //                 setTimeout(() => {\r\n  //                     dialogRef.close();\r\n  //                 }, 3000)\r\n  //             }\r\n  //         },\r\n  //         error => { alert(error) },\r\n\r\n  //         )\r\n\r\n  // }\r\n  // getPreviousAccountOpeningBalance(acid){\r\n  //      this.masterService.getSingleObject({ division: this.form.value.DIVISION,acid:acid,vt:this.voucherType}, '/getprevacopeningbl').subscribe(\r\n  //                     data => {\r\n  //                         if (data.status == 'ok'){\r\n\r\n  //                             if(data.result!=null && data.result.length>0){\r\n  //                             this.previousOpeningAccountData=data.result;\r\n  //                             }\r\n\r\n  //                         }\r\n  //                         else{alert(data);}\r\n  //                     });\r\n  // }\r\n  // fixablewidth(){\r\n  //     if(this.previousOpeningAccountData.length>0)\r\n  //         return\r\n  // }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/pages/AccountVoucher/components/account-opening-balance/account-opening-balance.component.ts","import { Component, ViewChild, ElementRef, PLATFORM_ID, Inject } from \"@angular/core\";\r\nimport { MasterRepo } from \"../../../../common/repositories/masterRepo.service\";\r\nimport * as moment from 'moment';\r\nimport { BankReconciliationService } from \"./bank-reconciliation.service\";\r\nimport { GenericPopUpComponent, GenericPopUpSettings } from \"../../../../common/popupLists/generic-grid/generic-popup-grid.component\";\r\nimport { BankReconciliation, Reconcile } from \"../../../../common/interfaces/bank-reconciliation.interface\";\r\nimport { isPlatformBrowser, DatePipe } from \"@angular/common\";\r\nimport { SpinnerService } from \"../../../../common/services/spinner/spinner.service\";\r\nimport { AlertService } from \"../../../../common/services/alert/alert.service\";\r\nimport { stringify } from \"querystring\";\r\nimport { TransactionService } from \"../../../../common/Transaction Components/transaction.service\";\r\nimport { AuthService } from \"../../../../common/services/permission/authService.service\";\r\nimport { Router } from \"@angular/router\";\r\nimport { Division } from \"../../../../common/interfaces\";\r\nimport * as FileSaver from 'file-saver';\r\nimport * as XLSX from 'xlsx'\r\nconst EXCEL_TYPE = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8';\r\nconst EXCEL_EXTENSION = '.xlsx';\r\n@Component({\r\n    selector: 'bank-reconciliation',\r\n    template: require('./bank-reconciliation.component.html'),\r\n    providers: [BankReconciliationService],\r\n    styles: [require('../../../Style.css')]\r\n\r\n})\r\n\r\nexport class BankReconciliationComponent {\r\n\r\n    @ViewChild(\"bankReconciliationGeneric\") bankReconciliationGeneric: GenericPopUpComponent;\r\n    gridbankReconciliationPopupSettings: GenericPopUpSettings = new GenericPopUpSettings();\r\n\r\n    @ViewChild(\"check\") check: ElementRef;\r\n\r\n\r\n    bankReconciliationObj: BankReconciliation = new BankReconciliation();\r\n    reconcileListObj: Reconcile = new Reconcile();\r\n    public selectedValue: any;\r\n    public reconcileList: Reconcile[] = [];\r\n    public balanceAsPerCompanyBook: any[] = [];\r\n    public amountNotReflectedOnBank: any[] = [];\r\n    public notReflectedonBankDebit: number = 0;\r\n    public notReflectedonBankCredit: number = 0;\r\n    public balanceAsPerBankDebit: number = 0;\r\n    public balanceAsperBankCredit: number = 0;\r\n    public differenceDebit: number = 0;\r\n    public differenceCredit: number = 0;\r\n    public companybook: number = 0;\r\n    public resBalance: number = 0;\r\n    public resDifference: number = 0;\r\n    public showCompanybook: boolean;\r\n    public reflectedBank: boolean;\r\n    public inValue: any;\r\n    public showBankDate: boolean;\r\n\r\n    public bDate: boolean;\r\n    userProfile = this.authservice.getUserProfile();\r\n    fbdate= this.userProfile.CompanyInfo.FBDATE.split('T')[0];\r\n    xyz=this.fbdate.split('-');\r\n    fb_day=this.xyz[2];\r\n    fb_month=this.xyz[1]-1;\r\n    fb_year=this.xyz[0];\r\n    fedate= this.userProfile.CompanyInfo.FEDATE.split('T')[0];\r\n    pqr=this.fedate.split('-');\r\n    fe_day=this.pqr[2];\r\n    fe_month=this.pqr[1]-1;\r\n    fe_year=this.pqr[0];\r\n    returnUrl: string;\r\n    division: any[] = [];\r\n\r\n\r\n\r\n    @ViewChild('bankInput') bankInput;\r\n\r\n    selectedDate: { startDate: moment.Moment, endDate: moment.Moment };\r\n    alwaysShowCalendars: boolean = true;\r\n    ranges: any = {\r\n        'Today': [moment(), moment()],\r\n        'Yesterday': [moment().subtract(1, 'days'), moment().subtract(1, 'days')],\r\n        'Last 7 Days': [moment().subtract(6, 'days'), moment()],\r\n        'Last 30 Days': [moment().subtract(29, 'days'), moment()],\r\n        'This Month': [moment().startOf('month'), moment().endOf('month')],\r\n        'Last Month': [moment().subtract(1, 'month').startOf('month'), moment().subtract(1, 'month').endOf('month')],\r\n        'Financial Year': [moment().set('date', this.fb_day).set('month', this.fb_month).set('year', this.fb_year),\r\n         moment().endOf('month').set('date', this.fe_day).set('month', this.fe_month).set('year', this.fe_year)],\r\n\r\n    }\r\n    locale = {\r\n        format: 'DD/MM/YYYY',\r\n        direction: 'ltr', // could be rtl\r\n        weekLabel: 'W',\r\n        separator: ' - ', // default is ' - '\r\n        cancelLabel: 'Cancel', // detault is 'Cancel'\r\n        applyLabel: 'Okay', // detault is 'Apply'\r\n        clearLabel: 'Clear', // detault is 'Clear'\r\n        customRangeLabel: 'Custom Range',\r\n        daysOfWeek: moment.weekdaysMin(),\r\n        monthNames: moment.monthsShort(),\r\n        firstDay: 0 // first day is monday\r\n    }\r\n\r\n    constructor(@Inject(PLATFORM_ID) private platformId: Object,\r\n     public masterService: MasterRepo, \r\n     private bankReconciliationService: BankReconciliationService, \r\n     private spinnerService: SpinnerService,\r\n     private alertSerivces: AlertService,\r\n     private _transactionService: TransactionService,\r\n     public authservice: AuthService,\r\n     private router: Router\r\n      ) {\r\n        this.division=[];\r\n        this.masterService.ShowMore = true;\r\n        this.showBankDate = false;\r\n        this.selectedDate = {\r\n            startDate: moment(),\r\n            endDate: moment()\r\n        }\r\n\r\n        // this.gridbankReconciliationPopupSettings = {\r\n        //     title: \"Bank Account Name \",\r\n        //     apiEndpoints: `/getBankListPagedList`,\r\n        //     defaultFilterIndex: 0,\r\n        //     columns: [\r\n        //         {\r\n        //             key: \"ACID\",\r\n        //             title: \"Account No.\",\r\n        //             hidden: false,\r\n        //             noSearch: false\r\n        //         },\r\n        //         {\r\n        //             key: \"ACNAME\",\r\n        //             title: \"Account Name\",\r\n        //             hidden: false,\r\n        //             noSearch: false\r\n        //         }\r\n\r\n        //     ]\r\n        // };\r\n\r\n        this.showCompanybook = false;\r\n        this.reflectedBank = false;\r\n\r\n            this.bankReconciliationObj.DATE1 = new Date().toJSON().split('T')[0];\r\n            this.bankReconciliationObj.DATE2 = new Date().toJSON().split('T')[0];\r\n            this.changeEntryDate(this.bankReconciliationObj.DATE1, \"AD\");\r\n            this.changeEndDate(this.bankReconciliationObj.DATE2, \"AD\");\r\n\r\n        if(this.masterService.userSetting.userwisedivision == 1){\r\n            this.masterService.getDivisionFromRightPrivelege().subscribe(res=>{\r\n                if(res.status == 'ok'){\r\n                    this.division = res.result;\r\n                }\r\n            })\r\n          }\r\n          else{\r\n           this.masterService.getAllDivisions()\r\n           .subscribe(res => {\r\n             this.division.push(<Division>res);\r\n           }, error => {\r\n             this.masterService.resolveError(error, \"divisions - getDivisions\");\r\n           });\r\n          }\r\n    }\r\n\r\n\r\n    onItemDoubleClick(event) {\r\n        this.selectedValue = event;\r\n        this.bankReconciliationObj.ACNAME = this.selectedValue.ACNAME;\r\n        this.bankReconciliationObj.ACID = this.selectedValue.ACID;\r\n        this.onLoadClick();\r\n    }\r\n\r\n\r\n    onSaveExcelClick() {\r\n\r\n    }\r\n\r\n    \r\n    onLoadClick() {\r\n        if(this.bankReconciliationObj.ACNAME == '' || this.bankReconciliationObj.ACNAME == null || this.bankReconciliationObj.ACNAME == undefined){\r\n            this.alertSerivces.warning(\"Please select Bank first!\");\r\n            return;\r\n        }\r\n        this.spinnerService.show('Loading Data .. ');\r\n        this.notReflectedonBankDebit = 0;\r\n        this.notReflectedonBankCredit = 0;\r\n        this.balanceAsPerBankDebit = 0;\r\n        this.balanceAsperBankCredit = 0;\r\n        this.differenceDebit = 0;\r\n        this.differenceCredit = 0;\r\n        this.companybook = 0;\r\n        this.resBalance = 0;\r\n        this.resDifference = 0;\r\n\r\n        this.bankReconciliationService.getBankReconcileList(this.bankReconciliationObj)\r\n            .subscribe((res) => {\r\n                var reconcileResult = res.result;\r\n                if (res.status == 'ok') {\r\n                    this.reconcileList = res.result.result\r\n////console.log(\"ReconsilaltionList\",this.reconcileList)\r\n                    if (!this.reconcileList || !this.reconcileList.length) {\r\n                        this.alertSerivces.info('Could not found data');\r\n                    }\r\n                    this.amountNotReflectedOnBank = res.result.amountNotReflectedOnBank\r\n                    this.balanceAsPerCompanyBook = res.result.balanceAsPerCompanyBook\r\n\r\n                    if (this.balanceAsPerCompanyBook == null) { this.showCompanybook = false; }\r\n                    else {\r\n                        if (this.balanceAsPerCompanyBook.length > 0) {\r\n                            this.showCompanybook = true;\r\n                        } else {\r\n                            this.showCompanybook = false;\r\n                        }\r\n                    }\r\n                    if (this.amountNotReflectedOnBank == null)\r\n                     {\r\n                          this.reflectedBank = false; \r\n                    }\r\n                    else {\r\n                        if (this.amountNotReflectedOnBank.length > 0) {\r\n                            this.reflectedBank = true;\r\n                        } else {\r\n                            this.reflectedBank = false;\r\n                        }\r\n                    }\r\n\r\n                    this.buildCheckBox()\r\n                    this.DebitCreditCalculate()\r\n                   \r\n\r\n                    this.spinnerService.hide()\r\n                } else {\r\n                    this.spinnerService.hide()\r\n                    this.alertSerivces.error(\"Error\" + res.result)\r\n                }\r\n\r\n            })\r\n    }\r\n    buildCheckBox() {\r\n        for (let i in this.reconcileList) {\r\n            this.reconcileList[i].isChecked = false\r\n            if (this.reconcileList[i].BANKDATE == undefined || this.reconcileList[i].BANKDATE == null || String(this.reconcileList[i].BANKDATE) == '') {\r\n                this.reconcileList[i].isReconciled = false\r\n            } else {\r\n                this.reconcileList[i].isReconciled = true\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * Save Function to Save Bank Reconcilation\r\n     */\r\n    onSaveClick() {\r\n        let x = this.reconcileList.filter(x => x.isChecked == true)\r\n        if (x.length == 0) {\r\n            this.alertSerivces.error(\"Please Select Bank Date of at least one voucher\");\r\n            return;\r\n        } else {\r\n            this.spinnerService.show(\"Saving Data. Please Wait!\")\r\n            this.bankReconciliationService.saveBank(this.reconcileList.filter(x => x.isChecked == true))\r\n                .subscribe((res) => {\r\n                    if (res.status == \"ok\") {\r\n                        this.spinnerService.hide()\r\n                        this.alertSerivces.success(\"Reconciled  Successfully\");\r\n                        this.reconcileList = null;\r\n                        if (this.reconcileList === undefined) {\r\n                        }\r\n                        this.bankReconciliationObj = new BankReconciliation();\r\n                        this.bankReconciliationObj.DATE1 = new Date().toJSON().split('T')[0];\r\n                        this.bankReconciliationObj.DATE2 = new Date().toJSON().split('T')[0];\r\n                        this.changeEntryDate(this.bankReconciliationObj.DATE1, \"AD\");\r\n                        this.changeEndDate(this.bankReconciliationObj.DATE2, \"AD\");\r\n\r\n                    } else {\r\n                        this.spinnerService.hide()\r\n                        this.alertSerivces.error(\"Error\" + res.error);\r\n                    }\r\n                }, error => {\r\n                    this.spinnerService.hide()\r\n                    this.alertSerivces.error(error)\r\n                })\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n    dateChanged() {\r\n        this.bankReconciliationObj.DATE1 = moment(this.selectedDate.startDate).format('YYYY-MM-DD HH:mm:ss')\r\n        this.bankReconciliationObj.DATE2 = moment(this.selectedDate.endDate).format('YYYY-MM-DD HH:mm:ss')\r\n    }\r\n\r\n    onBankReconciliationPopUPTab() {\r\n        this.onDivisionChanged();\r\n        this.bankReconciliationGeneric.show();\r\n    }\r\n\r\n    itemChecked(event, i: any) {\r\n        //console.log(\"BANKDATE\",this.reconcileList[i].BANKDATE)\r\n        if (this.reconcileList[i].BANKDATE) {\r\n            this.reconcileList[i].isChecked = true;\r\n            this.showBankDate = true;\r\n            this.notReflectedonBankDebit = 0;\r\n            this.notReflectedonBankCredit = 0;\r\n            this.balanceAsPerBankDebit = 0;\r\n            this.balanceAsperBankCredit = 0;\r\n            this.differenceDebit = 0;\r\n            this.differenceCredit = 0;\r\n            // document.getElementById(\"bankDate\" + i).focus();\r\n\r\n\r\n        } else {\r\n            this.reconcileList[i].isChecked = false;\r\n            this.showBankDate = false;\r\n            this.notReflectedonBankDebit = 0;\r\n            this.notReflectedonBankCredit = 0;\r\n            this.balanceAsPerBankDebit = 0;\r\n            this.balanceAsperBankCredit = 0;\r\n            this.differenceDebit = 0;\r\n            this.differenceCredit = 0;\r\n            for (let i in this.reconcileList) {\r\n                if (this.reconcileList[i].isReconciled == false) {\r\n                    this.reconcileList[i].BANKDATE = null;\r\n                }\r\n            }\r\n        }\r\n        this.DebitCreditCalculate();\r\n    }\r\n\r\n    DebitCreditCalculate() {\r\n        this.notReflectedonBankDebit = 0;\r\n        this.notReflectedonBankCredit = 0;\r\n        this.balanceAsPerBankDebit = 0;\r\n        this.balanceAsperBankCredit = 0;\r\n        if (this.reconcileList == null) return;\r\n        this.reconcileList.filter(x => isNaN(Date.parse(String(x.BANKDATE)))).forEach(i => {\r\n            this.notReflectedonBankCredit += this._transactionService.nullToReturnZero(i.CRAMNT);\r\n            this.notReflectedonBankDebit += this._transactionService.nullToReturnZero(i.DRAMNT)\r\n        });\r\n\r\n        if (this.balanceAsPerCompanyBook[0] != null) {\r\n            let r = this.balanceAsPerCompanyBook[0].DRAMNT - (this.notReflectedonBankDebit - this.notReflectedonBankCredit);\r\n            if (r > 0) {\r\n                this.balanceAsPerBankDebit = r;\r\n\r\n            }\r\n            else {\r\n                this.balanceAsperBankCredit = r;\r\n\r\n            }\r\n            let s = this.balanceAsPerCompanyBook[0].DRAMNT - r;\r\n            if (s > 0) {\r\n\r\n                this.differenceDebit = s;\r\n            }\r\n            else {\r\n\r\n                this.differenceCredit = s;\r\n            }\r\n        }\r\n    }\r\n    parseFloat(param: any) {\r\n        return parseFloat(param).toFixed(2);\r\n    }\r\n\r\n    KeyUpMethod(o: any) {\r\n        for (let i in this.reconcileList) {\r\n            if (this.reconcileList[i].isReconciled == false) {\r\n                this.reconcileList[i].isChecked = true\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    BankDateFocus() {\r\n        this.bDate = false\r\n        this.notReflectedonBankDebit = 0;\r\n        this.notReflectedonBankCredit = 0;\r\n        this.balanceAsPerBankDebit = 0;\r\n        this.balanceAsperBankCredit = 0;\r\n        this.differenceDebit = 0;\r\n        this.differenceCredit = 0;\r\n        for (let i in this.reconcileList) {\r\n            var date = this.reconcileList[i].TRNDATE\r\n            var bankDate = this.reconcileList[i].BANKDATE\r\n            var time1 = moment(date).format('YYYY-MM-DD');\r\n            var time2 = moment(bankDate).format('YYYY-MM-DD');\r\n            if (this.reconcileList[i].isReconciled == false) {\r\n                if (time1 > time2) {\r\n                    this.alertSerivces.error(\"Bank Date is less than Trnscation Date\");\r\n                }\r\n            }\r\n        }\r\n        this.DebitCreditCalculate()\r\n    }\r\n\r\n\r\n\r\n    setBankDate(value, index) {\r\n        if (value != null && value != undefined && value != \"\") {\r\n            if (this.masterService.ValidateDate(value)) {\r\n                this.reconcileList[index].BANKDATE = this.masterService.changeIMsDateToDate(value);\r\n                this.itemChecked('',index);\r\n            } else {\r\n                this.alertSerivces.error(`Invalid Transaction Date`);\r\n                return;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    getBankDate(index) {\r\n        if (this.reconcileList[index].BANKDATE) {\r\n            return this.masterService.customDateFormate(this.reconcileList[index].BANKDATE.toString());\r\n        }\r\n    }\r\n\r\n    onBackClicked(){\r\n        this.returnUrl = \"/pages/dashboard/dashboard\";\r\n        this.router.navigate([this.returnUrl]);\r\n      }\r\n\r\n      DivisionEnterClicked() {\r\n        this.bankReconciliationGeneric.show();\r\n    }\r\n\r\n    onDivisionChanged(){\r\n        // //console.log(\"DIV\",this.bankReconsciliationObj.DIV)\r\n        this.bankReconciliationObj.ACNAME = \"\";\r\n        let division = this.bankReconciliationObj.DIV?this.bankReconciliationObj.DIV:'ALL';\r\n        if(this.bankReconciliationObj.DIV == '%'){\r\n            division = 'ALL';\r\n        }\r\n        //console.log(\"this.userProfile.userDivision\",this.userProfile.userDivision)\r\n        division=this.userProfile.userDivision?this.userProfile.userDivision:'ALL';\r\n        this.gridbankReconciliationPopupSettings = {\r\n            title: \"Bank Account Name \",\r\n            apiEndpoints: `/getBankListPagedList/${division}`,\r\n            defaultFilterIndex: 0,\r\n            columns: [\r\n                {\r\n                    key: \"ACID\",\r\n                    title: \"Account No.\",\r\n                    hidden: false,\r\n                    noSearch: false\r\n                },\r\n                {\r\n                    key: \"ACNAME\",\r\n                    title: \"Account Name\",\r\n                    hidden: false,\r\n                    noSearch: false\r\n                }\r\n\r\n            ]\r\n        };\r\n    }\r\n\r\n    changeEntryDate(value, format: string) {\r\n        var adbs = require(\"ad-bs-converter\");\r\n        if (format == \"AD\") {\r\n            var adDate = (value.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n            var bsDate = adbs.ad2bs(adDate);\r\n            this.bankReconciliationObj.BSDATE1 = this.masterService.toBSDate(value);\r\n        }\r\n        else if (format == \"BS\") {\r\n          var datearr = value.split('/');\r\n          const bsDate = datearr[2]+\"/\"+datearr[1]+\"/\"+datearr[0];\r\n          // var bsDate = (value.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n            var adDate = adbs.bs2ad(bsDate);\r\n            var Engdate = this.masterService.toBSDate(value);\r\n            const Validatedata = this.masterService.ValidateNepaliDate(Engdate)\r\n            if(Validatedata == true){\r\n              const bsDate1 = datearr[2]+\"/\"+datearr[1]+\"/\"+datearr[0];\r\n              var adDate1 = adbs.bs2ad(bsDate1);\r\n              this.bankReconciliationObj.DATE1 = this.masterService.toADDate(value);\r\n            }else{\r\n                // this.alertService.error(\"Cannot Change the date\");\r\n              return;\r\n            } \r\n\r\n\r\n        }\r\n    }\r\n\r\n    changeEndDate(value, format: string) {\r\n        var adbs = require(\"ad-bs-converter\");\r\n        if (format == \"AD\") {\r\n            var adDate = (value.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n            var bsDate = adbs.ad2bs(adDate);\r\n            this.bankReconciliationObj.BSDATE2 = this.masterService.toBSDate(value);\r\n        }\r\n        else if (format == \"BS\") {\r\n          var datearr = value.split('/');\r\n          const bsDate = datearr[2]+\"/\"+datearr[1]+\"/\"+datearr[0];\r\n            var adDate = adbs.bs2ad(bsDate);\r\n            var Engdate = this.masterService.toBSDate(value);\r\n            const Validatedata = this.masterService.ValidateNepaliDate(Engdate)\r\n            if(Validatedata == true){\r\n              const bsDate1 = datearr[2]+\"/\"+datearr[1]+\"/\"+datearr[0];\r\n              var adDate1 = adbs.bs2ad(bsDate1);\r\n              this.bankReconciliationObj.DATE2 = this.masterService.toADDate(value);\r\n            }else{\r\n                // this.alertService.error(\"Cannot Change the date\");\r\n              return;\r\n            }\r\n\r\n          }\r\n    }\r\n\r\n    onExportClick(){\r\n        this.exportAsExcelFile(this.reconcileList,this.balanceAsPerCompanyBook,this.notReflectedonBankDebit,this.notReflectedonBankCredit,this.balanceAsPerBankDebit,this.balanceAsperBankCredit,this.differenceDebit,this.differenceCredit,this.amountNotReflectedOnBank,\"Bank Reconciliation\")\r\n    \r\n    }\r\n\r\n\r\n \r\n    public exportAsExcelFile(json: any[],json1:any,value1:any,value2:any,value3:any,value4:any,value5:any,value6:any,json2:any[], excelFileName: string){\r\n       var newArray:any[]=[];\r\n         newArray=Object.assign([], json)\r\n         console.log(\"1\",this.reconcileList);\r\n        Object.keys(newArray).forEach((key: any)=>{\r\n            newArray[key].VoucherType = json[key].VCHRTYPE;\r\n            newArray[key].VoucherNumber = json[key].VNO;\r\n            newArray[key].DIVISION = json[key].DIV;\r\n            newArray[key].ACID = json[key].B_ACID;\r\n            delete newArray[key].VCHRTYPE;\r\n            delete newArray[key].VNO;\r\n            delete newArray[key].DIV;\r\n            delete newArray[key].B_ACID;\r\n              console.log(newArray);\r\n    \r\n        })\r\n        var obj1 = {} as any;\r\n        newArray.push(obj1)\r\n\r\n         json1[0].PARTICULARS=\"Balance As per Company Book\"\r\n         newArray.push(json1[0])\r\n         if(json2 && json2.length>0){\r\n            json2[0].PARTICULARS=\"Amount Not Reflected on Bank(opening)\t\"\r\n            newArray.push(json2[0])\r\n         }else{\r\n             json2=[]\r\n            var obj5 = {} as any;\r\n            obj5.DRAMNT=0;\r\n            obj5.CRAMNT=0;\r\n            obj5.PARTICULARS=\"Amount Not Reflected on Bank(opening)\t\"\r\n            json2.push(obj5)\r\n            newArray.push(json2[0])\r\n         }\r\n    \r\n           var obj2 = {} as any;\r\n           obj2.DRAMNT=value1;\r\n           obj2.CRAMNT=value2;\r\n           obj2.PARTICULARS=\"Not Reflected on Bank (Periodic)\";\r\n           newArray.push(obj2)\r\n           var obj3 = {} as any;\r\n           obj3.DRAMNT=value3;\r\n           obj3.CRAMNT=value4;\r\n           obj3.PARTICULARS=\"Balance As Per Bank Book\";\r\n           newArray.push(obj3)\r\n           var obj4 = {} as any;\r\n           obj4.DRAMNT=value5;\r\n           obj4.CRAMNT=value6;\r\n           obj4.PARTICULARS=\"Difference\";\r\n           newArray.push(obj4)\r\n\r\n        const ws: XLSX.WorkSheet=XLSX.utils.json_to_sheet(newArray);\r\n        const wb: XLSX.WorkBook = XLSX.utils.book_new();\r\n        XLSX.utils.book_append_sheet(wb, ws, \"ABC\");\r\n    \r\n        excelFileName += '.xlsx';\r\n        /* save to file */\r\n        const excelBuffer: any = XLSX.write(wb, { bookType: 'xlsx', type: 'buffer' });\r\n        this.saveAsExcelFile(excelBuffer, excelFileName);\r\n      }\r\n    \r\n    \r\n        // public exportAsExcelFile(json: any[], excelFileName: string): void {\r\n        //     const ws = XLSX.utils.book_new();\r\n        //     // XLSX.utils.sheet_to_json(ws, this.Heading );\r\n        \r\n        //     const worksheet: XLSX.WorkSheet = XLSX.utils.json_to_sheet(json);\r\n        //     const workbook: XLSX.WorkBook = { Sheets: { 'Ledger Report': worksheet }, SheetNames: ['Ledger Report'] };\r\n        //     // let headerRow =XLSX.utils.json_to_sheet(json);\r\n    \r\n        //     const excelBuffer: any = XLSX.write(workbook, { bookType: 'xlsx', type: 'buffer' });\r\n        //     this.saveAsExcelFile(excelBuffer, excelFileName);\r\n        // }\r\n        private saveAsExcelFile(buffer: any, fileName: string): void {\r\n            const data: Blob = new Blob([buffer], { type: EXCEL_TYPE });\r\n            FileSaver.saveAs(data, fileName + EXCEL_EXTENSION);\r\n        }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/pages/AccountVoucher/components/bank-reconciliation/bank-reconciliation.component.ts","import { Component, OnInit, HostListener, ViewChild, ElementRef } from \"@angular/core\";\r\nimport { BillTracking } from \"../../../../common/interfaces/bill-tracking.interface\";\r\nimport { MasterRepo } from \"../../../../common/repositories\";\r\nimport { TransactionService } from \"../../../../common/Transaction Components/transaction.service\";\r\nimport { AlertService } from \"../../../../common/services/alert/alert.service\";\r\nimport { GenericPopUpComponent, GenericPopUpSettings } from \"../../../../common/popupLists/generic-grid/generic-popup-grid.component\";\r\nimport { SpinnerService } from \"../../../../common/services/spinner/spinner.service\";\r\nimport * as moment from 'moment'\r\nimport { BillTrackingAmendmentService } from \"./bill-tracking-amendment.service\";\r\nimport { BillTrack } from \"../../../../common/interfaces\";\r\n@Component({\r\n    selector: 'bill-tracking-amendment',\r\n    template: require('./bill-tracking-amendment.component.html'),\r\n    styles: [require('../../../Style.css')]\r\n\r\n})\r\nexport class BillTrackingAmendmentComponent implements OnInit {\r\n    @ViewChild(\"genericGrid\") genericGrid: GenericPopUpComponent;\r\n    gridPopupSettings: GenericPopUpSettings = new GenericPopUpSettings();\r\n    @ViewChild(\"genericDueGrid\") genericDueGrid: GenericPopUpComponent;\r\n    gridDuePopupSettings: GenericPopUpSettings = new GenericPopUpSettings();\r\n    public BillTrack: BillTracking = <BillTracking>{}\r\n    public pendingVoucherList = [];\r\n    public isActive: boolean = false;\r\n    public selectVoucherIndex: number = 0;\r\n    selectedRow: any;\r\n    selectedAll: boolean = false;\r\n    HoldALLBillList: BillTrack[]\r\n    autoAdjustValue:boolean=false;\r\n    public voucherLoadObj = {\r\n        VoucherType: 0,\r\n        VoucherPrefix: \"\",\r\n        Mode: \"NEW\",\r\n        DIVISION: \"\",\r\n        MWAREHOUSE: \"\"\r\n    }\r\n    constructor(private spinnerService: SpinnerService, private alertService: AlertService, private masterServicce: MasterRepo, public _transactionService: TransactionService, public billService: BillTrackingAmendmentService) {\r\n        this.voucherLoadObj.VoucherType = 71;\r\n        this.voucherLoadObj.VoucherPrefix = \"#\";\r\n        this.voucherLoadObj.DIVISION = this._transactionService.userProfile.CompanyInfo.INITIAL;\r\n        this.voucherLoadObj.MWAREHOUSE = this._transactionService.userProfile.userWarehouse\r\n        this.selectedRow = [];\r\n\r\n    }\r\n    ngOnInit() {\r\n        this.initialFormLoad();\r\n    }\r\n\r\n    selectParty() {\r\n        if (this.BillTrack.PARTYTYPE == null || this.BillTrack.PARTYTYPE == undefined || this.BillTrack.PARTYTYPE == \"\") {\r\n            this.alertService.error(\"Please select party type to proceed\");\r\n            return;\r\n        } else {\r\n            this.genericGrid.show()\r\n        }\r\n    }\r\n\r\n\r\n    selectVoucher() {\r\n        if (this.BillTrack.PARTYTYPE == null || this.BillTrack.PARTYTYPE == undefined || this.BillTrack.PARTYTYPE == \"\") {\r\n            this.alertService.error(\"Please select party type to proceed\");\r\n            return;\r\n        }\r\n\r\n        if (this.BillTrack.ACID == null || this.BillTrack.ACID == undefined || this.BillTrack.ACID == \"\") {\r\n            this.alertService.error(\"Please select party name to proceed\");\r\n            return;\r\n        }\r\n        this.billService.getDuePendingAmount(this.BillTrack.PARTYTYPE, this.BillTrack.ACID).subscribe((res) => {\r\n            if (res.status == \"ok\") {\r\n                this.pendingVoucherList = res.result;\r\n            } else {\r\n                this.alertService.error(res.message);\r\n            }\r\n        })\r\n        this.isActive = true;\r\n    }\r\n\r\n    OnPartyChange(value:string) {\r\n        if( this.BillTrack.ACNAME!=\"\"||this.BillTrack.ACNAME!=null){\r\n            this.BillTrack.ACNAME='';\r\n            this.BillTrack.trackBill=0;\r\n            this.BillTrack.BILL=[];\r\n            this.BillTrack.NonTracking=[];\r\n            this.BillTrack.TOTALADJAMOUNT=null\r\n            this.BillTrack.LEDGERBALANCE=null\r\n            this.selectedAll =false;\r\n            //this.selectedRow = [];\r\n\r\n        }\r\n        this.BillTrack.PARTYTYPE=value\r\n        this.gridPopupSettings.apiEndpoints = `/getAccountPagedListByMapId/Master/${this.BillTrack.PARTYTYPE}`\r\n    }\r\n    OnTrackChange(event){\r\n        if(event.target.checked==true){\r\n           this.BillTrack.trackBill=1;\r\n        }else{\r\n            this.BillTrack.trackBill=0\r\n        }\r\n       \r\n        this.DoBillTrackFromBeg();\r\n        this.autoAdjustValue=false\r\n    }\r\n    initialFormLoad() {\r\n        this.BillTrack = Object.assign({})\r\n        this.BillTrack.SHOWMORE = true;\r\n        this.BillTrack.SHOWZEROBALANCE = true\r\n        this.autoAdjustValue=false;\r\n        this.BillTrack.BILL = []\r\n        this.BillTrack.trackBill=0\r\n        this.masterServicce.getVoucherNo(this.voucherLoadObj).subscribe((res) => {\r\n            this.BillTrack.VCHRNO = res.result.VCHRNO\r\n        })\r\n        this.masterServicce.getCurrentDate().subscribe((res) => {\r\n            this.BillTrack.TRNDATE = moment(res.Date).format(\"YYYY-MM-DD\")\r\n        })\r\n\r\n        this.BillTrack.PARTYTYPE = \"Customer\";\r\n        this.gridPopupSettings = {\r\n            title: \"Party List\",\r\n            apiEndpoints: `/getAccountPagedListByMapId/Master/${this.BillTrack.PARTYTYPE}`,\r\n            defaultFilterIndex: 0,\r\n            columns: [\r\n                {\r\n                    key: 'ACNAME',\r\n                    title: 'Account Name',\r\n                    hidden: false,\r\n                    noSearch: false\r\n                },\r\n               \r\n            ]\r\n        }\r\n        this.gridDuePopupSettings = {\r\n            title: \"Voucher List\",\r\n            apiEndpoints: `/getRVPVPendingAmount/${this.BillTrack.PARTYTYPE}/${this.BillTrack.ACID}`,\r\n            defaultFilterIndex: 0,\r\n            columns: [\r\n                {\r\n                    key: 'VCHRNO',\r\n                    title: 'Voucher No',\r\n                    hidden: false,\r\n                    noSearch: false\r\n                },\r\n                {\r\n                    key: 'AMOUNT',\r\n                    title: 'Amount',\r\n                    hidden: false,\r\n                    noSearch: false\r\n                },\r\n                {\r\n                    key: 'TRACKED_AMOUNT',\r\n                    title: 'Tracked Amount',\r\n                    hidden: false,\r\n                    noSearch: false\r\n                }\r\n\r\n            ]\r\n        }\r\n        this.BillTrack.isBulkTracking=\"1\"\r\n    }\r\n    partyAcid: string = null\r\n    dblClickPartyItem(partyData) {\r\n        this.BillTrack.ACID = partyData.ACID;\r\n        this.BillTrack.ACNAME = partyData.ACNAME;\r\n        // if(this.BillTrack.BILL.length>0 || this.BillTrack.NonTracking.length>0){\r\n            this.BillTrack.BALANCE=null;\r\n            this.BillTrack.LEDGERBALANCE=null;\r\n            this.BillTrack.DUEBALANCE=null;\r\n            this.BillTrack.BILL=[];\r\n            this.BillTrack.NonTracking=[];\r\n            this.BillTrack.TOTALADJAMOUNT=null\r\n        // }\r\n        //this.partyAcid = partyData.ACID;\r\n        console.log(\"checkMode\",partyData)\r\n        \r\n    }\r\n    loadData(){\r\n        this.spinnerService.show(\"Getting BillTack data. Please Wait\")\r\n        this.BillTrack.TOTALADJAMOUNT=null\r\n        this.BillTrack.LEDGERBALANCE=null\r\n        this.autoAdjustValue=false\r\n        if(this.masterServicce.userSetting.EnableLatePost==1){\r\n    this.masterServicce.CheckBillTrackPost(this.BillTrack.ACID).subscribe((data:any)=>{\r\n        if(data.status==\"ok\"){\r\n            this.DueList(this.BillTrack)\r\n            this.NonTracking(this.BillTrack)\r\n        }else{\r\n            this.spinnerService.hide()\r\nthis.alertService.error(\"Some of the Bill have not been posted.Please post the Bill and continue the amendment\")\r\n\r\nreturn;\r\n        }\r\n    })\r\n}else{\r\n this.DueList(this.BillTrack)\r\n        this.NonTracking(this.BillTrack)\r\n}\r\n       \r\n    \r\n        //no need\r\n        // this.billService.getDuePendingAmount(this.BillTrack.PARTYTYPE, this.BillTrack.ACID).subscribe((res) => {\r\n        //     if (res.status == \"ok\") {\r\n        //         this.pendingVoucherList = res.result;\r\n        //         this.selectedAll=true\r\n        //     } else {\r\n        //         this.alertService.error(res.message);\r\n        //     }\r\n        // })\r\n    }\r\n    selectAll(value,i,event) {\r\n        this.BillTrack.LEDGERBALANCE=0\r\n        this.BillTrack.TOTALADJAMOUNT=null\r\n        if(this.selectedAll==true){\r\n           // this.selectedAll=false\r\n           // this.selectedRow = [];\r\n           value.checkbox=false\r\n        }\r\n\r\n        if(event==true){\r\n            value.checkbox=true\r\n            this.autoAdjustValue=false;\r\n            this.BillTrack.BILL.filter(x=>{\r\n                if(x.TAdjustingAmt>=0){\r\n                    x.TAdjustingAmt=null\r\n                }\r\n            });\r\n            this.selectedRow.push(value);\r\n         \r\n        }\r\n        else{\r\n            this.autoAdjustValue=false;\r\n            this.BillTrack.BILL.filter(x=>{\r\n                if(x.TAdjustingAmt>=0){\r\n                    x.TAdjustingAmt=null\r\n                }\r\n            });\r\n            var index=this.selectedRow.findIndex(x=>x.INVOICENO==value.INVOICENO)\r\n         this.selectedRow.splice(index,1)\r\n\r\n        }\r\n            for(let x in this.selectedRow){\r\n            this.BillTrack.LEDGERBALANCE=this.BillTrack.LEDGERBALANCE+ (parseFloat( this.selectedRow[x].NONTRACKAMOUNT))\r\n             }\r\n\r\n             this.BillTrack.ADJUSTINGAMOUNT= this.BillTrack.LEDGERBALANCE\r\n        //this.selectedRow.forEach(x=>this.BillTrack.LEDGERBALANCE=this.BillTrack.LEDGERBALANCE+ (parseInt(x.BILLAMOUNT)))\r\n    }\r\n    selectAllIndex(event){\r\n        this.BillTrack.TOTALADJAMOUNT=null\r\n          this.autoAdjustValue=false\r\n        if (event==false) {\r\n            this.selectedAll = !this.selectedAll;\r\n            this.selectedRow = [];\r\n            this.BillTrack.LEDGERBALANCE=0;\r\n            this.BillTrack.ADJUSTINGAMOUNT=0\r\n            this.BillTrack.BILL.filter(x=>{\r\n                if(x.TAdjustingAmt>=0){\r\n                    x.TAdjustingAmt=null\r\n                }\r\n            });\r\n           } else {\r\n            this.selectedAll=true\r\n            this.BillTrack.LEDGERBALANCE=0;\r\n            this.BillTrack.NonTracking.forEach(x=>{\r\n                this.BillTrack.LEDGERBALANCE=this.BillTrack.LEDGERBALANCE+ (parseFloat( x.NONTRACKAMOUNT))\r\n                x.checkbox=true;\r\n                this.selectedRow.push(x)\r\n            })\r\n            this.BillTrack.BILL.filter(x=>{\r\n                if(x.TAdjustingAmt>=0){\r\n                    x.TAdjustingAmt=null\r\n                }\r\n            });\r\n            // this.selectedRow=this.BillTrack.NonTracking;\r\n             \r\n            //  for(let x in this.selectedRow){\r\n            //     this.BillTrack.LEDGERBALANCE=this.BillTrack.LEDGERBALANCE+ (parseFloat( this.selectedRow[x].NONTRACKAMOUNT))\r\n            //     this.selectedRow[x].checkbox=true;\r\n            //     this.BillTrack.NonTracking[x].checkbox=true\r\n            // }\r\n    \r\n                 this.BillTrack.ADJUSTINGAMOUNT= this.BillTrack.LEDGERBALANCE\r\n           }\r\n    }\r\n    dblClickDueItem(partyData) {\r\n        this.BillTrack.REFVCHRNO = partyData.VCHRNO;\r\n        this.isActive = !this.isActive;\r\n        this.selectVoucherIndex = 0;\r\n        this.BillTrack.ADJUSTINGAMOUNT = this._transactionService.nullToZeroConverter(partyData.AMOUNT) - this._transactionService.nullToZeroConverter(partyData.TRACKED_AMOUNT)\r\n    }\r\n    onKeydownPrevent(event) {\r\n        if (event.key === \"Enter\" || event.key === \"Tab\") { }\r\n        else {\r\n            event.preventDefault();\r\n        }\r\n    }\r\n\r\n   \r\n\r\n\r\n    validateAdjustingAmount() {\r\n        if (this.BillTrack.BILL.length) {\r\n            this.BillTrack.BILL.forEach(x => {\r\n                x.TAdjustingAmt = 0;\r\n            })\r\n        }\r\n        this.BillTrack.TOTALADJAMOUNT = 0\r\n        if (this._transactionService.nullToZeroConverter(this.BillTrack.ADJUSTINGAMOUNT) > this._transactionService.nullToZeroConverter(this.BillTrack.BALANCE)) {\r\n            this.alertService.error(\"Adjustable amount entry greater than Balance\")\r\n            this.BillTrack.ADJUSTINGAMOUNT = 0\r\n            return;\r\n        }\r\n    }\r\n\r\n\r\n    saveBillTrack() {\r\n        if (this.BillTrack.ADJUSTINGAMOUNT == null || this.BillTrack.ADJUSTINGAMOUNT == undefined || this.BillTrack.ADJUSTINGAMOUNT <= 0) {\r\n            this.alertService.error(\"Please Adjust some value to save.\");\r\n            return;\r\n        }\r\n        if (this.BillTrack.TOTALADJAMOUNT == null || this.BillTrack.TOTALADJAMOUNT == undefined || this.BillTrack.TOTALADJAMOUNT <= 0) {\r\n            this.alertService.error(\"Please Adjust some value to save.\");\r\n            return;\r\n        }\r\n        if (this.BillTrack.BILL.length > 0) {\r\n            // if (this.BillTrack.REFVCHRNO == null || this.BillTrack.REFVCHRNO == \"\" || this.BillTrack.REFVCHRNO == undefined) {\r\n            //     this.BillTrack.AdjustmentMode = \"Manual\";\r\n            //     this.BillTrack.BILL.forEach(x => {\r\n            //         x.VCHRNO =this.BillTrack.VCHRNO;\r\n            //         x.REFBILL =x.BILLNO;\r\n            //         x.AMOUNT = this._transactionService.nullToZeroConverter(x.TAdjustingAmt);\r\n            //     })\r\n            // } else {\r\n            //     this.BillTrack.AdjustmentMode = \"Voucher\";\r\n            //     this.BillTrack.BILL.forEach(x => {\r\n            //         x.VCHRNO = x.BILLNO\r\n            //         x.REFBILL = this.BillTrack.REFVCHRNO\r\n            //         x.AMOUNT = this._transactionService.nullToZeroConverter(x.TAdjustingAmt)\r\n            //     })\r\n            // }\r\n\r\n        //    if(this.BillTrack.TOTALADJAMOUNT<this.BillTrack.LEDGERBALANCE ){\r\n        //     this.alertService.error(\"Adjustment Amount and tracking amount is not same \")\r\n        //     return\r\n        //    }\r\n            this.spinnerService.show(\"Saving Data.Please Wait\")\r\n            console.log(\"d\",this.HoldALLBillList)\r\n            this.billService.saveBillTrack(this.HoldALLBillList,this.BillTrack.trackBill,this.autoAdjustValue).subscribe((res) => {\r\n                if (res.status == \"ok\") {\r\n                    this.spinnerService.hide();\r\n                    this.alertService.success(res.result)\r\n                    this.initialFormLoad()\r\n                } else {\r\n                    this.spinnerService.hide();\r\n                    this.alertService.error(res.result)\r\n                }\r\n            }, error => {\r\n                this.spinnerService.hide();\r\n                this.alertService.error(error)\r\n            })\r\n        } else {\r\n            this.alertService.error(\"Please Load at least one Bill Track to save\")\r\n        }\r\n    }\r\n\r\n    autoAdjust() {\r\n        this.autoAdjustValue=true\r\n        this.BillTrack.TOTALADJAMOUNT = 0\r\n        if(this.BillTrack.BILL.filter(x=>x.TAdjustingAmt>0).length>0){\r\n            return;\r\n        }\r\n      \r\n        this.HoldALLBillList = [];\r\n    if(this.BillTrack.NonTracking.length>0){\r\n        this.selectedRow=this.selectedRow.filter(x=>x.checkbox==true)\r\n    for(let x of this.selectedRow){\r\n        console.log(\"d\",this.BillTrack.TOTALADJAMOUNT)\r\n        let adjustmentAmount: number = this._transactionService.nullToZeroConverter(x.NONTRACKAMOUNT);\r\n        for (let a of this.BillTrack.BILL){\r\n                if(adjustmentAmount>0 && a.TAdjustingAmt!=a.DUEAMOUNT){\r\n                    let val:number=a.TAdjustingAmt + adjustmentAmount\r\n                    if (a.DUEAMOUNT < 0) {\r\n                        a.TAdjustingAmt = 0\r\n                    } else if (a.TAdjustingAmt!=undefined && a.TAdjustingAmt<a.DUEAMOUNT ) {\r\n                          //if the row adjusted amount  is less than nontracked amount and due amount is still not fullfiled but can stii add the value  then due amnt then other vouchers data can be added \r\n                       if(val<a.DUEAMOUNT){\r\n                        a.TAdjustingAmt += adjustmentAmount\r\n                        let b: BillTrack = <BillTrack>{}\r\n                        b.AMOUNT = adjustmentAmount\r\n                        b.REFBILL = a.BILLNO;\r\n                        b.VCHRNO = x.INVOICENO;\r\n                        b.ACID = this.BillTrack.ACID;\r\n                        b.TRNDATE= new Date(this.BillTrack.TRNDATE)\r\n                        b.VOUCHERTYPE=x.INVOICENO.substring(0, 2);\r\n                        b.trackBill=this.BillTrack.trackBill\r\n                        this.HoldALLBillList.push(b);\r\n                        adjustmentAmount = this._transactionService.nullToZeroConverter(adjustmentAmount) - this._transactionService.nullToZeroConverter(a.DUEAMOUNT)\r\n                        //this.BillTrack.TOTALADJAMOUNT = this._transactionService.nullToZeroConverter(this.BillTrack.TOTALADJAMOUNT) + this._transactionService.nullToZeroConverter(a.TAdjustingAmt)\r\n                       console.log(\"s4\", a.TAdjustingAmt)\r\n                       }else{\r\n        \r\n                        //if the row adjusted amount  is less than nontracked amount and due amount is still not fullfiled but when addedgives the larger value then due amnt then other vouchers data can be added \r\n                        let Data1:number = this._transactionService.nullToZeroConverter(a.DUEAMOUNT)- this._transactionService.nullToZeroConverter(a.TAdjustingAmt);\r\n                        a.TAdjustingAmt+= Data1\r\n                        let b: BillTrack = <BillTrack>{}\r\n                        b.AMOUNT = Data1\r\n                        b.REFBILL = a.BILLNO;\r\n                        b.VCHRNO = x.INVOICENO;\r\n                        b.ACID = this.BillTrack.ACID;\r\n                        b.TRNDATE= new Date(this.BillTrack.TRNDATE)\r\n                        b.VOUCHERTYPE=x.INVOICENO.substring(0, 2);\r\n                        b.trackBill=this.BillTrack.trackBill\r\n                        this.HoldALLBillList.push(b);\r\n                        //remaining data of nontracking amount is calculated and sent for adjustment \r\n                        adjustmentAmount = this._transactionService.nullToZeroConverter(adjustmentAmount) - this._transactionService.nullToZeroConverter(Data1)\r\n                        //this.BillTrack.TOTALADJAMOUNT = this._transactionService.nullToZeroConverter(this.BillTrack.TOTALADJAMOUNT) + this._transactionService.nullToZeroConverter(a.TAdjustingAmt)\r\n                        console.log(\"s3\", a.TAdjustingAmt)  \r\n                    }\r\n                        \r\n                    }else if (a.DUEAMOUNT > 0 && (this._transactionService.nullToZeroConverter(a.DUEAMOUNT) <= this._transactionService.nullToZeroConverter(adjustmentAmount))) {\r\n                        a.TAdjustingAmt = a.DUEAMOUNT;\r\n                        adjustmentAmount = this._transactionService.nullToZeroConverter(adjustmentAmount) - this._transactionService.nullToZeroConverter(a.DUEAMOUNT)\r\n                        //this.BillTrack.TOTALADJAMOUNT = this._transactionService.nullToZeroConverter(this.BillTrack.TOTALADJAMOUNT) + this._transactionService.nullToZeroConverter(a.TAdjustingAmt)\r\n                        let b: BillTrack = <BillTrack>{}\r\n                        b.AMOUNT = parseFloat(a.TAdjustingAmt.toString())\r\n                        b.REFBILL = a.BILLNO;\r\n                        b.VCHRNO = x.INVOICENO;\r\n                        b.ACID = this.BillTrack.ACID;\r\n                        b.VOUCHERTYPE=x.INVOICENO.substring(0, 2);\r\n                        b.TRNDATE= new Date(this.BillTrack.TRNDATE)\r\n                        b.trackBill=this.BillTrack.trackBill\r\n                        this.HoldALLBillList.push(b);\r\n                        console.log(\"s2\", a.TAdjustingAmt)\r\n                    } else if (a.DUEAMOUNT > 0 && (this._transactionService.nullToZeroConverter(a.DUEAMOUNT) > this._transactionService.nullToZeroConverter(adjustmentAmount))) {\r\n                        a.TAdjustingAmt = adjustmentAmount\r\n                        adjustmentAmount = this._transactionService.nullToZeroConverter(adjustmentAmount) - this._transactionService.nullToZeroConverter(a.DUEAMOUNT)\r\n                       // this.BillTrack.TOTALADJAMOUNT = this._transactionService.nullToZeroConverter(this.BillTrack.TOTALADJAMOUNT) + this._transactionService.nullToZeroConverter(a.TAdjustingAmt)\r\n                        let b: BillTrack = <BillTrack>{}\r\n                        b.AMOUNT = parseFloat(a.TAdjustingAmt.toString())\r\n                        b.REFBILL = a.BILLNO;\r\n                        b.VCHRNO = x.INVOICENO;\r\n                        b.ACID = this.BillTrack.ACID;\r\n                        b.VOUCHERTYPE=x.INVOICENO.substring(0, 2);\r\n                        b.TRNDATE= new Date(this.BillTrack.TRNDATE)\r\n                        b.trackBill=this.BillTrack.trackBill\r\n                        this.HoldALLBillList.push(b);\r\n                        console.log(\"s1\", a.TAdjustingAmt)\r\n                    } \r\n                     \r\n            }\r\n\r\n    }\r\n\r\n}\r\nthis.BillTrack.BILL.forEach(x => {\r\n    this.BillTrack.TOTALADJAMOUNT = this._transactionService.nullToZeroConverter(this.BillTrack.TOTALADJAMOUNT) + this._transactionService.nullToZeroConverter(x.TAdjustingAmt)\r\n})\r\n\r\n        // if (this.BillTrack.BILL.length > 0) {\r\n        //     if (this._transactionService.nullToZeroConverter(this.BillTrack.ADJUSTINGAMOUNT) > 0) {\r\n        //         let adjustmentAmount: number = this._transactionService.nullToZeroConverter(this.BillTrack.ADJUSTINGAMOUNT);\r\n        //         for (let x of this.BillTrack.BILL) {\r\n        //             if (adjustmentAmount > 0) {\r\n        //                 if (x.DUEAMOUNT < 0) {\r\n        //                     x.TAdjustingAmt = 0\r\n        //                 } else if (x.DUEAMOUNT > 0 && (this._transactionService.nullToZeroConverter(x.DUEAMOUNT) <= this._transactionService.nullToZeroConverter(adjustmentAmount))) {\r\n        //                     x.TAdjustingAmt = x.DUEAMOUNT;\r\n        //                     adjustmentAmount = this._transactionService.nullToZeroConverter(adjustmentAmount) - this._transactionService.nullToZeroConverter(x.DUEAMOUNT)\r\n        //                     this.BillTrack.TOTALADJAMOUNT = this._transactionService.nullToZeroConverter(this.BillTrack.TOTALADJAMOUNT) + this._transactionService.nullToZeroConverter(x.TAdjustingAmt)\r\n\r\n        //                 } else if (x.DUEAMOUNT > 0 && (this._transactionService.nullToZeroConverter(x.DUEAMOUNT) > this._transactionService.nullToZeroConverter(adjustmentAmount))) {\r\n        //                     x.TAdjustingAmt = adjustmentAmount\r\n        //                     adjustmentAmount = this._transactionService.nullToZeroConverter(adjustmentAmount) - this._transactionService.nullToZeroConverter(x.DUEAMOUNT)\r\n        //                     this.BillTrack.TOTALADJAMOUNT = this._transactionService.nullToZeroConverter(this.BillTrack.TOTALADJAMOUNT) + this._transactionService.nullToZeroConverter(x.TAdjustingAmt)\r\n\r\n        //                 } else {\r\n        //                     x.TAdjustingAmt = 0\r\n        //                 }\r\n        //             }\r\n\r\n        //         }\r\n        //     } else {\r\n        //         this.alertService.error(\"Please Enter Adjusting Amount\")\r\n        //         return;\r\n        //     }\r\n        // } else {\r\n        //     this.alertService.error(\"Please Load BillTrack Data to save\")\r\n\r\n        // }\r\n\r\n        if (this.BillTrack.REFVCHRNO == null || this.BillTrack.REFVCHRNO == \"\" || this.BillTrack.REFVCHRNO == undefined) {\r\n            this.prepareBillTrackVoucherWise(this.BillTrack,this.BillTrack.NonTracking);\r\n        }\r\n}\r\n\r\n    }\r\n\r\n    onADjustmentChange(index) {\r\n        if (this._transactionService.nullToZeroConverter(this.BillTrack.BILL[index].TAdjustingAmt) > this.BillTrack.BILL[index].DUEAMOUNT) {\r\n            this.alertService.error(\"Adjustment Amount greater than due amount detected\")\r\n            this.BillTrack.BILL[index].TAdjustingAmt = 0;\r\n            return;\r\n        }\r\n        this.BillTrack.TOTALADJAMOUNT = 0;\r\n        this.BillTrack.BILL.forEach(x => {\r\n            this.BillTrack.TOTALADJAMOUNT = this._transactionService.nullToZeroConverter(this.BillTrack.TOTALADJAMOUNT) + this._transactionService.nullToZeroConverter(x.TAdjustingAmt)\r\n        })\r\n        let totalAdjustingAmount: number = 0\r\n        if (this._transactionService.nullToZeroConverter(this.BillTrack.ADJUSTINGAMOUNT) == 0) {\r\n            totalAdjustingAmount = this._transactionService.nullToZeroConverter(this.BillTrack.BALANCE)\r\n        } else {\r\n            totalAdjustingAmount = this._transactionService.nullToZeroConverter(this.BillTrack.ADJUSTINGAMOUNT)\r\n        }\r\n        if (this._transactionService.nullToZeroConverter(this.BillTrack.TOTALADJAMOUNT) > this._transactionService.nullToZeroConverter(totalAdjustingAmount)) {\r\n            this.alertService.error(\"Adjusted amount is greater than Tracking amount\")\r\n            this.BillTrack.BILL[index].TAdjustingAmt = 0;\r\n            this.BillTrack.TOTALADJAMOUNT = 0;\r\n            this.BillTrack.BILL.forEach(x => {\r\n                this.BillTrack.TOTALADJAMOUNT = this._transactionService.nullToZeroConverter(this.BillTrack.TOTALADJAMOUNT) + this._transactionService.nullToZeroConverter(x.TAdjustingAmt)\r\n            })\r\n            return;\r\n        }\r\n        if (index + 1 < this.BillTrack.BILL.length) {\r\n            document.getElementById(\"adj\" + (index + 1)).focus()\r\n        }\r\n\r\n        this.RecalculateManualChangeInTAdjustment()//biju dai code for individual one to many calc\r\n    }\r\n\r\n\r\n    RecalculateManualChangeInTAdjustment() {\r\n        if(this.selectedRow.filter(x=>x.checkbox==true).length>1){\r\n            this.BillTrack.BILL.filter(x=>{\r\n                if(x.TAdjustingAmt>=0){\r\n                    x.TAdjustingAmt=null\r\n                }\r\n            });\r\n            this.alertService.error(\"Manual Adjustment features is available only for single non track voucher.\");\r\n              this.autoAdjustValue=true\r\n        }\r\n        let remainingAmount = 0;\r\n        let actualTAdjustingAmount = 0;\r\n        this.HoldALLBillList=[];\r\n        for (let i of this.selectedRow) {\r\n            for (let j of this.BillTrack.BILL) {\r\n\r\n                if (j.TAdjustingAmt > 0) {\r\n                    actualTAdjustingAmount = j.TAdjustingAmt;\r\n                    const minValue = Math.min(actualTAdjustingAmount, i.NONTRACKAMOUNT);\r\n                    remainingAmount = i.NONTRACKAMOUNT - minValue;\r\n\r\n                    if (minValue >= j.TAdjustingAmt) {\r\n                        let b: BillTrack = <BillTrack>{};\r\n                        b.AMOUNT = minValue;\r\n                        b.REFBILL = j.BILLNO;\r\n                        b.VCHRNO = i.INVOICENO;\r\n                        b.ACID = this.BillTrack.ACID;\r\n                        b.TRNDATE = new Date(this.BillTrack.TRNDATE);\r\n                        b.VOUCHERTYPE = i.INVOICENO.substring(0, 2);\r\n                        this.HoldALLBillList.push(b);\r\n                    }\r\n                    // console.log(\"remaining amount\", remainingAmount);\r\n                    // if (remainingAmount > 0) {\r\n                    //     // Check for the next bill and distribute remaining amount if necessary\r\n                    //     let nextBillIndex = this.BillTrack.BILL.indexOf(j) + 1;\r\n                    //     while (nextBillIndex < this.BillTrack.BILL.length && this.BillTrack.BILL[nextBillIndex].TAdjustingAmt <= 0) {\r\n                    //         nextBillIndex++;\r\n                    //     }\r\n                    //     if(this.BillTrack.BILL[nextBillIndex].TAdjustingAmt > 0){\r\n                    //     if (nextBillIndex < this.BillTrack.BILL.length) {\r\n                    //         const nextBill = this.BillTrack.BILL[nextBillIndex];\r\n                    //         if (remainingAmount >= nextBill.TAdjustingAmt) {\r\n                    //             // Deduct remaining amount from the next bill\r\n                    //             remainingAmount -= nextBill.TAdjustingAmt;\r\n                    //             let b: BillTrack = <BillTrack>{}\r\n                    //             b.AMOUNT = nextBill.TAdjustingAmt;\r\n                    //             b.REFBILL = nextBill.BILLNO;\r\n                    //             b.VCHRNO = i.INVOICENO;\r\n                    //             b.ACID = this.BillTrack.ACID;\r\n                    //             b.TRNDATE = new Date(this.BillTrack.TRNDATE);\r\n                    //             b.VOUCHERTYPE = i.INVOICENO.substring(0, 2);\r\n                    //             this.HoldALLBillList.push(b);\r\n                    //             break;\r\n                    //         } else {\r\n                    //             // Distribute remaining amount among next bill and update current bill's adjusting amount\r\n                    //             let b: BillTrack = <BillTrack>{}\r\n                    //             b.AMOUNT = remainingAmount;\r\n                    //             b.REFBILL = nextBill.BILLNO;\r\n                    //             b.VCHRNO = i.INVOICENO;\r\n                    //             b.ACID = this.BillTrack.ACID;\r\n                    //             b.TRNDATE = new Date(this.BillTrack.TRNDATE);\r\n                    //             b.VOUCHERTYPE = i.INVOICENO.substring(0, 2);\r\n                    //             this.HoldALLBillList.push(b);\r\n                    //             // Update current bill's adjusting amount\r\n                    //             this.BillTrack.BILL[nextBillIndex].TAdjustingAmt -= remainingAmount;\r\n                    //             remainingAmount = 0; // No remaining amount after distribution\r\n                    //             break;\r\n                    //         }\r\n                    //     }\r\n                    // }\r\n                    // }\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n    IndividualAdjustment(index) {\r\n        // let totalAdjustedAmount: number = 0;\r\n        // for (let i in this.BillTrack.BILL) {\r\n        //     totalAdjustedAmount = totalAdjustedAmount + this._transactionService.nullToZeroConverter(this.BillTrack.BILL[i].TAdjustingAmt);\r\n        // }\r\n        // if (this._transactionService.nullToZeroConverter(this.BillTrack.ADJUSTINGAMOUNT) > 0) {\r\n        //     let adjustableAmount = this._transactionService.nullToZeroConverter(this.BillTrack.ADJUSTINGAMOUNT) - this._transactionService.nullToZeroConverter(totalAdjustedAmount);\r\n        //     if (adjustableAmount <= this._transactionService.nullToZeroConverter(this.BillTrack.BILL[index].DUEAMOUNT) && adjustableAmount > 0) {\r\n        //         this.BillTrack.BILL[index].TAdjustingAmt = adjustableAmount;\r\n        //     } else if (adjustableAmount > 0 && adjustableAmount > this.BillTrack.BILL[index].DUEAMOUNT) {\r\n        //         this.BillTrack.BILL[index].TAdjustingAmt = this.BillTrack.BILL[index].DUEAMOUNT;\r\n\r\n        //     }\r\n\r\n        //     this.BillTrack.TOTALADJAMOUNT = 0\r\n        //     this.BillTrack.BILL.forEach(x => {\r\n        //         this.BillTrack.TOTALADJAMOUNT = (this.BillTrack.TOTALADJAMOUNT) + this._transactionService.nullToZeroConverter(x.TAdjustingAmt)\r\n        //     })\r\n        //     if (index < this.BillTrack.BILL.length) {\r\n        //         if (document.getElementById(\"adj\" + (index + 1)) != null) {\r\n        //             document.getElementById(\"adj\" + (index + 1)).focus()\r\n        //         }\r\n        //     }\r\n        // }\r\n        this.BillTrack.TOTALADJAMOUNT = 0;\r\n        this.BillTrack.BILL.forEach(x => {\r\n            this.BillTrack.TOTALADJAMOUNT = this._transactionService.nullToZeroConverter(this.BillTrack.TOTALADJAMOUNT) + this._transactionService.nullToZeroConverter(x.TAdjustingAmt)\r\n        })\r\n        this.RecalculateManualChangeInTAdjustment()\r\n    }\r\n\r\n    prepareBillTrackVoucherWise(BillTrackList: BillTracking, voucherlist: any) {\r\n        for (let v of voucherlist) {\r\n            v.PENDINGAMOUNT = this._transactionService.nullToZeroConverter(v.AMOUNT) - this._transactionService.nullToZeroConverter(v.TRACKED_AMOUNT);\r\n        }\r\n        for (let b of BillTrackList.BILL) {\r\n            b.TempAdjustingAmount = b.TAdjustingAmt;\r\n        }\r\n\r\n        for (let bill of BillTrackList.BILL) {\r\n            bill.TRACK = [];\r\n            if (bill.TempAdjustingAmount > 0) {\r\n                for (let voucher of voucherlist) {\r\n                    if (bill.TempAdjustingAmount < voucher.PENDINGAMOUNT) {\r\n                        bill.TRACK.push({\r\n                            TRACKBY: voucher.VCHRNO,\r\n                            TRACKAMOUNT: bill.TempAdjustingAmount\r\n                        });\r\n                        voucher.PENDINGAMOUNT = this._transactionService.nullToZeroConverter(voucher.PENDINGAMOUNT) -\r\n                            this._transactionService.nullToZeroConverter(bill.TAdjustingAmt);\r\n                        bill.TempAdjustingAmount = 0;\r\n                        break;\r\n                    }\r\n\r\n                    if ((bill.TempAdjustingAmount == voucher.PENDINGAMOUNT) && voucher.PENDINGAMOUNT > 0) {\r\n                        bill.TRACK.push({\r\n                            TRACKBY: voucher.VCHRNO,\r\n                            TRACKAMOUNT: bill.TempAdjustingAmount\r\n                        });\r\n                        voucher.PENDINGAMOUNT = 0;\r\n                        bill.TempAdjustingAmount = 0;\r\n                        break;\r\n                    }\r\n\r\n                    if (bill.TempAdjustingAmount > voucher.PENDINGAMOUNT) {\r\n                        bill.TRACK.push({\r\n                            TRACKBY: voucher.VCHRNO,\r\n                            TRACKAMOUNT: voucher.PENDINGAMOUNT\r\n                        });\r\n                        bill.TempAdjustingAmount = bill.TempAdjustingAmount - voucher.PENDINGAMOUNT;\r\n                        voucher.PENDINGAMOUNT = 0;\r\n                        continue;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    @HostListener(\"document : keydown\", [\"$event\"])\r\n    updown($event: KeyboardEvent) {\r\n        if ($event.code == \"F1\") {\r\n            $event.preventDefault();\r\n            this.BillTrack.SHOWMORE = !this.BillTrack.SHOWMORE;\r\n        } else if ($event.code == \"ArrowDown\") {\r\n            $event.preventDefault();\r\n            if (this.selectVoucherIndex == this.pendingVoucherList.length) {\r\n                this.selectVoucherIndex = this.pendingVoucherList.length;\r\n            } else {\r\n                this.selectVoucherIndex++;\r\n            }\r\n\r\n        } else if ($event.code == \"ArrowUp\") {\r\n            $event.preventDefault();\r\n            if (this.selectVoucherIndex == 0) {\r\n                this.selectVoucherIndex = 0\r\n            } else {\r\n                this.selectVoucherIndex--;\r\n            }\r\n\r\n        }\r\n    }\r\n    DeleteExeedTrack(){}\r\n    DoBillTrackFromBeg(){\r\n        if(!this.BillTrack.ACID) {this.alertService.warning(\"Please select the party name first!\");return;}\r\n        // this._transactionService.TrnMainObj.Mode = 'VIEW'\r\n\r\n        if(this.masterServicce.userSetting.EnableLatePost==1){\r\n            this.masterServicce.CheckBillTrackPost(this.BillTrack.ACID).subscribe((data:any)=>{\r\n                if(data.status==\"ok\"){\r\n                    this.DueList(this.BillTrack)\r\n                    this.NonTracking(this.BillTrack)\r\n                }else{\r\n                    this.spinnerService.hide()\r\n        this.alertService.error(\"Some of the Bill have not been posted.Please post the Bill and continue the amendment\")\r\n        \r\n        return;\r\n                }\r\n            })\r\n        }else{\r\n         this.DueList(this.BillTrack)\r\n                this.NonTracking(this.BillTrack)\r\n        }\r\n    }\r\n    DueList(partyData){\r\n        this.masterServicce.DueVoucherAmendment(partyData.ACID,\r\n            this.BillTrack.TRNDATE,\r\n            this.BillTrack.PARTYTYPE,\r\n            this.BillTrack.SHOWZEROBALANCE,\r\n            this.BillTrack.trackBill,\r\n\r\n        ).subscribe((res) => {\r\n            if (res.status == \"ok\") {\r\n                this.spinnerService.hide()\r\n                //this.BillTrack.LEDGERBALANCE = res.result.balance[0].BALANCE\r\n                this.BillTrack.DUEBALANCE = res.result.dueBalance[0].DUEBALANCE\r\n                this.BillTrack.BALANCE = Math.abs(Math.round(this._transactionService.nullToZeroConverter(res.result.dueBalance[0].DUEBALANCE) - this._transactionService.nullToZeroConverter(res.result.balance[0].BALANCE)))\r\n                this.BillTrack.BILL = res.result.bill\r\n               console.log(\"ww\",this.BillTrack.BILL)\r\n            } else {\r\n                this.spinnerService.hide()\r\n                this.alertService.error(res.result)\r\n            }\r\n        }, error => {\r\n            this.spinnerService.hide()\r\n            this.alertService.error(error)\r\n        })\r\n    }\r\n    NonTracking(partyData){\r\n        this.masterServicce.DueVoucherAmendment_Nontracking(partyData.ACID,\r\n            this.BillTrack.TRNDATE,\r\n            this.BillTrack.PARTYTYPE,\r\n            this.BillTrack.SHOWZEROBALANCE,\r\n            this.BillTrack.trackBill,\r\n\r\n        ).subscribe((res) => {\r\n            if (res.status == \"ok\") {\r\n                this.spinnerService.hide()\r\n                // this.BillTrack.LEDGERBALANCE = res.result.balance[0].BALANCE\r\n                // this.BillTrack.DUEBALANCE = res.result.dueBalance[0].DUEBALANCE\r\n                // this.BillTrack.BALANCE = Math.abs(Math.round(this._transactionService.nullToZeroConverter(res.result.dueBalance[0].DUEBALANCE) - this._transactionService.nullToZeroConverter(res.result.balance[0].BALANCE)))\r\n                this.BillTrack.NonTracking = res.result\r\n                if(this.BillTrack.NonTracking.length>0){\r\n                    this.selectedAll=true\r\n                    //after loading all checkbox will be checked for bulk \r\n                    this.selectAllIndex(true)\r\n                }else{\r\n                    this.BillTrack.LEDGERBALANCE=0;\r\n                }\r\n               \r\n            } else {\r\n                this.spinnerService.hide()\r\n                this.alertService.error(res.result)\r\n            }\r\n        }, error => {\r\n            this.spinnerService.hide()\r\n            this.alertService.error(error)\r\n        })\r\n    }\r\n    BullTracking(value){\r\n       \r\n    }\r\n}\r\n\r\n\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/pages/AccountVoucher/components/bill-tracking-amendment/bill-tracking-amendment.component.ts","import { Component, ViewChild, OnInit, AfterContentChecked, ChangeDetectorRef, ElementRef, HostListener } from \"@angular/core\";\r\nimport { MasterRepo } from \"../../../../common/repositories\";\r\nimport { TransactionService } from \"../../../../common/Transaction Components/transaction.service\";\r\nimport { AlertService } from \"../../../../common/services/alert/alert.service\";\r\nimport { GenericPopUpComponent, GenericPopUpSettings } from \"../../../../common/popupLists/generic-grid/generic-popup-grid.component\";\r\nimport { VoucherTypeEnum, TAcList, Trntran } from \"../../../../common/interfaces\";\r\nimport { iCreditList } from \"./capital-voucher.service\";\r\nimport { AuthService } from \"../../../../common/services/permission\";\r\nimport { TwoDigitNumber } from \"../../../../theme/pipes\";\r\nimport * as moment from 'moment';\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { SpinnerService } from \"../../../../common/services/spinner/spinner.service\";\r\n\r\n@Component({\r\n  selector: 'capital-voucher',\r\n  template: require('./capital-voucher.component.html'),\r\n  styles: [require('../../../Style.css')],\r\n  providers:[TwoDigitNumber]\r\n\r\n})\r\nexport class CapitalVoucherComponent implements OnInit ,AfterContentChecked  {\r\n  selectedIndex: number = 0;\r\n  trntranTotal: number = 0;\r\n  AcObj: TAcList = <TAcList>{}\r\n\r\n  GROSSAMOUNT: number = 0;\r\n  discount: number = 0;\r\n  taxableAmount: number = 0;\r\n  nonTaxableAmount: number = 0;\r\n  VATAMOUNT: number = 0;\r\n  NETAMOUNT: number = 0;\r\n  rounding: number = 0;\r\n  nexIndex: number = 0;\r\n  accnamefocus: boolean;\r\n  totalamount: number = 0;\r\n  chalanSeries:any;\r\n  EntryDate: any = <any>{};\r\n  VoucherEntry:any = <any>{};\r\n  differenceAmount:number = 0;\r\n  diffAmountDrCrType:string;\r\n\r\n  applyPipeinDiscount:boolean=true;\r\n  applyPipeinVatAmount:boolean=true;\r\n  applyPipeinTaxableAmount:boolean=true;\r\n  applyPipeinNonTaxableAmount:boolean=true;\r\n\r\n  applyPipeinRoundingAmount:boolean =true;\r\n\r\n\r\n  @ViewChild(\"adEntryDate\") _adEntryDate:ElementRef;\r\n  @ViewChild(\"bsEntryDate\") _bsEntryDate:ElementRef;\r\n  @ViewChild(\"adTrnDate\") _adTrnDate:ElementRef;\r\n  @ViewChild(\"bsTrnDate\") _bsTrnDate:ElementRef;\r\n\r\n\r\n\r\n  private specialKeys: Array<string> = [\"Tab\"];\r\n\r\n\r\n  @ViewChild(\"genericGridCostCenterList\")\r\n  genericGridCostCenterList: GenericPopUpComponent;\r\n  gridCostCenterListPopupSettings: GenericPopUpSettings = new GenericPopUpSettings();\r\n  @ViewChild(\"genericGridCostCenterGroupList\")\r\n  genericGridCostCenterGroupList: GenericPopUpComponent;\r\n  gridCostCenterGroupListPopupSettings: GenericPopUpSettings = new GenericPopUpSettings();\r\n\r\n  @ViewChild(\"genericGridACList\") genericGridACList: GenericPopUpComponent;\r\n  gridACListPopupSettings: GenericPopUpSettings = new GenericPopUpSettings();\r\n\r\n  @ViewChild(\"genericGridSupplier\") genericGridSupplier: GenericPopUpComponent;\r\n  gridPopupSettingsForSupplier: GenericPopUpSettings = new GenericPopUpSettings();\r\n  trnNepaliDate: any;\r\n  trnEnglishDate: any;\r\n  userSetting:any;\r\n  costlists:any[] = [];\r\n  userProfile:any;\r\n  date1:any;\r\n  errorOccurfromDate:boolean  = false;\r\n  dateChangeFormate:string;\r\n  date2:any;\r\n  @ViewChild(\"gridSubLedgerSettingList\")\r\n  gridSubLedgerSettingList:GenericPopUpComponent;\r\n  gridSubLedgerSetting: GenericPopUpSettings = new GenericPopUpSettings();\r\n  bsDate: any;\r\n\r\n\r\n  constructor(public masterService: MasterRepo,\r\n    private _transactionService: TransactionService,\r\n    public alertService: AlertService,\r\n    private _authService: AuthService,\r\n    private twoDigitPipe:TwoDigitNumber,\r\n    private changeDetection: ChangeDetectorRef,\r\n    private el: ElementRef,\r\n    private _activatedRoute: ActivatedRoute,\r\n    private _loadingSerive: SpinnerService,\r\n  ) {\r\n  //  this.masterService.ShowMore = false;\r\n\r\n    ////console.log(\"showMore\",this.masterService.ShowMore);\r\n    this._transactionService.initialFormLoad(64)\r\n    this._transactionService.creditList =  [];\r\n    this.addCreditListnewRow();\r\n    this._transactionService.TrnMainObj.DCAMNT = 0.00;\r\n    this._transactionService.TrnMainObj.NETAMNT = 0.00;\r\n    this._transactionService.TrnMainObj.TAXABLE = 0.00;\r\n    this._transactionService.TrnMainObj.NONTAXABLE = 0.00;\r\n    this._transactionService.TrnMainObj.VATAMNT = 0.00;\r\n    this._transactionService.TrnMainObj.TOTAMNT = 0.00;\r\n    this._transactionService.TrnMainObj.ROUNDOFF = 0.00;\r\n    this.userSetting = _authService.getSetting()\r\n    this.getSupplierList();\r\n    this.getChalanSeries();\r\n    this.getCostCenterList();\r\n    this.userProfile = this._authService.getUserProfile();\r\n    var y = this.masterService.PhiscalObj.BeginDate\r\n    y = y.substring(0, 10);\r\n    this.date2 = y;\r\n    if (this.userProfile.CompanyInfo.ActualFY == this.masterService.PhiscalObj.PhiscalID) {\r\n      this.date1 = new Date();\r\n    }\r\n    else {\r\n      this.date1 = this.masterService.PhiscalObj.EndDate\r\n    }\r\n    this._transactionService.DrillMode = \"New\";\r\n\r\n    ////console.log(\"dcamount\",this._transactionService.TrnMainObj.DCAMNT);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this._activatedRoute.queryParams.subscribe(params => {\r\n      if (params['mode']==\"DRILL\") {\r\n        let VCHR = params['voucher']\r\n        let vparams = []\r\n        vparams = VCHR.split('-')\r\n        this._loadingSerive.show(\"Loading Invoice\")\r\n        this._transactionService.CapitalBudgetData(VCHR, vparams[1], vparams[2]);\r\n\r\n        // this.masterService.LoadTransaction(VCHR, vparams[1], vparams[2]).subscribe((res) => {\r\n        //   if (res.status == \"ok\") {\r\n        //     this._loadingSerive.hide()\r\n        //     this._transactionService.TrnMainObj = res.result;\r\n        //     //console.log(\"Vat_Purchase\", this.userSetting.Vat_Purchase)\r\n        //     let abc = this._transactionService.TrnMainObj.TrntranList.findIndex(x => x.A_ACID == this.userSetting.Vat_Purchase);\r\n        //     //console.log(\"abc\", abc)\r\n        //     if (abc >= 0) {\r\n        //       this._transactionService.TrnMainObj.TrntranList.splice(abc, 1)\r\n        //     }\r\n        //     this._transactionService.TrnMainObj.VoucherType = 64;\r\n        //     this._transactionService.pageHeading = \"Capital Voucher\";\r\n        //     this._transactionService.TrnMainObj.VoucherPrefix = \"CP\";\r\n        //     this._transactionService.TrnMainObj.Mode = \"VIEW\";\r\n        //   }\r\n        // }, err => {\r\n        //   this._loadingSerive.hide()\r\n        //   this.alertService.error(err)\r\n        // })\r\n            this._transactionService.TrnMainObj.VoucherType = 64;\r\n            this._transactionService.pageHeading = \"Capitalize Purchase Voucher\";\r\n            this._transactionService.TrnMainObj.VoucherPrefix = \"CP\";\r\n            setTimeout(() => {\r\n              console.log(\"mode of Voucher\", this._transactionService.TrnMainObj);\r\n              // this._transactionService.TrnMainObj.Mode = \"VIEW\";\r\n            },1000)\r\n            \r\n        this._transactionService.viewDate.subscribe(\r\n          (data) =>{\r\n            this.initDate();\r\n          }\r\n        )\r\n      }\r\n      else if (params['mode']==\"fromLatepost\"){\r\n        // alert(\"params['mode']==Capital voucher\")\r\n        this._loadingSerive.show(\"Loading Invoice\")\r\n        this._transactionService.CapitalBudgetData(params.voucher, params.DIVISION, params.PHISCALID);\r\n      \r\n      }\r\n      else{\r\n        this._transactionService.TrnMainObj.Mode = 'NEW';\r\n        this.initDate();\r\n    \r\n        this._transactionService.viewDate.subscribe(\r\n          (data) =>{\r\n            this.initDate();\r\n          }\r\n        )\r\n    \r\n    \r\n        this.alertService.emitShowHideSubject.subscribe(\r\n          (res) =>{\r\n            this.mangeFocusonDatefield();\r\n          }\r\n        )\r\n        this.masterService.ShowMore = false;\r\n      }\r\n    });\r\n    this._transactionService.TrnMainObj.CNDN_MODE = 0;\r\n\r\n  }\r\n\r\n  ngAfterContentChecked(): void {\r\n    this.differenceAmount = this._transactionService.diffAmountItemForAccount;\r\n    this.diffAmountDrCrType = this._transactionService.diffAmountDrCrType;\r\n    this.changeDetection.detectChanges();\r\n\r\n}\r\n\r\ninitDate() {\r\n\r\n  if(this._transactionService.TrnMainObj.Mode == 'NEW'){\r\n    // this._transactionService.TrnMainObj.TRNDATE = this.VoucherEntry.DATE1 =   new Date().toJSON().split('T')[0];\r\n    // this._transactionService.TrnMainObj.TRN_DATE = this.EntryDate.DATE3 = new Date().toJSON().split('T')[0];\r\n\r\n    // this.changeEntryDate(this.VoucherEntry.DATE1, \"AD\");\r\n    // this._transactionService.TrnMainObj.TRN_DATE = this.VoucherEntry.DATE = new Date().toJSON().split('T')[0];\r\n    // this.changeEndDate(this.VoucherEntry.DATE, \"AD\");\r\n    // this._transactionService.TrnMainObj.TRNDATE = this.EntryDate.DATE3 = new Date().toJSON().split('T')[0];\r\n    // this.changeEntryDate1(this.EntryDate.DATE3, \"AD\");\r\n    // this.EntryDate.DATE2 = new Date().toJSON().split('T')[0];\r\n    // this.changeEndDate1(this.EntryDate.DATE2, \"AD\");\r\n    // this._transactionService.TrnMainObj.TRNDATE = this.EntryDate.PhiscalADDate = this.masterService.PhiscalObj.BeginDate.split('T')[0];\r\n    // this.changePhiscalDate(this.EntryDate.PhiscalADDate, \"AD\");\r\n\r\n    if (this.userProfile.CompanyInfo.ActualFY == this._transactionService.PhiscalObj.PhiscalID) {\r\n      this._transactionService.TrnMainObj.TRNDATE = this.VoucherEntry.DATE1 = new Date().toJSON().split('T')[0];\r\n      this._transactionService.TrnMainObj.TRN_DATE = this.EntryDate.DATE3 = new Date().toJSON().split('T')[0];\r\n\r\n      this.changeEntryDate(this.VoucherEntry.DATE1, \"AD\");\r\n      this._transactionService.TrnMainObj.TRNDATE = this.EntryDate.DATE3 = new Date().toJSON().split('T')[0];\r\n      this.changeEntryDate1(this.EntryDate.DATE3, \"AD\");\r\n      // this._transactionService.TrnMainObj.TRN_DATE = this.VoucherEntry.DATE = new Date().toJSON().split('T')[0];\r\n      // this.changeEndDate(this.VoucherEntry.DATE, \"AD\");\r\n      // this.EntryDate.DATE2 = new Date().toJSON().split('T')[0];\r\n      // this.changeEndDate1(this.EntryDate.DATE2, \"AD\");\r\n    }\r\n    else {\r\n      var x = this.masterService.PhiscalObj.EndDate\r\n      x = x.substring(0, 10);\r\n      this._transactionService.TrnMainObj.TRNDATE = this.VoucherEntry.DATE1 = x;\r\n      this._transactionService.TrnMainObj.TRN_DATE = x;\r\n      this.changeEntryDate(this.VoucherEntry.DATE1, \"AD\");\r\n      this._transactionService.TrnMainObj.TRNDATE = this.EntryDate.DATE3 = x;\r\n      this.changeEntryDate1(this.EntryDate.DATE3, \"AD\");\r\n      // this._transactionService.TrnMainObj.TRN_DATE = this.VoucherEntry.DATE = x;\r\n      // this.changeEndDate(this.VoucherEntry.DATE, \"AD\");\r\n      // this.EntryDate.DATE2 = x;\r\n      // this.changeEndDate1(this.EntryDate.DATE2, \"AD\");\r\n      ////console.log(\"ChecKEntrYDAte\",this._transactionService.TrnMainObj.TRN_DATE)\r\n    }\r\n    this.EntryDate.PhiscalADDate = this.masterService.PhiscalObj.BeginDate.split('T')[0];\r\n    this.changePhiscalDate(this.EntryDate.PhiscalADDate, \"AD\");\r\n\r\n  }else{\r\n    let trnDateForView = this._transactionService.TrnMainObj.TRNDATE;\r\n    let trn_DateForView = this._transactionService.TrnMainObj.TRN_DATE;\r\n\r\n    this.EntryDate.DATE3 = moment(trnDateForView).format(\"YYYY-MM-DD\");\r\n\r\n    this.VoucherEntry.DATE1 =  moment(trn_DateForView).format(\"YYYY-MM-DD\");\r\n\r\n    this.changeEntryDate(this.VoucherEntry.DATE1, \"AD\");\r\n    // this._transactionService.TrnMainObj.TRN_DATE =\r\n    //  this.VoucherEntry.DATE = new Date().toJSON().split('T')[0];\r\n    // this.changeEndDate(this.VoucherEntry.DATE, \"AD\");\r\n\r\n    ////console.log(\"viewDATE3\",this.EntryDate.DATE3);\r\n    this.changeEntryDate1(this.EntryDate.DATE3, \"AD\");\r\n    // this.EntryDate.DATE2 = new Date().toJSON().split('T')[0];\r\n    // this.changeEndDate1(this.EntryDate.DATE2, \"AD\");\r\n    // this._transactionService.TrnMainObj.TRNDATE =\r\n    this.EntryDate.PhiscalADDate = this.masterService.PhiscalObj.BeginDate.split('T')[0];\r\n    this.changePhiscalDate(this.EntryDate.PhiscalADDate, \"AD\");\r\n\r\n  }\r\n\r\n\r\n}\r\n\r\n\r\nchangeEntryDate(value, format: string) {\r\n  this.dateChangeFormate = `DATE1${format}`;\r\n  // this.ValidatePhiscalYear(value,\"TRN_DATE\",\"DATE1\");\r\n\r\n  ////console.log(\"changebasdate\", value, this.VoucherEntry.DATE1);\r\n\r\n  var adbs = require(\"ad-bs-converter\");\r\n  if (format == \"AD\") {\r\n    this._transactionService.TrnMainObj.TRN_DATE = value;\r\n    let yearValue = moment(value).year();\r\n    if (yearValue.toString().length == 4) {\r\n      var adDate = (value.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n      var bsDate = adbs.ad2bs(adDate);\r\n      bsDate.en.month = bsDate.en.month <= 9 ? \"0\" + (bsDate.en.month) : bsDate.en.month\r\n      this._transactionService.TrnMainObj.BS_DATE = this.VoucherEntry.BSDATE1 =\r\n        this.masterService.toADDate(value);\r\n    }\r\n\r\n  }\r\n  else if (format == \"BS\") {\r\n    this._transactionService.TrnMainObj.BS_DATE = value;\r\n    var xyz=value.split(\"-\");\r\n    let DateValue:any = xyz[2]+\"-\"+xyz[1]+\"-\"+xyz[0];\r\n    var datearr = value.split('/');\r\n    const bsDate = datearr[2]+\"/\"+datearr[1]+\"/\"+datearr[0];\r\n    // var bsDate = (DateValue.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n    var adDate = adbs.bs2ad(bsDate);\r\n\r\n    this._transactionService.TrnMainObj.TRN_DATE =this.VoucherEntry.DATE1 = this.masterService.toBSDate(value);\r\n\r\n    this.ValidateBSDATE(this.VoucherEntry.DATE1, \"DATE1\", \"TRN_DATE\")\r\n\r\n  }\r\n\r\n}\r\n\r\n  changeEntryDate1(value, format: string) {\r\n\r\n    this.dateChangeFormate = `DATE3${format}`;\r\n    ////console.log(\"dateformat\", value);\r\n\r\n\r\n    var adbs = require(\"ad-bs-converter\");\r\n    if (format == \"AD\") {\r\n      this._transactionService.TrnMainObj.TRNDATE = value;\r\n      let yearValue = moment(value).year();\r\n      ////console.log(\"yearLength\",yearValue)\r\n      if (yearValue.toString().length == 4) {\r\n        var adDate = (value.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n        var bsDate = adbs.ad2bs(adDate);\r\n        bsDate.en.month = bsDate.en.month <= 9 ? \"0\" + (bsDate.en.month) : bsDate.en.month\r\n        this._transactionService.TrnMainObj.BSDATE = this.EntryDate.BSDATE1 =\r\n          this.masterService.toADDate(value);\r\n        this.bsDate = this.EntryDate.BSDATE1;\r\n      }\r\n    }\r\n    else if (format == \"BS\") {\r\n      this._transactionService.TrnMainObj.BSDATE = value;\r\n      var datearr = value.split('/');\r\n      const bsDate = datearr[2]+\"/\"+datearr[1]+\"/\"+datearr[0];\r\n      var xyz=value.split(\"-\");\r\n      let DateValue:any = xyz[2]+\"-\"+xyz[1]+\"-\"+xyz[0];\r\n      // var bsDate = (DateValue.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n      var adDate = adbs.bs2ad(bsDate)\r\n      this._transactionService.TrnMainObj.TRNDATE = this.EntryDate.DATE3 = this.masterService.toBSDate(value);\r\n      //console.log(\"@@DATE3\", this.EntryDate.DATE3);\r\n      // this._transactionService.TrnMainObj.TRNDATE= this.EntryDate.DATE3;\r\n      //this.ValidatePhiscalYear(this.EntryDate.DATE3,\"TRNDATE\",'DATE3');\r\n      this.ValidateBSDATE(this.EntryDate.DATE3, \"DATE3\", \"TRNDATE\");\r\n    }\r\n    // //console.log('CheckDate',this._transactionService.TrnMainObj.TRN_DATE,this._transactionService.TrnMainObj.BS_DATE)\r\n\r\n  }\r\n\r\n\r\n  // changeEndDate(value, format: string) {\r\n\r\n  //   var adbs = require(\"ad-bs-converter\");\r\n  //   if (format == \"AD\") {\r\n  //     this._transactionService.TrnMainObj.TRNDATE = value;\r\n  //     var adDate = (value.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n  //     var bsDate = adbs.ad2bs(adDate);\r\n  //     this._transactionService.TrnMainObj.BSDATE = this.VoucherEntry.BSDATE2 = this._masterRepo.toBSDate(value);\r\n  //   }\r\n  //   else if (format == \"BS\") {\r\n  //     var bsDate = (value.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n  //     var adDate = adbs.bs2ad(bsDate);\r\n  //     this.VoucherEntry.DATE = this.masterService.toBSDate(value);\r\n\r\n  //   }\r\n\r\n  // }\r\n\r\n  // changeEndDate1(value, format: string) {\r\n  //   var adbs = require(\"ad-bs-converter\");\r\n  //   if (format == \"AD\") {\r\n  //     this._transactionService.TrnMainObj.TRNDATE = value;\r\n  //     var adDate = (value.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n  //     var bsDate = adbs.ad2bs(adDate);\r\n  //     this._transactionService.TrnMainObj.BSDATE = this.EntryDate.BSDATE2 = bsDate.en.year + '-' + bsDate.en.month + '-' + (bsDate.en.day == '1' || bsDate.en.day == '2' || bsDate.en.day == '3' || bsDate.en.day == '4' || bsDate.en.day == '5' || bsDate.en.day == '6' || bsDate.en.day == '7' || bsDate.en.day == '8' || bsDate.en.day == '9' ? '0' + bsDate.en.day : bsDate.en.day);\r\n  //   }\r\n  //   else if (format == \"BS\") {\r\n  //     var bsDate = (value.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n  //     var adDate = adbs.bs2ad(bsDate);\r\n  //     this.EntryDate.DATE = this.masterService.toBSDate(value);\r\n\r\n  //   }\r\n\r\n  // }\r\n\r\n  focusOutEntryDate($event){\r\n    this.ValidatePhiscalYear($event.target.value,\"TRNDATE\",'DATE3');\r\n    this.ValidateBSDATE($event.target.value,\"DATE1\",\"TRNDATE\");\r\n  }\r\n\r\n\r\n  mangeFocusonDatefield(){\r\n    if(this.errorOccurfromDate){\r\n      if (this.userProfile.CompanyInfo.ActualFY == this.masterService.PhiscalObj.PhiscalID) {\r\n      let elementObj = null;\r\n      ////console.log(\"datechangeformat\",this.dateChangeFormate);\r\n      if(this.dateChangeFormate == 'DATE1BS'){\r\n        elementObj = this._bsTrnDate;\r\n        this.VoucherEntry.DATE1 = moment(this.date1).format(\"YYYY-MM-DD\");\r\n        this.changeEntryDate(this.VoucherEntry.DATE1,'AD');\r\n      }else if(this.dateChangeFormate == 'DATE1AD'){\r\n        elementObj = this._adTrnDate;\r\n        this.VoucherEntry.DATE1 = moment(this.date1).format(\"YYYY-MM-DD\");\r\n        this.changeEntryDate(this.VoucherEntry.DATE1,'AD');\r\n      }else if(this.dateChangeFormate == 'DATE3BS'){\r\n        elementObj = this._bsEntryDate;\r\n        this.EntryDate.DATE3 = moment(this.date1).format(\"YYYY-MM-DD\");\r\n        this.changeEntryDate1(this.EntryDate.DATE3 ,'AD');\r\n      }else if(this.dateChangeFormate == 'DATE3AD'){\r\n        elementObj = this._adEntryDate;\r\n       // this.EntryDate.DATE3 = moment(this.date1).format(\"YYYY-MM-DD\");\r\n        ////console.log(\"entry date\",this.EntryDate.DATE3);\r\n\r\n        this.EntryDate.DATE3 = new Date().toJSON().split('T')[0];\r\n        this.changeEntryDate1(this.EntryDate.DATE3 ,'AD');\r\n      }\r\n\r\n\r\n      if(elementObj != null){\r\n        setTimeout(() => {\r\n          elementObj.nativeElement.focus();\r\n       }, 2);\r\n      }\r\n    }\r\n    else{\r\n      var x = this.masterService.PhiscalObj.EndDate\r\n      x = x.substring(0, 10);\r\n      this._transactionService.TrnMainObj.TRNDATE = this.VoucherEntry.DATE1 = x;\r\n      this._transactionService.TrnMainObj.TRN_DATE = x;\r\n      this.changeEntryDate(this.VoucherEntry.DATE1, \"AD\");\r\n      this._transactionService.TrnMainObj.TRNDATE = this.EntryDate.DATE3 = x;\r\n      this.changeEntryDate1(this.EntryDate.DATE3, \"AD\");\r\n      // this._transactionService.TrnMainObj.TRN_DATE = this.VoucherEntry.DATE = x;\r\n      // this.changeEndDate(this.VoucherEntry.DATE, \"AD\");\r\n      // this.EntryDate.DATE2 = x;\r\n      // this.changeEndDate1(this.EntryDate.DATE2, \"AD\");\r\n      ////console.log(\"ChecKEntrYDAte\",this._transactionService.TrnMainObj.TRN_DATE)\r\n    }\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n  showAcList(i) {\r\n    this.selectedIndex = i;\r\n\r\n    ////console.log(\"selectedIndex\",this.selectedIndex);\r\n\r\n    var TRNMODE = `${this._transactionService.TrnMainObj.TRNMODE}`;\r\n    ////console.log(\"vouchertype\",this._transactionService.TrnMainObj.VoucherType);\r\n    if (this._transactionService.TrnMainObj.VoucherType == 64) {\r\n      TRNMODE = \"ALL\"\r\n    }\r\n\r\n    this.gridACListPopupSettings = {\r\n      title: \"Accounts\",\r\n      apiEndpoints: `/getAccountPagedListByMapId/Details/${TRNMODE}`,\r\n      defaultFilterIndex: 1,\r\n      columns: [\r\n        {\r\n          key: \"ACID\",\r\n          title: \"AC CODE\",\r\n          hidden: false,\r\n          noSearch: false\r\n        },\r\n        {\r\n          key: \"ACNAME\",\r\n          title: \"A/C NAME\",\r\n          hidden: false,\r\n          noSearch: false\r\n        }\r\n      ]\r\n    };\r\n\r\n    this.genericGridACList.show();\r\n  }\r\n\r\n\r\n  clearRow($event, index) {\r\n    try {\r\n      $event.preventDefault();\r\n      if (confirm(\"Are you sure you want to delete the row?\")) {\r\n        //console.log(\"inside the row\");\r\n\r\n        this.deleteCreditRow(index);\r\n        // this.TrnTranCrAmtChange(0);\r\n        // this.TrnTranDrAmtChange(0);\r\n        this.onChagneCRAmount(index);\r\n      }\r\n    } catch (ex) {\r\n      alert(ex);\r\n    }\r\n  }\r\n\r\n  TrnTranCrAmtChange(value) {\r\n    try {\r\n      this.trntranTotal = 0;\r\n      this._transactionService.TrnMainObj.TrntranList.forEach(x => {\r\n        this.trntranTotal += x.CRAMNT == null ? 0 : x.CRAMNT;\r\n      });\r\n      this._transactionService.trntranTotal = this.trntranTotal;\r\n      this._transactionService.TrnMainObj.NETAMNT = this.trntranTotal;\r\n      this._transactionService.TrnMainObj.TOTAMNT = this.trntranTotal;\r\n\r\n      this._transactionService.calculateDrCrDifferences();\r\n    } catch (ex) {\r\n      alert(ex);\r\n    }\r\n  }\r\n\r\n  TrnTranDrAmtChange(value) {\r\n    try {\r\n      this.trntranTotal = 0;\r\n      this._transactionService.TrnMainObj.TrntranList.forEach(x => {\r\n        this.trntranTotal += x.DRAMNT == null ? 0 : x.DRAMNT;\r\n      });\r\n      this._transactionService.trntranTotal = this.trntranTotal;\r\n      this._transactionService.TrnMainObj.NETAMNT = this.trntranTotal;\r\n      this._transactionService.TrnMainObj.TOTAMNT = this.trntranTotal;\r\n\r\n      this._transactionService.calculateDrCrDifferences();\r\n    } catch (ex) {\r\n      alert(ex);\r\n    }\r\n  }\r\n\r\n  onAcSelect(acItem) {\r\n\r\n    try {\r\n      if (typeof acItem == \"object\") {\r\n        var ac = <TAcList>acItem;\r\n        this.AcObj = acItem;\r\n\r\n        this._transactionService.creditList[this.selectedIndex].AccountItem = acItem;\r\n        this._transactionService.creditList[this.selectedIndex].A_ACID = acItem.ACID;\r\n        this._transactionService.creditList[this.selectedIndex].AccountItem.ACCODE = ac.ACCODE;\r\n        this._transactionService.creditList[this.selectedIndex].acitem = ac;\r\n        this._transactionService.creditList[this.selectedIndex].ACNAME = ac.ACNAME;\r\n\r\n        this._transactionService.getAccountWiseTrnAmount(ac.ACID);\r\n      }\r\n      if(acItem.HASSUBLEDGER == 1){\r\n        this._transactionService.creditList[this.selectedIndex].disableSubLedger = false\r\n        setTimeout(() => {\r\n          this.masterService.focusAnyControl(\"SubLedgerInputCr_\" + this.selectedIndex);\r\n          this._transactionService.subledgerfocus=true;\r\n        }, 20);\r\n      } \r\n      else{\r\n        this._transactionService.creditList[this.selectedIndex].disableSubLedger = true;\r\n        this._transactionService.creditList[this.selectedIndex].SL_ACNAME='';\r\n        this._transactionService.creditList[this.selectedIndex].CRAMNT=0;\r\n        this._transactionService.creditList[this.selectedIndex].NARATION='';\r\n        if(document.getElementById(\"SubLedgerInputCr_\"+this.selectedIndex)){\r\n        document.getElementById(\"SubLedgerInputCr_\"+this.selectedIndex).removeAttribute(\"placeholder\"); \r\n        }\r\n        setTimeout(() => {\r\n          this.masterService.focusAnyControl(\"Amount_\" + this.selectedIndex);\r\n        }, 20);\r\n      }\r\n\r\n    } catch (error) {\r\n\r\n      this.alertService.info(error)\r\n    }\r\n  }\r\n\r\n\r\n  onFocusCreditSelection(event,i){\r\n\r\n    let acObj =  this._transactionService.creditList[i].AccountItem;\r\n    if(acObj !=null &&acObj !== undefined){\r\n      this._transactionService.getAccountWiseTrnAmount(acObj.ACID);\r\n    }\r\n\r\n  }\r\n\r\n  getChalanSeries() {\r\n    this._transactionService.TrnMainObj.CHALANNOPREFIX = '';\r\n\r\n    const vType = this._transactionService.TrnMainObj.VoucherPrefix ? this._transactionService.TrnMainObj.VoucherPrefix : '';\r\n    this.masterService.getAllChalanSeries(vType).subscribe((response: any) => {\r\n      const res = response.json();\r\n      if (res && res.status === 'ok' && res.result) {\r\n        this.chalanSeries = res.result ? res.result : [];\r\n\r\n      } else {\r\n        this.chalanSeries = [];\r\n      }\r\n    }, error => {\r\n      this.chalanSeries = [];\r\n    });\r\n  }\r\n\r\n  getCostCenterList(){\r\n\r\n    this.masterService.getAllNEWCostCenter().subscribe(res => {\r\n      if (res) {\r\n        ////console.log(\"result\", res)\r\n        this.costlists.push(res);\r\n        this.costlists = res.result;\r\n        // _transactionService.TrnMainObj.COSTCENTER ='';\r\n\r\n      }\r\n    }, error => {\r\n      this.costlists = [];\r\n    });\r\n\r\n\r\n  }\r\n\r\n  addCreditnewRow(event, index) {\r\n    this.nexIndex = index + 1;\r\n\r\n    if (!this._transactionService.creditList) {\r\n      this._transactionService.creditList = [];\r\n    }\r\n\r\n\r\n    let currentObj = this._transactionService.creditList[index];\r\n\r\n    if (\r\n      index != -1 &&\r\n      (!currentObj.AccountItem ||\r\n        currentObj.AccountItem.ACID == undefined ||\r\n        currentObj.AccountItem.ACID == \"\")\r\n    ) {\r\n\r\n      alert(\"Please Select A/C\");\r\n      return;\r\n    }\r\n\r\n    if (\r\n      index != -1 &&\r\n      ((currentObj.DRAMNT == 0 || currentObj.DRAMNT == null) &&\r\n        (currentObj.CRAMNT == 0 || currentObj.CRAMNT == null))\r\n    ) {\r\n      alert(\"Debit Amount or Credit Amount is Required.\");\r\n      return;\r\n    }\r\n\r\n    if(this._transactionService.userSetting.COSTCENTERCOMPULSORY==1 && this._transactionService.userSetting.enableCostCenter==2){\r\n      if(index != -1 &&((currentObj.CostCenter == \"\" || currentObj.CostCenter == null || currentObj.CostCenter == undefined))){\r\n        alert(\"Please Select Cost Center.\");\r\n        return;\r\n      }\r\n    }\r\n\r\n    this.addCreditListnewRow();\r\n\r\n    setTimeout(() => {\r\n\r\n      if (document.getElementById(\"AccountName_\" + this.nexIndex) != null) {\r\n        document.getElementById(\"AccountName_\" + this.nexIndex).focus();\r\n      }\r\n\r\n\r\n    }, 100);\r\n\r\n\r\n  }\r\n\r\n  addCreditListnewRow() {\r\n\r\n    var newRow = <Trntran>{};\r\n    var newaclist: TAcList = <TAcList>{};\r\n    newRow.AccountItem = newaclist;\r\n    newRow.NARATION = \"\";\r\n    newRow.inputMode = true;\r\n    newRow.editMode = true;\r\n    newRow.CRAMNT = 0;\r\n    newRow.DRAMNT = 0;\r\n    newRow.ROWMODE = \"new\";\r\n    newRow.PartyDetails = [];\r\n    newRow.disableSubLedger = true;\r\n    this._transactionService.creditList.push(newRow);\r\n    this.accnamefocus = true;\r\n  }\r\n\r\n  discountChange(event) {\r\n    this.applyPipeinDiscount = false;\r\n    let discountAmount = this._transactionService.nullToReturnZero(event.target.value)\r\n  //  this._transactionService.TrnMainObj.DCAMNT = discountAmount;\r\n    this._transactionService.TrnMainObj.NETAMNT = discountAmount;\r\n    this.budgetCalculation();\r\n    this.calculateCrAmount();\r\n\r\n  }\r\n\r\n  discountFocusOut(event){\r\n    this.applyPipeinDiscount = true;\r\n    //this._transactionService.TrnMainObj.DCAMNT = this.formatetoTwoDecimal(this._transactionService.TrnMainObj.DCAMNT);\r\n\r\n\r\n\r\n  }\r\n\r\n  foucsOutTaxableAmount(event){\r\n   this.applyPipeinTaxableAmount = true;\r\n   // this._transactionService.TrnMainObj.TAXABLE = this.formatetoTwoDecimal(this._transactionService.TrnMainObj.TAXABLE);\r\n    ////console.log(\"focusout taxable\",this._transactionService.TrnMainObj.TAXABLE);\r\n  }\r\n\r\n  foucsOutNonTaxableAmount(event){\r\n    this.applyPipeinNonTaxableAmount =true;\r\n   // this._transactionService.TrnMainObj.NONTAXABLE = this.formatetoTwoDecimal(this._transactionService.TrnMainObj.NONTAXABLE);\r\n  }\r\n\r\n  roundOffFocusOut(event:KeyboardEvent){\r\n    ////console.log(\"keyborad\",typeof event.key);\r\n    this.applyPipeinRoundingAmount = true;\r\n    // if (event.key !== undefined){\r\n    //   this._transactionService.TrnMainObj.ROUNDOFF = this.formatetoTwoDecimal(this._transactionService.TrnMainObj.ROUNDOFF);\r\n    // }\r\n\r\n\r\n  }\r\n\r\n  foucsOutVATAmount($event){\r\n    this.applyPipeinVatAmount = true;\r\n    //this._transactionService.TrnMainObj.VATAMNT = this.formatetoTwoDecimal(this._transactionService.TrnMainObj.VATAMNT);\r\n  }\r\n\r\n\r\n\r\n  formatetoTwoDecimal(formatValue){\r\n    if(typeof  formatValue == 'number' || typeof formatValue == 'string'){\r\n       formatValue = Number(formatValue);\r\n     return  formatValue = formatValue.toFixed(2);\r\n    }else{\r\n      formatValue = 0\r\n     return formatValue = formatValue.toFixed(2);\r\n    }\r\n\r\n  }\r\n\r\n\r\n  taxableAmountChange(event:KeyboardEvent) {\r\n    this.applyPipeinTaxableAmount = false;\r\n    if(this.specialKeys.indexOf(event.key) !=-1)\r\n    {\r\n      ////console.log(\"reachtab\");\r\n    }else{\r\n      this._transactionService.TrnMainObj.NONTAXABLE = this._transactionService.nullToReturnZero(this._transactionService.TrnMainObj.TOTAMNT) -\r\n      this._transactionService.nullToReturnZero(this._transactionService.TrnMainObj.DCAMNT) -\r\n      this._transactionService.nullToReturnZero(this._transactionService.TrnMainObj.TAXABLE);\r\n      this.calculation();\r\n    }\r\n\r\n    //this._transactionService.TrnMainObj.TAXABLE = this._transactionService.nullToReturnZero(event.target.value);\r\n\r\n  }\r\n\r\n\r\n  nonTaxableAmountChange(event:KeyboardEvent) {\r\n    this.applyPipeinNonTaxableAmount = false;\r\n    if(this.specialKeys.indexOf(event.key) !=-1)\r\n    {\r\n      return false;\r\n    }\r\n   // this._transactionService.TrnMainObj.NONTAXABLE = this._transactionService.nullToReturnZero(event.target.value);\r\n    this._transactionService.TrnMainObj.TAXABLE = this._transactionService.TrnMainObj.TOTAMNT -\r\n                                                  this._transactionService.nullToReturnZero(this._transactionService.TrnMainObj.DCAMNT) -\r\n                                                  this._transactionService.nullToReturnZero(this._transactionService.TrnMainObj.NONTAXABLE);\r\n    this.calculation();\r\n  }\r\n  VATAmountChange(event) {\r\n    this.applyPipeinVatAmount = false\r\n   // this._transactionService.TrnMainObj.VATAMNT = this._transactionService.nullToZeroConverter(event.target.value);\r\n    //this.budgetCalculation();\r\n    this._transactionService.TrnMainObj.NETAMNT = this._transactionService.nullToReturnZero(this._transactionService.TrnMainObj.TAXABLE) +\r\n    this._transactionService.nullToReturnZero(this._transactionService.TrnMainObj.VATAMNT) +\r\n    this._transactionService.nullToReturnZero(this._transactionService.TrnMainObj.NONTAXABLE);\r\n\r\n    this._transactionService.totalDRAmount = this._transactionService.nullToReturnZero(this._transactionService.TrnMainObj.TOTAMNT) + this._transactionService.nullToReturnZero(this._transactionService.TrnMainObj.VATAMNT)\r\n\r\n  }\r\n\r\n  RoundedAmountChange(event){\r\n  this.applyPipeinRoundingAmount = false;\r\n    event.preventDefault();\r\n\r\n    let roundOffAmount = this._transactionService.nullToReturnZero(this._transactionService.TrnMainObj.ROUNDOFF);\r\n\r\n    if(roundOffAmount !=0){\r\n     // this.calculateCrAmount();\r\n      this._transactionService.TrnMainObj.NETAMNT = this._transactionService.nullToReturnZero(this._transactionService.TrnMainObj.TAXABLE) +\r\n      this._transactionService.nullToReturnZero(this._transactionService.TrnMainObj.VATAMNT) +\r\n      this._transactionService.nullToReturnZero(this._transactionService.TrnMainObj.NONTAXABLE);\r\n\r\n       this._transactionService.storePreviousRoundOff = this._transactionService.TrnMainObj.ROUNDOFF;\r\n        this._transactionService.TrnMainObj.NETAMNT =   this._transactionService.TrnMainObj.NETAMNT +\r\n                                                        this._transactionService.TrnMainObj.ROUNDOFF ;\r\n      if(roundOffAmount <0){\r\n\r\n        this._transactionService.totalCRAmount = 0;\r\n        this._transactionService.creditList.forEach(x => this._transactionService.totalCRAmount += x.CRAMNT);\r\n       this._transactionService.totalCRAmount = this._transactionService.totalCRAmount+this._transactionService.nullToReturnZero(this._transactionService.TrnMainObj.DCAMNT)\r\n                                                + this._transactionService.nullToReturnZero(Math.abs(this._transactionService.TrnMainObj.ROUNDOFF));\r\n      }else{\r\n        this._transactionService.totalCRAmount = 0;\r\n        this._transactionService.creditList.forEach(x => this._transactionService.totalCRAmount += x.CRAMNT);\r\n       this._transactionService.totalCRAmount = this._transactionService.totalCRAmount+this._transactionService.nullToReturnZero(this._transactionService.TrnMainObj.DCAMNT)\r\n                                                - this._transactionService.nullToReturnZero(Math.abs(this._transactionService.TrnMainObj.ROUNDOFF));\r\n      }\r\n\r\n    }else{\r\n\r\n      this.calculateCrAmount();\r\n\r\n      this._transactionService.TrnMainObj.NETAMNT = this._transactionService.nullToReturnZero(this._transactionService.TrnMainObj.TAXABLE) +\r\n      this._transactionService.nullToReturnZero(this._transactionService.TrnMainObj.VATAMNT) +\r\n      this._transactionService.nullToReturnZero(this._transactionService.TrnMainObj.NONTAXABLE);\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n  }\r\n\r\n  roundChange($event){\r\n    ////console.log(\"round change\");\r\n  }\r\n\r\n\r\n\r\n\r\n  onChagneCRAmount(i) {\r\n    // this._transactionService.creditList[i].CRAMNT_WITHOUTVAT=Math.round(((this._transactionService.creditList[i].CRAMNT/1.13) + Number.EPSILON) * 100) / 100;\r\n    this.calculateCrAmount()\r\n  }\r\n\r\n  CRAMNTRowOk(index,value) {\r\n    //console.log(\"CheckValues\",value,this._transactionService.creditList)\r\n    if(value.AccountItem.PARENT == this.masterService.userSetting.TDS_PAYABLE ||\r\n      value.AccountItem.PARENT == this.masterService.userSetting.TDS_RECEIVABLE\r\n      )\r\n      {\r\n        // alert(\"reached\")\r\n        let x : any=<any>{}\r\n       \r\n        this.FilterList = [];\r\n        this.PartyListFilter = [];\r\n        for(let i of this._transactionService.creditList){\r\n          if(i.AccountItem.PARENT != this.masterService.userSetting.TDS_PAYABLE &&\r\n            i.AccountItem.PARENT != this.masterService.userSetting.TDS_RECEIVABLE){\r\n              this.FilterList.push(i)\r\n            }\r\n          if(i.AccountItem.ACID.substring(0,2)== 'PA'){\r\n            x.ACNAME = i.AccountItem.ACNAME;\r\n            x.ACID = i.A_ACID;\r\n          \r\n            x.isCheck = true;\r\n            x.TDS = value.CRAMNT?value.CRAMNT : value.DRAMNT;\r\n          \r\n            \r\n          }\r\n         \r\n        }\r\n     \r\n        this.PartyListFilter.push(x);\r\n      \r\n        \r\n        this.showTDSDetailPopup = true;\r\n      }\r\n      else{\r\n        if(value.AccountItem.HASSUBLEDGER==1 && (!this._transactionService.creditList[index].SL_ACID)){\r\n          var ACNAME = value.AccountItem.ACNAME;\r\n          this.alertService.warning(\"PLEASE, SPECIFY SUB LEDGER FOR A/C '\"+ACNAME+\"'\");\r\n          return;\r\n        }\r\n\r\n        if(this._transactionService.userSetting.enableCostCenter==2){\r\n          this.masterService.focusAnyControl(\"costcenterCR_\"+index);\r\n        }else{\r\n          // document.getElementById(\"Narration_\" + index).focus();\r\n          this.masterService.focusAnyControl(\"NarrationCr_\"+index);\r\n\r\n        }\r\n      }\r\n   \r\n  }\r\n\r\n  deleteCreditRow(index) {\r\n    try {\r\n      if (this._transactionService.creditList.length < 1) return;\r\n\r\n      if (this._transactionService.creditList.length == 1) {\r\n        this._transactionService.creditList.splice(index, 1);\r\n        this.addCreditListnewRow();\r\n        return;\r\n      }\r\n      var rm = this._transactionService.creditList[index].ROWMODE;\r\n      if (rm == \"new\") {\r\n        // //console.log(\"inside the delte row\",rm);\r\n        this._transactionService.creditList.splice(index, 1);\r\n      }\r\n      if( this.masterService.addnMode = 'EDIT'){\r\n        this._transactionService.creditList.splice(index, 1);\r\n      }\r\n      \r\n\r\n    } catch (error) {\r\n\r\n    }\r\n  }\r\n\r\n  showCostCenterList(i) {\r\n    this.selectedIndex = i;\r\n    if(this.masterService.userSetting.EnableCompulsoryCostCategory==1){\r\n      this.gridCostCenterGroupListPopupSettings = {\r\n        title: \"Cost Centers Group\",\r\n        apiEndpoints: `/getCostCenterGroupPagedList`,\r\n        defaultFilterIndex: 0,\r\n        columns: [\r\n          {\r\n            key: \"ccgid\",\r\n            title: \"ID\",\r\n            hidden: false,\r\n            noSearch: false\r\n          },\r\n          {\r\n            key: \"COSTCENTERGROUPNAME\",\r\n            title: \"Cost Center Group Name\",\r\n            hidden: false,\r\n            noSearch: false\r\n          },\r\n\r\n        ]\r\n      };\r\n  this.genericGridCostCenterGroupList.show();\r\n    }\r\n    else{\r\n      this.gridCostCenterListPopupSettings = {\r\n        title: \"Cost Centers\",\r\n        apiEndpoints: `/getCostCenterPagedList`,\r\n        defaultFilterIndex: 0,\r\n        columns: [\r\n          {\r\n            key: \"COSTCENTERNAME\",\r\n            title: \"Cost Center Name\",\r\n            hidden: false,\r\n            noSearch: false\r\n          }\r\n        ]\r\n      };\r\n      this.genericGridCostCenterList.show();\r\n    }\r\n\r\n  }\r\n  onCostCenterGroupSelect(costCenter) {\r\n    this._transactionService.creditList[this.selectedIndex].COSTCENTERGROUP_NAME = costCenter.COSTCENTERGROUPNAME;\r\n    this._transactionService.creditList[this.selectedIndex].CCG_ID = costCenter.ccgid;\r\n    this.gridCostCenterListPopupSettings = {\r\n      title: \"Cost Centers\",\r\n      apiEndpoints: `/getCostCenterPagedListAccordingToId/${costCenter.ccgid}`,\r\n      defaultFilterIndex: 0,\r\n      columns: [\r\n        {\r\n          key: \"COSTCENTERNAME\",\r\n          title: \"Cost Center Name\",\r\n          hidden: false,\r\n          noSearch: false\r\n        }\r\n      ]\r\n    };\r\n    this.genericGridCostCenterList.show();\r\n  }\r\n  onCostCenterSelect(costCenter) {\r\n    this._transactionService.creditList[\r\n      this.selectedIndex\r\n    ].CostCenter = costCenter.COSTCENTERNAME;\r\n    this._transactionService.creditList[\r\n      this.selectedIndex\r\n    ].CCID = costCenter.CCID; // for Budget Status Checking\r\n\r\n    this.masterService.focusAnyControl(\"NarrationCr_\"+this.selectedIndex);\r\n\r\n\r\n  }\r\n\r\n  calculation() {\r\n    this._transactionService.totalDRAmount = 0;\r\n    this._transactionService.TrnMainObj.VATAMNT = (this._transactionService.TrnMainObj.TAXABLE * 0.13);\r\n    ////console.log(\"sec tasavle\",this._transactionService.TrnMainObj.TAXABLE);\r\n    this._transactionService.TrnMainObj.NETAMNT = this._transactionService.nullToReturnZero(this._transactionService.TrnMainObj.TAXABLE) +\r\n                                                  this._transactionService.nullToReturnZero(this._transactionService.TrnMainObj.VATAMNT) +\r\n                                                  this._transactionService.nullToReturnZero(this._transactionService.TrnMainObj.NONTAXABLE);\r\n    ////console.log(\"finalnetamout\", this._transactionService.TrnMainObj.NETAMNT);\r\n   // this._transactionService.totalDRAmount = this._transactionService.TrnMainObj.NETAMNT + this._transactionService.nullToReturnZero(this._transactionService.nullToReturnZero(this._transactionService.TrnMainObj.DCAMNT));\r\n    this._transactionService.totalDRAmount = this._transactionService.nullToReturnZero(this._transactionService.TrnMainObj.TOTAMNT) +\r\n                                             this._transactionService.nullToReturnZero(this._transactionService.TrnMainObj.VATAMNT);\r\n  }\r\n\r\n  budgetCalculation() {\r\n    this._transactionService.totalDRAmount = 0;\r\n\r\n    this._transactionService.TrnMainObj.TAXABLE = this._transactionService.TrnMainObj.TOTAMNT -\r\n                                                  this._transactionService.nullToReturnZero(this._transactionService.TrnMainObj.DCAMNT) -\r\n                                                  this._transactionService.nullToReturnZero(this._transactionService.TrnMainObj.NONTAXABLE);\r\n    this._transactionService.TrnMainObj.NONTAXABLE = this._transactionService.nullToReturnZero(this._transactionService.TrnMainObj.TOTAMNT) -\r\n                                                     this._transactionService.nullToReturnZero(this._transactionService.TrnMainObj.DCAMNT) -\r\n                                                     this._transactionService.nullToReturnZero(this._transactionService.TrnMainObj.TAXABLE);\r\n                                                     ////console.log(\"None taxable\", this._transactionService.TrnMainObj.NONTAXABLE)\r\n    this._transactionService.TrnMainObj.VATAMNT = (this._transactionService.TrnMainObj.TAXABLE * 0.13);\r\n    this._transactionService.TrnMainObj.NETAMNT = this._transactionService.nullToReturnZero(this._transactionService.TrnMainObj.TAXABLE) +\r\n                                                   this._transactionService.nullToReturnZero(this._transactionService.TrnMainObj.VATAMNT) +\r\n                                                   this._transactionService.nullToReturnZero(this._transactionService.TrnMainObj.NONTAXABLE);\r\n    // this._transactionService.totalDRAmount = this._transactionService.TrnMainObj.NETAMNT +\r\n    //                                       this._transactionService.nullToReturnZero(this._transactionService.TrnMainObj.DCAMNT);\r\n\r\n    this._transactionService.totalDRAmount = this._transactionService.nullToReturnZero(this._transactionService.TrnMainObj.TOTAMNT) +\r\n                                          this._transactionService.nullToReturnZero(this._transactionService.TrnMainObj.VATAMNT);\r\n\r\n  }\r\n\r\n  calculateCrAmount() {\r\n    this._transactionService.totalCRAmount = 0;\r\n    this._transactionService.creditList.forEach(x => this._transactionService.totalCRAmount += x.CRAMNT);\r\n    this._transactionService.totalCRAmount = this._transactionService.nullToReturnZero(this._transactionService.totalCRAmount)\r\n                                               +this._transactionService.nullToReturnZero(this._transactionService.TrnMainObj.DCAMNT)\r\n\r\n    if(this._transactionService.nullToReturnZero(this._transactionService.TrnMainObj.ROUNDOFF)>0){\r\n      this._transactionService.totalCRAmount =  this._transactionService.totalCRAmount - this._transactionService.nullToReturnZero(Math.abs(this._transactionService.TrnMainObj.ROUNDOFF));\r\n    }else if ( this._transactionService.nullToReturnZero(this._transactionService.TrnMainObj.ROUNDOFF) < 0 ) {\r\n      this._transactionService.totalCRAmount =  this._transactionService.totalCRAmount + this._transactionService.nullToReturnZero(Math.abs(this._transactionService.TrnMainObj.ROUNDOFF))\r\n    }\r\n  }\r\n\r\n\r\n  onSupplierSelected(supplier) {\r\n    this._transactionService.TrnMainObj.BILLTO = supplier.ACNAME;\r\n    this._transactionService.TrnMainObj.BILLTOTEL = supplier.VATNO?supplier.VATNO:supplier.GSTNO;\r\n    this._transactionService.TrnMainObj.PARAC = supplier.ACID\r\n    this._transactionService.TrnMainObj.TRNAC = supplier.ACID;\r\n    this._transactionService.TrnMainObj.BILLTOADD = supplier.ADDRESS;\r\n    this._transactionService.TrnMainObj.AdditionalObj.TRNTYPE = supplier.PSTYPE == null ? null : supplier.PSTYPE.toLowerCase();\r\n    this._transactionService.TrnMainObj.TRNMODE = supplier.PMODE;\r\n    this._transactionService.TrnMainObj.PARTY_ORG_TYPE = supplier.ORG_TYPE;\r\n    this._transactionService.TrnMainObj.CREDITDAYS = supplier.CRPERIOD;\r\n\r\n  }\r\n\r\n\r\n  SupplierEnterCommand() {\r\n    this.genericGridSupplier.show();\r\n  }\r\n\r\n\r\n  preventInput(event:KeyboardEvent){\r\n\r\n    if (this.specialKeys.indexOf(event.key) !== -1) {\r\n      return;\r\n    }else{\r\n      event.preventDefault();\r\n      return false;\r\n    }\r\n\r\n\r\n  }\r\n\r\n\r\n\r\n  ValidatePhiscalYear(value,DateType,DATE){\r\n    ////console.log(\"date\",value,this.masterService.PhiscalObj.BeginDate);\r\n    if(value<this.masterService.PhiscalObj.BeginDate.split('T')[0]){\r\n      this.alertService.info(\"Date Exceed to Current Phiscal Year!\")\r\n\r\n\r\n      if(DateType == \"TRNDATE\"){\r\n        this.EntryDate.DATE3 = moment(this.date1).format(\"YYYY-MM-DD\");\r\n        this.changeEntryDate1(this.EntryDate.DATE3, \"AD\");\r\n      }\r\n      else if(DateType == \"TRN_DATE\"){\r\n        this.VoucherEntry.DATE1 = moment(this.date1).format(\"YYYY-MM-DD\");\r\n        this.changeEntryDate(this.VoucherEntry.DATE1,\"AD\");\r\n      }\r\n\r\n    }\r\n\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n  ValidateBSDATE(value,date,dateType){\r\n    //console.log(\"value\",value)\r\n    if(date == 'DATE3'){\r\n      if((value < this.masterService.PhiscalObj.BeginDate.split('T')[0])\r\n      ||value > this.masterService.PhiscalObj.EndDate.split('T')[0]\r\n      ){\r\n      this.errorOccurfromDate = true;\r\n        this.alertService.info(\"Date Exceed to Current Phiscal Year !\");\r\n        return;\r\n      }\r\n\r\n      if(value > moment(this.date1).format(\"YYYY-MM-DD\")){\r\n        this.alertService.info(\"TRN DATE SHOULD NOT BE ENTERED FUTURE DATE\");\r\n        this.errorOccurfromDate = true;\r\n      }\r\n\r\n    }else if(date == 'DATE1'){\r\n\r\n      if(value > moment(this.date1).format(\"YYYY-MM-DD\")){\r\n        this.alertService.info(\"TRN DATE SHOULD NOT BE ENTERED FUTURE DATE\");\r\n        this.errorOccurfromDate = true;\r\n        if(dateType == \"TRNDATE\"){\r\n         // this.EntryDate.DATE3 = moment(this.date1).format(\"YYYY-MM-DD\");\r\n         // this.changeEntryDate1(this.EntryDate.DATE3, \"AD\");\r\n        }\r\n        else if(dateType == \"TRN_DATE\"){\r\n         /// this.VoucherEntry.DATE1 = moment(this.date1).format(\"YYYY-MM-DD\");\r\n        //  this.changeEntryDate(this.VoucherEntry.DATE1,\"AD\");\r\n        }\r\n        return;\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n  getSupplierList() {\r\n    var voucherprefix=\"CP\";\r\n    this.gridPopupSettingsForSupplier = {\r\n      title: \"Supplier\",\r\n      apiEndpoints: `/getAccountPagedListByPType/PA/V/${voucherprefix}`,\r\n      defaultFilterIndex: 0,\r\n      columns: [\r\n        {\r\n          key: \"ACNAME\",\r\n          title: \"NAME\",\r\n          hidden: false,\r\n          noSearch: false\r\n        },\r\n        {\r\n          key: \"ACCODE\",\r\n          title: \"CODE\",\r\n          hidden: false,\r\n          noSearch: false\r\n        },\r\n        {\r\n          key: \"ADDRESS\",\r\n          title: \"ADDRESS\",\r\n          hidden: false,\r\n          noSearch: false\r\n        },\r\n        {\r\n          key: \"EMAIL\",\r\n          title: \"EMAIL\",\r\n          hidden: false,\r\n          noSearch: false\r\n        }\r\n      ]\r\n    };\r\n\r\n  }\r\n\r\n  changePhiscalDate(value, format: string) {\r\n\r\n    var adbs = require(\"ad-bs-converter\");\r\n    if (format == \"AD\") {\r\n      var adDate = (value.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n      var bsDate = adbs.ad2bs(adDate);\r\n      this._transactionService.TrnMainObj.BSDATE = this.EntryDate.PhiscalBSDate = bsDate.en.year + '-' + bsDate.en.month + '-' + (bsDate.en.day == '1' || bsDate.en.day == '2' || bsDate.en.day == '3' || bsDate.en.day == '4' || bsDate.en.day == '5' || bsDate.en.day == '6' || bsDate.en.day == '7' || bsDate.en.day == '8' || bsDate.en.day == '9' ? '0' + bsDate.en.day : bsDate.en.day);\r\n    }\r\n  }\r\n  onsubLedgerTab(i,ACID:string){\r\n    this.selectedIndex = i;\r\n    this.gridSubLedgerSetting = {\r\n      title: \"SubLedger List\",\r\n      apiEndpoints: `/getSubLedgerByACIDPageList/${ACID}`,\r\n      defaultFilterIndex: 1,\r\n      columns: [\r\n        {\r\n          key: \"SL_ACID\",\r\n          title: \"SubLedger ID\",\r\n          hidden: false,\r\n          noSearch: false\r\n        },\r\n        {\r\n          key: \"SL_ACNAME\",\r\n          title: \"SubLedger Name\",\r\n          hidden: false,\r\n          noSearch: false\r\n        }\r\n      ]\r\n    };\r\n    this.gridSubLedgerSettingList.show();\r\n  }\r\n  onSubLedgerSelect(value) {\r\n    this._transactionService.creditList[this.selectedIndex].SL_ACID= value.SL_ACID;\r\n    this._transactionService.creditList[this.selectedIndex].SL_ACNAME =value.SL_ACNAME;\r\n    setTimeout(() => {\r\n      this.masterService.focusAnyControl(\"Amount_\" + this.selectedIndex);\r\n    }, 20);\r\n    // this.focusNext(1, this.selectedIndex);\r\n   }\r\n   changedSubLedger(value){\r\n\r\n    // if(value.hasSubLedger==1){\r\n    //   this.alertService.warning(\"PLEASE, SPECIFY SUB LEDGER FOR A/C\");\r\n\r\n    // }\r\n  }\r\n  \r\n  focusNextValidation(value, tvalue) {\r\n////console.log(\"CheckValueee\",value,tvalue)\r\n    if (value == 'Ledger') {\r\n      if (tvalue.AccountItem) {\r\n        if(tvalue.AccountItem.HASSUBLEDGER == 1){\r\n          setTimeout(() => {\r\n            this.masterService.focusAnyControl(\"SubLedgerInputCr_\" + this.selectedIndex);\r\n          }, 20);\r\n        } \r\n        else{\r\n         setTimeout(() => {\r\n            this.masterService.focusAnyControl(\"Amount_\" + this.selectedIndex);\r\n          }, 20);\r\n        }\r\n       \r\n      }\r\n    \r\n    }\r\n    else if (value == 'SubLedger') {\r\n      if (!tvalue.SL_ACNAME) {\r\n       \r\n      }\r\n      else{\r\n        this.masterService.focusAnyControl(\"Amount_\" + this.selectedIndex);\r\n      }\r\n    }\r\n  }\r\n\r\n  showTDSDetailPopup = false;\r\n  PartyListFilter =[];\r\n  TdsPopupClick(index){\r\n\r\n  }\r\n  ClickDrList(){\r\n\r\n  }\r\n  cancelTDSDetailPopup(){\r\n    this.showTDSDetailPopup = false;\r\n  }\r\n  TdsPopupOK(){\r\n    this.showTDSDetailPopup = false;\r\n    this._transactionService.creditList[this.selectedIndex].OPPREMARKS = this.PartyListFilter[0].AMNT;\r\n    this._transactionService.creditList[this.selectedIndex].OppAcid = this.PartyListFilter[0].ACID[0].A_ACID;\r\n    //console.log(\"FinalTDSACID\", this._transactionService.creditList)\r\n  }\r\n  ChangeDesca(value){\r\n   \r\n    this.PartyListFilter[0].ACID = this._transactionService.creditList.filter(x=>x.acitem.ACNAME == value.target.value)\r\n    \r\n  }\r\n  BaseAmntChange(){\r\n  }\r\n  FilterList :any[]=[];\r\n\r\n  // ChangeCRAMNT_WithoutVAT(index){\r\n  //   this._transactionService.creditList[index].CRAMNT=Math.round(((this._transactionService.creditList[index].CRAMNT_WITHOUTVAT*1.13) + Number.EPSILON) * 100) / 100;\r\n  //   this.calculateCrAmount();\r\n  // }\r\n\r\n  // CRAMNT_WithoutVAT_RowOk(index,value) {\r\n  //   if(this._transactionService.creditList[index].CRAMNT==null || this._transactionService.creditList[index].CRAMNT==0){\r\n  //     this.masterService.focusAnyControl(\"Amount_\" + index);\r\n  // }else{\r\n  //   this.masterService.focusAnyControl(\"NarrationCr_\" + index);\r\n  // }\r\n  // this.CRAMNTRowOk(index,value);\r\n  // }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/pages/AccountVoucher/components/capital-voucher/capital-voucher.component.ts","import { Component } from \"@angular/core\";\r\nimport { TransactionService } from \"../../../../common/Transaction Components/transaction.service\";\r\nimport { PREFIX } from \"../../../../common/interfaces/Prefix.interface\";\r\nimport { VoucherTypeEnum } from \"../../../../common/interfaces/TrnMain\";\r\nimport { TrnMain } from \"../../../../common/interfaces/TrnMain\";\r\nimport { MasterRepo } from \"../../../../common/repositories/masterRepo.service\";\r\nimport { SettingService } from \"../../../../common/services/setting.service\";\r\nimport { SpinnerService } from \"../../../../common/services/spinner/spinner.service\";\r\nimport { AlertService } from \"../../../../common/services/alert/alert.service\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\n\r\n@Component({\r\n  selector: \"contra-voucher\",\r\n  template: require('./contra-voucher.component.html'),\r\n  providers: [TransactionService]\r\n})\r\nexport class ContraVoucherComponent {\r\n  TrnMainObj: TrnMain = <TrnMain>{};\r\n  voucherType: VoucherTypeEnum = VoucherTypeEnum.ContraVoucher;\r\n  prefix: PREFIX = <PREFIX>{};\r\n\r\n  constructor(\r\n    private _trnMainService: TransactionService,\r\n    private masterService: MasterRepo,\r\n    private _loadingSerive:SpinnerService,\r\n    private _alertService:AlertService,\r\n    private _activatedRoute:ActivatedRoute,\r\n    private setting: SettingService ) {\r\n    this.TrnMainObj = _trnMainService.TrnMainObj;\r\n    this._trnMainService.initialFormLoad(62)\r\n    this.voucherType = VoucherTypeEnum.ContraVoucher;\r\n    this._trnMainService.DrillMode = \"New\";\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n    this._activatedRoute.queryParams.subscribe(params => {\r\n      if (params['mode']==\"DRILL\") {\r\n        let VCHR = params['voucher']\r\n        let vparams = []\r\n        vparams = VCHR.split('-')\r\n        this._loadingSerive.show(\"Loading Invoice\")\r\n        this.masterService.LoadTransaction(VCHR, vparams[1], vparams[2]).subscribe((res) => {\r\n          if (res.status == \"ok\") {\r\n            this._loadingSerive.hide()\r\n            this._trnMainService.TrnMainObj = res.result;\r\n            this._trnMainService.TrnMainObj.VoucherType = 62;\r\n              this._trnMainService.pageHeading = \"Contra Voucher\";\r\n              this._trnMainService.TrnMainObj.VoucherPrefix = \"CV\";\r\n              this._trnMainService.TrnMainObj.Mode = \"VIEW\";\r\n              this._trnMainService.calculateCrDrTotal();\r\n              this._trnMainService.calculateDrCrDifferences();\r\n          }\r\n        }, err => {\r\n          this._loadingSerive.hide()\r\n          this._alertService.error(err)\r\n        })\r\n  \r\n      } else if (params['mode']==\"fromLatepost\"){\r\n        //console.log(\"inside the fromlatepost drill\")\r\n        // alert(\"params['mode']==Contra voucher \")\r\n        this._loadingSerive.show(\"Loading Invoice\")\r\n        this.masterService.LoadTransaction(params.voucher, params.DIVISION, params.PHISCALID).subscribe((res) => {\r\n          if (res.status == \"ok\") {\r\n            this._loadingSerive.hide()\r\n            this._trnMainService.TrnMainObj = res.result;\r\n            this._trnMainService.TrnMainObj.VoucherType = 62;\r\n              this._trnMainService.pageHeading = \"Contra Voucher\";\r\n              this._trnMainService.TrnMainObj.VoucherPrefix = \"CE\";\r\n              this._trnMainService.TrnMainObj.Mode = \"VIEW\";\r\n          }\r\n        }, err => {\r\n          this._loadingSerive.hide()\r\n          this._alertService.error(err)\r\n        })\r\n\r\n      }\r\n      \r\n      else{\r\n        if (this._activatedRoute.snapshot.params['from']) {\r\n          let VCHR = this._activatedRoute.snapshot.params['voucherNumber']\r\n          let params = []\r\n          params = VCHR.split('-')\r\n          this._loadingSerive.show(\"Loading Invoice\")\r\n          this.masterService.LoadTransaction(VCHR, params[1], params[2]).subscribe((res) => {\r\n            if (res.status == \"ok\") {\r\n              this._loadingSerive.hide()\r\n              this._trnMainService.TrnMainObj = res.result;\r\n              this._trnMainService.TrnMainObj.VoucherType = 62;\r\n              this._trnMainService.pageHeading = \"Contra Voucher\";\r\n              this._trnMainService.TrnMainObj.VoucherPrefix = \"CE\";\r\n              this._trnMainService.TrnMainObj.Mode = \"VIEW\";\r\n            }\r\n          }, err => {\r\n            this._loadingSerive.hide()\r\n            this._alertService.error(err)\r\n          })\r\n    \r\n        }else{\r\n        this.TrnMainObj.Mode = \"NEW\";\r\n        this.masterService.ShowMore = false;\r\n        }\r\n      }\r\n    });\r\n   \r\n  }\r\n  ngAfterViewInit(){\r\n    ////console.log(\"voucherTypeInit\",this._trnMainService.TrnMainObj.VoucherType)\r\n  }\r\n\r\n  prefixChanged(pref: any) {\r\n    try {\r\n      this._trnMainService.prefix = pref;\r\n      this.prefix = pref;\r\n      if (this.TrnMainObj.Mode == \"NEW\") {\r\n        if (\r\n          this.TrnMainObj.DIVISION == \"\" ||\r\n          this.TrnMainObj.DIVISION == null\r\n        ) {\r\n          this.TrnMainObj.DIVISION = this.setting.appSetting.DefaultDivision;\r\n        }\r\n        this.masterService.getVoucherNo(this.TrnMainObj).subscribe(res => {\r\n          if (res.status == \"ok\") {\r\n            let TMain = <TrnMain>res.result;\r\n            this.TrnMainObj.VCHRNO = TMain.VCHRNO.substr(\r\n              2,\r\n              TMain.VCHRNO.length - 2\r\n            );\r\n            this.TrnMainObj.CHALANNO = TMain.CHALANNO;\r\n          } else {\r\n            alert(\"Failed to retrieve VoucherNo\");\r\n          }\r\n        });\r\n      }\r\n    } catch (ex) {\r\n    }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/pages/AccountVoucher/components/contra/contra-voucher.component.ts","import { Component, OnInit } from '@angular/core';\r\nimport { MasterRepo } from '../../../../common/repositories';\r\nimport { AlertService } from '../../../../common/services/alert/alert.service';\r\nimport { AuthService } from '../../../../common/services/permission/authService.service';\r\nimport { SpinnerService } from '../../../../common/services/spinner/spinner.service';\r\n\r\n\r\n@Component({\r\n    selector: 'depreciation-detail',\r\n    template: require('./depreciation-detail.component.html'),\r\n    styles: [require('./depreciation-detail.component.css')]\r\n})\r\n\r\nexport class DepreciationDetailsComponent implements OnInit {\r\n    accountWiseData: any[] = [];\r\n    itemWiseData: any[] = [];\r\n    assetCodeWiseData: any[] = [];\r\n    PhiscalObj: any = {};\r\n\r\n    allTabData: any = {\r\n        accountWiseData: [],\r\n        itemWiseData: [],\r\n        assetCodeWiseData: [],\r\n    };\r\n\r\n    monthMap: Map<string, number> = new Map<string, number>();\r\n    detailsObj: any;\r\n    RefNo: any;\r\n    bodyData: any;\r\n    constructor(\r\n        private masterService: MasterRepo, private loader: SpinnerService, private alertService: AlertService, private authService: AuthService\r\n    ) {\r\n        this.isMonthSelected = false;\r\n\r\n        this.months.forEach((month) => {\r\n            this.monthMap.set(month.monthName, month.monthId);\r\n        });\r\n\r\n        this.PhiscalObj = this.masterService.PhiscalObj;\r\n    }\r\n\r\n    ngOnInit(): void {\r\n\r\n    }\r\n    months: Month[] = [\r\n        { monthId: 1, monthName: 'Shrawan' },\r\n        { monthId: 2, monthName: 'Bhadra' },\r\n        { monthId: 3, monthName: 'Asoj' },\r\n        { monthId: 4, monthName: 'Kartik' },\r\n        { monthId: 5, monthName: 'Mangsir' },\r\n        { monthId: 6, monthName: 'Poush' },\r\n        { monthId: 7, monthName: 'Magh' },\r\n        { monthId: 8, monthName: 'Falgun' },\r\n        { monthId: 9, monthName: 'Chaitra' },\r\n        { monthId: 10, monthName: 'Baisakh' },\r\n        { monthId: 11, monthName: 'Jestha' },\r\n        { monthId: 12, monthName: 'Asaar' },\r\n    ];\r\n\r\n    selectedMonth: string = '';\r\n    isMonthSelected: boolean = false;\r\n    calculationDone: boolean = false;\r\n    isDeleteEnable: boolean = true;\r\n    currentTab: string = 'account-wise';\r\n    selectedTabExcel: number;\r\n    selectedMonthId: number;\r\n    isViewed: boolean = false;\r\n\r\n\r\n\r\n    // totals for each tab\r\n    totalCostValueAccountWise: number;\r\n    totalBookValueAccountWise: number;\r\n    totalDepreciationAccountWise: number;\r\n    totalNetBookValueAccountWise: number;\r\n\r\n    totalCostValueItemWise: number;\r\n    totalBookValueItemWise: number;\r\n    totalDepreciationItemWise: number;\r\n    totalNetBookValueItemWise: number;\r\n    totalQuantityItemWise: number;\r\n    //totalCostItemWise: number;\r\n\r\n    totalCostValueAssetCodeWise: number;\r\n    totalBookValueAssetCodeWise: number;\r\n    totalDepreciationAssetCodeWise: number;\r\n    totalNetBookValueAssetCodeWise: number;\r\n\r\n\r\n\r\n\r\n    onMonthSelected() {\r\n        this.isMonthSelected = !!this.selectedMonth;\r\n\r\n        if (this.isMonthSelected) {\r\n            this.selectedMonthId = this.monthMap.get(this.selectedMonth);\r\n        } else {\r\n            this.selectedMonthId = undefined;\r\n        }\r\n    }\r\n\r\n    calculate() {\r\n        this.loader.show('Please wait..');\r\n        this.masterService.getDepreciationDetail(this.selectedMonthId, this.PhiscalObj.PhiscalID).subscribe(\r\n            (res: DepreciationDetail) => {\r\n\r\n                this.loader.hide();\r\n                this.accountWiseData = res.result; // Store data for account-wise tab\r\n                this.itemWiseData = res.result2; // Store data for item-wise tab\r\n                this.assetCodeWiseData = res.result3;\r\n\r\n                if (this.currentTab === 'account-wise') {\r\n                    this.accountWiseData = res.result;\r\n                } else if (this.currentTab === 'item-wise') {\r\n                    this.itemWiseData = res.result2;\r\n                } else if (this.currentTab === 'asset-code-wise') {\r\n                    this.assetCodeWiseData = res.result3;\r\n                }\r\n\r\n                this.calculateTotalsAccountWise();\r\n                this.calculateTotalsItemWise();\r\n                this.calculateTotalsAssetCodeWise();\r\n                this.calculationDone = true;\r\n                this.isDeleteEnable = true;\r\n            }, error => {\r\n                this.loader.hide();\r\n                this.alertService.info(error._body);\r\n\r\n            }\r\n        );\r\n    }\r\n\r\n    // totals for 'account-wise' tab\r\n    calculateTotalsAccountWise() {\r\n        this.totalCostValueAccountWise = this.calculateTotal('Cost_Value', this.accountWiseData);\r\n        this.totalBookValueAccountWise = this.calculateTotal('Current_Book_Value', this.accountWiseData);\r\n        this.totalDepreciationAccountWise = this.calculateTotal('Depreciation', this.accountWiseData);\r\n        this.totalNetBookValueAccountWise = this.calculateTotal('Net_Book_Value', this.accountWiseData);\r\n    }\r\n\r\n    // totals for 'item-wise' tab\r\n    calculateTotalsItemWise() {\r\n        this.totalCostValueItemWise = this.calculateTotal('Cost_Value', this.itemWiseData);\r\n        this.totalQuantityItemWise = this.calculateTotal('Quantity', this.itemWiseData);\r\n        // this.totalCostItemWise = this.calculateTotal('TotalCost', this.itemWiseData);\r\n        this.totalBookValueItemWise = this.calculateTotal('Current_Book_Value', this.itemWiseData);\r\n        this.totalDepreciationItemWise = this.calculateTotal('Depreciation', this.itemWiseData);\r\n        this.totalNetBookValueItemWise = this.calculateTotal('Net_Book_Value', this.itemWiseData);\r\n    }\r\n\r\n    // totals for 'asset-code-wise' tab\r\n    calculateTotalsAssetCodeWise() {\r\n        this.totalCostValueAssetCodeWise = this.calculateTotal('Cost_Value', this.assetCodeWiseData);\r\n        this.totalBookValueAssetCodeWise = this.calculateTotal('Current_Book_Value', this.assetCodeWiseData);\r\n        this.totalDepreciationAssetCodeWise = this.calculateTotal('Depreciation', this.assetCodeWiseData);\r\n        this.totalNetBookValueAssetCodeWise = this.calculateTotal('Net_Book_Value', this.assetCodeWiseData);\r\n    }\r\n\r\n    calculateTotal(column: string, data: any[]): number {\r\n        let total = 0;\r\n\r\n        for (const row of data) {\r\n            const value = row[column];\r\n            if (!isNaN(value)) {\r\n                total += value;\r\n            }\r\n        }\r\n        return total;\r\n    }\r\n\r\n    Reset() {\r\n        this.selectedMonth = '';\r\n        this.isMonthSelected = false;\r\n        this.accountWiseData = [];\r\n        this.itemWiseData = [];\r\n        this.assetCodeWiseData = [];\r\n        this.calculationDone = false;\r\n        this.isViewed = false;\r\n        this.isDeleteEnable = true;\r\n\r\n        this.totalCostValueAccountWise = 0;\r\n        this.totalBookValueAccountWise = 0;\r\n        this.totalDepreciationAccountWise = 0;\r\n        this.totalNetBookValueAccountWise = 0;\r\n        this.totalCostValueItemWise = 0;\r\n        this.totalQuantityItemWise = 0;\r\n        // this.totalCostItemWise = 0;\r\n        this.totalBookValueItemWise = 0;\r\n        this.totalDepreciationItemWise = 0;\r\n        this.totalNetBookValueItemWise = 0;\r\n        this.totalCostValueAssetCodeWise = 0;\r\n        this.totalBookValueAssetCodeWise = 0;\r\n        this.totalDepreciationAssetCodeWise = 0;\r\n        this.totalNetBookValueAssetCodeWise = 0;\r\n    }\r\n\r\n    Save() {\r\n        this.loader.show(\"Saving data. Please wait...\");\r\n\r\n        this.masterService.saveDepreciationCalculation(`/SaveAssetDepreciation?currentmonth=${this.selectedMonthId}&phiscalyear=${this.PhiscalObj.PhiscalID}&configmode=1`, this.allTabData).subscribe(\r\n            (res: any) => {\r\n                if (res.status == \"ok\") {\r\n                    this.loader.hide();\r\n\r\n                    this.alertService.success(`Depreciation for the month ${this.selectedMonth} has been adjusted. Voucher No. ${res.refNo}`);\r\n                    this.Reset();\r\n                }\r\n            },\r\n            (error: any) => {\r\n                this.loader.hide();\r\n                this.alertService.error(error._body);\r\n            }\r\n        );\r\n    }\r\n\r\n    saveToExcel() {\r\n        this.loader.show(\"Loading data. Please wait...\");\r\n        let filterObjData = { filtername: \"AllDepreciationList\" }\r\n\r\n        this.masterService.getExcelFile(`/exportToExcel?currentmonth=${this.selectedMonthId}&phiscalyear=${this.PhiscalObj.PhiscalID}&configmode=1&type=${this.selectedTabExcel}`, filterObjData).subscribe(\r\n            data => {\r\n                this.masterService.downloadFile(data);\r\n                this.alertService.success(`Depreciation for the month ${this.selectedMonth} has been adjusted.`);\r\n                this.loader.hide();\r\n            },\r\n            (error: any) => {\r\n                this.loader.hide();\r\n                this.alertService.error(error._body);\r\n            }\r\n        )\r\n    }\r\n\r\n    View() {\r\n        this.loader.show(\"Please wait...\");\r\n\r\n        this.masterService.viewDepreciationDetail(`/ViewAssetDepreciation?currentmonth=${this.selectedMonthId}&phiscalyear=${this.PhiscalObj.PhiscalID}&configmode=1`).subscribe(\r\n            (res: any) => {\r\n                if (res.status === \"ok\") {\r\n                    this.loader.hide();\r\n                    this.accountWiseData = res.result;\r\n                    this.itemWiseData = res.result2;\r\n                    this.assetCodeWiseData = res.result3;\r\n                    this.calculationDone = true;\r\n\r\n                    this.calculateTotalsAccountWise();\r\n                    this.calculateTotalsItemWise();\r\n                    this.calculateTotalsAssetCodeWise();\r\n                    this.isViewed = true;\r\n                    this.isDeleteEnable = false;\r\n                    this.RefNo = res.RefNo;\r\n                }\r\n            },\r\n            (error: any) => {\r\n                this.loader.hide();\r\n                this.alertService.error(error._body);\r\n                this.Reset();\r\n            }\r\n        );\r\n    }\r\n\r\n\r\n    Cancel() {\r\n        if (confirm(\"Are you sure you want to delete?\")) {\r\n            this.loader.show(\"Please wait...\");\r\n\r\n            let bodyData = {\r\n                VoucherType: 12,\r\n                VCHRNO: this.RefNo,\r\n                MODE: \"CANCELDEPRECIATION\",\r\n                VoucherPrefix: \"JV\"\r\n            };\r\n\r\n            this.masterService.cancelDepreciationDetail(`/cancelAcVouchers`, bodyData).subscribe(\r\n                (res: any) => {\r\n                    this.loader.hide();\r\n\r\n                    if (res.status === \"ok\") {\r\n                        this.alertService.success(`Voucher ${this.RefNo} has been canceled successfully.`);\r\n                        this.Reset();\r\n                    } else {\r\n                        this.alertService.info(res.result.result);\r\n                    }\r\n                },\r\n                error => {\r\n                    this.loader.hide();\r\n\r\n                    this.alertService.error(error._body);\r\n                }\r\n            );\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    showTab(tabName: string) {\r\n        this.currentTab = tabName;\r\n        switch (tabName) {\r\n            case 'account-wise': this.selectedTabExcel = 1;\r\n                break;\r\n            case 'item-wise': this.selectedTabExcel = 2;\r\n                break;\r\n            case 'asset-code-wise': this.selectedTabExcel = 3;\r\n                break;\r\n        }\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/pages/AccountVoucher/components/depreciation-detail/depreciation-detail.component.ts","import {Component, ViewChild} from '@angular/core';\r\nimport { AbstractControlDirective } from '@angular/forms';\r\nimport { GenericPopUpComponent, GenericPopUpSettings } from '../../../../common/popupLists/generic-grid/generic-popup-grid.component';\r\nimport { MasterRepo } from '../../../../common/repositories/masterRepo.service';\r\nimport { AuthService } from '../../../../common/services/permission/authService.service';\r\nimport { TransactionService } from '../../../../common/Transaction Components/transaction.service';\r\nimport { TwoDigitNumber } from '../../../../theme/pipes';\r\n@Component({\r\n    selector: 'itemwise-depreciation-detail',\r\n    template: require('./itemwise-depreciation-detail.component.html'),\r\n    providers:[TwoDigitNumber]\r\n    // styles: [require('./party-balance-confirmation.component.styl')]\r\n})\r\nexport class ItemWiseDepreciationDetailComponent {\r\n\r\n  @ViewChild(\"genericGridACList\")  genericGridACList: GenericPopUpComponent;\r\n  gridACListPopupSettings: GenericPopUpSettings = new GenericPopUpSettings();\r\n\r\n  rowIndex = 0;\r\n  custAcid: any;\r\n  customerName:string;\r\n\r\n  PartyInfo = [];\r\n  costlists=[];\r\n  public PartyBalanceData: PARTYBALANCE = <PARTYBALANCE>{}\r\n\r\n\r\n\r\n\r\n  constructor(\r\n    private _transactionService: TransactionService,\r\n    public masterService: MasterRepo,\r\n    private authService: AuthService,\r\n  ){\r\n    this.userProfile = this.authService.getUserProfile();\r\n      this.PartyBalanceData.DATE1 = this.masterService.PhiscalObj.BeginDate.split('T')[0];\r\n      this.changeEntryDate(this.PartyBalanceData.DATE1, \"AD\");\r\n      this.PartyBalanceData.DATE2 = this.masterService.PhiscalObj.EndDate.split('T')[0];\r\n      this.changeEndDate(this.PartyBalanceData.DATE2, \"AD\");\r\n      this.PartyBalanceData.INCLUDECASHTRANSACTION=0\r\n      this.masterService.getAllNEWCostCenter().subscribe(res => {\r\n        if (res) {\r\n          this.costlists = res.result;\r\n        }\r\n      }, error => {\r\n        this.costlists = [];\r\n      });\r\n      this.PartyBalanceData.PARTYTYPE=\"C\";\r\n     \r\n    }\r\n\r\n  showAcList(i) {\r\n    this._transactionService.TrnMainObj.TRNMODE = \"SinglePayment_Party\";\r\n    var TRNMODE = `${this._transactionService.TrnMainObj.TRNMODE}`;\r\n    if(this.PartyBalanceData.PARTYTYPE==\"C\"){\r\n      TRNMODE=\"PartyBalance_Customer\";\r\n    }else{\r\n    TRNMODE = \"SinglePayment_Party\";\r\n    }\r\n    this.gridACListPopupSettings = {\r\n      title: \"Accounts\",\r\n      apiEndpoints: `/getAccountPagedListByMapId/Details/${TRNMODE}`,\r\n      defaultFilterIndex: 1,\r\n      columns: [\r\n        {\r\n          key: \"ACID\",\r\n          title: \"AC CODE\",\r\n          hidden: false,\r\n          noSearch: false\r\n        },\r\n        {\r\n          key: \"ACNAME\",\r\n          title: \"A/C NAME\",\r\n          hidden: false,\r\n          noSearch: false\r\n        }\r\n      ]\r\n    };\r\n\r\n    this.genericGridACList.show();\r\n\r\n\r\n  }\r\n  // ngOnInit(){\r\n  //   this.changeEntryDate(this.PartyBalanceData.DATE1, \"AD\");\r\n  //   this.changeEndDate(this.PartyBalanceData.DATE2, \"AD\");\r\n\r\n  // }\r\n\r\n  onAcSelect(acItem) {\r\n    //console.log('sdgfgsdh', acItem);\r\n     this.PartyBalanceData.CUSTOMERNAME = acItem.ACNAME;\r\n     this.PartyBalanceData.ACID=acItem.ACID;\r\n     this.PartyBalanceData.PANNO=acItem.VATNO\r\n     this.PartyBalanceData.COMPANYADDRESS=acItem.ADDRESS\r\n    //  this.setFocus();\r\n\r\n}\r\n\r\nsetFocus() {\r\n  document.getElementById('Name0').focus();\r\n}\r\nonLoad(){\r\n  // //console.log('hello its working',this.PartyBalanceData);\r\n  this.PartyBalanceData.DIVISION=this.userProfile.CompanyInfo.INITIAL;\r\n  this.PartyBalanceData.PHISCALID=this.userProfile.CompanyInfo.PhiscalID;\r\n  this.PartyBalanceData.COMPANYID=this.userProfile.CompanyInfo.COMPANYID;\r\n  if(!this.PartyBalanceData.COSTCENTER){\r\n    this.PartyBalanceData.COSTCENTER='%';\r\n  }\r\n  if(!this.PartyBalanceData.ACID){\r\n    this.PartyBalanceData.ACID='%';\r\n  }\r\n\r\n  this.masterService.LoadPartyBalanceData(this.PartyBalanceData).subscribe(res=>{\r\n    //console.log(\"@@@res.result\",res.result)\r\n    this.PartyInfo = res.result;\r\n    let abcd = this.PartyInfo.filter(x=>(x.PARTICULAR == 'Net Receivable' || x.PARTICULAR == 'Net Payable')); //check for Net Receivable and Net Payable\r\n    //console.log(\"abcd\",abcd)\r\n    if(abcd.length > 0 && abcd[0] && abcd[0].AMOUNT){\r\n      if(abcd[0].AMOUNT<0){\r\n        this.PartyBalanceData.NETAMOUNT = abcd[0].AMOUNT * (-1); // send positive netamount for partbalnce print if in negative.\r\n      }else{\r\n        this.PartyBalanceData.NETAMOUNT = abcd[0].AMOUNT;\r\n      }\r\n    }else{\r\n      this.PartyBalanceData.NETAMOUNT = 0;\r\n    }\r\n  })\r\n\r\n \r\n}\r\nreSet(){\r\n  this.PartyInfo = [];\r\n  this.PartyBalanceData = <PARTYBALANCE>{}\r\n}\r\n\r\n// **********For Date Format**************\r\n\r\nchangeEntryDate(value, format: string) {\r\n  //console.log('working');\r\n  var adbs = require(\"ad-bs-converter\");\r\n  if (format == \"AD\") {\r\n      var adDate = (value.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n      var bsDate = adbs.ad2bs(adDate);\r\n      this.PartyBalanceData.BSDATE1 = this.masterService.toADDate(value);\r\n  }\r\n  else if (format == \"BS\") {\r\n    var datearr = value.split('/');\r\n    const bsDate = datearr[2]+\"/\"+datearr[1]+\"/\"+datearr[0];\r\n      // var bsDate = (value.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n      var adDate = adbs.bs2ad(bsDate);\r\n      this.PartyBalanceData.DATE1 = this.masterService.toBSDate(value);\r\n  }\r\n}\r\n\r\nchangeEndDate(value, format: string) {\r\n  var adbs = require(\"ad-bs-converter\");\r\n  if (format == \"AD\") {\r\n      var adDate = (value.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n      var bsDate = adbs.ad2bs(adDate);\r\n      this.PartyBalanceData.BSDATE2 = this.masterService.toADDate(value);\r\n  }\r\n  else if (format == \"BS\") {\r\n    var datearr = value.split('/');\r\n    const bsDate = datearr[2]+\"/\"+datearr[1]+\"/\"+datearr[0];\r\n      // var bsDate = (value.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n      var adDate = adbs.bs2ad(bsDate);\r\n      this.PartyBalanceData.DATE2 = this.masterService.toBSDate(value);\r\n  }\r\n}\r\n\r\n// printPage(){\r\n//   window.print();\r\n// }\r\n\r\n// *****************For Print************************\r\nchangeCursor: boolean;\r\nshowVoucherReplicateButton: boolean;\r\nuserProfile: any = <any>{};\r\nfilename: any;\r\nrownumber: any;\r\nnumtowords: any;\r\n  onPrintClicked() {\r\n    //console.log('Its working');\r\n    // if (this._trnMainService.TrnMainObj.TrntranList.length > 0) {\r\n    //   this.promptPrintDevice = true;\r\n    // } else {\r\n    //   this.alertService.warning(\"No voucher Found for Printing\");\r\n    // }\r\n\r\n    this.showVoucherReplicateButton = false;\r\n    let vat = 606764917;\r\n    // let VATresult = vat.split(\"\");\r\n\r\n    // this.masterService.getPrintFileName(\"PV\").subscribe((res) => {\r\n      // if (res.status == \"ok\") {\r\n        this.filename = 'PARTYBALANCE.ims';\r\n        this.rownumber = 0;\r\n\r\n        this.changeCursor = true;\r\n        this.masterService.getGivenNumberToWords(this.PartyBalanceData.NETAMOUNT).subscribe(\r\n          (res) => {\r\n            if (res.status == \"ok\") {\r\n              this.numtowords = res.result ? res.result[0].NUMTOWORDS : '';\r\n              ////console.log(\"@@numtowords\", this.numtowords);\r\n\r\n              let userdivision = this.userProfile.userDivision ? this.userProfile.userDivision : this.userProfile.CompanyInfo.INITIAL;\r\n              let ADDRESS = this.userProfile.CompanyInfo.ADDRESS;\r\n              this.masterService.getDetailsByUserDivision(userdivision).subscribe((res:any)=>{\r\n                if (res.status == \"ok\") {\r\n                  if(res.result && res.result.length > 0 && res.result[0] && res.result[0].COMADD){\r\n                    ADDRESS =  res.result[0].COMADD;\r\n                  }\r\n                  if(ADDRESS === null || ADDRESS === undefined || ADDRESS === ''){\r\n                    ADDRESS = this.userProfile.CompanyInfo.ADDRESS;\r\n                  }\r\n\r\n              this.PartyBalanceData.DIVISION=this.userProfile.CompanyInfo.INITIAL; // must for SP\r\n              this.PartyBalanceData.PHISCALID=this.userProfile.CompanyInfo.PhiscalID; // must for SP\r\n              this.PartyBalanceData.COMPANYID=this.userProfile.CompanyInfo.COMPANYID; // must for SP\r\n              this.PartyBalanceData.NAME=this.userProfile.CompanyInfo.NAME?this.userProfile.CompanyInfo.NAME:'';\r\n              this.PartyBalanceData.ADDRESS=this.userProfile.CompanyInfo.ADDRESS?this.userProfile.CompanyInfo.ADDRESS:''\r\n              this.PartyBalanceData.VATNO=this.userProfile.CompanyInfo.VAT?this.userProfile.CompanyInfo.VAT:'';\r\n              this.PartyBalanceData.numtowords=this.numtowords?this.numtowords:'';\r\n              this.PartyBalanceData.NETAMOUNT = this.PartyBalanceData.NETAMOUNT?this.PartyBalanceData.NETAMOUNT:0;\r\n              this.PartyBalanceData.COMPANYNAME=this.PartyBalanceData.CUSTOMERNAME?this.PartyBalanceData.CUSTOMERNAME:'';\r\n              this.PartyBalanceData.COMPANYADDRESS=this.PartyBalanceData.COMPANYADDRESS?this.PartyBalanceData.COMPANYADDRESS:'';\r\n              this.PartyBalanceData.PANNO=this.PartyBalanceData.PANNO?this.PartyBalanceData.PANNO:0;\r\n              this.PartyBalanceData.INCLUDECASHTRANSACTION=this.PartyBalanceData.INCLUDECASHTRANSACTION?this.PartyBalanceData.INCLUDECASHTRANSACTION:0\r\n              if(!this.PartyBalanceData.COSTCENTER){\r\n                this.PartyBalanceData.COSTCENTER='%'; // must for SP\r\n              }\r\n              if(!this.PartyBalanceData.ACID){\r\n                this.PartyBalanceData.ACID='%'; // must for SP\r\n              }\r\n              console.log(\"d\",this.PartyBalanceData)\r\n              this.masterService.printPartyBalance(this.filename, this.PartyBalanceData).subscribe(\r\n                (res) => {\r\n                  ////console.log(\"pdfresponse\", res);\r\n\r\n                  const blobUrl = URL.createObjectURL(res.content);\r\n                  const iframe = document.createElement('iframe');\r\n                  iframe.style.display = 'none';\r\n                  iframe.src = blobUrl;\r\n                  document.body.appendChild(iframe);\r\n                  iframe.contentWindow.print();\r\n                  this.changeCursor = false;\r\n\r\n                }\r\n              )\r\n\r\n            }\r\n          })\r\n\r\n\r\n      }\r\n\r\n    })\r\n    this.changeCursor = false;\r\n\r\n  }\r\n\r\n  parttypeChange(){\r\n    this.PartyBalanceData.CUSTOMERNAME=\"\";\r\n    this.PartyBalanceData.ACID=\"\";\r\n  }\r\n\r\n}\r\nexport interface PARTYBALANCE{\r\n  DATE1: Date | string;\r\n  DATE2: Date | string;\r\n  BSDATE1: Date | string;\r\n  BSDATE2: Date | string;\r\n  DIVISION: string;\r\n  PHISCALID: string;\r\n  COMPANYID: string;\r\n  ACID: string;\r\n  COSTCENTER: string;\r\n  CUSTOMERNAME:string;\r\n  COMPANYNAME:string;\r\n  COMPANYADDRESS: string;\r\n  PANNO:number;\r\n  numtowords:string;\r\n  NETAMOUNT:number;\r\n  PARTYTYPE:any;\r\n  INCLUDECASHTRANSACTION:number;\r\n  NAME:string;\r\n  ADDRESS:string;\r\n  VATNO:number;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/pages/AccountVoucher/components/itemwise-depreciation-detail/itemwise-depreciation-detail.component.ts","import { Component, ViewChild } from \"@angular/core\";\r\nimport { TransactionService } from \"../../../../common/Transaction Components/transaction.service\";\r\nimport { PREFIX } from \"../../../../common/interfaces/Prefix.interface\";\r\nimport { VoucherTypeEnum } from \"../../../../common/interfaces/TrnMain\";\r\nimport { TrnMain } from \"../../../../common/interfaces/TrnMain\";\r\nimport { MasterRepo } from \"../../../../common/repositories/masterRepo.service\";\r\nimport { SettingService } from \"../../../../common/services/setting.service\";\r\nimport { EnableLatePost } from \"../../../../common/interfaces\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { SpinnerService } from \"../../../../common/services/spinner/spinner.service\";\r\nimport { AlertService } from \"../../../../common/services/alert/alert.service\";\r\nimport { VoucherSeriesFormComponent } from \"../../../masters/components/Voucher-Series/voucher-series-form.component\";\r\nimport { PrefixComponent } from \"../../../../common/Prefix/prefix.component\";\r\nimport { ModalDirective } from \"ng2-bootstrap\";\r\nimport { TrnTranVoucherEntryComponent } from \"../../../../common/Transaction Components/trntran-voucher-entry.component\";\r\n\r\n@Component({\r\n  selector: \"journal-voucher\",\r\n  template: require('./journal-voucher.component.html'),\r\n  providers: [TransactionService],\r\n  styles: [require('../../../modal-style.css')]\r\n})\r\nexport class JournalVoucherComponent {\r\n  TrnMainObj: TrnMain = <TrnMain>{};\r\n  voucherType: VoucherTypeEnum = VoucherTypeEnum.Journal;\r\n  @ViewChild(\"trnmainentry\") trnmainentry: TrnTranVoucherEntryComponent;\r\n  VoucherLatePostList: EnableLatePost[] = [];\r\n\r\n  constructor(\r\n    private _trnMainService: TransactionService,\r\n    private masterService: MasterRepo,\r\n    private setting: SettingService,\r\n    private _activatedRoute: ActivatedRoute,\r\n    private _loadingSerive: SpinnerService,\r\n    private _alertService: AlertService\r\n  ) {\r\n    this.TrnMainObj = _trnMainService.TrnMainObj;\r\n    this._trnMainService.initialFormLoad(12)\r\n    this.voucherType = VoucherTypeEnum.Journal;\r\n    this._trnMainService.DrillMode = \"New\";\r\n  }\r\n \r\n\r\n  ngOnInit() {\r\n    this._activatedRoute.queryParams.subscribe(params => {\r\n      if (params['mode']==\"DRILL\") {\r\n        \r\n        let VCHR = params['voucher']\r\n        let vparams = [];\r\n        this.masterService.SelectedRepDiv = params['Div'];\r\n        this._trnMainService.DrillMode = params['mode'];\r\n        vparams = VCHR.split('-')\r\n        this._loadingSerive.show(\"Loading Invoice\")\r\n        this.masterService.LoadTransaction(VCHR, vparams[1], vparams[2]).subscribe((res) => {\r\n          if (res.status == \"ok\") {\r\n            this._loadingSerive.hide()\r\n            this._trnMainService.TrnMainObj = res.result;\r\n            this._trnMainService.TrnMainObj.VoucherType = 12;\r\n            this._trnMainService.pageHeading = \"Journal\";\r\n            this._trnMainService.TrnMainObj.VoucherPrefix = \"JV\";\r\n            this._trnMainService.TrnMainObj.Mode = \"VIEW\";\r\n            this._trnMainService.viewDate.next();\r\n            this._trnMainService.calculateCrDrTotal();\r\n            this._trnMainService.calculateDrCrDifferences()\r\n          }\r\n        }, err => {\r\n          this._loadingSerive.hide()\r\n          this._alertService.error(err)\r\n        })\r\n\r\n      }\r\n      else if (params['mode']==\"fromLatepost\") {\r\n        // alert(\"params['mode']==fromLatepost\")\r\n        this._loadingSerive.show(\"Loading Invoice\")\r\n        this.masterService.LoadTransaction(params.voucher, params.DIVISION, params.PHISCALID).subscribe((res) => {\r\n          if (res.status == \"ok\") {\r\n            this._loadingSerive.hide()\r\n            this._trnMainService.TrnMainObj = res.result;\r\n            this._trnMainService.TrnMainObj.VoucherType = 12;\r\n            this._trnMainService.pageHeading = \"Journal\";\r\n            this._trnMainService.TrnMainObj.VoucherPrefix = \"JV\";\r\n            this._trnMainService.TrnMainObj.Mode = \"VIEW\";\r\n            this._trnMainService.viewDate.next();\r\n          }\r\n        }, err => {\r\n          this._loadingSerive.hide()\r\n          this._alertService.error(err)\r\n        })\r\n\r\n      }\r\n      else {\r\n        this.TrnMainObj.Mode = \"NEW\";\r\n        this.masterService.ShowMore = false;\r\n        this.masterService.getEnableLatePost().subscribe(res => {\r\n          if (res.status == \"ok\") {\r\n            this.VoucherLatePostList = res.result\r\n            for (let i of this.VoucherLatePostList) {\r\n\r\n              if (i.VoucherName == 'JournalVoucher') {\r\n\r\n                if (i.Status == 1) {\r\n\r\n                  this._trnMainService.TrnMainObj.isVoucherLatePostEnable = 1;\r\n                }\r\n\r\n              }\r\n            }\r\n          }\r\n\r\n        })\r\n      }\r\n    });\r\n    ////console.log(\"ChecksESSION\",this.masterService.PhiscalObj.USER_PROFILE,this.masterService.PhiscalObj.setting)\r\n  }\r\n \r\n  BillTrack() {\r\n    this.trnmainentry.BillTrack()\r\n  }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/pages/AccountVoucher/components/journal/journal-voucher.component.ts","import { Component, ViewChild } from '@angular/core';\r\nimport { TransactionService } from '../../../../common/Transaction Components/transaction.service';\r\nimport { GenericPopUpComponent, GenericPopUpSettings } from '../../../../common/popupLists/generic-grid/generic-popup-grid.component';\r\nimport { MasterRepo } from '../../../../common/repositories/masterRepo.service';\r\nimport { AuthService } from '../../../../common/services/permission/authService.service';\r\nimport { TwoDigitNumber } from '../../../../theme/pipes';\r\nimport { SpinnerService } from '../../../../common/services/spinner/spinner.service';\r\nimport { AlertService } from '../../../../common/services/alert/alert.service';\r\n@Component({\r\n  selector: 'party-balance-confirmation',\r\n  template: require('./party-balance-confirmation.component.html'),\r\n  providers: [TwoDigitNumber]\r\n  // styles: [require('./party-balance-confirmation.component.styl')]\r\n})\r\nexport class PartyBalanceConfirmationComponent {\r\n\r\n  @ViewChild(\"genericGridACList\") genericGridACList: GenericPopUpComponent;\r\n  gridACListPopupSettings: GenericPopUpSettings = new GenericPopUpSettings();\r\n\r\n  rowIndex = 0;\r\n  custAcid: any;\r\n  customerName: string;\r\n\r\n  PartyInfo = [];\r\n  costlists = [];\r\n  public PartyBalanceData: PARTYBALANCE = <PARTYBALANCE>{}\r\n\r\n\r\n\r\n\r\n  constructor(\r\n    private _transactionService: TransactionService,\r\n    private alterService: AlertService,\r\n    private spinnerService: SpinnerService,\r\n    public masterService: MasterRepo,\r\n    private authService: AuthService,\r\n  ) {\r\n    this.userProfile = this.authService.getUserProfile();\r\n    this.PartyBalanceData.DATE1 = this.masterService.PhiscalObj.BeginDate.split('T')[0];\r\n    this.changeEntryDate(this.PartyBalanceData.DATE1, \"AD\");\r\n    this.PartyBalanceData.DATE2 = this.masterService.PhiscalObj.EndDate.split('T')[0];\r\n    this.changeEndDate(this.PartyBalanceData.DATE2, \"AD\");\r\n    this.PartyBalanceData.INCLUDECASHTRANSACTION = 0;\r\n    this.PartyBalanceData.INCLUDEACBASECNDN = 0;\r\n    this.masterService.getAllNEWCostCenter().subscribe(res => {\r\n      if (res) {\r\n        this.costlists = res.result;\r\n      }\r\n    }, error => {\r\n      this.costlists = [];\r\n    });\r\n    this.PartyBalanceData.PARTYTYPE = \"C\";\r\n\r\n  }\r\n\r\n  showAcList(i) {\r\n    this._transactionService.TrnMainObj.TRNMODE = \"SinglePayment_Party\";\r\n    var TRNMODE = `${this._transactionService.TrnMainObj.TRNMODE}`;\r\n    if (this.PartyBalanceData.PARTYTYPE == \"C\") {\r\n      TRNMODE = \"PartyBalance_Customer\";\r\n    } else {\r\n      TRNMODE = \"SinglePayment_Party\";\r\n    }\r\n    this.gridACListPopupSettings = {\r\n      title: \"Accounts\",\r\n      apiEndpoints: `/getAccountPagedListByMapId/Details/${TRNMODE}`,\r\n      defaultFilterIndex: 1,\r\n      columns: [\r\n        {\r\n          key: \"ACID\",\r\n          title: \"AC CODE\",\r\n          hidden: false,\r\n          noSearch: false\r\n        },\r\n        {\r\n          key: \"ACNAME\",\r\n          title: \"A/C NAME\",\r\n          hidden: false,\r\n          noSearch: false\r\n        }\r\n      ]\r\n    };\r\n\r\n    this.genericGridACList.show();\r\n\r\n\r\n  }\r\n  // ngOnInit(){\r\n  //   this.changeEntryDate(this.PartyBalanceData.DATE1, \"AD\");\r\n  //   this.changeEndDate(this.PartyBalanceData.DATE2, \"AD\");\r\n\r\n  // }\r\n\r\n  onAcSelect(acItem) {\r\n    //console.log('sdgfgsdh', acItem);\r\n    this.PartyBalanceData.CUSTOMERNAME = acItem.ACNAME;\r\n    this.PartyBalanceData.ACID = acItem.ACID;\r\n    this.PartyBalanceData.PANNO = acItem.VATNO\r\n    this.PartyBalanceData.COMPANYADDRESS = acItem.ADDRESS\r\n    //  this.setFocus();\r\n\r\n  }\r\n\r\n  setFocus() {\r\n    document.getElementById('Name0').focus();\r\n  }\r\n  onLoad() {\r\n    // //console.log('hello its working',this.PartyBalanceData);\r\n    this.PartyBalanceData.DIVISION = this.userProfile.CompanyInfo.INITIAL;\r\n    this.PartyBalanceData.PHISCALID = this.userProfile.CompanyInfo.PhiscalID;\r\n    this.PartyBalanceData.COMPANYID = this.userProfile.CompanyInfo.COMPANYID;\r\n    this.PartyBalanceData.SUMMARY  = 1;\r\n    if (!this.PartyBalanceData.COSTCENTER) {\r\n      this.PartyBalanceData.COSTCENTER = '%';\r\n    }\r\n    if (!this.PartyBalanceData.ACID) {\r\n      this.PartyBalanceData.ACID = '%';\r\n    }\r\n    \r\n    this.spinnerService.show(\"Data Loading...\");\r\n    this.masterService.LoadPartyBalanceData(this.PartyBalanceData).subscribe(res => {\r\n      //console.log(\"@@@res.result\",res.result)\r\n      this.PartyInfo = res.result;\r\n      let abcd = this.PartyInfo.filter(x => (x.PARTICULAR == 'Net Receivable' || x.PARTICULAR == 'Net Payable')); //check for Net Receivable and Net Payable\r\n      //console.log(\"abcd\",abcd)\r\n      this.spinnerService.hide();\r\n      if (abcd.length > 0 && abcd[0] && abcd[0].AMOUNT) {\r\n        if (abcd[0].AMOUNT < 0) {\r\n          this.PartyBalanceData.NETAMOUNT = abcd[0].AMOUNT * (-1); // send positive netamount for partbalnce print if in negative.\r\n        } else {\r\n          this.PartyBalanceData.NETAMOUNT = abcd[0].AMOUNT;\r\n        }\r\n      } else {\r\n        this.PartyBalanceData.NETAMOUNT = 0;\r\n      }\r\n    },error => {\r\n      this.alterService.error(error._body);\r\n      this.spinnerService.hide();\r\n    })\r\n\r\n\r\n  }\r\n  reSet() {\r\n    this.PartyInfo = [];\r\n    this.PartyBalanceData = <PARTYBALANCE>{}\r\n  }\r\n\r\n  // **********For Date Format**************\r\n\r\n  changeEntryDate(value, format: string) {\r\n    //console.log('working');\r\n    var adbs = require(\"ad-bs-converter\");\r\n    if (format == \"AD\") {\r\n      var adDate = (value.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n      var bsDate = adbs.ad2bs(adDate);\r\n      this.PartyBalanceData.BSDATE1 = this.masterService.toBSDate(value);\r\n    }\r\n    else if (format == \"BS\") {\r\n      var datearr = value.split('/');\r\n      const bsDate = datearr[2] + \"/\" + datearr[1] + \"/\" + datearr[0];\r\n      // var bsDate = (value.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n      var adDate = adbs.bs2ad(bsDate);\r\n      this.PartyBalanceData.DATE1 = this.masterService.toADDate(value);\r\n    }\r\n  }\r\n\r\n  changeEndDate(value, format: string) {\r\n    var adbs = require(\"ad-bs-converter\");\r\n    if (format == \"AD\") {\r\n      var adDate = (value.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n      var bsDate = adbs.ad2bs(adDate);\r\n      this.PartyBalanceData.BSDATE2 = this.masterService.toBSDate(value);\r\n    }\r\n    else if (format == \"BS\") {\r\n      var datearr = value.split('/');\r\n      const bsDate = datearr[2] + \"/\" + datearr[1] + \"/\" + datearr[0];\r\n      // var bsDate = (value.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n      var adDate = adbs.bs2ad(bsDate);\r\n      this.PartyBalanceData.DATE2 = this.masterService.toADDate(value);\r\n    }\r\n  }\r\n\r\n  // printPage(){\r\n  //   window.print();\r\n  // }\r\n\r\n  // *****************For Print************************\r\n  changeCursor: boolean;\r\n  showVoucherReplicateButton: boolean;\r\n  userProfile: any = <any>{};\r\n  filename: any;\r\n  rownumber: any;\r\n  numtowords: any;\r\n  onPrintClicked() {\r\n    //console.log('Its working');\r\n    // if (this._trnMainService.TrnMainObj.TrntranList.length > 0) {\r\n    //   this.promptPrintDevice = true;\r\n    // } else {\r\n    //   this.alertService.warning(\"No voucher Found for Printing\");\r\n    // }\r\n\r\n    this.showVoucherReplicateButton = false;\r\n    let vat = 606764917;\r\n    // let VATresult = vat.split(\"\");\r\n\r\n    // this.masterService.getPrintFileName(\"PV\").subscribe((res) => {\r\n    // if (res.status == \"ok\") {\r\n    this.filename = 'PARTYBALANCE.ims';\r\n    this.rownumber = 0;\r\n\r\n    this.changeCursor = true;\r\n    this.masterService.getGivenNumberToWords(this.PartyBalanceData.NETAMOUNT).subscribe(\r\n      (res) => {\r\n        if (res.status == \"ok\") {\r\n          this.numtowords = res.result ? res.result[0].NUMTOWORDS : '';\r\n          ////console.log(\"@@numtowords\", this.numtowords);\r\n\r\n          let userdivision = this.userProfile.userDivision ? this.userProfile.userDivision : this.userProfile.CompanyInfo.INITIAL;\r\n          let ADDRESS = this.userProfile.CompanyInfo.ADDRESS;\r\n          this.masterService.getDetailsByUserDivision(userdivision).subscribe((res: any) => {\r\n            if (res.status == \"ok\") {\r\n              if (res.result && res.result.length > 0 && res.result[0] && res.result[0].COMADD) {\r\n                ADDRESS = res.result[0].COMADD;\r\n              }\r\n              if (ADDRESS === null || ADDRESS === undefined || ADDRESS === '') {\r\n                ADDRESS = this.userProfile.CompanyInfo.ADDRESS;\r\n              }\r\n\r\n              this.PartyBalanceData.DIVISION = this.userProfile.CompanyInfo.INITIAL; // must for SP\r\n              this.PartyBalanceData.PHISCALID = this.userProfile.CompanyInfo.PhiscalID; // must for SP\r\n              this.PartyBalanceData.COMPANYID = this.userProfile.CompanyInfo.COMPANYID; // must for SP\r\n              this.PartyBalanceData.NAME = this.userProfile.CompanyInfo.NAME ? this.userProfile.CompanyInfo.NAME : '';\r\n              this.PartyBalanceData.ADDRESS = this.userProfile.CompanyInfo.ADDRESS ? this.userProfile.CompanyInfo.ADDRESS : ''\r\n              this.PartyBalanceData.VATNO = this.userProfile.CompanyInfo.VAT ? this.userProfile.CompanyInfo.VAT : '';\r\n              this.PartyBalanceData.numtowords = this.numtowords ? this.numtowords : '';\r\n              this.PartyBalanceData.NETAMOUNT = this.PartyBalanceData.NETAMOUNT ? this.PartyBalanceData.NETAMOUNT : 0;\r\n              this.PartyBalanceData.COMPANYNAME = this.PartyBalanceData.CUSTOMERNAME ? this.PartyBalanceData.CUSTOMERNAME : '';\r\n              this.PartyBalanceData.COMPANYADDRESS = this.PartyBalanceData.COMPANYADDRESS ? this.PartyBalanceData.COMPANYADDRESS : '';\r\n              this.PartyBalanceData.PANNO = this.PartyBalanceData.PANNO ? this.PartyBalanceData.PANNO : 0;\r\n              this.PartyBalanceData.INCLUDECASHTRANSACTION = this.PartyBalanceData.INCLUDECASHTRANSACTION ? this.PartyBalanceData.INCLUDECASHTRANSACTION : 0\r\n              this.PartyBalanceData.INCLUDEACBASECNDN  = this.PartyBalanceData.INCLUDEACBASECNDN  ? this.PartyBalanceData.INCLUDEACBASECNDN  : 0\r\n              if (!this.PartyBalanceData.COSTCENTER) {\r\n                this.PartyBalanceData.COSTCENTER = '%'; // must for SP\r\n              }\r\n              if (!this.PartyBalanceData.ACID) {\r\n                this.PartyBalanceData.ACID = '%'; // must for SP\r\n              }\r\n              console.log(\"d\", this.PartyBalanceData)\r\n              this.masterService.printPartyBalance(this.filename, this.PartyBalanceData).subscribe(\r\n                (res) => {\r\n                  ////console.log(\"pdfresponse\", res);\r\n\r\n                  const blobUrl = URL.createObjectURL(res.content);\r\n                  const iframe = document.createElement('iframe');\r\n                  iframe.style.display = 'none';\r\n                  iframe.src = blobUrl;\r\n                  document.body.appendChild(iframe);\r\n                  iframe.contentWindow.print();\r\n                  this.changeCursor = false;\r\n\r\n                }\r\n              )\r\n\r\n            }\r\n          })\r\n\r\n\r\n        }\r\n\r\n      })\r\n    this.changeCursor = false;\r\n\r\n  }\r\n\r\n  parttypeChange() {\r\n    this.PartyBalanceData.CUSTOMERNAME = \"\";\r\n    this.PartyBalanceData.ACID = \"\";\r\n  }\r\n\r\n}\r\nexport interface PARTYBALANCE {\r\n  DATE1: Date | string;\r\n  DATE2: Date | string;\r\n  BSDATE1: Date | string;\r\n  BSDATE2: Date | string;\r\n  DIVISION: string;\r\n  PHISCALID: string;\r\n  COMPANYID: string;\r\n  ACID: string;\r\n  COSTCENTER: string;\r\n  CUSTOMERNAME: string;\r\n  COMPANYNAME: string;\r\n  COMPANYADDRESS: string;\r\n  PANNO: number;\r\n  numtowords: string;\r\n  NETAMOUNT: number;\r\n  PARTYTYPE: any;\r\n  INCLUDECASHTRANSACTION: number;\r\n  INCLUDEACBASECNDN:number;\r\n  NAME: string;\r\n  ADDRESS: string;\r\n  VATNO: number;\r\n  SUMMARY :number;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/pages/AccountVoucher/components/party-balance-confirmation/party-balance-confirmation.component.ts","import { Component, OnDestroy, ViewChild } from \"@angular/core\";\r\nimport { TransactionService } from \"../../../../common/Transaction Components/transaction.service\";\r\nimport { PREFIX } from \"../../../../common/interfaces/Prefix.interface\";\r\nimport { VoucherTypeEnum } from \"../../../../common/interfaces/TrnMain\";\r\nimport { TrnMain } from \"../../../../common/interfaces/TrnMain\";\r\nimport { MasterRepo } from \"../../../../common/repositories/masterRepo.service\";\r\nimport { Router, ActivatedRoute } from \"@angular/router\";\r\nimport { Subscription } from \"rxjs/Subscription\";\r\nimport { HotkeysService, Hotkey } from \"angular2-hotkeys\";\r\nimport { SettingService } from \"../../../../common/services/setting.service\";\r\nimport {\r\n  FormGroup,\r\n  FormControl,\r\n  FormBuilder,\r\n  Validators\r\n} from \"@angular/forms\";\r\nimport { AppSettings } from \"../../../../common/services/AppSettings\";\r\nimport { BehaviorSubject } from \"rxjs/BehaviorSubject\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { MdDialog } from \"@angular/material\";\r\nimport { MessageDialog } from \"../../../modaldialogs/messageDialog/messageDialog.component\";\r\nimport { TAcList } from \"../../../../common/interfaces/Account.interface\";\r\nimport { Subscriber } from \"rxjs/Subscriber\";\r\nimport { AutoComplete } from \"primeng/components/autocomplete/autocomplete\";\r\nimport { PartyOpeningDetailsPopUpComponent } from \"../../../../common/popupLists/party-opening-details-popup/party-opening-details-popup.component\";\r\nimport { AlertService } from \"../../../../common/services/alert/alert.service\";\r\n//import { MdDialog } from \"@angular/material/material\";\r\n\r\n@Component({\r\n  selector: \"party-opening-balance\",\r\n  template: require('./party-opening-balance.component.html'),\r\n  providers: [TransactionService]\r\n})\r\nexport class PartyOpeningBalance {\r\n  \r\n  TrnMainObj: TrnMain;\r\n  voucherType: VoucherTypeEnum = VoucherTypeEnum.PartyOpeningBalance;\r\n  prefix: PREFIX = <PREFIX>{};\r\n  argument: any;\r\n  printInvoice: any;\r\n  form: FormGroup;\r\n  accountList: TAcList[];\r\n  dialogMessageSubject: BehaviorSubject<string> = new BehaviorSubject<string>(\r\n    \"\"\r\n  );\r\n  dialogMessage$: Observable<string> = this.dialogMessageSubject.asObservable();\r\n\r\n  results: Observable<TAcList[]>;\r\n  selectedAccount: TAcList;\r\n  TranList: any[] = [];\r\n  TotalDebit: number;\r\n  TotalCredit: number;\r\n  previousOpeningAccountData: any[] = [];\r\n\r\n \r\n  constructor(\r\n    public masterService: MasterRepo,\r\n    private _trnMainService: TransactionService, \r\n    private setting: SettingService, \r\n    private AppSettings: AppSettings,\r\n    public dialog: MdDialog,\r\n    private alertService: AlertService,\r\n  ) {\r\n    this.TrnMainObj = this._trnMainService.TrnMainObj;\r\n    this.TrnMainObj.DIVISION = this.AppSettings.DefaultDivision;\r\n    this._trnMainService.initialFormLoad(23);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.TrnMainObj.Mode = \"NEW\";\r\n    this.masterService.ShowMore = false;\r\n    this.voucherType = this._trnMainService.TrnMainObj.VoucherType\r\n  }  \r\n  \r\n  \r\n  prefixChanged(pref: any) {\r\n    try {\r\n      this._trnMainService.prefix = pref;\r\n      this.prefix = pref;\r\n      if (this.TrnMainObj.Mode == \"NEW\") {\r\n        if (\r\n          this.TrnMainObj.DIVISION == \"\" ||\r\n          this.TrnMainObj.DIVISION == null\r\n        ) {\r\n          this.TrnMainObj.DIVISION = this.setting.appSetting.DefaultDivision;\r\n        }\r\n        this.masterService.getVoucherNo(this.TrnMainObj).subscribe(res => {\r\n          if (res.status == \"ok\") {\r\n            let TMain = <TrnMain>res.result;\r\n            this.TrnMainObj.VCHRNO = TMain.VCHRNO.substr(\r\n              2,\r\n              TMain.VCHRNO.length - 2\r\n            );\r\n            this.TrnMainObj.CHALANNO = TMain.CHALANNO;\r\n          } else {\r\n            alert(\"Failed to retrieve VoucherNo\");\r\n          }\r\n        });\r\n      }\r\n    } catch (ex) {\r\n       alert(ex);\r\n    }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/pages/AccountVoucher/components/party-opening-balance/party-opening-balance.component.ts","import { Component, ViewChild, ElementRef, PLATFORM_ID, Inject } from \"@angular/core\";\r\nimport { MasterRepo } from \"../../../../common/repositories/masterRepo.service\";\r\nimport * as moment from 'moment';\r\nimport { PartyReconciliationService } from \"./party-reconciliation.service\";\r\nimport { GenericPopUpComponent, GenericPopUpSettings } from \"../../../../common/popupLists/generic-grid/generic-popup-grid.component\";\r\nimport { BankReconciliation, Reconcile } from \"../../../../common/interfaces/bank-reconciliation.interface\";\r\nimport { isPlatformBrowser, DatePipe } from \"@angular/common\";\r\nimport { SpinnerService } from \"../../../../common/services/spinner/spinner.service\";\r\nimport { AlertService } from \"../../../../common/services/alert/alert.service\";\r\nimport { stringify } from \"querystring\";\r\nimport { TransactionService } from \"../../../../common/Transaction Components/transaction.service\";\r\n\r\n@Component({\r\n    selector: 'party-reconciliation',\r\n    template: require('./party-reconciliation.component.html'),\r\n    providers: [PartyReconciliationService],\r\n    styles: [require('../../../Style.css')]\r\n\r\n})\r\n\r\nexport class PartyReconciliationComponent {\r\n\r\n    @ViewChild(\"bankReconciliationGeneric\") bankReconciliationGeneric: GenericPopUpComponent;\r\n    gridbankReconciliationPopupSettings: GenericPopUpSettings = new GenericPopUpSettings();\r\n\r\n    @ViewChild(\"check\") check: ElementRef;\r\n\r\n\r\n    PartyReconciliationObj: BankReconciliation = new BankReconciliation();\r\n    reconcileListObj: Reconcile = new Reconcile();\r\n    public selectedValue: any;\r\n    public reconcileList: Reconcile[] = [];\r\n    public balanceAsPerCompanyBook: any[] = [];\r\n    public amountNotReflectedOnBank: any[] = [];\r\n    public notReflectedonBankDebit: number = 0;\r\n    public notReflectedonBankCredit: number = 0;\r\n    public balanceAsPerBankDebit: number = 0;\r\n    public balanceAsperBankCredit: number = 0;\r\n    public differenceDebit: number = 0;\r\n    public differenceCredit: number = 0;\r\n    public companybook: number = 0;\r\n    public resBalance: number = 0;\r\n    public resDifference: number = 0;\r\n    public showCompanybook: boolean;\r\n    public reflectedBank: boolean;\r\n    public inValue: any;\r\n    public showBankDate: boolean;\r\n\r\n    public bDate: boolean;\r\n\r\n\r\n    @ViewChild('bankInput') bankInput;\r\n\r\n    selectedDate: { startDate: moment.Moment, endDate: moment.Moment };\r\n    alwaysShowCalendars: boolean = true;\r\n    ranges: any = {\r\n        'Today': [moment(), moment()],\r\n        'Yesterday': [moment().subtract(1, 'days'), moment().subtract(1, 'days')],\r\n        'Last 7 Days': [moment().subtract(6, 'days'), moment()],\r\n        'Last 30 Days': [moment().subtract(29, 'days'), moment()],\r\n        'This Month': [moment().startOf('month'), moment().endOf('month')],\r\n        'Last Month': [moment().subtract(1, 'month').startOf('month'), moment().subtract(1, 'month').endOf('month')],\r\n        'Financial Year': [moment().set('date', 1).set('month', 3), moment().endOf('month').set('month', 2).add(1, 'year')],\r\n\r\n    }\r\n    locale = {\r\n        format: 'DD/MM/YYYY',\r\n        direction: 'ltr', // could be rtl\r\n        weekLabel: 'W',\r\n        separator: ' - ', // default is ' - '\r\n        cancelLabel: 'Cancel', // detault is 'Cancel'\r\n        applyLabel: 'Okay', // detault is 'Apply'\r\n        clearLabel: 'Clear', // detault is 'Clear'\r\n        customRangeLabel: 'Custom Range',\r\n        daysOfWeek: moment.weekdaysMin(),\r\n        monthNames: moment.monthsShort(),\r\n        firstDay: 0 // first day is monday\r\n    }\r\n\r\n    constructor(@Inject(PLATFORM_ID) private platformId: Object,\r\n     public masterService: MasterRepo, \r\n     private partyReconciliationService: PartyReconciliationService, \r\n     private spinnerService: SpinnerService,\r\n     private alertSerivces: AlertService,\r\n     private _transactionService: TransactionService,\r\n      ) {\r\n        this.masterService.ShowMore = true;\r\n        this.showBankDate = false;\r\n        this.selectedDate = {\r\n            startDate: moment(),\r\n            endDate: moment()\r\n        }\r\n\r\n        this.showCompanybook = false;\r\n        this.reflectedBank = false;\r\n\r\n        this.PartyReconciliationObj.DATE1 = new Date().toJSON().split('T')[0];\r\n        this.PartyReconciliationObj.DATE2 = new Date().toJSON().split('T')[0];\r\n        this.changeEntryDate(this.PartyReconciliationObj.DATE1, \"AD\");\r\n        this.changeEndDate(this.PartyReconciliationObj.DATE2, \"AD\");\r\n        this.PartyReconciliationObj.PARTYTYPE=\"C\";\r\n\r\n    }\r\n\r\n\r\n    onItemDoubleClick(event) {\r\n        this.selectedValue = event;\r\n        this.PartyReconciliationObj.ACNAME = this.selectedValue.ACNAME;\r\n        this.PartyReconciliationObj.ACID = this.selectedValue.ACID;\r\n        this.onLoadClick();\r\n    }\r\n\r\n\r\n    onSaveExcelClick() {\r\n\r\n    }\r\n\r\n    onLoadClick() {\r\n        this.spinnerService.show('Loading Data .. ');\r\n        this.notReflectedonBankDebit = 0;\r\n        this.notReflectedonBankCredit = 0;\r\n        this.balanceAsPerBankDebit = 0;\r\n        this.balanceAsperBankCredit = 0;\r\n        this.differenceDebit = 0;\r\n        this.differenceCredit = 0;\r\n        this.companybook = 0;\r\n        this.resBalance = 0;\r\n        this.resDifference = 0;\r\n        this.PartyReconciliationObj.COMPANYID = this.masterService.userProfile.CompanyInfo.COMPANYID;\r\n        this.PartyReconciliationObj.PHISCALID = this.masterService.PhiscalObj.PhiscalID;\r\n       this.PartyReconciliationObj.DIV = this.masterService.userProfile.CompanyInfo.INITIAL;\r\n        this.partyReconciliationService.getPartyReconcileList(this.PartyReconciliationObj)\r\n            .subscribe((res) => {\r\n                var reconcileResult = res.result;\r\n                if (res.status == 'ok') {\r\n                    this.reconcileList = res.result.result\r\n\r\n                    if (!this.reconcileList || !this.reconcileList.length) {\r\n                        this.alertSerivces.error('Could not found data');\r\n                    }\r\n                    this.amountNotReflectedOnBank = res.result.amountNotReflectedOnBank\r\n                    this.balanceAsPerCompanyBook = res.result.balanceAsPerCompanyBook\r\n                    if (this.balanceAsPerCompanyBook == null) { this.showCompanybook = false; }\r\n                    else {\r\n                        if (this.balanceAsPerCompanyBook.length > 0) {\r\n                            this.showCompanybook = true;\r\n                        } else {\r\n                            this.showCompanybook = false;\r\n                        }\r\n                    }\r\n                    if (this.amountNotReflectedOnBank == null)\r\n                     {\r\n                          this.reflectedBank = false; \r\n                    }\r\n                    else {\r\n                        if (this.amountNotReflectedOnBank.length > 0) {\r\n                            this.reflectedBank = true;\r\n                        } else {\r\n                            this.reflectedBank = false;\r\n                        }\r\n                    }\r\n                    this.buildCheckBox()\r\n                    this.DebitCreditCalculate()\r\n                    this.spinnerService.hide()\r\n                } else {\r\n                    this.spinnerService.hide()\r\n                    this.alertSerivces.error(\"Error\" + res.result)\r\n                }\r\n\r\n            })\r\n    }\r\n    buildCheckBox() {\r\n        for (let i in this.reconcileList) {\r\n            this.reconcileList[i].isChecked = false\r\n            if (this.reconcileList[i].BANKDATE == undefined || this.reconcileList[i].BANKDATE == null || String(this.reconcileList[i].BANKDATE) == '') {\r\n                this.reconcileList[i].isReconciled = false\r\n            } else {\r\n                this.reconcileList[i].isReconciled = true\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * Save Function to Save Bank Reconcilation\r\n     */\r\n    onSaveClick() {\r\n        let x = this.reconcileList.filter(x => x.isChecked == true)\r\n        if (x.length == 0) {\r\n            this.alertSerivces.error(\"Please Select at least one voucher\");\r\n            return;\r\n        } else {\r\n            this.spinnerService.show(\"Saving Data. Please Wait!\")\r\n            this.partyReconciliationService.savePartyReconciliation(this.reconcileList.filter(x => x.isChecked == true))\r\n                .subscribe((res) => {\r\n                    if (res.status == \"ok\") {\r\n                        this.spinnerService.hide()\r\n                        this.alertSerivces.success(\"Reconciled  Successfully\");\r\n                        this.reconcileList = null;\r\n                        if (this.reconcileList === undefined) {\r\n                        }\r\n                        this.PartyReconciliationObj = new BankReconciliation();\r\n                        this.PartyReconciliationObj.DATE1 = new Date().toJSON().split('T')[0];\r\n                        this.PartyReconciliationObj.DATE2 = new Date().toJSON().split('T')[0];\r\n                        this.changeEntryDate(this.PartyReconciliationObj.DATE1, \"AD\");\r\n                        this.changeEndDate(this.PartyReconciliationObj.DATE2, \"AD\");\r\n                    } else {\r\n                        this.spinnerService.hide()\r\n                        this.alertSerivces.error(\"Error\" + res.error);\r\n                    }\r\n                }, error => {\r\n                    this.spinnerService.hide()\r\n                    this.alertSerivces.error(error)\r\n                })\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n    dateChanged() {\r\n        this.PartyReconciliationObj.DATE1 = moment(this.selectedDate.startDate).format('YYYY-MM-DD HH:mm:ss')\r\n        this.PartyReconciliationObj.DATE2 = moment(this.selectedDate.endDate).format('YYYY-MM-DD HH:mm:ss')\r\n    }\r\n\r\n    onBankReconciliationPopUPTab() {\r\n        var TRNMODE = \"Party Payment\";\r\n        if(this.PartyReconciliationObj.PARTYTYPE==\"C\"){\r\n            TRNMODE=\"PartyBalance_Customer\";\r\n          }else{\r\n          TRNMODE = \"Party Payment\";\r\n          }\r\n        this.gridbankReconciliationPopupSettings = {\r\n            title: \"Party Name \",\r\n            apiEndpoints: `/getAccountPagedListByMapId/Details/${TRNMODE}`,\r\n            defaultFilterIndex: 0,\r\n            columns: [\r\n                {\r\n                    key: \"ACID\",\r\n                    title: \"Party No.\",\r\n                    hidden: false,\r\n                    noSearch: false\r\n                },\r\n                {\r\n                    key: \"ACNAME\",\r\n                    title: \"Party Name\",\r\n                    hidden: false,\r\n                    noSearch: false\r\n                }\r\n\r\n            ]\r\n        };\r\n        this.bankReconciliationGeneric.show();\r\n    }\r\n\r\n    itemChecked(event, i: any) {\r\n        if (event.target.checked) {\r\n            this.reconcileList[i].isChecked = true;\r\n            this.showBankDate = true;\r\n            this.notReflectedonBankDebit = 0;\r\n            this.notReflectedonBankCredit = 0;\r\n            this.balanceAsPerBankDebit = 0;\r\n            this.balanceAsperBankCredit = 0;\r\n            this.differenceDebit = 0;\r\n            this.differenceCredit = 0;\r\n            // document.getElementById(\"bankDate\" + i).focus();\r\n\r\n\r\n        } else {\r\n            this.reconcileList[i].isChecked = false;\r\n            this.showBankDate = false;\r\n            this.notReflectedonBankDebit = 0;\r\n            this.notReflectedonBankCredit = 0;\r\n            this.balanceAsPerBankDebit = 0;\r\n            this.balanceAsperBankCredit = 0;\r\n            this.differenceDebit = 0;\r\n            this.differenceCredit = 0;\r\n            for (let i in this.reconcileList) {\r\n                if (this.reconcileList[i].isReconciled == false) {\r\n                    this.reconcileList[i].BANKDATE = null;\r\n                }\r\n            }\r\n        }\r\n        this.DebitCreditCalculate();\r\n    }\r\n\r\n    DebitCreditCalculate() {\r\n        this.notReflectedonBankDebit = 0;\r\n        this.notReflectedonBankCredit = 0;\r\n        this.balanceAsPerBankDebit = 0;\r\n        this.balanceAsperBankCredit = 0;\r\n        if (this.reconcileList == null) return;\r\n        this.reconcileList.filter(x => isNaN(Date.parse(String(x.BANKDATE)))).forEach(i => {\r\n            this.notReflectedonBankCredit += this._transactionService.nullToReturnZero(i.CRAMNT);\r\n            this.notReflectedonBankDebit += this._transactionService.nullToReturnZero(i.DRAMNT)\r\n        });\r\n\r\n        if (this.balanceAsPerCompanyBook[0] != null) {\r\n            let r = this.balanceAsPerCompanyBook[0].DRAMNT - (this.notReflectedonBankDebit - this.notReflectedonBankCredit);\r\n            if (r > 0) {\r\n                this.balanceAsPerBankDebit = r;\r\n\r\n            }\r\n            else {\r\n                this.balanceAsperBankCredit = r;\r\n\r\n            }\r\n            let s = this.balanceAsPerCompanyBook[0].DRAMNT - r;\r\n            if (s > 0) {\r\n\r\n                this.differenceDebit = s;\r\n            }\r\n            else {\r\n\r\n                this.differenceCredit = s;\r\n            }\r\n        }\r\n    }\r\n    parseFloat(param: any) {\r\n        return parseFloat(param).toFixed(2);\r\n    }\r\n\r\n    KeyUpMethod(o: any) {\r\n        for (let i in this.reconcileList) {\r\n            if (this.reconcileList[i].isReconciled == false) {\r\n                this.reconcileList[i].isChecked = true\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    BankDateFocus() {\r\n        this.bDate = false\r\n        this.notReflectedonBankDebit = 0;\r\n        this.notReflectedonBankCredit = 0;\r\n        this.balanceAsPerBankDebit = 0;\r\n        this.balanceAsperBankCredit = 0;\r\n        this.differenceDebit = 0;\r\n        this.differenceCredit = 0;\r\n        for (let i in this.reconcileList) {\r\n            var date = this.reconcileList[i].TRNDATE\r\n            var bankDate = this.reconcileList[i].BANKDATE\r\n            var time1 = moment(date).format('YYYY-MM-DD');\r\n            var time2 = moment(bankDate).format('YYYY-MM-DD');\r\n            if (this.reconcileList[i].isReconciled == false) {\r\n                if (time1 > time2) {\r\n                    this.alertSerivces.error(\"Bank Date is less than Trnscation Date\");\r\n                }\r\n            }\r\n        }\r\n        this.DebitCreditCalculate()\r\n    }\r\n\r\n\r\n\r\n    setBankDate(value, index) {\r\n        if (value != null && value != undefined && value != \"\") {\r\n            if (this.masterService.ValidateDate(value)) {\r\n                this.reconcileList[index].BANKDATE = this.masterService.changeIMsDateToDate(value);\r\n            } else {\r\n                this.alertSerivces.error(`Invalid Transaction Date`);\r\n                return;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    getBankDate(index) {\r\n        if (this.reconcileList[index].BANKDATE) {\r\n            return this.masterService.customDateFormate(this.reconcileList[index].BANKDATE.toString());\r\n        }\r\n    }\r\n\r\n    \r\n    changeEntryDate(value, format: string) {\r\n        var adbs = require(\"ad-bs-converter\");\r\n        if (format == \"AD\") {\r\n            var adDate = (value.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n            var bsDate = adbs.ad2bs(adDate);\r\n            this.PartyReconciliationObj.BSDATE1 = this.masterService.toBSDate(value);\r\n        }\r\n        else if (format == \"BS\") {\r\n          var datearr = value.split('/');\r\n          const bsDate = datearr[2]+\"/\"+datearr[1]+\"/\"+datearr[0];\r\n          // var bsDate = (value.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n            var adDate = adbs.bs2ad(bsDate);\r\n            var Engdate = this.masterService.toADDate(value);\r\n            const Validatedata = this.masterService.ValidateNepaliDate(Engdate)\r\n            if(Validatedata == true){\r\n              const bsDate1 = datearr[2]+\"/\"+datearr[1]+\"/\"+datearr[0];\r\n              var adDate1 = adbs.bs2ad(bsDate1);\r\n              this.PartyReconciliationObj.DATE1 = this.masterService.toADDate(value);\r\n            }else{\r\n                // this.alertService.error(\"Cannot Change the date\");\r\n              return;\r\n            } \r\n\r\n\r\n        }\r\n    }\r\n\r\n    changeEndDate(value, format: string) {\r\n        var adbs = require(\"ad-bs-converter\");\r\n        if (format == \"AD\") {\r\n            var adDate = (value.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n            var bsDate = adbs.ad2bs(adDate);\r\n            this.PartyReconciliationObj.BSDATE2 = this.masterService.toBSDate(value);\r\n        }\r\n        else if (format == \"BS\") {\r\n          var datearr = value.split('/');\r\n          const bsDate = datearr[2]+\"/\"+datearr[1]+\"/\"+datearr[0];\r\n            var adDate = adbs.bs2ad(bsDate);\r\n            var Engdate = this.masterService.toADDate(value);\r\n            const Validatedata = this.masterService.ValidateNepaliDate(Engdate)\r\n            if(Validatedata == true){\r\n              const bsDate1 = datearr[2]+\"/\"+datearr[1]+\"/\"+datearr[0];\r\n              var adDate1 = adbs.bs2ad(bsDate1);\r\n              this.PartyReconciliationObj.DATE2 = this.masterService.toADDate(value);\r\n            }else{\r\n                // this.alertService.error(\"Cannot Change the date\");\r\n              return;\r\n            }\r\n\r\n          }\r\n    }\r\n\r\n    parttypeChange(){\r\n        this.PartyReconciliationObj.ACNAME=\"\";\r\n        this.PartyReconciliationObj.ACID=\"\";\r\n      }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/pages/AccountVoucher/components/party-reconciliation/party-reconciliation.component.ts","import { Component, EventEmitter, Output } from '@angular/core';\r\nimport { GenericListSettings } from '../../../../common/Transaction Components/invoice-list.component';\r\nimport * as moment from 'moment'\r\nimport { MasterRepo } from '../../../../common/repositories';\r\nimport { TransactionService } from '../../../../common/Transaction Components/transaction.service';\r\nimport { AlertService } from '../../../../common/services/alert/alert.service';\r\n\r\n@Component({\r\n  selector: 'voucher-posting',\r\n  template: require('./voucher-posting.component.html')\r\n})\r\n\r\nexport class VoucherPosting {\r\n  listSetting: GenericListSettings = new GenericListSettings()\r\n  public divisionList = [];\r\n  public pageNumber: number\r\n  public itemList = []\r\n  constructor(private alertService: AlertService, private _masterService: MasterRepo, private _transactionService: TransactionService) {\r\n    this._masterService.getAllDivisions().subscribe((res) => {\r\n      this.divisionList.push(res)\r\n\r\n    })\r\n    this.itemList = [\r\n      {\r\n        VCHRNO: '10121211',\r\n        ACNAME: 'IMS POS',\r\n        TRNDATE: '2019-07-21',\r\n        DRAMNT: '2000000',\r\n        CRAMNT: '2000000',\r\n        ChequeNo: \"0023556526550\",\r\n        ChequeDate: '2019-07-20',\r\n        CostCenter: \"I Dont Know\",\r\n        NARATION: 'NARATION'\r\n      },\r\n      {\r\n        VCHRNO: '10121211',\r\n        ACNAME: 'IMS POS',\r\n        TRNDATE: '2019-07-21',\r\n        DRAMNT: '2000000',\r\n        CRAMNT: '2000000',\r\n        ChequeNo: \"0023556526550\",\r\n        ChequeDate: '2019-07-20',\r\n        CostCenter: \"I Dont Know\",\r\n        NARATION: 'NARATION'\r\n      },\r\n      {\r\n        VCHRNO: '10121211',\r\n        ACNAME: 'IMS POS',\r\n        TRNDATE: '2019-07-21',\r\n        DRAMNT: '2000000',\r\n        CRAMNT: '2000000',\r\n        ChequeNo: \"0023556526550\",\r\n        ChequeDate: '2019-07-20',\r\n        CostCenter: \"I Dont Know\",\r\n        NARATION: 'NARATION'\r\n      },\r\n      {\r\n        VCHRNO: '10121211',\r\n        ACNAME: 'IMS POS',\r\n        TRNDATE: '2019-07-21',\r\n        DRAMNT: '2000000',\r\n        CRAMNT: '2000000',\r\n        ChequeNo: \"0023556526550\",\r\n        ChequeDate: '2019-07-20',\r\n        CostCenter: \"I Dont Know\",\r\n        NARATION: 'NARATION'\r\n      },\r\n      {\r\n        VCHRNO: '10121211',\r\n        ACNAME: 'IMS POS',\r\n        TRNDATE: '2019-07-21',\r\n        DRAMNT: '2000000',\r\n        CRAMNT: '2000000',\r\n        ChequeNo: \"0023556526550\",\r\n        ChequeDate: '2019-07-20',\r\n        CostCenter: \"I Dont Know\",\r\n        NARATION: 'NARATION'\r\n      },\r\n      {\r\n        VCHRNO: '10121211',\r\n        ACNAME: 'IMS POS',\r\n        TRNDATE: '2019-07-21',\r\n        DRAMNT: '2000000',\r\n        CRAMNT: '2000000',\r\n        ChequeNo: \"0023556526550\",\r\n        ChequeDate: '2019-07-20',\r\n        CostCenter: \"I Dont Know\",\r\n        NARATION: 'NARATION'\r\n      },\r\n      {\r\n        VCHRNO: '10121211',\r\n        ACNAME: 'IMS POS',\r\n        TRNDATE: '2019-07-21',\r\n        DRAMNT: '2000000',\r\n        CRAMNT: '2000000',\r\n        ChequeNo: \"0023556526550\",\r\n        ChequeDate: '2019-07-20',\r\n        CostCenter: \"I Dont Know\",\r\n        NARATION: 'NARATION'\r\n      },\r\n      {\r\n        VCHRNO: '10121211',\r\n        ACNAME: 'IMS POS',\r\n        TRNDATE: '2019-07-21',\r\n        DRAMNT: '2000000',\r\n        CRAMNT: '2000000',\r\n        ChequeNo: \"0023556526550\",\r\n        ChequeDate: '2019-07-20',\r\n        CostCenter: \"I Dont Know\",\r\n        NARATION: 'NARATION'\r\n      },\r\n      {\r\n        VCHRNO: '10121211',\r\n        ACNAME: 'IMS POS',\r\n        TRNDATE: '2019-07-21',\r\n        DRAMNT: '2000000',\r\n        CRAMNT: '2000000',\r\n        ChequeNo: \"0023556526550\",\r\n        ChequeDate: '2019-07-20',\r\n        CostCenter: \"I Dont Know\",\r\n        NARATION: 'NARATION'\r\n      },\r\n      {\r\n        VCHRNO: '10121211',\r\n        ACNAME: 'IMS POS',\r\n        TRNDATE: '2019-07-21',\r\n        DRAMNT: '2000000',\r\n        CRAMNT: '2000000',\r\n        ChequeNo: \"0023556526550\",\r\n        ChequeDate: '2019-07-20',\r\n        CostCenter: \"I Dont Know\",\r\n        NARATION: 'NARATION'\r\n      }\r\n    ]\r\n    this.selectedDate = {\r\n      startDate: moment(),\r\n      endDate: moment()\r\n    }\r\n    this.listSetting = {\r\n      title: \"Voucher Posting\",\r\n      apiEndpoints: \"\",\r\n      columns: [\r\n        {\r\n          key: \"VCHRNO\",\r\n          title: \"Voucher No\"\r\n        },\r\n        {\r\n          key: \"ACNAME\",\r\n          title: \"Account Description\"\r\n        },\r\n        {\r\n          key: \"TRNDATE\",\r\n          title: \"Date\"\r\n        },\r\n        {\r\n          key: \"DRAMNT\",\r\n          title: \"Dr Amount\"\r\n        },\r\n        {\r\n          key: \"CRAMNT\",\r\n          title: \"Cr Amnt\"\r\n        },\r\n        {\r\n          key: \"ChequeNo\",\r\n          title: \"Cheque Number\"\r\n        },\r\n        {\r\n          key: \"ChequeDate\",\r\n          title: \"Cheque Date\"\r\n        },\r\n        {\r\n          key: \"CostCenter\",\r\n          title: \"Cost Center\"\r\n        },\r\n        {\r\n          key: \"NARATION\",\r\n          title: \"Naration\"\r\n        }\r\n\r\n      ]\r\n\r\n    }\r\n  }\r\n\r\n\r\n\r\n  selectedDate: { startDate: moment.Moment, endDate: moment.Moment };\r\n  alwaysShowCalendars: boolean = true;\r\n  ranges: any = {\r\n    'Today': [moment(), moment()],\r\n    'Yesterday': [moment().subtract(1, 'days'), moment().subtract(1, 'days')],\r\n    'Last 7 Days': [moment().subtract(6, 'days'), moment()],\r\n    'Last 30 Days': [moment().subtract(29, 'days'), moment()],\r\n    'This Month': [moment().startOf('month'), moment().endOf('month')],\r\n    'Last Month': [moment().subtract(1, 'month').startOf('month'), moment().subtract(1, 'month').endOf('month')],\r\n    'Financial Year': [moment().set('date', 1).set('month', 3), moment().endOf('month').set('month', 2).add(1, 'year')],\r\n\r\n  }\r\n  locale = {\r\n    format: 'DD/MM/YYYY',\r\n    direction: 'ltr', // could be rtl\r\n    weekLabel: 'W',\r\n    separator: ' - ', // default is ' - '\r\n    cancelLabel: 'Cancel', // detault is 'Cancel'\r\n    applyLabel: 'Okay', // detault is 'Apply'\r\n    clearLabel: 'Clear', // detault is 'Clear'\r\n    customRangeLabel: 'Custom Range',\r\n    daysOfWeek: moment.weekdaysMin(),\r\n    monthNames: moment.monthsShort(),\r\n    firstDay: 0 // first day is monday\r\n  }\r\n\r\n  dateChanged(date) {\r\n    this._transactionService.voucherPostingObj.from = moment(this.selectedDate.startDate).format('YYYY-MM-DD HH:mm:ss')\r\n    this._transactionService.voucherPostingObj.to = moment(this.selectedDate.endDate).format('YYYY-MM-DD HH:mm:ss')\r\n  }\r\n\r\n  divisionChange(division) {\r\n  }\r\n  voucherChange(voucher) {\r\n    console.group(voucher)\r\n  }\r\n\r\n  pageValueChanged(pageNumber) {\r\n\r\n    this.pageNumber = pageNumber\r\n\r\n  }\r\n\r\n\r\n  loadVoucher() {\r\n  }\r\n\r\n  postInvoice() {\r\n    let voucherList = []\r\n    let isChecked = this._transactionService.voucherPostingObj.invoiceList.find(x => x.checked == true)\r\n\r\n    if (isChecked == undefined || isChecked == null || isChecked == \"\") {\r\n      this.alertService.error(\"No Invoice Selected\")\r\n      return;\r\n    }\r\n\r\n    this._transactionService.voucherPostingObj.invoiceList.find(x => {\r\n      if (x.checked == true) {\r\n        voucherList.push(x.VCHRNO)\r\n      }\r\n    })\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/pages/AccountVoucher/components/voucher-posting/voucher-posting.component.ts","import { AuthService } from './../../../../common/services/permission/authService.service';\r\nimport { PAGES_MENU } from './../../../pages.menu';\r\nimport { Component, ViewChild, ElementRef, PLATFORM_ID, Inject } from \"@angular/core\";\r\nimport { MasterRepo } from \"../../../../common/repositories/masterRepo.service\";\r\nimport { SpinnerService } from \"../../../../common/services/spinner/spinner.service\";\r\nimport { AlertService } from \"../../../../common/services/alert/alert.service\";\r\nimport { TransactionService } from \"../../../../common/Transaction Components/transaction.service\";\r\nimport { FormGroup, FormControl, FormBuilder, Validators } from '@angular/forms';\r\nimport { Subscription } from \"rxjs/Subscription\";\r\nimport { result } from 'lodash';\r\nimport { forEach } from '@angular/router/src/utils/collection';\r\nimport * as XLSX from 'xlsx';\r\nimport * as FileSaver from 'file-saver';\r\nimport { GenericPopUpComponent, GenericPopUpSettings } from '../../../../common/popupLists/generic-grid/generic-popup-grid.component';\r\nconst EXCEL_EXTENSION = '.xlsx';\r\nconst EXCEL_TYPE = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8';\r\n@Component({\r\n    selector: 'voucher-renumbering',\r\n    template: require('./voucher-renumbering.component.html'),\r\n    styles: [require('../../../Style.css'), require('./voucher-renumbering.component.css')]\r\n\r\n})\r\n\r\nexport class VoucherRenumberingComponent {\r\n    form: FormGroup;\r\n    renumberingObj: Renumbering = <Renumbering>{};\r\n    voucherLists: any[] = [];\r\n    // accoutingVouchersList =\r\n    // [{name:\"Journal Voucher\"},{name:\"Contra Voucher\"},{name:\"Payment Voucher\"},{name:\"Receipt Voucher\"},{name:\"Debit Note -AC Base\"},{name:\"Credit Note - AC Base\"},{name:\"Bill Tracking Amendment\"},{name:\"Additional Cost\"},{name:\"Capital Purchase Voucher\"},{name:\"Payment Collection\"}];\r\n    //\r\n    accoutMenus: [] = [];\r\n    userProfile: any = <any>{};\r\n    userSetting: any;\r\n    selectedMenu: any;\r\n    filter: string;\r\n    PhiscalObj: any = <any>{};\r\n    voucherType: string = '';\r\n    isLoader = true;\r\n    currentPage = 1;\r\n    totalCount: number;\r\n    itemsPerPage = 10;\r\n    offset = 0;\r\n    @ViewChild(\"genericGridVoucherSeriesList\")\r\n    genericGridVoucherSeriesList: GenericPopUpComponent;\r\n    gridVoucherSeriesListPopupSettings: GenericPopUpSettings = new GenericPopUpSettings();\r\n    constructor(\r\n        public masterService: MasterRepo,\r\n        private spinnerService: SpinnerService,\r\n        private alertSerivces: AlertService,\r\n        private _transactionService: TransactionService,\r\n        private fb: FormBuilder,\r\n        private authService: AuthService,\r\n        private loadingService: SpinnerService,\r\n        private _authService: AuthService\r\n\r\n    ) {\r\n\r\n        this.userProfile = authService.getUserProfile();\r\n        this.PhiscalObj = authService.getPhiscalInfo();\r\n        this.userSetting = this._authService.getSetting();\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.form = this.fb.group({\r\n            // FROMDATE: [''],\r\n            // TODATE: [''],\r\n            VOUCHERTYPE: [''],\r\n            // FORM: [''],\r\n            VOUCHERPREFIX: [''],\r\n            DIVISION: [''],\r\n            PHISCALID: [''],\r\n        })\r\n\r\n        this.form.patchValue({\r\n            // DIVISION :  this.PhiscalObj.Div,\r\n            PHISCALID: this.PhiscalObj.PhiscalID\r\n        })\r\n        // ////console.log(\"CheckMenu\",this.userProfile.menuRights.menu)\r\n        //console.log(PAGES_MENU,\"pagessss\")\r\n        let aa = PAGES_MENU.filter(x => x.path == \"pages\")[0];\r\n        //    ////console.log(\"aa\",aa);\r\n        let aaa = aa.children.filter(x => x.path == \"account\")[0];\r\n        //    ////console.log(\"aaa\",aaa);\r\n        //    let aaaa=aaa.children.filter(x=>x.path==\"acvouchers\")[0];\r\n        //    ////console.log(\"aaaa\",aaaa);\r\n        //    this.accoutMenus=aaaa.children;\r\n        //    ////console.log(\"aaaaa\",aaaa.children);\r\n\r\n        // for(let a of PAGES_MENU)\r\n        // {\r\n        //     this.list1 = a;\r\n        // }\r\n        // this.list2 = this.list1.children;\r\n        // //console.log(this.list2,\"lsit2\")\r\n        // this.list3 = this.list2[1];\r\n        // //console.log(this.list3,\"list3\")\r\n\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n    onSearch() {\r\n        if (this.userSetting.ENABLEVOUCHERSERIES == 0) {\r\n            this.form.patchValue({\r\n                VOUCHERTYPE: this.form.controls['VOUCHERPREFIX'].value\r\n            });\r\n        } else if (this.userSetting.ENABLEVOUCHERSERIES == 1 && this.form.controls['VOUCHERTYPE'].value == '') {\r\n            this.alertSerivces.error('Please Select Voucher Series.');\r\n            return;\r\n        }\r\n        this.loadingService.show(\"Searching...\");\r\n        this.form.patchValue({\r\n            DIVISION: this.PhiscalObj.Div,\r\n        });\r\n        //console.log(\"CheckVlaue\",this.form.value)\r\n        let searchObj = Object.assign(this.renumberingObj, this.form.value);\r\n        this.masterService.getPhiscalRangeValue(searchObj).subscribe(x => {\r\n            if(x){\r\n                x.result.forEach((data) => {\r\n                    const trnDateObj = new Date(data.TRNDATE);\r\n                    data.NETAMNT = Number(data.NETAMNT).toFixed(2);\r\n    \r\n                    // Format the Date object into a more readable format\r\n                    data.TRNDATE = trnDateObj.toLocaleDateString();\r\n                })\r\n                this.voucherLists = x.result;\r\n                this.loadingService.hide();\r\n            }\r\n        });\r\n    }\r\n    onSelectVoucherPrefix() {\r\n\r\n    }\r\n    SaveRenum() {\r\n        if (confirm(\"Are you sure you want to changes all the listed below Vouchers? It cannot revert once accepted.\")) {\r\n            this.SaveConfirm();\r\n        }\r\n    }\r\n    SaveConfirm() {\r\n\r\n        // ket bodyData = {data:this.}\r\n        // this.masterService.saveRenumering()\r\n        if (!this.voucherLists) {\r\n            this.alertSerivces.warning(\"Please load the renumering list first!\");\r\n        }\r\n        // this.renumberingObj.VList = this.voucherLists;\r\n        // //console.log(\"CheckeVoucherList\",this.voucherLists)\r\n        this.renumberingObj.DIVISION = this.PhiscalObj.Div;\r\n        // this.renumberingObj.PHISCALID = this.PhiscalObj.PhiscalID;\r\n        this.renumberingObj.VOUCHERPREFIX = this.form.controls['VOUCHERPREFIX'].value;\r\n        this.renumberingObj.VOUCHERTYPE = this.form.controls['VOUCHERTYPE'].value;\r\n        let bodyData = this.renumberingObj;\r\n        this.loadingService.show('saving data please wait...')\r\n        this.masterService.saveRenumering(bodyData).subscribe(x => {\r\n            if (x.status == \"ok\") {\r\n                this.alertSerivces.info(\"Voucher Renumering saved successfully!\")\r\n                this.voucherLists = [];\r\n                this.renumberingObj.VList = [];\r\n                // this.renumberingObj.FORM = '';\r\n                // this.renumberingObj.TODATE = '';\r\n                // this.renumberingObj.FROMDATE = '';\r\n                this.loadingService.hide();\r\n            }\r\n            else {\r\n                this.loadingService.hide();\r\n                this.alertSerivces.error(x.result);\r\n            }\r\n        }, error => {\r\n            this.alertSerivces.error(\"Error in savin data. Please try again!\");\r\n        })\r\n    }\r\n\r\n    /**\r\n     * to export renumbering voucher to excel\r\n     */\r\n    exportTOExcel(dataList: any, excelFileName: string) {\r\n        var newArray: any[] = [];\r\n        dataList.forEach((data) => {\r\n            newArray.push({\r\n                OLD_VOUCHERNO: data.old_vchrno,\r\n                NEW_VOUCHERNO: data.new_vchrno,\r\n                ENTRY_DATE : data.TRNDATE,\r\n                ENTRY_DATEBS: data.BSDATE,\r\n                NETAMNT: data.NETAMNT,\r\n                TRNMODE: data.TRNMODE,\r\n                FISCALYEAR: data.PhiscalID\r\n            })\r\n        })\r\n        var exportArray = Object.assign([], newArray);\r\n        //     Object.keys(newArray).forEach((key: any)=>{\r\n        //       delete newArray[key].ACCOUNTGROUP_ID;\r\n        //       delete newArray[key].ACID;\r\n        //       delete newArray[key].CCID;\r\n        //       delete newArray[key].COSTCENTER_CATEGORYID;\r\n        //   })\r\n        // this.downloadFile(this.listOfData, 'transaction')\r\n        const ws: XLSX.WorkSheet = XLSX.utils.json_to_sheet(exportArray);\r\n        const wb: XLSX.WorkBook = XLSX.utils.book_new();\r\n        XLSX.utils.book_append_sheet(wb, ws, \"ABC\");\r\n\r\n        excelFileName += '.xlsx';\r\n        /* save to file */\r\n        const excelBuffer: any = XLSX.write(wb, { bookType: 'xlsx', type: 'buffer' });\r\n        this.saveAsExcelFile(excelBuffer, excelFileName);\r\n    }\r\n\r\n\r\n    private saveAsExcelFile(buffer: any, fileName: string): void {\r\n        const data: Blob = new Blob([buffer], { type: EXCEL_TYPE });\r\n        FileSaver.saveAs(data, fileName + EXCEL_EXTENSION);\r\n    }\r\n\r\n    showVoucherSeriesList() {\r\n        this.gridVoucherSeriesListPopupSettings = {\r\n            title: \"Voucher Series\",\r\n            apiEndpoints: `/getAllVoucherSeries`,\r\n            defaultFilterIndex: 0,\r\n            columns: [\r\n                {\r\n                    key: \"VOUCHER_ID\",\r\n                    title: \"Voucher ID\",\r\n                    hidden: false,\r\n                    noSearch: false\r\n                },\r\n                {\r\n                    key: \"VSERIES_NAME\",\r\n                    title: \"Voucher Name\",\r\n                    hidden: false,\r\n                    noSearch: false\r\n                }\r\n\r\n            ]\r\n        };\r\n\r\n        this.genericGridVoucherSeriesList.show();\r\n\r\n    }\r\n\r\n    onSelectVoucherSeries(voucherType) {\r\n        this.voucherType = voucherType.VOUCHER_ID;\r\n        this.form.patchValue({\r\n            VOUCHERTYPE: this.voucherType\r\n        });\r\n\r\n    }\r\n\r\n    VoucherPagination(event) {\r\n        this.currentPage = event;\r\n        const t = this;\r\n        window.scrollTo({ top: 0, behavior: 'smooth' });\r\n      }\r\n}\r\n\r\nexport interface Renumbering {\r\n    // FROMDATE: string;\r\n    // TODATE: string;\r\n    // FORM: string;\r\n    VList: RenumeringList[];\r\n    DIVISION: string;\r\n    PHISCALID: string;\r\n    VOUCHERTYPE: string;\r\n    VOUCHERPREFIX: string;\r\n}\r\nexport interface RenumeringList {\r\n    VCHRNO: string;\r\n    TRNDATE: Date;\r\n    BSDATE: string\r\n    NETAMNT: number;\r\n    TRNMODE: string\r\n    PHISCALID: string;\r\n    DIVSION: string;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/pages/AccountVoucher/components/voucher-renumbering/voucher-renumbering.component.ts","import { TransactionService } from './../../../../common/Transaction Components/transaction.service';\r\nimport { MenuItem } from './../../../../common/interfaces/ProductItem';\r\nimport { MessageDialog } from './../../../modaldialogs/messageDialog/messageDialog.component';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\r\nimport { MdDialog } from '@angular/material';\r\nimport { MasterRepo } from './../../../../common/repositories/masterRepo.service';\r\nimport { Component, ContentChildren, QueryList, Input, ViewChild } from '@angular/core';\r\nimport { AdditionalCostService, prodCost } from \"./addtionalCost.service\";\r\nimport { IMPORT_DETAILS_PROD, TrnMain, VoucherTypeEnum } from \"../../../../common/interfaces/TrnMain\";\r\nimport { FormBuilder, FormControl, FormArray, Validators, FormGroup } from \"@angular/forms\";\r\nimport { TabsComponent } from './tabs';\r\nimport { TabComponent } from './tab';\r\nimport { GenericPopUpComponent, GenericPopUpSettings } from '../../../../common/popupLists/generic-grid/generic-popup-grid.component';\r\nimport { PREFIX } from '../../../../common/interfaces';\r\nimport { SettingService } from '../../../../common/services';\r\nimport { SpinnerService } from '../../../../common/services/spinner/spinner.service';\r\nimport { AlertService } from '../../../../common/services/alert/alert.service';\r\nimport { ActivatedRoute} from '@angular/router';\r\n\r\n\r\n@Component({\r\n  selector: 'additional-cost',\r\n  template: require('./masterPageAdditional.component.html'),\r\n  styles: [require('../../../modal-style.css'), require('../../../Style.css'), require('../../../../common/Transaction Components/halfcolumn.css')],\r\n  providers: [AdditionalCostService]\r\n\r\n})\r\nexport class MasterAdditionalComponent {\r\n  modeTitle: string = 'Additional Cost';\r\n  TrnMainObj: TrnMain\r\n  form: FormGroup;\r\n  dialogMessageSubject: BehaviorSubject<string> = new BehaviorSubject<string>('');\r\n  dialogMessage$: Observable<string> = this.dialogMessageSubject.asObservable();\r\n  items: any[] = [];\r\n  activeItem: any;\r\n  activeIndexSubject: BehaviorSubject<number> = new BehaviorSubject<number>(0)\r\n  activeIndex$: Observable<number> = this.activeIndexSubject.asObservable();\r\n  additionalCost: any;\r\n  @ViewChild(\"genericGridRefBill\") genericGridRefBill: GenericPopUpComponent;\r\n  gridPopupSettingsForRefBill: GenericPopUpSettings = new GenericPopUpSettings();\r\n\r\n  voucherType: VoucherTypeEnum = VoucherTypeEnum.AdditionalCost;\r\n\r\n\r\n  constructor(public additionalcostService: AdditionalCostService, private fb: FormBuilder,\r\n    private masterService: MasterRepo, public dialog: MdDialog, public _trnMainService: TransactionService,\r\n    private setting: SettingService,private loadingService: SpinnerService, private alertService: AlertService, private route: ActivatedRoute) {\r\n    this.TrnMainObj = additionalcostService.TrnMainObj;\r\n    this._trnMainService.TrnMainObj.VoucherType = 66;\r\n    // this._trnMainService.pageHeading = \"Additoinal Cost\";\r\n    // this._trnMainService.TrnMainObj.VoucherPrefix = \"AD\";\r\n    // this.TrnMainObj.VoucherPrefix = \"AD\";\r\n    // this._trnMainService.initialFormLoad(66);\r\n    \r\n\r\n    this.form = fb.group({\r\n      VCHRNO: ['', [Validators.required]],\r\n      DIVISION: ['', [Validators.required]],\r\n      // PIVchr:['',[Validators.required]],\r\n      TRNDATE: ['', [Validators.required]],\r\n      BSDATE: ['', [Validators.required]],\r\n      AdditionalPurchaseAc: [''],\r\n      CHALANNO: [''],\r\n    });\r\n    this.additionalCost = 99;\r\n\r\n  }\r\n  menuItems: MenuItem[];\r\n  ngOnInit() {\r\n    this.route.queryParams.subscribe(params => {\r\n      if (params['mode']==\"DRILL\") {\r\n        let VCHR = params['voucher']\r\n        let vparams = []\r\n        vparams = VCHR.split('-');\r\n        let data = {\r\n          VCHRNO : VCHR,\r\n          DIVISION: vparams[1]\r\n        }\r\n        this.loadingService.show(\"Loading Invoice\")\r\n        this.additionalcostService.loadAdditionalCost(data);\r\n        this.additionalcostService.ObservableReturnData.subscribe((x: any) => {\r\n        this._trnMainService.TrnMainObj = this.masterService.loadedTrnmain;\r\n        this._trnMainService.TrnMainObj.Mode = \"VIEW\";\r\n  \r\n          //Dbl check if trnmain vchrno missing -- sometimes date will not show on Edit or View\r\n          this.loadVoucher(x.TrnMainObj);\r\n      })\r\n        // this.masterService.LoadTransaction(VCHR, vparams[1], vparams[2]).subscribe((res) => {\r\n        //   if (res.status == \"ok\") {\r\n        //     this.loadingService.hide()\r\n        //     this._trnMainService.TrnMainObj = res.result;\r\n        //     this._trnMainService.TrnMainObj.VoucherType = 3;\r\n        //     this._trnMainService.pageHeading = \"Additional Cost\";\r\n        //     this._trnMainService.TrnMainObj.VoucherPrefix = \"AD\";\r\n        //     this._trnMainService.TrnMainObj.Mode = \"VIEW\";\r\n        //   }\r\n        // }, err => {\r\n        //   this.loadingService.hide()\r\n        //   this.alertService.error(err)\r\n        // })\r\n  \r\n      }else if(params['mode']==\"fromLatepost\"){\r\n        // alert(\"params['mode']==additional cost\")\r\n        this.loadingService.show(\"Loading Invoice\")\r\n        let data = {\r\n          VCHRNO : params.voucher,\r\n          DIVISION: params.DIVISION,\r\n          PHISCALID:params.PHISCALID\r\n        }\r\n        this.additionalcostService.loadAdditionalCost(data);\r\n        this.additionalcostService.ObservableReturnData.subscribe((x: any) => {\r\n        this._trnMainService.TrnMainObj = this.masterService.loadedTrnmain;\r\n        this._trnMainService.TrnMainObj.Mode = \"VIEW\";\r\n  \r\n          //Dbl check if trnmain vchrno missing -- sometimes date will not show on Edit or View\r\n          this.loadVoucher(x.TrnMainObj);\r\n      })\r\n\r\n      }\r\n      \r\n      else{ \r\n        this.items = [\r\n        {\r\n          // label: 'Purchase details', icon: 'fa-bar-chart', id: 'purchasedetail', command: (event) => { this.activeItem = event.item }\r\n        },\r\n        { label: 'Additional Cost Details', icon: 'fa-support', id: 'addcost', command: (event) => { this.activeItem = event.item } },\r\n        { label: 'Costing Detail', icon: 'fa-book', id: 'detailcosting', command: (event) => { this.activeItem = event.item } },\r\n      ];\r\n      this.activeItem = this.items[0];\r\n      // ////console.log(\"ROUTERERERERER\", this.activeItem)\r\n      this.menuItems = [\r\n        // { label: 'Purchase Details', menuName: 'purchasedetail', icon: 'fa-bar-chart' },\r\n        { label: 'Additional Cost Details', menuName: 'adddetail' },\r\n        { label: 'Costing Detail', menuName: 'costingdetail' }\r\n      ];\r\n      this.masterService.ShowMore = true;\r\n      this.masterService.focusAnyControl(\"REFPINO_AD\");\r\n      this.additionalcostService.IMPORTDETAILS.prodList = [];\r\n    }\r\n    });\r\n   \r\n  }\r\n  ngAfterViewInit(){\r\n    this.addRow();\r\n  }\r\n\r\n  public loadPi(Vchrno: string, Division: string) {\r\n    this.additionalcostService.loadPurchase(Vchrno, Division, null)\r\n  }\r\n\r\n  onSave() {\r\n    //alert(\"MasterSave!!!\");\r\n    this.dialogMessageSubject.next(\"Saving Data please wait...!\");\r\n    var dialogRef = this.dialog.open(MessageDialog, { hasBackdrop: true, data: { header: 'Information', message: this.dialogMessage$ } })\r\n    try {\r\n      this.additionalcostService.saveAdditionalCost();\r\n      \r\n    }\r\n    catch (ex) {\r\n      this.dialogMessageSubject.next(ex)\r\n      setTimeout(function () {\r\n\r\n        dialogRef.close();\r\n      }, 3000);\r\n      //  alert(ex);\r\n      //  //console.log(ex);\r\n    }\r\n  }\r\n  cancel() {\r\n\r\n  }\r\n  costingDetailClickEvent() {\r\n    this.additionalcostService.generateCostDetails();\r\n  }\r\n  getAdditionalCost(value) {\r\n\r\n    this.loadingService.show(\"please wait. Getting purchase invoice data..\")\r\n    \r\n    //  this.additionalCostService.loadPurchase(value,this.form.value.DIVISION.INITIAL,this.phiscalid)\r\n    let VCHR = value.VCHRNO\r\n    let division = value.DIVISION;\r\n    let phiscalid= this.masterService.PhiscalObj.PhiscalID;\r\n    // ////console.log(\"vchr,Div,Phis\", VCHR, division, phiscalid,this.masterService.PhiscalObj.phiscalID,this.masterService.userProfile);\r\n\r\n    // this._trnMainService.trnmainBehavior= new BehaviorSubject(<TrnMain>{});\r\n    //   this._trnMainService.loadData(VCHR, division, phiscalid);\r\n    this.masterService.LoadTransaction(VCHR, division, phiscalid).subscribe(data => {\r\n      if (data) {\r\n        try {\r\n         \r\n          this.additionalcostService.costList = [];\r\n          this.additionalcostService.costdetail = [];\r\n          this.additionalcostService.addtionalCostList = [];\r\n          this.additionalcostService.addCostTotAmount = 0;\r\n        \r\n          var result = data.result.ProdList.filter((elem1, i) => data.result.ProdList.some((elem2, j) => (elem2.MCODE === elem1.MCODE)\r\n             && (elem2.BATCHID == elem1.BATCHID) && j !== i));\r\n          //console.log(\"@@PI__result:\", result);\r\n\r\n        let acs1: prodCost = <prodCost>{ mcode: \"\", menucode: \"\", desca: \"\", unit: \"\",\r\n                                        quantity: 0, rate: 0,amount: 0, nAmount: 0, batch:\"\",\r\n                                        batchid:\"\",prate:0 }\r\n        if(result.length>0){\r\n            result.forEach(element => {\r\n              acs1.mcode=element.MCODE,\r\n              acs1.menucode=element.MENUCODE,\r\n              acs1.desca=element.ITEMDESC,\r\n              acs1.unit=element.UNIT,\r\n              acs1.batch=element.BATCH,\r\n              acs1.rate=element.RATE,\r\n              acs1.quantity=element.REALQTY_IN+acs1.quantity,\r\n              acs1.amount=element.AMOUNT+acs1.amount,\r\n              acs1.nAmount=element.NETAMOUNT+acs1.nAmount,\r\n              acs1.batchid=element.BATCHID,\r\n              acs1.prate = element.PRATE\r\n            });\r\n            this.additionalcostService.addtionalCostList.push(acs1);\r\n\r\n            var result2 = data.result.ProdList.filter((elem1, i) => result.some((elem2, j) => (elem2.MCODE != elem1.MCODE || elem2.BATCHID != elem1.BATCHID)  && j !== i));\r\n            if(result2.length > 0 ){\r\n              //console.log(\"@@mcodediff_ac2\",result2)\r\n              for (let i of result2) {\r\n                var acs: prodCost = <prodCost>{\r\n                  mcode: i.MCODE, menucode: i.MENUCODE, desca: i.ITEMDESC, unit: i.UNIT,\r\n                  quantity: i.REALQTY_IN, \r\n                  rate: i.RATE,\r\n                   amount: i.AMOUNT, \r\n                   nAmount: i.NETAMOUNT, batch:i.BATCH, batchid:i.BATCHID,\r\n                   prate : i.PRATE\r\n                };\r\n                this.additionalcostService.addtionalCostList.push(acs);\r\n              }\r\n            }\r\n        }\r\n\r\n          if(this.additionalcostService.addtionalCostList.length==0){\r\n            //console.log(\"@@ac2\")\r\n          for (let i of data.result.ProdList) {\r\n            var acs: prodCost = <prodCost>{\r\n              mcode: i.MCODE, menucode: i.MENUCODE, desca: i.ITEMDESC, unit: i.UNIT,\r\n              quantity: i.REALQTY_IN, \r\n              // rate: i.RATE,\r\n              //  amount: i.AMOUNT, \r\n              rate: i.CRATE ? i.CRATE : i.RATE,\r\n                      amount: i.CRATE ? i.CRATE * i.REALQTY_IN : i.AMOUNT,\r\n               nAmount: i.NETAMOUNT, batch:i.BATCH,batchid:i.BATCHID,\r\n               prate:i.PRATE\r\n            };\r\n            this.additionalcostService.addtionalCostList.push(acs);\r\n          }\r\n        }\r\n          this.masterService.batch = data.result.ProdList && data.result.ProdList.length>0 && data.result.ProdList[0].BATCH;\r\n          //total amount\r\n          this.additionalcostService.loadedTrnmain = data.result;\r\n          //console.log(\"additionalCstService\", this.additionalcostService.loadedTrnmain)\r\n          this.loadingService.hide();\r\n        }\r\n        catch (ex) { }\r\n\r\n      }\r\n      else {\r\n        alert(\"Cannot Get Data from Bill no.\")\r\n      }\r\n\r\n      //console.log({ trnMAIN00000000000000: this._trnMainService.TrnMainObj });\r\n    })\r\n\r\n\r\n  }\r\n\r\n \r\n  calculatecosting() {\r\n    this.additionalcostService.generateCostDetails();\r\n\r\n  }\r\n  TabRefBill() {\r\n    //    this.genericGridRefBill.show();\r\n    // this.gridACListPartyPopupSettings = {\r\n    //     title: \"Accounts\",\r\n    //     apiEndpoints: `/getAccountPagedListByMapId/Master/${'SinglePayment_Party'}/`,\r\n    //     defaultFilterIndex: 1,\r\n    //     columns: [\r\n    //       {\r\n    //         key: \"ACCODE\",\r\n    //         title: \"AC CODE\",\r\n    //         hidden: false,\r\n    //         noSearch: false\r\n    //       },\r\n    //       {\r\n    //         key: \"ACNAME\",\r\n    //         title: \"A/C NAME\",\r\n    //         hidden: false,\r\n    //         noSearch: false\r\n    //       }\r\n    //     ]\r\n    //   };\r\n    //console.log(\"@@PURCHASE_TYPE\",this.masterService.RefObj.PURCHASE_TYPE,this._trnMainService.userSetting.ENABLELOCALPURCHASE)\r\n    if(this._trnMainService.userSetting.ENABLELOCALPURCHASE==0){\r\n      this.masterService.RefObj.PURCHASE_TYPE='ALL';\r\n    }else{\r\n      if(this._trnMainService.userSetting.ENABLELOCALPURCHASE==1 && !this.masterService.RefObj.PURCHASE_TYPE){\r\n        this.masterService.RefObj.PURCHASE_TYPE='ALL';\r\n      }\r\n    }\r\n    this.gridPopupSettingsForRefBill = this.masterService.getGenericGridPopUpSettingsForAdditionalCost(\"AdditionalCost\",this.masterService.RefObj.PURCHASE_TYPE);\r\n    this.genericGridRefBill.show();\r\n  }\r\n  prefix: PREFIX = <PREFIX>{};\r\n  prefixChanged(pref: any) {\r\n    try {\r\n      this._trnMainService.prefix = pref;\r\n      this.prefix = pref;\r\n      if (this.TrnMainObj.Mode == \"NEW\") {\r\n        if (\r\n          this.TrnMainObj.DIVISION == \"\" ||\r\n          this.TrnMainObj.DIVISION == null\r\n        ) {\r\n          this.TrnMainObj.DIVISION = this.setting.appSetting.DefaultDivision;\r\n        }\r\n        this.masterService.getVoucherNo(this.TrnMainObj).subscribe(res => {\r\n          if (res.status == \"ok\") {\r\n            let TMain = <TrnMain>res.result;\r\n            this.TrnMainObj.VCHRNO = TMain.VCHRNO.substr(\r\n              2,\r\n              TMain.VCHRNO.length - 2\r\n            );\r\n            this.TrnMainObj.CHALANNO = TMain.CHALANNO;\r\n          } else {\r\n            alert(\"Failed to retrieve VoucherNo\");\r\n          }\r\n        });\r\n      }\r\n    } catch (ex) {\r\n    }\r\n  }\r\n  \r\n  onRefBillSelected(value) {\r\n   \r\n    this.masterService.AdditionalPurchaseAcObj = '';\r\n    this.masterService.AdditionalPurchaseCreditAcObj = '';\r\n    this.masterService.mcode= '';\r\n    this.masterService.desca='';\r\n    this.masterService.batch='';\r\n    this.masterService.batchid='';\r\n\r\n    this.masterService.RefObj.Refno = value.VCHRNO;\r\n    this.masterService.RefObj.disable = true;\r\n    this._trnMainService.TrnMainObj.REFBILL = value.VCHRNO;\r\n    this.masterService.RefObj.InvoiceNo = value.REFBILL;\r\n    this.masterService.RefObj.SupplierName = value.ACNAME;\r\n    this._trnMainService.TrnMainObj.PARAC=value.PARAC;\r\n    this.getAdditionalCost(value)\r\n    this.masterService.focusAnyControl(\"_AdditioanlCostRate\"+0)\r\n  }\r\n  loadVoucher(selectedItem) {\r\n    this._trnMainService.loadData(\r\n      selectedItem.VCHRNO,\r\n      selectedItem.DIVISION,\r\n      selectedItem.PhiscalID\r\n    );\r\n\r\n    this._trnMainService.showPerformaApproveReject = false;\r\n    if (this._trnMainService.TrnMainObj.gstInfoOfAccount == null) {\r\n      this._trnMainService.TrnMainObj.gstInfoOfAccount = <any>{}\r\n    }\r\n    this._trnMainService.TrnMainObj.gstInfoOfAccount.TRNTYPE = selectedItem.PSTYPE\r\n    // this.vouchernois = selectedItem.VCHRNO;\r\n    // this.division = selectedItem.DIVISION;\r\n    // this.phiscalid = selectedItem.PhiscalID;\r\n\r\n  }\r\n  ImportDetailsClick(){\r\n    \r\n  }\r\n  addRow(){\r\n    try{\r\n      \r\n      let newRow = <IMPORT_DETAILS_PROD>{};\r\n      newRow.ITEMNAME = '';\r\n      newRow.NETAMOUNT = 0;\r\n      newRow.NONTAXABLE = 0;\r\n      newRow.QUANTITY = 0;\r\n      newRow.TAXABLE = 0;\r\n      newRow.VAT = 0;\r\n      //console.log(\"add row\",newRow);\r\n      \r\n       this.additionalcostService.IMPORTDETAILS.prodList && this.additionalcostService.IMPORTDETAILS.prodList.push(newRow);\r\n    }catch(ex){\r\n      //console.log(ex);\r\n      alert(ex);\r\n    }\r\n  }\r\n\r\n  keyPress(event: any) {\r\n    if(event.key!=\"Enter\" && event.key!=\"Tab\"){\r\n        event.preventDefault();\r\n    }\r\n}\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/pages/Purchases/components/AdditionalCost/masterPageAdditional.component.ts","import { TransactionService } from './../../../../common/Transaction Components/transaction.service';\r\nimport { MenuItem } from './../../../../common/interfaces/ProductItem';\r\nimport { MessageDialog } from './../../../modaldialogs/messageDialog/messageDialog.component';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\r\nimport { MdDialog } from '@angular/material';\r\nimport { MasterRepo } from './../../../../common/repositories/masterRepo.service';\r\nimport { Component, ContentChildren, QueryList, Input, ViewChild, HostListener } from '@angular/core';\r\n// import { AdditionalCostService, prodCost } from \"./addtionalCost.service\";\r\nimport { IMPORT_DETAILS_PROD, TrnMain, VoucherTypeEnum } from \"../../../../common/interfaces/TrnMain\";\r\nimport { FormBuilder, FormControl, FormArray, Validators, FormGroup } from \"@angular/forms\";\r\nimport { TabsComponent } from './tabs';\r\nimport { TabComponent } from './tab';\r\nimport { GenericPopUpComponent, GenericPopUpSettings } from '../../../../common/popupLists/generic-grid/generic-popup-grid.component';\r\nimport { PREFIX } from '../../../../common/interfaces';\r\nimport { SettingService } from '../../../../common/services';\r\nimport { SpinnerService } from '../../../../common/services/spinner/spinner.service';\r\nimport { AlertService } from '../../../../common/services/alert/alert.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { AdditionalCostService, prodCost } from '../AdditionalCost/addtionalCost.service';\r\nimport _ from 'lodash';\r\nimport { CdkDragStart } from '@angular/cdk/drag-drop';\r\n\r\n\r\n@Component({\r\n    selector: 'newadditional-cost',\r\n    template: require('./newmasterPageAdditional.component.html'),\r\n    styles: [require('../../../modal-style.css'), require('../../../Style.css'), require('../../../../common/Transaction Components/halfcolumn.css')],\r\n    providers: [AdditionalCostService]\r\n\r\n})\r\n// export class MasterNewAdditionalComponent {\r\n//     modeTitle: string = 'Additional Cost';\r\n//     TrnMainObj: TrnMain\r\n//     form: FormGroup;\r\n//     dialogMessageSubject: BehaviorSubject<string> = new BehaviorSubject<string>('');\r\n//     dialogMessage$: Observable<string> = this.dialogMessageSubject.asObservable();\r\n//     items: any[] = [];\r\n//     activeItem: any;\r\n//     activeIndexSubject: BehaviorSubject<number> = new BehaviorSubject<number>(0)\r\n//     activeIndex$: Observable<number> = this.activeIndexSubject.asObservable();\r\n//     additionalCost: any;\r\n//     @ViewChild(\"genericGridRefBill\") genericGridRefBill: GenericPopUpComponent;\r\n//     gridPopupSettingsForRefBill: GenericPopUpSettings = new GenericPopUpSettings();\r\n\r\n//     voucherType: VoucherTypeEnum = VoucherTypeEnum.AdditionalCost;\r\n\r\n\r\n//     constructor(public additionalcostService: NewAdditionalCostService, private fb: FormBuilder,\r\n//         private masterService: MasterRepo, public dialog: MdDialog, public _trnMainService: TransactionService,\r\n//         private setting: SettingService, private loadingService: SpinnerService, private alertService: AlertService, private route: ActivatedRoute) {\r\n//         this.TrnMainObj = additionalcostService.TrnMainObj;\r\n//         this._trnMainService.TrnMainObj.VoucherType = 66;\r\n//         // this._trnMainService.pageHeading = \"Additoinal Cost\";\r\n//         // this._trnMainService.TrnMainObj.VoucherPrefix = \"AD\";\r\n//         // this.TrnMainObj.VoucherPrefix = \"AD\";\r\n//         // this._trnMainService.initialFormLoad(66);\r\n\r\n\r\n//         this.form = fb.group({\r\n//             VCHRNO: ['', [Validators.required]],\r\n//             DIVISION: ['', [Validators.required]],\r\n//             // PIVchr:['',[Validators.required]],\r\n//             TRNDATE: ['', [Validators.required]],\r\n//             BSDATE: ['', [Validators.required]],\r\n//             AdditionalPurchaseAc: [''],\r\n//             CHALANNO: [''],\r\n//         });\r\n//         this.additionalCost = 99;\r\n\r\n//     }\r\n//     menuItems: MenuItem[];\r\n//     ngOnInit() {\r\n//         this.route.queryParams.subscribe(params => {\r\n//             if (params['mode'] == \"DRILL\") {\r\n//                 let VCHR = params['voucher']\r\n//                 let vparams = []\r\n//                 vparams = VCHR.split('-');\r\n//                 let data = {\r\n//                     VCHRNO: VCHR,\r\n//                     DIVISION: vparams[1]\r\n//                 }\r\n//                 this.loadingService.show(\"Loading Invoice\")\r\n//                 this.additionalcostService.loadAdditionalCost(data);\r\n//                 this.additionalcostService.ObservableReturnData.subscribe((x: any) => {\r\n//                     this._trnMainService.TrnMainObj = this.masterService.loadedTrnmain;\r\n//                     this._trnMainService.TrnMainObj.Mode = \"VIEW\";\r\n\r\n//                     //Dbl check if trnmain vchrno missing -- sometimes date will not show on Edit or View\r\n//                     this.loadVoucher(x.TrnMainObj);\r\n//                 })\r\n//                 // this.masterService.LoadTransaction(VCHR, vparams[1], vparams[2]).subscribe((res) => {\r\n//                 //   if (res.status == \"ok\") {\r\n//                 //     this.loadingService.hide()\r\n//                 //     this._trnMainService.TrnMainObj = res.result;\r\n//                 //     this._trnMainService.TrnMainObj.VoucherType = 3;\r\n//                 //     this._trnMainService.pageHeading = \"Additional Cost\";\r\n//                 //     this._trnMainService.TrnMainObj.VoucherPrefix = \"AD\";\r\n//                 //     this._trnMainService.TrnMainObj.Mode = \"VIEW\";\r\n//                 //   }\r\n//                 // }, err => {\r\n//                 //   this.loadingService.hide()\r\n//                 //   this.alertService.error(err)\r\n//                 // })\r\n\r\n//             } else if (params['mode'] == \"fromLatepost\") {\r\n//                 // alert(\"params['mode']==additional cost\")\r\n//                 this.loadingService.show(\"Loading Invoice\")\r\n//                 let data = {\r\n//                     VCHRNO: params.voucher,\r\n//                     DIVISION: params.DIVISION,\r\n//                     PHISCALID: params.PHISCALID\r\n//                 }\r\n//                 this.additionalcostService.loadAdditionalCost(data);\r\n//                 this.additionalcostService.ObservableReturnData.subscribe((x: any) => {\r\n//                     this._trnMainService.TrnMainObj = this.masterService.loadedTrnmain;\r\n//                     this._trnMainService.TrnMainObj.Mode = \"VIEW\";\r\n\r\n//                     //Dbl check if trnmain vchrno missing -- sometimes date will not show on Edit or View\r\n//                     this.loadVoucher(x.TrnMainObj);\r\n//                 })\r\n\r\n//             }\r\n\r\n//             else {\r\n//                 this.items = [\r\n//                     {\r\n//                         // label: 'Purchase details', icon: 'fa-bar-chart', id: 'purchasedetail', command: (event) => { this.activeItem = event.item }\r\n//                     },\r\n//                     { label: 'Additional Cost Details', icon: 'fa-support', id: 'addcost', command: (event) => { this.activeItem = event.item } },\r\n//                     { label: 'Costing Detail', icon: 'fa-book', id: 'detailcosting', command: (event) => { this.activeItem = event.item } },\r\n//                 ];\r\n//                 this.activeItem = this.items[0];\r\n//                 // ////console.log(\"ROUTERERERERER\", this.activeItem)\r\n//                 this.menuItems = [\r\n//                     // { label: 'Purchase Details', menuName: 'purchasedetail', icon: 'fa-bar-chart' },\r\n//                     { label: 'Additional Cost Details', menuName: 'adddetail' },\r\n//                     { label: 'Costing Detail', menuName: 'costingdetail' }\r\n//                 ];\r\n//                 this.masterService.ShowMore = true;\r\n//                 this.masterService.focusAnyControl(\"REFPINO_AD\");\r\n//                 this.additionalcostService.IMPORTDETAILS.prodList = [];\r\n//             }\r\n//         });\r\n\r\n//     }\r\n//     ngAfterViewInit() {\r\n//         this.addRow();\r\n//     }\r\n\r\n//     loadVoucher(selectedItem) {\r\n//         this._trnMainService.loadData(\r\n//             selectedItem.VCHRNO,\r\n//             selectedItem.DIVISION,\r\n//             selectedItem.PhiscalID\r\n//         );\r\n\r\n//         this._trnMainService.showPerformaApproveReject = false;\r\n//         if (this._trnMainService.TrnMainObj.gstInfoOfAccount == null) {\r\n//             this._trnMainService.TrnMainObj.gstInfoOfAccount = <any>{}\r\n//         }\r\n//         this._trnMainService.TrnMainObj.gstInfoOfAccount.TRNTYPE = selectedItem.PSTYPE\r\n//         // this.vouchernois = selectedItem.VCHRNO;\r\n//         // this.division = selectedItem.DIVISION;\r\n//         // this.phiscalid = selectedItem.PhiscalID;\r\n\r\n//     }\r\n//     addRow() {\r\n//         try {\r\n\r\n//             let newRow = <IMPORT_DETAILS_PROD>{};\r\n//             newRow.ITEMNAME = '';\r\n//             newRow.NETAMOUNT = 0;\r\n//             newRow.NONTAXABLE = 0;\r\n//             newRow.QUANTITY = 0;\r\n//             newRow.TAXABLE = 0;\r\n//             newRow.VAT = 0;\r\n//             //console.log(\"add row\",newRow);\r\n\r\n//             this.additionalcostService.IMPORTDETAILS.prodList && this.additionalcostService.IMPORTDETAILS.prodList.push(newRow);\r\n//         } catch (ex) {\r\n//             //console.log(ex);\r\n//             alert(ex);\r\n//         }\r\n//     }\r\n// }\r\nexport class MasterNewAdditionalComponent {\r\n    modeTitle: string = 'Additional Cost';\r\n    TrnMainObj: TrnMain\r\n    form: FormGroup;\r\n    dialogMessageSubject: BehaviorSubject<string> = new BehaviorSubject<string>('');\r\n    dialogMessage$: Observable<string> = this.dialogMessageSubject.asObservable();\r\n    items: any[] = [];\r\n    activeItem: any;\r\n    activeIndexSubject: BehaviorSubject<number> = new BehaviorSubject<number>(0)\r\n    activeIndex$: Observable<number> = this.activeIndexSubject.asObservable();\r\n    additionalCost: any;\r\n    @ViewChild(\"genericGridRefBill\") genericGridRefBill: GenericPopUpComponent;\r\n    gridPopupSettingsForRefBill: GenericPopUpSettings = new GenericPopUpSettings();\r\n\r\n    voucherType: VoucherTypeEnum = VoucherTypeEnum.AdditionalCost;\r\n    isDragging: boolean = false;\r\n\r\n\r\n    constructor(public additionalcostService: AdditionalCostService, private fb: FormBuilder,\r\n        private masterService: MasterRepo, public dialog: MdDialog, public _trnMainService: TransactionService,\r\n        private setting: SettingService, private loadingService: SpinnerService, private alertService: AlertService, private route: ActivatedRoute) {\r\n        this.TrnMainObj = additionalcostService.TrnMainObj;\r\n        this._trnMainService.TrnMainObj.VoucherType = 66;\r\n        // this._trnMainService.pageHeading = \"Additoinal Cost\";\r\n        // this._trnMainService.TrnMainObj.VoucherPrefix = \"AD\";\r\n        // this.TrnMainObj.VoucherPrefix = \"AD\";\r\n        // this._trnMainService.initialFormLoad(66);\r\n\r\n\r\n        this.form = fb.group({\r\n            VCHRNO: ['', [Validators.required]],\r\n            DIVISION: ['', [Validators.required]],\r\n            // PIVchr:['',[Validators.required]],\r\n            TRNDATE: ['', [Validators.required]],\r\n            BSDATE: ['', [Validators.required]],\r\n            AdditionalPurchaseAc: [''],\r\n            CHALANNO: [''],\r\n            INDDATA:['']\r\n        });\r\n        this.additionalCost = 99;\r\n\r\n    }\r\n    menuItems: MenuItem[];\r\n    ngOnInit() {\r\n        this.route.queryParams.subscribe(params => {\r\n            if (params['mode'] == \"DRILL\") {\r\n                let VCHR = params['voucher']\r\n                let vparams = []\r\n                vparams = VCHR.split('-');\r\n                let data = {\r\n                    VCHRNO: VCHR,\r\n                    DIVISION: vparams[1]\r\n                }\r\n                this.loadingService.show(\"Loading Invoice\")\r\n                this.additionalcostService.loadAdditionalCost(data);\r\n                this.additionalcostService.ObservableReturnData.subscribe((x: any) => {\r\n                    this._trnMainService.TrnMainObj = this.masterService.loadedTrnmain;\r\n                    this._trnMainService.TrnMainObj.Mode = \"VIEW\";\r\n\r\n                    //Dbl check if trnmain vchrno missing -- sometimes date will not show on Edit or View\r\n                    this.loadVoucher(x.TrnMainObj);\r\n                })\r\n                // this.masterService.LoadTransaction(VCHR, vparams[1], vparams[2]).subscribe((res) => {\r\n                //   if (res.status == \"ok\") {\r\n                //     this.loadingService.hide()\r\n                //     this._trnMainService.TrnMainObj = res.result;\r\n                //     this._trnMainService.TrnMainObj.VoucherType = 3;\r\n                //     this._trnMainService.pageHeading = \"Additional Cost\";\r\n                //     this._trnMainService.TrnMainObj.VoucherPrefix = \"AD\";\r\n                //     this._trnMainService.TrnMainObj.Mode = \"VIEW\";\r\n                //   }\r\n                // }, err => {\r\n                //   this.loadingService.hide()\r\n                //   this.alertService.error(err)\r\n                // })\r\n\r\n            } else if (params['mode'] == \"fromLatepost\") {\r\n                // alert(\"params['mode']==additional cost\")\r\n                this.loadingService.show(\"Loading Invoice\")\r\n                let data = {\r\n                    VCHRNO: params.voucher,\r\n                    DIVISION: params.DIVISION,\r\n                    PHISCALID: params.PHISCALID\r\n                }\r\n                this.additionalcostService.loadAdditionalCost(data);\r\n                this.additionalcostService.ObservableReturnData.subscribe((x: any) => {\r\n                    this._trnMainService.TrnMainObj = this.masterService.loadedTrnmain;\r\n                    this._trnMainService.TrnMainObj.Mode = \"VIEW\";\r\n\r\n                    //Dbl check if trnmain vchrno missing -- sometimes date will not show on Edit or View\r\n                    this.loadVoucher(x.TrnMainObj);\r\n                })\r\n\r\n            }\r\n\r\n            else {\r\n                this.items = [\r\n                    {\r\n                        // label: 'Purchase details', icon: 'fa-bar-chart', id: 'purchasedetail', command: (event) => { this.activeItem = event.item }\r\n                    },\r\n                    { label: 'Additional Cost Details', icon: 'fa-support', id: 'addcost', command: (event) => { this.activeItem = event.item } },\r\n                    { label: 'Costing Detail', icon: 'fa-book', id: 'detailcosting', command: (event) => { this.activeItem = event.item } },\r\n                ];\r\n                this.activeItem = this.items[0];\r\n                // ////console.log(\"ROUTERERERERER\", this.activeItem)\r\n                this.menuItems = [\r\n                    // { label: 'Purchase Details', menuName: 'purchasedetail', icon: 'fa-bar-chart' },\r\n                    { label: 'Additional Cost Details', menuName: 'adddetail' },\r\n                    { label: 'Costing Detail', menuName: 'costingdetail' }\r\n                ];\r\n                this.masterService.ShowMore = true;\r\n                this.masterService.focusAnyControl(\"REFPINO_AD\");\r\n                this.additionalcostService.IMPORTDETAILS.prodList = [];\r\n            }\r\n        });\r\n\r\n    }\r\n    ngAfterViewInit() {\r\n        this.addRow();\r\n    }\r\n\r\n    public loadPi(Vchrno: string, Division: string) {\r\n        this.additionalcostService.loadPurchase(Vchrno, Division, null)\r\n        \r\n    }\r\n\r\n    onSave() {\r\n        //alert(\"MasterSave!!!\");\r\n        this.dialogMessageSubject.next(\"Saving Data please wait...!\");\r\n        var dialogRef = this.dialog.open(MessageDialog, { hasBackdrop: true, data: { header: 'Information', message: this.dialogMessage$ } })\r\n        try {\r\n            this.additionalcostService.saveAdditionalCost();\r\n\r\n        }\r\n        catch (ex) {\r\n            this.dialogMessageSubject.next(ex)\r\n            setTimeout(function () {\r\n\r\n                dialogRef.close();\r\n            }, 3000);\r\n            //  alert(ex);\r\n            //  //console.log(ex);\r\n        }\r\n    }\r\n    cancel() {\r\n\r\n    }\r\n    costingDetailClickEvent() {\r\n        this.additionalcostService.generateCostDetails();\r\n    }\r\n    getAdditionalCost(value) { //new Ref PI load garda\r\n        this.loadingService.show(\"please wait. Getting purchase invoice data..\")\r\n        //  this.additionalCostService.loadPurchase(value,this.form.value.DIVISION.INITIAL,this.phiscalid)\r\n        let VCHR = value.VCHRNO\r\n        let division = value.DIVISION;\r\n        let phiscalid = this.masterService.PhiscalObj.PhiscalID;\r\n        // console.log(\"vchr,Div,Phis\", VCHR, division, phiscalid,this.masterService.PhiscalObj.phiscalID,this.masterService.userProfile);\r\n\r\n        // this._trnMainService.trnmainBehavior= new BehaviorSubject(<TrnMain>{});\r\n        //   this._trnMainService.loadData(VCHR, division, phiscalid);\r\n        this.masterService.LoadTransaction(VCHR, division, phiscalid).subscribe(data => {\r\n            if (data) {\r\n                try {\r\n                    this.masterService._verifyImportPurchase(data)\r\n             \r\n                    this.EmptyAddCost();\r\n                    //console.log(\"@@data.result.ProdList\",data.result.ProdList)\r\n                    // var result = data.result.ProdList.filter((elem1, i) => data.result.ProdList.some((elem2, j) => (elem2.MCODE === elem1.MCODE)\r\n                    //     && (elem2.BATCHID == elem1.BATCHID) && j !== i));\r\n                    var result = data.result.ProdList;\r\n                    //console.log(\"@@PI__result:\", result);\r\n                  \r\n                    let acs1: prodCost = <prodCost>{\r\n                        mcode: \"\", menucode: \"\", desca: \"\", unit: \"\",\r\n                        quantity: 0, rate: 0, amount: 0, nAmount: 0, batch: \"\", batchid: \"\", sno:0, prate : 0\r\n                    }\r\n \r\n                    if (result.length > 0) {\r\n                        \r\n\r\n                        var result2 = data.result.ProdList.filter((elem1, i) => result.some((elem2, j) => (elem2.MCODE != elem1.MCODE || elem2.BATCHID != elem1.BATCHID) && j !== i));\r\n                        if (result2.length > 0) {\r\n                            //console.log(\"@@mcodediff_ac2\",result2)\r\n                            for (let i of result2) {\r\n                                var acs: prodCost = <prodCost>{\r\n                                    mcode: i.MCODE, menucode: i.MENUCODE, desca: i.ITEMDESC, unit: i.UNIT,\r\n                                    quantity: i.REALQTY_IN,\r\n                                    rate: Number(i.RATE).toFixed(12) ,\r\n                                    amount:  i.PRATE * i.REALQTY_IN ,\r\n                                    nAmount: i.NETAMOUNT, batch: i.BATCH, batchid: i.BATCHID, sno: i.SNO, prate:i.PRATE, \r\n                                    grossAmnt:i.AMOUNT\r\n                                };\r\n                                this.additionalcostService.addtionalCostList.push(acs);\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    if (this.additionalcostService.addtionalCostList.length == 0) {  //new Ref PI load garda\r\n                        // console.log(\"@@ac2\",data.result.ProdList)\r\n                        for (let i of data.result.ProdList) {\r\n                            var acs: prodCost = <prodCost>{\r\n                                mcode: i.MCODE, menucode: i.MENUCODE, desca: i.ITEMDESC, unit: i.UNIT,\r\n                                quantity: i.REALQTY_IN,\r\n                                rate: (i.RATE).toFixed(12),\r\n                                // amount:  i.AMOUNT,                              \r\n                      amount: i.PRATE * i.REALQTY_IN ,\r\n                                nAmount: i.NETAMOUNT, batch: i.BATCH, batchid: i.BATCHID, sno: i.SNO, prate:i.PRATE,grossAmnt:i.AMOUNT\r\n                            };\r\n                            this.additionalcostService.addtionalCostList.push(acs);\r\n                        }\r\n                    }\r\n\r\n                    let sortedArray = _.sortBy(this.additionalcostService.addtionalCostList, 'sno');\r\n                    if (sortedArray) {\r\n                        this.additionalcostService.addtionalCostList = sortedArray;\r\n                    }\r\n\r\n                    if(this.additionalcostService.IndividualCostList.length==0){\r\n                        // this.additionalcostService.IndividualCostList=this.additionalcostService.addtionalCostList;\r\n                        // this.additionalcostService.IndividualCostList.forEach(x=>x.indamount=x.amount);\r\n                        // this.masterService.TOTALINDAMOUNT =0;\r\n                        // this.additionalcostService.IndividualCostList.forEach(x => this.masterService.TOTALINDAMOUNT += x.indamount);\r\n                    }\r\n                    this.masterService.batch = data.result.ProdList && data.result.ProdList.length > 0 && data.result.ProdList[0].BATCH;\r\n                    //total amount\r\n             \r\n                \r\n                    if(data.result.CNDN_MODE==10){\r\n                        this.additionalcostService.loadedTrnmain = data.result; \r\n                    this.additionalcostService.loadedTrnmain.TOTAMNT = data.result.NETAMNT;    \r\n                    }else{\r\n                        this.additionalcostService.loadedTrnmain = data.result; \r\n                        \r\n                    }\r\n                   // this.additionalcostService.loadedTrnmain = data.result;\r\n                 \r\n                    // console.log(\"additionalCstService\", this.additionalcostService.loadedTrnmain)\r\n                    this.loadingService.hide();\r\n                }\r\n                catch (ex) { }\r\n\r\n            }\r\n            else {\r\n                alert(\"Cannot Get Data from Bill no.\")\r\n            }\r\n\r\n            //console.log({ trnMAIN00000000000000: this._trnMainService.TrnMainObj });\r\n        })\r\n\r\n       \r\n    }\r\n\r\n\r\n\r\n      @HostListener('dragover', ['$event'])\r\n        onDragOver(event: DragEvent): void {\r\n            this.isDragging = true;\r\n            // event.preventDefault();\r\n        }\r\n\r\n        @HostListener('drop', ['$event'])\r\n        onDrop(event: DragEvent): void {\r\n            this.isDragging = false;\r\n        //   event.preventDefault();\r\n        }\r\n      \r\n        @HostListener('dragstart', ['$event'])\r\n        onDragStart(event: DragEvent): void {\r\n            this.isDragging = true;\r\n        //   event.preventDefault();\r\n        }\r\n   \r\n\r\n    calculatecosting() {\r\n        this.additionalcostService.generateCostDetails();\r\n\r\n    }\r\n    TabRefBill() {\r\n        //    this.genericGridRefBill.show();\r\n        // this.gridACListPartyPopupSettings = {\r\n        //     title: \"Accounts\",\r\n        //     apiEndpoints: `/getAccountPagedListByMapId/Master/${'SinglePayment_Party'}/`,\r\n        //     defaultFilterIndex: 1,\r\n        //     columns: [\r\n        //       {\r\n        //         key: \"ACCODE\",\r\n        //         title: \"AC CODE\",\r\n        //         hidden: false,\r\n        //         noSearch: false\r\n        //       },\r\n        //       {\r\n        //         key: \"ACNAME\",\r\n        //         title: \"A/C NAME\",\r\n        //         hidden: false,\r\n        //         noSearch: false\r\n        //       }\r\n        //     ]\r\n        //   };\r\n        //console.log(\"@@PURCHASE_TYPE\",this.masterService.RefObj.PURCHASE_TYPE,this._trnMainService.userSetting.ENABLELOCALPURCHASE)\r\n        // if (this._trnMainService.userSetting.ENABLELOCALPURCHASE == 0) {\r\n        //     this.masterService.RefObj.PURCHASE_TYPE = 'ALL';\r\n        // } else {\r\n        //     if (this._trnMainService.userSetting.ENABLELOCALPURCHASE == 1 && !this.masterService.RefObj.PURCHASE_TYPE) {\r\n        //         this.masterService.RefObj.PURCHASE_TYPE = 'ALL';\r\n        //     }\r\n        // }\r\n        this.gridPopupSettingsForRefBill = this.masterService.getGenericGridPopUpSettingsForAdditionalCost(\"AdditionalCost\", this.masterService.RefObj.PURCHASE_TYPE);\r\n        this.genericGridRefBill.show();\r\n    }\r\n    prefix: PREFIX = <PREFIX>{};\r\n    prefixChanged(pref: any) {\r\n        try {\r\n            this._trnMainService.prefix = pref;\r\n            this.prefix = pref;\r\n            if (this.TrnMainObj.Mode == \"NEW\") {\r\n                if (\r\n                    this.TrnMainObj.DIVISION == \"\" ||\r\n                    this.TrnMainObj.DIVISION == null\r\n                ) {\r\n                    this.TrnMainObj.DIVISION = this.setting.appSetting.DefaultDivision;\r\n                }\r\n                this.masterService.getVoucherNo(this.TrnMainObj).subscribe(res => {\r\n                    if (res.status == \"ok\") {\r\n                        let TMain = <TrnMain>res.result;\r\n                        this.TrnMainObj.VCHRNO = TMain.VCHRNO.substr(\r\n                            2,\r\n                            TMain.VCHRNO.length - 2\r\n                        );\r\n                        this.TrnMainObj.CHALANNO = TMain.CHALANNO;\r\n                    } else {\r\n                        alert(\"Failed to retrieve VoucherNo\");\r\n                    }\r\n                });\r\n            }\r\n        } catch (ex) {\r\n        }\r\n    }\r\n\r\n    onRefBillSelected(value) {\r\n        // alert(\"reached\")\r\n        this.masterService.AdditionalPurchaseAcObj = '';\r\n        this.masterService.AdditionalPurchaseCreditAcObj = '';\r\n        this.masterService.mcode = '';\r\n        this.masterService.desca = '';\r\n        this.masterService.batch = '';\r\n        this.masterService.batchid = '';\r\n        this.additionalcostService.GRPcostList=[];\r\n        this.additionalcostService.INDcostList=[];\r\n        this.additionalcostService.costList=[];\r\n\r\n        this.masterService.RefObj.Refno = value.VCHRNO;\r\n        this.masterService.RefObj.disable = true;\r\n        this._trnMainService.TrnMainObj.REFBILL = value.VCHRNO;\r\n        this.masterService.RefObj.InvoiceNo = value.REFBILL;\r\n        this.masterService.RefObj.SupplierName = value.ACNAME;\r\n        this._trnMainService.TrnMainObj.PARAC = value.PARAC;\r\n        this._trnMainService.TrnMainObj.COSTCENTER = value.COSTCENTER;\r\n\r\n        this.masterService.checkPIInDebitNote(this._trnMainService.TrnMainObj.REFBILL).subscribe((data:any)=>{\r\n            if(data.result[0].debitedAmnt!=null && data.result[0].purchaseAmnt!=null){\r\n                if(data.result[0].debitedAmnt==data.result[0].purchaseAmnt||data.result[0].debitedAmnt!=data.result[0].purchaseAmnt){\r\n                    this.alertService.error(\"Additional Costing Cannot be done.This purchase has already been debited.\")\r\n                    this.additionalcostService.addtionalCostList=[];\r\n                    return;\r\n                }\r\n            }else{\r\n                this.getAdditionalCost(value)\r\n            }\r\n          })\r\n      \r\n\r\n        this.masterService.focusAnyControl(\"_AdditioanlCostRate\" + 0)\r\n        // if(this.masterService.RefObj.PURCHASE_TYPE==\"LOCALPURCHASE\"){\r\n        //     this.masterService.PIVoucherDetail(value.VCHRNO).subscribe(res => {\r\n        //         if (res.status == \"ok\") {\r\n        //             if (res.result && res.result.length && res.result.length > 0) {\r\n        //                 this.masterService.pi_costdetaillist=res.result.filter(x=>x.VCHRNO==value.VCHRNO);\r\n        //                 this.masterService.showLoadAllocationbutton=true;\r\n        //                 this.masterService.showCostPopup=true;\r\n        //             }else{\r\n        //                 this.masterService.showLoadAllocationbutton=false;\r\n        //                 this.masterService.showCostPopup=false;\r\n        //             }\r\n        //         }\r\n        //     }, err => {\r\n        //     })\r\n        // }\r\n       \r\n    }\r\n    loadVoucher(selectedItem) {\r\n        this._trnMainService.loadData(\r\n            selectedItem.VCHRNO,\r\n            selectedItem.DIVISION,\r\n            selectedItem.PhiscalID\r\n        );\r\n\r\n        this._trnMainService.showPerformaApproveReject = false;\r\n        if (this._trnMainService.TrnMainObj.gstInfoOfAccount == null) {\r\n            this._trnMainService.TrnMainObj.gstInfoOfAccount = <any>{}\r\n        }\r\n        this._trnMainService.TrnMainObj.gstInfoOfAccount.TRNTYPE = selectedItem.PSTYPE\r\n        // this.vouchernois = selectedItem.VCHRNO;\r\n        // this.division = selectedItem.DIVISION;\r\n        // this.phiscalid = selectedItem.PhiscalID;\r\n\r\n    }\r\n    ImportDetailsClick() {\r\n\r\n    }\r\n    addRow() {\r\n        try {\r\n\r\n            let newRow = <IMPORT_DETAILS_PROD>{};\r\n            newRow.ITEMNAME = '';\r\n            newRow.NETAMOUNT = 0;\r\n            newRow.NONTAXABLE = 0;\r\n            newRow.QUANTITY = 0;\r\n            newRow.TAXABLE = 0;\r\n            newRow.VAT = 0;\r\n            //console.log(\"add row\",newRow);\r\n\r\n            this.additionalcostService.IMPORTDETAILS.prodList && this.additionalcostService.IMPORTDETAILS.prodList.push(newRow);\r\n        } catch (ex) {\r\n            //console.log(ex);\r\n            alert(ex);\r\n        }\r\n    }\r\n\r\n    \r\n    keyPress(event: any) {\r\n        if(event.key!=\"Enter\" && event.key!=\"Tab\"){\r\n            event.preventDefault();\r\n        }\r\n    }\r\n\r\n    EmptyAddCost() {\r\n        this.additionalcostService.costList = [];\r\n        this.additionalcostService.costdetail = [];\r\n        this.additionalcostService.addtionalCostList = [];\r\n        this.additionalcostService.IndividualCostList = [];\r\n        this.additionalcostService.addCostTotAmount = 0;\r\n        this.additionalcostService.GRPcostList = [];\r\n        this.additionalcostService.INDcostList = [];\r\n        this.additionalcostService.addINDCostTotAmount = 0;\r\n        this.additionalcostService.addGRPCostTotAmount = 0;\r\n\r\n        this.masterService.AdditionalAMOUNT = \"\";\r\n        this.masterService.AdditionalPurchaseAcObj = '';\r\n        this.masterService.AdditionalPurchaseCreditAcObj = '';\r\n        this.masterService.AdditionalREMARKS = \"\";\r\n        this.masterService.AdditionalDesc = \"\";\r\n        this.masterService.AdditionalVAT = 0;\r\n        this.masterService.TDSAmount = 0;\r\n        this.masterService.TDSAccount_ACID = \"\";\r\n        this.masterService.TDSAccount_Name = \"\";\r\n        // if (this.masterService.RefObj.PURCHASE_TYPE == 'LOCALPURCHASE') {\r\n        //     this.masterService.DoAccountPosting = 0;\r\n        //     this.masterService.IsTaxableBill = 0;\r\n        // } else {\r\n        // }\r\n        this.masterService.DoAccountPosting = 1;\r\n        this.masterService.IsTaxableBill = 1;\r\n        this.masterService.RefObj.Ref_BILLNO = \"\";\r\n        this.masterService.RefObj.Ref_TRNDATE = \"\";\r\n        this.masterService.RefObj.Ref_BSDATE = \"\";\r\n        this.masterService.RefObj.Ref_SupplierACID = \"\";\r\n        this.masterService.RefObj.Ref_SupplierName = \"\";\r\n        this.masterService.RefObj.Ref_SupplierVAT = \"\";\r\n        this.masterService.showIndividualAmountPopup = false;\r\n        this.additionalcostService.tempIndCostList = [];\r\n        this.masterService.TOTALINDAMOUNT = 0;\r\n        this.masterService.IS_ECA_ITEM = 0;\r\n\r\n        this.masterService.AdditionalAMOUNT_2 = \"\";\r\n        this.masterService.AdditionalPurchaseAcObj_2 = '';\r\n        this.masterService.AdditionalPurchaseCreditAcObj_2 = '';\r\n        this.masterService.AdditionalREMARKS_2 = \"\";\r\n        this.masterService.AdditionalDesc_2 = \"\";\r\n        this.masterService.AdditionalVAT_2 = 0;\r\n        this.masterService.TDSAmount_2 = 0;\r\n        this.masterService.TDSAccount_ACID_2 = \"\";\r\n        this.masterService.TDSAccount_Name_2 = \"\";\r\n        this.masterService.DoAccountPosting_2 = 1;\r\n        this.masterService.IsTaxableBill_2 = 1;\r\n        this.masterService.RefObj.Ref_BILLNO_2 = \"\";\r\n        this.masterService.RefObj.Ref_TRNDATE_2 = \"\";\r\n        this.masterService.RefObj.Ref_BSDATE_2 = \"\";\r\n        this.masterService.RefObj.Ref_SupplierACID_2 = \"\";\r\n        this.masterService.RefObj.Ref_SupplierName_2 = \"\";\r\n        this.masterService.RefObj.Ref_SupplierVAT_2 = \"\";\r\n        this.masterService.IS_ECA_ITEM_2 = 0;\r\n        this.masterService.AssetsTracking = 0;\r\n        this.masterService.AssetsTracking_2 = 0;\r\n\r\n\r\n        this.masterService.TDS_SL_ACID = '';\r\n        this.masterService.TDS_SL_ACNAME = '';\r\n        this.masterService.DR_SL_ACID = '';\r\n        this.masterService.DR_SL_ACNAME = '';\r\n        this.masterService.CR_SL_ACID = '';\r\n        this.masterService.CR_SL_ACNAME = '';\r\n        this.masterService.DR_HASSUBLEDGER=0;\r\n        this.masterService.CR_HASSUBLEDGER=0;\r\n        this.masterService.TDS_HASSUBLEDGER=0;\r\n        this.masterService.DR_SL_INDV_ACID='';\r\n        this.masterService.DR_SL_INDV_ACNAME='';\r\n        this.masterService.CR_SL_INDV_ACID='';\r\n        this.masterService.CR_SL_INDV_ACNAME='';\r\n        this.masterService.TDS_SL_INDV_ACID='';\r\n        this.masterService.TDS_SL_INDV_ACNAME='';\r\n        this.masterService.DR_INDV_HASSUBLEDGER=0;\r\n        this.masterService.CR_INDV_HASSUBLEDGER=0;\r\n        this.masterService.TDS_INDV_HASSUBLEDGER=0;\r\n    }\r\n\r\n    changePurchaseType(){\r\n        this.EmptyAddCost();\r\n        this.masterService.mcode = '';\r\n        this.masterService.desca = '';\r\n        this.masterService.batch = '';\r\n        this.masterService.batchid = '';\r\n        this.masterService.RefObj.Refno='';\r\n        this._trnMainService.TrnMainObj.REFBILL='';\r\n        this.masterService.RefObj.InvoiceNo='';\r\n        this.masterService.RefObj.SupplierName='';\r\n        this._trnMainService.TrnMainObj.PARAC='';\r\n        this.masterService.showLoadAllocationbutton=false;\r\n        this.masterService.showCostPopup=false;\r\n        this.masterService.pi_costdetaillist=[];\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/pages/Purchases/components/NewAdditionalCost/newmasterPageAdditional.component.ts","module.exports = \"\\r\\nhtml, body {\\r\\n    max-width: 100%;\\r\\n    overflow-x: hidden;\\r\\n}\\r\\n\\r\\n.scroll{\\r\\n    overflow-y: scroll;\\r\\n    overflow-x: scroll;\\r\\n}\\r\\n\\r\\n.sidenav {\\r\\n    height: 100%;\\r\\n    width: 0;\\r\\n    position: fixed;\\r\\n    z-index: 1;\\r\\n    top: 0;\\r\\n    left: 0;\\r\\n    background-color: #1A242F;\\r\\n    overflow-x: hidden;\\r\\n    transition: 0.5s;\\r\\n    padding-top: 60px;\\r\\n}\\r\\n\\r\\n\\r\\n.sidenav a {\\r\\n    padding: 8px 8px 8px 32px;\\r\\n    text-decoration: none;\\r\\n    font-size: 25px;\\r\\n    color: #818181;\\r\\n    display: block;\\r\\n    transition: 0.3s\\r\\n}\\r\\n\\r\\n.sidenav a:hover, .offcanvas a:focus{\\r\\n    color: #f1f1f1;\\r\\n}\\r\\n\\r\\n.sidenav .closebtn {\\r\\n    position: absolute;\\r\\n    top: 0;\\r\\n    right: 25px;\\r\\n    font-size: 36px;\\r\\n    margin-left: 50px;\\r\\n}\\r\\n\\r\\n.content {\\r\\n    transition: margin-left .5s;\\r\\n    \\r\\n}\\r\\n\\r\\n.fa-bars{\\r\\n    font-size:25px; \\r\\n    cursor:pointer;\\r\\n    margin-left: 5px;\\r\\n}\\r\\n\\r\\nbutton[disabled]{\\r\\n    cursor: not-allowed;\\r\\n    opacity: 0.65;\\r\\n}\\r\\n\\r\\n.modal{\\r\\n    padding-right: 17px;\\r\\n    padding-left: 17px;\\r\\n}\\r\\n\\r\\n.modal-dialog{\\r\\n    margin: 0px;\\r\\n}\\r\\n\\r\\n.modal-content{\\r\\n    margin-top: 15px;\\r\\n    margin-bottom: 15px;\\r\\n}\\r\\n\\r\\n.modal-body{\\r\\n    padding: 0px;\\r\\n}\\r\\n\\r\\n.modal-footer{\\r\\n    padding-bottom: 15px;\\r\\n    padding-top: 15px;\\r\\n    border-top: 0px;\\r\\n}\\r\\n\\r\\n#header-fixed { \\r\\n    position: fixed; \\r\\n    top: 0px; display:none;\\r\\n    background-color:white;\\r\\n}\\r\\n\\r\\ninput[type=number]::-webkit-inner-spin-button, \\r\\ninput[type=number]::-webkit-outer-spin-button { \\r\\n  -webkit-appearance: none; \\r\\n  margin: 0; \\r\\n}\\r\\n\\r\\ninput[type=date]::-webkit-inner-spin-button, \\r\\ninput[type=date]::-webkit-outer-spin-button { \\r\\n  -webkit-appearance: none; \\r\\n  margin: 0; \\r\\n}\\r\\n\\r\\ntr th{\\r\\n    padding: 5px 2px;\\r\\n    background-color: #FFFFFF;\\r\\n    cursor: default;\\r\\n    font-weight: bold;\\r\\n}\\r\\n\\r\\ntr td{\\r\\n    padding: 0px 2px;\\r\\n    border-top: 0px;\\r\\n    line-height: 31px;\\r\\n}\\r\\n\\r\\ntbody:hover {\\r\\n    background-color: #e0e0e0;\\r\\n}\\r\\n\\r\\ninput, select, textarea{\\r\\n    border: 1px solid #cbcbcb;\\r\\n    border-radius: 3px;\\r\\n    color: black;\\r\\n}\\r\\n\\r\\ninput, select{\\r\\n    height: 23px;\\r\\n}\\r\\n\\r\\ninput{\\r\\n    padding-left: 4px;\\r\\n}\\r\\n\\r\\ninput[type=date]{\\r\\n    line-height: inherit;\\r\\n}\\r\\n\\r\\n.ledger-bottom-padding{\\r\\n    padding-bottom: 0px;\\r\\n}\\r\\n\\r\\n.content-top{\\r\\n    padding-top: 0px;\\r\\n    padding-bottom: 13px;\\r\\n}\\r\\n\\r\\nbutton{\\r\\n    margin-top: 4px; \\r\\n}\\r\\n\\r\\ntr td:last-child {\\r\\n    padding-right: 0px;\\r\\n}\\r\\n\\r\\n@media (min-width: 992px){\\r\\n    .modal-lg {\\r\\n        width: 100%;\\r\\n    }\\r\\n}\\r\\n\\r\\n\\r\\n@media (max-width: 767px) {\\r\\n    .fa{\\r\\n        display: none;\\r\\n    }\\r\\n\\r\\n    #mobile-top{\\r\\n        margin-top: 80px;\\r\\n    }\\r\\n\\r\\n    #content{\\r\\n       margin-left: 0px;\\r\\n   }\\r\\n}\\r\\n\\r\\nfieldset {\\r\\n  padding: 1em;\\r\\n  font:80%/1 sans-serif;\\r\\n  }\\r\\nlabel {\\r\\n  float:left;\\r\\n  width:25%;\\r\\n  margin-right:0.5em;\\r\\n  padding-top:0.2em;\\r\\n  text-align:right;\\r\\n  font-weight:bold;\\r\\n  }\\r\\n\\r\\n  input:disabled, select:disabled, textarea:disabled {\\r\\n    cursor: not-allowed !important;\\r\\n    color: black !important;\\r\\n    background-color: #EBEBE4 !important;\\r\\n}\\r\\n\\r\\nbutton:disabled{\\r\\n    cursor: not-allowed !important;\\r\\n}\\r\\n\\r\\n::-webkit-input-placeholder{\\r\\n  color: rgba(0, 0, 0, 0.5) !important;\\r\\n  opacity: 1 !important;\\r\\n}\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/assets/css/styles.css\n// module id = 1266\n// module chunks = 1 2 3","export class ServerSourceConf {\r\n\r\n  protected static readonly SORT_FIELD_KEY = '_sort';\r\n  protected static readonly SORT_DIR_KEY = '_order';\r\n  protected static readonly PAGER_PAGE_KEY = '_page';\r\n  protected static readonly PAGER_LIMIT_KEY = '_limit';\r\n  protected static readonly FILTER_FIELD_KEY = '#field#_like';\r\n  protected static readonly TOTAL_KEY = 'x-total-count';\r\n  protected static readonly DATA_KEY = '';\r\n\r\n  endPoint: string;\r\n\r\n  sortFieldKey: string;\r\n  sortDirKey: string;\r\n  pagerPageKey: string;\r\n  pagerLimitKey: string;\r\n  filterFieldKey: string;\r\n  totalKey: string;\r\n  dataKey: string;\r\n\r\n  constructor(\r\n    {endPoint = '', sortFieldKey = '', sortDirKey = '', pagerPageKey = '', pagerLimitKey = '', filterFieldKey = '', totalKey = '', dataKey = ''} = {}) {\r\n\r\n    this.endPoint = endPoint ? endPoint : '';\r\n\r\n    this.sortFieldKey = sortFieldKey ? sortFieldKey : ServerSourceConf.SORT_FIELD_KEY;\r\n    this.sortDirKey = sortDirKey ? sortDirKey : ServerSourceConf.SORT_DIR_KEY;\r\n    this.pagerPageKey = pagerPageKey ? pagerPageKey : ServerSourceConf.PAGER_PAGE_KEY;\r\n    this.pagerLimitKey = pagerLimitKey ? pagerLimitKey : ServerSourceConf.PAGER_LIMIT_KEY;\r\n    this.filterFieldKey = filterFieldKey ? filterFieldKey : ServerSourceConf.FILTER_FIELD_KEY;\r\n    this.totalKey = totalKey ? totalKey : ServerSourceConf.TOTAL_KEY;\r\n    this.dataKey = dataKey ? dataKey : ServerSourceConf.DATA_KEY;\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/~/ng2-smart-table/src/ng2-smart-table/lib/data-source/server/server-source.conf.ts","import { Http ,RequestOptionsArgs,URLSearchParams, Headers} from '@angular/http';\r\nimport { LocalDataSource } from '../local/local.data-source';\r\n//import { RequestOptionsArgs } from '@angular/http/src/interfaces';\r\n//import { URLSearchParams } from '@angular/http/src/url_search_params';\r\nimport { Observable } from 'rxjs';\r\nimport { ServerSourceConf } from './server-source.conf';\r\nimport { getDeepFromObject } from '../../helpers';\r\nimport { consumptionTableComponent } from '../../../../../../../pages/Inventory/components/consumption/consumptionTable.component';\r\n\r\nexport class ServerDataSource extends LocalDataSource {\r\n\r\n  protected conf: ServerSourceConf;\r\n\r\n  protected lastRequestCount: number = 0;\r\n\r\n  constructor(protected http: Http,conf: ServerSourceConf|{} = {}) {\r\n    super();\r\n    this.conf = new ServerSourceConf(conf);\r\n    if (!this.conf.endPoint) {\r\n      throw new Error('At least endPoint must be specified as a configuration of the server data source.');\r\n    }\r\n  }\r\n\r\n  count(): number {\r\n    return this.lastRequestCount;\r\n  }\r\n\r\n  getElements(): Promise<any> {\r\n    return this.requestElements().map(res => {\r\n      // console.log(\"response got form the server \" + JSON.stringify(res))\r\n      let body = JSON.parse(res._body) \r\n      //console.log(JSON.stringify(body))\r\n      this.lastRequestCount = body.totalCount;//this.extractTotalFromResponse(res);\r\n      this.data = this.extractDataFromResponse(res);\r\n\r\n      // console.log(\"from total count \" +  JSON.stringify(this.lastRequestCount))\r\n      return this.data;\r\n    }).toPromise();\r\n  }\r\n\r\n  /**\r\n   * Extracts array of data from server response\r\n   * @param res\r\n   * @returns {any}\r\n   */\r\n  protected extractDataFromResponse(res): Array<any> {\r\n    const rawData = res.json();\r\n    let data = !!this.conf.dataKey ? getDeepFromObject(rawData, this.conf.dataKey, []) : rawData;\r\n\r\n    if (data instanceof Array) {\r\n      return data;\r\n    }\r\n\r\n    throw new Error(`Data must be an array. Please check that data extracted from the server response by the key '${this.conf.dataKey}' exists and is array.`);\r\n  }\r\n\r\n  /**\r\n   * Extracts total rows count from the server response\r\n   * Looks for the count in the heders first, then in the response body\r\n   * @param res\r\n   * @returns {any}\r\n   */\r\n  protected extractTotalFromResponse(res): number {\r\n    // console.log(\"total key :\" + this.conf.totalKey)\r\n    // console.log(\"total key :\" + JSON.stringify(res))\r\n    if (res.headers.has(this.conf.totalKey)) {\r\n      return +res.headers.get(this.conf.totalKey);\r\n    } else {\r\n      const rawData = res.json();\r\n      return getDeepFromObject(rawData, this.conf.totalKey, 0)\r\n    }\r\n  }  \r\n \r\n  protected requestElements(): Observable<any> { \r\n    //console.log(\"hey pradeep i am here.\")\r\n    return this.http.get(this.conf.endPoint,this.createRequestOptions());\r\n  }\r\n\r\n  protected createRequestOptions(): RequestOptionsArgs {\r\n    let requestOptions: RequestOptionsArgs = {};\r\n\r\n    let token =  localStorage.getItem(\"TOKEN\")\r\n    // console.log(\"token at data table :\" + token? token.replace(/['\"]+/g, '') : '')\r\n    // console.log(\"token at data table :\" + token)\r\n    requestOptions.headers = new Headers()\r\n    //console.log(token);\r\n    requestOptions.headers.append('Authorization', token? token.replace(/['\"]+/g, '') : '');\r\n\r\n    requestOptions.search = new URLSearchParams();\r\n\r\n    requestOptions = this.addSortRequestOptions(requestOptions);\r\n    requestOptions = this.addFilterRequestOptions(requestOptions);\r\n\r\n\r\n    return this.addPagerRequestOptions(requestOptions);\r\n  }\r\n\r\n  protected addSortRequestOptions(requestOptions: RequestOptionsArgs): RequestOptionsArgs {\r\n    let searchParams: URLSearchParams = <URLSearchParams> requestOptions.search;\r\n\r\n    let sort = [];\r\n    if (this.sortConf) {\r\n      this.sortConf.forEach((fieldConf) => { \r\n        sort.push({ \r\n          \"Field\" : fieldConf.field,\r\n          \"Dir\" : fieldConf.direction.toUpperCase()\r\n        })\r\n        // searchParams.set(this.conf.sortFieldKey, fieldConf.field);\r\n        // searchParams.set(this.conf.sortDirKey, fieldConf.direction.toUpperCase());\r\n      });\r\n\r\n      if(sort.length) searchParams.set(\"sort\",  JSON.stringify(sort));\r\n    }\r\n\r\n    return requestOptions;\r\n  }\r\n\r\n  protected addFilterRequestOptions(requestOptions: RequestOptionsArgs): RequestOptionsArgs {\r\n    let searchParams: URLSearchParams = <URLSearchParams> requestOptions.search;\r\n    let filters = [];\r\n    if (this.filterConf.filters) {\r\n      this.filterConf.filters.forEach((fieldConf) => {\r\n        if (fieldConf['search']) {\r\n          filters.push({\"Field\" : fieldConf['field'], \"Value\": fieldConf['search']})\r\n          // searchParams.set(this.conf.filterFieldKey.replace('#field#', fieldConf['field']), fieldConf['search']);\r\n        }\r\n      });\r\n      if(filters.length) searchParams.set(\"filters\", JSON.stringify(filters)); \r\n    }\r\n\r\n    return requestOptions;\r\n  }\r\n\r\n  protected addPagerRequestOptions(requestOptions: RequestOptionsArgs): RequestOptionsArgs {\r\n    let searchParams: URLSearchParams = <URLSearchParams> requestOptions.search;\r\n\r\n    if (this.pagingConf && this.pagingConf['page'] && this.pagingConf['perPage']) {\r\n      searchParams.set(this.conf.pagerPageKey, this.pagingConf['page']);\r\n      searchParams.set(this.conf.pagerLimitKey, this.pagingConf['perPage']);\r\n    }\r\n\r\n    return requestOptions;\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/~/ng2-smart-table/src/ng2-smart-table/lib/data-source/server/server.data-source.ts","export * from './grid';\r\nexport * from './data-source/data-source';\r\nexport * from './data-source/local/local.data-source';\r\nexport * from './data-source/server/server.data-source'\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/~/ng2-smart-table/src/ng2-smart-table/lib/index.ts","import { Http, Response, RequestOptions, Headers } from '@angular/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { AuthService } from '../../../../common/services/permission';\r\nimport { GlobalState } from '../../../../../app/global.state';\r\nimport { Observable } from 'rxjs';\r\n@Injectable()\r\n\r\nexport class VehicleCostTrackingService {\r\n    public activeurlpath: any;\r\n    public bodyData: any;\r\n\r\n    constructor(private http: Http, private activatedRoute: ActivatedRoute,\r\n        private authService: AuthService, private state: GlobalState) {\r\n        this.activeurlpath = activatedRoute.snapshot.url.join('');\r\n    }\r\n    private get apiUrl(): string {\r\n        let url = this.state.getGlobalSetting(\"apiUrl\");\r\n        let apiUrl = \"\";\r\n\r\n        if (!!url && url.length > 0) { apiUrl = url[0] };\r\n        return apiUrl\r\n    }\r\n\r\n    public extractData(res: Response) {\r\n        let response = res.json();\r\n        return response || {};\r\n    }\r\n    public handleError(error: Response | any) {\r\n        return Observable.throw(error);\r\n    }\r\n\r\n    private getRequestOption() {\r\n        let headers: Headers = new Headers({ 'Content-type': 'application/json', 'Authorization': this.authService.getAuth().token })\r\n        return new RequestOptions({ headers: headers });\r\n    }\r\n\r\n    public UntrackedPIVoucherList() {\r\n        return this.http.get(`${this.apiUrl}/UntrackedPIVoucherList`, this.getRequestOption())\r\n            .map(this.extractData)\r\n            .catch(this.handleError)\r\n    }\r\n\r\n    public saveVehicleCostTracking(data) {\r\n        return this.http.post(`${this.apiUrl}/saveVehicleCostTracking`, {data:data}, this.getRequestOption())\r\n            .map(this.extractData)\r\n            .catch(this.handleError)\r\n    }\r\n\r\n    public PIVoucherDetailInAD(voucherno) {\r\n        let _voucherno = voucherno.replace(\"/\", \"ZZ\");\r\n        return this.http.get(`${this.apiUrl}/PIVoucherDetailInAD/${_voucherno}`, this.getRequestOption())\r\n            .map(this.extractData)\r\n            .catch(this.handleError)\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/pages/AccountVoucher/components/vehicle-cost-tracking/vehicle-cost-tracking.service.ts","import { Component, Input, Output, EventEmitter, OnInit, OnDestroy, ViewChild } from '@angular/core';\r\nimport { ModalDirective } from 'ng2-bootstrap'\r\nimport { NgForm, FormGroup, FormControl, Validators, FormBuilder } from '@angular/forms';\r\nimport { Subscription } from \"rxjs/Subscription\";\r\nimport { PrefixService } from './prefix.service';\r\nimport { PREFIX } from \"../../common/interfaces/Prefix.interface\";\r\nimport { VoucherTypeEnum } from '../../common/interfaces/TrnMain';\r\nimport { BehaviorSubject } from \"rxjs/BehaviorSubject\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { MasterRepo } from \"../repositories/index\";\r\n@Component(\r\n  {\r\n    selector: 'SeriesDialog',\r\n    template: require('./prefix.component.html'),\r\n    styles: [`\r\n            .modal{\r\n                padding-top:0px;\r\n            }\r\n        `],\r\n    providers: [PrefixService],\r\n\r\n  }\r\n)\r\nexport class PrefixComponent {\r\n  selectedVT: string;\r\n  @Input() voucherType: VoucherTypeEnum = 0;\r\n  @Output() sendPrefix = new EventEmitter();\r\n  @Output() closepopup = new EventEmitter();\r\n\r\n  prefix: PREFIX = <PREFIX>{};\r\n  prefixList: PREFIX[] = [];\r\n  prefixes: PREFIX[] = [];\r\n  prefixessubject: BehaviorSubject<PREFIX[]> = new BehaviorSubject([]);\r\n  prefixesObservable$: Observable<PREFIX[]> = this.prefixessubject.asObservable();\r\n\r\n  ngOnInit() {\r\n    try {\r\n      this.service.getVoucherType(this.voucherType).subscribe((data) => {\r\n        this.prefixessubject.next(<PREFIX[]>data);\r\n      }, error => { });\r\n      // var vname = this.masterService.getPrefixVname(this.voucherType);\r\n      var vchr: string = VoucherTypeEnum[this.voucherType];\r\n      this.selectedVT = vchr;\r\n      // this.prefix.VOUCHERNAME = this.selectedVT;\r\n      // this.prefix.VNAME = vname;\r\n      /*\r\n      switch (this.voucherType) {\r\n          case VoucherTypeEnum.Journal:\r\n              this.selectedVT = \"Journal\"; this.prefix.VNAME = \"JV\";\r\n              break;\r\n          case VoucherTypeEnum.PaymentVoucher:\r\n              this.selectedVT = \"Payment\"; this.prefix.VNAME = \"PV\";\r\n              break;\r\n          case VoucherTypeEnum.ReceiveVoucher:\r\n              this.selectedVT = \"Receive\"; this.prefix.VNAME = \"RV\";\r\n              break;\r\n          case VoucherTypeEnum.CreditNote:\r\n              this.selectedVT=\"CreditNote\";this.prefix.VNAME='CN';\r\n      }\r\n      */\r\n      // this.sendPrefix.emit(this.prefix);\r\n     \r\n    } catch (ex) {\r\n    }\r\n  }\r\n\r\n  constructor(protected service: PrefixService, private masterService: MasterRepo) {\r\n\r\n  }\r\n  OK(){\r\n   this.ClosePop();\r\n  }\r\n\r\n  getCurSequence() {\r\n    try {\r\n      this.sendPrefix.emit(this.prefix);\r\n    } catch (ex) {\r\n    }\r\n  }\r\n\r\n  // voucherTypeChange(selectVoucherType:VoucherTypeEnum, SelectedVoucher: string) {\r\n  //     this.prefixList=this.prefixes.filter(x=>x.voucherType==selectVoucherType)\r\n  //     if (SelectedVoucher != null) {\r\n  //         if (SelectedVoucher == \"Journal\") {\r\n  //             this.prefixList = this.prefixes.filter(x => x.VOUCHERTYPE == \"Journal\");\r\n\r\n\r\n  //         }\r\n  //         else if (SelectedVoucher == \"Payment\") {\r\n  //             this.prefixList = this.prefixes.filter(x => x.VOUCHERTYPE == \"Payment\");\r\n  //         }\r\n  //     }\r\n  // }\r\n\r\n  prefixChanged() {\r\n    try {\r\n      // alert(\"A\"+this.prefix.VNAME)\r\n      this.sendPrefix.emit(this.prefix);\r\n    } catch (ex) {\r\n      alert(ex);\r\n    }\r\n  }\r\n  ClosePop(){\r\n    this.closepopup.emit();\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/common/Prefix/prefix.component.ts","import { Injectable } from '@angular/core'\r\nimport { PREFIX } from '../interfaces/Prefix.interface';\r\nimport { Http } from \"@angular/http\";\r\nimport { MasterRepo } from \"../repositories/masterRepo.service\";\r\nimport { VoucherTypeEnum } from \"../interfaces/index\";\r\nimport { Observable } from \"rxjs/Observable\";\r\n\r\n@Injectable()\r\nexport class PrefixService {\r\n  vlist: any[] = [];\r\n  vlistObservable: Observable<any[]>;\r\n  constructor(private http: Http, private masterService: MasterRepo) {\r\n\r\n  }\r\n  getVoucherType(voucherType: VoucherTypeEnum) {\r\n    if (this.vlist.length > 0) {\r\n      return Observable.of(this.vlist);\r\n    }\r\n    else if (this.vlistObservable) {\r\n      return this.vlistObservable;\r\n    }\r\n    else {\r\n\r\n      this.vlistObservable = this.http.post(this.masterService.apiUrl + '/getVoucherTypeList', { voucherType: voucherType }, this.masterService.getRequestOption())\r\n        .flatMap(res => {\r\n          return res.json() || []\r\n        })\r\n        .map(data => {\r\n          this.vlistObservable = null;\r\n          this.vlist.push(data)\r\n          return this.vlist;\r\n        }).share();\r\n      return this.vlistObservable;\r\n    }\r\n  }\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/common/Prefix/prefix.service.ts","\r\nimport { Directive, ElementRef, HostListener, Input } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[OnlyNumber]'\r\n})\r\nexport class OnlyNumber {\r\n\r\n  constructor(private el: ElementRef) { }\r\n\r\n  @Input() OnlyNumber: boolean;\r\n\r\n  @HostListener('keydown', ['$event']) onKeyDown(event) {\r\n    let e = <KeyboardEvent>event;\r\n    if (this.OnlyNumber) {\r\n      if ([46, 8, 9, 27, 13, 110, 190].indexOf(e.keyCode) !== -1 ||\r\n        // Allow: Ctrl+A\r\n        (e.keyCode == 65 && e.ctrlKey === true) ||\r\n        // Allow: Ctrl+C\r\n        (e.keyCode == 67 && e.ctrlKey === true) ||\r\n        // Allow: Ctrl+X\r\n        (e.keyCode == 88 && e.ctrlKey === true) ||\r\n        // Allow: home, end, left, right\r\n        (e.keyCode >= 35 && e.keyCode <= 39)) {\r\n        // let it happen, don't do anything\r\n        return;\r\n      }\r\n      // Ensure that it is a number and stop the keypress\r\n      if ((e.shiftKey || (e.keyCode < 48 || e.keyCode > 57)) && (e.keyCode < 96 || e.keyCode > 105)) {\r\n        e.preventDefault();\r\n      }\r\n    }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/common/directives/onlynumber.directive.ts","import { RouterModule, Routes } from '@angular/router';\r\nimport { CanActivateTeam } from '../../common/services/permission/guard.service';\r\nimport { MasterAdditionalComponent } from '../Purchases/components/AdditionalCost/masterPageAdditional.component';\r\nimport { MasterNewAdditionalComponent } from '../Purchases/components/NewAdditionalCost/newmasterPageAdditional.component';\r\nimport { AddPurchaseInvoiceComponent } from '../Purchases/components/purchaseinvoice/AddPurchaseInvoice';\r\nimport { AccountVouchers } from './accountvoucher.component';\r\nimport { CashCollection } from './components/CashCollection/cashcollection.component';\r\nimport { CellPayVoucherComponent } from './components/CellPayVoucher/CellPay-Voucher.component';\r\nimport { CreditNoteComponent } from './components/CreditNote/credit-note.component';\r\nimport { DebitNoteComponent } from './components/DebitNote/debit-note.component';\r\nimport { ExpensesVoucherComponent } from \"./components/ExpensesVoucher/expenses-voucher.component\";\r\nimport { IncomeVoucherComponent } from \"./components/IncomeVoucher/income-voucher.component\";\r\nimport { PaymentCollection } from './components/PaymentCollection/PaymentCollection.component';\r\nimport { PostDirectoryComponent } from './components/PostDirectory/postdirectory.component';\r\nimport { ReverseCreditNoteComponent } from './components/ReverseCreditNote/reverse-credit-note.component';\r\nimport { AccountHeadingWiseDepreciationDetailComponent } from './components/account-headingwise-depreciation-detail/account-headingwise-depreciation-detail.component';\r\nimport { AccountOpeningBalance } from './components/account-opening-balance/account-opening-balance.component';\r\nimport { BankReconciliationComponent } from './components/bank-reconciliation/bank-reconciliation.component';\r\nimport { BillTrackingAmendmentComponent } from './components/bill-tracking-amendment/bill-tracking-amendment.component';\r\nimport { CapitalVoucherComponent } from './components/capital-voucher/capital-voucher.component';\r\nimport { ContraVoucherComponent } from './components/contra/contra-voucher.component';\r\nimport { DepreciationDetailsComponent } from './components/depreciation-detail/depreciation-detail.component';\r\nimport { ItemWiseDepreciationDetailComponent } from './components/itemwise-depreciation-detail/itemwise-depreciation-detail.component';\r\nimport { JournalVoucherComponent } from './components/journal/journal-voucher.component';\r\nimport { PartyBalanceConfirmationComponent } from './components/party-balance-confirmation/party-balance-confirmation.component';\r\nimport { PartyOpeningBalance } from './components/party-opening-balance/party-opening-balance.component';\r\nimport { PartyReconciliationComponent } from './components/party-reconciliation/party-reconciliation.component';\r\nimport { VoucherPosting } from './components/voucher-posting/voucher-posting.component';\r\nimport { VoucherRenumberingComponent } from './components/voucher-renumbering/voucher-renumbering.component';\r\nimport { BulkPrintComponent } from './components/BulkPrint/bulk-print.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: AccountVouchers,\r\n    children: [\r\n      { path: 'acvouchers/journal-voucher', component: JournalVoucherComponent, canActivate: [CanActivateTeam] },\r\n      { path: 'acvouchers/contra-voucher', component: ContraVoucherComponent, canActivate: [CanActivateTeam] },\r\n      // { path: 'acvouchers/payment-voucher/payment-single', component: PaymentSingleComponent, canActivate: [CanActivateTeam] },\r\n      { path: 'acvouchers/income-voucher', component: IncomeVoucherComponent, canActivate: [CanActivateTeam] },\r\n      { path: 'acvouchers/expense-voucher', component: ExpensesVoucherComponent, canActivate: [CanActivateTeam] },\r\n      { path: 'acvouchers/debit-note', component: DebitNoteComponent, canActivate: [CanActivateTeam] },\r\n      { path: 'acvouchers/credit-note', component: CreditNoteComponent, canActivate: [CanActivateTeam] },\r\n      // { path: 'acvouchers/debit-note-rate-adjustment', component: DebitNoteRateAdjustmentComponent, canActivate: [CanActivateTeam] },\r\n      // { path: 'acvouchers/credit-note-rate-adjustment', component: DebitNoteRateAdjustmentComponent, canActivate: [CanActivateTeam] },\r\n      { path: 'Utilities/bill-tracking', component: BillTrackingAmendmentComponent, canActivate: [CanActivateTeam] },\r\n      { path: 'acvouchers/capital-voucher', component: CapitalVoucherComponent, canActivate: [CanActivateTeam] },\r\n      { path: 'acvouchers/additional-cost', component: MasterAdditionalComponent, canActivate: [CanActivateTeam] },\r\n      { path: 'acvouchers/newadditional-cost', component: MasterNewAdditionalComponent, canActivate: [CanActivateTeam] },\r\n      { path: \"Opening/account-opening-balance\", component: AccountOpeningBalance, canActivate: [CanActivateTeam] },\r\n      { path: \"Opening/party-opening-balance\", component: PartyOpeningBalance, canActivate: [CanActivateTeam] },\r\n\r\n      { path: 'AccountLedger', loadChildren: 'app/pages/masters/components/ALedger/aledger.module#AledgerModule', canActivate: [CanActivateTeam] },\r\n      { path: 'LatePostCollection', loadChildren: 'app/pages/AccountVoucher/components/EnableLatePost/EnableLatePost.module#EnableLatePostModule', canActivate: [CanActivateTeam] },\r\n      { path: 'EPaymentStatus', loadChildren: 'app/pages/AccountVoucher/components/E-PaymentStatus/EPaymentStatus.module#EPaymentStatusModule', canActivate: [CanActivateTeam] },\r\n      { path: 'acvouchers/voucher-posting', component: VoucherPosting, canActivate: [CanActivateTeam] },\r\n      { path: \"Utilities/bank-reconciliation\", component: BankReconciliationComponent, canActivate: [CanActivateTeam] },\r\n      { path: \"Utilities/party-balance-confirmation\", component: PartyBalanceConfirmationComponent, canActivate: [CanActivateTeam] },\r\n      { path: \"Utilities/account-headingwise-depreciation-detail\", component: AccountHeadingWiseDepreciationDetailComponent, canActivate: [CanActivateTeam] },\r\n      { path: \"Utilities/itemwise-depreciation-detail\", component: ItemWiseDepreciationDetailComponent, canActivate: [CanActivateTeam] },\r\n      { path: 'day-book', loadChildren: 'app/pages/financial-report/day-book/day-book.module#DayBookModule', canActivate: [CanActivateTeam] },\r\n      { path: 'cash-book', loadChildren: 'app/pages/financial-report/cash-book/cash-book.module#CashBookModule', canActivate: [CanActivateTeam] },\r\n      { path: 'bank-book', loadChildren: 'app/pages/financial-report/bank-book/bank-book.module#BankBookModule', canActivate: [CanActivateTeam] },\r\n      { path: 'trial-balance', loadChildren: 'app/pages/financial-report/trial-balance/trial-balance.module#TrialBalanceModule', canActivate: [CanActivateTeam] },\r\n      { path: 'profit-loss', loadChildren: 'app/pages/financial-report/profit-loss/profit-loss.module#ProfitLossModule', canActivate: [CanActivateTeam] },\r\n      { path: 'balance-sheet', loadChildren: 'app/pages/financial-report/balance-sheet/balance-sheet.module#BalanceSheetModule', canActivate: [CanActivateTeam] },\r\n      { path: 'ledger-report', loadChildren: 'app/pages/financial-report/ledger-voucher/ledger-voucher.module#LedgerVoucherModule', canActivate: [CanActivateTeam] },\r\n      { path: 'voucher-register', loadChildren: 'app/pages/financial-report/voucher-register/voucher-register.module#VoucherRegisterModule', canActivate: [CanActivateTeam] },\r\n      // { path: 'vatsalesreport', loadChildren: 'app/pages/financial-report/VAT-Sales-Report/VAT-Sales-Report.module#VATSalesReportModule', canActivate: [CanActivateTeam] },\r\n      { path: 'openingbalance', loadChildren: 'app/pages/financial-report/Opening_Balance/openingBalance.module#OpeningBalancerModule', canActivate: [CanActivateTeam] },\r\n      {path: 'renum/VoucherRenumbering', component: VoucherRenumberingComponent, canActivate:[CanActivateTeam]},\r\n      {path: 'print/bulkprint', component: BulkPrintComponent, canActivate:[CanActivateTeam]},\r\n      // {path: 'acvouchers/PaymentCollection', component: PaymentCollection, canActivate:[CanActivateTeam]},\r\n      // {path: 'acvouchers/simpleCollection', component: SimpleCollectionComponent,canActivate:[CanActivateTeam]},\r\n      {path: 'Utilities/PaymentCollection', component: PaymentCollection, canActivate:[CanActivateTeam]},\r\n      {path: 'acvouchers/postdirectory', component: PostDirectoryComponent, canActivate:[CanActivateTeam]},\r\n      { path: \"Utilities/party-reconciliation\", component: PartyReconciliationComponent, canActivate: [CanActivateTeam] },\r\n      { path: 'acvouchers/cellpay-voucher', component: CellPayVoucherComponent, canActivate: [CanActivateTeam] },\r\n      { path: 'acvouchers/reverse-credit-note', component: ReverseCreditNoteComponent, canActivate: [CanActivateTeam] },\r\n      { path: 'purchases/add-purchase-invoice', component: AddPurchaseInvoiceComponent, canActivate: [CanActivateTeam] },\r\n      { path: 'acvouchers/localpurchase-costallocation', loadChildren: 'app/pages/AccountVoucher/components/vehicle-cost-tracking/localpurchase-costallocation.module#LocalPurchaseCostAllocationModule', canActivate: [CanActivateTeam] },\r\n      {path: 'Utilities/cash-collection', component: CashCollection, canActivate:[CanActivateTeam]},\r\n      { path: \"Utilities/depreciation-detail\", component: DepreciationDetailsComponent, canActivate: [CanActivateTeam] },\r\n      \r\n    ]\r\n  }\r\n];\r\n\r\nexport const routing = RouterModule.forChild(routes);\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/pages/AccountVoucher/accountvoucher.routing.ts","import { Component, AfterContentChecked, ChangeDetectorRef, PipeTransform } from \"@angular/core\";\r\nimport { TransactionService } from \"../../../../common/Transaction Components/transaction.service\";\r\nimport { PREFIX } from \"../../../../common/interfaces/Prefix.interface\";\r\nimport { VoucherTypeEnum } from \"../../../../common/interfaces/TrnMain\";\r\nimport { TrnMain } from \"../../../../common/interfaces/TrnMain\";\r\nimport { MasterRepo } from \"../../../../common/repositories/masterRepo.service\";\r\nimport { SettingService } from \"../../../../common/services/setting.service\";\r\nimport { ConvertToDecimalPipe } from \"../../../../common/decimal.pipe\";\r\n\r\n@Component({\r\n  selector: \"DrCrFooter_With_VAT\",\r\n  template: require('./FooterwithIncludedVAT.component.html'),\r\n  styles: [require('../../../Style.css')]\r\n \r\n})\r\nexport class DrCrFooterWithVATIncluded implements AfterContentChecked , PipeTransform {\r\n\r\n\r\n\r\n  differenceAmount:number = 0;\r\n  diffAmountDrCrType:string = \"\";\r\n  TrnMainObj: TrnMain = <TrnMain>{};\r\n  voucherType: VoucherTypeEnum = VoucherTypeEnum.DebitNote;\r\n  prefix: PREFIX = <PREFIX>{};\r\n  applyPipeinTaxable:boolean=true;\r\n  applyPipeinNonTaxable:boolean=true;\r\n  constructor(\r\n    private masterService: MasterRepo,\r\n    private _transactionService: TransactionService,\r\n    private setting: SettingService,\r\n    private changeDetection: ChangeDetectorRef\r\n  ) {\r\n    this.TrnMainObj = _transactionService.TrnMainObj;\r\n    // this.differenceAmount = this._transactionService.differenceAmount;\r\n    // this.diffAmountDrCrType = this._transactionService.diffAmountDrCrType;\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n  \r\n  }\r\n\r\n  ngAfterContentChecked(): void {    \r\n    this.differenceAmount = this._transactionService.diffAmountItemForAccount;\r\n    this.diffAmountDrCrType = this._transactionService.diffAmountDrCrType;\r\n    this.changeDetection.detectChanges();\r\n\r\n}\r\n\r\n\r\n\r\n  onChange(){\r\n  \r\n    this.differenceAmount = this._transactionService.differenceAmount;\r\n    this.diffAmountDrCrType = this._transactionService.diffAmountDrCrType;\r\n  }\r\n\r\n\r\n\r\n  calculateCrAmount() {\r\n    this._transactionService.totalCRAmount = 0;\r\n    this._transactionService.creditList.forEach(x => this._transactionService.totalCRAmount += x.CRAMNT);\r\n    this._transactionService.totalCRAmount += this._transactionService.TrnMainObj.DCAMNT;\r\n  }\r\n  \r\n  taxableAmountChange(event) {\r\n    this.applyPipeinTaxable = false;\r\n    var TAXABLE = this._transactionService.nullToReturnZero(this._transactionService.TrnMainObj.TAXABLE);\r\n      var Gross = this._transactionService.nullToReturnZero(this._transactionService.TrnMainObj.TOTAMNT)\r\n    if(Gross<TAXABLE){\r\n      this._transactionService.TrnMainObj.TAXABLE = 0\r\n    }\r\n    \r\n    this._transactionService.TrnMainObj.NONTAXABLE = \r\n    this._transactionService.nullToReturnZero(this._transactionService.TrnMainObj.TOTAMNT) -\r\n     this._transactionService.nullToReturnZero(this._transactionService.TrnMainObj.TAXABLE)\r\n   // this._transactionService.TrnMainObj.NONTAXABLE = this.transform(this._transactionService.TrnMainObj.NONTAXABLE);\r\n     this.calculation();\r\n  }\r\n  nonTaxableAmountChange(event) {\r\n    this.applyPipeinNonTaxable = false;\r\n    ////console.log(\"call non taxable\");\r\n    var NONTAXABLE = this._transactionService.nullToReturnZero(this._transactionService.TrnMainObj.TAXABLE);\r\n    var Gross = this._transactionService.nullToReturnZero(this._transactionService.TrnMainObj.TOTAMNT)\r\n    ////console.log(\"nontaxable\",NONTAXABLE,Gross);\r\n    if(NONTAXABLE>Gross){\r\n    this._transactionService.TrnMainObj.NONTAXABLE = 0\r\n  }\r\n    // this._transactionService.TrnMainObj.NONTAXABLE = this._transactionService.nullToZeroConverter(event.target.value);\r\n    // this._transactionService.TrnMainObj.TAXABLE = this._transactionService.TrnMainObj.TOTAMNT - this._transactionService.nullToZeroConverter(this._transactionService.TrnMainObj.DCAMNT) - this._transactionService.nullToZeroConverter(this._transactionService.TrnMainObj.NONTAXABLE);\r\n    \r\n    this._transactionService.TrnMainObj.TAXABLE = this._transactionService.nullToReturnZero(this._transactionService.TrnMainObj.TOTAMNT) - this._transactionService.nullToReturnZero(this._transactionService.TrnMainObj.NONTAXABLE)\r\n\r\n    //this._transactionService.TrnMainObj.TAXABLE = this.transform(this._transactionService.TrnMainObj.TAXABLE);\r\n    this.calculation();\r\n  }\r\n  VATAmountChange(event) {\r\n \r\n    // this._transactionService.TrnMainObj.VATAMNT = this._transactionService.nullToZeroConverter(event.target.value);\r\n    // this.budgetCalculation();\r\n  }\r\n\r\n  focusOutNonTaxableAmountChange($event){\r\n    this.applyPipeinNonTaxable = true;\r\n    // this._transactionService.TrnMainObj.NONTAXABLE =\r\n    //  this._transactionService.formatetoTwoDecimal(this._transactionService.TrnMainObj.NONTAXABLE);\r\n  }\r\n\r\n  focusOutTaxableAmountChange($event){\r\n    this.applyPipeinTaxable = true;\r\n    // this._transactionService.TrnMainObj.TAXABLE =\r\n    //  this._transactionService.formatetoTwoDecimal(this._transactionService.TrnMainObj.TAXABLE);\r\n    // ////console.log(\"taxable\",this._transactionService.TrnMainObj.TAXABLE)\r\n    }\r\n\r\n  calculation() {\r\n    // this._transactionService.totalDRAmount = 0;\r\n    // if(this._transactionService.TrnMainObj.TAXABLE == 0) return\r\n    ////console.log(\"agaivat\",this._transactionService.TrnMainObj.TAXABLE);\r\n    this._transactionService.TrnMainObj.VATAMNT = this._transactionService.nullToReturnZero(this._transactionService.TrnMainObj.TAXABLE) * 0.13;\r\n  \r\n    this._transactionService.TrnMainObj.NETAMNT = \r\n              this._transactionService.nullToReturnZero(this._transactionService.TrnMainObj.TAXABLE)  +\r\n              this._transactionService.nullToReturnZero(this._transactionService.TrnMainObj.VATAMNT) +\r\n              this._transactionService.nullToReturnZero(this._transactionService.TrnMainObj.NONTAXABLE);\r\n    // this._transactionService.totalDRAmount = this._transactionService.TrnMainObj.NETAMNT + this._transactionService.nullToZeroConverter(this._transactionService.nullToZeroConverter(this._transactionService.TrnMainObj.DCAMNT));\r\n  }\r\n  onFocus(value){\r\n    ////console.log(\"CheckValue\",value)\r\n  }\r\n\r\n  transform(input:number):string {\r\n    if(!input){ input=0}\r\n       return input.toFixed(2);\r\n   \r\n  }\r\n \r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/pages/AccountVoucher/components/DebitNote/FooterwithIncludedVAT.component.ts","import { Component } from \"@angular/core\";\r\nimport { TransactionService } from \"./../../../../../common/Transaction Components/transaction.service\";\r\nimport { PREFIX } from \"./../../../../../common/interfaces/Prefix.interface\";\r\nimport { VoucherTypeEnum } from \"./../../../../../common/interfaces/TrnMain\";\r\nimport { TrnMain } from \"./../../../../../common/interfaces/TrnMain\";\r\nimport { MasterRepo } from \"./../../../../../common/repositories/masterRepo.service\";\r\nimport { SettingService } from \"../../../../../common/services/index\";\r\n\r\n@Component({\r\n    selector: \"CustomerTracking\",\r\n    template: require('./customerTracking.component.html'),\r\n    providers: [TransactionService],\r\n    styles: [require('../../../../modal-style.css')]\r\n})\r\nexport class CustomerTrackingComponent {\r\n    TrnMainObj: TrnMain = <TrnMain>{};\r\n    isActive: boolean = false;\r\n    constructor(\r\n        private masterService: MasterRepo,\r\n        private _trnMainService: TransactionService,\r\n        private setting: SettingService\r\n    ) {\r\n\r\n    }\r\n\r\n    ngOnInit() {\r\n    }\r\n\r\n    show() {\r\n        this.isActive = true;\r\n    }\r\n   \r\n    hide() {\r\n        this.isActive = false;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/pages/AccountVoucher/components/IncomeVoucher/CustomerTracking/customerTracking.component.ts","import { Component, ViewChild,Input } from \"@angular/core\";\r\nimport { EventEmitter } from \"events\";\r\nimport { ModalDirective } from \"ng2-bootstrap\";\r\nimport { PREFIX, TrnMain, VoucherTypeEnum } from \"../../../../common/interfaces\";\r\nimport { MasterRepo } from \"../../../../common/repositories\";\r\nimport { SettingService } from \"../../../../common/services\";\r\nimport { TransactionService } from \"../../../../common/Transaction Components/transaction.service\";\r\n\r\n@Component({\r\n  selector: \"multiple-series\",\r\n  template: require('./MultipleSeries.component.html'),\r\n  styles: [require('../../../modal-style.css')]\r\n})\r\nexport class MultipleSeriesComponent {\r\n  @ViewChild('childModal') childModal:ModalDirective;\r\n  TrnMainObj: TrnMain = <TrnMain>{};\r\n//   voucherType: VoucherTypeEnum;\r\n    @Input() voucherType = new EventEmitter();\r\n\r\n  constructor(\r\n    private _trnMainService: TransactionService,\r\n    private masterService: MasterRepo,\r\n    private setting: SettingService) {\r\n    this.TrnMainObj = _trnMainService.TrnMainObj;\r\n    // this.voucherType === VoucherTypeEnum.Journal\r\n    \r\n    \r\n   \r\n  }\r\n \r\n\r\n  ngOnInit() {\r\n   \r\n  }\r\n  ngAfterViewInit() {\r\n    this._trnMainService.prefix = <PREFIX>{}\r\n    if(this.masterService.userSetting.ENABLEVOUCHERSERIES == 1){\r\n      this.childModal.show();\r\n    }\r\n  }\r\n  prefixChanged(pref: any) {\r\n    try {\r\n      this._trnMainService.prefix = pref;\r\n      this._trnMainService.prefix = pref;\r\n      if (this.TrnMainObj.Mode == \"NEW\") {\r\n        if (\r\n          this.TrnMainObj.DIVISION == \"\" ||\r\n          this.TrnMainObj.DIVISION == null\r\n        ) {\r\n          this.TrnMainObj.DIVISION = this.setting.appSetting.DefaultDivision;\r\n        }\r\n        this.masterService.getVoucherNo(this.TrnMainObj,this._trnMainService.prefix.VNAME).subscribe(res => {\r\n          if (res.status == \"ok\") {\r\n            let TMain = <TrnMain>res.result;\r\n            this._trnMainService.TrnMainObj.VCHRNO = res.result.VCHRNO;\r\n            this._trnMainService.TrnMainObj.VoucherAbbName = this._trnMainService.prefix.VNAME;\r\n            this._trnMainService.TrnMainObj.VoucherPrefix =this._trnMainService.prefix.VNAME;\r\n            } else {\r\n            alert(\"Failed to retrieve VoucherNo\");\r\n          }\r\n        });\r\n      }\r\n    } catch (ex) {\r\n    }\r\n    \r\n  }\r\n  ClosePop(){\r\n    this.childModal.hide();\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/pages/AccountVoucher/components/MultipleSeries/MultipleSeries.component.ts","import { Http, Response, RequestOptions, Headers } from '@angular/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { ActivatedRoute, ActivatedRouteSnapshot } from '@angular/router';\r\nimport { AuthService } from '../../../../common/services/permission';\r\nimport {Branch} from \"../../../../common/interfaces/TrnMain\";\r\nimport { Subject } from 'rxjs/subject';\r\nimport {GlobalState} from '../../../../global.state';\r\nimport { AlertService } from '../../../../common/services/alert/alert.service';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable()\r\n\r\nexport class BankReconciliationService {\r\n    \r\n    constructor(private http: Http, private activatedRoute: ActivatedRoute, private authService: AuthService,private state:GlobalState,private alertservices:AlertService) {\r\n        var Heading = [\r\n            [\"FirstName\", \"Last Name\", \"Email\"],\r\n          ];\r\n    }\r\n   private get apiUrl():string{\r\n        let url=this.state.getGlobalSetting(\"apiUrl\");\r\n        let apiUrl =\"\";\r\n        \r\n        if(!!url && url.length>0){apiUrl=url[0]};\r\n        return apiUrl\r\n    } \r\n\r\n    saveBank(bid:any){\r\n        let bodyData = {data:bid};\r\n        return  this.http.post(this.apiUrl +'/saveBankReconciliation',bodyData,this.getRequestOption())\r\n        .map(this.extractData)\r\n        .catch(this.handleError)\r\n    }\r\n\r\n    public extractData(res:Response){\r\n        let response = res.json();\r\n        return response || {};\r\n    }\r\n    public handleError(error: Response |any){\r\n        return Observable.throw(error);\r\n    }\r\n\r\n\r\n    saveBankReconciliation(bid:any) {\r\n        let res={status:\"error\",result:\"\"};\r\n        let returnSubject:Subject<any>=new Subject();\r\n        let bodyData = {data:bid};\r\n        this.http.post(this.apiUrl +'/saveBankReconciliation',bodyData,this.getRequestOption())\r\n            .subscribe(response=>{\r\n                let data = response.json();\r\n                if(data.status == 'ok'){\r\n                    returnSubject.next(data);\r\n                    returnSubject.unsubscribe();\r\n                    this.alertservices.success(data.result);\r\n\r\n                }\r\n                else{\r\n                    returnSubject.next(data)\r\n                    returnSubject.unsubscribe();\r\n                    this.alertservices.error(\"Error\"+data.result);\r\n                }\r\n            },error =>{\r\n                res.status='error';res.result=error;\r\n                returnSubject.next(res);\r\n                returnSubject.unsubscribe();\r\n            }\r\n            );\r\n            return returnSubject;\r\n      \r\n     }\r\n     \r\n\r\n     getBankReconcileList(bid:any) {\r\n        let res={status:\"error\",result:\"\"};\r\n        let returnSubject:Subject<any>=new Subject();\r\n        this.http.post(this.apiUrl +'/getBankReconciliation',bid,this.getRequestOption())\r\n            .subscribe(response=>{\r\n                let data = response.json();\r\n                if(data.status == 'ok'){\r\n                    returnSubject.next(data);\r\n                    returnSubject.unsubscribe();\r\n                    \r\n                }else if(data.status == 'error'){\r\n                    this.alertservices.error(\"Error\"+data.result);\r\n                }\r\n                else{\r\n                    returnSubject.next(data)\r\n                    returnSubject.unsubscribe();\r\n                }\r\n            },error =>{\r\n                res.status='error';res.result=error;\r\n                returnSubject.next(res);\r\n                returnSubject.unsubscribe();\r\n            }\r\n            );\r\n            return returnSubject;\r\n     }\r\n\r\n\r\n\r\n\r\n\r\n      private getRequestOption() {\r\n        let headers: Headers = new Headers({ 'Content-type': 'application/json', 'Authorization': this.authService.getAuth().token })\r\n        return new RequestOptions({ headers: headers });\r\n    }\r\n   \r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/pages/AccountVoucher/components/bank-reconciliation/bank-reconciliation.service.ts","import { Component, ViewChild } from \"@angular/core\";\r\nimport { MasterRepo } from \"../../../../common/repositories\";\r\nimport { GenericPopUpComponent, GenericPopUpSettings } from \"../../../../common/popupLists/generic-grid/generic-popup-grid.component\";\r\nimport { TransactionService } from \"../../../../common/Transaction Components/transaction.service\";\r\nimport { AlertService } from \"../../../../common/services/alert/alert.service\";\r\nimport { TrnProd } from \"../../../../common/interfaces\";\r\nimport { DebitNoteComponentService } from \"./debit-note-rate-adjustment.service\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { SpinnerService } from \"../../../../common/services/spinner/spinner.service\";\r\nimport { from } from \"rxjs/observable/from\";\r\nimport { groupBy } from \"rxjs/operator/groupBy\";\r\nimport Rx from 'rxjs/Rx';\r\nimport * as _ from 'lodash';\r\nimport { PrintInvoiceComponent } from \"../../../../common/Invoice/print-invoice/print-invoice.component\";\r\n\r\n@Component({\r\n    selector: 'debit-note-rate-adjustment',\r\n    template: require('./debit-note-rate-adjustment.comopnent.html'),\r\n    providers: [DebitNoteComponentService, PrintInvoiceComponent],\r\n    styles: [require('../../../Style.css')]\r\n})\r\nexport class DebitNoteRateAdjustmentComponent {\r\n\r\n\r\n    @ViewChild(\"customerSupplierGeneric\") customerSupplierGeneric: GenericPopUpComponent;\r\n    gridCustomerSupplierPopupSettings: GenericPopUpSettings = new GenericPopUpSettings();\r\n\r\n    @ViewChild(\"refBillNoGeneric\") refBillNoGeneric: GenericPopUpComponent;\r\n    gridRefBillNoGenericPopupSettings: GenericPopUpSettings = new GenericPopUpSettings();\r\n\r\n    @ViewChild(\"itemGeneric\") itemGeneric: GenericPopUpComponent;\r\n    gridItemGenericPopupSettings: GenericPopUpSettings = new GenericPopUpSettings();\r\n\r\n    @ViewChild(\"vchrnoView\") vchrnoView: GenericPopUpComponent;\r\n    @ViewChild(\"editVchrno\") editVchrno: GenericPopUpComponent;\r\n    gridVoucherGenericPopupSettings: GenericPopUpSettings = new GenericPopUpSettings();\r\n\r\n\r\n\r\n    public activerowIndex: number = 0;\r\n    public rowIndex: any;\r\n    public tempProdList: any[] = [];\r\n    public differenceAmount = 0;\r\n    public totalDifferenceAmount: number = 0;\r\n    public totalGST = 0;\r\n    public activeurlpath: any;\r\n\r\n    public menuCode: string;\r\n    public pageHeading: string;\r\n    public CustomerSupplier: any;\r\n\r\n    public adjustmentRate: any;\r\n    public previousRate: any;\r\n    public rowAdd: boolean = false;\r\n    public VoucherPrefix: any;\r\n    public netAmount: number;\r\n\r\n    public totalAmount: number = 0;\r\n\r\n\r\n    constructor(\r\n        public masterService: MasterRepo,\r\n        public _trnMainService: TransactionService,\r\n        public alertService: AlertService,\r\n        public debitNoteComponentServices: DebitNoteComponentService,\r\n        private arouter: ActivatedRoute,\r\n        public spinnerService: SpinnerService,\r\n        public invoicePrint: PrintInvoiceComponent\r\n    ) {\r\n        this.masterService.ShowMore = false;\r\n        this._trnMainService.initialFormLoad(16);\r\n        this.activeurlpath = arouter.snapshot.url.join('');\r\n        if (this.activeurlpath == 'acvouchersdebit-note-rate-adjustment') {\r\n            this._trnMainService.initialFormLoad(16);\r\n            this.pageHeading = 'Debit Note-Rate Adjustment'\r\n            this.VoucherPrefix = 'DN'\r\n            this.gridRefBillNoGenericPopupSettings = {\r\n                title: \"Bill Details\",\r\n                apiEndpoints: `/getTrnMainPITIPagedList`,\r\n                defaultFilterIndex: 0,\r\n                columns: [\r\n                    {\r\n                        key: 'CHALANNO',\r\n                        title: 'BILL NO',\r\n                        hidden: false,\r\n                        noSearch: false\r\n                    },\r\n                    {\r\n                        key: 'TRNDATE',\r\n                        title: 'DATE',\r\n                        hidden: false,\r\n                        noSearch: false\r\n                    },\r\n                    {\r\n                        key: 'TRNMODE',\r\n                        title: 'TYPE',\r\n                        hidden: false,\r\n                        noSearch: false\r\n                    },\r\n\r\n                    {\r\n                        key: 'NETAMNT',\r\n                        title: 'AMOUNT',\r\n                        hidden: false,\r\n                        noSearch: false\r\n                    },\r\n                    {\r\n                        key: 'INVOICETYPE',\r\n                        title: 'INVOICE TYPE',\r\n                        hidden: false,\r\n                        noSearch: false\r\n                    },\r\n                ]\r\n            };\r\n\r\n        } else if (this.activeurlpath == 'acvoucherscredit-note-rate-adjustment') {\r\n            this._trnMainService.initialFormLoad(15);\r\n            this.pageHeading = 'Credit Note-Rate Adjustment'\r\n            this.VoucherPrefix = 'CN'\r\n            this.gridRefBillNoGenericPopupSettings = {\r\n                title: \"Bill Details\",\r\n                apiEndpoints: `/getTrnMainPITIPagedList`,\r\n                defaultFilterIndex: 0,\r\n                columns: [\r\n                    {\r\n                        key: 'VCHRNO',\r\n                        title: 'BILL NO',\r\n                        hidden: false,\r\n                        noSearch: false\r\n                    },\r\n                    {\r\n                        key: 'TRNDATE',\r\n                        title: 'DATE',\r\n                        hidden: false,\r\n                        noSearch: false\r\n                    },\r\n                    {\r\n                        key: 'TRNMODE',\r\n                        title: 'TYPE',\r\n                        hidden: false,\r\n                        noSearch: false\r\n                    },\r\n\r\n                    {\r\n                        key: 'NETAMNT',\r\n                        title: 'AMOUNT',\r\n                        hidden: false,\r\n                        noSearch: false\r\n                    },\r\n                    {\r\n                        key: 'INVOICETYPE',\r\n                        title: 'INVOICE TYPE',\r\n                        hidden: false,\r\n                        noSearch: false\r\n                    },\r\n                ]\r\n            };\r\n\r\n        }\r\n\r\n\r\n        this.gridCustomerSupplierPopupSettings = {\r\n            title: \"Customer & Supplier \",\r\n            apiEndpoints: `/getAccountPagedListByMapId/Details/PartyOpeningBalance`,\r\n            defaultFilterIndex: 0,\r\n            columns: [\r\n                {\r\n                    key: \"ACNAME\",\r\n                    title: \"NAME\",\r\n                    hidden: false,\r\n                    noSearch: false\r\n                },\r\n                {\r\n                    key: \"ACCODE\",\r\n                    title: \"CODE\",\r\n                    hidden: false,\r\n                    noSearch: false\r\n                },\r\n                {\r\n                    key: \"ADDRESS\",\r\n                    title: \"ADDRESS\",\r\n                    hidden: false,\r\n                    noSearch: false\r\n                }\r\n\r\n            ]\r\n        };\r\n\r\n\r\n        this.gridItemGenericPopupSettings = {\r\n            title: \"ITEMS\",\r\n            apiEndpoints: `/getMenuitemFromProdForReturnPagedList`,\r\n            defaultFilterIndex: 0,\r\n            columns: [\r\n                {\r\n                    key: 'DESCA',\r\n                    title: 'DESCRIPTION',\r\n                    hidden: false,\r\n                    noSearch: false\r\n                },\r\n                {\r\n                    key: 'MENUCODE',\r\n                    title: 'ITEM CODE',\r\n                    hidden: false,\r\n                    noSearch: false\r\n                },\r\n                {\r\n                    key: 'STOCK',\r\n                    title: 'STOCK',\r\n                    hidden: false,\r\n                    noSearch: false\r\n                }\r\n                ,\r\n                {\r\n                    key: 'MRP',\r\n                    title: 'MRP',\r\n                    hidden: false,\r\n                    noSearch: false\r\n                }\r\n                // ,\r\n                // {\r\n                //     key: 'BARCODE',\r\n                //     title: 'BARCODE',\r\n                //     hidden: true,\r\n                //     noSearch: false\r\n                // }\r\n            ]\r\n        }\r\n\r\n        var PID = this.masterService.PhiscalObj.PhiscalID;\r\n        PID = PID.replace(\"/\",\"ZZ\");\r\n        var division = this.masterService.PhiscalObj.Div;\r\n        this.gridVoucherGenericPopupSettings = {\r\n            title: \"Vouchers\",\r\n            apiEndpoints: `/getMasterPagedListOfAny/${PID}/vtype/${division}`,\r\n            defaultFilterIndex: 1,\r\n            columns: [\r\n                {\r\n                    key: 'TDATE',\r\n                    title: 'DATE',\r\n                    hidden: false,\r\n                    noSearch: false\r\n                },\r\n                {\r\n                    key: 'VCHRNO',\r\n                    title: 'VOUCHER NO.',\r\n                    hidden: false,\r\n                    noSearch: false\r\n                },\r\n                {\r\n                    key: 'VOUCHERREMARKS',\r\n                    title: 'TYPE',\r\n                    hidden: false,\r\n                    noSearch: false\r\n                },\r\n            ]\r\n        }\r\n\r\n\r\n    }\r\n\r\n    ngOninit() {\r\n\r\n\r\n        this._trnMainService.addRow();\r\n        this._trnMainService.TrnMainObj.CNDN_MODE = 2;\r\n\r\n    }\r\n\r\n\r\n    RowClick(index) {\r\n        this.activerowIndex = this.rowIndex = index;\r\n        this.masterService.ShowMore = false;\r\n    }\r\n\r\n    onCustomerSupplierPopUPTab() {\r\n        this.customerSupplierGeneric.show()\r\n    }\r\n\r\n    onRefBillNoPopUPTab(event) {\r\n        event.preventDefault();\r\n        this.refBillNoGeneric.show(this._trnMainService.TrnMainObj.PARAC);\r\n    }\r\n\r\n    onItemPopUPTab() {\r\n\r\n        if (this._trnMainService.TrnMainObj.REFBILL == null || this._trnMainService.TrnMainObj.REFBILL == \"\") {\r\n            this.alertService.info('Please Load the ref bill for return');\r\n            return;\r\n        }\r\n        this.itemGeneric.show(this._trnMainService.TrnMainObj.REFBILL)\r\n\r\n    }\r\n\r\n    onItemDoubleClickCustomerSupplier(customerSuppleir) {\r\n        this.CustomerSupplier = customerSuppleir.PType;\r\n        this._trnMainService.TrnMainObj.BILLTO = customerSuppleir.ACNAME;\r\n        this._trnMainService.TrnMainObj.PARAC = customerSuppleir.ACID;\r\n        this._trnMainService.TrnMainObj.TRNAC = customerSuppleir.ACID;\r\n        this._trnMainService.TrnMainObj.BILLTOADD = customerSuppleir.ADDRESS;\r\n        this._trnMainService.TrnMainObj.TRNMODE = customerSuppleir.PMODE;\r\n        this._trnMainService.TrnMainObj.PARTY_ORG_TYPE = customerSuppleir.ORG_TYPE;\r\n        this._trnMainService.TrnMainObj.CREDITDAYS = customerSuppleir.CRPERIOD;\r\n\r\n    }\r\n\r\n    onItemDoubleClickRefBillNO(event) {\r\n        this.CustomerSupplier = event.PType;\r\n        this._trnMainService.TrnMainObj.REFBILL = event.VCHRNO;\r\n        this._trnMainService.TrnMainObj.TRNMODE = event.TRNMODE;\r\n        this._trnMainService.TrnMainObj.BILLTO = event.ACNAME;\r\n        this._trnMainService.TrnMainObj.BILLTOADD = event.ADDRESS;\r\n        this._trnMainService.TrnMainObj.PARAC = event.PARAC\r\n    }\r\n\r\n    onItemDoubleClick(value) {\r\n\r\n        this._trnMainService.TrnMainObj.ProdList.filter(x => !isNaN(x.ADJUSTMENTNEWRATE)).forEach(i => { this.menuCode = i.MENUCODE })\r\n        if (this.menuCode == value.MCODE) {\r\n            this.alertService.info('Same Item is Selected');\r\n        } else {\r\n            this._trnMainService.TrnMainObj.AdditionalObj = <any>{};\r\n            this._trnMainService.TrnMainObj.AdditionalObj.TRNTYPE = value.TRNTYPE;\r\n            this._trnMainService.TrnMainObj.ProdList[this.activerowIndex].MENUCODE = value.MCODE\r\n            this._trnMainService.TrnMainObj.ProdList[this.activerowIndex].ITEMDESC = value.DESCA\r\n            this._trnMainService.TrnMainObj.ProdList[this.activerowIndex].BATCH = value.BATCH\r\n            this._trnMainService.TrnMainObj.ProdList[this.activerowIndex].STOCK = value.STOCK\r\n            this._trnMainService.TrnMainObj.ProdList[this.activerowIndex].Quantity = value.STOCK;\r\n            this._trnMainService.TrnMainObj.ProdList[this.activerowIndex].UNIT = value.UNIT\r\n            this._trnMainService.TrnMainObj.ProdList[this.activerowIndex].MRP = value.MRP\r\n            this._trnMainService.TrnMainObj.ProdList[this.activerowIndex].RATE = value.RATE\r\n            this._trnMainService.TrnMainObj.ProdList[this.activerowIndex].GSTRATE = value.GST\r\n            this._trnMainService.TrnMainObj.ProdList[this.activerowIndex].WEIGHT = value.GWEIGHT;\r\n            this._trnMainService.TrnMainObj.ProdList[this.activerowIndex].CONFACTOR = 1;\r\n            this._trnMainService.TrnMainObj.ProdList[this.activerowIndex].SELECTEDITEM = <any>{};\r\n            this._trnMainService.TrnMainObj.ProdList[this.activerowIndex].REMARKS = value.REMARKS\r\n            this._trnMainService.TrnMainObj.ProdList[this.activerowIndex].INDDISCOUNT = value.INDDISCOUNT\r\n            this._trnMainService.TrnMainObj.ProdList[this.activerowIndex].PrimaryDiscount = value.PrimaryDiscount;\r\n            this._trnMainService.TrnMainObj.ProdList[this.activerowIndex].SecondaryDiscount = value.SecondaryDiscount;\r\n            this._trnMainService.TrnMainObj.ProdList[this.activerowIndex].LiquiditionDiscount = value.LiquiditionDiscount;\r\n            this._trnMainService.TrnMainObj.ProdList[this.activerowIndex].NETAMOUNT = ((value.STOCK * value.RATE) + (value.GST / 100))\r\n        }\r\n    }\r\n\r\n\r\n    onBlurClick(index) {\r\n        this.CustomerSupplierValidation(index)\r\n\r\n    }\r\n\r\n    CustomerSupplierValidation(index) {\r\n\r\n        if (this.activeurlpath == 'acvouchersdebit-note-rate-adjustment') {\r\n            if (this.CustomerSupplier == 'C') {\r\n                if (this._trnMainService.nullToZeroConverter(this._trnMainService.TrnMainObj.ProdList[index].RATE) < this._trnMainService.nullToZeroConverter(this._trnMainService.TrnMainObj.ProdList[index].ADJUSTMENTNEWRATE)) {\r\n                    this.DifferenceAmountCalculation()\r\n                    this.rowAdd = true;\r\n                } else {\r\n                    this.alertService.info('Adjustment Rate should be grater than Previous Rate')\r\n                }\r\n\r\n            } else if (this.CustomerSupplier == 'V') {\r\n                if (this._trnMainService.nullToZeroConverter(this._trnMainService.TrnMainObj.ProdList[index].RATE) > this._trnMainService.nullToZeroConverter(this._trnMainService.TrnMainObj.ProdList[index].ADJUSTMENTNEWRATE)) {\r\n                    this.DifferenceAmountCalculation()\r\n                    this.rowAdd = true;\r\n                } else {\r\n                    this.alertService.info('Adjustment Rate should be less than Previous Rate')\r\n                }\r\n\r\n            }\r\n\r\n        } else if (this.activeurlpath == 'acvoucherscredit-note-rate-adjustment') {\r\n\r\n            if (this.CustomerSupplier == 'C') {\r\n                if (this._trnMainService.nullToZeroConverter(this._trnMainService.TrnMainObj.ProdList[index].RATE) > this._trnMainService.nullToZeroConverter(this._trnMainService.TrnMainObj.ProdList[index].ADJUSTMENTNEWRATE)) {\r\n                    this.DifferenceAmountCalculation()\r\n                    this.rowAdd = true;\r\n\r\n                } else {\r\n                    this.alertService.info('Adjustment Rate should be less than Previous Rate')\r\n                }\r\n\r\n            } else if (this.CustomerSupplier == 'V') {\r\n                if (this._trnMainService.nullToZeroConverter(this._trnMainService.TrnMainObj.ProdList[index].RATE) < this._trnMainService.nullToZeroConverter(this._trnMainService.TrnMainObj.ProdList[index].ADJUSTMENTNEWRATE)) {\r\n                    this.DifferenceAmountCalculation()\r\n                    this.rowAdd = true;\r\n\r\n                } else {\r\n                    this.alertService.info('Adjustment Rate should be greater than Previous Rate')\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n    DifferenceAmountCalculation() {\r\n        this.totalDifferenceAmount = 0;\r\n        this.totalGST = 0;\r\n        this.totalAmount = 0;\r\n        this._trnMainService.TrnMainObj.ProdList.filter(x => !isNaN(x.ADJUSTMENTNEWRATE)).forEach(i => {\r\n            i.DIFFERENCEAMOUNT = Math.abs(i.STOCK * (i.RATE - i.ADJUSTMENTNEWRATE));\r\n            this.totalDifferenceAmount += Math.abs(i.STOCK * (i.RATE - i.ADJUSTMENTNEWRATE));\r\n            i.VAT = (i.DIFFERENCEAMOUNT * (i.GSTRATE / 100));\r\n            this.totalGST += i.VAT;\r\n            i.NETAMOUNT = i.DIFFERENCEAMOUNT + i.VAT\r\n            this.totalAmount = this._trnMainService.nullToZeroConverter(this.totalAmount) + this._trnMainService.nullToZeroConverter(i.NETAMOUNT);\r\n\r\n        });\r\n\r\n    }\r\n\r\n    addNewRow(event, index) {\r\n        var i = index + 1;\r\n        event.preventDefault();\r\n        this.CustomerSupplierValidation(index);\r\n\r\n        if (this._trnMainService.TrnMainObj.Mode.toUpperCase() == \"NEW\") {\r\n            if (this.rowAdd == true) {\r\n                this._trnMainService.addRow();\r\n                this.activerowIndex = i + 1;\r\n                setTimeout(() => {\r\n                    document.getElementById(\"Code\" + i).focus();\r\n                }, 10);\r\n\r\n            }\r\n        }\r\n\r\n    }\r\n    isTableRowSelected(i) {\r\n        return this.activerowIndex == i;\r\n    }\r\n\r\n    deleteRow() {\r\n        if (confirm(\"Are you sure u you want to delete the Row?\")) {\r\n            this._trnMainService.TrnMainObj.ProdList.splice(this.activerowIndex, 1);\r\n            if (this._trnMainService.TrnMainObj.ProdList.length == 0) {\r\n                this._trnMainService.addRow();\r\n            }\r\n        }\r\n    }\r\n\r\n    removeRow(index) {\r\n\r\n        this._trnMainService.TrnMainObj.ProdList[index].MENUCODE = \"\"\r\n        this._trnMainService.TrnMainObj.ProdList[index].ITEMDESC = \"\"\r\n        this._trnMainService.TrnMainObj.ProdList[index].BATCH = \"\"\r\n        this._trnMainService.TrnMainObj.ProdList[index].STOCK = null\r\n        this._trnMainService.TrnMainObj.ProdList[index].UNIT = null\r\n        this._trnMainService.TrnMainObj.ProdList[index].MRP = null\r\n        this._trnMainService.TrnMainObj.ProdList[index].RATE = null\r\n        this._trnMainService.TrnMainObj.ProdList[index].DIFFERENCEAMOUNT = null\r\n        this._trnMainService.TrnMainObj.ProdList[index].REMARKS = \"\"\r\n\r\n\r\n    }\r\n\r\n    onResetClick() {\r\n        if (this.VoucherPrefix == \"DN\") {\r\n            this._trnMainService.initialFormLoad(16);\r\n            this._trnMainService.TrnMainObj.VoucherType = 16;\r\n        } else {\r\n            this._trnMainService.initialFormLoad(15);\r\n            this._trnMainService.TrnMainObj.VoucherType = 15;\r\n\r\n        }\r\n        this.totalDifferenceAmount = 0\r\n        this.totalAmount = 0\r\n        this.totalGST = 0\r\n    }\r\n\r\n    onSaveClick() {\r\n        this._trnMainService.TrnMainObj.CNDN_MODE = 2;\r\n        this._trnMainService.TrnMainObj.ProdList = this._trnMainService.TrnMainObj.ProdList.filter(x => x.MENUCODE != null && x.MENUCODE != \"\")\r\n        this._trnMainService.TrnMainObj.JournalGstList = []\r\n        this._trnMainService.TrnMainObj.CNDN_MODE = 2;\r\n        this._trnMainService.TrnMainObj.ProdList.forEach(x => {\r\n            this._trnMainService.TrnMainObj.JournalGstList.push({\r\n                VCHRNO: this._trnMainService.TrnMainObj.VCHRNO,\r\n                DIVISION: this._trnMainService.TrnMainObj.DIVISION,\r\n                GSTRATE: x.GSTRATE,\r\n                TAXABLE: x.GSTRATE > 0 ? x.DIFFERENCEAMOUNT : 0,\r\n                NONTAXABLE: x.GSTRATE == 0 ? x.DIFFERENCEAMOUNT : 0,\r\n                GST: x.VAT,\r\n                TOTGST: this.totalGST,\r\n                NETAMNT: this.totalAmount,\r\n                ITC_ELIGIBILITY: 'Inputs',\r\n                REFTRNAC: null,\r\n                GSTMODE: 0,\r\n                PARAC: this._trnMainService.TrnMainObj.PARAC\r\n            })\r\n        })\r\n        this.calculateTotalGstByRate()\r\n        this._trnMainService.TrnMainObj.NETAMNT = this.totalAmount;\r\n        if (this.VoucherPrefix == \"DN\") {\r\n            this._trnMainService.TrnMainObj.VoucherType = 16;\r\n            this._trnMainService.TrnMainObj.VoucherPrefix = \"DN\";\r\n        } else {\r\n            this._trnMainService.TrnMainObj.VoucherType = 15;\r\n            this._trnMainService.TrnMainObj.VoucherPrefix = \"CN\";\r\n\r\n\r\n        }\r\n        this.spinnerService.show(\"Please wait!Saving Data.\")\r\n        this.debitNoteComponentServices.saveDebitNoteRateAdjustment(this._trnMainService.TrnMainObj)\r\n            .subscribe((res) => {\r\n\r\n                if (res.status == 'ok') {\r\n                    this.totalDifferenceAmount = 0\r\n                    this.totalAmount = 0\r\n                    this.totalGST = 0\r\n                    this.spinnerService.hide()\r\n                    if (this.VoucherPrefix == \"DN\") {\r\n                        this._trnMainService.initialFormLoad(16);\r\n                        this._trnMainService.TrnMainObj.VoucherType = 16;\r\n                    } else {\r\n                        this._trnMainService.initialFormLoad(15);\r\n                        this._trnMainService.TrnMainObj.VoucherType = 15;\r\n\r\n                    }\r\n                    this.alertService.success(res.result)\r\n                } else {\r\n                    this.spinnerService.hide()\r\n                    this.alertService.error(res.result)\r\n                }\r\n            }, error => {\r\n                this.spinnerService.hide()\r\n                this.alertService.error(error)\r\n            })\r\n\r\n    }\r\n\r\n    onViewClick() {\r\n\r\n        if (this.activeurlpath == 'acvouchersdebit-note-rate-adjustment') {\r\n            this.vchrnoView.show(this._trnMainService.TrnMainObj.PARAC, false, \"dnlistforview\");\r\n        }\r\n        else {\r\n            this.vchrnoView.show(this._trnMainService.TrnMainObj.PARAC, false, \"cnlistforview\");\r\n        }\r\n    }\r\n\r\n    onEditClick() {\r\n        if (this.activeurlpath == 'acvouchersdebit-note-rate-adjustment') {\r\n            this.editVchrno.show(this._trnMainService.TrnMainObj.PARAC, false, \"dnlistforview\");\r\n        }\r\n        else {\r\n            this.editVchrno.show(this._trnMainService.TrnMainObj.PARAC, false, \"cnlistforview\");\r\n        }\r\n    }\r\n\r\n    onEditVoucherDoubleClick(vouchers) {\r\n        if (vouchers.CNDN_MODE == 2) {\r\n            this.spinnerService.show(\"Loading Data. Please Wait!\")\r\n            this.debitNoteComponentServices.LoadRateAdjustment(vouchers.VCHRNO).subscribe((res) => {\r\n                let tmp = res.result.main[0];\r\n                this._trnMainService.TrnMainObj = res.result.main[0];\r\n                this._trnMainService.TrnMainObj.ProdList = res.result.prodList;\r\n                this.DifferenceAmountCalculation();\r\n                this._trnMainService.TrnMainObj.Mode = \"EDIT\";\r\n                this._trnMainService.TrnMainObj.AdditionalObj = <any>{};\r\n                this._trnMainService.TrnMainObj.AdditionalObj.TRNTYPE = tmp.TRNTYPE;\r\n                this.CustomerSupplier = tmp.PTYPE;\r\n                this.spinnerService.hide();\r\n            }, error => {\r\n                this.alertService.error(error);\r\n                this.spinnerService.hide();\r\n            })\r\n        } else {\r\n            this.alertService.warning(`Cannot Load Voucher!! The Voucher is ${vouchers.VOUCHERREMARKS} based.`);\r\n        }\r\n    }\r\n\r\n    onVoucherDoubleClick(vouchers) {\r\n        if (vouchers.CNDN_MODE == 2) {\r\n            this.spinnerService.show(\"Loading Data. Please Wait!\")\r\n            this.debitNoteComponentServices.LoadRateAdjustment(vouchers.VCHRNO).subscribe((res) => {\r\n                this._trnMainService.TrnMainObj = res.result.main[0];\r\n                this._trnMainService.TrnMainObj.ProdList = res.result.prodList;\r\n                this._trnMainService.TrnMainObj.Mode = \"VIEW\";\r\n                this.spinnerService.hide();\r\n                this.DifferenceAmountCalculation();\r\n            }, error => {\r\n                this.alertService.error(error);\r\n                this.spinnerService.hide();\r\n            })\r\n        } else {\r\n            this.alertService.warning(`Cannot Load Voucher!! The Voucher is ${vouchers.VOUCHERREMARKS} based.`);\r\n            return;\r\n        }\r\n    }\r\n\r\n    public groupedData: any\r\n    calculateTotalGstByRate() {\r\n        \r\n\r\n\r\n\r\n\r\n    }\r\n\r\n    onCancelClick() {\r\n        let prod = this._trnMainService.TrnMainObj.ProdList.filter(x => x.MENUCODE != \"\" && x.MENUCODE != null && x.MENUCODE != undefined);\r\n        if (prod.length == 0) {\r\n            this.alertService.error(\"Please load Voucher to Cancel\");\r\n            return;\r\n        }\r\n        let data = <any>{};\r\n        if (this.activeurlpath == 'acvouchersdebit-note-rate-adjustment') {\r\n            data.VoucherType = 16;\r\n            data.VoucherPrefix = \"DN\";\r\n\r\n        } else {\r\n            data.VoucherType = 15;\r\n            data.VoucherPrefix = \"CN\";\r\n\r\n        }\r\n        data.VCHRNO = this._trnMainService.TrnMainObj.VCHRNO;\r\n        data.MODE = \"CANCEL\";\r\n        if (confirm(\"Are you sure to cancel this voucher?\")) {\r\n            this.spinnerService.show(`Cancelling Voucher ${data.VCHRNO}. Please Wait.`);\r\n            this.masterService.cancelAccoutingVoucher(data).subscribe((res) => {\r\n                this.spinnerService.hide();\r\n                this.alertService.success(res.result);\r\n            }, error => {\r\n                this.spinnerService.hide();\r\n                this.alertService.error(error);\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n\r\n    onPrintClick() {\r\n        try {\r\n            this.spinnerService.show(\"Getting Invoice Data.Please Wait\");\r\n            if (this._trnMainService.TrnMainObj.ProdList.length) {\r\n                this.masterService.getInvoiceData(this._trnMainService.TrnMainObj.VCHRNO, this._trnMainService.TrnMainObj.DIVISION, this._trnMainService.TrnMainObj.PhiscalID, this._trnMainService.TrnMainObj.PARAC, this.activeurlpath, this._trnMainService.TrnMainObj.REFBILL).subscribe((res) => {\r\n                    let invoicedata = res.result;\r\n                    invoicedata.REFBILL = res.result.VCHRNO;\r\n                    invoicedata.VCHRNO = this._trnMainService.TrnMainObj.VCHRNO;\r\n                    invoicedata.TRNDATE = this._trnMainService.TrnMainObj.TRNDATE;\r\n                    this.invoicePrint.printInvoice(invoicedata, res.result2, \"RateAdjustment\", this.activeurlpath);\r\n                    this.spinnerService.hide();\r\n                }, error => {\r\n                    this.spinnerService.hide();\r\n                    this.alertService.error(error);\r\n                })\r\n            } else {\r\n                this.alertService.error(\"Unable to Print.This voucher doesnot exist or has been cancelled\");\r\n            }\r\n        } catch (e) {\r\n            this.spinnerService.hide();\r\n            this.alertService.error(e);\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/pages/AccountVoucher/components/debit-note-rate-adjustment/debit-note-rate-adjustment.component.ts","import { Http, Response, RequestOptions, Headers } from '@angular/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { ActivatedRoute, ActivatedRouteSnapshot } from '@angular/router';\r\nimport { AuthService } from '../../../../common/services/permission';\r\nimport {Branch} from \"../../../../common/interfaces/TrnMain\";\r\nimport { Subject } from 'rxjs/subject';\r\nimport {GlobalState} from '../../../../../app/global.state';\r\nimport { AlertService } from '../../../../common/services/alert/alert.service';\r\nimport { Observable } from 'rxjs';\r\n@Injectable()\r\n\r\nexport class DebitNoteComponentService {\r\n    public activeurlpath: any;\r\n    public bodyData:any;\r\n\r\n    constructor(private http: Http, private activatedRoute: ActivatedRoute, private authService: AuthService,private state:GlobalState,private alertservices:AlertService) {\r\n\r\n        this.activeurlpath = activatedRoute.snapshot.url.join('');\r\n    }\r\n   private get apiUrl():string{\r\n        let url=this.state.getGlobalSetting(\"apiUrl\");\r\n        let apiUrl =\"\";\r\n        \r\n        if(!!url && url.length>0){apiUrl=url[0]};\r\n        return apiUrl\r\n    } \r\n\r\n    saveDebitNoteRateAdjustment(bid:any){\r\n       \r\n        if(this.activeurlpath == 'acvouchersdebit-note-rate-adjustment'){\r\n            this.bodyData = {type:'DebitNoteRateAdjustment',data:bid};\r\n        }else if(this.activeurlpath == 'acvoucherscredit-note-rate-adjustment'){\r\n            this.bodyData = {type:'CreditNoteRateAdjustment',data:bid};\r\n        }\r\n       // let bodyData = {mode:'query',data:{BID:Type}};\r\n        return  this.http.post(this.apiUrl +'/saveDebitNoteRateAdjustment',this.bodyData,this.getRequestOption())\r\n        .map(this.extractData)\r\n        .catch(this.handleError)\r\n    }\r\n\r\n    public extractData(res:Response){\r\n        let response = res.json();\r\n        return response || {};\r\n    }\r\n    public handleError(error: Response |any){\r\n        return Observable.throw(error);\r\n    }\r\n\r\n    LoadRateAdjustment(bid:any){    \r\n        let bodyData = {data:bid}; \r\n        return  this.http.post(this.apiUrl +'/getLoadNewRateAdjustment',bodyData,this.getRequestOption())\r\n        .map(this.extractData)\r\n        .catch(this.handleError)\r\n    }\r\n\r\n      private getRequestOption() {\r\n        let headers: Headers = new Headers({ 'Content-type': 'application/json', 'Authorization': this.authService.getAuth().token })\r\n        return new RequestOptions({ headers: headers });\r\n    }\r\n   \r\n}\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/pages/AccountVoucher/components/debit-note-rate-adjustment/debit-note-rate-adjustment.service.ts","import { Component, OnInit, OnDestroy, Input, Output, EventEmitter, Renderer, ElementRef } from '@angular/core';\r\nimport { TransactionService } from \"./../../../../common/Transaction Components/transaction.service\";\r\nimport { PREFIX } from \"./../../../../common/interfaces/Prefix.interface\";\r\nimport { FormGroup, FormBuilder, FormControl, Validators, FormArray } from \"@angular/forms\";\r\nimport { Subscription } from \"rxjs/Subscription\";\r\nimport { TrnMain, Trntran, TSubLedgerTran, TSubLedger, CostCenter, Division, VoucherTypeEnum } from \"./../../../../common/interfaces/TrnMain\";\r\nimport { CommonService, SettingService } from './../../../../common/services';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { TAcList } from './../../../../common/interfaces/Account.interface';\r\nimport { MasterRepo } from \"../../../../common/repositories/masterRepo.service\";\r\nimport { Subject } from 'rxjs/subject';\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { DomSanitizer, SafeHtml } from \"@angular/platform-browser\";\r\n\r\n\r\n@Component({\r\n  selector: 'test-entry',\r\n  template: `\r\n    <form [formGroup]=\"trntranForm\">\r\n        <div formArrayName=\"journal\">\r\n            <div *ngFor=\"let tList of trntranForm.controls.journal.controls;let i=index\">\r\n                <div [formGroupName]=\"i\">\r\n                    <div *ngIf=\"trnMain.TrntranList[i].inputMode == true\">\r\n                        <label>{{i+1}}Input</label>\r\n\r\n                        <input type=\"text\" ngui-auto-complete [source]=\"observableAclistAcname.bind(this)\" style=\"height:23px;\" max-num-list=\"25\"\r\n                                list-formatter=\"ACNAME\" formControlName=\"AccountItem\"\r\n                                (change)=\"AutoSelectAcnameChange($event,i)\"\r\n                                display-property-name=\"ACNAME\"/>\r\n                        <input type=\"date\" formControlName=\"TRNDATE\"/>\r\n                        <button (click)=\"addRow(i)\">Add</button>\r\n                        <button (click)=\"saveRow(i)\">Save</button>\r\n                    </div>\r\n\r\n                    <div *ngIf=\"trnMain.TrntranList[i].inputMode == false\">\r\n                        <label>{{i+1}}Input</label>\r\n                        {{trnMain.TrntranList[i].AccountItem.ACNAME}}\r\n                        {{trnMain.TrntranList[i].TRNDATE}}\r\n                        <button (click)=\"editRow(i)\">Edit</button>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </form>\r\n    `,\r\n  styles: [require('./../../../../../assets/css/styles.css'), require('../../../modal-style.css')],\r\n\r\n})\r\n\r\nexport class testComponent {\r\n  public trnMain: TrnMain = <TrnMain>{};\r\n  public trnTran: Trntran = <Trntran>{};\r\n  private subjectACList = new Subject();\r\n  trntranForm: FormGroup;\r\n  trnTranControl;\r\n\r\n  private subcriptions: Array<Subscription> = [];\r\n\r\n  constructor(private masterService: MasterRepo, private _transactionService: TransactionService, private fb: FormBuilder, private _activatedRoute: ActivatedRoute, private _router: Router, private settingService: SettingService, private renderer: Renderer, private _sanitizer: DomSanitizer) {\r\n    try {\r\n      this.trnMain = this._transactionService.TrnMainObj;\r\n      this.masterService.refreshAccountList('Journal-constructor');\r\n\r\n    } catch (ex) {\r\n      alert(ex);\r\n    }\r\n  }\r\n  observableAclist = (): Observable<TAcList[]> => {\r\n    //let serv=this._service\r\n    try {\r\n      return this.masterService.getAccount('journal-ObservableAclist');\r\n    } catch (ex) {\r\n      alert(ex);\r\n    }\r\n\r\n  }\r\n  observableAclistAcname = (keyword: any): Observable<TAcList[]> => {\r\n    //let serv=this._service\r\n    try {\r\n      if (keyword) {\r\n        return this.masterService.getAccoutFilteredObs(keyword, 1);\r\n\r\n      }\r\n      else {\r\n        return Observable.of([]);\r\n      }\r\n    } catch (ex) {\r\n      alert(ex);\r\n    }\r\n  }\r\n\r\n  //aclist = this._service.accountList;\r\n  observableAclistAcid = (keyword: any): Observable<TAcList[]> => {\r\n    //let serv=this._service\r\n    try {\r\n      if (keyword) {\r\n        return this.masterService.getAccoutFilteredObs(keyword, 0);\r\n\r\n      }\r\n      else {\r\n        return Observable.of([]);\r\n      }\r\n    } catch (ex) {\r\n      alert(ex);\r\n    }\r\n  }\r\n\r\n  autocompleListFormatter = (data: any): SafeHtml => {\r\n    try {\r\n      let html = `<span>${data.ACNAME}</span>`;\r\n      return this._sanitizer.bypassSecurityTrustHtml(html);\r\n    } catch (ex) {\r\n      alert(ex);\r\n    }\r\n  }\r\n  autocompleListAcidFormatter = (data: any): SafeHtml => {\r\n    try {\r\n      let html = `<span>${data.ACCODE}</span>`;\r\n      return this._sanitizer.bypassSecurityTrustHtml(html);\r\n    } catch (ex) {\r\n      alert(ex);\r\n    }\r\n  }\r\n\r\n  AutoSelectAccodeChange($event, index) {\r\n    try {\r\n      let ret = this.masterService.accountList.find(x => x.ACCODE == $event);\r\n      if (ret) {\r\n        this.trnMain.TrntranList[index].AccountItem = ret;\r\n        this.trnMain.TrntranList[index].acitem = ret;\r\n      }\r\n    }\r\n    catch (error) {\r\n      this.trnMain.TrntranList[index].AccountItem = undefined;\r\n    }\r\n  }\r\n\r\n  AutoSelectAcnameChange($event, index) {\r\n    try {\r\n      if (typeof ($event) == 'object') {\r\n        var ac = <TAcList>$event;\r\n        this.trnMain.TrntranList[index].AccountItem = $event;\r\n        this.trnMain.TrntranList[index].AccountItem.ACCODE = ac.ACCODE;\r\n      }\r\n      else {\r\n        this.trnMain.TrntranList[index].AccountItem.ACCODE = \"\";\r\n      }\r\n\r\n\r\n    }\r\n    catch (error) {\r\n      this.trnMain.TrntranList[index].AccountItem.ACCODE = \"\";\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n  ngOnInit() {\r\n    this.trntranForm = this.fb.group({\r\n      journal: this.fb.array([]),\r\n    });\r\n    this.trnTranControl = <FormArray>this.trntranForm.controls['journal'];\r\n    this.trntranForm.controls.journal.valueChanges.subscribe(form => {\r\n      this.trnMain.TrntranList = this.trntranForm.get('journal').value;\r\n    });\r\n    this.initTrnTranList();\r\n  }\r\n\r\n  initTrnTranList() {\r\n    this.trnTranControl = <FormArray>this.trntranForm.controls['journal'];\r\n    let journalGroup;\r\n    journalGroup = this.fb.group({\r\n      AccountItem: \"\",\r\n      TRNDATE: \"\",\r\n      inputMode: true,\r\n      editMode: false,\r\n    });\r\n    this.trnTranControl.push(journalGroup);\r\n  }\r\n\r\n\r\n  addRow(index) {\r\n    for (var i = 0; i < this.trnTranControl.length; i++) {\r\n      this.trnTranControl.at(i).get('inputMode').patchValue(false);\r\n    }\r\n    this.initTrnTranList();\r\n  }\r\n\r\n  editRow(index) {\r\n    this.trnTranControl.at(index).get('inputMode').patchValue(true);\r\n  }\r\n\r\n  saveRow(index) {\r\n    this.trnTranControl.at(index).get('inputMode').patchValue(false);\r\n  }\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/pages/AccountVoucher/components/journal/test.ts","import { Component, OnDestroy } from '@angular/core';\r\nimport { TransactionService } from \"./../../../../common/Transaction Components/transaction.service\";\r\nimport { TrnMain, VoucherTypeEnum } from \"./../../../../common/interfaces/TrnMain\";\r\nimport { MasterRepo } from \"./../../../../common/repositories/masterRepo.service\";\r\nimport { Subscription } from \"rxjs/Subscription\";\r\nimport { FormGroup, FormControl, FormBuilder, Validators } from '@angular/forms';\r\nimport { IDivision } from '../../../../common/interfaces';\r\nimport { SettingService } from '../../../../common/services';\r\nimport { AuthService } from '../../../../common/services/permission/authService.service';\r\n\r\n@Component({\r\n  selector: \"trnmain-journal-entry\",\r\n  template: require('./trnmain-journal-entry.component.html'),\r\n  styles: [require('../../../Style.css')],\r\n})\r\nexport class TrnMainJournalEntryComponent {\r\n  TrnMainObj: TrnMain = <TrnMain>{};\r\n  TrnMainForm: FormGroup;\r\n\r\n  transactionType: string //for salesmode-entry options\r\n  mode: string = \"NEW\";\r\n  modeTitle: string = '';\r\n  private returnUrl: string;\r\n  divisionList: IDivision[] = [];\r\n  TrnDate: Date;\r\n  Trn_Date: Date;\r\n  warehouse: string;\r\n  private vchrno: string;\r\n  private division: string;\r\n  private phiscalid: string;\r\n  form: FormGroup;\r\n  AppSettings;\r\n  pageHeading: string;\r\n  showOrder = false;\r\n  voucherType: VoucherTypeEnum;\r\n  subscriptions: any[] = [];\r\n  tempWarehouse: any;\r\n  userProfile: any = <any>{};\r\n\r\n\r\n  constructor(private masterService: MasterRepo,\r\n    private _trnMainService: TransactionService,\r\n    private _fb: FormBuilder,\r\n    private setting: SettingService,\r\n    private authservice: AuthService\r\n  ) {\r\n    this.TrnMainObj = _trnMainService.TrnMainObj;\r\n    this.AppSettings = this.setting.appSetting;\r\n    this.userProfile = authservice.getUserProfile();\r\n    this.voucherType = this.TrnMainObj.VoucherType;\r\n    this.TrnMainObj.BRANCH = this.userProfile.userBranch;\r\n    this.TrnMainObj.DIVISION = this.userProfile.userDivision;\r\n\r\n    this.masterService.refreshTransactionList();\r\n\r\n    if (this.TrnMainObj.VoucherType == VoucherTypeEnum.CreditNote || this.TrnMainObj.VoucherType == VoucherTypeEnum.SalesReturn) {\r\n      this.transactionType = 'creditnote';\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.TrnMainForm = this._fb.group({\r\n      REMARKS: '',\r\n      DIFFERENCE: '',\r\n    });\r\n\r\n    if (this.TrnMainObj.Mode == \"VIEW\") {\r\n      this.TrnMainForm.get('REMARKS').disable();\r\n    }\r\n\r\n    this.TrnMainForm.get('DIFFERENCE').disable();\r\n\r\n    this.TrnMainForm.valueChanges.subscribe(form => {\r\n      this.TrnMainObj.REMARKS = form.REMARKS;\r\n    });\r\n\r\n    if (this.TrnMainObj.Mode == \"EDIT\" || this.TrnMainObj.Mode == \"VIEW\") {\r\n      this._trnMainService.loadDataObservable.subscribe(data => {\r\n        try {\r\n          this.TrnMainForm.patchValue({\r\n            REMARKS: data.REMARKS,\r\n            DIFFERENCE: this._trnMainService.differenceAmount\r\n          });\r\n        } catch (e) {\r\n        }\r\n      });\r\n    }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/pages/AccountVoucher/components/journal/trnmain-journal-entry.component.ts","import { Component, OnInit, OnDestroy, Input, Output, EventEmitter, Renderer, ElementRef, ViewChild } from '@angular/core';\r\nimport { TransactionService } from \"./../../../../common/Transaction Components/transaction.service\";\r\nimport { PREFIX } from \"./../../../../common/interfaces/Prefix.interface\";\r\nimport { FormGroup, FormBuilder, FormControl, Validators, FormArray } from \"@angular/forms\";\r\nimport { Subscription } from \"rxjs/Subscription\";\r\nimport { TrnMain, Trntran, TSubLedgerTran, TSubLedger, CostCenter, Division, VoucherTypeEnum } from \"./../../../../common/interfaces/TrnMain\";\r\nimport { CommonService, SettingService } from './../../../../common/services';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { TAcList } from './../../../../common/interfaces/Account.interface';\r\nimport { MasterRepo } from \"../../../../common/repositories/masterRepo.service\";\r\nimport { Subject } from 'rxjs/subject';\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { DomSanitizer, SafeHtml } from \"@angular/platform-browser\";\r\nimport { GenericPopUpComponent, GenericPopUpSettings } from '../../../../common/popupLists/generic-grid/generic-popup-grid.component';\r\nimport { AlertService } from '../../../../common/services/alert/alert.service';\r\nimport { SpinnerService } from '../../../../common/services/spinner/spinner.service';\r\n\r\n\r\n@Component({\r\n  selector: 'trntran-journal-entry',\r\n  template: require('./trntran-journal-entry.component.html'),\r\n  styles: [require('./../../../../../assets/css/styles.css'), require('../../../modal-style.css')],\r\n\r\n})\r\n\r\nexport class TrnTranJournalEntryComponent {\r\n\r\n  @ViewChild(\"genericGridACList\") genericGridACList: GenericPopUpComponent;\r\n  gridACListPopupSettings: GenericPopUpSettings = new GenericPopUpSettings();\r\n\r\n\r\n  hideSubledgerRowGrid: boolean = true;\r\n  public account: TAcList = <TAcList>{};\r\n  //public accountList: TAcList[] = [];\r\n  public subledgerItemList: TSubLedger[] = [];\r\n  public costCenterList: CostCenter[] = [];\r\n  public trnMain: TrnMain = <TrnMain>{};\r\n  public trnTran: Trntran = <Trntran>{};\r\n  public changeIndex: number;\r\n  subLedgerList: TSubLedgerTran[] = [];\r\n  private focusDr = false;\r\n  private focusCr = false;\r\n  private showAmount: string;\r\n  private drTotal: number;\r\n  private crTotal: number;\r\n  private subDrTotal: number;\r\n  private subCrTotal: number;\r\n  public hasCheque = true;\r\n  public hasCostCenter = true;\r\n  private hasAddBtn = false;\r\n  private hasLedgerAddBtn = false;\r\n  private acCodeIndex: number;\r\n  private acNameIndex: number;\r\n  private showSubLedger = false;\r\n  private showHelp = true;\r\n  private showWholeSubledger = true;\r\n  private acCodeFocused = false;\r\n  private acNameFocused = false;\r\n  private subAcCodeFocused = false;\r\n  private subAcNameFocused = false;\r\n  private enableACCodeFocus = false;\r\n  private enableACNameFocus = true;\r\n  private showSubLedgerList = false;\r\n  private subjectACList = new Subject();\r\n  viewMode = false;\r\n\r\n  private returnUrl: string;\r\n  private guid: string;\r\n\r\n  private subcriptions: Array<Subscription> = [];\r\n\r\n  constructor(\r\n    private masterService: MasterRepo,\r\n    private _trnMainService: TransactionService,\r\n    private _activatedRoute: ActivatedRoute,\r\n    private router: Router,\r\n    private settingService: SettingService,\r\n    private renderer: Renderer,\r\n    private _sanitizer: DomSanitizer,\r\n    private alertService: AlertService,\r\n    private loadingSerive: SpinnerService) {\r\n    try {\r\n      this.trnMain = _trnMainService.TrnMainObj;\r\n      this._trnMainService.saveDisable = true;\r\n      this.showWholeSubledger = this.settingService.appSetting.enableSubLedger;\r\n      this.hasCostCenter = this.settingService.appSetting.enableCostCenter;\r\n      this.hasCheque = this.settingService.appSetting.enableChequeInEntry;\r\n      this.enableACCodeFocus = this.settingService.appSetting.enableACCodeFocus;\r\n      this.enableACNameFocus = this.settingService.appSetting.enableACNameFocus;\r\n      this.masterService.refreshAccountList('Journal-constructor');\r\n\r\n      this.gridACListPopupSettings = {\r\n        title: \"Accounts\",\r\n        apiEndpoints: `/getAccountPagedList`,\r\n        defaultFilterIndex: 1,\r\n        columns: [\r\n          {\r\n            key: 'ACCODE',\r\n            title: 'A/C CODE',\r\n            hidden: false,\r\n            noSearch: false\r\n          },\r\n          {\r\n            key: 'ACNAME',\r\n            title: 'A/C NAME',\r\n            hidden: false,\r\n            noSearch: false\r\n          }\r\n        ]\r\n      }\r\n    } catch (ex) {\r\n      alert(ex);\r\n    }\r\n  }\r\n  observableAclist = (): Observable<TAcList[]> => {\r\n    //let serv=this._service\r\n    try {\r\n      return this.masterService.getAccount('journal-ObservableAclist');\r\n    } catch (ex) {\r\n      alert(ex);\r\n    }\r\n\r\n  }\r\n  observableAclistAcname = (keyword: any): Observable<TAcList[]> => {\r\n    //let serv=this._service\r\n    try {\r\n      if (keyword) {\r\n        return this.masterService.getAccoutFilteredObs(keyword, 1);\r\n\r\n      }\r\n      else {\r\n        return Observable.of([]);\r\n      }\r\n    } catch (ex) {\r\n      alert(ex);\r\n    }\r\n  }\r\n\r\n  //aclist = this._service.accountList;\r\n  observableAclistAcid = (keyword: any): Observable<TAcList[]> => {\r\n    //let serv=this._service\r\n    try {\r\n      if (keyword) {\r\n        return this.masterService.getAccoutFilteredObs(keyword, 0);\r\n\r\n      }\r\n      else {\r\n        return Observable.of([]);\r\n      }\r\n    } catch (ex) {\r\n      alert(ex);\r\n    }\r\n  }\r\n\r\n  autocompleListFormatter = (data: any): SafeHtml => {\r\n    try {\r\n      let html = `<span>${data.ACNAME}</span>`;\r\n      return this._sanitizer.bypassSecurityTrustHtml(html);\r\n    } catch (ex) {\r\n      alert(ex);\r\n    }\r\n  }\r\n  autocompleListAcidFormatter = (data: any): SafeHtml => {\r\n    try {\r\n      let html = `<span>${data.ACCODE}</span>`;\r\n      return this._sanitizer.bypassSecurityTrustHtml(html);\r\n    } catch (ex) {\r\n      alert(ex);\r\n    }\r\n  }\r\n\r\n  AutoSelectAccodeChange($event, index) {\r\n    try {\r\n      let ret = this.masterService.accountList.find(x => x.ACCODE == $event);\r\n      if (ret) {\r\n        this.trnMain.TrntranList[index].AccountItem = ret;\r\n        this.trnMain.TrntranList[index].acitem = ret;\r\n      }\r\n      this.trnMain.TrntranList[index].hasDebit = true;\r\n      this.trnMain.TrntranList[index].hasCredit = true;\r\n      this.trnMain.TrntranList[index].SubledgerTranList = [];\r\n      this.trnMain.TrntranList[index].DRAMNT = null;\r\n      this.trnMain.TrntranList[index].CRAMNT = null;\r\n      this.checkDifference();\r\n      this.hasAddBtn = false;\r\n      this.focusDr = false;\r\n      this.focusCr = false;\r\n      this.acNameIndex = index;\r\n      this.trnMain.TrntranList[index].acType = null;\r\n      this.trnMain.TrntranList[index].drBGColor = \"\";\r\n      this.trnMain.TrntranList[index].drColor = \"\";\r\n      this.trnMain.TrntranList[index].crBGColor = \"\";\r\n      this.trnMain.TrntranList[index].crColor = \"\";\r\n\r\n\r\n    }\r\n    catch (error) {\r\n      this.trnMain.TrntranList[index].AccountItem = undefined;\r\n    }\r\n  }\r\n\r\n  AutoSelectAcnameChange($event, index) {\r\n    try {\r\n      if (typeof ($event) == 'object') {\r\n        var ac = <TAcList>$event;\r\n        this.trnMain.TrntranList[index].AccountItem = $event;\r\n        this.trnMain.TrntranList[index].AccountItem.ACCODE = ac.ACCODE;\r\n      }\r\n      else {\r\n        this.trnMain.TrntranList[index].AccountItem.ACCODE = \"\";\r\n      }\r\n\r\n      this.trnMain.TrntranList[index].hasDebit = true;\r\n      this.trnMain.TrntranList[index].hasCredit = true;\r\n      this.trnMain.TrntranList[index].SubledgerTranList = [];\r\n      this.trnMain.TrntranList[index].DRAMNT = null;\r\n      this.trnMain.TrntranList[index].CRAMNT = null;\r\n      this.checkDifference();\r\n      this.hasAddBtn = false;\r\n      this.focusDr = false;\r\n      this.focusCr = false;\r\n      this.acNameIndex = index;\r\n      this.trnMain.TrntranList[index].acType = null;\r\n      this.trnMain.TrntranList[index].drBGColor = \"\";\r\n      this.trnMain.TrntranList[index].drColor = \"\";\r\n      this.trnMain.TrntranList[index].crBGColor = \"\";\r\n      this.trnMain.TrntranList[index].crColor = \"\";\r\n    }\r\n    catch (error) {\r\n      this.trnMain.TrntranList[index].AccountItem.ACCODE = \"\";\r\n    }\r\n  }\r\n\r\n  hideDetail() {\r\n    this.masterService.ShowMore = false;\r\n  }\r\n\r\n  selectedIndex: number = 0;\r\n  showAcList(i) {\r\n    this.selectedIndex = i;\r\n    this.genericGridACList.show();\r\n  }\r\n\r\n  onAcSelect(acItem: any) {\r\n    try {\r\n      if (typeof (acItem) == 'object') {\r\n        var ac = <TAcList>acItem;\r\n        this.trnMain.TrntranList[this.selectedIndex].AccountItem = acItem;\r\n        this.trnMain.TrntranList[this.selectedIndex].AccountItem.ACCODE = ac.ACCODE;\r\n      }\r\n      else {\r\n        this.trnMain.TrntranList[this.selectedIndex].AccountItem.ACCODE = \"\";\r\n      }\r\n\r\n      this.trnMain.TrntranList[this.selectedIndex].hasDebit = true;\r\n      this.trnMain.TrntranList[this.selectedIndex].hasCredit = true;\r\n      this.trnMain.TrntranList[this.selectedIndex].SubledgerTranList = [];\r\n      this.trnMain.TrntranList[this.selectedIndex].DRAMNT = null;\r\n      this.trnMain.TrntranList[this.selectedIndex].CRAMNT = null;\r\n      this.checkDifference();\r\n      this.hasAddBtn = false;\r\n      this.focusDr = false;\r\n      this.focusCr = false;\r\n      this.acNameIndex = this.selectedIndex;\r\n      this.trnMain.TrntranList[this.selectedIndex].acType = null;\r\n      this.trnMain.TrntranList[this.selectedIndex].drBGColor = \"\";\r\n      this.trnMain.TrntranList[this.selectedIndex].drColor = \"\";\r\n      this.trnMain.TrntranList[this.selectedIndex].crBGColor = \"\";\r\n      this.trnMain.TrntranList[this.selectedIndex].crColor = \"\";\r\n    }\r\n    catch (error) {\r\n      this.trnMain.TrntranList[this.selectedIndex].AccountItem.ACCODE = \"\";\r\n    }\r\n    this.trnMain.TrntranList[this.selectedIndex].acitem = acItem;\r\n  }\r\n\r\n\r\n  ngOnInit() {\r\n    try {\r\n      this.trnMain.TrntranList = [];\r\n\r\n      this.masterService.refreshTransactionList();\r\n      this.masterService.getSubLedgerList().subscribe((res: Array<TSubLedger>) => { this.subledgerItemList = res; },\r\n        error => {\r\n          this.masterService.resolveError(error, \"trntran-journal-entry - getSubLedgerList\");\r\n        }\r\n      );\r\n      if (this.trnMain.Mode == \"VIEW\") {\r\n        this.viewMode = true;\r\n      }\r\n\r\n      if (this.trnMain.Mode == \"EDIT\" || this.trnMain.Mode == \"VIEW\") {\r\n        this._trnMainService.loadDataObservable.subscribe(data => {\r\n          try {\r\n            this.trnMain.TrntranList = data.TrntranList;\r\n\r\n            for (var t in this.trnMain.TrntranList) {\r\n              this.trnMain.TrntranList[t].inputMode = false;\r\n              this.trnMain.TrntranList[t].editMode = false;\r\n              this.trnMain.TrntranList[t].AccountItem = this.masterService.accountList.filter(y => y.ACID == this.trnMain.TrntranList[t].A_ACID)[0];\r\n              this.trnMain.TrntranList[t].acitem = this.trnMain.TrntranList[t].AccountItem;\r\n              if (this.trnMain.TrntranList[t].AccountItem != null && this.trnMain.TrntranList[t].AccountItem.HASSUBLEDGER == 1) {\r\n                this.trnMain.TrntranList[t].SubledgerTranList.forEach(z => { z.inputMode = false, z.editMode = false, z.SubledgerItem = this.subledgerItemList.filter(w => w.ACID == z.A_ACID)[0] });\r\n                if (this.viewMode == false) {\r\n                  var nullsl = <TSubLedgerTran>{};\r\n                  nullsl.SubledgerItem = <TSubLedger>{};\r\n                  nullsl.inputMode = true;\r\n                  nullsl.editMode = false;\r\n                  this.trnMain.TrntranList[t].SubledgerTranList.push(nullsl);\r\n                }\r\n              }\r\n            }\r\n\r\n            if (this.viewMode == false) {\r\n              var nulltt = <Trntran>{};\r\n              nulltt.AccountItem = <TAcList>{};\r\n              nulltt.inputMode = true;\r\n              nulltt.editMode = false;\r\n              this.trnMain.TrntranList.push(nulltt);\r\n            }\r\n\r\n\r\n            if ((this.drTotal == this.crTotal) && this.drTotal != 0 && this.crTotal != 0) {\r\n              this._trnMainService.saveDisable = false;\r\n            } else {\r\n              this._trnMainService.saveDisable = true;\r\n            }\r\n\r\n          } catch (e) {\r\n          }\r\n        }, error => {\r\n          this.masterService.resolveError(error, \"journal - loadDataObservable\");\r\n        }\r\n        );\r\n      }\r\n      else {\r\n        var newRow = <Trntran>{};\r\n        newRow.inputMode = true;\r\n        newRow.editMode = false;\r\n        newRow.AccountItem = <TAcList>{};\r\n        this.trnMain.TrntranList.push(newRow);\r\n        const uuidV1 = require('uuid/v1');\r\n        this.trnMain.guid = uuidV1();\r\n      }\r\n    } catch (ex) {\r\n      alert(ex);\r\n    }\r\n  }\r\n\r\n  preventInput($event) {\r\n    $event.preventDefault();\r\n    return false;\r\n  }\r\n\r\n  addRow(index) {\r\n    try {\r\n      let currentObj = this.trnMain.TrntranList[index];\r\n\r\n      if (this.trnMain.TrntranList[index + 1]) {\r\n        return;\r\n      }\r\n\r\n      if (!currentObj.AccountItem || currentObj.AccountItem.ACCODE == undefined || currentObj.AccountItem.ACCODE == \"\") {\r\n        this.alertService.info(\"Please Select A/C\");\r\n        return;\r\n      }\r\n\r\n      if ((currentObj.DRAMNT == 0 || currentObj.DRAMNT == null) && (currentObj.CRAMNT == 0 || currentObj.CRAMNT == null)) {\r\n        this.alertService.info(\"Debit Amount or Credit Amount is Required.\")\r\n        return;\r\n      }\r\n\r\n      var newRow = <Trntran>{};\r\n      var newaclist: TAcList = <TAcList>{};\r\n      newRow.AccountItem = newaclist;\r\n      newRow.inputMode = true;\r\n      newRow.editMode = true;\r\n      this.trnMain.TrntranList.push(newRow);\r\n    } catch (ex) {\r\n      alert(ex);\r\n    }\r\n  }\r\n\r\n  removeRow(index) {\r\n    try {\r\n      if (this.trnMain.TrntranList[index].inputMode == true && this.trnMain.TrntranList[index].editMode == false) {\r\n        this.trnMain.TrntranList[index] = <Trntran>{}\r\n        this.trnMain.TrntranList[index].AccountItem = <TAcList>{};\r\n        this.trnMain.TrntranList[index].SubledgerTranList = [];\r\n        this.showSubLedger = false;\r\n        this.showHelp = true;\r\n        this.trnMain.TrntranList[index].inputMode = true;\r\n        this.trnMain.TrntranList[index].editMode = false;\r\n        this.trnMain.TrntranList[index].drBGColor = \"\";\r\n        this.trnMain.TrntranList[index].drColor = \"\";\r\n        this.trnMain.TrntranList[index].crBGColor = \"\";\r\n        this.trnMain.TrntranList[index].crColor = \"\";\r\n        this.trnMain.TrntranList[index].hasDebit = true;\r\n        this.trnMain.TrntranList[index].hasCredit = true;\r\n        this.changeCredit(null, index);\r\n        this.changeDebit(null, index);\r\n        this.hasAddBtn = false;\r\n      } else {\r\n        this.trnMain.TrntranList.splice(index, 1);\r\n        this.hasAddBtn = false;\r\n        this.trnMain.TrntranList[index].DRAMNT = null;\r\n        this.trnMain.TrntranList[index].CRAMNT = null;\r\n\r\n        this.showSubLedger = false;\r\n        this.showHelp = true;\r\n\r\n        this.changeCredit(null, index);\r\n        this.changeDebit(null, index);\r\n      }\r\n    } catch (ex) {\r\n      alert(ex);\r\n    }\r\n  }\r\n\r\n  editRow(index) {\r\n    try {\r\n      this.trnMain.TrntranList[index].inputMode = true;\r\n      this.trnMain.TrntranList[index].editMode = true;\r\n      if (this.trnMain.TrntranList[index].DRAMNT != null && this.trnMain.TrntranList[index].DRAMNT != 0) {\r\n        this.trnMain.TrntranList[index].hasDebit = true;\r\n        this.trnMain.TrntranList[index].hasCredit = false;\r\n        if (this.trnMain.TrntranList[index].AccountItem != null && this.trnMain.TrntranList[index].AccountItem.HASSUBLEDGER == 1) {\r\n          this.trnMain.TrntranList[index].drBGColor = \"grey\";\r\n          this.trnMain.TrntranList[index].drColor = \"white\";\r\n          this.trnMain.TrntranList[index].hasDebit = false;\r\n        }\r\n      } else if (this.trnMain.TrntranList[index].CRAMNT != null && this.trnMain.TrntranList[index].CRAMNT != 0) {\r\n        this.trnMain.TrntranList[index].hasDebit = false;\r\n        this.trnMain.TrntranList[index].hasCredit = true;\r\n        if (this.trnMain.TrntranList[index].AccountItem != null && this.trnMain.TrntranList[index].AccountItem.HASSUBLEDGER == 1) {\r\n          this.trnMain.TrntranList[index].crBGColor = \"grey\";\r\n          this.trnMain.TrntranList[index].crColor = \"white\";\r\n          this.trnMain.TrntranList[index].hasCredit = false;\r\n        }\r\n      }\r\n\r\n      if (this.trnMain.TrntranList[index].AccountItem != null && this.trnMain.TrntranList[index].AccountItem.HASSUBLEDGER == 1 && this.trnMain.TrntranList[index].DRAMNT != 0 && this.trnMain.TrntranList[index].DRAMNT != null) {\r\n        this.subLedgerList = this.trnMain.TrntranList[index].SubledgerTranList;\r\n        this.showSubLedger = true;\r\n        this.showHelp = false;\r\n        this.trnMain.TrntranList[index].acType = \"Cr.\";\r\n        this.showSubLedgerList = false;\r\n\r\n      } else if (this.trnMain.TrntranList[index].AccountItem != null && this.trnMain.TrntranList[index].AccountItem.HASSUBLEDGER == 1 && this.trnMain.TrntranList[index].CRAMNT != 0 && this.trnMain.TrntranList[index].CRAMNT != null) {\r\n        this.subLedgerList = this.trnMain.TrntranList[index].SubledgerTranList;\r\n        this.showSubLedger = true;\r\n        this.showHelp = false;\r\n        this.trnMain.TrntranList[index].acType = \"Dr.\";\r\n        this.showSubLedgerList = false;\r\n\r\n      } else {\r\n        this.showSubLedger = false;\r\n        this.showHelp = true;\r\n        this.trnMain.TrntranList[index].acType = null;\r\n        this.showSubLedgerList = false;\r\n      }\r\n      this.showAmount = this.trnMain.TrntranList[index].acType;\r\n    } catch (ex) {\r\n      alert(ex);\r\n    }\r\n  }\r\n\r\n  saveRow(index) {\r\n    try {\r\n      this.trnMain.TrntranList[index].inputMode = false;\r\n      this.trnMain.TrntranList[index].editMode = false;\r\n      if (this.trnMain.TrntranList[index].AccountItem != null && this.trnMain.TrntranList[index].AccountItem.HASSUBLEDGER == 1) {\r\n        this.showSubLedger = false;\r\n        this.showHelp = false;\r\n        this.showSubLedgerList = true;\r\n      }\r\n    } catch (ex) {\r\n      alert(ex);\r\n    }\r\n  }\r\n\r\n  addLedgerRow(index) {\r\n    try {\r\n      this.subLedgerList.forEach(x => x.inputMode = false);\r\n      var newSubLedger = <TSubLedgerTran>{};\r\n      newSubLedger.SubledgerItem = <TSubLedger>{};\r\n      newSubLedger.inputMode = true;\r\n      newSubLedger.editMode = false;\r\n      this.subLedgerList.push(newSubLedger);\r\n      this.hasLedgerAddBtn = false;\r\n      if (this.enableACCodeFocus == true) {\r\n        this.subAcCodeFocused = true;\r\n      } else if (this.enableACNameFocus) {\r\n        this.subAcNameFocused = true;\r\n      }\r\n    } catch (ex) {\r\n      alert(ex);\r\n    }\r\n  }\r\n\r\n  removeLedgerRow(index) {\r\n    try {\r\n      if (this.subLedgerList[index].inputMode == true && this.subLedgerList[index].editMode == false) {\r\n        this.subLedgerList[index].SubledgerItem = <TSubLedger>{};\r\n        this.subLedgerList[index] = <TSubLedgerTran>{};\r\n        this.subLedgerList[index].inputMode = true;\r\n        this.subLedgerList[index].editMode = false;\r\n        this.subCreditTotal();\r\n        this.subDebitTotal();\r\n        this.debitTotal();\r\n        this.creditTotal();\r\n        this.checkDifference();\r\n        this.changeSubCredit(null, index);\r\n        this.changeSubDebit(null, index);\r\n        this.hasLedgerAddBtn = false;\r\n      } else {\r\n        this.subLedgerList.splice(index, 1);\r\n        this.subCreditTotal();\r\n        this.subDebitTotal();\r\n        this.debitTotal();\r\n        this.creditTotal();\r\n        this.checkDifference();\r\n        this.changeSubCredit(null, index);\r\n        this.changeSubDebit(null, index);\r\n        this.hasLedgerAddBtn = false;\r\n      }\r\n    } catch (ex) {\r\n      alert(ex);\r\n    }\r\n  }\r\n\r\n  editLedgerRow(index) {\r\n    try {\r\n      this.subLedgerList[index].inputMode = true;\r\n      this.subLedgerList[index].editMode = true;\r\n    } catch (ex) {\r\n      alert(ex);\r\n    }\r\n  }\r\n\r\n  saveLedgerRow(index) {\r\n    try {\r\n      this.subLedgerList[index].inputMode = false;\r\n      this.subLedgerList[index].editMode = false;\r\n    } catch (ex) {\r\n      alert(ex);\r\n    }\r\n  }\r\n\r\n  // value=\"{{(tList.acitem!=null) ? tList.acitem.ACCODE : ''}}\"\r\n  changeDebit(value, index) {\r\n    try {\r\n\r\n      if (this._trnMainService.TrnMainObj.VoucherType != 12) return;\r\n\r\n      if (value != null) {\r\n        if (value.length > 0) {\r\n          this.trnMain.TrntranList[index].hasCredit = false;\r\n          this.trnMain.TrntranList[index].CRAMNT = 0;\r\n          if (this.trnMain.TrntranList[index].AccountItem != null && this.trnMain.TrntranList[index].AccountItem.HASSUBLEDGER == 1 && this.showWholeSubledger == true) {\r\n            this.trnMain.TrntranList[index].hasDebit = false;\r\n            this.trnMain.TrntranList[index].hasCredit = false;\r\n            this.trnMain.TrntranList[index].drBGColor = \"grey\";\r\n            this.trnMain.TrntranList[index].drColor = \"white\";\r\n            this.showSubLedger = true;\r\n            this.showHelp = false;\r\n            this.trnMain.TrntranList[index].DRAMNT = 0;\r\n            this.subLedgerList = this.trnMain.TrntranList[index].SubledgerTranList = [];\r\n            this.trnMain.TrntranList[index].acType = \"Cr.\";\r\n            this.showAmount = this.trnMain.TrntranList[index].acType;\r\n            var newSubLedger = <TSubLedgerTran>{};\r\n            newSubLedger.SubledgerItem = <TSubLedger>{};\r\n            newSubLedger.inputMode = true;\r\n            newSubLedger.editMode = false;\r\n            this.subLedgerList.push(newSubLedger);\r\n            this.trnMain.TrntranList[index].CRAMNT = 0;\r\n            if (this.enableACCodeFocus == true) {\r\n              this.subAcCodeFocused = true;\r\n            } else if (this.enableACNameFocus) {\r\n              this.subAcNameFocused = true;\r\n            }\r\n          }\r\n          this.changeIndex = index;\r\n          this.focusDr = true;\r\n\r\n        } else if (value.length == 0) {\r\n          this.trnMain.TrntranList[index].hasCredit = true;\r\n          this.trnMain.TrntranList[index].CRAMNT = null;\r\n        }\r\n      }\r\n      this.checkDifference();\r\n      this.debitTotal();\r\n\r\n      //if (this.trnMain.TrntranList[index].DRAMNT == 0) {\r\n      //    this.trnMain.TrntranList[index].DRAMNT = null;\r\n      //}\r\n\r\n      if ((this.drTotal == this.crTotal) && this.drTotal != 0 && this.crTotal != 0) {\r\n        this._trnMainService.saveDisable = false;\r\n      } else {\r\n        this._trnMainService.saveDisable = true;\r\n      }\r\n\r\n      this.hasAddBtn = true;\r\n      if (value == null) {\r\n        this.hasAddBtn = true;\r\n      } else if (this.trnMain.TrntranList[index].AccountItem == null || this.trnMain.TrntranList[index].AccountItem.ACID == null || this.trnMain.TrntranList[index].DRAMNT <= 0) {\r\n        this.hasAddBtn = false;\r\n      }\r\n    } catch (ex) {\r\n      alert(ex);\r\n    }\r\n\r\n  }\r\n\r\n  changeCredit(value, index) {\r\n    try {\r\n\r\n      if (this._trnMainService.TrnMainObj.VoucherType != 12) return;\r\n\r\n      if (value != null) {\r\n        if (value.length > 0) {\r\n          this.trnMain.TrntranList[index].hasDebit = false;\r\n          this.trnMain.TrntranList[index].DRAMNT = 0;\r\n          if (this.trnMain.TrntranList[index].AccountItem != null && this.trnMain.TrntranList[index].AccountItem.HASSUBLEDGER == 1 && this.showWholeSubledger == true) {\r\n            this.trnMain.TrntranList[index].hasDebit = false;\r\n            this.trnMain.TrntranList[index].hasCredit = false;\r\n            this.trnMain.TrntranList[index].crBGColor = \"grey\";\r\n            this.trnMain.TrntranList[index].crColor = \"white\";\r\n            this.showSubLedger = true;\r\n            this.showHelp = false;\r\n            this.trnMain.TrntranList[index].CRAMNT = 0;\r\n            this.subLedgerList = this.trnMain.TrntranList[index].SubledgerTranList = [];\r\n            this.trnMain.TrntranList[index].acType = \"Dr.\";\r\n            this.showAmount = this.trnMain.TrntranList[index].acType;\r\n            var newSubLedger = <TSubLedgerTran>{};\r\n            newSubLedger.SubledgerItem = <TSubLedger>{};\r\n            newSubLedger.inputMode = true;\r\n            newSubLedger.editMode = false;\r\n            this.subLedgerList.push(newSubLedger);\r\n            this.trnMain.TrntranList[index].DRAMNT = 0;\r\n            if (this.enableACCodeFocus == true) {\r\n              this.subAcCodeFocused = true;\r\n            } else if (this.enableACNameFocus) {\r\n              this.subAcNameFocused = true;\r\n            }\r\n          }\r\n          this.changeIndex = index;\r\n          this.focusCr = true;\r\n\r\n        } else if (value.length == 0) {\r\n          this.trnMain.TrntranList[index].hasDebit = true;\r\n          this.trnMain.TrntranList[index].DRAMNT = null;\r\n        }\r\n      }\r\n      this.checkDifference();\r\n      this.creditTotal();\r\n\r\n      if ((this.drTotal == this.crTotal) && this.drTotal != 0 && this.crTotal != 0) {\r\n        this._trnMainService.saveDisable = false;\r\n      } else {\r\n        this._trnMainService.saveDisable = true;\r\n      }\r\n\r\n      //if (this.trnMain.TrntranList[index].CRAMNT == 0) {\r\n      //    this.trnMain.TrntranList[index].CRAMNT = null;\r\n      //}\r\n\r\n      this.hasAddBtn = true;\r\n      if (value == null) {\r\n        this.hasAddBtn = true;\r\n      } else if (this.trnMain.TrntranList[index].AccountItem == null || this.trnMain.TrntranList[index].AccountItem.ACID == null || this.trnMain.TrntranList[index].CRAMNT <= 0) {\r\n        this.hasAddBtn = false;\r\n      }\r\n    } catch (ex) {\r\n      alert(ex);\r\n    }\r\n  }\r\n\r\n  checkDifference() {\r\n    try {\r\n      let diffAmount: number = 0;\r\n      this.trnMain.TrntranList.forEach(tran => {\r\n        diffAmount = diffAmount + (((tran.DRAMNT == null) ? 0 : tran.DRAMNT) - ((tran.CRAMNT == null) ? 0 : tran.CRAMNT))\r\n      })\r\n      this._trnMainService.differenceAmount = Math.abs(diffAmount);\r\n    } catch (ex) {\r\n      alert(ex);\r\n    }\r\n  }\r\n\r\n  debitTotal() {\r\n    try {\r\n      let debitAmount: number = 0;\r\n      this.trnMain.TrntranList.forEach(tran => {\r\n        debitAmount = debitAmount + ((tran.DRAMNT == null) ? 0 : tran.DRAMNT)\r\n      });\r\n      this.drTotal = debitAmount;\r\n    } catch (ex) {\r\n      alert(ex);\r\n    }\r\n  }\r\n\r\n  creditTotal() {\r\n    try {\r\n      let creditAmount: number = 0;\r\n      this.trnMain.TrntranList.forEach(tran => {\r\n        creditAmount = creditAmount + ((tran.CRAMNT == null) ? 0 : tran.CRAMNT)\r\n      });\r\n      this.crTotal = creditAmount;\r\n    } catch (ex) {\r\n      alert(ex);\r\n    }\r\n  }\r\n\r\n  changeSubDebit(value, index) {\r\n    try {\r\n      this.subDebitTotal();\r\n      this.creditTotal();\r\n      this.checkDifference();\r\n      this.hasLedgerAddBtn = true;\r\n      if (value == null) {\r\n        this.hasLedgerAddBtn = true;\r\n      } else if (this.subLedgerList[index].SubledgerItem == null || this.subLedgerList[index].SubledgerItem.ACID == null || this.subLedgerList[index].DRAMNT <= 0) {\r\n        this.hasLedgerAddBtn = false;\r\n      }\r\n      if ((this.drTotal == this.crTotal) && this.drTotal != 0 && this.crTotal != 0) {\r\n        this._trnMainService.saveDisable = false;\r\n      } else {\r\n        this._trnMainService.saveDisable = true;\r\n      }\r\n    } catch (ex) {\r\n      alert(ex);\r\n    }\r\n  }\r\n\r\n  changeSubCredit(value, index) {\r\n    try {\r\n      this.subCreditTotal();\r\n      this.debitTotal();\r\n      this.checkDifference();\r\n      this.hasLedgerAddBtn = true;\r\n      if (value == null) {\r\n        this.hasLedgerAddBtn = true;\r\n      } else if (this.subLedgerList[index].SubledgerItem == null || this.subLedgerList[index].SubledgerItem.ACID == null || this.subLedgerList[index].CRAMNT <= 0) {\r\n        this.hasLedgerAddBtn = false;\r\n      }\r\n      if ((this.drTotal == this.crTotal) && this.drTotal != 0 && this.crTotal != 0) {\r\n        this._trnMainService.saveDisable = false;\r\n      } else {\r\n        this._trnMainService.saveDisable = true;\r\n      }\r\n    } catch (ex) {\r\n      alert(ex);\r\n    }\r\n  }\r\n\r\n  subDebitTotal() {\r\n    try {\r\n      let debitAmount: number = 0;\r\n      this.trnMain.TrntranList[this.changeIndex].SubledgerTranList.forEach(sub => {\r\n        debitAmount = debitAmount + ((sub.DRAMNT == null) ? 0 : sub.DRAMNT)\r\n      })\r\n      this.trnMain.TrntranList[this.changeIndex].CRAMNT = debitAmount;\r\n      this.subDrTotal = debitAmount;\r\n      if (this.trnMain.TrntranList[this.changeIndex].AccountItem != null && this.trnMain.TrntranList[this.changeIndex].CRAMNT > 0) {\r\n        this.hasAddBtn = true;\r\n      } else {\r\n        this.hasAddBtn = false;\r\n      }\r\n    } catch (ex) {\r\n      alert(ex);\r\n    }\r\n  }\r\n\r\n  subCreditTotal() {\r\n    try {\r\n      let creditAmount: number = 0;\r\n      this.trnMain.TrntranList[this.changeIndex].SubledgerTranList.forEach(sub => {\r\n        creditAmount = creditAmount + ((sub.CRAMNT == null) ? 0 : sub.CRAMNT)\r\n      })\r\n      this.subCrTotal = creditAmount;\r\n      this.trnMain.TrntranList[this.changeIndex].DRAMNT = creditAmount;\r\n      if (this.trnMain.TrntranList[this.changeIndex].AccountItem != null && this.trnMain.TrntranList[this.changeIndex].DRAMNT > 0) {\r\n        this.hasAddBtn = true;\r\n      } else {\r\n        this.hasAddBtn = false;\r\n      }\r\n    } catch (ex) {\r\n      alert(ex);\r\n    }\r\n  }\r\n\r\n  clickRow(index) {\r\n    try {\r\n      if (this.trnMain.TrntranList[index].AccountItem.HASSUBLEDGER == 1 && this.trnMain.TrntranList[index].SubledgerTranList != null && this.trnMain.TrntranList[index].SubledgerTranList.length > 0 && this.trnMain.TrntranList[index].inputMode == false) {\r\n        this.showSubLedgerList = true;\r\n        this.showSubLedger = false;\r\n        this.showHelp = false;\r\n      } else if (this.trnMain.TrntranList[index].inputMode == true && this.trnMain.TrntranList[index].AccountItem.HASSUBLEDGER == 0) {\r\n        this.showSubLedgerList = false;\r\n        this.showSubLedger = false;\r\n        this.showHelp = true;\r\n      } else if (this.trnMain.TrntranList[index].inputMode == true && this.trnMain.TrntranList[index].AccountItem.HASSUBLEDGER == 1) {\r\n        this.showSubLedgerList = false;\r\n        this.showSubLedger = true;\r\n        this.showHelp = false;\r\n        this.subLedgerList = this.trnMain.TrntranList[index].SubledgerTranList;\r\n        this.showAmount = this.trnMain.TrntranList[index].acType;\r\n      } else {\r\n        this.showSubLedgerList = false;\r\n        this.showSubLedger = false;\r\n        this.showHelp = true;\r\n      }\r\n\r\n      this.changeIndex = index;\r\n    } catch (ex) {\r\n      alert(ex);\r\n    }\r\n  }\r\n\r\n  acCodeChange(index) {\r\n    try {\r\n      this.trnMain.TrntranList[index].hasDebit = true;\r\n      this.trnMain.TrntranList[index].hasCredit = true;\r\n      this.trnMain.TrntranList[index].SubledgerTranList = [];\r\n      this.trnMain.TrntranList[index].DRAMNT = null;\r\n      this.trnMain.TrntranList[index].CRAMNT = null;\r\n      this.checkDifference();\r\n      this.hasAddBtn = false;\r\n      this.focusDr = false;\r\n      this.focusCr = false;\r\n      this.acCodeIndex = index;\r\n      this.trnMain.TrntranList[index].acType = null;\r\n      this.trnMain.TrntranList[index].drBGColor = \"\";\r\n      this.trnMain.TrntranList[index].drColor = \"\";\r\n      this.trnMain.TrntranList[index].crBGColor = \"\";\r\n      this.trnMain.TrntranList[index].crColor = \"\";\r\n    } catch (ex) {\r\n      alert(ex);\r\n    }\r\n  }\r\n  acidChange(index) {\r\n    try {\r\n      this.trnMain.TrntranList[index].hasDebit = true;\r\n      this.trnMain.TrntranList[index].hasCredit = true;\r\n      this.trnMain.TrntranList[index].SubledgerTranList = [];\r\n      this.trnMain.TrntranList[index].DRAMNT = null;\r\n      this.trnMain.TrntranList[index].CRAMNT = null;\r\n      this.checkDifference();\r\n      this.hasAddBtn = false;\r\n      this.focusDr = false;\r\n      this.focusCr = false;\r\n      this.acNameIndex = index;\r\n      this.trnMain.TrntranList[index].acType = null;\r\n      this.trnMain.TrntranList[index].drBGColor = \"\";\r\n      this.trnMain.TrntranList[index].drColor = \"\";\r\n      this.trnMain.TrntranList[index].crBGColor = \"\";\r\n      this.trnMain.TrntranList[index].crColor = \"\";\r\n    } catch (ex) {\r\n      alert(ex);\r\n    }\r\n  }\r\n  acNameChange(index) {\r\n    try {\r\n      this.trnMain.TrntranList[index].hasDebit = true;\r\n      this.trnMain.TrntranList[index].hasCredit = true;\r\n      this.trnMain.TrntranList[index].SubledgerTranList = [];\r\n      this.trnMain.TrntranList[index].DRAMNT = null;\r\n      this.trnMain.TrntranList[index].CRAMNT = null;\r\n      this.checkDifference();\r\n      this.hasAddBtn = false;\r\n      this.focusDr = false;\r\n      this.focusCr = false;\r\n      this.acNameIndex = index;\r\n      this.trnMain.TrntranList[index].acType = null;\r\n      this.trnMain.TrntranList[index].drBGColor = \"\";\r\n      this.trnMain.TrntranList[index].drColor = \"\";\r\n      this.trnMain.TrntranList[index].crBGColor = \"\";\r\n      this.trnMain.TrntranList[index].crColor = \"\";\r\n    } catch (ex) {\r\n      alert(ex);\r\n    }\r\n  }\r\n\r\n  subACCodeChange(index) {\r\n    try {\r\n      this.subLedgerList[index].DRAMNT = null;\r\n      this.subLedgerList[index].CRAMNT = null;\r\n    } catch (ex) {\r\n      alert(ex);\r\n    }\r\n  }\r\n  subACNameChange(index) {\r\n    try {\r\n      this.subLedgerList[index].DRAMNT = null;\r\n      this.subLedgerList[index].CRAMNT = null;\r\n    } catch (ex) {\r\n      alert(ex);\r\n    }\r\n  }\r\n\r\n  changeToArray(data) {\r\n    try {\r\n      if (data) {\r\n        let retData: Array<any> = [];\r\n        retData.concat([], data);\r\n        return retData;\r\n      }\r\n      return [];\r\n    } catch (ex) {\r\n      alert(ex);\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    try {\r\n      this.subcriptions.forEach(subs => {\r\n        subs.unsubscribe();\r\n\r\n      });\r\n    } catch (ex) {\r\n      alert(ex);\r\n    }\r\n  }\r\n\r\n  back() {\r\n    try {\r\n      this.router.navigate([this.returnUrl]);\r\n    } catch (ex) {\r\n      alert(ex);\r\n    }\r\n  }\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/pages/AccountVoucher/components/journal/trntran-journal-entry.component.ts","import { Http, Response, RequestOptions, Headers } from '@angular/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { ActivatedRoute, ActivatedRouteSnapshot } from '@angular/router';\r\nimport { AuthService } from '../../../../common/services/permission';\r\nimport {Branch} from \"../../../../common/interfaces/TrnMain\";\r\nimport { Subject } from 'rxjs/subject';\r\nimport {GlobalState} from '../../../../global.state';\r\nimport { AlertService } from '../../../../common/services/alert/alert.service';\r\nimport { Observable } from 'rxjs';\r\n@Injectable()\r\n\r\nexport class PartyReconciliationService {\r\n    \r\n    constructor(private http: Http, private activatedRoute: ActivatedRoute, private authService: AuthService,private state:GlobalState,private alertservices:AlertService) {\r\n    }\r\n   private get apiUrl():string{\r\n        let url=this.state.getGlobalSetting(\"apiUrl\");\r\n        let apiUrl =\"\";\r\n        \r\n        if(!!url && url.length>0){apiUrl=url[0]};\r\n        return apiUrl\r\n    } \r\n\r\n    saveBank(bid:any){\r\n        let bodyData = {data:bid};\r\n        return  this.http.post(this.apiUrl +'/saveBankReconciliation',bodyData,this.getRequestOption())\r\n        .map(this.extractData)\r\n        .catch(this.handleError)\r\n    }\r\n    savePartyReconciliation(bid:any){\r\n        let bodyData = {data:bid};\r\n        return  this.http.post(this.apiUrl +'/savePartyReconciliation',bodyData,this.getRequestOption())\r\n        .map(this.extractData)\r\n        .catch(this.handleError)\r\n    }\r\n\r\n    public extractData(res:Response){\r\n        let response = res.json();\r\n        return response || {};\r\n    }\r\n    public handleError(error: Response |any){\r\n        return Observable.throw(error);\r\n    }\r\n\r\n\r\n    saveBankReconciliation(bid:any) {\r\n        let res={status:\"error\",result:\"\"};\r\n        let returnSubject:Subject<any>=new Subject();\r\n        let bodyData = {data:bid};\r\n        this.http.post(this.apiUrl +'/saveBankReconciliation',bodyData,this.getRequestOption())\r\n            .subscribe(response=>{\r\n                let data = response.json();\r\n                if(data.status == 'ok'){\r\n                    returnSubject.next(data);\r\n                    returnSubject.unsubscribe();\r\n                    this.alertservices.success(data.result);\r\n\r\n                }\r\n                else{\r\n                    returnSubject.next(data)\r\n                    returnSubject.unsubscribe();\r\n                    this.alertservices.error(\"Error\"+data.result);\r\n                }\r\n            },error =>{\r\n                res.status='error';res.result=error;\r\n                returnSubject.next(res);\r\n                returnSubject.unsubscribe();\r\n            }\r\n            );\r\n            return returnSubject;\r\n      \r\n     }\r\n     \r\n\r\n     getPartyReconcileList(bid:any) {\r\n        let res={status:\"error\",result:\"\"};\r\n        let returnSubject:Subject<any>=new Subject();\r\n        this.http.post(this.apiUrl +'/getPartyReconciliation',bid,this.getRequestOption())\r\n            .subscribe(response=>{\r\n                let data = response.json();\r\n                if(data.status == 'ok'){\r\n                    returnSubject.next(data);\r\n                    returnSubject.unsubscribe();\r\n                    \r\n                }else if(data.status == 'error'){\r\n                    this.alertservices.error(\"Error\"+data.result);\r\n                }\r\n                else{\r\n                    returnSubject.next(data)\r\n                    returnSubject.unsubscribe();\r\n                }\r\n            },error =>{\r\n                res.status='error';res.result=error;\r\n                returnSubject.next(res);\r\n                returnSubject.unsubscribe();\r\n            }\r\n            );\r\n            return returnSubject;\r\n     }\r\n\r\n\r\n\r\n\r\n\r\n      private getRequestOption() {\r\n        let headers: Headers = new Headers({ 'Content-type': 'application/json', 'Authorization': this.authService.getAuth().token })\r\n        return new RequestOptions({ headers: headers });\r\n    }\r\n   \r\n}\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/pages/AccountVoucher/components/party-reconciliation/party-reconciliation.service.ts","import { Component, ViewChild } from '@angular/core';\r\nimport { TransactionService } from \"../../../../common/Transaction Components/transaction.service\";\r\nimport { PREFIX } from \"../../../../common/interfaces/Prefix.interface\";\r\nimport { VoucherTypeEnum } from \"../../../../common/interfaces/TrnMain\";\r\nimport { TrnMain } from \"../../../../common/interfaces/TrnMain\";\r\nimport { MasterRepo } from \"../../../../common/repositories/masterRepo.service\";\r\nimport { SettingService } from \"../../../../common/services/setting.service\";\r\nimport { SpinnerService } from \"../../../../common/services/spinner/spinner.service\";\r\nimport { AlertService } from \"../../../../common/services/alert/alert.service\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { TrnTranVoucherEntryComponent } from \"../../../../common/Transaction Components/trntran-voucher-entry.component\";\r\n\r\n@Component({\r\n  selector: 'payment-single',\r\n  template: require('./payment-single.component.html'),\r\n  providers: [TransactionService],\r\n  styles: [require('../../../modal-style.css')]\r\n})\r\n\r\nexport class PaymentSingleComponent {\r\n  TrnMainObj: TrnMain = <TrnMain>{};\r\n  voucherType: VoucherTypeEnum = VoucherTypeEnum.SinglePayment;\r\n  prefix: PREFIX = <PREFIX>{};\r\n  @ViewChild(\"trnmainentry\") trnmainentry: TrnTranVoucherEntryComponent;\r\n\r\n\r\n\r\n  constructor(\r\n    private masterService: MasterRepo,\r\n    public _trnMainService: TransactionService,\r\n    private setting: SettingService,\r\n    private _loadingSerive: SpinnerService,\r\n    private _alertService: AlertService,\r\n    private _activatedRoute: ActivatedRoute\r\n  ) {\r\n    this.TrnMainObj = this._trnMainService.TrnMainObj;\r\n    this._trnMainService.initialFormLoad(65);\r\n  }\r\n\r\n  ngOnInit() {\r\n    if (this._activatedRoute.snapshot.params['from']) {\r\n      let VCHR = this._activatedRoute.snapshot.params['voucherNumber']\r\n      let params = []\r\n      params = VCHR.split('-')\r\n      this._loadingSerive.show(\"Loading Invoice\")\r\n      this.masterService.LoadTransaction(VCHR, params[1], params[2]).subscribe((res) => {\r\n        if (res.status == \"ok\") {\r\n          this._loadingSerive.hide()\r\n          this._trnMainService.TrnMainObj = res.result;\r\n          this._trnMainService.TrnMainObj.VoucherType = 65;\r\n          this._trnMainService.pageHeading = \"Single Voucher\";\r\n          this._trnMainService.TrnMainObj.VoucherPrefix = \"SV\";\r\n          this._trnMainService.TrnMainObj.Mode = \"VIEW\";\r\n        }\r\n      }, err => {\r\n        this._loadingSerive.hide()\r\n        this._alertService.error(err)\r\n      })\r\n\r\n    } else {\r\n      this.TrnMainObj.Mode = \"NEW\";\r\n      this.masterService.ShowMore = true;\r\n    }\r\n  }\r\n\r\n  prefixChanged(pref: any) {\r\n    try {\r\n      this._trnMainService.prefix = pref;\r\n      this.prefix = pref;\r\n      if (this.TrnMainObj.Mode == \"NEW\") {\r\n        if (\r\n          this.TrnMainObj.DIVISION == \"\" ||\r\n          this.TrnMainObj.DIVISION == null\r\n        ) {\r\n          this.TrnMainObj.DIVISION = this.setting.appSetting.DefaultDivision;\r\n        }\r\n        this.masterService.getVoucherNo(this.TrnMainObj).subscribe(res => {\r\n          if (res.status == \"ok\") {\r\n            let TMain = <TrnMain>res.result;\r\n            this.TrnMainObj.VCHRNO = TMain.VCHRNO.substr(\r\n              2,\r\n              TMain.VCHRNO.length - 2\r\n            );\r\n            this.TrnMainObj.CHALANNO = TMain.CHALANNO;\r\n          } else {\r\n            alert(\"Failed to retrieve VoucherNo\");\r\n          }\r\n        });\r\n      }\r\n    } catch (ex) {\r\n    }\r\n  }\r\n\r\n  BillTrack() {\r\n    this.trnmainentry.BillTrack()\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/pages/AccountVoucher/components/payment-single/payment-single.component.ts","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({ name: 'searchData', pure: false })\r\n\r\nexport class SearchPipe implements PipeTransform {\r\n  transform(data, query: string, option: string): any {\r\n    if (data) {\r\n      if (query) {\r\n        if(option == ''){\r\n          return data.filter(item => {\r\n            const searchedQuery = query.replace(/[^A-Z0-9]/ig, '').toLowerCase();\r\n            const oldvchrno = (item.old_vchrno) ? (item.old_vchrno).replace(/[^A-Z0-9]/ig, '').toLowerCase() : '';\r\n            const name = (item.BUDGET_NAME) ? (item.BUDGET_NAME).replace(/[^A-Z0-9]/ig, '').toLowerCase() : '';\r\n            const fromdate = (item.FROM_DATE) ? (item.FROM_DATE).replace(/[^A-Z0-9]/ig, '').toLowerCase() : '';\r\n            const createdon = (item.CREATED_ON) ? (item.CREATED_ON).replace(/[^A-Z0-9]/ig, '').toLowerCase() : '';\r\n            const updatedon = (item.UPDATED_ON) ? (item.UPDATED_ON).replace(/[^A-Z0-9]/ig, '').toLowerCase() : '';\r\n            const status = (item.STATUS) ? (item.STATUS).replace(/[^A-Z0-9]/ig, '').toLowerCase() : '';\r\n            if (\r\n              oldvchrno.indexOf(searchedQuery) !== -1\r\n            ) {\r\n              return item;\r\n            }else if (\r\n              name.indexOf(searchedQuery) !== -1\r\n            ) {\r\n              return item;\r\n            }else if (\r\n              fromdate.indexOf(searchedQuery) !== -1\r\n            ) {\r\n              return item;\r\n            }else if (\r\n              createdon.indexOf(searchedQuery) !== -1\r\n            ) {\r\n              return item;\r\n            }else if (\r\n              updatedon.indexOf(searchedQuery) !== -1\r\n            ) {\r\n              return item;\r\n            }else if (\r\n              status.indexOf(searchedQuery) !== -1\r\n            ) {\r\n              return item;\r\n            }\r\n          });\r\n\r\n        }else if(option == 'ACCODE'){\r\n          return data.filter(item => {\r\n            const searchedQuery = query.replace(/[^A-Z0-9]/ig, '').toLowerCase();\r\n            const accode = (item.ACCODE) ? (item.ACCODE).replace(/[^A-Z0-9]/ig, '').toLowerCase() : '';\r\n            if (\r\n              accode.indexOf(searchedQuery) !== -1\r\n            ) {\r\n              return item;\r\n            }\r\n          });\r\n\r\n        }else if(option == 'ACNAME'){\r\n          return data.filter(item => {\r\n            const searchedQuery = query.replace(/[^A-Z0-9]/ig, '').toLowerCase();\r\n            const acname = (item.ACNAME) ? (item.ACNAME).replace(/[^A-Z0-9]/ig, '').toLowerCase() : '';\r\n            if (\r\n              acname.indexOf(searchedQuery) !== -1\r\n            ) {\r\n              return item;\r\n            }\r\n          });         \r\n\r\n        }\r\n      \r\n      } else {\r\n        return data;\r\n      }\r\n    }\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/pages/AccountVoucher/components/voucher-renumbering/search.pipe.ts","import { MasterRepo } from './../../../../common/repositories/masterRepo.service';\r\n\r\nimport { Component } from '@angular/core';\r\nimport { AdditionalCostService } from \"./addtionalCost.service\";\r\nimport { IMPORT_DETAILS_PROD, TrnMain } from \"../../../../common/interfaces/TrnMain\";\r\nimport { FormBuilder, FormControl, FormArray, Validators, FormGroup } from \"@angular/forms\";\r\nimport { TransactionService } from '../../../../common/Transaction Components/transaction.service';\r\nimport { AlertService } from '../../../../common/services/alert/alert.service';\r\n\r\n@Component({\r\n  selector: 'ImportDocumentDetailsComponent',\r\n  template: require('./ImportDocumentDetail.component.html'),\r\n  styles: [require('../../../modal-style.css'), require('../../../Style.css'), require('../../../../common/Transaction Components/halfcolumn.css')],\r\n  providers: []\r\n\r\n})\r\nexport class ImportDocumentDetailsComponent {\r\n  TrnMainObj: TrnMain\r\n  form: FormGroup;\r\n  header: any[] = [];\r\n  importrowindex: number = 0;\r\n  constructor(public _addionalcostService: AdditionalCostService,\r\n    private fb: FormBuilder, private masterService: MasterRepo,\r\n    public _additionalCostService: AdditionalCostService,\r\n    private _transactionService: TransactionService,\r\n    private alertService: AlertService) {\r\n\r\n  }\r\n  ngAfterViewInit() {\r\n\r\n  }\r\n  addRow() {\r\n    try {\r\n      var newRow = <IMPORT_DETAILS_PROD>{};\r\n      this._addionalcostService.IMPORTDETAILS.prodList.push(newRow);\r\n    } catch (ex) {\r\n      //console.log(ex);\r\n      alert(ex);\r\n    }\r\n  }\r\n  activeIndex: number;\r\n  ClickTableRow(index) {\r\n    //console.log(\"ClickRowIndex\", index);\r\n    this.activeIndex = index;\r\n  }\r\n  rowClick(index) {\r\n\r\n    this.importrowindex = index;\r\n  }\r\n  onChangeNonTaxable() {\r\n\r\n    this.onChange();\r\n  }\r\n  onChangeVAT() {\r\n    this.onChange();\r\n  }\r\n  onChangeTaxable() {\r\n\r\n    this.onChange();\r\n  }\r\n  onChange() {\r\n    this.RecalculateImportDetails();\r\n    this.RecalculateProdValue();\r\n  }\r\n  RecalculateProdValue() {\r\n\r\n    this._addionalcostService.IMPORTDETAILS.prodList[this.activeIndex].NETAMOUNT\r\n      = this._addionalcostService.IMPORTDETAILS.prodList[this.activeIndex].TAXABLE\r\n      + this._addionalcostService.IMPORTDETAILS.prodList[this.activeIndex].NONTAXABLE\r\n      + this._addionalcostService.IMPORTDETAILS.prodList[this.activeIndex].VAT\r\n  }\r\n  nextRow() {\r\n    this.addRow();\r\n    this.masterService.focusAnyControl('importNetmant' + this.activeIndex + 1)\r\n  }\r\n  RecalculateImportDetails() {\r\n    try {\r\n      if (this._addionalcostService.IMPORTDETAILS && this._addionalcostService.IMPORTDETAILS.prodList.length) {\r\n\r\n        this._addionalcostService.IMPORTDETAILS.TOTALQTY = 0\r\n        this._addionalcostService.IMPORTDETAILS.TOTALTAXABLE = 0;\r\n        this._addionalcostService.IMPORTDETAILS.TOTALNONTAXABLE = 0\r\n        this._addionalcostService.IMPORTDETAILS.TOTALVAT = 0;\r\n        this._addionalcostService.IMPORTDETAILS.NETAMOUNT = 0;\r\n        this._addionalcostService.IMPORTDETAILS.prodList.forEach(x => {\r\n          //   x.NETAMOUNT = this._trnMainService.nullToZeroConverter(x.NONTAXABLE) + this._trnMainService.nullToZeroConverter(x.TAXABLE) + this._trnMainService.nullToZeroConverter(x.VAT);\r\n          this._addionalcostService.IMPORTDETAILS.TOTALQTY = this._transactionService.nullToZeroConverter(this._addionalcostService.IMPORTDETAILS.TOTALQTY) + this._transactionService.nullToZeroConverter(x.QUANTITY);\r\n          this._addionalcostService.IMPORTDETAILS.TOTALTAXABLE = this._transactionService.nullToZeroConverter(this._addionalcostService.IMPORTDETAILS.TOTALTAXABLE) + this._transactionService.nullToZeroConverter(x.TAXABLE);\r\n          this._addionalcostService.IMPORTDETAILS.TOTALNONTAXABLE = this._transactionService.nullToZeroConverter(this._addionalcostService.IMPORTDETAILS.TOTALNONTAXABLE) + this._transactionService.nullToZeroConverter(x.NONTAXABLE);\r\n          this._addionalcostService.IMPORTDETAILS.TOTALVAT = this._transactionService.nullToZeroConverter(this._addionalcostService.IMPORTDETAILS.TOTALVAT) + this._transactionService.nullToZeroConverter(x.VAT);\r\n          this._addionalcostService.IMPORTDETAILS.NETAMOUNT = this._transactionService.nullToZeroConverter(this._addionalcostService.IMPORTDETAILS.NETAMOUNT) + this._transactionService.nullToZeroConverter(x.NETAMOUNT);\r\n        })\r\n      }\r\n\r\n    } catch (error) {\r\n      this.alertService.error('Error in import details calculation: ' + error);\r\n    }\r\n\r\n  }\r\n  ChangeDocumentNo() {\r\n    this.masterService.importDocumentDetailsObj.PPNO = this._addionalcostService.IMPORTDETAILS.DOCUMENTNO;\r\n  }\r\n  ChangeLCNo() {\r\n    this.masterService.importDocumentDetailsObj.LCNO = this._addionalcostService.IMPORTDETAILS.LCNUM;\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/pages/Purchases/components/AdditionalCost/ImportDocumentDetails.component.ts","import { MasterRepo } from './../../../../common/repositories/masterRepo.service';\r\nimport { Component, ViewChild, HostListener } from '@angular/core';\r\nimport { AdditionalCostService, Cost, prodCost } from \"./addtionalCost.service\";\r\nimport { TrnMain, Trntran } from \"../../../../common/interfaces/TrnMain\";\r\nimport { FormBuilder, FormControl, FormArray, Validators, FormGroup } from \"@angular/forms\";\r\nimport { TAcList } from \"../../../../common/interfaces/Account.interface\";\r\nimport { TransactionService } from '../../../../common/Transaction Components/transaction.service';\r\nimport { GenericPopUpComponent, GenericPopUpSettings } from '../../../../common/popupLists/generic-grid/generic-popup-grid.component';\r\nimport { ConsolidatedTrialBalanceReport } from '../../../ReportDialogs/Consolidated-Trial-Report/consolidated-trial-balance-report.component';\r\nimport { AuthService } from '../../../../common/services/permission';\r\nimport { MasterAdditionalComponent } from './masterPageAdditional.component';\r\n\r\n@Component({\r\n    selector: 'additionalCost',\r\n    template: require('./additionalCost.component.html'),\r\n    styles: [require('../../../modal-style.css'), require('../../../Style.css'), require('../../../../common/Transaction Components/halfcolumn.css')],\r\n    providers: []\r\n\r\n})\r\nexport class additionalCostDetail {\r\n    TrnMainObj: TrnMain\r\n    form: FormGroup;\r\n    majorParentAcList: any[] = [];\r\n    costdata: any[] = [];\r\n    TrnProdObj: any;\r\n    allList: TAcList[] = [];\r\n    private _selectedProd: any; // this is for the product selection in drop down\r\n    GcostMode: any;\r\n    allowRowAdd: boolean = false;\r\n    public get selectedProd(): any {\r\n        return this._selectedProd;\r\n    }\r\n    public set selectedProd(value: any) {\r\n\r\n        this._selectedProd = value;\r\n\r\n    }\r\n    PI = true;\r\n    PIList: any[] = [];\r\n    PIADD = true;\r\n    qty = true;\r\n    // formdetail:any[];\r\n    userSetting: any;\r\n\r\n    @ViewChild(\"genericGridACParty\") genericGridACParty: GenericPopUpComponent;\r\n    gridACListPartyPopupSettings: GenericPopUpSettings = new GenericPopUpSettings();\r\n    @ViewChild(\"genericGridCreditACListParty\") genericGridCreditACListParty: GenericPopUpComponent;\r\n    gridCreditACListPartyPopupSettings: GenericPopUpSettings = new GenericPopUpSettings();\r\n    @ViewChild(\"genericGridItem\") genericGridItem: GenericPopUpComponent;\r\n    gridItemPopupSettings: GenericPopUpSettings = new GenericPopUpSettings();\r\n    @ViewChild(\"genericGridBatch\") genericGridBatch: GenericPopUpComponent;\r\n    gridBatchPopupSettings: GenericPopUpSettings = new GenericPopUpSettings();\r\n\r\n    constructor(\r\n        public _addionalcostService: AdditionalCostService,\r\n        private fb: FormBuilder,\r\n        private masterService: MasterRepo,\r\n        private _transactionService: TransactionService,\r\n        public authservice: AuthService,\r\n    ) {\r\n        this._transactionService.initialFormLoad(66);\r\n\r\n\r\n        this.TrnMainObj = _addionalcostService.TrnMainObj;\r\n        this.form = fb.group({\r\n            CREDITEDAC: ['', Validators.required],\r\n            AdditionalPurchaseAc: ['', Validators.required],\r\n            AMOUNT: ['', Validators.required],\r\n            REMARKS: [''],\r\n            MCODE: [''],\r\n            BYQUANTITY: [''],\r\n            DESCA:[''],\r\n            BATCH:[''],\r\n            BATCHID: [''],\r\n            COSTING:['']\r\n        });\r\n        // this.masterService.getpartyListTree()\r\n        //     .subscribe(data => {\r\n        //         let l = data\r\n        //         this.majorParentAcList = l;\r\n        //     });\r\n\r\n        // this.masterService.getAccount('').subscribe(data => {\r\n        //     this.allList = data;\r\n        // }\r\n\r\n        // )\r\n        this.PI = false;\r\n        this.PIADD = false;\r\n        this.qty = false;\r\n        this.IndividualPI(false);\r\n        this.masterService.focusAnyControl(\"AdditionalCostAc_\");\r\n        // this.form.get('MCODE').disable();\r\n        // this._transactionService.TrnMainObj.TrntranList.splice(-1);\r\n        this.byQuantity(\"Amount\");\r\n        this._transactionService.DrillMode = \"New\";\r\n        this.userSetting = authservice.getSetting();\r\n    }\r\n\r\n\r\n\r\n    ngOnInit() {\r\n      \r\n        this.PIList = this._addionalcostService.addtionalCostList;\r\n        // ////console.log(\"PIList\", this.PIList)\r\n        //console.log(\"mode\",this._transactionService.TrnMainObj.Mode)\r\n        if(this._transactionService.TrnMainObj.Mode == 'NEW'){\r\n            this.PI=false;\r\n            this.masterService.costType=\"GroupCost\";\r\n            this.masterService.addcosting='COSTING';\r\n            this.masterService.focusAnyControl(\"AdditionalCostAc_\");\r\n        }\r\n    }\r\n    ValuePI: any;\r\n    ItemObj:any=<any>{}\r\n    BatchList:any[]=[];\r\n    passValue() {\r\n        this.BatchList = [];\r\n       \r\n        this.ValuePI = 1;\r\n        this.form.patchValue({\r\n            MCODE:this.ItemObj.mcode,\r\n            \r\n           })\r\n    for(let i of this._addionalcostService.addtionalCostList){\r\n        if(i.menucode == this.ItemObj.mcode){\r\n            this.BatchList.push(i);\r\n        }\r\n    }\r\n        //console.log(\"valueObj1\", this.BatchList)\r\n    }\r\n    onAddClick() {\r\n        this.form.patchValue({\r\n            MCODE:this.masterService.mcode,\r\n            DESCA:this.masterService.desca,\r\n            BATCH:this.masterService.batch,\r\n            BATCHID:this.masterService.batchid\r\n        })\r\n        // console.log(\"Hereby\",this.form.value)\r\n        // this._addionalcostService.costdetail = [];\r\n\r\n        // this.masterService.addcosting = \"true\";\r\n\r\n        if(this.PI == true && (this.form.controls.MCODE.value == \"\" || !this.form.controls.MCODE.value)){\r\n            alert(\"Enter Item for Individual item cost type !\");\r\n            return;\r\n        }\r\n        \r\n        if(this.PI == true && (this.form.controls.BATCH.value == \"\" || !this.form.controls.BATCH.value)){\r\n            alert(\"Enter batch for Individual item cost type !\");\r\n            return;\r\n        }\r\n        if(this.PI == false && (this.GcostMode == '' || !this.GcostMode)){\r\n            alert(\"Enter Group cost mode.\");\r\n            return;\r\n        }\r\n        if( this.PI == true && (this.form.controls.CREDITEDAC.value == \"\" || !this.form.controls.CREDITEDAC.value)){\r\n            alert(\"Enter Credited Account for Individual item cost type !\");\r\n            return;\r\n        }\r\n       \r\n        if (this.masterService.AdditionalAMOUNT == \"\" || !this.masterService.AdditionalAMOUNT) {\r\n            alert(\"Amount is required\");\r\n            return;\r\n        }\r\n\r\n\r\n      \r\n        var desca = '';\r\n        // console.log('addtionalCostList', this._addionalcostService.addtionalCostList, this._addionalcostService.addtionalCostList)\r\n        for(let i of this._addionalcostService.addtionalCostList){\r\n            if(i.mcode == this.form.value.MCODE){\r\n                desca = i.desca\r\n            }\r\n        }\r\n        // if (this.PI == false) {\r\n        //     for (const iterator of this._addionalcostService.costList) {\r\n        //         if (iterator.amount == \"\" || iterator.amount == null) {\r\n        //             alert(\"Amount is required\");\r\n        //             return;\r\n        //         }\r\n        //     }\r\n        // }\r\n       \r\n        if(this.PI == false){\r\n            for(const iterator of this._addionalcostService.costList){\r\n                if((iterator.costAc.ACNAME == this.form.value.AdditionalPurchaseAc.ACNAME && (iterator.CostingNonCosting == 'COSTING' || iterator.CostingNonCosting == 'true'))\r\n                || (iterator.costAc.ACNAME == this.form.value.AdditionalPurchaseAc.ACNAME && (iterator.CostingNonCosting == 'NONCOSTING' || iterator.CostingNonCosting == 'false') && this.masterService.addcosting == 'COSTING')){\r\n                    alert(\"Duplicate Additional Cost A/C !\");\r\n                    return;\r\n                }\r\n            }\r\n        }else if(this.PI == true){\r\n            for(const iterator of this._addionalcostService.costList){\r\n                if(iterator.costAc.ACNAME == this.form.value.AdditionalPurchaseAc.ACNAME \r\n                    && iterator.mcode ==  this.form.value.MCODE\r\n                    && iterator.batch ==  this.form.value.BATCH){\r\n                    alert(\"Duplicate Additional Cost A/C and Item!\");\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n        if(this.masterService.AdditionalPurchaseAcObj ==  null || this.masterService.AdditionalPurchaseAcObj == \"\" || this.masterService.AdditionalPurchaseAcObj == undefined){\r\n            alert(\"Please enter Additional cost A/C\");\r\n            return;\r\n        }\r\n\r\n        if(this.masterService.AdditionalPurchaseCreditAcObj == null || this.masterService.AdditionalPurchaseCreditAcObj == \"\" || this.masterService.AdditionalPurchaseCreditAcObj == undefined){\r\n            alert(\"Please enter credited A/C !\");\r\n            return;\r\n        }\r\n        //console.log(\"Hereby1\",this.form.value.AdditionalPurchaseAc)\r\n        let res = <Cost>{}\r\n        res.creditAc = this.form.value.CREDITEDAC;\r\n        res.remarks = this.masterService.AdditionalREMARKS;\r\n        res.costAc = this.form.value.AdditionalPurchaseAc;\r\n        res.amount = this.masterService.AdditionalAMOUNT;\r\n        res.mcode = this.form.value.MCODE\r\n        res.desca = desca;\r\n        res.batch = this.form.value.BATCH;\r\n        res.batchid = this.form.value.BATCHID;\r\n        res.CostingNonCosting = this.masterService.addcosting;\r\n        if(this.PI==false){\r\n            res.CostingType = \"Group Cost\";\r\n        }\r\n        else{\r\n            res.CostingType = \"Ind Cost\"\r\n        }\r\n\r\n        // if (this.PI == false) {\r\n        //     res.CostingNonCosting = 'COSTING';\r\n        // }\r\n        // else {\r\n        //     res.CostingNonCosting ='NONCOSTING';\r\n        // }\r\n\r\n        // let checked_costValue = document.querySelector('input[value = \"true\"]:checked');\r\n        // if (checked_costValue != null) {  //Test if something was checked\r\n        //     res.CostingNonCosting = true;\r\n            \r\n            \r\n        // } else {\r\n        //     res.CostingNonCosting = false\r\n            \r\n        // }\r\n        \r\n        \r\n        // ////console.log(\"checking group cost\", this.form.value.BYQUANTITY)\r\n        // if(this.form.value.BYQUANTITY == true){\r\n           \r\n        //     res.GCOSTMODE = \"On Qty\";\r\n        // }\r\n        // else if(this.form.value.BYQUANTITY == false){\r\n        //     res.GCOSTMODE = \"On Amount\";\r\n        // }\r\n        // else{\r\n        //     res.GCOSTMODE = \"\";\r\n        // }\r\n        if(this.GcostMode == \"Qty\"){\r\n            res.GCOSTMODE = \"On Qty\";\r\n            this.byQuantity(\"Qty\");\r\n        }else if(this.GcostMode == \"Amount\"){\r\n            res.GCOSTMODE = \"On Amount\";\r\n            this.byQuantity(\"Amount\");\r\n        }else{\r\n            res.GCOSTMODE = \"\";\r\n        }\r\n\r\n        res.byQuanty = this.form.value.BYQUANTITY;\r\n        //console.log(\"Hereby2\",this.form.value.AdditionalPurchaseAc)\r\n     //console.log(\"res$$\",res,this.form.value.AdditionalPurchaseAc)\r\n        this._addionalcostService.onAddCost(res);\r\n        // this.AddDebit();\r\n        // this.AddCredit();\r\n        this.EmptyAddCost();\r\n        if (this.ValuePI == 1)\r\n            this.PIADD = true;\r\n\r\n        //    this.form.patchValue({\r\n        //     AdditionalPurchaseAc:''\r\n        //    })\r\n        //    this.masterService.AdditionalPurchaseAcObj = ''\r\n        //    this.masterService.AdditionalPurchaseCreditAcObj = ''\r\n        this.masterService.mcode= '';\r\n        this.masterService.desca='';\r\n        this.masterService.batch='';\r\n        this.masterService.batchid='';\r\n        if(this.PI == true){\r\n            this.masterService.focusAnyControl(\"_item\");\r\n        }else{\r\n            this.masterService.focusAnyControl(\"AdditionalCostAc_\");\r\n        }\r\n           this.BatchList = [];\r\n        //    this.ItemObj = {};\r\n        // ////console.log(\"ChecKDATAA\", this.masterService.AdditionalCostTrnTran)\r\n    }\r\n    // AddDebit() {\r\n\r\n    //     let x: Trntran = <Trntran>{};\r\n       \r\n    //     x.A_ACID = this.form.value.AdditionalPurchaseAc.ACID;\r\n    //     x.AccountItem = this.form.value.AdditionalPurchaseAc;\r\n    //     x.DRAMNT = this.form.value.AMOUNT;\r\n    //     x.CRAMNT = 0;\r\n    //     x.PartyDetails = [];\r\n    //     x.ROWMODE = \"new\";\r\n    //     x.inputMode = true;\r\n    //     x.acitem = this.form.value.AdditionalPurchaseAc;\r\n    //     this.masterService.AdditionalCostTrnTran.push(x);\r\n    // }\r\n\r\n    // AddCredit() {\r\n\r\n    //     let y: Trntran = <Trntran>{};\r\n        \r\n    //     y.A_ACID = this.form.value.AdditionalPurchaseAc.ACID;\r\n    //     y.AccountItem = this.form.value.CREDITEDAC;\r\n    //     y.DRAMNT = 0;\r\n    //     y.CRAMNT = this.form.value.AMOUNT;\r\n    //     y.PartyDetails = [];\r\n    //     y.ROWMODE = \"new\";\r\n    //     y.inputMode = true;\r\n    //     y.acitem = this.form.value.CREDITEDAC;\r\n    //     this.masterService.AdditionalCostTrnTran.push(y);\r\n\r\n    // }\r\n    EmptyAddCost() {\r\n        this.form.patchValue({\r\n            // CREDITEDAC: \"\",\r\n            // AdditionalPurchaseAc: \"\",\r\n            AMOUNT: \"\",\r\n            // REMARKS: \"\",\r\n            MCODE: \"\",\r\n            // BYQUANTITY:\"\"\r\n        })\r\n        this.masterService.AdditionalAMOUNT=\"\";\r\n        if(this.PI == false){ // empty additionalcost a/c on  groupcost radio button selection\r\n            this.masterService.AdditionalPurchaseAcObj = '';\r\n            this.masterService.AdditionalPurchaseCreditAcObj = '';\r\n            this.masterService.AdditionalREMARKS=\"\";\r\n            this.form.patchValue({\r\n                REMARKS: \"\"\r\n            })\r\n        }\r\n    }\r\n    checkRow(index){\r\n        // //console.log(\"ChecKVale\",index)\r\n    }\r\n    TableRowDoubleClickEvent(l: any, index) {\r\n        // //console.log(\"@data to be removed\", l, index);\r\n\r\n        if(!l.CostingNonCosting){\r\n            this.masterService.addcosting = 'COSTING';\r\n        }else{\r\n            if (l.CostingNonCosting =='COSTING') {\r\n                this.masterService.addcosting = 'COSTING';\r\n            }\r\n            else {\r\n                this.masterService.addcosting = 'NONCOSTING';\r\n                \r\n            }\r\n        }\r\n        this.allowRowAdd = false;\r\n        if(l.CostingType == \"Group Cost\"){\r\n            this.masterService.costType=\"GroupCost\";\r\n            this.IndividualPI(false);\r\n        }else if(l.CostingType == \"Ind Cost\"){\r\n            this.masterService.costType=\"IndividualCost\";\r\n            this.IndividualPI(true);\r\n        }\r\n\r\n        if(l.GCOSTMODE == \"On Qty\"){\r\n            ////console.log(\"inside on qty\");\r\n            this.GcostMode = 'Qty';\r\n            this.byQuantity('Qty');\r\n        }else if(l.GCOSTMODE == \"On Amount\"){\r\n            this.GcostMode = 'Amount';\r\n            this.byQuantity('Amount');\r\n\r\n        }else{\r\n            this.GcostMode = '';\r\n            this.form.value.BYQUANTITY = null;\r\n        }\r\n\r\n        this.form.patchValue({ AdditionalPurchaseAc: l.costAc, CREDITEDAC: l.creditAc, AMOUNT: l.amount, REMARKS: l.remarks, MCODE: l.mcode });\r\n        this.masterService.AdditionalPurchaseAcObj = l.costAc.ACNAME;\r\n        this.masterService.AdditionalPurchaseCreditAcObj = l.creditAc.ACNAME;\r\n        // //console.log(\"AdditionalPurchaseAcObj\",this.masterService.AdditionalPurchaseAcObj)\r\n        // //console.log(\"AdditionalPurchaseCreditAcObj\",this.masterService.AdditionalPurchaseCreditAcObj)\r\n\r\n        this._addionalcostService.costList.splice(index,1);\r\n        // this._addionalcostService.onDeleteCost(l);\r\n        // this._transactionService.TrnMainObj.TrntranList.splice(index,1)\r\n        \r\n        this._transactionService.TrnMainObj.TrntranList = [];\r\n        this._addionalcostService.addCostTotAmount = this._addionalcostService.addCostTotAmount - l.amount;\r\n        if(this._addionalcostService.header)\r\n        this._addionalcostService.header.splice(this._addionalcostService.header.findIndex(x=>x.MAPPINGNAME==l.costAc.ACNAME),1)\r\n        this._addionalcostService.DeleteDynamicColumn(l.costAc.ACNAME)\r\n       \r\n        \r\n    }\r\n\r\n    public generateCostDetails() {\r\n        this._addionalcostService.generateCostDetails();\r\n    }\r\n\r\n    IndividualPI(value) {\r\n        this.PI = value\r\n        if(this.PI==false){\r\n            this.form.get('MCODE').disable();\r\n            this.form.get('BATCH').disable();\r\n            this.GcostMode =\"Amount\";\r\n            this.form.value.BYQUANTITY = true;\r\n            this.masterService.focusAnyControl(\"AdditionalCostAc_\");\r\n        }\r\n        else if(this.PI == true){\r\n            this.form.get('MCODE').enable();\r\n            this.form.get('BATCH').enable();\r\n            this.form.value.BYQUANTITY = null;\r\n            this.GcostMode = \"\";\r\n            // document.getElementById(\"_item\").focus();\r\n            this.masterService.focusAnyControl(\"_item\");\r\n        }\r\n        this.form.patchValue({ MCODE: \"\",BATCH : value.BATCH });\r\n        this.ItemObj = value.desca;\r\n        // this.PIADD=true;\r\n\r\n    }\r\n    byQuantity(value) {\r\n        // ////console.log(\"CheckForm1\",value)\r\n        if (value == \"Qty\") {\r\n            this.form.value.BYQUANTITY = true;\r\n            this.qty = true;\r\n        }\r\n        else if(value == \"Amount\") {\r\n            this.form.value.BYQUANTITY = false;\r\n            this.qty = false;\r\n        }\r\n        else{\r\n            this.form.value.BYQUANTITY = null;\r\n        }\r\n        // ////console.log(\"CheckForm\",this.form.value.BYQUANTITY)\r\n    }\r\n    acTag: any;\r\n\r\n    TabAcBox(name) {\r\n        //    this.genericGridRefBill.show();\r\n        var passingValue = '';\r\n        if(name == 'CreditAC'){\r\n            passingValue = 'AccountListAndSupplier'\r\n            this.gridCreditACListPartyPopupSettings = this.masterService.getGenericGridPopUpSettings(passingValue);\r\n            this.acTag = 'CreditAC'\r\n            this.genericGridCreditACListParty.show();\r\n        }\r\n        else if(name == 'AC'){\r\n            if(this.PI == true && (this.masterService.desca === undefined || this.masterService.desca === '' || this.masterService.desca === null)){\r\n                alert(\"Please select item first!\");\r\n                return;\r\n            }\r\n            passingValue = 'AccountLedgerList';\r\n            this.gridACListPartyPopupSettings = this.masterService.getGenericGridPopUpSettings(passingValue);\r\n            this.acTag = 'AC'\r\n            this.genericGridACParty.show();\r\n        }\r\n\r\n        \r\n\r\n    }\r\n\r\n    ACNameSelect_Additional(value, name) {\r\n        // alert(\"ree123\"+value+'A'+this.acTag)\r\n        //console.log(\"value\",value)\r\n        this.form.patchValue({ AdditionalPurchaseAc: value })\r\n            this.masterService.AdditionalPurchaseAcObj = value.ACNAME;\r\n            this.genericGridACParty.hide();\r\n            this.masterService.focusAnyControl(\"AmountsAD_\")\r\n            //console.log(\"reds\",value,this.form.value.AdditionalPurchaseAc)\r\n       \r\n\r\n\r\n    }\r\n    ACNameSelect_Credit(value, name) {\r\n      \r\n        // alert(\"ree333\"+value+'A'+this.acTag)\r\n        \r\n            this.form.patchValue({ CREDITEDAC: value })\r\n            this.masterService.AdditionalPurchaseCreditAcObj = value.ACNAME;\r\n            this.genericGridCreditACListParty.hide();\r\n            this.masterService.focusAnyControl(\"RemarksAD_\")\r\n            \r\n    }\r\n\r\n    @HostListener(\"document: keydown\", [\"$event\"])\r\n    updown($event: KeyboardEvent){\r\n        if($event.key == \"Enter\"){\r\n            $event.preventDefault();\r\n            \r\n            if(this.form.valid && this.allowRowAdd === true){\r\n                ////console.log(\"Enter pressed\")\r\n                // this.onAddClick();\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n    focusTrigger(){\r\n        this.allowRowAdd = true;\r\n    }\r\n\r\n    ItemSelect() {\r\n        if(this.masterService.RefObj.Refno === undefined || this.masterService.RefObj.Refno === '' || this.masterService.RefObj.Refno === null){\r\n            alert(\"Please select ref. PI voucher first.\");\r\n            return;\r\n        }\r\n        let _voucherno = this.masterService.RefObj.Refno;\r\n        let vchrno = _voucherno.replace(\"/\", \"ZZ\")\r\n\r\n        this.gridItemPopupSettings = {\r\n            title: \"Item List \",\r\n            apiEndpoints: `/getItemPagedListPIWise/${vchrno}/mcode`,\r\n            defaultFilterIndex: 0,\r\n            columns: [\r\n                {\r\n                    key: 'MCODE',\r\n                    title: 'Code',\r\n                    hidden: false,\r\n                    noSearch: false\r\n                },\r\n                {\r\n                    key: 'DESCRIPTION',\r\n                    title: 'Descritopnm',\r\n                    hidden: false,\r\n                    noSearch: false\r\n                }\r\n            ]\r\n        };\r\n        this.genericGridItem.show();\r\n    }\r\n\r\n    dblClickItemSelection(value) {\r\n        this.masterService.desca = value.DESCRIPTION;\r\n        this.masterService.mcode= value.MCODE;\r\n        this.masterService.batch = \"\";\r\n        this.masterService.batchid = \"\";\r\n        let _voucherno = this.masterService.RefObj.Refno;\r\n        this.masterService.getBatchOfItem(_voucherno, value.MCODE).subscribe(res => {\r\n            if (res.status == 'ok') {\r\n                //console.log(\"res\", res.result)\r\n                if (res.result && res.result.length == 1) {\r\n                    this.masterService.batch = res.result[0].BATCH;\r\n                    this.masterService.batchid = res.result[0].BATCHID;\r\n                    // if (this.masterService.AdditionalPurchaseAcObj === \"\" || this.masterService.AdditionalPurchaseAcObj === null || this.masterService.AdditionalPurchaseAcObj === undefined) {\r\n                        this.masterService.focusAnyControl(\"AdditionalCostAc_\");\r\n                    // } else {\r\n                    //     this.masterService.focusAnyControl(\"AmountsAD_\");\r\n                    // }\r\n                } else if (res.result && res.result.length > 1) {\r\n                    this.masterService.focusAnyControl(\"_batch\");\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    BatchSelect() {\r\n\r\n        if(this.masterService.batch != \"\"){\r\n            return;\r\n        }\r\n        if(this.masterService.RefObj.Refno === undefined || this.masterService.RefObj.Refno === '' || this.masterService.RefObj.Refno === null){\r\n            alert(\"Please select ref. PI voucher first.\");\r\n            return;\r\n        }\r\n        let _voucherno = this.masterService.RefObj.Refno;\r\n        let vchrno = _voucherno.replace(\"/\", \"ZZ\")\r\n        if(this.masterService.mcode === undefined || this.masterService.mcode === '' || this.masterService.mcode === null){\r\n            alert(\"Please select item first.\");\r\n            return;\r\n        }\r\n        let mcode = this.masterService.mcode;\r\n        //console.log(\"@@DISPLAY\",this.userSetting.DISPLAY)\r\n        if(this.userSetting.DISPLAY == 1){\r\n            this.gridBatchPopupSettings = {\r\n                title: \"Item List \",\r\n                apiEndpoints: `/getItemPagedListPIWise/${vchrno}/${mcode}`,\r\n                defaultFilterIndex: 0,\r\n                columns: [\r\n                    {\r\n                        key: 'BATCH',\r\n                        title: 'Batch',\r\n                        hidden: false,\r\n                        noSearch: false\r\n                    },\r\n                    {\r\n                        key: 'MfgDate',\r\n                        title: 'MfgDate',\r\n                        hidden: false,\r\n                        noSearch: false\r\n                    },\r\n                    {\r\n                        key: 'ExpDate',\r\n                        title: 'ExpDate',\r\n                        hidden: false,\r\n                        noSearch: false\r\n                    },\r\n                    {\r\n                        key: 'LANDINGCOST',\r\n                        title: 'Rate',\r\n                        hidden: false,\r\n                        noSearch: false\r\n                    },\r\n                    {\r\n                        key: 'MRP',\r\n                        title: 'Mrp',\r\n                        hidden: false,\r\n                        noSearch: false\r\n                    }\r\n                ]\r\n            };\r\n        }else{\r\n            this.gridBatchPopupSettings = {\r\n                title: \"Item List \",\r\n                apiEndpoints: `/getItemPagedListPIWise/${vchrno}/${mcode}`,\r\n                defaultFilterIndex: 0,\r\n                columns: [\r\n                    {\r\n                        key: 'BATCH',\r\n                        title: 'Batch',\r\n                        hidden: false,\r\n                        noSearch: false\r\n                    }\r\n                ]\r\n            };\r\n        }\r\n        \r\n        this.genericGridBatch.show();\r\n    }\r\n\r\n    dblClickBatchSelection(value) {\r\n        this.masterService.batch = value.BATCH;\r\n        this.masterService.batchid = value.BATCHID;\r\n        // if (this.masterService.AdditionalPurchaseAcObj === \"\" || this.masterService.AdditionalPurchaseAcObj === null || this.masterService.AdditionalPurchaseAcObj === undefined) {\r\n            this.masterService.focusAnyControl(\"AdditionalCostAc_\");\r\n        // } else {\r\n        //     this.masterService.focusAnyControl(\"AmountsAD_\");\r\n        // }\r\n    }\r\n\r\n    remarksEntered(){\r\n        if(this.PI == true){\r\n            this.onAddClick();\r\n        }\r\n    }\r\n\r\n    gcostEntered(){\r\n        if(this.PI == false){\r\n            this.onAddClick();\r\n        }\r\n    }\r\n    \r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/pages/Purchases/components/AdditionalCost/additionalCost.component.ts","import { MasterRepo } from './../../../../common/repositories/masterRepo.service';\r\n\r\nimport { Component } from '@angular/core';\r\nimport { AdditionalCostService } from \"./addtionalCost.service\";\r\nimport { TrnMain } from \"../../../../common/interfaces/TrnMain\";\r\nimport { FormBuilder, FormControl, FormArray, Validators, FormGroup } from \"@angular/forms\";\r\n\r\n@Component({\r\n    selector: 'costingDetail',\r\n    template: require('./costingDetail.component.html'),\r\n    styles: [require('../../../modal-style.css'), require('../../../Style.css'), require('../../../../common/Transaction Components/halfcolumn.css')],\r\n    providers: []\r\n\r\n})\r\nexport class CostingDetailComponent {\r\n    TrnMainObj: TrnMain\r\n    form: FormGroup;\r\n    header: any[] = [];\r\n\r\n    constructor(public _addionalcostService: AdditionalCostService, private fb: FormBuilder, private masterService: MasterRepo, public _additionalCostService: AdditionalCostService) {\r\n        this.TrnMainObj = _addionalcostService.TrnMainObj;\r\n        // ////console.log(\"headers===\" + JSON.stringify(_addionalcostService.header));\r\n        // ////console.log(\"additionalCost\", this._addionalcostService.addtionalCostList)\r\n        this.form = fb.group({\r\n            AdditionalPurchaseAc: [''],\r\n        });\r\n        this._additionalCostService.header = [{ TITLE: 'Item Code' }, { TITLE: 'Item Name' }, { TITLE: 'Batch' }, { TITLE: 'Qty' }, { TITLE: 'Amount' }]\r\n        this._additionalCostService.generateCostDetails();\r\n    }\r\n\r\n\r\n\r\n    selectAlignment(value:any){\r\n        ////console.log(\"#\",value)\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/pages/Purchases/components/AdditionalCost/costingDetail.component.ts","import { TransactionService } from './../../../../common/Transaction Components/transaction.service';\r\nimport { MasterRepo } from './../../../../common/repositories/masterRepo.service';\r\nimport { Component } from '@angular/core';\r\n// import { AdditionalCostService } from \"./addtionalCost.service\";\r\nimport { TrnMain } from \"../../../../common/interfaces/TrnMain\";\r\nimport { FormBuilder, FormControl, FormArray, Validators, FormGroup } from \"@angular/forms\";\r\nimport { AdditionalCostService } from \"./addtionalCost.service\";\r\n\r\n@Component({\r\n    selector: 'purchaseDetail',\r\n    template: require('./purchaseDetail.component.html'),\r\n    styles: [require('../../../modal-style.css'), require('../../../Style.css'), require('../../../../common/Transaction Components/halfcolumn.css')],\r\n    providers: []\r\n\r\n})\r\nexport class PurchaseDetailComponent {\r\n    TrnMainObj: TrnMain\r\n    // form:FormGroup;\r\n    TrnProdlist: any[] = [];\r\n    constructor(public transactionService: TransactionService, private fb: FormBuilder, private masterService: MasterRepo, public _additionalCostService: AdditionalCostService) {\r\n        this.TrnMainObj = this._additionalCostService.TrnMainObj;\r\n        this.TrnProdlist = (this.TrnMainObj.ProdList);\r\n    }\r\n\r\n    changeRate(value, index) {\r\n        this._additionalCostService.addtionalCostList[index].rate = value;\r\n        this._additionalCostService.addtionalCostList[index].amount = value * this._additionalCostService.addtionalCostList[index].quantity;\r\n        this._additionalCostService.addtionalCostList[index].nAmount = this._additionalCostService.addtionalCostList[index].amount * 1.13\r\n    }\r\n    EnterClickOnRate(i){\r\n        this.masterService.focusAnyControl('_AdditioanlCostRate'+(i+1))\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/pages/Purchases/components/AdditionalCost/purchaseDetail.component.ts","import { EventEmitter, Output } from '@angular/core';\r\nimport {Component,Input} from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'tab',\r\n    template: `\r\n        <p [hidden]=\"!show\">\r\n            <ng-content></ng-content>\r\n        </p>\r\n    `\r\n})\r\nexport class TabComponent {\r\n    @Input()tabTitle:string;\r\n    @Input() show:boolean;\r\n\r\n   // show:boolean = false;\r\n   \r\n}\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/pages/Purchases/components/AdditionalCost/tab.ts","import { AdditionalCostService } from './addtionalCost.service';\r\nimport { Component, ContentChildren, QueryList, AfterContentInit, Output, EventEmitter } from '@angular/core';\r\nimport { TabComponent } from './tab';\r\n\r\n@Component({\r\n    selector: 'tabs',\r\n    template: `\r\n       <ul class=\"tab-list\">\r\n           <li *ngFor=\"let tab of tabs\" [class.active]=\"selectedTab===tab\" (click)=\"onSelect(tab)\">\r\n               {{tab.tabTitle}}\r\n           </li>\r\n       </ul>\r\n       <ng-content></ng-content>\r\n    `,\r\n    styles: [`\r\n        .tab-list{\r\n            list-style:none;\r\n            overflow:hidden;\r\n            padding:0;\r\n            color: black;\r\n        }\r\n\r\n        .tab-list li{\r\n            cursor:pointer;\r\n            float:left;\r\n            width:170px;\r\n            height:30px;\r\n            line-height:30px;\r\n            text-align:center;\r\n            margin: 0 .2em 1px 0;\r\n    border: 1px solid #d6d6d6;\r\n    background-color: #f6f7f9;\r\n        border-top-left-radius: 3px;\r\n    border-top-right-radius: 3px;\r\n    border-bottom: 0px;\r\n        }\r\n\r\n        .tab-list li:hover{\r\n            background-color:#d6d6d6;\r\n        }\r\n        .tab-list li.active{\r\n            background-color:white;\r\n        }\r\n    `]\r\n})\r\nexport class TabsComponent implements AfterContentInit {\r\n\r\n    @ContentChildren(TabComponent)\r\n\r\n    tabs: QueryList<TabComponent>;\r\n\r\n    selectedTab: TabComponent;\r\n    constructor(private additionalcostService: AdditionalCostService) { }\r\n    ngAfterContentInit() {\r\n        this.select(this.tabs.first);\r\n    }\r\n\r\n    onSelect(tab) {\r\n        this.select(tab);\r\n    }\r\n\r\n    select(tab) {\r\n        this.tabs.forEach((item) => {\r\n            item.show = false;\r\n        });\r\n\r\n        this.selectedTab = tab;\r\n        this.selectedTab.show = true;\r\n        if (tab.tabTitle == \"Costing Detail\") {\r\n          if (this.additionalcostService.costList==null ||this.additionalcostService.costList.length==0 ) {\r\n                return;\r\n            }\r\n            else{\r\n            this.additionalcostService.generateCostDetails();\r\n            }\r\n        }\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/pages/Purchases/components/AdditionalCost/tabs.ts","import { MasterRepo } from '../../../../common/repositories/masterRepo.service';\r\nimport { Component, ViewChild, HostListener } from '@angular/core';\r\nimport { TrnMain, Trntran } from \"../../../../common/interfaces/TrnMain\";\r\nimport { FormBuilder, FormControl, FormArray, Validators, FormGroup } from \"@angular/forms\";\r\nimport { TAcList } from \"../../../../common/interfaces/Account.interface\";\r\nimport { TransactionService } from '../../../../common/Transaction Components/transaction.service';\r\nimport { GenericPopUpComponent, GenericPopUpSettings } from '../../../../common/popupLists/generic-grid/generic-popup-grid.component';\r\nimport { AuthService } from '../../../../common/services/permission';\r\nimport { AdditionalCostService,Cost, prodCost } from '../AdditionalCost/addtionalCost.service';\r\nimport { SpinnerService } from '../../../../common/services/spinner/spinner.service';\r\nimport * as moment from 'moment'\r\n@Component({\r\n    selector: 'newIndividualCost',\r\n    template: require('./newIndividualCost.component.html'),\r\n    styles: [require('../../../modal-style.css'), require('../../../Style.css'), require('../../../../common/Transaction Components/halfcolumn.css')],\r\n    providers: []\r\n\r\n})\r\nexport class newIndividualCostDetail {\r\n    TrnMainObj: TrnMain\r\n    form: FormGroup;\r\n    majorParentAcList: any[] = [];\r\n    costdata: any[] = [];\r\n    TrnProdObj: any;\r\n    allList: TAcList[] = [];\r\n    private _selectedProd: any; // this is for the product selection in drop down\r\n    GcostMode: any;\r\n    allowRowAdd: boolean = false;\r\n    public get selectedProd(): any {\r\n        return this._selectedProd;\r\n    }\r\n    public set selectedProd(value: any) {\r\n\r\n        this._selectedProd = value;\r\n\r\n    }\r\n    PI = true;\r\n    PIList: any[] = [];\r\n    PIADD = true;\r\n    qty = true;\r\n    // formdetail:any[];\r\n    userSetting: any;\r\n    TDSACCOUNTNAME:string;\r\n    REFSUPPLIERNAME:string;\r\n    NEWOBJ: prodCost = <prodCost>{}\r\n    NEW_IndCostList: prodCost[] = [];// to hold the list of ind amount \r\n    selectedIndex: number;\r\n\r\n    @ViewChild(\"genericGridACParty\") genericGridACParty: GenericPopUpComponent;\r\n    gridACListPartyPopupSettings: GenericPopUpSettings = new GenericPopUpSettings();\r\n    @ViewChild(\"genericGridCreditACListParty\") genericGridCreditACListParty: GenericPopUpComponent;\r\n    gridCreditACListPartyPopupSettings: GenericPopUpSettings = new GenericPopUpSettings();\r\n    @ViewChild(\"genericGridItem\") genericGridItem: GenericPopUpComponent;\r\n    gridItemPopupSettings: GenericPopUpSettings = new GenericPopUpSettings();\r\n    @ViewChild(\"genericGridBatch\") genericGridBatch: GenericPopUpComponent;\r\n    gridBatchPopupSettings: GenericPopUpSettings = new GenericPopUpSettings();\r\n    // @ViewChild(\"genericGridRefBill\") genericGridRefBill: GenericPopUpComponent;\r\n    // gridPopupSettingsForRefBill: GenericPopUpSettings = new GenericPopUpSettings();\r\n    @ViewChild(\"genericGridACList\") genericGridACList: GenericPopUpComponent;\r\n    gridACListPopupSettings: GenericPopUpSettings = new GenericPopUpSettings();\r\n    @ViewChild(\"genericGridSupplier\") genericGridSupplier: GenericPopUpComponent;\r\n    gridPopupSettingsForSupplier: GenericPopUpSettings = new GenericPopUpSettings();\r\n\r\n    @ViewChild(\"gridSubLedgerSettingListCr\")gridSubLedgerSettingListCr: GenericPopUpComponent;\r\n  gridSubLedgerSettingCr: GenericPopUpSettings = new GenericPopUpSettings();\r\n  @ViewChild(\"gridSubLedgerSettingListDr\")gridSubLedgerSettingListDr: GenericPopUpComponent;\r\n  gridSubLedgerSettingDr: GenericPopUpSettings = new GenericPopUpSettings();\r\n  @ViewChild(\"gridSubLedgerSettingListAc\")gridSubLedgerSettingListAc: GenericPopUpComponent;\r\n  gridSubLedgerSettingAc: GenericPopUpSettings = new GenericPopUpSettings();\r\n  @ViewChild(\"genericGridACPartyReverseJournal\") genericGridACPartyReverseJournal: GenericPopUpComponent;\r\n  genericGridACPartyForReverseJournal : GenericPopUpSettings = new GenericPopUpSettings();\r\n\r\n \r\n\r\n    constructor(\r\n        public _addionalcostService: AdditionalCostService,\r\n        private fb: FormBuilder,\r\n        private masterService: MasterRepo,\r\n        private _transactionService: TransactionService,\r\n        public authservice: AuthService,\r\n        private loadingService: SpinnerService\r\n    ) {\r\n        this._transactionService.initialFormLoad(66);\r\n\r\n       \r\n        this.TrnMainObj = _addionalcostService.TrnMainObj;\r\n        this.form = fb.group({\r\n            CREDITEDAC: ['', Validators.required],\r\n            AdditionalPurchaseAc: ['', Validators.required],\r\n            AMOUNT: ['', Validators.required],\r\n            REMARKS: [''],\r\n            MCODE: [''],\r\n            BYQUANTITY: [''],\r\n            DESCA:[''],\r\n            BATCH:[''],\r\n            BATCHID: [''],\r\n            COSTING:[''],\r\n            INDDATA:['']\r\n        });\r\n        // this.masterService.getpartyListTree()\r\n        //     .subscribe(data => {\r\n        //         let l = data\r\n        //         this.majorParentAcList = l;\r\n        //     });\r\n\r\n        // this.masterService.getAccount('').subscribe(data => {\r\n        //     this.allList = data;\r\n        // }\r\n\r\n        // )\r\n        this.PI = true;\r\n        this.PIADD = false;\r\n        this.qty = false;\r\n        this.IndividualPI(false);\r\n        this.masterService.focusAnyControl(\"AdditionalCostAc_\");\r\n        // this.form.get('MCODE').disable();\r\n        // this._transactionService.TrnMainObj.TrntranList.splice(-1);\r\n        this.byQuantity(\"Amount\");\r\n        this._transactionService.DrillMode = \"New\";\r\n        this.userSetting = authservice.getSetting();\r\n    }\r\n\r\n\r\n\r\n    ngOnInit() {\r\n      \r\n        this.PIList = this._addionalcostService.addtionalCostList;\r\n        // ////console.log(\"PIList\", this.PIList)\r\n        //console.log(\"mode\",this._transactionService.TrnMainObj.Mode)\r\n        if(this._transactionService.TrnMainObj.Mode == 'NEW'){\r\n            this.PI=true;\r\n            this.masterService.costType=\"IndividualCost\";\r\n            this.masterService.addcosting='COSTING';\r\n            this.masterService.DoAccountPosting_2=1;\r\n            this.masterService.IsTaxableBill_2=1;\r\n            this.masterService.IS_ECA_ITEM_2=0;\r\n            this.GcostMode == \"Amount\";\r\n            this.masterService.DoReverseJournalEntry_2=0;\r\n            this.masterService.focusAnyControl(\"AdditionalCostAc_\");\r\n            this.masterService.ShowMore=false;\r\n        }\r\n    }\r\n    ValuePI: any;\r\n    ItemObj:any=<any>{}\r\n    BatchList:any[]=[];\r\n    passValue() {\r\n        this.BatchList = [];\r\n       \r\n        this.ValuePI = 1;\r\n        this.form.patchValue({\r\n            MCODE:this.ItemObj.mcode,\r\n            \r\n           })\r\n    for(let i of this._addionalcostService.addtionalCostList){\r\n        if(i.menucode == this.ItemObj.mcode){\r\n            this.BatchList.push(i);\r\n        }\r\n    }\r\n        //console.log(\"valueObj1\", this.BatchList)\r\n    }\r\n    onAddClick() {\r\n        this.PI=true; //false for ind costing\r\n        this.masterService.addcosting = 'COSTING'; //always costing for ind cost\r\n        this.form.patchValue({\r\n            MCODE:this.masterService.mcode,\r\n            DESCA:this.masterService.desca,\r\n            BATCH:this.masterService.batch,\r\n            BATCHID:this.masterService.batchid\r\n        })\r\n        // console.log(\"Hereby\",this.form.value)\r\n        // this._addionalcostService.costdetail = [];\r\n\r\n        // this.masterService.addcosting = \"true\";\r\n        \r\n        // if(this.PI == true && this.form.controls.MCODE.value == \"\"){\r\n        //     alert(\"Enter Item for Individual item cost type !\");\r\n        //     return;\r\n        // }\r\n        \r\n        // if(this.PI == true && this.form.controls.BATCH.value == \"\"){\r\n        //     alert(\"Enter batch for Individual item cost type !\");\r\n        //     return;\r\n        // }\r\n        // if(this.PI == false && this.GcostMode == ''){\r\n        //     alert(\"Enter Group cost mode.\");\r\n        //     return;\r\n        // }\r\n        if( this.PI == true && this.form.controls.CREDITEDAC.value == \"\"){\r\n            alert(\"Enter Credited Account for Individual item cost type !\");\r\n            return;\r\n        }\r\n        \r\n        if (this.masterService.AdditionalAMOUNT_2 == \"\"||this.masterService.AdditionalAMOUNT_2 == null ||\r\n        this.masterService.AdditionalAMOUNT_2==0) {\r\n            alert(\"Amount is required\");\r\n            return;\r\n        }\r\n\r\n        \r\n\r\n        var desca = '';\r\n        // console.log('addtionalCostList', this._addionalcostService.addtionalCostList, this._addionalcostService.addtionalCostList)\r\n        for(let i of this._addionalcostService.addtionalCostList){\r\n            if(i.mcode == this.form.value.MCODE){\r\n                desca = i.desca\r\n            }\r\n        }\r\n        // if (this.PI == false) {\r\n        //     for (const iterator of this._addionalcostService.costList) {\r\n        //         if (iterator.amount == \"\" || iterator.amount == null) {\r\n        //             alert(\"Amount is required\");\r\n        //             return;\r\n        //         }\r\n        //     }\r\n        // }\r\n       \r\n        // if(this.PI == false){\r\n            for(const iterator of this._addionalcostService.costList){\r\n                if((iterator.costAc.ACNAME == this.form.value.AdditionalPurchaseAc.ACNAME && (iterator.CostingNonCosting == 'COSTING' || iterator.CostingNonCosting == 'true'))\r\n                || (iterator.costAc.ACNAME == this.form.value.AdditionalPurchaseAc.ACNAME && (iterator.CostingNonCosting == 'NONCOSTING' || iterator.CostingNonCosting == 'false') && this.masterService.addcosting == 'COSTING')){\r\n                    alert(\"Duplicate Additional Cost A/C !\");\r\n                    return;\r\n                }\r\n            }\r\n        // }\r\n        // else if(this.PI == true){\r\n        //     for(const iterator of this._addionalcostService.costList){\r\n        //         if(iterator.costAc.ACNAME == this.form.value.AdditionalPurchaseAc.ACNAME \r\n        //             && iterator.mcode ==  this.form.value.MCODE\r\n        //             && iterator.batch ==  this.form.value.BATCH){\r\n        //             alert(\"Duplicate Additional Cost A/C and Item!\");\r\n        //             return;\r\n        //         }\r\n        //     }\r\n        // }\r\n        if(this.masterService.AdditionalPurchaseAcObj_2 ==  null || this.masterService.AdditionalPurchaseAcObj_2 == \"\" || this.masterService.AdditionalPurchaseAcObj_2 == undefined){\r\n            alert(\"Please enter Additional cost A/C\");\r\n            return;\r\n        }\r\n\r\n        if(this.masterService.AdditionalPurchaseCreditAcObj_2 == null || this.masterService.AdditionalPurchaseCreditAcObj_2 == \"\" || this.masterService.AdditionalPurchaseCreditAcObj_2 == undefined){\r\n            alert(\"Please enter credited A/C !\");\r\n            return;\r\n        }\r\n\r\n        if (this.masterService.RefObj.Ref_SupplierName_2  == null || this.masterService.RefObj.Ref_SupplierName_2  == \"\" || this.masterService.RefObj.Ref_SupplierName_2  == undefined) {\r\n            this.masterService.RefObj.Ref_SupplierACID_2= \"\";\r\n            this.REFSUPPLIERNAME=\"\";\r\n        }\r\n\r\n        if (this.masterService.TDSAccount_Name_2 == null || this.masterService.TDSAccount_Name_2 == \"\" || this.masterService.TDSAccount_Name_2 == undefined) {\r\n            this.masterService.TDSAccount_ACID_2 = \"\";\r\n            this.masterService.TDSAmount_2 = 0;\r\n            this.TDSACCOUNTNAME=\"\";\r\n        } else {\r\n            if (this.masterService.TDSAccount_ACID_2 &&\r\n                (this.masterService.TDSAmount_2 == null || this.masterService.TDSAmount_2 == \"\" || this.masterService.TDSAmount_2 == undefined || this.masterService.TDSAmount_2==0)) {\r\n                alert(\"Please enter TDS Amount !\");\r\n                return;\r\n            }\r\n\r\n            if(this.masterService.TDSAccount_ACID_2 && this.masterService.TDSAmount_2>0){\r\n                if(this.masterService.RefObj.Ref_SupplierACID_2 == null || this.masterService.RefObj.Ref_SupplierACID_2 == \"\" || this.masterService.RefObj.Ref_SupplierACID_2 == undefined ||\r\n                this.masterService.RefObj.Ref_SupplierName_2 == null || this.masterService.RefObj.Ref_SupplierName_2 == \"\" || this.masterService.RefObj.Ref_SupplierName_2 == undefined){\r\n                    alert(\"Please enter Supplier !\");\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n        if (this.masterService.IsTaxableBill_2 == 1) {\r\n            if (this.masterService.RefObj.Ref_BILLNO_2 == null || this.masterService.RefObj.Ref_BILLNO_2 == \"\" || this.masterService.RefObj.Ref_BILLNO_2 == undefined ||\r\n                this.masterService.RefObj.Ref_TRNDATE_2 == null || this.masterService.RefObj.Ref_TRNDATE_2 == \"\" || this.masterService.RefObj.Ref_TRNDATE_2 == undefined ||\r\n                this.masterService.RefObj.Ref_SupplierName_2 == null || this.masterService.RefObj.Ref_SupplierName_2 == \"\" || this.masterService.RefObj.Ref_SupplierName_2 == undefined) {\r\n                alert(\"Ref Bill No, Ref Bill Date, Supplier Name is compulsory for taxable additional bill !\");\r\n                return;\r\n            }\r\n        }\r\n\r\n        if(this._transactionService.userSetting.ENABLESUBLEDGER==1){\r\n            if(this.masterService.DR_INDV_HASSUBLEDGER==1 && this.masterService.DR_SL_INDV_ACID==\"\"){\r\n                alert(\"Please, specify SUB LEDGER FOR A/C '\" + this.form.value.AdditionalPurchaseAc.ACNAME+ \"'\");\r\n                return;\r\n            }\r\n            if(this.masterService.CR_INDV_HASSUBLEDGER==1 && this.masterService.CR_SL_INDV_ACID==\"\"){\r\n                alert(\"Please, specify SUB LEDGER FOR A/C '\" + this.form.value.CREDITEDAC.ACNAME+ \"'\");\r\n                return;\r\n            }\r\n            if(this.masterService.TDS_INDV_HASSUBLEDGER==1 && this.masterService.TDS_SL_INDV_ACID==\"\"){\r\n                alert(\"Please, specify SUB LEDGER FOR A/C '\" + this.TDSACCOUNTNAME+ \"'\");\r\n                return;\r\n            }\r\n        }\r\n        //console.log(\"Hereby1\",this.form.value.AdditionalPurchaseAc)\r\n        let res = <Cost>{}\r\n        res.creditAc = this.form.value.CREDITEDAC;\r\n        res.remarks = this.masterService.AdditionalREMARKS_2;\r\n        res.costAc = this.form.value.AdditionalPurchaseAc;\r\n        res.amount = this.masterService.AdditionalAMOUNT_2;\r\n        res.mcode = this.form.value.MCODE\r\n        res.desca = desca;\r\n        res.batch = this.form.value.BATCH;\r\n        res.batchid = this.form.value.BATCHID;\r\n        res.CostingNonCosting = this.masterService.addcosting;\r\n        res.Ref_BILLNO = this.masterService.RefObj.Ref_BILLNO_2;\r\n        res.Ref_TRNDATE = this.masterService.RefObj.Ref_TRNDATE_2;\r\n        res.Ref_SupplierName = this.REFSUPPLIERNAME;\r\n        res.TDSAmount = this.masterService.TDSAmount_2;\r\n        res.TDSAccount_ACID= this.masterService.TDSAccount_ACID_2;\r\n        res.TDSAccount_Name = this.TDSACCOUNTNAME;\r\n        res.AdditionalDesc = this.masterService.AdditionalDesc_2;\r\n        res.IsTaxableBill = this.masterService.IsTaxableBill_2?this.masterService.IsTaxableBill_2:0;\r\n        res.DoAccountPosting = this.masterService.DoAccountPosting_2?this.masterService.DoAccountPosting_2:0;\r\n        res.Ref_SupplierVAT = this.masterService.RefObj.Ref_SupplierVAT_2;\r\n        res.Ref_SupplierACID = this.masterService.RefObj.Ref_SupplierACID_2;\r\n        res.Ref_BSDATE = this.masterService.RefObj.Ref_BSDATE_2;\r\n        // res.IND_DATA=this.NEW_IndCostList;\r\n        res.IS_ECA_ITEM = this.masterService.IS_ECA_ITEM_2?this.masterService.IS_ECA_ITEM_2:0;\r\n\r\n        res.DR_SL_ACID = this.masterService.DR_SL_INDV_ACID;\r\n        res.DR_SL_ACNAME = this.masterService.DR_SL_INDV_ACNAME;\r\n        res.CR_SL_ACID = this.masterService.CR_SL_INDV_ACID;\r\n        res.CR_SL_ACNAME = this.masterService.CR_SL_INDV_ACNAME;\r\n        res.TDS_SL_ACID = this.masterService.TDS_SL_INDV_ACID;\r\n        res.TDS_SL_ACNAME = this.masterService.TDS_SL_INDV_ACNAME;\r\n        res.DoReverseJournalEntry = this.masterService.DoReverseJournalEntry_2?this.masterService.DoReverseJournalEntry_2:0;\r\n        res.ReverseJournalEntryACNAME = this.masterService.ReverseJournalACNAME_2?this.masterService.ReverseJournalACNAME_2:'';\r\n        res.ReverseJournalEntryACID = this.masterService.ReverseJournalACID_2?this.masterService.ReverseJournalACID_2:'';\r\n        // console.log(' res.DR_SL_ACID',  res.DR_SL_ACID, res.DR_SL_ACNAME);\r\n        // console.log('this.masterService.DR_SL_INDV_ACID', this.masterService.DR_SL_INDV_ACID)\r\n\r\n        if(res.IsTaxableBill==0){\r\n            res.AdditionalVAT = this.masterService.AdditionalVAT_2=0;\r\n        }else{\r\n            res.AdditionalVAT = this.masterService.AdditionalVAT_2;\r\n        }\r\n\r\n\r\n        // if(this.PI==false){\r\n        //     res.CostingType = \"Group Cost\";\r\n        // }\r\n        // else{\r\n            res.CostingType = \"Ind Cost\"\r\n        // }\r\n\r\n        // if (this.PI == false) {\r\n        //     res.CostingNonCosting = 'COSTING';\r\n        // }\r\n        // else {\r\n        //     res.CostingNonCosting ='NONCOSTING';\r\n        // }\r\n\r\n        // let checked_costValue = document.querySelector('input[value = \"true\"]:checked');\r\n        // if (checked_costValue != null) {  //Test if something was checked\r\n        //     res.CostingNonCosting = true;\r\n            \r\n            \r\n        // } else {\r\n        //     res.CostingNonCosting = false\r\n            \r\n        // }\r\n        \r\n        \r\n        // ////console.log(\"checking group cost\", this.form.value.BYQUANTITY)\r\n        // if(this.form.value.BYQUANTITY == true){\r\n           \r\n        //     res.GCOSTMODE = \"On Qty\";\r\n        // }\r\n        // else if(this.form.value.BYQUANTITY == false){\r\n        //     res.GCOSTMODE = \"On Amount\";\r\n        // }\r\n        // else{\r\n        //     res.GCOSTMODE = \"\";\r\n        // }\r\n        if(this.GcostMode == \"Qty\"){\r\n            res.GCOSTMODE = \"On Qty\";\r\n            this.byQuantity(\"Qty\");\r\n        }else if(this.GcostMode == \"Amount\"){\r\n            res.GCOSTMODE = \"On Amount\";\r\n            this.byQuantity(\"Amount\");\r\n        }else{\r\n            res.GCOSTMODE = \"\";\r\n        }\r\n\r\n        res.byQuanty = this.form.value.BYQUANTITY;\r\n        //console.log(\"Hereby2\",this.form.value.AdditionalPurchaseAc)\r\n     //console.log(\"res$$\",res,this.form.value.AdditionalPurchaseAc)\r\n     this._addionalcostService.onAddCost(res);\r\n        // this.AddDebit();\r\n        // this.AddCredit();\r\n        this.EmptyAddCost();\r\n        if (this.ValuePI == 1)\r\n            this.PIADD = true;\r\n\r\n        //    this.form.patchValue({\r\n        //     AdditionalPurchaseAc:''\r\n        //    })\r\n        //    this.masterService.AdditionalPurchaseAcObj = ''\r\n        //    this.masterService.AdditionalPurchaseCreditAcObj = ''\r\n        this.masterService.mcode= '';\r\n        this.masterService.desca='';\r\n        this.masterService.batch='';\r\n        this.masterService.batchid='';\r\n        if(this.PI == true){\r\n            this.masterService.focusAnyControl(\"_item\");\r\n        }else{\r\n            this.masterService.focusAnyControl(\"AdditionalCostAc_\");\r\n        }\r\n           this.BatchList = [];\r\n        //    this.ItemObj = {};\r\n        // ////console.log(\"ChecKDATAA\", this.masterService.AdditionalCostTrnTran)\r\n\r\n        // console.log('check', this.masterService.TDS_SL_INDV_ACNAME ,  this._addionalcostService.INDcostList)\r\n    }\r\n    // AddDebit() {\r\n\r\n    //     let x: Trntran = <Trntran>{};\r\n       \r\n    //     x.A_ACID = this.form.value.AdditionalPurchaseAc.ACID;\r\n    //     x.AccountItem = this.form.value.AdditionalPurchaseAc;\r\n    //     x.DRAMNT = this.form.value.AMOUNT;\r\n    //     x.CRAMNT = 0;\r\n    //     x.PartyDetails = [];\r\n    //     x.ROWMODE = \"new\";\r\n    //     x.inputMode = true;\r\n    //     x.acitem = this.form.value.AdditionalPurchaseAc;\r\n    //     this.masterService.AdditionalCostTrnTran.push(x);\r\n    // }\r\n\r\n    // AddCredit() {\r\n\r\n    //     let y: Trntran = <Trntran>{};\r\n        \r\n    //     y.A_ACID = this.form.value.AdditionalPurchaseAc.ACID;\r\n    //     y.AccountItem = this.form.value.CREDITEDAC;\r\n    //     y.DRAMNT = 0;\r\n    //     y.CRAMNT = this.form.value.AMOUNT;\r\n    //     y.PartyDetails = [];\r\n    //     y.ROWMODE = \"new\";\r\n    //     y.inputMode = true;\r\n    //     y.acitem = this.form.value.CREDITEDAC;\r\n    //     this.masterService.AdditionalCostTrnTran.push(y);\r\n\r\n    // }\r\n    EmptyAddCost() {\r\n        this.form.patchValue({\r\n            // CREDITEDAC: \"\",\r\n            // AdditionalPurchaseAc: \"\",\r\n            AMOUNT: \"\",\r\n            // REMARKS: \"\",\r\n            MCODE: \"\",\r\n            // BYQUANTITY:\"\"\r\n        })\r\n        this.masterService.AdditionalAMOUNT_2=\"\";\r\n        // if(this.PI == false){ // empty additionalcost a/c on  groupcost radio button selection\r\n            this.masterService.AdditionalPurchaseAcObj_2 = '';\r\n            this.masterService.AdditionalPurchaseAcObj_2_ACID = '';\r\n            this.masterService.AdditionalPurchaseCreditAcObj_2 = '';\r\n            this.masterService.AdditionalREMARKS_2=\"\";\r\n            this.masterService.AdditionalDesc_2=\"\";\r\n            this.masterService.AdditionalVAT_2=0;\r\n            this.masterService.TDSAmount_2=0;\r\n            this.masterService.TDSAccount_ACID_2=\"\";\r\n            this.masterService.TDSAccount_Name_2=\"\";\r\n            this.masterService.DoAccountPosting_2=1;\r\n            this.masterService.IsTaxableBill_2=1;\r\n            this.masterService.RefObj.Ref_BILLNO_2=\"\";\r\n            this.masterService.RefObj.Ref_TRNDATE_2=\"\";\r\n            this.masterService.RefObj.Ref_BSDATE_2=\"\";\r\n            this.masterService.RefObj.Ref_SupplierACID_2=\"\";\r\n            this.masterService.RefObj.Ref_SupplierName_2=\"\";\r\n            this.masterService.RefObj.Ref_SupplierVAT_2=\"\";\r\n            this.TDSACCOUNTNAME=\"\";\r\n            this.REFSUPPLIERNAME=\"\";\r\n            this.masterService.showIndividualAmountPopup=false;\r\n            this._addionalcostService.tempIndCostList=[];\r\n            this.NEW_IndCostList=[];\r\n            this.masterService.TOTALINDAMOUNT=0;\r\n            this.masterService.IS_ECA_ITEM_2=0;\r\n            this.masterService.DR_SL_INDV_ACID='';\r\n            this.masterService.DR_SL_INDV_ACNAME='';\r\n            this.masterService.CR_SL_INDV_ACID='';\r\n            this.masterService.CR_SL_INDV_ACNAME='';\r\n            this.masterService.TDS_SL_INDV_ACID='';\r\n            this.masterService.TDS_SL_INDV_ACNAME='';\r\n            this.masterService.DoReverseJournalEntry_2=0;\r\n            this.masterService.ReverseJournalACID_2 = '';\r\n            this.masterService.ReverseJournalACNAME_2='';\r\n            this.form.patchValue({\r\n                REMARKS: \"\",\r\n                INDDATA:[]\r\n            })\r\n        // }\r\n    }\r\n    checkRow(index){\r\n        // //console.log(\"ChecKVale\",index)\r\n    }\r\n    TableRowDoubleClickEvent(l: any) {\r\n        // console.log(\"@data to be removed\", l);\r\n        if(this._transactionService.TrnMainObj.Mode=='VIEW'){\r\n            return;\r\n        }\r\n        if (l.CostingNonCosting =='COSTING') {\r\n            this.masterService.addcosting = 'COSTING';\r\n        }\r\n        else {\r\n            this.masterService.addcosting = 'NONCOSTING';\r\n            \r\n        }\r\n        this.allowRowAdd = false;\r\n        if(l.CostingType == \"Group Cost\"){\r\n            this.masterService.costType=\"GroupCost\";\r\n            this.IndividualPI(false);\r\n        }else if(l.CostingType == \"Ind Cost\"){\r\n            this.masterService.costType=\"IndividualCost\";\r\n            this.IndividualPI(true);\r\n        }\r\n\r\n        if(l.GCOSTMODE == \"On Qty\"){\r\n            ////console.log(\"inside on qty\");\r\n            this.GcostMode = 'Qty';\r\n            this.byQuantity('Qty');\r\n        }else if(l.GCOSTMODE == \"On Amount\"){\r\n            this.GcostMode = 'Amount';\r\n            this.byQuantity('Amount');\r\n\r\n        }else{\r\n            this.GcostMode = '';\r\n            this.form.value.BYQUANTITY = null;\r\n        }\r\n\r\n        if(l.CostingType != \"Ind Cost\"){\r\n            return;\r\n        }\r\n        this.form.patchValue({ AdditionalPurchaseAc: l.costAc, CREDITEDAC: l.creditAc, AMOUNT: l.amount, REMARKS: l.remarks, MCODE: l.mcode ,\r\n            AdditionalDesc: l.AdditionalDesc, AdditionalVAT: l.AdditionalVAT, TDSAmount: l.TDSAmount,\r\n            TDSAccount_Name: l.TDSAccount_Name, DoAccountPosting:l.DoAccountPosting, IsTaxableBill:l.IsTaxableBill});\r\n        this.masterService.AdditionalPurchaseAcObj_2 = l.costAc.ACNAME;\r\n        this.masterService.AdditionalPurchaseAcObj_2_ACID = l.costAc.ACID;\r\n        this.masterService.AdditionalPurchaseCreditAcObj_2 = l.creditAc.ACNAME;\r\n        this.masterService.AdditionalAMOUNT_2=l.amount;\r\n        this.masterService.AdditionalREMARKS_2=l.remarks;\r\n        this.masterService.TDSAmount_2=l.TDSAmount;\r\n        this.masterService.TDSAccount_Name_2=l.TDSAccount_Name;\r\n        this.masterService.AdditionalDesc_2=l.AdditionalDesc;\r\n        this.masterService.AdditionalVAT_2=l.AdditionalVAT;\r\n        this.masterService.IsTaxableBill_2=l.IsTaxableBill;\r\n        this.masterService.DoAccountPosting_2=l.DoAccountPosting;\r\n        this.masterService.RefObj.Ref_BILLNO_2=l.Ref_BILLNO;\r\n        this.masterService.RefObj.Ref_TRNDATE_2=l.Ref_TRNDATE;\r\n        this.masterService.RefObj.Ref_BSDATE_2=l.Ref_BSDATE;\r\n        this.masterService.RefObj.Ref_SupplierACID_2=l.Ref_SupplierACID;\r\n        this.masterService.RefObj.Ref_SupplierName_2=l.Ref_SupplierName;\r\n        this.masterService.RefObj.Ref_SupplierVAT_2=l.Ref_SupplierVAT;\r\n        this.masterService.TDSAccount_ACID_2=l.TDSAccount_ACID;\r\n        this.masterService.IS_ECA_ITEM_2=l.IS_ECA_ITEM;\r\n        this.TDSACCOUNTNAME=l.TDSAccount_Name;\r\n        this.REFSUPPLIERNAME=l.Ref_SupplierName;\r\n        this._addionalcostService.tempIndCostList=[];\r\n        this.masterService.TOTALINDAMOUNT=0;\r\n        this._addionalcostService.tempIndCostList=this._addionalcostService.IndividualCostList.filter(x=>x.additionalcostac==l.costAc.ACID); //l.IND_DATA;\r\n        this.masterService.DR_SL_INDV_ACID=l.DR_SL_INDV_ACID;\r\n        this.masterService.DR_SL_INDV_ACNAME=l.DR_SL_INDV_ACNAME;\r\n        this.masterService.CR_SL_INDV_ACID=l.CR_SL_INDV_ACID;\r\n        this.masterService.CR_SL_INDV_ACNAME=l.CR_SL_INDV_ACNAME;\r\n        this.masterService.TDS_SL_INDV_ACID=l.TDS_SL_INDV_ACID;\r\n        this.masterService.TDS_SL_INDV_ACNAME=l.TDS_SL_ACNAME;\r\n        this.masterService.DoReverseJournalEntry_2 = l.DoReverseJournalEntry?l.DoReverseJournalEntry:0;\r\n        this.masterService.ReverseJournalACID_2 = l.ReverseJournalEntryACID?l.ReverseJournalEntryACID:'';\r\n        this.masterService.ReverseJournalACNAME_2 = l.ReverseJournalEntryACNAME?l.ReverseJournalEntryACNAME:'';\r\n        // this._addionalcostService.tempIndCostList.forEach(x => this.masterService.TOTALINDAMOUNT += x.indamount);\r\n        // this.closeIndAmountPopup();\r\n        // //console.log(\"AdditionalPurchaseAcObj\",this.masterService.AdditionalPurchaseAcObj)\r\n        // //console.log(\"AdditionalPurchaseCreditAcObj\",this.masterService.AdditionalPurchaseCreditAcObj)\r\n\r\n        let _getIndex = this._addionalcostService.costList.findIndex(x=>x.costAc.ACNAME == l.costAc.ACNAME)\r\n    this._addionalcostService.costList.splice(_getIndex,1);\r\n        this._addionalcostService.INDcostList=this._addionalcostService.costList.filter(x=>x.CostingType==\"Ind Cost\");\r\n        this._addionalcostService.GRPcostList=this._addionalcostService.costList.filter(x=>x.CostingType==\"Group Cost\");\r\n        // this._addionalcostService.onDeleteCost(l);\r\n        // this._transactionService.TrnMainObj.TrntranList.splice(index,1)\r\n\r\n        this._transactionService.TrnMainObj.TrntranList = [];\r\n        this._addionalcostService.addCostTotAmount = this._addionalcostService.addCostTotAmount - l.amount;\r\n        // this._addionalcostService.addINDCostTotAmount = this._addionalcostService.addINDCostTotAmount - l.amount;\r\n        this._addionalcostService.addINDCostTotalNetAmount =0;\r\n        if(l.IsTaxableBill == 1){\r\n            this._addionalcostService.addINDCostTaxableTotalAmount = this._addionalcostService.addINDCostTaxableTotalAmount - l.amount;\r\n            this._addionalcostService.addINDCostTotalVat = this._addionalcostService.addINDCostTotalVat - l.AdditionalVAT;\r\n        }else this._addionalcostService.addINDCostNonTaxableTotalAmount = this._addionalcostService.addINDCostNonTaxableTotalAmount - l.amount;\r\n        this._addionalcostService.addINDCostTotalNetAmount=this._addionalcostService.addINDCostNonTaxableTotalAmount+ this._addionalcostService.addINDCostTaxableTotalAmount+this._addionalcostService.addINDCostTotalVat;\r\n\r\n        if(this._addionalcostService.header)\r\n        this._addionalcostService.header.splice(this._addionalcostService.header.findIndex(x=>x.MAPPINGNAME==l.costAc.ACNAME),1)\r\n        this._addionalcostService.DeleteDynamicColumn(l.costAc.ACNAME)\r\n        // let selectedind_Data=this._addionalcostService.IndividualCostList.filter(x=>x.additionalcostac==l.costAc.ACID);\r\n            // for(var i in selectedind_Data){\r\n            //     let getindex=this._addionalcostService.IndividualCostList.findIndex(x=>x.additionalcostac==l.costAc.ACID);\r\n            //     if(getindex>=0){\r\n            //         this._addionalcostService.IndividualCostList.splice(getindex,1);\r\n            //     }\r\n            // }\r\n            this.closeIndAmountPopup();\r\n       this.CalculateVat();\r\n        \r\n    }\r\n\r\n    public generateCostDetails() {\r\n        this._addionalcostService.generateCostDetails();\r\n    }\r\n\r\n    IndividualPI(value) {\r\n        this.PI = value\r\n        if(this.PI==false){\r\n            this.form.get('MCODE').disable();\r\n            this.form.get('BATCH').disable();\r\n            this.GcostMode =\"Amount\";\r\n            this.form.value.BYQUANTITY = true;\r\n            this.masterService.focusAnyControl(\"AdditionalCostAc_\");\r\n        }\r\n        else if(this.PI == true){\r\n            this.form.get('MCODE').enable();\r\n            this.form.get('BATCH').enable();\r\n            this.form.value.BYQUANTITY = null;\r\n            this.GcostMode = \"\";\r\n            // document.getElementById(\"_item\").focus();\r\n            this.masterService.focusAnyControl(\"_item\");\r\n        }\r\n        this.form.patchValue({ MCODE: \"\",BATCH : value.BATCH });\r\n        this.ItemObj = value.desca;\r\n        // this.PIADD=true;\r\n\r\n    }\r\n    byQuantity(value) {\r\n        // ////console.log(\"CheckForm1\",value)\r\n        if (value == \"Qty\") {\r\n            this.form.value.BYQUANTITY = true;\r\n            this.qty = true;\r\n        }\r\n        else if(value == \"Amount\") {\r\n            this.form.value.BYQUANTITY = false;\r\n            this.qty = false;\r\n        }\r\n        else{\r\n            this.form.value.BYQUANTITY = null;\r\n        }\r\n        // ////console.log(\"CheckForm\",this.form.value.BYQUANTITY)\r\n    }\r\n    acTag: any;\r\n\r\n    TabAcBox(name) {\r\n        //    this.genericGridRefBill.show();\r\n        var passingValue = '';\r\n        if(name == 'CreditAC'){\r\n            passingValue = 'AccountListAndSupplier'\r\n            this.gridCreditACListPartyPopupSettings = this.masterService.getGenericGridPopUpSettings(passingValue);\r\n            this.acTag = 'CreditAC'\r\n            this.genericGridCreditACListParty.show();\r\n        }\r\n        else if(name == 'AC'){\r\n            // if(this.PI == true && (this.masterService.desca === undefined || this.masterService.desca === '' || this.masterService.desca === null)){\r\n            //     alert(\"Please select item first!\");\r\n            //     return;\r\n            // }\r\n            passingValue = 'AccountLedgerList';\r\n            this.gridACListPartyPopupSettings = this.masterService.getGenericGridPopUpSettings(passingValue);\r\n            this.acTag = 'AC'\r\n            this.genericGridACParty.show();\r\n        }\r\n\r\n        \r\n\r\n    }\r\n\r\n    ACNameSelect_Additional(value, name) {\r\n        // alert(\"ree123\"+value+'A'+this.acTag)\r\n        //console.log(\"value\",value)\r\n        let obj={ACID:value.ACID,ACNAME:value.ACNAME,HASSUBLEDGER:value.HASSUBLEDGER}\r\n        this.form.patchValue({ AdditionalPurchaseAc: obj })\r\n            this.masterService.AdditionalPurchaseAcObj_2 = value.ACNAME;\r\n            this.masterService.AdditionalPurchaseAcObj_2_ACID = value.ACID;\r\n            this.genericGridACParty.hide();\r\n            this.masterService.DR_SL_INDV_ACID='';\r\n            this.masterService.DR_SL_INDV_ACNAME='';\r\n            this.masterService.AdditionalAMOUNT_2=0;\r\n            this._addionalcostService.tempIndCostList=[];\r\n            //console.log(\"reds\",value,this.form.value.AdditionalPurchaseAc)\r\n            this.masterService.DR_INDV_HASSUBLEDGER=value.HASSUBLEDGER;\r\n            if(value.HASSUBLEDGER==1 && this._transactionService.userSetting.ENABLESUBLEDGER==1){  \r\n                this.onsubLedgerTabDr(value);\r\n            }else{\r\n                this.masterService.focusAnyControl(\"AmountsAD_\")\r\n            }\r\n       \r\n\r\n\r\n    }\r\n    ACNameSelect_Credit(value, name) {\r\n\r\n        // alert(\"ree333\"+value+'A'+this.acTag)\r\n            let obj={ACID:value.ACID,ACNAME:value.ACNAME,HASSUBLEDGER:value.HASSUBLEDGER}\r\n            this.form.patchValue({ CREDITEDAC: obj })\r\n            this.masterService.AdditionalPurchaseCreditAcObj_2 = value.ACNAME;\r\n            this.genericGridCreditACListParty.hide();\r\n\r\n            this.masterService.CR_SL_INDV_ACID='';\r\n            this.masterService.CR_SL_INDV_ACNAME='';\r\n\r\n            this.masterService.CR_INDV_HASSUBLEDGER=value.HASSUBLEDGER;\r\n            if(value.HASSUBLEDGER==1 && this._transactionService.userSetting.ENABLESUBLEDGER==1){ \r\n                this.onsubLedgerTabCr(value);\r\n            }else{\r\n                this.masterService.focusAnyControl(\"RemarksAD_\");\r\n            }\r\n            \r\n    }\r\n\r\n    @HostListener(\"document: keydown\", [\"$event\"])\r\n    updown($event: KeyboardEvent){\r\n        if($event.key == \"Enter\"){\r\n            $event.preventDefault();\r\n            \r\n            if(this.form.valid && this.allowRowAdd === true){\r\n                ////console.log(\"Enter pressed\")\r\n                // this.onAddClick();\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n    focusTrigger(){\r\n        this.allowRowAdd = true;\r\n    }\r\n\r\n    IndAmountSelect() {\r\n        if(this.masterService.RefObj.Refno === undefined || this.masterService.RefObj.Refno === '' || this.masterService.RefObj.Refno === null){\r\n            alert(\"Please select ref. PI voucher first.\");\r\n            return;\r\n        }\r\n        if(this.masterService.AdditionalPurchaseAcObj_2 ==  null || this.masterService.AdditionalPurchaseAcObj_2 == \"\" || this.masterService.AdditionalPurchaseAcObj_2 == undefined){\r\n            alert(\"Please enter Additional cost A/C\");\r\n            return;\r\n        }\r\n\r\n        if(this._addionalcostService.tempIndCostList.length == 0){\r\n                    this._addionalcostService.tempIndCostList=this._addionalcostService.addtionalCostList;\r\n                    this._addionalcostService.tempIndCostList.forEach(x => {\r\n                        x.additionalcostac=this.form.value.AdditionalPurchaseAc.ACID,\r\n                        x.indamount=0\r\n                                });                            \r\n        }\r\n        this.masterService.TOTALINDAMOUNT=0;\r\n        this._addionalcostService.tempIndCostList.forEach(x => this.masterService.TOTALINDAMOUNT += x.indamount);\r\n        this.masterService.showIndividualAmountPopup=true;\r\n      \r\n    }\r\n\r\n    dblClickItemSelection(value) {\r\n        this.masterService.desca = value.DESCRIPTION;\r\n        this.masterService.mcode= value.MCODE;\r\n        this.masterService.batch = \"\";\r\n        this.masterService.batchid = \"\";\r\n        let _voucherno = this.masterService.RefObj.Refno;\r\n        this.masterService.getBatchOfItem(_voucherno, value.MCODE).subscribe(res => {\r\n            if (res.status == 'ok') {\r\n                //console.log(\"res\", res.result)\r\n                if (res.result && res.result.length == 1) {\r\n                    this.masterService.batch = res.result[0].BATCH;\r\n                    this.masterService.batchid = res.result[0].BATCHID;\r\n                    // if (this.masterService.AdditionalPurchaseAcObj === \"\" || this.masterService.AdditionalPurchaseAcObj === null || this.masterService.AdditionalPurchaseAcObj === undefined) {\r\n                        this.masterService.focusAnyControl(\"AdditionalCostAc_\");\r\n                    // } else {\r\n                    //     this.masterService.focusAnyControl(\"AmountsAD_\");\r\n                    // }\r\n                } else if (res.result && res.result.length > 1) {\r\n                    this.masterService.focusAnyControl(\"_batch\");\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    BatchSelect() {\r\n\r\n        if(this.masterService.batch != \"\"){\r\n            return;\r\n        }\r\n        if(this.masterService.RefObj.Refno === undefined || this.masterService.RefObj.Refno === '' || this.masterService.RefObj.Refno === null){\r\n            alert(\"Please select ref. PI voucher first.\");\r\n            return;\r\n        }\r\n        let _voucherno = this.masterService.RefObj.Refno;\r\n        let vchrno = _voucherno.replace(\"/\", \"ZZ\")\r\n        if(this.masterService.mcode === undefined || this.masterService.mcode === '' || this.masterService.mcode === null){\r\n            alert(\"Please select item first.\");\r\n            return;\r\n        }\r\n        let mcode = this.masterService.mcode;\r\n        //console.log(\"@@DISPLAY\",this.userSetting.DISPLAY)\r\n        if(this.userSetting.DISPLAY == 1){\r\n            this.gridBatchPopupSettings = {\r\n                title: \"Item List \",\r\n                apiEndpoints: `/getItemPagedListPIWise/${vchrno}/${mcode}`,\r\n                defaultFilterIndex: 0,\r\n                columns: [\r\n                    {\r\n                        key: 'BATCH',\r\n                        title: 'Batch',\r\n                        hidden: false,\r\n                        noSearch: false\r\n                    },\r\n                    {\r\n                        key: 'MfgDate',\r\n                        title: 'MfgDate',\r\n                        hidden: false,\r\n                        noSearch: false\r\n                    },\r\n                    {\r\n                        key: 'ExpDate',\r\n                        title: 'ExpDate',\r\n                        hidden: false,\r\n                        noSearch: false\r\n                    },\r\n                    {\r\n                        key: 'LANDINGCOST',\r\n                        title: 'Rate',\r\n                        hidden: false,\r\n                        noSearch: false\r\n                    },\r\n                    {\r\n                        key: 'MRP',\r\n                        title: 'Mrp',\r\n                        hidden: false,\r\n                        noSearch: false\r\n                    }\r\n                ]\r\n            };\r\n        }else{\r\n            this.gridBatchPopupSettings = {\r\n                title: \"Item List \",\r\n                apiEndpoints: `/getItemPagedListPIWise/${vchrno}/${mcode}`,\r\n                defaultFilterIndex: 0,\r\n                columns: [\r\n                    {\r\n                        key: 'BATCH',\r\n                        title: 'Batch',\r\n                        hidden: false,\r\n                        noSearch: false\r\n                    }\r\n                ]\r\n            };\r\n        }\r\n        \r\n        this.genericGridBatch.show();\r\n    }\r\n\r\n    dblClickBatchSelection(value) {\r\n        this.masterService.batch = value.BATCH;\r\n        this.masterService.batchid = value.BATCHID;\r\n        // if (this.masterService.AdditionalPurchaseAcObj === \"\" || this.masterService.AdditionalPurchaseAcObj === null || this.masterService.AdditionalPurchaseAcObj === undefined) {\r\n            this.masterService.focusAnyControl(\"AdditionalCostAc_\");\r\n        // } else {\r\n        //     this.masterService.focusAnyControl(\"AmountsAD_\");\r\n        // }\r\n    }\r\n\r\n    remarksEntered(){\r\n        if(this.PI == true){\r\n            this.onAddClick();\r\n        }\r\n    }\r\n\r\n    gcostEntered(){\r\n        if(this.PI == false){\r\n            this.onAddClick();\r\n        }\r\n    }\r\n\r\n    // TabRefBill() {\r\n    //     //console.log(\"@@PURCHASE_TYPE\",this.masterService.RefObj.PURCHASE_TYPE,this._trnMainService.userSetting.ENABLELOCALPURCHASE)\r\n    //     if(this._transactionService.userSetting.ENABLELOCALPURCHASE==0){\r\n    //       this.masterService.RefObj.PURCHASE_TYPE='ALL';\r\n    //     }else{\r\n    //       if(this._transactionService.userSetting.ENABLELOCALPURCHASE==1 && !this.masterService.RefObj.PURCHASE_TYPE){\r\n    //         this.masterService.RefObj.PURCHASE_TYPE='ALL';\r\n    //       }\r\n    //     }\r\n    //     this.gridPopupSettingsForRefBill = this.masterService.getGenericGridPopUpSettingsForAdditionalCost(\"AdditionalCost\",this.masterService.RefObj.PURCHASE_TYPE);\r\n    //     this.genericGridRefBill.show();\r\n    //   }\r\n\r\n    //   onRefBillSelected(value) {\r\n    //     // alert(\"reached\")\r\n    //     this.masterService.AdditionalPurchaseAcObj_2 = '';\r\n    //     this.masterService.AdditionalPurchaseCreditAcObj_2 = '';\r\n    //     this.masterService.mcode= '';\r\n    //     this.masterService.desca='';\r\n    //     this.masterService.batch='';\r\n    //     this.masterService.batchid='';\r\n    \r\n    //     this.masterService.RefObj.Refno = value.VCHRNO;\r\n    //     this.masterService.RefObj.disable = true;\r\n    //     this._transactionService.TrnMainObj.REFBILL = value.VCHRNO;\r\n    //     this.masterService.RefObj.InvoiceNo = value.REFBILL;\r\n    //     this.masterService.RefObj.SupplierName = value.ACNAME;\r\n    //     this._transactionService.TrnMainObj.PARAC=value.PARAC;\r\n    //     this.masterService.RefObj.SupplierVAT = value.BILLTOTEL;\r\n    //     this.masterService.RefObj.Ref_TRNDATE_2 = value.TRNDATE;\r\n    //     this.masterService.RefObj.Ref_BSDATE_2 = value.BSDATE;\r\n\r\n        \r\n    //     this.getAdditionalCost(value)\r\n    //     this.masterService.focusAnyControl(\"_AdditioanlCostRate\"+0)\r\n    //   }\r\n\r\n      TabTDSAccount(){\r\n        let TRNMODE = \"TDS\";\r\n        this.gridACListPopupSettings = {\r\n            title: \"Accounts\",\r\n            apiEndpoints: `/getAccountPagedListByMapId/Details/${TRNMODE}`,\r\n            defaultFilterIndex: 1,\r\n            columns: [\r\n              {\r\n                key: \"ACCODE\",\r\n                title: \"AC CODE\",\r\n                hidden: false,\r\n                noSearch: false\r\n              },\r\n              {\r\n                key: \"ACNAME\",\r\n                title: \"A/C NAME\",\r\n                hidden: false,\r\n                noSearch: false\r\n              }\r\n            ]\r\n          };\r\n      \r\n          this.genericGridACList.show();\r\n      }\r\n\r\n      onAcSelect(value){\r\n        this.masterService.TDSAccount_Name_2=value.ACNAME;\r\n        this.masterService.TDSAccount_ACID_2=value.ACID;\r\n        this.TDSACCOUNTNAME=value.ACNAME;\r\n        this.masterService.TDS_SL_INDV_ACID='';\r\n        this.masterService.TDS_SL_INDV_ACNAME='';\r\n\r\n        this.masterService.TDS_INDV_HASSUBLEDGER=value.HASSUBLEDGER;\r\n        if(value.HASSUBLEDGER==1 && this._transactionService.userSetting.ENABLESUBLEDGER==1){  \r\n            this.onsubLedgerTabAc(value);\r\n        }\r\n      }\r\n    \r\n    //   getAdditionalCost(value) {\r\n    //     this.loadingService.show(\"please wait. Getting purchase invoice data..\")\r\n    //     let VCHR = value.VCHRNO\r\n    //     let division = value.DIVISION;\r\n    //     let phiscalid= this.masterService.PhiscalObj.PhiscalID;\r\n\r\n    //     this.masterService.LoadTransaction(VCHR, division, phiscalid).subscribe(data => {\r\n    //       if (data) {\r\n    //         try {\r\n    //           ////console.log(\"additionalCostDataLoaded\",data.result)\r\n    //           this._addionalcostService.costList = [];\r\n    //           this._addionalcostService.costdetail = [];\r\n    //           this._addionalcostService.addtionalCostList = [];\r\n    //           this._addionalcostService.addCostTotAmount = 0;\r\n    //           //console.log(\"@@data.result.ProdList\",data.result.ProdList)\r\n    //           var result = data.result.ProdList.filter((elem1, i) => data.result.ProdList.some((elem2, j) => (elem2.MCODE === elem1.MCODE)\r\n    //              && (elem2.BATCHID == elem1.BATCHID) && j !== i));\r\n    //           //console.log(\"@@PI__result:\", result);\r\n    \r\n    //         let acs1: prodCost = <prodCost>{ mcode: \"\", menucode: \"\", desca: \"\", unit: \"\",\r\n    //                                         quantity: 0, rate: 0,amount: 0, nAmount: 0, batch:\"\",batchid:\"\" }\r\n    //         if(result.length>0){\r\n    //             result.forEach(element => {\r\n    //               acs1.mcode=element.MCODE,\r\n    //               acs1.menucode=element.MENUCODE,\r\n    //               acs1.desca=element.ITEMDESC,\r\n    //               acs1.unit=element.UNIT,\r\n    //               acs1.batch=element.BATCH,\r\n    //               acs1.rate=element.RATE,\r\n    //               acs1.quantity=element.REALQTY_IN+acs1.quantity,\r\n    //               acs1.amount=element.AMOUNT+acs1.amount,\r\n    //               acs1.nAmount=element.NETAMOUNT+acs1.nAmount,\r\n    //               acs1.batchid=element.BATCHID\r\n    //             });\r\n    //             this._addionalcostService.addtionalCostList.push(acs1);\r\n    \r\n    //             var result2 = data.result.ProdList.filter((elem1, i) => result.some((elem2, j) => (elem2.MCODE != elem1.MCODE || elem2.BATCHID != elem1.BATCHID)  && j !== i));\r\n    //             if(result2.length > 0 ){\r\n    //               //console.log(\"@@mcodediff_ac2\",result2)\r\n    //               for (let i of result2) {\r\n    //                 var acs: prodCost = <prodCost>{\r\n    //                   mcode: i.MCODE, menucode: i.MENUCODE, desca: i.ITEMDESC, unit: i.UNIT,\r\n    //                   quantity: i.REALQTY_IN, \r\n    //                   rate: i.RATE,\r\n    //                    amount: i.AMOUNT, \r\n    //                    nAmount: i.NETAMOUNT, batch:i.BATCH, batchid:i.BATCHID\r\n    //                 };\r\n    //                 this._addionalcostService.addtionalCostList.push(acs);\r\n    //               }\r\n    //             }\r\n    //         }\r\n    \r\n    //           if(this._addionalcostService.addtionalCostList.length==0){\r\n    //             //console.log(\"@@ac2\")\r\n    //           for (let i of data.result.ProdList) {\r\n    //             var acs: prodCost = <prodCost>{\r\n    //               mcode: i.MCODE, menucode: i.MENUCODE, desca: i.ITEMDESC, unit: i.UNIT,\r\n    //               quantity: i.REALQTY_IN, \r\n    //               rate: i.RATE,\r\n    //                amount: i.AMOUNT, \r\n    //                nAmount: i.NETAMOUNT, batch:i.BATCH,batchid:i.BATCHID\r\n    //             };\r\n    //             this._addionalcostService.addtionalCostList.push(acs);\r\n    //           }\r\n    //         }\r\n    //           this.masterService.batch = data.result.ProdList && data.result.ProdList.length>0 && data.result.ProdList[0].BATCH;\r\n    //           //total amount\r\n    //           this._addionalcostService.loadedTrnmain = data.result;\r\n    //           this.loadingService.hide();\r\n    //         }\r\n    //         catch (ex) { }\r\n    \r\n    //       }\r\n    //       else {\r\n    //         alert(\"Cannot Get Data from Bill no.\")\r\n    //       }\r\n    //     })\r\n    \r\n    \r\n    //   }\r\n\r\n      ChangeIsTaxableBill(value){\r\n        if(value==true){\r\n            this.masterService.IsTaxableBill_2=1;\r\n            this.masterService.IS_ECA_ITEM_2=0;\r\n        }else{\r\n            this.masterService.IsTaxableBill_2=0;\r\n            this.masterService.AdditionalVAT_2=0;\r\n            this.masterService.IS_ECA_ITEM_2=1;\r\n        }\r\n            this.CalculateVat();\r\n      }\r\n      ChangeECA_ITEM(value){\r\n        if(value==true ){\r\n            this.masterService.IS_ECA_ITEM_2=1;\r\n            this.masterService.IsTaxableBill_2=0;\r\n            this.masterService.AdditionalVAT_2=0;\r\n        }else{\r\n            this.masterService.IsTaxableBill_2=1;\r\n            this.masterService.IS_ECA_ITEM_2=0;\r\n        }\r\n        this.CalculateVat();\r\n\r\n      }\r\n      changeToBSDate(value, format: string) {\r\n        var adbs = require(\"ad-bs-converter\");\r\n        if (format == \"AD\") {\r\n        let yearValue = moment(value).year();\r\n            if (yearValue.toString().length == 4) {\r\n            var adDate = (value.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n            var bsDate = adbs.ad2bs(adDate);\r\n            bsDate.en.month = bsDate.en.month <= 9 ? \"0\" + (bsDate.en.month) : bsDate.en.month\r\n            this.masterService.RefObj.Ref_BSDATE_2  = \r\n            this.masterService.toADDate(value);\r\n      }\r\n        }\r\n    }\r\n\r\n    SupplierList(){\r\n        this.gridPopupSettingsForSupplier = this.masterService.getGenericGridPopUpSettings(\"Supplier\");\r\n        this.genericGridSupplier.show();\r\n    }\r\n\r\n    onSupplierSelected(value){\r\n        this.masterService.RefObj.Ref_SupplierACID_2 = value.ACID;\r\n        this.masterService.RefObj.Ref_SupplierName_2 = value.ACNAME;\r\n        this.masterService.RefObj.Ref_SupplierVAT_2 = value.VATNO?value.VATNO:value.GSTNO;\r\n        this.REFSUPPLIERNAME=value.ACNAME;\r\n    }\r\n\r\n    CalculateTotalAmount(){\r\n        this.masterService.TOTALINDAMOUNT =0;\r\n        this._addionalcostService.tempIndCostList.forEach(x => this.masterService.TOTALINDAMOUNT += x.indamount);\r\n    }\r\n\r\n    closeIndAmountPopup(){\r\n        this.masterService.showIndividualAmountPopup=false;\r\n        this.NEW_IndCostList=[];\r\n        // console.log(\"@@BEFORE.IndividualCostList\",this._addionalcostService.IndividualCostList)\r\n        let selectedind_Data=this._addionalcostService.IndividualCostList.filter(x=>x.additionalcostac==this.masterService.AdditionalPurchaseAcObj_2_ACID);\r\n        for(var i in selectedind_Data){\r\n            let getindex=this._addionalcostService.IndividualCostList.findIndex(x=>x.additionalcostac==this.masterService.AdditionalPurchaseAcObj_2_ACID);\r\n            if(getindex>=0){\r\n                this._addionalcostService.IndividualCostList.splice(getindex,1);\r\n            }\r\n        }\r\n        // console.log(\"@@AFTER.IndividualCostList\",this._addionalcostService.IndividualCostList)\r\n        if (this._addionalcostService.tempIndCostList.length > 0) {\r\n            this._addionalcostService.tempIndCostList.forEach(element => {\r\n                this.NEWOBJ = <prodCost>{\r\n                    mcode: \"\", menucode: \"\", desca: \"\", unit: \"\",\r\n                    quantity: 0, rate: 0, amount: 0, nAmount: 0, batch: \"\", batchid: \"\", indamount: 0\r\n                                }\r\n                    this.NEWOBJ.mcode = element.mcode,\r\n                    this.NEWOBJ.menucode = element.menucode,\r\n                    this.NEWOBJ.desca = element.desca,\r\n                    this.NEWOBJ.batch = element.batch,\r\n                    this.NEWOBJ.rate = element.rate,\r\n                    this.NEWOBJ.quantity = element.quantity,\r\n                    this.NEWOBJ.amount = element.amount,\r\n                    this.NEWOBJ.additionalcostac = element.additionalcostac,\r\n                    this.NEWOBJ.batchid = element.batchid,\r\n                    this.NEWOBJ.indamount = element.indamount\r\n                    this.NEW_IndCostList.push(this.NEWOBJ);\r\n                });\r\n            \r\n            this._addionalcostService.IndividualCostList.push.apply(this._addionalcostService.IndividualCostList,this.NEW_IndCostList);\r\n        }\r\n        this.CalculateTotalAmount();\r\n        // if(this._transactionService.TrnMainObj.Mode==\"NEW\"){\r\n            this.masterService.AdditionalAMOUNT_2=this.masterService.TOTALINDAMOUNT;\r\n        // }\r\n        this.CalculateVat();\r\n    }\r\n\r\n    onsubLedgerTabAc(value) {\r\n        // this.selectedIndex = i;\r\n        this.gridSubLedgerSettingAc = {\r\n          title: \"SubLedger List\",\r\n          apiEndpoints: `/getSubLedgerByACIDPageList/${value.ACID}`,\r\n          defaultFilterIndex: 1,\r\n          columns: [\r\n            {\r\n              key: \"SL_ACID\",\r\n              title: \"SubLedger ID\",\r\n              hidden: false,\r\n              noSearch: false\r\n            },\r\n            {\r\n              key: \"SL_ACNAME\",\r\n              title: \"SubLedger Name\",\r\n              hidden: false,\r\n              noSearch: false\r\n            }\r\n          ]\r\n        };\r\n\r\n        \r\n        this.gridSubLedgerSettingListAc.show();\r\n      }\r\n    onsubLedgerTabDr(value) {\r\n        // this.selectedIndex = i;\r\n        this.gridSubLedgerSettingDr = {\r\n          title: \"SubLedger List\",\r\n          apiEndpoints: `/getSubLedgerByACIDPageList/${value.ACID}`,\r\n          defaultFilterIndex: 1,\r\n          columns: [\r\n            {\r\n              key: \"SL_ACID\",\r\n              title: \"SubLedger ID\",\r\n              hidden: false,\r\n              noSearch: false\r\n            },\r\n            {\r\n              key: \"SL_ACNAME\",\r\n              title: \"SubLedger Name\",\r\n              hidden: false,\r\n              noSearch: false\r\n            }\r\n          ]\r\n        };\r\n\r\n        \r\n        this.gridSubLedgerSettingListDr.show();\r\n      }\r\n      \r\n    onsubLedgerTabCr(value) {\r\n        // this.selectedIndex = i;\r\n        this.gridSubLedgerSettingCr = {\r\n          title: \"SubLedger List\",\r\n          apiEndpoints: `/getSubLedgerByACIDPageList/${value.ACID}`,\r\n          defaultFilterIndex: 1,\r\n          columns: [\r\n            {\r\n              key: \"SL_ACID\",\r\n              title: \"SubLedger ID\",\r\n              hidden: false,\r\n              noSearch: false\r\n            },\r\n            {\r\n              key: \"SL_ACNAME\",\r\n              title: \"SubLedger Name\",\r\n              hidden: false,\r\n              noSearch: false\r\n            }\r\n          ]\r\n        };\r\n\r\n        \r\n        this.gridSubLedgerSettingListCr.show();\r\n      }\r\n\r\n    onSubLedgerSelectCr(value) {\r\n        // this.CrsubledgerValue =value.SL_ACNAME;\r\n        this.masterService.CR_SL_INDV_ACID=value.SL_ACID;\r\n        this.masterService.CR_SL_INDV_ACNAME=value.SL_ACNAME;\r\n        this.masterService.focusAnyControl(\"RemarksAD_\");\r\n       \r\n\r\n      }\r\n      onSubLedgerSelectAc(value) {\r\n        // this.CrsubledgerValue =value.SL_ACNAME;\r\n        this.masterService.TDS_SL_INDV_ACID=value.SL_ACID;\r\n        this.masterService.TDS_SL_INDV_ACNAME=value.SL_ACNAME;\r\n       \r\n\r\n      }\r\n      onSubLedgerSelectDr(value) {\r\n        // console.log('checkselect',value)\r\n        this.masterService.DR_SL_INDV_ACID=value.SL_ACID;\r\n        this.masterService.DR_SL_INDV_ACNAME=value.SL_ACNAME;\r\n        this.masterService.focusAnyControl(\"AmountsAD_\")\r\n        \r\n       \r\n      }\r\n\r\n      keyPress(event: any) {\r\n        if(event.key!=\"Enter\" && event.key!=\"Tab\"){\r\n            event.preventDefault();\r\n        }\r\n        \r\n    }\r\n    CalculateVat(){\r\n        console.log(\"Checkvalu7e\",this.masterService.TOTALINDAMOUNT)\r\n        if(this.masterService.TOTALINDAMOUNT){\r\n            if(this.masterService.IsTaxableBill_2 == 1){\r\n                this.masterService.AdditionalVAT_2 = Number(Number(this.masterService.TOTALINDAMOUNT*0.13).toFixed(2));\r\n            }\r\n            else{\r\n                this.masterService.AdditionalVAT_2 = 0;\r\n            }\r\n        }\r\n        \r\n    }\r\n    checkVat(){\r\n        if(this.masterService.AdditionalVAT_2 <= 0){\r\n            this.masterService.IsTaxableBill_2 = 0;\r\n        }\r\n       \r\n    }\r\n\r\n    ChangeReverseJournal(event){\r\n        event.target.checked?(this.masterService.DoReverseJournalEntry_2=1):(this.masterService.DoReverseJournalEntry_2=0);\r\n        if(event.target.checked == true){\r\n            this.genericGridACPartyForReverseJournal = this.masterService.getGenericGridPopUpSettings(\"AccountListAndSupplierForReverseJournal\");\r\n            this.genericGridACPartyReverseJournal.show();\r\n        }else if(!event.target.checked){\r\n            this.masterService.ReverseJournalACNAME_2 = '';\r\n            this.masterService.ReverseJournalACID_2 = '';\r\n        }\r\n        }\r\n        ACNameSelectForReverseJournal(value){\r\n            this.masterService.ReverseJournalACNAME_2 = value.ACNAME;\r\n            this.masterService.ReverseJournalACID_2 =value.ACID;\r\n            console.log('account values', value,this.masterService.ReverseJournalACNAME);\r\n        }\r\n\r\n        resetReverseJournalEntry(){\r\n            this.masterService.DoReverseJournalEntry_2 = 0;\r\n        }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/pages/Purchases/components/NewAdditionalCost/newIndividualCost.component .ts","import { MasterRepo } from '../../../../common/repositories/masterRepo.service';\r\nimport { Component, ViewChild, HostListener } from '@angular/core';\r\nimport { TrnMain, Trntran } from \"../../../../common/interfaces/TrnMain\";\r\nimport { FormBuilder, FormControl, FormArray, Validators, FormGroup } from \"@angular/forms\";\r\nimport { TAcList } from \"../../../../common/interfaces/Account.interface\";\r\nimport { TransactionService } from '../../../../common/Transaction Components/transaction.service';\r\nimport { GenericPopUpComponent, GenericPopUpSettings } from '../../../../common/popupLists/generic-grid/generic-popup-grid.component';\r\nimport { AuthService } from '../../../../common/services/permission';\r\nimport { AdditionalCostService,Cost, prodCost } from '../AdditionalCost/addtionalCost.service';\r\nimport { SpinnerService } from '../../../../common/services/spinner/spinner.service';\r\n// import { NewAdditionalCostService, Cost } from './newAdditionalCost.service';\r\nimport * as moment from 'moment'\r\n@Component({\r\n    selector: 'newadditionalCost',\r\n    template: require('./newadditionalCost.component.html'),\r\n    styles: [require('../../../modal-style.css'), require('../../../Style.css'), require('../../../../common/Transaction Components/halfcolumn.css')],\r\n    providers: []\r\n\r\n})\r\nexport class newadditionalCostDetail {\r\n    DrsubledgerValue:any;\r\n    CrsubledgerValue:any\r\n    subLedgerAc:number;\r\n    selectedIndex: number\r\n    TrnMainObj: TrnMain\r\n    form: FormGroup;\r\n    majorParentAcList: any[] = [];\r\n    costdata: any[] = [];\r\n    TrnProdObj: any;\r\n    allList: TAcList[] = [];\r\n    private _selectedProd: any; // this is for the product selection in drop down\r\n    GcostMode: any;\r\n    allowRowAdd: boolean = false;\r\n    public get selectedProd(): any {\r\n        return this._selectedProd;\r\n    }\r\n    public set selectedProd(value: any) {\r\n\r\n        this._selectedProd = value;\r\n\r\n    }\r\n    PI = true;\r\n    PIList: any[] = [];\r\n    PIADD = true;\r\n    qty = true;\r\n    // formdetail:any[];\r\n    userSetting: any;\r\n    TDSACCOUNTNAME:string;\r\n    REFSUPPLIERNAME:string;\r\n    ALLCHECKBOX:boolean;\r\n\r\n\r\n    @ViewChild(\"genericGridACParty\") genericGridACParty: GenericPopUpComponent;\r\n    gridACListPartyPopupSettings: GenericPopUpSettings = new GenericPopUpSettings();\r\n    @ViewChild(\"genericGridCreditACListParty\") genericGridCreditACListParty: GenericPopUpComponent;\r\n    gridCreditACListPartyPopupSettings: GenericPopUpSettings = new GenericPopUpSettings();\r\n    @ViewChild(\"genericGridItem\") genericGridItem: GenericPopUpComponent;\r\n    gridItemPopupSettings: GenericPopUpSettings = new GenericPopUpSettings();\r\n    @ViewChild(\"genericGridBatch\") genericGridBatch: GenericPopUpComponent;\r\n    gridBatchPopupSettings: GenericPopUpSettings = new GenericPopUpSettings();\r\n    // @ViewChild(\"genericGridRefBill\") genericGridRefBill: GenericPopUpComponent;\r\n    // gridPopupSettingsForRefBill: GenericPopUpSettings = new GenericPopUpSettings();\r\n    @ViewChild(\"genericGridACList\") genericGridACList: GenericPopUpComponent;\r\n    gridACListPopupSettings: GenericPopUpSettings = new GenericPopUpSettings();\r\n    @ViewChild(\"genericGridSupplier\") genericGridSupplier: GenericPopUpComponent;\r\n    gridPopupSettingsForSupplier: GenericPopUpSettings = new GenericPopUpSettings();\r\n\r\n    @ViewChild(\"gridSubLedgerSettingListCr\")gridSubLedgerSettingListCr: GenericPopUpComponent;\r\n  gridSubLedgerSettingCr: GenericPopUpSettings = new GenericPopUpSettings();\r\n  @ViewChild(\"gridSubLedgerSettingListDr\")gridSubLedgerSettingListDr: GenericPopUpComponent;\r\n  gridSubLedgerSettingDr: GenericPopUpSettings = new GenericPopUpSettings();\r\n  @ViewChild(\"gridSubLedgerSettingListAc\")gridSubLedgerSettingListAc: GenericPopUpComponent;\r\n  gridSubLedgerSettingAc: GenericPopUpSettings = new GenericPopUpSettings();\r\n  @ViewChild(\"genericGridACPartyReverseJournal\") genericGridACPartyReverseJournal: GenericPopUpComponent;\r\n  genericGridACPartyForReverseJournal : GenericPopUpSettings = new GenericPopUpSettings();\r\n    constructor(\r\n        public _addionalcostService: AdditionalCostService,\r\n        private fb: FormBuilder,\r\n        private masterService: MasterRepo,\r\n        private _transactionService: TransactionService,\r\n        public authservice: AuthService,\r\n        private loadingService: SpinnerService\r\n    ) {\r\n        this._transactionService.initialFormLoad(66);\r\n\r\n\r\n        this.TrnMainObj = _addionalcostService.TrnMainObj;\r\n        this.form = fb.group({\r\n            CREDITEDAC: ['', Validators.required],\r\n            AdditionalPurchaseAc: ['', Validators.required],\r\n            AMOUNT: ['', Validators.required],\r\n            REMARKS: [''],\r\n            MCODE: [''],\r\n            BYQUANTITY: [''],\r\n            DESCA:[''],\r\n            BATCH:[''],\r\n            BATCHID: [''],\r\n            COSTING:['']\r\n        });\r\n        // this.masterService.getpartyListTree()\r\n        //     .subscribe(data => {\r\n        //         let l = data\r\n        //         this.majorParentAcList = l;\r\n        //     });\r\n\r\n        // this.masterService.getAccount('').subscribe(data => {\r\n        //     this.allList = data;\r\n        // }\r\n\r\n        // )\r\n        this.PI = false;\r\n        this.PIADD = false;\r\n        this.qty = false;\r\n        this.IndividualPI(false);\r\n        this.masterService.focusAnyControl(\"AdditionalCostAc_\");\r\n        // this.form.get('MCODE').disable();\r\n        // this._transactionService.TrnMainObj.TrntranList.splice(-1);\r\n        this.byQuantity(\"Amount\");\r\n        this._transactionService.DrillMode = \"New\";\r\n        this.userSetting = authservice.getSetting();\r\n    }\r\n\r\n\r\n\r\n    ngOnInit() {\r\n      \r\n        this.PIList = this._addionalcostService.addtionalCostList;\r\n        // ////console.log(\"PIList\", this.PIList)\r\n        //console.log(\"mode\",this._transactionService.TrnMainObj.Mode)\r\n        if(this._transactionService.TrnMainObj.Mode == 'NEW'){\r\n            this.PI=false;\r\n            this.masterService.costType=\"GroupCost\";\r\n            this.masterService.addcosting='COSTING';\r\n            // if(this.masterService.RefObj.PURCHASE_TYPE==\"LOCALPURCHASE\"){\r\n            //     this.masterService.IsTaxableBill=0;\r\n            //     this.masterService.DoAccountPosting=0;\r\n            // }else{\r\n            // }\r\n            this.masterService.IsTaxableBill=1;\r\n            this.masterService.DoAccountPosting=1;\r\n            this.masterService.IS_ECA_ITEM=0;\r\n            this.masterService.DoReverseJournalEntry = 0;\r\n            this.masterService.focusAnyControl(\"AdditionalCostAc_\");\r\n            this.masterService.ShowMore=false;\r\n        }\r\n    }\r\n    ValuePI: any;\r\n    ItemObj:any=<any>{}\r\n    BatchList:any[]=[];\r\n    passValue() {\r\n        this.BatchList = [];\r\n       \r\n        this.ValuePI = 1;\r\n        this.form.patchValue({\r\n            MCODE:this.ItemObj.mcode,\r\n            \r\n           })\r\n    for(let i of this._addionalcostService.addtionalCostList){\r\n        if(i.menucode == this.ItemObj.mcode){\r\n            this.BatchList.push(i);\r\n        }\r\n    }\r\n        //console.log(\"valueObj1\", this.BatchList)\r\n    }\r\n    onAddClick() {\r\n        this.PI=false; //false for group costing\r\n        this.form.patchValue({\r\n            MCODE:this.masterService.mcode,\r\n            DESCA:this.masterService.desca,\r\n            BATCH:this.masterService.batch,\r\n            BATCHID:this.masterService.batchid\r\n        })\r\n        // console.log(\"Hereby\",this.form.value)\r\n        // this._addionalcostService.costdetail = [];\r\n\r\n        // this.masterService.addcosting = \"true\";\r\n        // if(this.PI == true && this.form.controls.MCODE.value == \"\"){\r\n        //     alert(\"Enter Item for Individual item cost type !\");\r\n        //     return;\r\n        // }\r\n        \r\n        // if(this.PI == true && this.form.controls.BATCH.value == \"\"){\r\n        //     alert(\"Enter batch for Individual item cost type !\");\r\n        //     return;\r\n        // }\r\n        if(this.PI == false && this.GcostMode == ''){\r\n            alert(\"Enter Group cost mode.\");\r\n            return;\r\n        }\r\n        // if( this.PI == true && this.form.controls.CREDITEDAC.value == \"\"){\r\n        //     alert(\"Enter Credited Account for Individual item cost type !\");\r\n        //     return;\r\n        // }\r\n       \r\n        if (this.masterService.AdditionalAMOUNT == \"\"||this.masterService.AdditionalAMOUNT == null) {\r\n            alert(\"Amount is required\");\r\n            return;\r\n        }\r\n\r\n        \r\n      \r\n        var desca = '';\r\n        // console.log('addtionalCostList', this._addionalcostService.addtionalCostList, this._addionalcostService.addtionalCostList)\r\n        for(let i of this._addionalcostService.addtionalCostList){\r\n            if(i.mcode == this.form.value.MCODE){\r\n                desca = i.desca\r\n            }\r\n        }\r\n        // if (this.PI == false) {\r\n        //     for (const iterator of this._addionalcostService.costList) {\r\n        //         if (iterator.amount == \"\" || iterator.amount == null) {\r\n        //             alert(\"Amount is required\");\r\n        //             return;\r\n        //         }\r\n        //     }\r\n        // }\r\n       \r\n        if(this.PI == false){\r\n            for(const iterator of this._addionalcostService.costList){\r\n                if((iterator.costAc.ACNAME == this.form.value.AdditionalPurchaseAc.ACNAME && (iterator.CostingNonCosting == 'COSTING' || iterator.CostingNonCosting == 'true'))\r\n                || (iterator.costAc.ACNAME == this.form.value.AdditionalPurchaseAc.ACNAME && (iterator.CostingNonCosting == 'NONCOSTING' || iterator.CostingNonCosting == 'false') && this.masterService.addcosting == 'COSTING')){\r\n                    alert(`Duplicate Additional Cost A/C ${this.form.value.AdditionalPurchaseAc.ACNAME}!`);\r\n                    return;\r\n                }\r\n            }\r\n        }else if(this.PI == true){\r\n            for(const iterator of this._addionalcostService.costList){\r\n                if(iterator.costAc.ACNAME == this.form.value.AdditionalPurchaseAc.ACNAME \r\n                    && iterator.mcode ==  this.form.value.MCODE\r\n                    && iterator.batch ==  this.form.value.BATCH){\r\n                    alert(\"Duplicate Additional Cost A/C and Item!\");\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n        if(this.masterService.AdditionalPurchaseAcObj ==  null || this.masterService.AdditionalPurchaseAcObj == \"\" || this.masterService.AdditionalPurchaseAcObj == undefined){\r\n            alert(\"Please enter Additional cost A/C\");\r\n            return;\r\n        }\r\n\r\n        // if(this.masterService.RefObj.PURCHASE_TYPE!=\"LOCALPURCHASE\"){\r\n        // }\r\n        if(this.masterService.AdditionalPurchaseCreditAcObj == null || this.masterService.AdditionalPurchaseCreditAcObj == \"\" || this.masterService.AdditionalPurchaseCreditAcObj == undefined){\r\n            alert(\"Please enter credited A/C !\");\r\n            return;\r\n        }\r\n\r\n        if (this.masterService.RefObj.Ref_SupplierName  == null || this.masterService.RefObj.Ref_SupplierName  == \"\" || this.masterService.RefObj.Ref_SupplierName  == undefined) {\r\n            this.masterService.RefObj.Ref_SupplierACID= \"\";\r\n            this.REFSUPPLIERNAME=\"\";\r\n        }\r\n\r\n        if (this.masterService.TDSAccount_Name == null || this.masterService.TDSAccount_Name == \"\" || this.masterService.TDSAccount_Name == undefined) {\r\n            this.masterService.TDSAccount_ACID = \"\";\r\n            this.masterService.TDSAmount = 0;\r\n            this.TDSACCOUNTNAME=\"\";\r\n        } else {\r\n            if (this.masterService.TDSAccount_ACID &&\r\n                (this.masterService.TDSAmount == null || this.masterService.TDSAmount == \"\" || this.masterService.TDSAmount == undefined || this.masterService.TDSAmount==0)) {\r\n                alert(\"Please enter TDS Amount !\");\r\n                return;\r\n            }\r\n\r\n            if(this.masterService.TDSAccount_ACID && this.masterService.TDSAmount>0){\r\n                if(this.masterService.RefObj.Ref_SupplierACID == null || this.masterService.RefObj.Ref_SupplierACID == \"\" || this.masterService.RefObj.Ref_SupplierACID == undefined ||\r\n                this.masterService.RefObj.Ref_SupplierName == null || this.masterService.RefObj.Ref_SupplierName == \"\" || this.masterService.RefObj.Ref_SupplierName == undefined){\r\n                    alert(\"Please enter Supplier !\");\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n        // if(this.masterService.RefObj.PURCHASE_TYPE ==  'LOCALPURCHASE'){\r\n            // this.masterService.IsTaxableBill = 0;\r\n            // this.masterService.DoAccountPosting = 0;\r\n            // this.masterService.IS_ECA_ITEM=0;\r\n            // if (this.masterService.IsTaxableBill == 1) {\r\n            //     alert(\"Is Taxable should be 0 for local purchase!\");\r\n            //     return;\r\n            // }\r\n\r\n            // if (this.masterService.DoAccountPosting == 1) {\r\n            //     alert(\"Do Account Posting should be 0 for local purchase!\");\r\n            //     return;\r\n            // }\r\n        // }\r\n        if (this.masterService.IsTaxableBill == 1) {\r\n            if (this.masterService.RefObj.Ref_BILLNO == null || this.masterService.RefObj.Ref_BILLNO == \"\" || this.masterService.RefObj.Ref_BILLNO == undefined ||\r\n                this.masterService.RefObj.Ref_TRNDATE == null || this.masterService.RefObj.Ref_TRNDATE == \"\" || this.masterService.RefObj.Ref_TRNDATE == undefined ||\r\n                this.masterService.RefObj.Ref_SupplierName == null || this.masterService.RefObj.Ref_SupplierName == \"\" || this.masterService.RefObj.Ref_SupplierName == undefined) {\r\n                alert(\"Ref Bill No, Ref Bill Date, Supplier Name is compulsory for taxable additional bill !\");\r\n                return;\r\n            }\r\n        }\r\n\r\n        if(this._transactionService.userSetting.ENABLESUBLEDGER==1){\r\n            if(this.masterService.DR_HASSUBLEDGER==1 && this.masterService.DR_SL_ACID==\"\"){\r\n                alert(\"Please, specify SUB LEDGER FOR A/C '\" + this.form.value.AdditionalPurchaseAc.ACNAME+ \"'\");\r\n                return;\r\n            }\r\n            if(this.masterService.CR_HASSUBLEDGER==1 && this.masterService.CR_SL_ACID==\"\"){\r\n                alert(\"Please, specify SUB LEDGER FOR A/C '\" + this.form.value.CREDITEDAC.ACNAME+ \"'\");\r\n                return;\r\n            }\r\n            if(this.masterService.TDS_HASSUBLEDGER==1 && this.masterService.TDS_SL_ACID==\"\"){\r\n                alert(\"Please, specify SUB LEDGER FOR A/C '\" + this.TDSACCOUNTNAME+ \"'\");\r\n                return;\r\n            }\r\n        }\r\n\r\n        //console.log(\"Hereby1\",this.form.value.AdditionalPurchaseAc)\r\n        // console.log(\"##this.masterService.addcosting\",this.masterService.addcosting)\r\n        let res = <Cost>{}\r\n        res.creditAc = this.form.value.CREDITEDAC;\r\n        res.remarks = this.masterService.AdditionalREMARKS;\r\n        res.costAc = this.form.value.AdditionalPurchaseAc;\r\n        res.amount = this.masterService.AdditionalAMOUNT;\r\n        res.mcode = this.form.value.MCODE\r\n        res.desca = desca;\r\n        res.batch = this.form.value.BATCH;\r\n        res.batchid = this.form.value.BATCHID;\r\n        res.CostingNonCosting = this.masterService.addcosting;\r\n        res.Ref_BILLNO = this.masterService.RefObj.Ref_BILLNO;\r\n        res.Ref_TRNDATE = this.masterService.RefObj.Ref_TRNDATE;\r\n        res.Ref_SupplierName = this.REFSUPPLIERNAME;\r\n        res.TDSAmount = this.masterService.TDSAmount;\r\n        res.TDSAccount_ACID= this.masterService.TDSAccount_ACID;\r\n        res.TDSAccount_Name = this.TDSACCOUNTNAME;\r\n        res.AdditionalDesc = this.masterService.AdditionalDesc;\r\n        res.IsTaxableBill = this.masterService.IsTaxableBill?this.masterService.IsTaxableBill:0;\r\n        res.DoAccountPosting = this.masterService.DoAccountPosting?this.masterService.DoAccountPosting:0;\r\n        res.Ref_SupplierVAT = this.masterService.RefObj.Ref_SupplierVAT;\r\n        res.Ref_SupplierACID = this.masterService.RefObj.Ref_SupplierACID;\r\n        res.Ref_BSDATE = this.masterService.RefObj.Ref_BSDATE;\r\n        res.IS_ECA_ITEM = this.masterService.IS_ECA_ITEM?this.masterService.IS_ECA_ITEM:0;\r\n        res.DR_SL_ACID = this.masterService.DR_SL_ACID;\r\n        res.DR_SL_ACNAME = this.masterService.DR_SL_ACNAME;\r\n        res.CR_SL_ACID = this.masterService.CR_SL_ACID;\r\n        res.CR_SL_ACNAME = this.masterService.CR_SL_ACNAME;\r\n        res.TDS_SL_ACID = this.masterService.TDS_SL_ACID;\r\n        res.TDS_SL_ACNAME = this.masterService.TDS_SL_ACNAME;\r\n        res.DoReverseJournalEntry = this.masterService.DoReverseJournalEntry?this.masterService.DoReverseJournalEntry:0;\r\n        res.ReverseJournalEntryACNAME = this.masterService.ReverseJournalACNAME?this.masterService.ReverseJournalACNAME:'';\r\n        res.ReverseJournalEntryACID = this.masterService.ReverseJournalACID?this.masterService.ReverseJournalACID:'';\r\n        \r\n        if(res.IsTaxableBill==0){\r\n            res.AdditionalVAT = this.masterService.AdditionalVAT=0;\r\n        }else{\r\n            res.AdditionalVAT = this.masterService.AdditionalVAT;\r\n        }\r\n\r\n\r\n        if(this.PI==false){\r\n            res.CostingType = \"Group Cost\";\r\n        }\r\n        else{\r\n            res.CostingType = \"Ind Cost\"\r\n        }\r\n\r\n        // if (this.PI == false) {\r\n        //     res.CostingNonCosting = 'COSTING';\r\n        // }\r\n        // else {\r\n        //     res.CostingNonCosting ='NONCOSTING';\r\n        // }\r\n\r\n        // let checked_costValue = document.querySelector('input[value = \"true\"]:checked');\r\n        // if (checked_costValue != null) {  //Test if something was checked\r\n        //     res.CostingNonCosting = true;\r\n            \r\n            \r\n        // } else {\r\n        //     res.CostingNonCosting = false\r\n            \r\n        // }\r\n        \r\n        \r\n        // ////console.log(\"checking group cost\", this.form.value.BYQUANTITY)\r\n        // if(this.form.value.BYQUANTITY == true){\r\n           \r\n        //     res.GCOSTMODE = \"On Qty\";\r\n        // }\r\n        // else if(this.form.value.BYQUANTITY == false){\r\n        //     res.GCOSTMODE = \"On Amount\";\r\n        // }\r\n        // else{\r\n        //     res.GCOSTMODE = \"\";\r\n        // }\r\n        if(this.GcostMode == \"Qty\"){\r\n            res.GCOSTMODE = \"On Qty\";\r\n            this.byQuantity(\"Qty\");\r\n        }else if(this.GcostMode == \"Amount\"){\r\n            res.GCOSTMODE = \"On Amount\";\r\n            this.byQuantity(\"Amount\");\r\n        }else{\r\n            res.GCOSTMODE = \"\";\r\n        }\r\n\r\n        res.byQuanty = this.form.value.BYQUANTITY;\r\n        //console.log(\"Hereby2\",this.form.value.AdditionalPurchaseAc)\r\n     //console.log(\"res$$\",res,this.form.value.AdditionalPurchaseAc)\r\n\r\n         this._addionalcostService.onAddCost(res);\r\n        // this.AddDebit();\r\n        // this.AddCredit();\r\n        this.EmptyAddCost();\r\n        if (this.ValuePI == 1)\r\n            this.PIADD = true;\r\n\r\n        //    this.form.patchValue({\r\n        //     AdditionalPurchaseAc:''\r\n        //    })\r\n        //    this.masterService.AdditionalPurchaseAcObj = ''\r\n        //    this.masterService.AdditionalPurchaseCreditAcObj = ''\r\n        this.masterService.mcode= '';\r\n        this.masterService.desca='';\r\n        this.masterService.batch='';\r\n        this.masterService.batchid='';\r\n        // if(this.PI == true){\r\n        //     this.masterService.focusAnyControl(\"_item\");\r\n        // }else{\r\n            this.masterService.focusAnyControl(\"AdditionalCostAc_\");\r\n        // }\r\n           this.BatchList = [];\r\n        //    this.ItemObj = {};\r\n        // ////console.log(\"ChecKDATAA\", this.masterService.AdditionalCostTrnTran)\r\n    }\r\n    // AddDebit() {\r\n\r\n    //     let x: Trntran = <Trntran>{};\r\n       \r\n    //     x.A_ACID = this.form.value.AdditionalPurchaseAc.ACID;\r\n    //     x.AccountItem = this.form.value.AdditionalPurchaseAc;\r\n    //     x.DRAMNT = this.form.value.AMOUNT;\r\n    //     x.CRAMNT = 0;\r\n    //     x.PartyDetails = [];\r\n    //     x.ROWMODE = \"new\";\r\n    //     x.inputMode = true;\r\n    //     x.acitem = this.form.value.AdditionalPurchaseAc;\r\n    //     this.masterService.AdditionalCostTrnTran.push(x);\r\n    // }\r\n\r\n    // AddCredit() {\r\n\r\n    //     let y: Trntran = <Trntran>{};\r\n        \r\n    //     y.A_ACID = this.form.value.AdditionalPurchaseAc.ACID;\r\n    //     y.AccountItem = this.form.value.CREDITEDAC;\r\n    //     y.DRAMNT = 0;\r\n    //     y.CRAMNT = this.form.value.AMOUNT;\r\n    //     y.PartyDetails = [];\r\n    //     y.ROWMODE = \"new\";\r\n    //     y.inputMode = true;\r\n    //     y.acitem = this.form.value.CREDITEDAC;\r\n    //     this.masterService.AdditionalCostTrnTran.push(y);\r\n\r\n    // }\r\n    EmptyAddCost() {\r\n        this.form.patchValue({\r\n            // CREDITEDAC: \"\",\r\n            // AdditionalPurchaseAc: \"\",\r\n            AMOUNT: \"\",\r\n            // REMARKS: \"\",\r\n            MCODE: \"\",\r\n            // BYQUANTITY:\"\"\r\n        })\r\n        this.masterService.AdditionalAMOUNT=\"\";\r\n        if(this.PI == false){ // empty additionalcost a/c on  groupcost radio button selection\r\n            this.masterService.AdditionalPurchaseAcObj = '';\r\n            this.masterService.AdditionalPurchaseCreditAcObj = '';\r\n            this.masterService.AdditionalREMARKS=\"\";\r\n            this.masterService.AdditionalDesc=\"\";\r\n            this.masterService.AdditionalVAT=0;\r\n            this.masterService.TDSAmount=0;\r\n            this.masterService.TDSAccount_ACID=\"\";\r\n            this.masterService.TDSAccount_Name=\"\";\r\n            this.masterService.DoAccountPosting=1;\r\n            this.masterService.IsTaxableBill=1;\r\n            this.masterService.RefObj.Ref_BILLNO=\"\";\r\n            this.masterService.RefObj.Ref_TRNDATE=\"\";\r\n            this.masterService.RefObj.Ref_BSDATE=\"\";\r\n            this.masterService.RefObj.Ref_SupplierACID=\"\";\r\n            this.masterService.RefObj.Ref_SupplierName=\"\";\r\n            this.masterService.RefObj.Ref_SupplierVAT=\"\";\r\n            this.masterService.IS_ECA_ITEM=0;\r\n            this.TDSACCOUNTNAME=\"\";\r\n            this.REFSUPPLIERNAME=\"\";\r\n            this.masterService.DR_SL_ACID='';\r\n            this.masterService.DR_SL_ACNAME='';\r\n            this.masterService.CR_SL_ACID='';\r\n            this.masterService.CR_SL_ACNAME='';\r\n            this.masterService.TDS_SL_ACID='';\r\n            this.masterService.TDS_SL_ACNAME='';\r\n            this.masterService.DR_HASSUBLEDGER=0;\r\n            this.masterService.CR_HASSUBLEDGER=0;\r\n            this.masterService.TDS_HASSUBLEDGER=0;\r\n            this.masterService.DoReverseJournalEntry = 0;\r\n            this.masterService.ReverseJournalACNAME = '';\r\n            this.masterService.ReverseJournalACID = '';\r\n            // this.masterService.disable_DrSubLedger=true;\r\n            // this.masterService.disable_CrSubLedger=true;\r\n            this.form.patchValue({\r\n                REMARKS: \"\"\r\n            })\r\n        }\r\n    }\r\n    checkRow(index){\r\n        // //console.log(\"ChecKVale\",index)\r\n    }\r\n    TableRowDoubleClickEvent(l: any) {\r\n        console.log('Reverse Journal ledgers',l);\r\n        // console.log(\"@data to be removed\", l);\r\n\r\n        if (l.CostingNonCosting =='COSTING') {\r\n            this.masterService.addcosting = 'COSTING';\r\n        }\r\n        else {\r\n            this.masterService.addcosting = 'NONCOSTING';\r\n            \r\n        }\r\n        this.allowRowAdd = false;\r\n        if(l.CostingType == \"Group Cost\"){\r\n            this.masterService.costType=\"GroupCost\";\r\n            this.IndividualPI(false);\r\n        }else if(l.CostingType == \"Ind Cost\"){\r\n            this.masterService.costType=\"IndividualCost\";\r\n            this.IndividualPI(true);\r\n        }\r\n\r\n        if(l.GCOSTMODE == \"On Qty\"){\r\n            ////console.log(\"inside on qty\");\r\n            this.GcostMode = 'Qty';\r\n            this.byQuantity('Qty');\r\n        }else if(l.GCOSTMODE == \"On Amount\"){\r\n            this.GcostMode = 'Amount';\r\n            this.byQuantity('Amount');\r\n\r\n        }else{\r\n            this.GcostMode = '';\r\n            this.form.value.BYQUANTITY = null;\r\n        }\r\n        if(l.CostingType != \"Group Cost\"){\r\n            return;\r\n        }\r\n        this.form.patchValue({ AdditionalPurchaseAc: l.costAc, CREDITEDAC: l.creditAc, AMOUNT: l.amount, REMARKS: l.remarks, MCODE: l.mcode ,\r\n            AdditionalDesc: l.AdditionalDesc, AdditionalVAT: l.AdditionalVAT, TDSAmount: l.TDSAmount,\r\n            TDSAccount_Name: l.TDSAccount_Name, DoAccountPosting:l.DoAccountPosting, IsTaxableBill:l.IsTaxableBill});\r\n        this.masterService.AdditionalPurchaseAcObj = l.costAc.ACNAME;\r\n        this.masterService.AdditionalPurchaseCreditAcObj = l.creditAc.ACNAME;\r\n        this.masterService.AdditionalAMOUNT=l.amount;\r\n        this.masterService.AdditionalREMARKS=l.remarks;\r\n        this.masterService.TDSAmount=l.TDSAmount;\r\n        this.masterService.TDSAccount_Name=l.TDSAccount_Name;\r\n        this.masterService.AdditionalDesc=l.AdditionalDesc;\r\n        this.masterService.AdditionalVAT=l.AdditionalVAT;\r\n        this.masterService.IsTaxableBill=l.IsTaxableBill;\r\n        this.masterService.DoAccountPosting=l.DoAccountPosting;\r\n        this.masterService.RefObj.Ref_BILLNO=l.Ref_BILLNO;\r\n        this.masterService.RefObj.Ref_TRNDATE=l.Ref_TRNDATE;\r\n        this.masterService.RefObj.Ref_BSDATE=l.Ref_BSDATE;\r\n        this.masterService.RefObj.Ref_SupplierACID=l.Ref_SupplierACID;\r\n        this.masterService.RefObj.Ref_SupplierName=l.Ref_SupplierName;\r\n        this.masterService.RefObj.Ref_SupplierVAT=l.Ref_SupplierVAT;\r\n        this.masterService.TDSAccount_ACID=l.TDSAccount_ACID;\r\n        this.TDSACCOUNTNAME=l.TDSAccount_Name;\r\n        this.REFSUPPLIERNAME=l.Ref_SupplierName;\r\n        this.masterService.IS_ECA_ITEM=l.IS_ECA_ITEM;\r\n        this.masterService.DR_SL_ACID=l.DR_SL_ACID;\r\n        this.masterService.DR_SL_ACNAME=l.DR_SL_ACNAME;\r\n        this.masterService.CR_SL_ACID=l.CR_SL_ACID;\r\n        this.masterService.CR_SL_ACNAME=l.CR_SL_ACNAME;\r\n        this.masterService.TDS_SL_ACID=l.TDS_SL_ACID;\r\n        this.masterService.TDS_SL_ACNAME=l.TDS_SL_ACNAME;\r\n        this.masterService.DoReverseJournalEntry =l.DoReverseJournalEntry?l.DoReverseJournalEntry:0;\r\n        this.masterService.ReverseJournalACNAME = l.ReverseJournalEntryACNAME?l.ReverseJournalEntryACNAME:'';\r\n        this.masterService.ReverseJournalACID = l.ReverseJournalEntryACID?l.ReverseJournalEntryACID:'';\r\n            // if(l.DR_SL_ACID){\r\n            //     this.masterService.disable_DrSubLedger=false;\r\n            // }\r\n            // if(l.CR_SL_ACID){\r\n            //     this.masterService.disable_CrSubLedger=false;\r\n            // }\r\n\r\n\r\n\r\n\r\n        // //console.log(\"AdditionalPurchaseAcObj\",this.masterService.AdditionalPurchaseAcObj)\r\n        // //console.log(\"AdditionalPurchaseCreditAcObj\",this.masterService.AdditionalPurchaseCreditAcObj)\r\n        let _getIndex = this._addionalcostService.costList.findIndex(x=>x.costAc.ACNAME == l.costAc.ACNAME)\r\n        this._addionalcostService.costList.splice(_getIndex,1);\r\n        this._addionalcostService.INDcostList=this._addionalcostService.costList.filter(x=>x.CostingType==\"Ind Cost\");\r\n        this._addionalcostService.GRPcostList=this._addionalcostService.costList.filter(x=>x.CostingType==\"Group Cost\");\r\n        // this._addionalcostService.onDeleteCost(l);\r\n        // this._transactionService.TrnMainObj.TrntranList.splice(index,1)\r\n        \r\n        this._transactionService.TrnMainObj.TrntranList = [];\r\n        this._addionalcostService.addCostTotAmount = this._addionalcostService.addCostTotAmount - l.amount;\r\n        this._addionalcostService.addGRPCostTotAmount = this._addionalcostService.addGRPCostTotAmount - l.amount;\r\n        this._addionalcostService.addGRPCostTotalNetAmount=0;\r\n        if(l.IsTaxableBill==1){\r\n            this._addionalcostService.addGRPCostTaxableTotalAmount = this._addionalcostService.addGRPCostTaxableTotalAmount - l.amount;\r\n            this._addionalcostService.addGRPCostTotalVat = this._addionalcostService.addGRPCostTotalVat - l.AdditionalVAT;\r\n        } \r\n        else  this._addionalcostService.addGRPCostNonTaxableTotalAmount = this._addionalcostService.addGRPCostNonTaxableTotalAmount - l.amount;                                     \r\n        this._addionalcostService.addGRPCostTotalNetAmount=this._addionalcostService.addGRPCostNonTaxableTotalAmount+this._addionalcostService.addGRPCostTaxableTotalAmount+this._addionalcostService.addGRPCostTotalVat;\r\n\r\n        if(this._addionalcostService.header)\r\n        this._addionalcostService.header.splice(this._addionalcostService.header.findIndex(x=>x.MAPPINGNAME==l.costAc.ACNAME),1)\r\n        this._addionalcostService.DeleteDynamicColumn(l.costAc.ACNAME)\r\n       \r\n        this.CalculateVat();\r\n    }\r\n\r\n    public generateCostDetails() {\r\n        this._addionalcostService.generateCostDetails();\r\n    }\r\n\r\n    IndividualPI(value) {\r\n        this.PI = value\r\n        if(this.PI==false){\r\n            this.form.get('MCODE').disable();\r\n            this.form.get('BATCH').disable();\r\n            this.GcostMode =\"Amount\";\r\n            this.form.value.BYQUANTITY = true;\r\n            this.masterService.focusAnyControl(\"AdditionalCostAc_\");\r\n        }\r\n        else if(this.PI == true){\r\n            this.form.get('MCODE').enable();\r\n            this.form.get('BATCH').enable();\r\n            this.form.value.BYQUANTITY = null;\r\n            this.GcostMode = \"\";\r\n            // document.getElementById(\"_item\").focus();\r\n            this.masterService.focusAnyControl(\"_item\");\r\n        }\r\n        this.form.patchValue({ MCODE: \"\",BATCH : value.BATCH });\r\n        this.ItemObj = value.desca;\r\n        // this.PIADD=true;\r\n\r\n    }\r\n    byQuantity(value) {\r\n        // ////console.log(\"CheckForm1\",value)\r\n        if (value == \"Qty\") {\r\n            this.form.value.BYQUANTITY = true;\r\n            this.qty = true;\r\n        }\r\n        else if(value == \"Amount\") {\r\n            this.form.value.BYQUANTITY = false;\r\n            this.qty = false;\r\n        }\r\n        else{\r\n            this.form.value.BYQUANTITY = null;\r\n        }\r\n        // ////console.log(\"CheckForm\",this.form.value.BYQUANTITY)\r\n    }\r\n    acTag: any;\r\n\r\n    TabAcBox(name) {\r\n        //    this.genericGridRefBill.show();\r\n        this.PI = false;\r\n        var passingValue = '';\r\n        if(name == 'CreditAC'){\r\n            passingValue = 'AccountListAndSupplier'\r\n            this.gridCreditACListPartyPopupSettings = this.masterService.getGenericGridPopUpSettings(passingValue);\r\n            this.acTag = 'CreditAC'\r\n            this.genericGridCreditACListParty.show();\r\n        }\r\n        else if(name == 'AC'){\r\n            // if(this.PI == true && (this.masterService.desca === undefined || this.masterService.desca === '' || this.masterService.desca === null)){\r\n            //     alert(\"Please select item first!\");\r\n            //     return;\r\n            // }\r\n            passingValue = 'AccountLedgerList';\r\n            this.gridACListPartyPopupSettings = this.masterService.getGenericGridPopUpSettings(passingValue);\r\n            this.acTag = 'AC'\r\n            this.genericGridACParty.show();\r\n        }\r\n\r\n\r\n\r\n        \r\n\r\n    }\r\n\r\n    ACNameSelect_Additional(value, name) {\r\n        // alert(\"ree123\"+value+'A'+this.acTag)\r\n        //console.log(\"value\",value)\r\n        this.form.patchValue({ AdditionalPurchaseAc: value })\r\n            this.masterService.AdditionalPurchaseAcObj = value.ACNAME;\r\n            this.genericGridACParty.hide();\r\n            this.masterService.DR_SL_ACID='';\r\n            this.masterService.DR_SL_ACNAME='';\r\n            this.masterService.DR_HASSUBLEDGER=value.HASSUBLEDGER;\r\n            if(value.HASSUBLEDGER==1 && this._transactionService.userSetting.ENABLESUBLEDGER==1){\r\n                this.onsubLedgerTabDr(value);\r\n                // this.masterService.disable_DrSubLedger=false;\r\n            }else{\r\n                // this.masterService.disable_DrSubLedger=true;\r\n            }\r\n\r\n            // this.masterService.focusAnyControl(\"Dr_Sub_ledger\")\r\n            //console.log(\"reds\",value,this.form.value.AdditionalPurchaseAc)\r\n       \r\n\r\n\r\n    }\r\n    ACNameSelect_Credit(value, name) {\r\n      \r\n        // alert(\"ree333\"+value+'A'+this.acTag)\r\n\r\n        this.form.patchValue({ CREDITEDAC: value })\r\n            this.masterService.AdditionalPurchaseCreditAcObj = value.ACNAME;\r\n            this.genericGridCreditACListParty.hide();\r\n            this.masterService.CR_SL_ACID='';\r\n            this.masterService.CR_SL_ACNAME='';\r\n            this.masterService.CR_HASSUBLEDGER=value.HASSUBLEDGER;\r\n            if(value.HASSUBLEDGER==1 && this._transactionService.userSetting.ENABLESUBLEDGER==1){\r\n                // this.masterService.disable_CrSubLedger=false;\r\n                this.onsubLedgerTabCr(value);\r\n            }else{\r\n                // this.masterService.disable_CrSubLedger=true;\r\n\r\n            }\r\n            // this.masterService.focusAnyControl(\"Cr_Sub_ledger\");\r\n\r\n    }\r\n\r\n    onsubLedgerTabAc(value) {\r\n        // this.selectedIndex = i;\r\n        this.gridSubLedgerSettingAc = {\r\n          title: \"SubLedger List\",\r\n          apiEndpoints: `/getSubLedgerByACIDPageList/${value.ACID}`,\r\n          defaultFilterIndex: 1,\r\n          columns: [\r\n            {\r\n              key: \"SL_ACID\",\r\n              title: \"SubLedger ID\",\r\n              hidden: false,\r\n              noSearch: false\r\n            },\r\n            {\r\n              key: \"SL_ACNAME\",\r\n              title: \"SubLedger Name\",\r\n              hidden: false,\r\n              noSearch: false\r\n            }\r\n          ]\r\n        };\r\n\r\n        \r\n        this.gridSubLedgerSettingListAc.show();\r\n      }\r\n    onsubLedgerTabDr(value) {\r\n        // this.selectedIndex = i;\r\n        this.gridSubLedgerSettingDr = {\r\n          title: \"SubLedger List\",\r\n          apiEndpoints: `/getSubLedgerByACIDPageList/${value.ACID}`,\r\n          defaultFilterIndex: 1,\r\n          columns: [\r\n            {\r\n              key: \"SL_ACID\",\r\n              title: \"SubLedger ID\",\r\n              hidden: false,\r\n              noSearch: false\r\n            },\r\n            {\r\n              key: \"SL_ACNAME\",\r\n              title: \"SubLedger Name\",\r\n              hidden: false,\r\n              noSearch: false\r\n            }\r\n          ]\r\n        };\r\n\r\n        \r\n        this.gridSubLedgerSettingListDr.show();\r\n      }\r\n      \r\n    onsubLedgerTabCr(value) {\r\n        // this.selectedIndex = i;\r\n        this.gridSubLedgerSettingCr = {\r\n          title: \"SubLedger List\",\r\n          apiEndpoints: `/getSubLedgerByACIDPageList/${value.ACID}`,\r\n          defaultFilterIndex: 1,\r\n          columns: [\r\n            {\r\n              key: \"SL_ACID\",\r\n              title: \"SubLedger ID\",\r\n              hidden: false,\r\n              noSearch: false\r\n            },\r\n            {\r\n              key: \"SL_ACNAME\",\r\n              title: \"SubLedger Name\",\r\n              hidden: false,\r\n              noSearch: false\r\n            }\r\n          ]\r\n        };\r\n\r\n        \r\n        this.gridSubLedgerSettingListCr.show();\r\n      }\r\n      onSubLedgerSelectCr(value) {\r\n        // this.CrsubledgerValue =value.SL_ACNAME;\r\n        this.masterService.CR_SL_ACID=value.SL_ACID;\r\n        this.masterService.CR_SL_ACNAME=value.SL_ACNAME;\r\n       \r\n\r\n      }\r\n      onSubLedgerSelectAc(value) {\r\n        // this.CrsubledgerValue =value.SL_ACNAME;\r\n        this.masterService.TDS_SL_ACID=value.SL_ACID;\r\n        this.masterService.TDS_SL_ACNAME=value.SL_ACNAME;\r\n       \r\n\r\n      }\r\n      onSubLedgerSelectDr(value) {\r\n        // console.log('checkselect',value)\r\n        // this.DrsubledgerValue =value.SL_ACNAME;\r\n        this.masterService.DR_SL_ACID=value.SL_ACID;\r\n        this.masterService.DR_SL_ACNAME=value.SL_ACNAME;\r\n        \r\n       \r\n        // if(this.subLedgerAc==1){\r\n        //   this.masterService.tdsList[0].DESCA =value.SL_ACNAME;\r\n        //   this.masterService.tdsList[0].ACID =value.SL_ACID;\r\n        //   this.subLedgerAc=0\r\n          \r\n        // }else{\r\n        //   this._transactionService.TrnMainObj.TrntranList[this.selectedIndex].SL_ACID = value.SL_ACID;\r\n        //   this._transactionService.TrnMainObj.TrntranList[this.selectedIndex].SL_ACNAME = value.SL_ACNAME;\r\n        //   this.focusNext(1, this.selectedIndex);\r\n        // }\r\n    \r\n      }\r\n\r\n      onSalesManSelect(value) {\r\n        this._transactionService.TrnMainObj.TrntranList[this.selectedIndex].SALESMAN = value.NAME;\r\n        this.masterService.focusAnyControl('narration_' + this.selectedIndex);\r\n    \r\n      }\r\n    @HostListener(\"document: keydown\", [\"$event\"])\r\n    updown($event: KeyboardEvent){\r\n        if($event.key == \"Enter\"){\r\n            $event.preventDefault();\r\n            \r\n            if(this.form.valid && this.allowRowAdd === true){\r\n                ////console.log(\"Enter pressed\")\r\n                // this.onAddClick();\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n    focusTrigger(){\r\n        this.allowRowAdd = true;\r\n    }\r\n\r\n    ItemSelect() {\r\n        if(this.masterService.RefObj.Refno === undefined || this.masterService.RefObj.Refno === '' || this.masterService.RefObj.Refno === null){\r\n            alert(\"Please select ref. PI voucher first.\");\r\n            return;\r\n        }\r\n        let _voucherno = this.masterService.RefObj.Refno;\r\n        let vchrno = _voucherno.replace(\"/\", \"ZZ\")\r\n\r\n        this.gridItemPopupSettings = {\r\n            title: \"Item List \",\r\n            apiEndpoints: `/getItemPagedListPIWise/${vchrno}/mcode`,\r\n            defaultFilterIndex: 0,\r\n            columns: [\r\n                {\r\n                    key: 'MCODE',\r\n                    title: 'Code',\r\n                    hidden: false,\r\n                    noSearch: false\r\n                },\r\n                {\r\n                    key: 'DESCRIPTION',\r\n                    title: 'Descritopnm',\r\n                    hidden: false,\r\n                    noSearch: false\r\n                }\r\n            ]\r\n        };\r\n        this.genericGridItem.show();\r\n    }\r\n\r\n    dblClickItemSelection(value) {\r\n        this.masterService.desca = value.DESCRIPTION;\r\n        this.masterService.mcode= value.MCODE;\r\n        this.masterService.batch = \"\";\r\n        this.masterService.batchid = \"\";\r\n        let _voucherno = this.masterService.RefObj.Refno;\r\n        this.masterService.getBatchOfItem(_voucherno, value.MCODE).subscribe(res => {\r\n            if (res.status == 'ok') {\r\n                //console.log(\"res\", res.result)\r\n                if (res.result && res.result.length == 1) {\r\n                    this.masterService.batch = res.result[0].BATCH;\r\n                    this.masterService.batchid = res.result[0].BATCHID;\r\n                    // if (this.masterService.AdditionalPurchaseAcObj === \"\" || this.masterService.AdditionalPurchaseAcObj === null || this.masterService.AdditionalPurchaseAcObj === undefined) {\r\n                        this.masterService.focusAnyControl(\"AdditionalCostAc_\");\r\n                    // } else {\r\n                    //     this.masterService.focusAnyControl(\"AmountsAD_\");\r\n                    // }\r\n                } else if (res.result && res.result.length > 1) {\r\n                    this.masterService.focusAnyControl(\"_batch\");\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    BatchSelect() {\r\n\r\n        if(this.masterService.batch != \"\"){\r\n            return;\r\n        }\r\n        if(this.masterService.RefObj.Refno === undefined || this.masterService.RefObj.Refno === '' || this.masterService.RefObj.Refno === null){\r\n            alert(\"Please select ref. PI voucher first.\");\r\n            return;\r\n        }\r\n        let _voucherno = this.masterService.RefObj.Refno;\r\n        let vchrno = _voucherno.replace(\"/\", \"ZZ\")\r\n        if(this.masterService.mcode === undefined || this.masterService.mcode === '' || this.masterService.mcode === null){\r\n            alert(\"Please select item first.\");\r\n            return;\r\n        }\r\n        let mcode = this.masterService.mcode;\r\n        //console.log(\"@@DISPLAY\",this.userSetting.DISPLAY)\r\n        if(this.userSetting.DISPLAY == 1){\r\n            this.gridBatchPopupSettings = {\r\n                title: \"Item List \",\r\n                apiEndpoints: `/getItemPagedListPIWise/${vchrno}/${mcode}`,\r\n                defaultFilterIndex: 0,\r\n                columns: [\r\n                    {\r\n                        key: 'BATCH',\r\n                        title: 'Batch',\r\n                        hidden: false,\r\n                        noSearch: false\r\n                    },\r\n                    {\r\n                        key: 'MfgDate',\r\n                        title: 'MfgDate',\r\n                        hidden: false,\r\n                        noSearch: false\r\n                    },\r\n                    {\r\n                        key: 'ExpDate',\r\n                        title: 'ExpDate',\r\n                        hidden: false,\r\n                        noSearch: false\r\n                    },\r\n                    {\r\n                        key: 'LANDINGCOST',\r\n                        title: 'Rate',\r\n                        hidden: false,\r\n                        noSearch: false\r\n                    },\r\n                    {\r\n                        key: 'MRP',\r\n                        title: 'Mrp',\r\n                        hidden: false,\r\n                        noSearch: false\r\n                    }\r\n                ]\r\n            };\r\n        }else{\r\n            this.gridBatchPopupSettings = {\r\n                title: \"Item List \",\r\n                apiEndpoints: `/getItemPagedListPIWise/${vchrno}/${mcode}`,\r\n                defaultFilterIndex: 0,\r\n                columns: [\r\n                    {\r\n                        key: 'BATCH',\r\n                        title: 'Batch',\r\n                        hidden: false,\r\n                        noSearch: false\r\n                    }\r\n                ]\r\n            };\r\n        }\r\n        \r\n        this.genericGridBatch.show();\r\n    }\r\n\r\n    dblClickBatchSelection(value) {\r\n        this.masterService.batch = value.BATCH;\r\n        this.masterService.batchid = value.BATCHID;\r\n        // if (this.masterService.AdditionalPurchaseAcObj === \"\" || this.masterService.AdditionalPurchaseAcObj === null || this.masterService.AdditionalPurchaseAcObj === undefined) {\r\n            this.masterService.focusAnyControl(\"AdditionalCostAc_\");\r\n        // } else {\r\n        //     this.masterService.focusAnyControl(\"AmountsAD_\");\r\n        // }\r\n    }\r\n\r\n    remarksEntered(){\r\n        if(this.PI == true){\r\n            this.onAddClick();\r\n        }\r\n    }\r\n\r\n    gcostEntered(){\r\n        if(this.PI == false){\r\n            this.onAddClick();\r\n        }\r\n    }\r\n\r\n    // TabRefBill() {\r\n    //     //console.log(\"@@PURCHASE_TYPE\",this.masterService.RefObj.PURCHASE_TYPE,this._trnMainService.userSetting.ENABLELOCALPURCHASE)\r\n    //     if(this._transactionService.userSetting.ENABLELOCALPURCHASE==0){\r\n    //       this.masterService.RefObj.PURCHASE_TYPE='ALL';\r\n    //     }else{\r\n    //       if(this._transactionService.userSetting.ENABLELOCALPURCHASE==1 && !this.masterService.RefObj.PURCHASE_TYPE){\r\n    //         this.masterService.RefObj.PURCHASE_TYPE='ALL';\r\n    //       }\r\n    //     }\r\n    //     this.gridPopupSettingsForRefBill = this.masterService.getGenericGridPopUpSettingsForAdditionalCost(\"AdditionalCost\",this.masterService.RefObj.PURCHASE_TYPE);\r\n    //     this.genericGridRefBill.show();\r\n    //   }\r\n\r\n    //   onRefBillSelected(value) {\r\n    //     // alert(\"reached\")\r\n    //     this.masterService.AdditionalPurchaseAcObj = '';\r\n    //     this.masterService.AdditionalPurchaseCreditAcObj = '';\r\n    //     this.masterService.mcode= '';\r\n    //     this.masterService.desca='';\r\n    //     this.masterService.batch='';\r\n    //     this.masterService.batchid='';\r\n    \r\n    //     this.masterService.RefObj.Refno = value.VCHRNO;\r\n    //     this.masterService.RefObj.disable = true;\r\n    //     this._transactionService.TrnMainObj.REFBILL = value.VCHRNO;\r\n    //     this.masterService.RefObj.InvoiceNo = value.REFBILL;\r\n    //     this.masterService.RefObj.SupplierName = value.ACNAME;\r\n    //     this._transactionService.TrnMainObj.PARAC=value.PARAC;\r\n    //     this.masterService.RefObj.SupplierVAT = value.BILLTOTEL;\r\n    //     this.masterService.RefObj.Ref_TRNDATE = value.TRNDATE;\r\n    //     this.masterService.RefObj.Ref_BSDATE = value.BSDATE;\r\n\r\n        \r\n    //     this.getAdditionalCost(value)\r\n    //     this.masterService.focusAnyControl(\"_AdditioanlCostRate\"+0)\r\n    //   }\r\n\r\n      TabTDSAccount(){\r\n        let TRNMODE = \"TDS\";\r\n        this.gridACListPopupSettings = {\r\n            title: \"Accounts\",\r\n            apiEndpoints: `/getAccountPagedListByMapId/Details/${TRNMODE}`,\r\n            defaultFilterIndex: 1,\r\n            columns: [\r\n              {\r\n                key: \"ACCODE\",\r\n                title: \"AC CODE\",\r\n                hidden: false,\r\n                noSearch: false\r\n              },\r\n              {\r\n                key: \"ACNAME\",\r\n                title: \"A/C NAME\",\r\n                hidden: false,\r\n                noSearch: false\r\n              }\r\n            ]\r\n          };\r\n      \r\n          this.genericGridACList.show();\r\n      }\r\n\r\n      onAcSelect(value){\r\n        this.masterService.TDSAccount_Name=value.ACNAME;\r\n        this.masterService.TDSAccount_ACID=value.ACID;\r\n        this.TDSACCOUNTNAME=value.ACNAME;\r\n        this.masterService.TDS_SL_ACID='';\r\n        this.masterService.TDS_SL_ACNAME='';\r\n        this.masterService.TDS_HASSUBLEDGER=value.HASSUBLEDGER;\r\n        if(value.HASSUBLEDGER==1 && this._transactionService.userSetting.ENABLESUBLEDGER==1){ \r\n            this.onsubLedgerTabAc(value);\r\n        }else{\r\n        }\r\n      }\r\n    \r\n    //   getAdditionalCost(value) {\r\n    //     this.loadingService.show(\"please wait. Getting purchase invoice data..\")\r\n    //     let VCHR = value.VCHRNO\r\n    //     let division = value.DIVISION;\r\n    //     let phiscalid= this.masterService.PhiscalObj.PhiscalID;\r\n\r\n    //     this.masterService.LoadTransaction(VCHR, division, phiscalid).subscribe(data => {\r\n    //       if (data) {\r\n    //         try {\r\n    //           ////console.log(\"additionalCostDataLoaded\",data.result)\r\n    //           this._addionalcostService.costList = [];\r\n    //           this._addionalcostService.costdetail = [];\r\n    //           this._addionalcostService.addtionalCostList = [];\r\n    //           this._addionalcostService.addCostTotAmount = 0;\r\n    //           //console.log(\"@@data.result.ProdList\",data.result.ProdList)\r\n    //           var result = data.result.ProdList.filter((elem1, i) => data.result.ProdList.some((elem2, j) => (elem2.MCODE === elem1.MCODE)\r\n    //              && (elem2.BATCHID == elem1.BATCHID) && j !== i));\r\n    //           //console.log(\"@@PI__result:\", result);\r\n    \r\n    //         let acs1: prodCost = <prodCost>{ mcode: \"\", menucode: \"\", desca: \"\", unit: \"\",\r\n    //                                         quantity: 0, rate: 0,amount: 0, nAmount: 0, batch:\"\",batchid:\"\" }\r\n    //         if(result.length>0){\r\n    //             result.forEach(element => {\r\n    //               acs1.mcode=element.MCODE,\r\n    //               acs1.menucode=element.MENUCODE,\r\n    //               acs1.desca=element.ITEMDESC,\r\n    //               acs1.unit=element.UNIT,\r\n    //               acs1.batch=element.BATCH,\r\n    //               acs1.rate=element.RATE,\r\n    //               acs1.quantity=element.REALQTY_IN+acs1.quantity,\r\n    //               acs1.amount=element.AMOUNT+acs1.amount,\r\n    //               acs1.nAmount=element.NETAMOUNT+acs1.nAmount,\r\n    //               acs1.batchid=element.BATCHID\r\n    //             });\r\n    //             this._addionalcostService.addtionalCostList.push(acs1);\r\n    \r\n    //             var result2 = data.result.ProdList.filter((elem1, i) => result.some((elem2, j) => (elem2.MCODE != elem1.MCODE || elem2.BATCHID != elem1.BATCHID)  && j !== i));\r\n    //             if(result2.length > 0 ){\r\n    //               //console.log(\"@@mcodediff_ac2\",result2)\r\n    //               for (let i of result2) {\r\n    //                 var acs: prodCost = <prodCost>{\r\n    //                   mcode: i.MCODE, menucode: i.MENUCODE, desca: i.ITEMDESC, unit: i.UNIT,\r\n    //                   quantity: i.REALQTY_IN, \r\n    //                   rate: i.RATE,\r\n    //                    amount: i.AMOUNT, \r\n    //                    nAmount: i.NETAMOUNT, batch:i.BATCH, batchid:i.BATCHID\r\n    //                 };\r\n    //                 this._addionalcostService.addtionalCostList.push(acs);\r\n    //               }\r\n    //             }\r\n    //         }\r\n    \r\n    //           if(this._addionalcostService.addtionalCostList.length==0){\r\n    //             //console.log(\"@@ac2\")\r\n    //           for (let i of data.result.ProdList) {\r\n    //             var acs: prodCost = <prodCost>{\r\n    //               mcode: i.MCODE, menucode: i.MENUCODE, desca: i.ITEMDESC, unit: i.UNIT,\r\n    //               quantity: i.REALQTY_IN, \r\n    //               rate: i.RATE,\r\n    //                amount: i.AMOUNT, \r\n    //                nAmount: i.NETAMOUNT, batch:i.BATCH,batchid:i.BATCHID\r\n    //             };\r\n    //             this._addionalcostService.addtionalCostList.push(acs);\r\n    //           }\r\n    //         }\r\n    //           this.masterService.batch = data.result.ProdList && data.result.ProdList.length>0 && data.result.ProdList[0].BATCH;\r\n    //           //total amount\r\n    //           this._addionalcostService.loadedTrnmain = data.result;\r\n    //           this.loadingService.hide();\r\n    //         }\r\n    //         catch (ex) { }\r\n    \r\n    //       }\r\n    //       else {\r\n    //         alert(\"Cannot Get Data from Bill no.\")\r\n    //       }\r\n    //     })\r\n    \r\n    \r\n    //   }\r\n\r\n      ChangeIsTaxableBill(value){\r\n        if(value==true ){\r\n            this.masterService.IsTaxableBill=1;\r\n            this.masterService.IS_ECA_ITEM=0;\r\n        }else{\r\n            this.masterService.IsTaxableBill=0;\r\n            this.masterService.AdditionalVAT=0;\r\n            this.masterService.IS_ECA_ITEM=1;\r\n            if(this._transactionService.userSetting.SHOW_IMPORT_DOC_ITEM==1){\r\n            }\r\n        }\r\n        this.CalculateVat();\r\n\r\n      }\r\n      ChangeECA_ITEM(value){\r\n        if(value==true ){\r\n            this.masterService.IS_ECA_ITEM=1;\r\n            this.masterService.IsTaxableBill=0;\r\n            this.masterService.AdditionalVAT=0;\r\n        }else{\r\n            this.masterService.IsTaxableBill=1;\r\n            this.masterService.IS_ECA_ITEM=0;\r\n        }\r\n        this.CalculateVat();\r\n\r\n      }\r\n      changeToBSDate(value, format: string) {\r\n        var adbs = require(\"ad-bs-converter\");\r\n        if (format == \"AD\") {\r\n        let yearValue = moment(value).year();\r\n            if (yearValue.toString().length == 4) {\r\n            var adDate = (value.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n            var bsDate = adbs.ad2bs(adDate);\r\n            bsDate.en.month = bsDate.en.month <= 9 ? \"0\" + (bsDate.en.month) : bsDate.en.month\r\n            this.masterService.RefObj.Ref_BSDATE  = \r\n            this.masterService.toADDate(value);\r\n      }\r\n        }\r\n    }\r\n\r\n    SupplierList(){\r\n        this.gridPopupSettingsForSupplier = this.masterService.getGenericGridPopUpSettings(\"Supplier\");\r\n        this.genericGridSupplier.show();\r\n    }\r\n\r\n    onSupplierSelected(value){\r\n        this.masterService.RefObj.Ref_SupplierACID = value.ACID;\r\n        this.masterService.RefObj.Ref_SupplierName = value.ACNAME;\r\n        this.masterService.RefObj.Ref_SupplierVAT = value.VATNO?value.VATNO:value.GSTNO;\r\n        this.REFSUPPLIERNAME=value.ACNAME;\r\n    }\r\n\r\n    ok() {\r\n        let abc = this.masterService.pi_costdetaillist;\r\n        // if(abc && abc.length==0){\r\n        //     alert(\"Please select any one row to load!\");\r\n        //     return;\r\n        // }\r\n        this.masterService.showCostPopup = false;\r\n        for(let data of abc){\r\n            this.form.patchValue({ AdditionalPurchaseAc: data })\r\n            this.masterService.AdditionalPurchaseAcObj = data.ACNAME;\r\n            this.masterService.AdditionalAMOUNT = data.AMOUNT;\r\n            this.masterService.costType = \"GroupCost\";\r\n            this.masterService.addcosting = 'COSTING';\r\n            this.masterService.DoAccountPosting = 0;\r\n            // this.masterService.DoReverseJournalEntry = 0;\r\n            // this.masterService.ReverseJournalACNAME = '';\r\n            // this.masterService.ReverseJournalACID = '';\r\n            this.masterService.IsTaxableBill = 0;\r\n            this.masterService.IS_ECA_ITEM = 0;\r\n            if(this._transactionService.userSetting.ENABLESUBLEDGER==1){\r\n                this.masterService.DR_SL_ACID=data.SL_ACID;\r\n                this.masterService.DR_SL_ACNAME=data.SL_ACNAME;\r\n            }\r\n            this.onAddClick();\r\n        }\r\n        \r\n    }\r\n\r\n    cancel(){\r\n        this.masterService.showCostPopup = false;\r\n    }\r\n\r\n    selectAllCheckboxes(){\r\n        // console.log(\"@@ALLCHECKBOX\",this.ALLCHECKBOX)\r\n        if(this.ALLCHECKBOX==true){\r\n            this.masterService.pi_costdetaillist.forEach(x=>x.checkbox=true);\r\n        }else{\r\n            this.masterService.pi_costdetaillist.forEach(x=>x.checkbox=false);\r\n        }\r\n    }\r\n    CalculateVat(){\r\n        console.log(\"CheckCheck\",this.masterService.AdditionalAMOUNT)\r\n        if(this.masterService.AdditionalAMOUNT){\r\n            if(this.masterService.IsTaxableBill == 1){\r\n                this.masterService.AdditionalVAT = Number(Number(this.masterService.AdditionalAMOUNT*0.13).toFixed(2));\r\n            }\r\n            else{\r\n                this.masterService.AdditionalVAT = 0;\r\n            }\r\n        }\r\n        \r\n    }\r\n    checkVat(){\r\n        if(this.masterService.AdditionalVAT <= 0){\r\n            this.masterService.IsTaxableBill = 0;\r\n        }\r\n     \r\n    }\r\n       ChangeReverseJournal(event){\r\n        event.target.checked?(this.masterService.DoReverseJournalEntry=1):(this.masterService.DoReverseJournalEntry=0);\r\n        if(event.target.checked == true){\r\n            this.genericGridACPartyForReverseJournal = this.masterService.getGenericGridPopUpSettings(\"AccountListAndSupplierForReverseJournal\");\r\n            this.genericGridACPartyReverseJournal.show();\r\n        }else if(!event.target.checked){\r\n            this.masterService.ReverseJournalACNAME = '';\r\n            this.masterService.ReverseJournalACID = '';\r\n        }\r\n        }\r\n        ACNameSelectForReverseJournal(value){\r\n            this.masterService.ReverseJournalACNAME = value.ACNAME;\r\n            this.masterService.ReverseJournalACID =value.ACID;\r\n            console.log('account values', value,this.masterService.ReverseJournalACNAME);\r\n        }\r\n        resetReverseJournalEntry(){\r\n            this.masterService.DoReverseJournalEntry = 0;\r\n        }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/pages/Purchases/components/NewAdditionalCost/newadditionalCost.component.ts","import { MasterRepo } from '../../../../common/repositories/masterRepo.service';\r\n\r\nimport { Component } from '@angular/core';\r\n\r\nimport { TrnMain } from \"../../../../common/interfaces/TrnMain\";\r\nimport { FormBuilder, FormControl, FormArray, Validators, FormGroup } from \"@angular/forms\";\r\nimport { AdditionalCostService } from '../AdditionalCost/addtionalCost.service';\r\n\r\n@Component({\r\n    selector: 'new-costingDetail',\r\n    template: require('./newcostingDetail.component.html'),\r\n    styles: [require('../../../modal-style.css'), require('../../../Style.css'), require('../../../../common/Transaction Components/halfcolumn.css')],\r\n    providers: []\r\n\r\n})\r\nexport class NewCostingDetailComponent {\r\n    TrnMainObj: TrnMain\r\n    form: FormGroup;\r\n    header: any[] = [];\r\n\r\n    constructor(public _addionalcostService: AdditionalCostService, private fb: FormBuilder, private masterService: MasterRepo,\r\n         public _additionalCostService: AdditionalCostService) {\r\n        this.TrnMainObj = _addionalcostService.TrnMainObj;\r\n        // console.log(\"headers===\" + JSON.stringify(_addionalcostService.header));\r\n        // ////console.log(\"additionalCost\", this._addionalcostService.addtionalCostList)\r\n        this.form = fb.group({\r\n            AdditionalPurchaseAc: [''],\r\n        });\r\n        this._additionalCostService.header = [{ TITLE: 'Item Code' }, { TITLE: 'Item Name' }, { TITLE: 'Batch' }, { TITLE: 'Qty' }, { TITLE: 'Amount' }]\r\n        this._additionalCostService.generateCostDetails();\r\n    }\r\n\r\n\r\n\r\n    selectAlignment(value:any){\r\n        ////console.log(\"#\",value)\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/pages/Purchases/components/NewAdditionalCost/newcostingDetail.component.ts","import { TransactionService } from './../../../../common/Transaction Components/transaction.service';\r\nimport { MasterRepo } from './../../../../common/repositories/masterRepo.service';\r\nimport { Component } from '@angular/core';\r\n// import { AdditionalCostService } from \"./addtionalCost.service\";\r\nimport { TrnMain } from \"../../../../common/interfaces/TrnMain\";\r\nimport { FormBuilder, FormControl, FormArray, Validators, FormGroup } from \"@angular/forms\";\r\nimport { AdditionalCostService } from '../AdditionalCost/addtionalCost.service';\r\n// import { NewAdditionalCostService } from './newAdditionalCost.service';\r\n\r\n@Component({\r\n    selector: 'new-purchaseDetail',\r\n    template: require('./newpurchaseDetail.component.html'),\r\n    styles: [require('../../../modal-style.css'), require('../../../Style.css'), require('../../../../common/Transaction Components/halfcolumn.css')],\r\n    providers: []\r\n\r\n})\r\nexport class NewPurchaseDetailComponent {\r\n    TrnMainObj: TrnMain\r\n    // form:FormGroup;\r\n    TrnProdlist: any[] = [];\r\n    constructor(public transactionService: TransactionService, private fb: FormBuilder, private masterService: MasterRepo, \r\n        public _additionalCostService: AdditionalCostService) {\r\n        this.TrnMainObj = this._additionalCostService.TrnMainObj;\r\n        this.TrnProdlist = (this.TrnMainObj.ProdList);\r\n    }\r\n\r\n    changeRate(value, index) {\r\n        this._additionalCostService.addtionalCostList[index].rate = value;\r\n        this._additionalCostService.addtionalCostList[index].amount = value * this._additionalCostService.addtionalCostList[index].quantity;\r\n        this._additionalCostService.addtionalCostList[index].nAmount = this._additionalCostService.addtionalCostList[index].amount * 1.13\r\n    }\r\n    EnterClickOnRate(i) {\r\n        this.masterService.focusAnyControl('_AdditioanlCostRate' + (i + 1))\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/pages/Purchases/components/NewAdditionalCost/newpurchaseDetail.component.ts","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nfunction EventEmitter() {\n  this._events = this._events || {};\n  this._maxListeners = this._maxListeners || undefined;\n}\nmodule.exports = EventEmitter;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nEventEmitter.defaultMaxListeners = 10;\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function(n) {\n  if (!isNumber(n) || n < 0 || isNaN(n))\n    throw TypeError('n must be a positive number');\n  this._maxListeners = n;\n  return this;\n};\n\nEventEmitter.prototype.emit = function(type) {\n  var er, handler, len, args, i, listeners;\n\n  if (!this._events)\n    this._events = {};\n\n  // If there is no 'error' event listener then throw.\n  if (type === 'error') {\n    if (!this._events.error ||\n        (isObject(this._events.error) && !this._events.error.length)) {\n      er = arguments[1];\n      if (er instanceof Error) {\n        throw er; // Unhandled 'error' event\n      } else {\n        // At least give some kind of context to the user\n        var err = new Error('Uncaught, unspecified \"error\" event. (' + er + ')');\n        err.context = er;\n        throw err;\n      }\n    }\n  }\n\n  handler = this._events[type];\n\n  if (isUndefined(handler))\n    return false;\n\n  if (isFunction(handler)) {\n    switch (arguments.length) {\n      // fast cases\n      case 1:\n        handler.call(this);\n        break;\n      case 2:\n        handler.call(this, arguments[1]);\n        break;\n      case 3:\n        handler.call(this, arguments[1], arguments[2]);\n        break;\n      // slower\n      default:\n        args = Array.prototype.slice.call(arguments, 1);\n        handler.apply(this, args);\n    }\n  } else if (isObject(handler)) {\n    args = Array.prototype.slice.call(arguments, 1);\n    listeners = handler.slice();\n    len = listeners.length;\n    for (i = 0; i < len; i++)\n      listeners[i].apply(this, args);\n  }\n\n  return true;\n};\n\nEventEmitter.prototype.addListener = function(type, listener) {\n  var m;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events)\n    this._events = {};\n\n  // To avoid recursion in the case that type === \"newListener\"! Before\n  // adding it to the listeners, first emit \"newListener\".\n  if (this._events.newListener)\n    this.emit('newListener', type,\n              isFunction(listener.listener) ?\n              listener.listener : listener);\n\n  if (!this._events[type])\n    // Optimize the case of one listener. Don't need the extra array object.\n    this._events[type] = listener;\n  else if (isObject(this._events[type]))\n    // If we've already got an array, just append.\n    this._events[type].push(listener);\n  else\n    // Adding the second element, need to change to array.\n    this._events[type] = [this._events[type], listener];\n\n  // Check for listener leak\n  if (isObject(this._events[type]) && !this._events[type].warned) {\n    if (!isUndefined(this._maxListeners)) {\n      m = this._maxListeners;\n    } else {\n      m = EventEmitter.defaultMaxListeners;\n    }\n\n    if (m && m > 0 && this._events[type].length > m) {\n      this._events[type].warned = true;\n      console.error('(node) warning: possible EventEmitter memory ' +\n                    'leak detected. %d listeners added. ' +\n                    'Use emitter.setMaxListeners() to increase limit.',\n                    this._events[type].length);\n      if (typeof console.trace === 'function') {\n        // not supported in IE 10\n        console.trace();\n      }\n    }\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.once = function(type, listener) {\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  var fired = false;\n\n  function g() {\n    this.removeListener(type, g);\n\n    if (!fired) {\n      fired = true;\n      listener.apply(this, arguments);\n    }\n  }\n\n  g.listener = listener;\n  this.on(type, g);\n\n  return this;\n};\n\n// emits a 'removeListener' event iff the listener was removed\nEventEmitter.prototype.removeListener = function(type, listener) {\n  var list, position, length, i;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events || !this._events[type])\n    return this;\n\n  list = this._events[type];\n  length = list.length;\n  position = -1;\n\n  if (list === listener ||\n      (isFunction(list.listener) && list.listener === listener)) {\n    delete this._events[type];\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n\n  } else if (isObject(list)) {\n    for (i = length; i-- > 0;) {\n      if (list[i] === listener ||\n          (list[i].listener && list[i].listener === listener)) {\n        position = i;\n        break;\n      }\n    }\n\n    if (position < 0)\n      return this;\n\n    if (list.length === 1) {\n      list.length = 0;\n      delete this._events[type];\n    } else {\n      list.splice(position, 1);\n    }\n\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.removeAllListeners = function(type) {\n  var key, listeners;\n\n  if (!this._events)\n    return this;\n\n  // not listening for removeListener, no need to emit\n  if (!this._events.removeListener) {\n    if (arguments.length === 0)\n      this._events = {};\n    else if (this._events[type])\n      delete this._events[type];\n    return this;\n  }\n\n  // emit removeListener for all listeners on all events\n  if (arguments.length === 0) {\n    for (key in this._events) {\n      if (key === 'removeListener') continue;\n      this.removeAllListeners(key);\n    }\n    this.removeAllListeners('removeListener');\n    this._events = {};\n    return this;\n  }\n\n  listeners = this._events[type];\n\n  if (isFunction(listeners)) {\n    this.removeListener(type, listeners);\n  } else if (listeners) {\n    // LIFO order\n    while (listeners.length)\n      this.removeListener(type, listeners[listeners.length - 1]);\n  }\n  delete this._events[type];\n\n  return this;\n};\n\nEventEmitter.prototype.listeners = function(type) {\n  var ret;\n  if (!this._events || !this._events[type])\n    ret = [];\n  else if (isFunction(this._events[type]))\n    ret = [this._events[type]];\n  else\n    ret = this._events[type].slice();\n  return ret;\n};\n\nEventEmitter.prototype.listenerCount = function(type) {\n  if (this._events) {\n    var evlistener = this._events[type];\n\n    if (isFunction(evlistener))\n      return 1;\n    else if (evlistener)\n      return evlistener.length;\n  }\n  return 0;\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  return emitter.listenerCount(type);\n};\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/events/events.js\n// module id = 1300\n// module chunks = 1 2 3","module.exports = \"\\r\\n        <div class=\\\"col-md-12\\\" style=\\\"padding:0px\\\">\\r\\n          <div class=\\\"modal-header\\\">\\r\\n            <h4 class=\\\"modal-title\\\">Select Prefix</h4>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"form-group row form-horizontal\\\" style=\\\"padding-top: 10px;\\\">\\r\\n            <label class=\\\"col-sm-4 form-control-label\\\">Voucher Type:</label>\\r\\n            <div class=\\\"col-sm-8\\\">\\r\\n              <select class=\\\"form-control\\\" [(ngModel)]=\\\"selectedVT\\\" (change)=\\\"voucherTypeChange($event.target.value)\\\" style=\\\"color:black\\\" disabled>\\r\\n            <option  *ngIf=\\\"voucherType==12\\\" value=\\\"Journal\\\">Journal</option>\\r\\n            <option   *ngIf=\\\"voucherType==17\\\" value=\\\"Payment\\\">Payment</option>\\r\\n            <option   *ngIf=\\\"voucherType==3\\\" value=\\\"Purchase\\\">Purchase</option>\\r\\n            <option   *ngIf=\\\"voucherType==5\\\" value=\\\"StockIssue\\\">Stock Issue</option>\\r\\n            <option   *ngIf=\\\"voucherType==7\\\" value=\\\"BranchTransferIn\\\">Branch Transfer In</option>\\r\\n            <option   *ngIf=\\\"voucherType==8\\\" value=\\\"BranchTransferOut\\\">Branch Transfer Out</option>\\r\\n            <option   *ngIf=\\\"voucherType==13\\\" value=\\\"BranchTransferOut\\\">Dispatch</option>\\r\\n        </select>\\r\\n\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-group row form-horizontal\\\">\\r\\n            <label class=\\\"col-sm-4 form-control-label\\\">Voucher Name:</label>\\r\\n            <div class=\\\"col-sm-8\\\">\\r\\n              <select class=\\\"form-control\\\" [(ngModel)]=\\\"prefix.VNAME\\\" (change)=\\\"prefixChanged()\\\">\\r\\n                         <option *ngFor=\\\"let un of prefixesObservable$ | async\\\" [ngValue]=\\\"un.VNAME\\\"> {{un.VOUCHERNAME}}</option>\\r\\n                         </select>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-group row form-horizontal\\\">\\r\\n            <label class=\\\"col-sm-4 form-control-label\\\">Uname:</label>\\r\\n            <div class=\\\"col-sm-8\\\">\\r\\n              <select class=\\\"form-control\\\" [(ngModel)]=\\\"prefix.VNAME\\\"\\r\\n               (change)=\\\"prefixChanged()\\\" >\\r\\n                         <option *ngFor=\\\"let un of prefixesObservable$ | async\\\" [ngValue]=\\\"un.VNAME\\\"> {{un.VNAME}}</option>\\r\\n                         </select>\\r\\n            </div>\\r\\n          </div>\\r\\n          <button title=\\\"Save\\\" class=\\\"btn btn-info\\\" data-dismiss=\\\"modal\\\" (click)=\\\"OK()\\\">Ok</button>\\r\\n\\r\\n        </div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/common/Prefix/prefix.component.html\n// module id = 1301\n// module chunks = 1 2 3","module.exports = \"<style>\\r\\n  .modal-content {\\r\\n    padding: 1px;\\r\\n    margin: 0px;\\r\\n    float: right;\\r\\n  }\\r\\n\\r\\n  tbody>tr:hover {\\r\\n    background-color: #f3f5f4;\\r\\n    cursor: pointer;\\r\\n  }\\r\\n\\r\\n  tr {\\r\\n    font-size: 11px;\\r\\n  }\\r\\n\\r\\n  .selected-row {\\r\\n    background-color: #ced6d3 !important;\\r\\n  }\\r\\n\\r\\n  .table>tbody>tr>td {\\r\\n    line-height: 30px !important;\\r\\n  }\\r\\n\\r\\n  .table>thead>tr>th {\\r\\n    line-height: 5px !important;\\r\\n  }\\r\\n\\r\\n  .table>tbody>tr>td:first-child {\\r\\n    text-align: left !important;\\r\\n    padding: 0px 0px 0px 11px !important;\\r\\n  }\\r\\n\\r\\n\\r\\n\\r\\n  .modal-content-main-area {\\r\\n    max-height: 100%;\\r\\n    height: 100%;\\r\\n    overflow: auto;\\r\\n    overflow-x: hidden;\\r\\n  }\\r\\n\\r\\n  .modal-content-summary-area {\\r\\n    max-height: 20%;\\r\\n    height: 20%;\\r\\n    overflow: auto;\\r\\n    overflow-x: hidden;\\r\\n  }\\r\\n\\r\\n  .ellipsis {\\r\\n    /* width: 220px;\\r\\n    text-overflow: ellipsis;\\r\\n    overflow: hidden; */\\r\\n    white-space: nowrap;\\r\\n  }\\r\\n\\r\\n  .checkbox label,\\r\\n  .radio label {\\r\\n    cursor: pointer;\\r\\n  }\\r\\n\\r\\n\\r\\n  .form-control[disabled],\\r\\n  .form-control[readonly],\\r\\n  fieldset[disabled] .form-control {\\r\\n    color: black;\\r\\n  }\\r\\n\\r\\n  .smallBoldLabel {\\r\\n    font-size: 11px;\\r\\n    font-weight: bold;\\r\\n    margin: 0px;\\r\\n    margin-left: 10px;\\r\\n  }\\r\\n  .input-text{\\r\\n        width : 100%; \\r\\n        /* height: 30px !important; */\\r\\n        font-weight: bold;\\r\\n    }\\r\\n    .td-class{\\r\\n        border: none !important;\\r\\n    }\\r\\n    .date-input{\\r\\n        width: 93%;\\r\\n        font-size: 12px !important;\\r\\n        height: 30px !important;\\r\\n    }\\r\\n</style>\\r\\n<!-- <div [class.modal-sticky-hide]=\\\"!isActive\\\" style=\\\"display : block; padding: 0px;position: absolute;\\r\\n                            top: 60px ;\\r\\n                            right: 55.5%;\\r\\n                            width: 100%;\\r\\n                            height: auto;\\r\\n                            z-index: 9999999;\\r\\n                            max-height: 500px;\\r\\n                            overflow-y: auto;\\\"> -->\\r\\n<!-- Modal content -->\\r\\n<!-- <div class=\\\"modal-content modal-content-main-area\\\" style=\\\"width: 42% !important\\\">\\r\\n    <div>\\r\\n      <div class=\\\"modal-header\\\" style=\\\"padding: 0px;background: #8cccfb;\\\">\\r\\n\\r\\n        <h4 class=\\\"modal-title\\\" style=\\\"text-align: center;\\\">\\r\\n          Select Filters\\r\\n        </h4>\\r\\n      </div>\\r\\n      <div class=\\\"modal-body\\\">\\r\\n        <div class=\\\"clearfix\\\">\\r\\n          <div class=\\\"col-md-12\\\" *ngIf=\\\"reportType=='Ledger Voucher'\\\">\\r\\n            <div class=\\\"col-md-6 form-group\\\">\\r\\n              <label>Ledger Type</label>\\r\\n              <select class=\\\"form-control\\\" (change)=\\\"onLedgerTypeChange();\\\" [(ngModel)]=\\\"_reportFilterService.ReportFilterObj.ledgerType\\\">\\r\\n                <option value=\\\"account\\\" selected>Account Ledger</option>\\r\\n                <option value=\\\"group\\\">Group Ledger</option>\\r\\n              </select>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"col-md-12\\\">\\r\\n            <div class=\\\"col-md-8 form-group\\\">\\r\\n              <div class=\\\"report-filter\\\" *ngIf=\\\"reportType!='OpeningBalance'\\\"> -->\\r\\n<!-- <label>Date Selection</label>\\r\\n                <input class=\\\"form-control\\\" type=\\\"text\\\" ngxDaterangepickerMd [(ngModel)]=\\\"selectedDate\\\"\\r\\n                  [showDropdowns]=\\\"true\\\" [showCustomRangeLabel]=\\\"true\\\" [alwaysShowCalendars]=\\\"true\\\" [locale]=\\\"locale\\\"\\r\\n                  [ranges]=\\\"ranges\\\" [showCancel]=\\\"true\\\" placeholder=\\\"Date Range...\\\"\\r\\n                  (ngModelChange)=\\\"dateChanged($event)\\\" /> -->\\r\\n\\r\\n<!-- <date-filters (startDateResponse)=\\\"startDateResponse($event)\\\"\\r\\n                  (endDateResponse)=\\\"endDateResponse($event)\\\"></date-filters> -->\\r\\n\\r\\n<!-- <fieldset style=\\\"width: 256px;\\\">\\r\\n                    <legend style=\\\"font-size:11px;font-weight: bold; width:auto\\\">Date Range Selection :</legend>\\r\\n                    <table>\\r\\n                        <tr>\\r\\n                            <td><label class=\\\"smallBoldLabel\\\">From:(AD)</label></td>\\r\\n                            <td><label class=\\\"smallBoldLabel\\\">To:(AD)</label></td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>\\r\\n                                <label class=\\\"smallBoldLabel\\\"><input type=\\\"date\\\"\\r\\n                                        style=\\\"min-width:50%;width: 120px;\\\" placeholder=\\\"Year Start Date\\\"\\r\\n                                        [(ngModel)]=\\\"_reportFilterService.ReportFilterObj.DATE1\\\"\\r\\n                                        (change)=\\\"changeEntryDate($event.target.value,'AD')\\\"></label>\\r\\n                            </td>\\r\\n                            <td>\\r\\n                                <label class=\\\"smallBoldLabel\\\"><input type=\\\"date\\\"\\r\\n                                        style=\\\"min-width:50%;width: 120px;\\\" placeholder=\\\"Year Start Date\\\"\\r\\n                                        [(ngModel)]=\\\"_reportFilterService.ReportFilterObj.DATE2\\\"\\r\\n                                        (change)=\\\"changeEndDate($event.target.value,'AD')\\\"></label>\\r\\n                            </td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>\\r\\n                                <label class=\\\"smallBoldLabel\\\"> <input id=\\\"nepaliDate\\\"\\r\\n                                        style=\\\"height:25px;text-align:center;min-width:50%;width: 120px;\\\"\\r\\n                                        class=\\\"nepali-calendar ndp-nepali-calendar\\\"\\r\\n                                        [(ngModel)]=\\\"_reportFilterService.ReportFilterObj.BSDATE1\\\" type=\\\"text\\\"\\r\\n                                        (change)=\\\"changeEntryDate($event.target.value,'BS')\\\"\\r\\n                                        placeholder=\\\"yyyy-mm-dd\\\" />\\r\\n                                </label>\\r\\n                \\r\\n                            </td>\\r\\n                            <td>\\r\\n                                <label class=\\\"smallBoldLabel\\\">\\r\\n                                    <input id=\\\"nepaliDate\\\" style=\\\"height:25px;text-align:center;min-width:50%;width: 120px;\\\"\\r\\n                                        class=\\\"nepali-calendar ndp-nepali-calendar\\\"\\r\\n                                        [(ngModel)]=\\\"_reportFilterService.ReportFilterObj.BSDATE2\\\" type=\\\"text\\\"\\r\\n                                        (change)=\\\"changeEndDate($event.target.value,'BS')\\\"\\r\\n                                        placeholder=\\\"yyyy-mm-dd\\\" />\\r\\n                                </label>\\r\\n                            </td>\\r\\n                        </tr>\\r\\n                    </table>\\r\\n                </fieldset> -->\\r\\n\\r\\n<!-- \\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-4 form-group\\\" style=\\\"padding-left: 0;padding-right: 0;\\\"\\r\\n            *ngIf=\\\"reportType!='OpeningBalance' && reportType!='Cash Book' && reportType!='Bank Book'\\\">\\r\\n            <label>Division Selection</label>\\r\\n            <select class=\\\"form-control\\\" [(ngModel)]=\\\"_reportFilterService.ReportFilterObj.DIV\\\" #division\\r\\n              (change)=\\\"divisionChanged()\\\">\\r\\n              <option value=\\\"%\\\" selected>ALL</option>\\r\\n              <option *ngFor=\\\"let divs of divisionList;let i=index\\\" value=\\\"{{divs.INITIAL}}\\\">{{divs.NAME}}</option>\\r\\n            </select>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"col-md-12\\\" >\\r\\n            <fieldset *ngIf=\\\"(reportType=='Ledger Voucher' && _reportFilterService.ReportFilterObj.ledgerType=='account') || reportType=='Cash Book'||reportType=='Bank Book'\\\">\\r\\n              <legend style=\\\"width: 28%\\\"> Account</legend>\\r\\n              <table>\\r\\n                <tr>\\r\\n                  <td><label class=\\\"smallBoldLabel\\\">ACCODE</label></td>\\r\\n                  <td><label class=\\\"smallBoldLabel\\\">ACNAME</label></td>\\r\\n                </tr>\\r\\n                <tr>\\r\\n                  <td>\\r\\n                    <label class=\\\"smallBoldLabel\\\">\\r\\n                      <input class=\\\"form-control\\\" tabindex=\\\"2\\\" type=\\\"text\\\" style=\\\"height:26px;width: 85px !important;\\\"\\r\\n                        (keydown.enter)=\\\"accodeChanged($event.target.value)\\\"\\r\\n                        [(ngModel)]=\\\"_reportFilterService.ReportFilterObj.ACCODE\\\">\\r\\n                    </label>\\r\\n                  </td>\\r\\n                  <td>\\r\\n                    <div>\\r\\n                      <label class=\\\"smallBoldLabel\\\">\\r\\n                        <input autocomplete=\\\"off\\\" class=\\\"form-control\\\" tabindex=\\\"2\\\" ngui-auto-complete [source]=\\\"dropListItem.bind(this)\\\"\\r\\n                          max-num-list=\\\"25\\\" [(ngModel)]=\\\"_reportFilterService.ReportFilterObj.ACCNAME\\\"\\r\\n                          list-formatter=\\\"ACNAME\\\" style=\\\"height:26px; width: 300px !important\\\"\\r\\n                          (ngModelChange)=\\\"itemChanged($event)\\\" name=\\\"AcName\\\" display-property-name=\\\"ACNAME\\\">\\r\\n                      </label>\\r\\n                    </div>\\r\\n                  </td>\\r\\n                </tr>\\r\\n              </table>\\r\\n            </fieldset> -->\\r\\n\\r\\n<!-- <fieldset *ngIf=\\\"(reportType=='Ledger Voucher' && _reportFilterService.ReportFilterObj.ledgerType=='group')\\\">\\r\\n                <legend style=\\\"width: 15%\\\"> Group</legend>\\r\\n                <table>\\r\\n                  <tr>\\r\\n                    <td><label class=\\\"smallBoldLabel\\\">ACCODE</label></td>\\r\\n                    <td><label class=\\\"smallBoldLabel\\\">ACNAME</label></td>\\r\\n                  </tr>\\r\\n                  <tr>\\r\\n                    <td>\\r\\n                      <label class=\\\"smallBoldLabel\\\">\\r\\n                        <input class=\\\"form-control\\\" readonly autocomplete=\\\"off\\\" type=\\\"text\\\" name=\\\"accode\\\" [(ngModel)]=\\\"_reportFilterService.ReportFilterObj.ACCODE\\\">\\r\\n                      </label>\\r\\n                    </td>\\r\\n                    <td>\\r\\n                      <div>\\r\\n                        <label class=\\\"smallBoldLabel\\\">\\r\\n                          <input (keydown)=\\\"preventInput($event)\\\" class=\\\"form-control\\\" autocomplete=\\\"off\\\" (keydown.enter)=\\\"onGroupEntered()\\\"  [(ngModel)]=\\\"_reportFilterService.ReportFilterObj.ACCNAME\\\" name=\\\"AcName\\\">\\r\\n                        </label>\\r\\n                      </div>\\r\\n                    </td>\\r\\n                  </tr>\\r\\n                </table>\\r\\n            </fieldset> -->\\r\\n<!-- </div>\\r\\n          <div *ngIf=\\\"reportType=='Ledger Voucher'\\\" class=\\\"col-md-12\\\">\\r\\n            <div class=\\\"checkbox\\\">\\r\\n              <label>\\r\\n                <input type=\\\"checkbox\\\" name=\\\"tc\\\" [(ngModel)]=\\\"_reportFilterService.ReportFilterObj.summaryreport\\\">\\r\\n                Is Summary?\\r\\n              </label>\\r\\n            </div>\\r\\n          </div> -->\\r\\n<!-- <div class=\\\"col-md-12\\\" *ngIf=\\\"reportType=='Voucher Register' || reportType=='Day Book'\\\">\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n              <label>VoucherType Selection</label>\\r\\n              <select class=\\\"form-control\\\" #voucherType (change)=\\\"voucherTypeChanged()\\\">\\r\\n                <option value=\\\"%\\\" selected>ALL</option>\\r\\n                <option *ngFor=\\\"let vch of vouchertypeList;let i=index\\\" value=\\\"{{vch.VOUCHER_ID}}\\\">{{vch.vOUCHER_NAME}}\\r\\n                </option>\\r\\n              </select>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n              <label>Show Narration</label>\\r\\n              <select #showNarration class=\\\"form-control\\\" #voucherType (change)=\\\"showNarrationChanged()\\\">\\r\\n                <option value=1 selected>Yes</option>\\r\\n                <option value=0>No</option>\\r\\n              </select>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div *ngIf=\\\"reportType=='TBL'\\\" class=\\\"col-md-12\\\">\\r\\n            <div class=\\\"col-md-7\\\" style=\\\"padding-right:0px;padding-left:0px\\\">\\r\\n              <div class=\\\"col-md-12 checkbox\\\" style=\\\"padding-top:5px\\\">\\r\\n                <label>\\r\\n                  <input type=\\\"checkbox\\\" [(ngModel)]=\\\"_reportFilterService.ReportFilterObj.showClosingBalance\\\">Show\\r\\n                  Closing Balance\\r\\n                </label>\\r\\n              </div>\\r\\n              <div class=\\\"col-md-12 checkbox\\\" style=\\\"padding-top:5px\\\">\\r\\n                <label>\\r\\n                  <input type=\\\"checkbox\\\" [(ngModel)]=\\\"_reportFilterService.ReportFilterObj.showOpeningBalance\\\">Show\\r\\n                  Opening Balance\\r\\n                </label>\\r\\n              </div>\\r\\n              <div class=\\\"col-md-12 checkbox\\\" style=\\\"padding-top:5px\\\">\\r\\n                <label>\\r\\n                  <input type=\\\"checkbox\\\" [(ngModel)]=\\\"_reportFilterService.ReportFilterObj.showTransaction\\\">Show\\r\\n                  Transaction\\r\\n                </label>\\r\\n              </div>\\r\\n\\r\\n              <fieldset>\\r\\n                <legend style=\\\"font-size:11px;font-weight: bold; width:auto\\\" >Report Option </legend>\\r\\n                <div class=\\\"col-md-12 checkbox\\\" style=\\\"padding-top:5px\\\">\\r\\n                  <label>\\r\\n                    <input type=\\\"checkbox\\\" [(ngModel)]=\\\"_reportFilterService.ReportFilterObj.showPartylistInTrialBalance\\\">Show Party List In Trial Balance \\r\\n                    \\r\\n                  </label>\\r\\n                </div>       \\r\\n                <div class=\\\"col-md-12 checkbox\\\" style=\\\"padding-top:5px\\\">\\r\\n                  <label>\\r\\n                    <input type=\\\"checkbox\\\" [(ngModel)]=\\\"_reportFilterService.ReportFilterObj.showSubLedgerInTrialBalance\\\">Show Sub Ledger In Trail Balance\\r\\n                    \\r\\n                  </label>\\r\\n                </div>       \\r\\n                  <div class=\\\"col-md-12 checkbox\\\"  style=\\\"padding-top:5px\\\">\\r\\n                    <label>\\r\\n                      <input type=\\\"checkbox\\\" [(ngModel)]=\\\"_reportFilterService.ReportFilterObj.showClosingStockValueInTrialBalance\\\">Show Closing Stock Value On Trail B/L                  \\r\\n                    </label>\\r\\n                  </div>\\r\\n                  <div class=\\\"col-md-12 checkbox\\\"  style=\\\"padding-top:5px\\\">\\r\\n                    <label>\\r\\n                      <input type=\\\"checkbox\\\" [(ngModel)]=\\\"_reportFilterService.ReportFilterObj.showOpeningTrialBalanceOnly\\\">Show Opening Trail Balance Only                  \\r\\n                    </label>\\r\\n                  </div>\\r\\n  \\r\\n              </fieldset>\\r\\n        \\r\\n                <div class=\\\"col-md-12 checkbox\\\" *ngIf=\\\"reportType=='TBL'\\\" style=\\\"padding-top:5px\\\">\\r\\n                  <label>\\r\\n                    <input type=\\\"checkbox\\\" [(ngModel)]=\\\"_reportFilterService.ReportFilterObj.isZeroBalance\\\">Show\\r\\n                    Zero B/L A/C in Trial\\r\\n                  </label>\\r\\n                </div>\\r\\n              \\r\\n            </div>\\r\\n            <div class=\\\"col-md-5\\\" style=\\\"padding-right:0px;padding-left:0px\\\">\\r\\n              <div class=\\\"col-md-12\\\" style=\\\"padding-top:5px;padding-left:0px\\\">\\r\\n                <fieldset>\\r\\n                  <div class=\\\"radio\\\">\\r\\n                    <label><input type=\\\"radio\\\" name=\\\"summary\\\" [value]=true\\r\\n                        [(ngModel)]=\\\"_reportFilterService.ReportFilterObj.isSummary\\\"\\r\\n                        [disabled]=\\\"_reportFilterService.ReportFilterObj.isLedgerWise\\\"\\r\\n                        (change)=\\\"_reportFilterService.ReportFilterObj.showAllLevel=false;queryAndLoadData(_reportFilterService.ReportFilterObj.tblDataStore)\\\">\\r\\n                      Summary\\r\\n                      Report &nbsp;[F2]</label>\\r\\n                  </div>\\r\\n                  <div class=\\\"radio\\\">\\r\\n                    <label>\\r\\n                      <input type=\\\"radio\\\" name=\\\"summary\\\" [value]=false\\r\\n                        [(ngModel)]=\\\"_reportFilterService.ReportFilterObj.isSummary\\\"\\r\\n                        [disabled]=\\\"_reportFilterService.ReportFilterObj.isLedgerWise\\\"\\r\\n                        (change)=\\\"queryAndLoadData(_reportFilterService.ReportFilterObj.tblDataStore)\\\">\\r\\n                      Detail Report &nbsp; [F3]\\r\\n                    </label>\\r\\n\\r\\n\\r\\n                  </div>\\r\\n\\r\\n                  <div class=\\\"checkbox\\\">\\r\\n                    <label>\\r\\n                      <input\\r\\n                        [disabled]=\\\"_reportFilterService.ReportFilterObj.isLedgerWise || _reportFilterService.ReportFilterObj.isSummary\\\"\\r\\n                        type=\\\"checkbox\\\" [(ngModel)]=\\\"_reportFilterService.ReportFilterObj.showAllLevel \\\"\\r\\n                        (change)=\\\"queryAndLoadData(_reportFilterService.ReportFilterObj.tblDataStore)\\\">Show all Level\\r\\n                    </label>\\r\\n                  </div>\\r\\n\\r\\n                </fieldset>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"col-md-12\\\" style=\\\"padding-top:5px;padding-left:0px\\\">\\r\\n                <fieldset>\\r\\n                  <div class=\\\"radio\\\">\\r\\n                    <label>\\r\\n                      <input type=\\\"radio\\\" name=\\\"groupWise\\\" [value]=false\\r\\n                        [(ngModel)]=\\\"_reportFilterService.ReportFilterObj.isLedgerWise\\\"\\r\\n                        (change)=\\\"queryAndLoadData(_reportFilterService.ReportFilterObj.tblDataStore)\\\">\\r\\n                      Groupwise &nbsp; [F6]\\r\\n                    </label>\\r\\n                  </div>\\r\\n                  <div class=\\\"radio\\\">\\r\\n                    <label>\\r\\n                      <input type=\\\"radio\\\" name=\\\"groupWise\\\" [value]=true\\r\\n                        [(ngModel)]=\\\"_reportFilterService.ReportFilterObj.isLedgerWise\\\"\\r\\n                        (change)=\\\"queryAndLoadData(_reportFilterService.ReportFilterObj.tblDataStore)\\\">\\r\\n                      LedgerWise &nbsp; [F7]\\r\\n\\r\\n                    </label>\\r\\n                  </div>\\r\\n                </fieldset>\\r\\n              </div>\\r\\n\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div *ngIf=\\\"reportType=='BS' || reportType=='PL'\\\" class=\\\"col-md-12\\\">\\r\\n            <div class=\\\"col-md-12\\\">\\r\\n              <fieldset>\\r\\n                <legend style=\\\"font-size: 14px !important;width:30% !important;margin-bottom:10px !important\\\">Stock\\r\\n                  Evaluation</legend>\\r\\n                <div class=\\\"col-md-12\\\" style=\\\"margin-top:10px; \\\">\\r\\n                  <div class=\\\"opening\\\">\\r\\n                    <div class=\\\"col-md-3\\\" style=\\\"padding: 0px;\\\">\\r\\n                      <label style=\\\"padding-top:5px\\\">Opening :</label>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-md-9\\\" style=\\\"padding: 0px;\\\">\\r\\n                      <input type=\\\"text\\\" OnlyNumber=true class=\\\"form-control\\\"\\r\\n                        [readonly]=\\\"_reportFilterService.ReportFilterObj.stockCalcAuto\\\"\\r\\n                        [(ngModel)]=_reportFilterService.ReportFilterObj.openingStock>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-12\\\" style=\\\"margin-top:10px; \\\">\\r\\n                  <div class=\\\"closing\\\">\\r\\n                    <div class=\\\"col-md-3\\\" style=\\\"padding: 0px;\\\">\\r\\n                      <label style=\\\"padding-top:5px\\\">Closing :</label>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-md-9\\\" style=\\\"padding: 0px;\\\">\\r\\n                      <input type=\\\"text\\\" OnlyNumber=true class=\\\"form-control\\\"\\r\\n                        [readonly]=\\\"_reportFilterService.ReportFilterObj.stockCalcAuto\\\"\\r\\n                        [(ngModel)]=_reportFilterService.ReportFilterObj.closingStock>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n                [disabled]=\\\"!_reportFilterService.ReportFilterObj.stockCalcAuto\\\"\\r\\n                <!-- <div class=\\\"col-md-12\\\" style=\\\"margin-top:10px; \\\">\\r\\n                  <div class=\\\"pl-action\\\">\\r\\n                    <div class=\\\"cal-btn col-md-4\\\" style=\\\"padding: 0px;\\\">\\r\\n                      <button  class=\\\"btn btn-info\\\"\\r\\n                        (click)=\\\"calcStock()\\\">Calculate</button>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </fieldset>\\r\\n            </div>\\r\\n          </div> -->\\r\\n\\r\\n<!-- <div *ngIf=\\\"reportType=='BS'\\\" class=\\\"col-md-12\\\">\\r\\n            <div class=\\\"col-md-12\\\">\\r\\n            <fieldset style=\\\"margin-top: 20px;\\\">\\r\\n              <legend style=\\\"font-size: 14px !important;width:30% !important;margin-bottom:10px !important\\\" >Report Option </legend>\\r\\n              <div class=\\\"col-md-12 checkbox\\\" style=\\\"padding-top:5px\\\">\\r\\n                <label>\\r\\n                  <input type=\\\"checkbox\\\" [(ngModel)]=\\\"_reportFilterService.ReportFilterObj.ShowSubLedgerBS\\\" (change)=\\\"\\r\\n                  $event.target.checked\\r\\n                    ? (_reportFilterService.ReportFilterObj.ShowSubLedgerBS = 1)\\r\\n                    : (_reportFilterService.ReportFilterObj.ShowSubLedgerBS = 0)\\\">&nbsp;&nbsp;Show Sub Ledger \\r\\n                </label>\\r\\n              </div>       \\r\\n              <div class=\\\"col-md-12 checkbox\\\" style=\\\"padding-top:5px\\\">\\r\\n                <label>\\r\\n                  <input type=\\\"checkbox\\\" [(ngModel)]=\\\"_reportFilterService.ReportFilterObj.SHOWDEBTORSCREDITORSBS\\\" (change)=\\\"\\r\\n                  $event.target.checked\\r\\n                    ? (_reportFilterService.ReportFilterObj.SHOWDEBTORSCREDITORSBS = 1)\\r\\n                    : (_reportFilterService.ReportFilterObj.SHOWDEBTORSCREDITORSBS = 0)\\\">&nbsp;&nbsp;Show Debtors / Credtors List\\r\\n                </label>\\r\\n              </div>     \\r\\n            </fieldset>\\r\\n          </div>\\r\\n          </div>\\r\\n\\r\\n          <div *ngIf=\\\"reportType=='PL'\\\" class=\\\"col-md-12\\\">\\r\\n            <div class=\\\"col-md-12\\\">\\r\\n            <fieldset style=\\\"margin-top: 20px;\\\">\\r\\n              <legend style=\\\"font-size: 14px !important;width:30% !important;margin-bottom:10px !important\\\" >Report Option </legend>\\r\\n              <div class=\\\"col-md-12 checkbox\\\" style=\\\"padding-top:5px\\\">\\r\\n                <label>\\r\\n                  <input type=\\\"checkbox\\\" [(ngModel)]=\\\"_reportFilterService.ReportFilterObj.ShowSubLedgerPL\\\" (change)=\\\"\\r\\n                  $event.target.checked\\r\\n                    ? (_reportFilterService.ReportFilterObj.ShowSubLedgerPL = 1)\\r\\n                    : (_reportFilterService.ReportFilterObj.ShowSubLedgerPL = 0)\\\">&nbsp;&nbsp;Show Sub Ledger \\r\\n                </label>\\r\\n              </div>          \\r\\n            </fieldset>\\r\\n          </div>\\r\\n          </div> -->\\r\\n<!-- </div>\\r\\n      </div>  -->\\r\\n\\r\\n<!-- <hr style=\\\"margin-bottom: 0px !important;margin-top: 5px !important\\\">\\r\\n      <div class=\\\"clearfix\\\" style=\\\"padding: 10px;\\\">\\r\\n        <button class=\\\"btn btn-info pull-right\\\" style=\\\"margin-left: 10px;\\\" (click)=\\\"popupClose()\\\">Cancel</button>\\r\\n        <button class=\\\"btn btn-info pull-right\\\" (click)=\\\"applyClicked()\\\">Apply</button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div> -->\\r\\n\\r\\n<div *ngIf=\\\"reportType=='TBL'\\\" [class.modal-sticky-hide]=\\\"!isActive\\\" style=\\\"display : block; padding: 0px;position: absolute;\\r\\n                            top: 20% ;\\r\\n                            right: 15%;\\r\\n                            height: auto;\\r\\n                            z-index: 9999999;\\r\\n                            max-height: 500px;\\r\\n                            overflow-y: auto;\\r\\n                            width: 62%;\\\">\\r\\n  <!-- Modal content -->\\r\\n  <div class=\\\"modal-content modal-content-main-area\\\">\\r\\n    <div style=\\\"background-color : #ffffff; padding :1%; height : auto;  \\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"modal-header\\\" style=\\\"width : 97%; margin : 0px auto;\\\">\\r\\n          <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" (click)=\\\"popupClose()\\\">&times;</button>\\r\\n          <h4 class=\\\"modal-title\\\">Trial Balance Report</h4>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-12\\\" style=\\\"padding-top: 2%;\\\">\\r\\n          <!-- Left Column -->\\r\\n          <div class=\\\"col-md-6\\\">\\r\\n\\r\\n            <fieldset>\\r\\n              <legend style=\\\"font-size:11px;font-weight: bold; width:auto\\\">Date Range Selection :</legend>\\r\\n              <table>\\r\\n                <tr>\\r\\n                  <td class=\\\"td-class\\\"><label class=\\\"smallBoldLabel\\\">From:(AD)</label></td>\\r\\n                  <td class=\\\"td-class\\\"><label class=\\\"smallBoldLabel\\\">To:(AD)</label></td>\\r\\n                </tr>\\r\\n                <tr>\\r\\n                  <td class=\\\"td-class\\\">\\r\\n                      <input type=\\\"date\\\" class=\\\"date-input form-control\\\" placeholder=\\\"Year Start Date\\\"\\r\\n                        [(ngModel)]=\\\"_reportFilterService.ReportFilterObj.DATE1\\\"\\r\\n                        (change)=\\\"changeEntryDate($event.target.value,'AD')\\\" max=\\\"{{_masterRepo.date1 | date:'yyyy-MM-dd'}}\\\" min=\\\"{{_masterRepo.date2 | date:'yyyy-MM-dd'}}\\\">\\r\\n                  </td>\\r\\n                  <td class=\\\"td-class\\\">\\r\\n                      <input type=\\\"date\\\" class=\\\"date-input form-control\\\" placeholder=\\\"Year Start Date\\\"\\r\\n                        [(ngModel)]=\\\"_reportFilterService.ReportFilterObj.DATE2\\\"\\r\\n                        (change)=\\\"changeEndDate($event.target.value,'AD')\\\" max=\\\"{{_masterRepo.date1 | date:'yyyy-MM-dd'}}\\\" min=\\\"{{_masterRepo.date2 | date:'yyyy-MM-dd'}}\\\">\\r\\n                  </td>\\r\\n                </tr>\\r\\n                <tr>\\r\\n                  <td>\\r\\n                       <input id=\\\"nepaliDate\\\"\\r\\n                       style=\\\"text-align:center;\\\"\\r\\n                       class=\\\"nepali-calendar ndp-nepali-calendar date-input form-control\\\"\\r\\n                        type=\\\"text\\\" [(ngModel)]=\\\"_reportFilterService.ReportFilterObj.BSDATE1\\\"\\r\\n                        (change)=\\\"changeEntryDate($event.target.value,'BS')\\\" placeholder=\\\"yyyy-mm-dd\\\" />\\r\\n\\r\\n                  </td>\\r\\n                  <td>\\r\\n                      <input id=\\\"nepaliDate\\\" style=\\\"text-align:center;\\\"\\r\\n                      class=\\\"nepali-calendar ndp-nepali-calendar date-input form-control\\\" type=\\\"text\\\"\\r\\n                        [(ngModel)]=\\\"_reportFilterService.ReportFilterObj.BSDATE2\\\"\\r\\n                        (change)=\\\"changeEndDate($event.target.value,'BS')\\\" placeholder=\\\"yyyy-mm-dd\\\" />\\r\\n                  </td>\\r\\n                </tr>\\r\\n              </table>\\r\\n            </fieldset>\\r\\n\\r\\n            <fieldset>\\r\\n              <legend style=\\\"font-size:11px;font-weight: bold; width:auto\\\">Division Selection :</legend>\\r\\n              <select  [(ngModel)]=\\\"_reportFilterService.ReportFilterObj.DIV\\\" style=\\\"height: 30px !important;\\\" \\r\\n              class=\\\"form-control input-text\\\">\\r\\n              <option value=\\\"%\\\" *ngIf=\\\"_masterRepo.userSetting.userwisedivision==0 ||  _masterRepo.showAll\\\">ALL</option>\\r\\n                <option *ngFor=\\\"let div of divisionList\\\" value=\\\"{{ div.INITIAL }}\\\">\\r\\n                  {{ div.NAME }}\\r\\n                </option>\\r\\n              </select>\\r\\n            </fieldset>\\r\\n\\r\\n            <fieldset>\\r\\n              <legend style=\\\"font-size:11px;font-weight: bold; width:auto\\\">Cost Center :</legend>\\r\\n              <select [(ngModel)]=\\\"_reportFilterService.ReportFilterObj.TBL_CostCenter\\\"\\r\\n              style=\\\"height: 30px !important;\\\" \\r\\n              class=\\\"form-control input-text\\\">\\r\\n                  <option value=\\\"%\\\"> </option>\\r\\n                  <option *ngFor=\\\"let i of CostcenterList\\\" value={{i.CCID}}>{{i.COSTCENTERNAME}}\\r\\n                  </option>\\r\\n              </select>\\r\\n          </fieldset>\\r\\n\\r\\n\\r\\n          </div>\\r\\n          <!-- Right Column -->\\r\\n          <div class=\\\"col-md-6\\\">\\r\\n            <div class=\\\"col-md-12\\\">\\r\\n              <div class=\\\"col-md-5\\\">\\r\\n                <fieldset style=\\\"padding-bottom: 5px; width: 150%; margin-left: -40px;\\\">\\r\\n                  <legend style=\\\"font-size:11px;font-weight: bold; width:auto\\\">Report Mode :</legend>\\r\\n                  <label class=\\\"smallBoldLabel\\\"><input type=\\\"radio\\\" name=\\\"summary\\\" [value]=true\\r\\n                      [(ngModel)]=\\\"_reportFilterService.ReportFilterObj.isSummary\\\"\\r\\n                      [disabled]=\\\"_reportFilterService.ReportFilterObj.isLedgerWise\\\"\\r\\n                      (change)=\\\"_reportFilterService.ReportFilterObj.showAllLevel=false;  \\\">&nbsp;Summary\\r\\n                    Report\\r\\n                    [F2]</label>\\r\\n                  <label class=\\\"smallBoldLabel\\\"><input type=\\\"radio\\\" name=\\\"summary\\\" [value]=false\\r\\n                      [(ngModel)]=\\\"_reportFilterService.ReportFilterObj.isSummary\\\"\\r\\n                      [disabled]=\\\"_reportFilterService.ReportFilterObj.isLedgerWise\\\"\\r\\n                      >&nbsp;Detail Report\\r\\n                    [F3]\\r\\n                  </label>\\r\\n                  <label class=\\\"smallBoldLabel\\\" style=\\\"padding-left: 15px;\\\"><input\\r\\n                      [disabled]=\\\"_reportFilterService.ReportFilterObj.isLedgerWise || _reportFilterService.ReportFilterObj.isSummary\\\"\\r\\n                      type=\\\"checkbox\\\" [(ngModel)]=\\\"_reportFilterService.ReportFilterObj.showAllLevel \\\"\\r\\n                      >&nbsp;Show\\r\\n                    All Level [F4]\\r\\n                  </label>\\r\\n\\r\\n                </fieldset>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"col-md-7\\\">\\r\\n                <fieldset style=\\\"padding-bottom: 5px; margin-left: 17px; width: 100%; padding-bottom: 28px;\\\">\\r\\n                  <legend style=\\\"font-size:11px;font-weight: bold; width:auto\\\">Report Format :</legend>\\r\\n                  <label class=\\\"smallBoldLabel\\\"><input type=\\\"radio\\\" name=\\\"groupWise\\\" [value]=false\\r\\n                      [(ngModel)]=\\\"_reportFilterService.ReportFilterObj.isLedgerWise\\\"\\r\\n                      >&nbsp;Group Wise\\r\\n                    Format\\r\\n                    [F6]</label>\\r\\n                  <label class=\\\"smallBoldLabel\\\" style=\\\"clear : both;\\\"><input type=\\\"radio\\\" name=\\\"groupWise\\\" [value]=true\\r\\n                      [(ngModel)]=\\\"_reportFilterService.ReportFilterObj.isLedgerWise\\\"\\r\\n                      >&nbsp;Ledger Wise\\r\\n                    Format [F7]\\r\\n                  </label>\\r\\n\\r\\n                </fieldset>\\r\\n              </div>\\r\\n\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"col-md-12\\\">\\r\\n              <fieldset style=\\\"padding-bottom: 5px; width: 107%; margin-left: -26px;margin-bottom: 10px;\\\">\\r\\n                <legend style=\\\"font-size:11px;font-weight: bold; width:auto\\\">Report Options :</legend>\\r\\n                <label class=\\\"smallBoldLabel\\\"><input type=\\\"checkbox\\\"\\r\\n                    [(ngModel)]=\\\"_reportFilterService.ReportFilterObj.SHOWOPENINGTRIALONLY\\\"   >&nbsp;Show Opening Trial\\r\\n                  Balance Report\\r\\n                  Only</label>\\r\\n                <label class=\\\"smallBoldLabel\\\"><input type=\\\"checkbox\\\"\\r\\n                    [(ngModel)]=\\\"_reportFilterService.ReportFilterObj.showPartylistInTrialBalance\\\"   >&nbsp;Show\\r\\n                  Debtors/Creditors Party List\\r\\n                </label>\\r\\n                <label class=\\\"smallBoldLabel\\\"><input type=\\\"checkbox\\\"\\r\\n                    [(ngModel)]=\\\"_reportFilterService.ReportFilterObj.showSubLedgerInTrialBalance\\\"   >&nbsp;Show Sub Ledger\\r\\n                  In Trial Balance\\r\\n                </label>\\r\\n                <label class=\\\"smallBoldLabel\\\"><input type=\\\"checkbox\\\"\\r\\n                    [(ngModel)]=\\\"_reportFilterService.ReportFilterObj.showClosingStockValueInTrialBalance\\\"   >&nbsp;Show\\r\\n                  Closing Stock Value In Trial\\r\\n                  Balance\\r\\n                </label>\\r\\n                <label class=\\\"smallBoldLabel\\\"><input type=\\\"checkbox\\\"\\r\\n                    [(ngModel)]=\\\"_reportFilterService.ReportFilterObj.isZeroBalance\\\"   >&nbsp;Show Zero B/L A/C In Report\\r\\n                </label>\\r\\n\\r\\n              </fieldset>\\r\\n            </div>\\r\\n\\r\\n        \\r\\n\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"modal-footer\\\" style=\\\"width : 97%; margin : 0px auto;\\\">\\r\\n          <button class=\\\"btn btn-info confirm-btn\\\" type=\\\"button\\\" (click)=applyClicked()>RUN</button>\\r\\n          <button type=\\\"button\\\" (click)=\\\"popupClose()\\\" title=\\\"Cancel\\\" class=\\\"btn btn-info\\\">Close</button>\\r\\n        </div>\\r\\n\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div *ngIf=\\\"reportType=='PL'\\\" [class.modal-sticky-hide]=\\\"!isActive\\\" style=\\\"display : block; padding: 0px;position: absolute;\\r\\n                            top: 20% ;\\r\\n                            right: 20%;\\r\\n                            height: auto;\\r\\n                            z-index: 5;\\r\\n                            max-height: 500px;\\r\\n                            overflow-y: auto;\\r\\n                            width: 58%;\\\">\\r\\n  <!-- Modal content -->\\r\\n  <div class=\\\"modal-content modal-content-main-area\\\">\\r\\n    <div style=\\\"background-color : #ffffff; padding :1%; height : auto;  \\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"modal-header\\\" style=\\\"width : 97%; margin : 0px auto;\\\">\\r\\n          <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" (click)=\\\"popupClose()\\\">&times;</button>\\r\\n          <h4 class=\\\"modal-title\\\">Profit & Loss A/C</h4>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-12\\\" style=\\\"padding-top: 2%;\\\">\\r\\n          <!-- Left Column -->\\r\\n          <div class=\\\"col-md-6\\\">\\r\\n\\r\\n            <fieldset>\\r\\n              <legend style=\\\"font-size:11px;font-weight: bold; width:auto\\\">Date Range Selection :</legend>\\r\\n              <table>\\r\\n                <tr>\\r\\n                  <td class=\\\"td-class\\\"><label class=\\\"smallBoldLabel\\\">From:(AD)</label></td>\\r\\n                  <td class=\\\"td-class\\\"><label class=\\\"smallBoldLabel\\\">To:(AD)</label></td>\\r\\n                </tr>\\r\\n                <tr>\\r\\n                  <td class=\\\"td-class\\\">\\r\\n                      <input type=\\\"date\\\" class=\\\"date-input form-control\\\"\\r\\n                        placeholder=\\\"Year Start Date\\\" [(ngModel)]=\\\"_reportFilterService.ReportFilterObj.DATE1\\\"\\r\\n                        (change)=\\\"changeEntryDate($event.target.value,'AD')\\\"  max=\\\"{{_masterRepo.date1 | date:'yyyy-MM-dd'}}\\\" min=\\\"{{_masterRepo.date2 | date:'yyyy-MM-dd'}}\\\">\\r\\n                  </td>\\r\\n                  <td class=\\\"td-class\\\">\\r\\n                      <input type=\\\"date\\\" class=\\\"date-input form-control\\\"\\r\\n                        placeholder=\\\"Year Start Date\\\" [(ngModel)]=\\\"_reportFilterService.ReportFilterObj.DATE2\\\"\\r\\n                        (change)=\\\"changeEndDate($event.target.value,'AD')\\\"  max=\\\"{{_masterRepo.date1 | date:'yyyy-MM-dd'}}\\\" min=\\\"{{_masterRepo.date2 | date:'yyyy-MM-dd'}}\\\">\\r\\n                  </td>\\r\\n                </tr>\\r\\n                <tr>\\r\\n                  <td class=\\\"td-class\\\">\\r\\n                    <nepali-date-picker name=\\\"nepaliDateFrom\\\" [id]=\\\"'nepaliDatefrom'\\\"\\r\\n                    (change)=\\\"changeEntryDate($event.detail.value,'BS')\\\"\\r\\n                    [label]=\\\"'From'\\\"\\r\\n                    [(ngModel)]=\\\"_reportFilterService.ReportFilterObj.BSDATE1\\\">\\r\\n                    </nepali-date-picker>\\r\\n                      <!-- <input id=\\\"nepaliDate\\\"\\r\\n                      style=\\\"text-align:center;\\\"\\r\\n                      class=\\\"nepali-calendar ndp-nepali-calendar date-input form-control\\\" type=\\\"text\\\"\\r\\n                        [(ngModel)]=\\\"_reportFilterService.ReportFilterObj.BSDATE1\\\"\\r\\n                        (change)=\\\"changeEntryDate($event.target.value,'BS')\\\" placeholder=\\\"yyyy-mm-dd\\\" /> -->\\r\\n                  </td>\\r\\n                  <td class=\\\"td-class\\\">\\r\\n                    <nepali-date-picker name=\\\"nepaliDateFrom\\\" [id]=\\\"'nepaliDateTo'\\\"\\r\\n                      (change)=\\\"changeEndDate($event.detail.value,'BS')\\\"\\r\\n                      [label]=\\\"'To'\\\"\\r\\n                      [(ngModel)]=\\\"_reportFilterService.ReportFilterObj.BSDATE2\\\">\\r\\n                      </nepali-date-picker>\\r\\n                      <!-- <input id=\\\"nepaliDate\\\" style=\\\"text-align:center;\\\"\\r\\n                      class=\\\"nepali-calendar ndp-nepali-calendar date-input form-control\\\" type=\\\"text\\\"\\r\\n                        [(ngModel)]=\\\"_reportFilterService.ReportFilterObj.BSDATE2\\\"\\r\\n                        (change)=\\\"changeEndDate($event.target.value,'BS')\\\" placeholder=\\\"yyyy-mm-dd\\\" /> -->\\r\\n                  </td>\\r\\n                </tr>\\r\\n              </table>\\r\\n            </fieldset>\\r\\n\\r\\n            <fieldset style=\\\"margin-top: 10px;\\\">\\r\\n              <legend style=\\\"font-size:11px;font-weight: bold; width:auto\\\">Stock\\r\\n                Evaluation :</legend>\\r\\n              <div class=\\\"col-md-12\\\" style=\\\"margin-top:5px;\\\">\\r\\n                <div class=\\\"opening\\\">\\r\\n                  <div class=\\\"col-md-4\\\" style=\\\"padding: 0px;\\\">\\r\\n                    <label class=\\\"smallBoldLabel\\\" style=\\\"margin-left: 0px;padding-top:5px;margin-top: -10px;\\\">Opening Stock:</label>\\r\\n                  </div>\\r\\n                  <div class=\\\"col-md-8\\\" style=\\\"padding: 0px;\\\">\\r\\n                    <input type=\\\"text\\\" OnlyNumber=true class=\\\"form-control\\\" style=\\\"height: 25px;margin-top: -10px;\\\"\\r\\n                      [readonly]=\\\"_reportFilterService.ReportFilterObj.stockCalcAuto\\\"\\r\\n                      [(ngModel)]=_reportFilterService.ReportFilterObj.openingStock>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"col-md-12\\\" style=\\\"margin-top:5px;\\\">\\r\\n                <div class=\\\"closing\\\">\\r\\n                  <div class=\\\"col-md-4\\\" style=\\\"padding: 0px;\\\">\\r\\n                    <label class=\\\"smallBoldLabel\\\" style=\\\"margin-left: 0px; padding-top:5px;\\\">Closing Stock:</label>\\r\\n                  </div>\\r\\n                  <div class=\\\"col-md-8\\\" style=\\\"padding: 0px;\\\">\\r\\n                    <input type=\\\"text\\\" OnlyNumber=true class=\\\"form-control\\\" style=\\\"height: 25px;\\\"\\r\\n                      [readonly]=\\\"_reportFilterService.ReportFilterObj.stockCalcAuto\\\"\\r\\n                      [(ngModel)]=_reportFilterService.ReportFilterObj.closingStock>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"col-md-12\\\" style=\\\"margin-top:10px; \\\">\\r\\n                <div class=\\\"pl-action\\\">\\r\\n                  <div class=\\\"cal-btn col-md-4\\\" style=\\\"padding: 0px; float:right;\\\">\\r\\n                    <button class=\\\"btn btn-info\\\" style=\\\" float:right;\\\" (click)=\\\"calcStock()\\\">Calculate</button>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </fieldset>\\r\\n\\r\\n\\r\\n          </div>\\r\\n          <!-- Right Column -->\\r\\n          <div class=\\\"col-md-6\\\">\\r\\n\\r\\n            <fieldset *ngIf=\\\"userSetting.IS_NESTLE == 1\\\">\\r\\n              <legend style=\\\"font-size:11px;font-weight: bold; width:auto\\\">Company Selection :</legend>\\r\\n              <select [(ngModel)]=\\\"_reportFilterService.ReportFilterObj.COMPANYTYPE\\\"\\r\\n              style=\\\"height: 30px !important;\\\" \\r\\n              class=\\\"form-control input-text\\\">\\r\\n                <option value=\\\"DMS\\\">DMS</option>\\r\\n                <option value=\\\"NONDMS\\\">NON DMS</option>\\r\\n              </select>\\r\\n            </fieldset>\\r\\n\\r\\n            <fieldset>\\r\\n              <legend style=\\\"font-size:11px;font-weight: bold; width:auto\\\">Division Selection :</legend>\\r\\n              <select [(ngModel)]=\\\"_reportFilterService.ReportFilterObj.DIV\\\"\\r\\n              style=\\\"height: 30px !important;\\\" \\r\\n              class=\\\"form-control input-text\\\">\\r\\n              <option value=\\\"%\\\" *ngIf=\\\"_masterRepo.userSetting.userwisedivision==0 ||  _masterRepo.showAll\\\">ALL</option>\\r\\n                <option *ngFor=\\\"let div of divisionList\\\" value=\\\"{{ div.INITIAL }}\\\">\\r\\n                  {{ div.NAME }}\\r\\n                </option>\\r\\n              </select>\\r\\n            </fieldset>\\r\\n\\r\\n            <div class=\\\"checkbox\\\" style=\\\"padding-top:10px\\\">\\r\\n              <label class=\\\"smallBoldLabel\\\" style=\\\"margin-left: 0px;\\\">\\r\\n                <input type=\\\"checkbox\\\" [(ngModel)]=\\\"_reportFilterService.ReportFilterObj.ShowSubLedgerPL\\\" (change)=\\\"\\r\\n                $event.target.checked\\r\\n                  ? (_reportFilterService.ReportFilterObj.ShowSubLedgerPL = 1)\\r\\n                  : (_reportFilterService.ReportFilterObj.ShowSubLedgerPL = 0)\\\">&nbsp;&nbsp;Show Sub Ledger In Profit &\\r\\n                Loss A/C\\r\\n              </label>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"modal-footer\\\" style=\\\"width : 97%; margin : 0px auto;\\\">\\r\\n          <button class=\\\"btn btn-info confirm-btn\\\" type=\\\"button\\\" (click)=applyClicked()>RUN</button>\\r\\n          <button type=\\\"button\\\" (click)=\\\"popupClose()\\\" title=\\\"Cancel\\\" class=\\\"btn btn-info\\\">Close</button>\\r\\n        </div>\\r\\n\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div *ngIf=\\\"reportType=='BS'\\\" [class.modal-sticky-hide]=\\\"!isActive\\\" style=\\\"display : block; padding: 0px;position: absolute;\\r\\n                            top: 20% ;\\r\\n                            right: 20%;\\r\\n                            height: auto;\\r\\n                            z-index: 5;\\r\\n                            max-height: 500px;\\r\\n                            overflow-y: auto;\\r\\n                            width: 58%;\\\">\\r\\n  <!-- Modal content -->\\r\\n  <div class=\\\"modal-content modal-content-main-area\\\">\\r\\n    <div style=\\\"background-color : #ffffff; padding :1%; height : auto;  \\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"modal-header\\\" style=\\\"width : 97%; margin : 0px auto;\\\">\\r\\n          <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" (click)=\\\"popupClose()\\\">&times;</button>\\r\\n          <h4 class=\\\"modal-title\\\">Balance Sheet</h4>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-12\\\" style=\\\"padding-top: 2%;\\\">\\r\\n          <!-- Left Column -->\\r\\n          <div class=\\\"col-md-6\\\">\\r\\n\\r\\n            <fieldset>\\r\\n              <legend style=\\\"font-size:11px;font-weight: bold; width:auto\\\">Date Range Selection :</legend>\\r\\n              <table>\\r\\n                <tr>\\r\\n                  <td class=\\\"td-class\\\"><label class=\\\"smallBoldLabel\\\">From:(AD)</label></td>\\r\\n                  <td class=\\\"td-class\\\"><label class=\\\"smallBoldLabel\\\">To:(AD)</label></td>\\r\\n                </tr>\\r\\n                <tr>\\r\\n                  <td class=\\\"td-class\\\">\\r\\n                      <input type=\\\"date\\\" class=\\\"date-input form-control\\\"\\r\\n                        placeholder=\\\"Year Start Date\\\" [(ngModel)]=\\\"_reportFilterService.ReportFilterObj.DATE1\\\"\\r\\n                        (change)=\\\"changeEntryDate($event.target.value,'AD')\\\" max=\\\"{{_masterRepo.date1 | date:'yyyy-MM-dd'}}\\\" min=\\\"{{_masterRepo.date2 | date:'yyyy-MM-dd'}}\\\">\\r\\n                  </td>\\r\\n                  <td class=\\\"td-class\\\">\\r\\n                      <input type=\\\"date\\\" class=\\\"date-input form-control\\\"\\r\\n                        placeholder=\\\"Year Start Date\\\" [(ngModel)]=\\\"_reportFilterService.ReportFilterObj.DATE2\\\"\\r\\n                        (change)=\\\"changeEndDate($event.target.value,'AD')\\\" max=\\\"{{_masterRepo.date1 | date:'yyyy-MM-dd'}}\\\" min=\\\"{{_masterRepo.date2 | date:'yyyy-MM-dd'}}\\\">\\r\\n                  </td>\\r\\n                </tr>\\r\\n                <tr>\\r\\n                  <td class=\\\"td-class\\\">\\r\\n                    <nepali-date-picker name=\\\"nepaliDateFrom\\\" [id]=\\\"'nepaliDatefrom'\\\"\\r\\n                    (change)=\\\"changeEntryDate($event.detail.value,'BS')\\\"\\r\\n                    [label]=\\\"'From'\\\"\\r\\n                    [(ngModel)]=\\\"_reportFilterService.ReportFilterObj.BSDATE1\\\">\\r\\n                    </nepali-date-picker>\\r\\n                       <!-- <input id=\\\"nepaliDate\\\"\\r\\n                       style=\\\"text-align:center;\\\"\\r\\n                       class=\\\"nepali-calendar ndp-nepali-calendar date-input form-control\\\" type=\\\"text\\\"\\r\\n                        [(ngModel)]=\\\"_reportFilterService.ReportFilterObj.BSDATE1\\\"\\r\\n                        (change)=\\\"changeEntryDate($event.target.value,'BS')\\\" placeholder=\\\"yyyy-mm-dd\\\" /> -->\\r\\n                  </td>\\r\\n                  <td class=\\\"td-class\\\">\\r\\n                    <nepali-date-picker name=\\\"nepaliDateFrom\\\" [id]=\\\"'nepaliDateTo'\\\"\\r\\n                    (change)=\\\"changeEndDate($event.detail.value,'BS')\\\"\\r\\n                    [label]=\\\"'To'\\\"\\r\\n                    [(ngModel)]=\\\"_reportFilterService.ReportFilterObj.BSDATE2\\\">\\r\\n                    </nepali-date-picker>\\r\\n                      <!-- <input id=\\\"nepaliDate\\\" style=\\\"text-align:center;\\\"\\r\\n                      class=\\\"nepali-calendar ndp-nepali-calendar date-input form-control\\\" type=\\\"text\\\"\\r\\n                        [(ngModel)]=\\\"_reportFilterService.ReportFilterObj.BSDATE2\\\"\\r\\n                        (change)=\\\"changeEndDate($event.target.value,'BS')\\\" placeholder=\\\"yyyy-mm-dd\\\" /> -->\\r\\n                  </td>\\r\\n                </tr>\\r\\n              </table>\\r\\n            </fieldset>\\r\\n\\r\\n\\r\\n\\r\\n            <fieldset style=\\\"margin-top: 10px;\\\">\\r\\n              <legend style=\\\"font-size:11px;font-weight: bold; width:auto\\\">Stock\\r\\n                Evaluation :</legend>\\r\\n              <div class=\\\"col-md-12\\\" style=\\\"margin-top:5px;\\\">\\r\\n                <div class=\\\"opening\\\">\\r\\n                  <div class=\\\"col-md-4\\\" style=\\\"padding: 0px;\\\">\\r\\n                    <label class=\\\"smallBoldLabel\\\" style=\\\"margin-left: 0px;padding-top:5px;margin-top: -10px;\\\">Opening Stock:</label>\\r\\n                  </div>\\r\\n                  <div class=\\\"col-md-8\\\" style=\\\"padding: 0px;\\\">\\r\\n                    <input type=\\\"text\\\" OnlyNumber=true class=\\\"form-control\\\" style=\\\"height: 25px;margin-top: -10px;\\\"\\r\\n                      [readonly]=\\\"_reportFilterService.ReportFilterObj.stockCalcAuto\\\"\\r\\n                      [(ngModel)]=_reportFilterService.ReportFilterObj.openingStock>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"col-md-12\\\" style=\\\"margin-top:5px;\\\">\\r\\n                <div class=\\\"closing\\\">\\r\\n                  <div class=\\\"col-md-4\\\" style=\\\"padding: 0px;\\\">\\r\\n                    <label class=\\\"smallBoldLabel\\\" style=\\\"margin-left: 0px; padding-top:5px;\\\">Closing Stock:</label>\\r\\n                  </div>\\r\\n                  <div class=\\\"col-md-8\\\" style=\\\"padding: 0px;\\\">\\r\\n                    <input type=\\\"text\\\" OnlyNumber=true class=\\\"form-control\\\" style=\\\"height: 25px;\\\"\\r\\n                      [readonly]=\\\"_reportFilterService.ReportFilterObj.stockCalcAuto\\\"\\r\\n                      [(ngModel)]=_reportFilterService.ReportFilterObj.closingStock>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"col-md-12\\\" style=\\\"margin-top:10px; \\\">\\r\\n                <div class=\\\"pl-action\\\">\\r\\n                  <div class=\\\"cal-btn col-md-4\\\" style=\\\"padding: 0px; float:right;\\\">\\r\\n                    <button class=\\\"btn btn-info\\\" style=\\\" float:right;\\\" (click)=\\\"calcStock()\\\">Calculate</button>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </fieldset>\\r\\n\\r\\n\\r\\n          </div>\\r\\n          <!-- Right Column -->\\r\\n          <div class=\\\"col-md-6\\\">\\r\\n\\r\\n            <fieldset *ngIf=\\\"userSetting.IS_NESTLE == 1\\\">\\r\\n              <legend style=\\\"font-size:11px;font-weight: bold; width:auto\\\">Company Selection :</legend>\\r\\n              <select [(ngModel)]=\\\"_reportFilterService.ReportFilterObj.COMPANYTYPE\\\"\\r\\n              style=\\\"height: 30px !important;\\\" \\r\\n              class=\\\"form-control input-text\\\">\\r\\n                <option value=\\\"DMS\\\">DMS</option>\\r\\n                <option value=\\\"NONDMS\\\">NON DMS</option>\\r\\n              </select>\\r\\n            </fieldset>\\r\\n            \\r\\n            <fieldset>\\r\\n              <legend style=\\\"font-size:11px;font-weight: bold; width:auto\\\">Division Selection :</legend>\\r\\n              <select [(ngModel)]=\\\"_reportFilterService.ReportFilterObj.DIV\\\"\\r\\n              style=\\\"height: 30px !important;\\\" \\r\\n              class=\\\"form-control input-text\\\">\\r\\n              <option value=\\\"%\\\" *ngIf=\\\"_masterRepo.userSetting.userwisedivision==0 ||  _masterRepo.showAll\\\">ALL</option>\\r\\n                <option *ngFor=\\\"let div of divisionList\\\" value=\\\"{{ div.INITIAL }}\\\">\\r\\n                  {{ div.NAME }}\\r\\n                </option>\\r\\n              </select>\\r\\n            </fieldset>\\r\\n\\r\\n            <fieldset style=\\\"margin-top: 10px;\\\">\\r\\n              <legend style=\\\"font-size:11px;font-weight: bold; width:auto\\\">Report\\r\\n                Options :</legend>\\r\\n              <div class=\\\"col-md-12 checkbox\\\" style=\\\"padding-top:5px\\\">\\r\\n                <label class=\\\"smallBoldLabel\\\" style=\\\"margin-left: 0px;\\\">\\r\\n                  <input type=\\\"checkbox\\\" [(ngModel)]=\\\"_reportFilterService.ReportFilterObj.ShowSubLedgerBS\\\" (change)=\\\"\\r\\n                  $event.target.checked\\r\\n                    ? (_reportFilterService.ReportFilterObj.ShowSubLedgerBS = 1)\\r\\n                    : (_reportFilterService.ReportFilterObj.ShowSubLedgerBS = 0)\\\">&nbsp;&nbsp;Show Sub Ledger In\\r\\n                  Balance Sheet\\r\\n                </label>\\r\\n              </div>\\r\\n              <div class=\\\"col-md-12 checkbox\\\" style=\\\"padding-top:5px\\\">\\r\\n                <label class=\\\"smallBoldLabel\\\" style=\\\"margin-left: 0px;\\\">\\r\\n                  <input type=\\\"checkbox\\\" [(ngModel)]=\\\"_reportFilterService.ReportFilterObj.SHOWDEBTORSCREDITORSBS\\\"\\r\\n                    (change)=\\\"\\r\\n                  $event.target.checked\\r\\n                    ? (_reportFilterService.ReportFilterObj.SHOWDEBTORSCREDITORSBS = 1)\\r\\n                    : (_reportFilterService.ReportFilterObj.SHOWDEBTORSCREDITORSBS = 0)\\\">&nbsp;&nbsp;Show Debtors /\\r\\n                  Creditors Party List\\r\\n                </label>\\r\\n              </div>\\r\\n            </fieldset>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"modal-footer\\\" style=\\\"width : 97%; margin : 0px auto;\\\">\\r\\n          <button class=\\\"btn btn-info confirm-btn\\\" type=\\\"button\\\" (click)=applyClicked()>RUN</button>\\r\\n          <button type=\\\"button\\\" (click)=\\\"popupClose()\\\" title=\\\"Cancel\\\" class=\\\"btn btn-info\\\">Close</button>\\r\\n        </div>\\r\\n\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n<generic-popup-grid #genericGrid [popupsettings]=\\\"gridPopupSettings\\\" (onItemDoubleClick)=\\\"onItemSelected($event)\\\">\\r\\n</generic-popup-grid>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/common/popupLists/report-filter/report-filter.component.html\n// module id = 1302\n// module chunks = 1 2 3","module.exports = \".table td, .table th{\\r\\n    padding: 0px !important;\\r\\n  }\\r\\n\\r\\ntbody {\\r\\n    /* display:block; */\\r\\n    height:53vh;\\r\\n    overflow:scroll;\\r\\n}\\r\\n\\r\\nthead, tbody tr {\\r\\n  display:table;\\r\\n  width:100%;\\r\\n  table-layout:fixed;/* even columns width , fix width of table too*/\\r\\n}\\r\\n\\r\\nth{\\r\\n  font-size: 15px;\\r\\n  font-weight: bold;\\r\\n  font-family: Roboto,Arial,sans-serif;\\r\\n}\\r\\n\\r\\ntd{\\r\\n  font-size: 13px;\\r\\n  font-family: Roboto,Arial,sans-serif;\\r\\n\\r\\n}\\r\\n\\r\\n.table tbody tr td{\\r\\n  line-height: 40px;\\r\\n}\\r\\n\\r\\ninput,select{\\r\\n    height: 28px;\\r\\n}\\r\\n\\r\\n.form-control{\\r\\n    font-size: 13px !important;\\r\\n}\\r\\n\\r\\n.date-field{\\r\\n  display: flex;\\r\\n  flex-direction: row;\\r\\n  justify-content: space-between;\\r\\n}\\r\\n\\r\\n.filter-label{\\r\\n  width: 100px; \\r\\n  padding-top: 5px;\\r\\n}\\r\\n\\r\\n.form-control[disabled], .form-control[readonly], fieldset[disabled] .form-control {\\r\\n  pointer-events: none; /* Prevents interaction with the disabled rows */\\r\\n  background-color: #C0C0C0 !important; \\r\\n  color: black;\\r\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/AccountVoucher/components/BulkPrint/bulk-print.component.css\n// module id = 1303\n// module chunks = 1 2 3","module.exports = \"<div class=\\\"sticky-top\\\">\\r\\n    <div class=\\\"clearfix\\\">\\r\\n      <div class=\\\"col-md-4\\\">\\r\\n        <!-- <h2 style=\\\"color: black;\\\">Bank Reconciliation </h2> -->\\r\\n        <label style=\\\"font-family: Segoe UI Light;font-weight: bold;font-size: 20px;padding-left: 5%;padding-top: 1%;width: 100%;\\\">Multiple Voucher Print (Bulk Print)</label>\\r\\n      </div>\\r\\n      <!-- <div class=\\\"col-md-7\\\">\\r\\n        <button style=\\\"margin: 4px 4px;\\\" class=\\\"btn btn-info pull-right\\\" (click)='SaveRenum()'>\\r\\n          Update\\r\\n        </button>\\r\\n  \\r\\n      </div> -->\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"main-container\\\">\\r\\n      <div class=\\\"row\\\" style=\\\"margin: 0px 15px ; border: 1px solid #e6e6e6; padding: 10px 10px;\\\">\\r\\n        <div class=\\\"col-md-10\\\">\\r\\n          <div class=\\\"row\\\">\\r\\n         \\r\\n            <div class=\\\"col-md-12\\\">\\r\\n                <div class=\\\"form-group row\\\">\\r\\n                    \\r\\n                  <div class=\\\"col-md-3\\\">\\r\\n                    <div class=\\\"date-field\\\">\\r\\n                      <label class=\\\"form-control-label filter-label\\\">Voucher: </label>\\r\\n                      <select class=\\\"form-control\\\" [(ngModel)]=\\\"voucherPrefix\\\" (change)=\\\"onVoucherTypeChange($event)\\\">\\r\\n                        <option value=\\\"\\\" disabled selected hidden>Select Voucher</option>\\r\\n                        <option value=\\\"JV\\\">Journal Voucher</option>\\r\\n                        <option value=\\\"CV\\\">Contra Voucher</option>\\r\\n                        <option value=\\\"PV\\\">Payment Voucher</option>\\r\\n                        <option value=\\\"RV\\\">Receipt Voucher</option>\\r\\n        \\r\\n                    </select>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-3\\\">\\r\\n                  <div class=\\\"date-field\\\">\\r\\n                    <label class=\\\"form-control-label filter-label\\\" style=\\\"margin-right: 10px;\\\" for=\\\"\\\">From</label>\\r\\n                    <input class=\\\"form-control\\\" type=\\\"number\\\" min=\\\"1\\\"  [(ngModel)]=\\\"FROM\\\" placeholder=\\\"Enter Voucher No.\\\">\\r\\n                  </div>\\r\\n\\r\\n                </div>\\r\\n                <div class=\\\"col-md-3\\\">\\r\\n                  <div class=\\\"date-field\\\">\\r\\n                    <label class=\\\"form-control-label filter-label\\\" for=\\\"\\\">To</label>\\r\\n                    <input class=\\\"form-control\\\" type=\\\"number\\\" min=\\\"1\\\" [(ngModel)]=\\\"TO\\\" placeholder=\\\"Enter Voucher No.\\\">\\r\\n                  </div>\\r\\n\\r\\n                </div>\\r\\n                <div class=\\\"col-md-1\\\">\\r\\n                  <button [disabled]=\\\"voucherPrefix == ''\\\" (click)=\\\"LoadVoucherWiseList(voucherPrefix)\\\" class=\\\"btn btn-info\\\">LOAD</button>\\r\\n               </div>\\r\\n               <div class=\\\"col-md-1\\\">\\r\\n                <button [disabled]=\\\"masterService.voucherListsForBulkPrint.length==0\\\" (click)=\\\"onPrintClicked()\\\" class=\\\"btn btn-info\\\">PRINT</button>\\r\\n             </div>\\r\\n             <div class=\\\"col-md-1\\\">\\r\\n              <button (click)=\\\"onReset()\\\" class=\\\"btn btn-info\\\">RESET</button>\\r\\n           </div>\\r\\n                </div>\\r\\n    \\r\\n            </div>\\r\\n    \\r\\n          </div>\\r\\n    \\r\\n          \\r\\n        </div>\\r\\n\\r\\n       <!-- <div class=\\\"col-md-1\\\" style=\\\"margin: 0px 30px;\\\">\\r\\n        <button (click)=\\\"exportTOExcel(voucherLists, 'VoucherList')\\\" class=\\\"btn btn-info pull-right\\\">Export Renumering</button>\\r\\n     </div> -->\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"clearfix\\\" style=\\\"margin-top: 5px;\\\">\\r\\n        <div class=\\\"card-header\\\" style=\\\"    background: #4472C4;\\r\\n        color: #ffff;\\\">\\r\\n\\r\\n        <span class=\\\"col-md-6\\\">Voucher Lists</span>\\r\\n\\r\\n\\r\\n      </div>\\r\\n\\r\\n        <div class=\\\"row\\\" style=\\\"height: 60vh;\\\">\\r\\n            <table class=\\\"table table-striped\\\" style=\\\"width: 98%;\\\">\\r\\n            <thead>\\r\\n                <tr style=\\\"position: sticky; top:0;line-height: 2.4rem; border-bottom: 1px solid #E6E6E6; border-top: 1px solid #E6E6E6;\\r\\n                background:#C0C0C0;\\r\\n                color: black;\\\">\\r\\n                    <th scope=\\\"col\\\" style=\\\"width: 5%;\\\" *ngIf=\\\"masterService.voucherListsForBulkPrint && masterService.voucherListsForBulkPrint.length > 0\\\"><input (change)=\\\"onSelectAllClicked()\\\" class=\\\"form-check-input\\\" type=\\\"checkbox\\\" [(ngModel)]=\\\"SelectAll\\\" style=\\\"margin-left: 7px;\\\"> <label for=\\\"\\\" style=\\\" width: 20px; font-size: 16px; font-weight: 600;margin-left: 30px;height: 10px;\\\">All</label></th>\\r\\n                    <th scope=\\\"col\\\" style=\\\"width: 5%;\\\">S.N</th>\\r\\n                    <th scope=\\\"col\\\" style=\\\"width: 10%;\\\">TRN DATE</th>\\r\\n                    <th scope=\\\"col\\\" style=\\\"width: 10%;\\\">VOUCHER NO</th>\\r\\n                    <!-- <th scope=\\\"col\\\" style=\\\"width: 10%;\\\">TRNDATE</th> -->\\r\\n                    <!-- <th scope=\\\"col\\\" style=\\\"width: 10%;\\\">TRN_BSDATE</th> -->\\r\\n                    <th scope=\\\"col\\\" style=\\\"width: 10%;\\\">AMOUNT</th>\\r\\n                    <th scope=\\\"col\\\" style=\\\"width: 10%;\\\">REF NO</th>\\r\\n                    <!-- <th scope=\\\"col\\\" style=\\\"width: 10%;\\\">TRNAC</th> -->\\r\\n                    <th scope=\\\"col\\\" style=\\\"width: 20%;\\\">REMARKS</th>\\r\\n                </tr>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n                <ng-container *ngIf=\\\"masterService.voucherListsForBulkPrint && masterService.voucherListsForBulkPrint.length > 0\\\">\\r\\n                <tr *ngFor=\\\"let voucher of (masterService.voucherListsForBulkPrint|searchData:filter:'' | paginate: { itemsPerPage: itemsPerPage, currentPage: currentPage, totalItems: totalCount }); let i = index\\\">\\r\\n                    <td style=\\\"width: 5%;\\\"><input type=\\\"checkbox\\\" [(ngModel)]=\\\"voucher.IS_CHECKED\\\" (change)=\\\"PrepareVoucherListForPrint(voucher);\\\" class=\\\"form-check-input\\\"></td>\\r\\n                    <td style=\\\"width: 5%;\\\">{{currentPage>1?((currentPage-1)*10)+i+1:i+1}}</td>\\r\\n                    <!-- <td style=\\\"width: 10%;\\\">{{voucher.VCHRNO}}</td> -->\\r\\n                    <td style=\\\"width: 10%;\\\">{{voucher.TRNDATE}}</td>\\r\\n                    <td style=\\\"width: 10%;\\\">{{voucher.VCHRNO}}</td>\\r\\n                    <!-- <td style=\\\"width: 10%;\\\">{{voucher.TRNDATE}}</td> -->\\r\\n                    <td style=\\\"width: 10%;\\\">{{voucher.NETAMNT}}</td>\\r\\n                    <td style=\\\"width: 10%;\\\">{{voucher.PREFIXREMOVECHALANNO}}</td>\\r\\n                    <!-- <td style=\\\"width: 10%;\\\">{{voucher.TRNAC}}</td> -->\\r\\n                    <td style=\\\"width: 20%;\\\">{{voucher.REMARKS}}</td>\\r\\n\\r\\n                </tr>\\r\\n                </ng-container>\\r\\n                <ng-container *ngIf=\\\"masterService.voucherListsForBulkPrint && masterService.voucherListsForBulkPrint.length === 0\\\">\\r\\n                    <tr>\\r\\n                      <td colspan=\\\"7\\\">\\r\\n                        <div class=\\\"font-weight-bold\\\">Voucher List Information are unavailable.</div>\\r\\n                      </td>\\r\\n                    </tr>\\r\\n                  </ng-container> \\r\\n            </tbody>\\r\\n            </table>\\r\\n            <div class=\\\"pagination\\\" style=\\\"margin-top: 0rem;\\\" *ngIf=\\\"masterService.voucherListsForBulkPrint && (masterService.voucherListsForBulkPrint | searchData: filter:'').length > itemsPerPage\\\">\\r\\n              <div style=\\\"margin:auto\\\">\\r\\n                  <pagination-controls class=\\\"my-pagination\\\" (pageChange)=\\\"VoucherPagination($event)\\\"></pagination-controls>\\r\\n              </div>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n      </div>\\r\\n\\r\\n  </div>\\r\\n  <div class=\\\"reportpopup\\\" style=\\\"width: 90%;\\\">\\r\\n    <generic-popup-grid #genericGridVoucherList (onItemSelected)=\\\"PrepareVoucherListForPrint($event,i)\\\" [popupsettings]=\\\"gridVoucherListPopupSettings\\\"></generic-popup-grid>\\r\\n  </div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/AccountVoucher/components/BulkPrint/bulk-print.component.html\n// module id = 1304\n// module chunks = 1 2 3","module.exports = \"<style>\\r\\n  td {\\r\\n    border: 1px solid #e6e6e6;\\r\\n    height: 24px;\\r\\n  }\\r\\n\\r\\n  input {\\r\\n    padding: 8px;\\r\\n    border: 0px;\\r\\n    width: 99%;\\r\\n    margin: 1.5% 2%;\\r\\n    border: 1px solid #ddd;\\r\\n    border-radius: 5px;\\r\\n  }\\r\\n\\r\\n  th {\\r\\n    font-weight: bold;\\r\\n    font-family: Roboto, Arial, sans-serif;\\r\\n  }\\r\\n\\r\\n  .input_hight {\\r\\n    height: 24px;\\r\\n  }\\r\\n\\r\\n  select {\\r\\n    margin: 5px 0;\\r\\n    margin-left: 2%;\\r\\n  }\\r\\n\\r\\n  select label {\\r\\n    margin-top: 9px;\\r\\n  }\\r\\n\\r\\n  .totalvalue {\\r\\n    align-items: center;\\r\\n  }\\r\\n\\r\\n  .totalvalue label {\\r\\n    white-space: nowrap;\\r\\n    margin-bottom: 0 !important;\\r\\n    padding: 0 10px;\\r\\n\\r\\n  }\\r\\n\\r\\n  .totalvalue input {\\r\\n    height: 25px;\\r\\n  }\\r\\n\\r\\n  input:disabled,\\r\\n  select:disabled,\\r\\n  textarea:disabled {\\r\\n    cursor: not-allowed !important;\\r\\n    color: black !important;\\r\\n    background-color: #EBEBE4 !important;\\r\\n  }\\r\\n</style>\\r\\n\\r\\n<div class=\\\"clearfix\\\">\\r\\n  <div>\\r\\n    <div class=\\\"row\\\" style=\\\"margin-top: 10px;\\\">\\r\\n      <div class=\\\"col-md-2\\\">\\r\\n\\r\\n        <label\\r\\n          style=\\\"font-family: Segoe UI Light;font-weight: bold;font-size: 20px;padding-left: 5%;padding-top: 3%;width: 100%;\\\">CASH\\r\\n          COLLECTION\\r\\n        </label>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-7\\\">\\r\\n        <div class=\\\"row col-md-12\\\">\\r\\n          <div class=\\\"col-md-3\\\" style=\\\"margin-top: 1%;\\\">\\r\\n            <label>Voucher No :</label>\\r\\n            <b>{{CashCollectionObj.CC_VCHRNO}}</b>\\r\\n          </div>\\r\\n          <div class=\\\"col-md-6 entryDate\\\" style=\\\"display: flex; align-items: center;\\\">\\r\\n            <label style=\\\"flex: 0 0 15%; margin-bottom: 0; white-space: nowrap;\\\">Entry Date:</label>\\r\\n            <input style=\\\"flex: 0 0 30%; height: 24px;\\r\\n          font-size: 12px;\\\" placeholder=\\\"Year Start Date\\\" type=\\\"date\\\" [(ngModel)]=\\\"CashCollectionObj.ENTRYDATE\\\"\\r\\n              (change)=\\\"changeEntryDate($event.target.value,'AD')\\\" [disabled]=\\\"CashCollectionObj.MODE=='VIEW'\\\"> <span\\r\\n              style=\\\"margin-right: 10px;\\\">A.D</span>\\r\\n\\r\\n            <div style=\\\"flex: 0 0 30%; height: 24px;\\r\\n          font-size: 12px; display: flex;\\r\\n      align-items: center;\\\">\\r\\n              <nepali-date-picker name=\\\"nepaliDateEntry\\\" [id]=\\\"'nepaliDateEntry'\\\"\\r\\n                (change)=\\\"changeEntryDate($event.detail.value,'BS')\\\" [(ngModel)]=\\\"CashCollectionObj.ENTRY_BSDATE\\\"\\r\\n                [label]=\\\"'dd/mm/yyyy'\\\" [disabled]=\\\"CashCollectionObj.MODE=='VIEW'\\\">\\r\\n              </nepali-date-picker> <span>B.S</span>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"col-md-3\\\" *ngIf=\\\"CashCollectionObj.MODE=='VIEW'\\\" style=\\\"margin-top: 1%;\\\">\\r\\n            <label>RV No :</label>\\r\\n            <b>{{CashCollectionObj.RV_VCHRNO}}</b>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-3\\\" style=\\\"margin-top:10px\\\">\\r\\n        <button style=\\\"margin: 0px 4px;\\\" (click)=\\\"back()\\\" class=\\\"btn btn-info pull-right\\\">\\r\\n          F10 BACK\\r\\n        </button>\\r\\n        <button style=\\\"margin: 0px 4px;\\\" class=\\\"btn btn-info pull-right\\\" (click)=\\\"saveClick()\\\"\\r\\n          [disabled]=\\\"CashCollectionObj.MODE=='VIEW'\\\">\\r\\n          F6 Save\\r\\n        </button>\\r\\n        <button style=\\\"margin: 0px 4px;\\\" class=\\\"btn btn-info pull-right\\\" (click)=\\\"onViewClicked()\\\">\\r\\n          F6 View\\r\\n        </button>\\r\\n        <button style=\\\"margin: 0px 4px;\\\" (click)=\\\"reset()\\\" class=\\\"btn btn-info pull-right\\\">\\r\\n          F3 Reset\\r\\n        </button>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"col-md-12\\\" style=\\\"border-bottom: 1px solid #828080;\\r\\n        margin-top:10px;\\r\\n        margin-bottom: 5px;\\r\\n        padding-bottom: 10px;\\r\\n        background: #e2eaea; padding-top: 9px;\\r\\n        width: 100%;\\r\\n       \\\">\\r\\n      <div style=\\\"display: flex;\\\">\\r\\n      </div>\\r\\n      <div class=\\\"col-md-4\\\">\\r\\n        <div class=\\\"d-flex\\\" style=\\\"display: flex;\\\">\\r\\n          <label style=\\\"flex: 0 0 50%;    flex: 0 0 33%;\\r\\n        margin-left: 13%;\\\">In (A.D)</label>\\r\\n          <label style=\\\"flex: 0 0 50%;\\\">In (B.S)</label>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"fromdate\\\" style=\\\"display: flex; align-items: center;\\\">\\r\\n          <label style=\\\"flex: 0 0 10%;\\\">From:</label>\\r\\n          <input style=\\\"flex: 0 0 30%; height: 24px;\\r\\n      font-size: 12px;\\\" placeholder=\\\"Year Start Date\\\" type=\\\"date\\\" [(ngModel)]=\\\"CashCollectionObj.DATE1\\\"\\r\\n            (change)=\\\"changeDate1($event.target.value,'AD')\\\" [disabled]=\\\"CashCollectionObj.MODE=='VIEW'\\\">\\r\\n\\r\\n          <div style=\\\"flex: 0 0 30%; height: 24px;\\r\\n      font-size: 12px;\\\">\\r\\n            <nepali-date-picker name=\\\"nepaliDateFrom\\\" [id]=\\\"'nepaliDatefrom'\\\"\\r\\n              (change)=\\\"changeDate1($event.detail.value,'BS')\\\" [label]=\\\"'dd/mm/yyyy'\\\" [(ngModel)]=\\\"CashCollectionObj.BSDATE1\\\"\\r\\n              [disabled]=\\\"CashCollectionObj.MODE=='VIEW'\\\">\\r\\n            </nepali-date-picker>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"fromdate\\\" style=\\\"display: flex; align-items: center;\\\">\\r\\n          <label style=\\\"flex: 0 0 10%;\\\">To:</label>\\r\\n          <input style=\\\"flex: 0 0 30%; height: 24px;\\r\\n      font-size: 12px;\\\" placeholder=\\\"Year Start Date\\\" type=\\\"date\\\" [(ngModel)]=\\\"CashCollectionObj.DATE2\\\"\\r\\n            (change)=\\\"changeDate2($event.target.value,'AD')\\\" [disabled]=\\\"CashCollectionObj.MODE=='VIEW'\\\">\\r\\n\\r\\n          <div style=\\\"flex: 0 0 30%; height: 24px;\\r\\n      font-size: 12px;\\\">\\r\\n            <nepali-date-picker name=\\\"nepaliDateTo\\\" [id]=\\\"'nepaliDateTo'\\\"\\r\\n              (change)=\\\"changeDate2($event.detail.value,'BS')\\\" [label]=\\\"'dd/mm/yyyy'\\\"[(ngModel)]=\\\"CashCollectionObj.BSDATE2\\\"\\r\\n              [disabled]=\\\"CashCollectionObj.MODE=='VIEW'\\\">\\r\\n            </nepali-date-picker>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"col-md-3\\\" style=\\\"margin-top: 8px;\\\">\\r\\n        <!-- <div class=\\\"areaWrapper\\\" style=\\\"display: flex;\\\">\\r\\n          <label style=\\\"flex: 0 0 30%; margin-top: 9px;\\\">Area :</label>\\r\\n          <select style=\\\"flex: 0 0 65%\\\" class=\\\"form-select form-control\\\"   [(ngModel)]=\\\"CashCollectionObj.AREA_NAME\\\">\\r\\n            <option >katmhandu</option>\\r\\n            <option value=\\\"bkt\\\">Bhaktapur</option>\\r\\n          </select>\\r\\n        </div> -->\\r\\n        <div class=\\\"SalesmanWrapper\\\" style=\\\"display: flex;\\\">\\r\\n\\r\\n          <label style=\\\"flex: 0 0 30%; margin-top: 9px;\\\">Salesman :</label>\\r\\n          <input type=\\\"text\\\" style=\\\"height:24px;width: 95% !important;\\\" (keydown.Enter)=\\\"EnterClick()\\\"\\r\\n            [(ngModel)]=\\\"CashCollectionObj.SALESMAN_NAME\\\" placeholder=\\\"Press Enter to Select Salesman\\\"\\r\\n            autocomplete=\\\"off\\\" (keydown)=\\\"preventInput($event)\\\" [disabled]=\\\"CashCollectionObj.MODE=='VIEW'\\\">\\r\\n        </div>\\r\\n        <div class=\\\"ReceiptMode\\\" style=\\\"display: flex;\\\">\\r\\n          <label style=\\\"flex: 0 0 30%; margin-top: 9px;\\\">Receipt Mode :</label>\\r\\n          <select style=\\\"flex: 0 0 65%\\\" class=\\\"form-select form-control\\\" [(ngModel)]=\\\"CashCollectionObj.RECEIPT_MODE\\\"\\r\\n            [disabled]=\\\"CashCollectionObj.MODE=='VIEW'\\\">\\r\\n            <option value=\\\"cash\\\">Cash</option>\\r\\n          </select>\\r\\n        </div>\\r\\n        <div class=\\\"daybasis\\\" style=\\\"display: flex;\\\">\\r\\n          <label style=\\\"flex: 0 0 30%; margin-top: 9px;\\\">Days Basis :</label>\\r\\n          <select style=\\\"flex: 0 0 65%\\\" class=\\\"form-select form-control\\\" [(ngModel)]=\\\"CashCollectionObj.DAYS_BASIS\\\"\\r\\n            [disabled]=\\\"CashCollectionObj.MODE=='VIEW'\\\">\\r\\n            <option value=\\\"BILLDATE_WISE\\\">Bill Date Wise</option>\\r\\n            <!-- <option value=\\\"DUEDATE_WISE\\\">Due Date Wise</option> -->\\r\\n          </select>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-4\\\" style=\\\"margin-top: 9px;\\\">\\r\\n        <div style=\\\"display: flex;\\\">\\r\\n          <label style=\\\"flex: 0 0 35%; margin-top: 9px;\\\">Cash and Bank A/C: </label>\\r\\n          <input type=\\\"text\\\" style=\\\"height:24px;width: 95% !important;\\\" (keydown.Enter)=\\\"CashBankList()\\\"\\r\\n            [(ngModel)]=\\\"CashCollectionObj.CASHBANK_ACNAME\\\" placeholder=\\\"Press Enter to Select Cash/Bank\\\"\\r\\n            autocomplete=\\\"off\\\" (keydown)=\\\"preventInput($event)\\\" [disabled]=\\\"CashCollectionObj.MODE=='VIEW'\\\">\\r\\n        </div>\\r\\n        <div style=\\\"display: flex;\\\">\\r\\n          <label style=\\\"flex: 0 0 35%; margin-top: 9px;\\\">Customer Name :</label>\\r\\n          <input type=\\\"text\\\" style=\\\"height:24px;width: 95% !important;\\\" (keydown.Enter)=\\\"showAcList(); \\\"\\r\\n            [(ngModel)]=\\\"CashCollectionObj.CUS_ACNAME\\\" placeholder=\\\"Press Enter to Select A/C\\\" autocomplete=\\\"off\\\"\\r\\n            (keydown)=\\\"preventInput($event)\\\" [disabled]=\\\"CashCollectionObj.MODE=='VIEW'\\\">\\r\\n        </div>\\r\\n        <!-- <div class=\\\"costCenter\\\" style=\\\"display: flex;\\\">\\r\\n          <label style=\\\"flex: 0 0 35%; margin-top: 9px;\\\">Cost Center :</label>\\r\\n          <input type=\\\"text\\\" style=\\\"height:24px;width: 95% !important;\\\" (keydown.Enter)=\\\"showCostCenterList(); \\\"\\r\\n            [(ngModel)]=\\\"CashCollectionObj.COSTCENTER_NAME\\\" placeholder=\\\"Press Enter to Select Costcenter\\\"\\r\\n            autocomplete=\\\"off\\\" (keydown)=\\\"preventInput($event)\\\">\\r\\n\\r\\n        </div> -->\\r\\n        <div style=\\\"display: flex;\\\">\\r\\n          <label style=\\\"flex: 0 0 35%; margin-top: 9px;\\\">Remarks :</label>\\r\\n          <input type=\\\"text\\\" [(ngModel)]=\\\"CashCollectionObj.REMARKS\\\" style=\\\"flex: 0 0 61%;\\r\\n          color: #000000;\\r\\n          border: 1px solid #cbcbcb;\\r\\n          border-radius: 5px;\\r\\n          background-color: #ffffff;\\r\\n          box-shadow: none;\\r\\n          font-size: 14px;\\r\\n          margin: 0;\\r\\n          height: 25px !important;\\r\\n          margin-left: 1.95%;\\\" [disabled]=\\\"CashCollectionObj.MODE=='VIEW'\\\">\\r\\n          <button style=\\\"margin: 0px 4px; margin-left: 35px;\\\" (click)=\\\"loadsalesdata()\\\" class=\\\"btn btn-info pull-right\\\"\\r\\n            [disabled]=\\\"CashCollectionObj.MODE=='VIEW'\\\">\\r\\n            Load Data\\r\\n          </button>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-lg-12\\\">\\r\\n    <div style=\\\"padding-right: 0px !important; padding-left: 0px !important;\\\">\\r\\n      <div style=\\\"height:56vh; overflow-y: scroll\\\">\\r\\n        <table style=\\\"margin-bottom: 5px;font-size: 13px;width: 100%;\\\">\\r\\n          <thead>\\r\\n            <tr style=\\\" border-bottom: 2px solid #E6E6E6;\\r\\n                              border-top: 2px solid #E6E6E6;\\r\\n                              height: 30px;\\r\\n                              background: silver;\\r\\n                              color: black;\\\">\\r\\n              <th style=\\\"width: 2%;\\\">SNo.</th>\\r\\n              <th style=\\\"width:19%;padding-left: 1%;\\\">Customer Name</th>\\r\\n              <th style=\\\"width: 11%;padding-left: 1%;\\\">\\r\\n                Bill No\\r\\n              </th>\\r\\n              <th style=\\\"width: 11%;padding-left: 1%;\\\">\\r\\n                Bill Date\\r\\n              </th>\\r\\n              <th style=\\\"width: 11%;padding-left: 1%;\\\">\\r\\n                Due Date\\r\\n              </th>\\r\\n              <th style=\\\"width:7%;padding-left: 1%;\\\">\\r\\n                Bill Amount\\r\\n              </th>\\r\\n              <th style=\\\"width:7%;padding-left: 1%;\\\">\\r\\n                Due Amount\\r\\n              </th>\\r\\n              <th style=\\\"width:7%;padding-left: 1%;\\\">\\r\\n                Balance\\r\\n              </th>\\r\\n              <th style=\\\"width:3%;\\\">\\r\\n                <div class=\\\"form-check\\\" style=\\\"margin-bottom: 0;\\\">\\r\\n                  <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" (change)=\\\"handleChange($event)\\\" id=\\\"selectAll\\\"\\r\\n                    [disabled]=\\\"CashCollectionObj.MODE=='VIEW'\\\">\\r\\n                </div>\\r\\n              </th>\\r\\n              <th style=\\\"width:7%;padding-left: 1%;\\\">\\r\\n                Cash Collection\\r\\n              </th>\\r\\n              <th style=\\\"width:7%;padding-left: 1%;\\\">\\r\\n                Receipt No.\\r\\n              </th>\\r\\n            </tr>\\r\\n          </thead>\\r\\n          <tbody>\\r\\n            <ng-container *ngFor=\\\"let i of DetailList;let x = index\\\">\\r\\n              <tr style=\\\"border: 1px solid #e6e6e6;max-height:25px;\\\">\\r\\n                <td style=\\\"line-height:21px; text-align:center\\\">\\r\\n                  {{x+1}}\\r\\n                </td>\\r\\n                <td style=\\\"line-height:21px; text-align:center\\\">\\r\\n                  <input type=\\\"text\\\" [(ngModel)]=\\\"i.CUSTOMER_ACNAME\\\" style=\\\"height:24px;width: 95% !important;\\\"\\r\\n                    placeholder=\\\"Press Enter to select\\\" disabled>\\r\\n                </td>\\r\\n                <td style=\\\"line-height:21px; text-align:center\\\">\\r\\n                  <input type=\\\"text\\\" [(ngModel)]=\\\"i.BILL_NO\\\" class=\\\"input_hight\\\"\\r\\n                    style=\\\"height:24px;width: 94% !important;\\\" placeholder=\\\"Press Enter to select\\\" disabled>\\r\\n                </td>\\r\\n                <td style=\\\"line-height:21px; text-align:center\\\">\\r\\n                  <input type=\\\"date\\\" class=\\\"input_hight billDate\\\" [(ngModel)]=\\\"i.BILL_DATE\\\" disabled>\\r\\n                </td>\\r\\n\\r\\n                <td style=\\\"line-height:21px; text-align:center\\\">\\r\\n                  <input type=\\\"date\\\" class=\\\"input_hight dueDate\\\" [(ngModel)]=\\\"i.DUE_DATE\\\" disabled>\\r\\n                </td>\\r\\n                <td style=\\\"line-height:21px; text-align:center\\\">\\r\\n                  <input type=\\\"number\\\" [(ngModel)]=\\\"i.BILL_AMOUNT\\\" class=\\\"input_hight\\\"\\r\\n                    style=\\\"height:24px;float: right;width: 93% !important;padding-right: 0px;text-align: right;\\\"\\r\\n                    disabled>\\r\\n                </td>\\r\\n                <td style=\\\"line-height:21px; text-align:center\\\">\\r\\n                  <input type=\\\"number\\\" [(ngModel)]=\\\"i.DUE_AMOUNT\\\" class=\\\"input_hight\\\"\\r\\n                    style=\\\"height:24px;float: right;width: 93% !important;padding-right: 0px;text-align: right;\\\"\\r\\n                    disabled>\\r\\n                </td>\\r\\n                <td style=\\\"line-height:21px; text-align:center\\\">\\r\\n                  <input type=\\\"text\\\" [(ngModel)]=\\\"i.BALANCE\\\" class=\\\"input_hight\\\"\\r\\n                    style=\\\"height:24px;width: 90% !important\\\" disabled>\\r\\n                </td>\\r\\n                <td style=\\\"line-height:21px; text-align:center\\\">\\r\\n                  <div class=\\\"form-check\\\">\\r\\n                    <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" (change)=\\\"ChooseCashCollection($event, x)\\\"\\r\\n                      [(ngModel)]=\\\"i.IS_CHECKED\\\" [disabled]=\\\"CashCollectionObj.MODE=='VIEW'\\\">\\r\\n\\r\\n                  </div>\\r\\n                </td>\\r\\n                <td style=\\\"line-height:21px; text-align:center\\\">\\r\\n                  <input type=\\\"number\\\" [(ngModel)]=\\\"i.CASH_COLLECTION\\\" style=\\\"height: 24px;width: 94% !important;\\\"\\r\\n                    (keydown.Enter)=\\\"CalculateBal(x)\\\" (keydown.Tab)=\\\"CalculateBal(x)\\\" autocomplete=\\\"off\\\"\\r\\n                    [disabled]=\\\"i.IS_CHECKED==true || CashCollectionObj.MODE=='VIEW'\\\">\\r\\n                </td>\\r\\n                <td style=\\\"line-height:21px; text-align:center\\\">\\r\\n                  <input type=\\\"text\\\" class=\\\"input_hight receiptNo\\\" [(ngModel)]=\\\"i.RECEIPT_NO\\\"\\r\\n                    [disabled]=\\\"CashCollectionObj.MODE=='VIEW'\\\">\\r\\n                </td>\\r\\n              </tr>\\r\\n            </ng-container>\\r\\n          </tbody>\\r\\n\\r\\n\\r\\n        </table>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<div class=\\\"row\\\" style=\\\"position: fixed;\\r\\nbottom: 20px; background-color: #fff;\\\">\\r\\n\\r\\n  <tr>\\r\\n    <td style=\\\"width: 5%;\\\"></td>\\r\\n    <td style=\\\"width: 19%;\\\">\\r\\n      <h5 style=\\\"font-weight: bold; margin: 0 ;padding-left:10px;\\\">Total:</h5>\\r\\n    </td>\\r\\n    <td>\\r\\n      <div class=\\\"totalvalue \\\" style=\\\"display: flex;\\\">\\r\\n        <label for=\\\"\\\" style=\\\"flex:0 0 10% ;\\\">Total Bill : </label>\\r\\n        <input type=\\\"text\\\" [(ngModel)]=\\\"this.TotalBillCount\\\" disabled>\\r\\n\\r\\n      </div>\\r\\n    </td>\\r\\n\\r\\n    <td>\\r\\n      <div class=\\\"totalvalue \\\" style=\\\"display: flex;\\\">\\r\\n        <label for=\\\"\\\" style=\\\"flex:0 0 30% ;\\\">Total Bill AMT : </label>\\r\\n        <input type=\\\"text\\\" [(ngModel)]=\\\"this.CashCollectionBillAmount\\\" disabled>\\r\\n\\r\\n      </div>\\r\\n    </td>\\r\\n\\r\\n    <td>\\r\\n      <div class=\\\"totalvalue\\\" style=\\\"display: flex;\\\">\\r\\n        <label for=\\\"\\\" style=\\\"flex:0 0 30% ;\\\">Total Due AMT : </label>\\r\\n\\r\\n        <input type=\\\"text\\\" [(ngModel)]=\\\"this.CashCollectionDueAmount\\\" disabled>\\r\\n      </div>\\r\\n    </td>\\r\\n    <td>\\r\\n      <div class=\\\"totalvalue \\\" style=\\\"display: flex;\\\">\\r\\n        <label for=\\\"\\\" style=\\\"flex:0 0 30% ;\\\">Total Balance : </label>\\r\\n        <input type=\\\"text\\\" [(ngModel)]=\\\"this.CashCollectionTotalBalance\\\" disabled>\\r\\n      </div>\\r\\n    </td>\\r\\n\\r\\n    <td>\\r\\n      <div class=\\\"totalvalue \\\" style=\\\"display: flex;\\\">\\r\\n        <label for=\\\"\\\" style=\\\"flex:0 0 30% ;\\\">Total Cash Collection : </label>\\r\\n        <input type=\\\"text\\\" [(ngModel)]=\\\"CashCollectionObj.TOTAL_CASHCOLLECTION\\\" disabled>\\r\\n      </div>\\r\\n    </td>\\r\\n    <td style=\\\"width: 7%;\\\">\\r\\n    </td>\\r\\n\\r\\n  </tr>\\r\\n\\r\\n</div>\\r\\n\\r\\n\\r\\n\\r\\n<generic-popup-grid #genericGridACList [popupsettings]=\\\"gridACListPopupSettings\\\"\\r\\n  (onItemDoubleClick)=\\\"onAcSelect($event)\\\"></generic-popup-grid>\\r\\n\\r\\n<generic-popup-grid #genericeSalesManList [popupsettings]=\\\"gridCostSalesManPopupSetting\\\"\\r\\n  (onItemDoubleClick)=\\\"onSalesManSelect($event)\\\"></generic-popup-grid>\\r\\n\\r\\n<generic-popup-grid #genericGridCashBankList [popupsettings]=\\\"gridCashBankListPopupSettings\\\"\\r\\n  (onItemDoubleClick)=\\\"onCashBankSelect($event)\\\"></generic-popup-grid>\\r\\n\\r\\n<generic-popup-grid #genericGridCostCenterList [popupsettings]=\\\"gridCostCenterListPopupSettings\\\"\\r\\n  (onItemDoubleClick)=\\\"onCostcenterSelect($event)\\\"></generic-popup-grid>\\r\\n\\r\\n<generic-popup-grid #genericGridCCvoucherList [popupsettings]=\\\"gridCCvoucherListPopupSettings\\\"\\r\\n  (onItemDoubleClick)=\\\"onVoucherDoubleClick($event)\\\">\\r\\n</generic-popup-grid>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/AccountVoucher/components/CashCollection/cashcollection.component.html\n// module id = 1305\n// module chunks = 1 2 3","module.exports = \"<style>\\r\\n    .sectionWrapper{\\r\\n      display: flex;\\r\\n      flex-direction: column;\\r\\n      height: 94vh;\\r\\n    }\\r\\n\\r\\n .midTableWrapper{\\r\\n  flex: 1; \\r\\n  overflow: auto;\\r\\n  overflow-x:hidden;\\r\\n}\\r\\n.footer-wrapper {\\r\\n  background: lightgreen;\\r\\n  min-height: 87px;\\r\\n}\\r\\n\\r\\n\\r\\n  </style>\\r\\n<!-- <div class=\\\"sectionWrapper\\\"> -->\\r\\n   <!-- <div class=\\\"topWwrapper\\\"> -->\\r\\n    <div class=\\\"sticky-top\\\">\\r\\n  <div class=\\\"clearfix\\\">\\r\\n    <div class=\\\"col-md-1\\\">\\r\\n      <a href=\\\"https://cellpay.com.np/\\\" target=\\\"blank\\\">\\r\\n        <img src=\\\"../../../assets/img/CellPayLogo.jpg\\\" alt=\\\"Group\\\" height=\\\"50\\\"\\r\\n        width=\\\"120\\\" style=\\\"margin-top:-11px\\\">\\r\\n        </a>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-4\\\">\\r\\n      <label style=\\\"font-family: Segoe UI Light;font-weight: bold;font-size: 20px;padding-left: 5%;padding-top: 1%;\\\">CELLPAY VOUCHER</label>\\r\\n      <label style=\\\"font-size: 14px;\\\">&nbsp;>> {{ _trnMainService.TrnMainObj?.Mode | titlecase}} Voucher</label>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-7\\\">\\r\\n      <account-master-action (onBillTrackEmit)=\\\"BillTrack()\\\"></account-master-action>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<div class=\\\"main-container\\\" style=\\\"margin-bottom: 0;\\\">\\r\\n  <div class=\\\"clearfix\\\">\\r\\n    <trnmain-voucher-entry></trnmain-voucher-entry>\\r\\n  </div>\\r\\n \\r\\n\\r\\n\\r\\n   <!-- </div> -->\\r\\n    <!-- <div class=\\\"midTableWrapper\\\"> -->\\r\\n       <div class=\\\"clearfix\\\" style=\\\"margin-top: 5px\\\">\\r\\n        <trntran-voucher-entry #trnmainentry></trntran-voucher-entry>\\r\\n      </div>\\r\\n\\r\\n    <!-- </div> -->\\r\\n  </div>\\r\\n    <div class=\\\"sticky-bottom\\\" style=\\\"background: gray;\\\">\\r\\n      <account-voucher-summary></account-voucher-summary>\\r\\n    </div>\\r\\n\\r\\n<!-- </div> -->\\r\\n\\r\\n\\r\\n<multiple-series [voucherType]=\\\"voucherType\\\"></multiple-series>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/AccountVoucher/components/CellPayVoucher/CellPay-Voucher.component.html\n// module id = 1306\n// module chunks = 1 2 3","module.exports = \"<style>\\r\\n    .sectionWrapper{\\r\\n      display: flex;\\r\\n      flex-direction: column;\\r\\n      height: 94vh;\\r\\n    }\\r\\n\\r\\n .midTableWrapper{\\r\\n  flex: 1; \\r\\n  overflow: auto;\\r\\n  overflow-x:hidden;\\r\\n}\\r\\n.footer-wrapper {\\r\\n  background: lightgreen;\\r\\n  min-height: 87px;\\r\\n}\\r\\n\\r\\n\\r\\n  </style>\\r\\n\\r\\n<div class=\\\"sectionWrapper\\\">\\r\\n   <div class=\\\"topWrapper\\\">\\r\\n    <div class=\\\"sticky-top\\\">\\r\\n  <div class=\\\"clearfix\\\">\\r\\n    <div class=\\\"col-md-1\\\">\\r\\n      <voucher-master-toggler></voucher-master-toggler>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-4\\\">\\r\\n      <label style=\\\"font-family: Segoe UI Light;font-weight: bold;font-size: 20px;padding-left: 5%;padding-top: 1%;\\\">{{\\r\\n        _trnMainService.pageHeading }}</label>\\r\\n      <label style=\\\"font-size: 14px;\\\">&nbsp;>> {{ _trnMainService.TrnMainObj?.Mode | titlecase}} Voucher</label>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-7\\\">\\r\\n      <account-master-action></account-master-action>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<!-- <div class=\\\"main-container\\\" style=\\\"margin-bottom: 0  !important;\\\"> -->\\r\\n  <div class=\\\"clearfix\\\" style=\\\"margin-top: 29px;\\\">\\r\\n    <trnmain-voucher-entry></trnmain-voucher-entry>\\r\\n  </div>\\r\\n \\r\\n<!-- </div> -->\\r\\n\\r\\n   </div>\\r\\n    <div class=\\\"midTableWrapper\\\">\\r\\n       <div class=\\\"clearfix\\\" style=\\\"margin-top: 5px\\\">\\r\\n        <trntran-voucher-entry></trntran-voucher-entry>\\r\\n  </div>\\r\\n\\r\\n        <!-- </div> -->\\r\\n      </div>\\r\\n      <div class=\\\"sticky-bottom\\\">\\r\\n          <div class=\\\"\\\" *ngIf='_trnMainService.TrnMainObj.VATBILL == 1' style=\\\"background: gray;\\\">\\r\\n              <account-voucher-summary></account-voucher-summary>\\r\\n            </div>\\r\\n            <div class=\\\"\\\" *ngIf='_trnMainService.TrnMainObj.VATBILL == 0' style=\\\"background: gray;\\\">\\r\\n              <DrCrFooter_With_VAT></DrCrFooter_With_VAT>\\r\\n            </div>\\r\\n\\r\\n      </div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n<multiple-series [voucherType]=\\\"voucherType\\\"></multiple-series>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/AccountVoucher/components/CreditNote/credit-note.component.html\n// module id = 1307\n// module chunks = 1 2 3","module.exports = \"<style>\\r\\n    .table tr th {\\r\\n      text-align: center;\\r\\n      vertical-align: middle;\\r\\n      line-height: 15px;\\r\\n    }\\r\\n  \\r\\n    tr {\\r\\n      /* border: 1px solid #e6e6e6; */\\r\\n      max-height: 25px;\\r\\n    }\\r\\n  \\r\\n    td {\\r\\n      height: 20px;\\r\\n      /* border: 1px solid #e6e6e6; */\\r\\n     \\r\\n  \\r\\n    }\\r\\n  \\r\\n    .bottom {\\r\\n      position: fixed;\\r\\n      bottom: 20px;\\r\\n      left: 0px;\\r\\n      width: 100%;\\r\\n      height: 120px;\\r\\n      z-index: 1;\\r\\n      /* background: #e2eaea !important; */\\r\\n    }\\r\\n\\r\\n  .colorLabel{\\r\\n    width: 120px !important;\\r\\n    font-size: 21px !important;\\r\\n    font-weight: bold;\\r\\n    color: #2dacd1;\\r\\n  }\\r\\n\\r\\n  .diffAmountItemForAccount{\\r\\n    font-size: 21px;\\r\\n    width: 160px;\\r\\n    color: #2dacd1;\\r\\n    text-align: right;\\r\\n    border: 1px solid #cbcbcb;\\r\\n    font-weight: bold;\\r\\n  }\\r\\n  \\r\\n  </style>\\r\\n\\r\\n<div class=\\\"bottom\\\" style=\\\"text-align:right; background:#C0C0C0;\\\">\\r\\n    \\r\\n    <div class=\\\"col-md-4\\\" >\\r\\n        <div class=\\\"row\\\" style=\\\"margin-top: 70px;    float: left;\\\">\\r\\n          \\r\\n                    <!-- <label class=\\\"account-balance-title colorLabel\\\">A/C B/L :\\r\\n                    </label><label class=\\\"diffAmountItemForAccount colorLabel\\\" style=\\\"    border: 1px solid #cbcbcb;\\\">{{ _transactionService.diffAmountItemForAccount | number }}</label>&nbsp; -->\\r\\n                    <!-- <label class=\\\"colorLabel\\\" style=\\\"width:30px !important;font-size:18px;color: #2dacd1;\\\" *ngIf=\\\"_transactionService.diffAmountDrCrType == 'Dr'\\\">Dr.</label>\\r\\n                    <label class=\\\"colorLabel\\\" style=\\\"width:30px !important;font-size:18px;color: #2dacd1;\\\" *ngIf=\\\"_transactionService.diffAmountDrCrType == 'Cr'\\\">Cr.</label> -->\\r\\n           \\r\\n           \\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-4\\\" style=\\\"margin-top: 75px;\\\" >     \\r\\n            <label class=\\\"colorLabel\\\">A/C B/L :\\r\\n            </label><label class=\\\"diffAmountItemForAccount\\\">{{ this.differenceAmount | number }}</label>&nbsp;\\r\\n            <label style=\\\"width:30px !important;font-size:18px;color: #2dacd1;font-weight: bold;\\\" *ngIf=\\\"diffAmountDrCrType == 'Dr'\\\">Dr.</label>\\r\\n            <label style=\\\"width:30px !important;font-size:18px;color: #2dacd1;font-weight: bold;\\\" *ngIf=\\\"diffAmountDrCrType == 'Cr'\\\">Cr.</label>    \\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"col-md-4\\\" style=\\\"margin-top: 10px;\\\">\\r\\n      \\r\\n\\r\\n        <table class=\\\"table\\\" style=\\\"height: 100px; \\\">\\r\\n           <tbody>\\r\\n               <tr>\\r\\n                   <td style=\\\"line-height: 12px;text-align:left;font-size: 12px; font-weight: bold;\\\">Gross Amount </td>\\r\\n                   <td style=\\\"line-height: 12px;\\\">\\r\\n                       <input\\r\\n                      \\r\\n                       id=\\\"Gross Amount\\\"\\r\\n                       type=\\\"number\\\"\\r\\n\\r\\n                       style=\\\"width:100%; height: 19px;text-align:right; \\\"\\r\\n                       [ngModel]=\\\"_transactionService.TrnMainObj.TOTAMNT | twoDigitNumber \\\"\\r\\n                       (ngModelChange)=\\\"_transactionService.TrnMainObj.TOTAMNT = $event\\\" \\r\\n                       disabled\\r\\n                       />\\r\\n\\r\\n                        \\r\\n                   </td>\\r\\n               </tr>\\r\\n          \\r\\n              \\r\\n               \\r\\n                <tr>\\r\\n                    <td style=\\\"line-height: 12px;text-align:left; font-size: 12px; font-weight: bold; \\\" >Taxable Amount </td>\\r\\n                    <td style=\\\"line-height: 12px;text-align:right;\\\" >\\r\\n                        <input                           \\r\\n                        id=\\\"TaxableAmount\\\"\\r\\n                        type=\\\"number\\\"\\r\\n                   \\r\\n                        style=\\\"width:100%; height: 19px;text-align:right;\\\"                 \\r\\n                        [ngModel]=\\\"applyPipeinTaxable? (_transactionService.TrnMainObj.TAXABLE |twoDigitNumber ) :_transactionService.TrnMainObj.TAXABLE \\\"                        \\r\\n                        (ngModelChange)=\\\"_transactionService.TrnMainObj.TAXABLE =$event\\\"\\r\\n                        (focusout)=\\\"focusOutTaxableAmountChange($event)\\\"\\r\\n                        (keyup)=\\\"taxableAmountChange($event)\\\"\\r\\n                        />\\r\\n                    \\r\\n                        <!-- <input\\r\\n                           \\r\\n                        id=\\\"Discount\\\"\\r\\n                        type=\\\"number\\\"\\r\\n                        style=\\\"width:100%;height: 19px;text-align:right;\\\"\\r\\n                        [(ngModel)]=\\\"_transactionService.TrnMainObj.DCAMNT \\\"\\r\\n                        [disabled]=\\\"_transactionService.TrnMainObj.Mode =='VIEW'\\\"\\r\\n                        (keyup)=\\\"discountChange($event)\\\"\\r\\n                        (focusout)=\\\"discountFocusOut($event)\\\"\\r\\n                        /> -->\\r\\n\\r\\n\\r\\n                    </td>\\r\\n                </tr>\\r\\n                <tr>\\r\\n                    <td style=\\\"line-height: 12px;text-align:left;font-size: 12px; font-weight: bold; \\\" >Non Taxable Amount </td>\\r\\n                    <td style=\\\"line-height: 12px;text-align:right;\\\" >\\r\\n                        <input\\r\\n                      \\r\\n                        id=\\\"NonTaxableAmount\\\"\\r\\n                        type=\\\"number\\\"\\r\\n                        style=\\\"width:100%; height: 19px;text-align:right;\\\"\\r\\n                      \\r\\n                        [ngModel]=\\\"applyPipeinNonTaxable?(_transactionService.TrnMainObj.NONTAXABLE |twoDigitNumber):_transactionService.TrnMainObj.NONTAXABLE\\\"\\r\\n                        (ngModelChange)= \\\"_transactionService.TrnMainObj.NONTAXABLE = $event\\\"        \\r\\n                        (keyup)=\\\"nonTaxableAmountChange($event)\\\"\\r\\n                        (focusout)=\\\"focusOutNonTaxableAmountChange($event)\\\"\\r\\n                        [disabled]=\\\"_transactionService.TrnMainObj.TAXABLE !=0\\\"\\r\\n                        />\\r\\n                  \\r\\n                    </td>\\r\\n               </tr>\\r\\n               <tr>\\r\\n                    <td style=\\\"line-height: 12px;text-align:left;font-size: 12px; font-weight: bold; \\\" >VAT Amount </td>\\r\\n                    <td style=\\\"line-height: 12px;text-align:right;\\\" >\\r\\n                        <input\\r\\n                       \\r\\n                        id=\\\"VATAmount\\\"\\r\\n                        type=\\\"number\\\"\\r\\n                        style=\\\"width:100%; height: 19px;text-align:right;\\\"\\r\\n                        [ngModel]=\\\"_transactionService.TrnMainObj.VATAMNT | twoDigitNumber\\\"   \\r\\n                        (ngModelChange)=\\\"_transactionService.TrnMainObj.VATAMNT=$event\\\"\\r\\n                        (keyup) = \\\"VATAmountChange($event)\\\"                       \\r\\n                        (change)=\\\"VATAmountChange($event)\\\"\\r\\n                        disabled\\r\\n                        />\\r\\n                       \\r\\n                    </td>\\r\\n                </tr>\\r\\n                <tr>\\r\\n                    <td style=\\\"line-height: 12px;text-align:left;font-size: 12px; font-weight: bold; \\\" >Net Amount </td>\\r\\n                    <td style=\\\"line-height: 12px;text-align:right;\\\" >\\r\\n                        <input\\r\\n                     \\r\\n                        id=\\\"NetAmount\\\"\\r\\n                        type=\\\"number\\\"\\r\\n                        style=\\\"width:100%; height: 19px;text-align:right;\\\"\\r\\n                        [ngModel]=\\\"_transactionService.TrnMainObj.NETAMNT | twoDigitNumber\\\"\\r\\n                        (ngModelChange) = \\\"_transactionService.TrnMainObj.NETAMNT = $event \\\"\\r\\n                        disabled\\r\\n                        />\\r\\n                  \\r\\n                    </td>\\r\\n                </tr>\\r\\n                \\r\\n           </tbody>\\r\\n        </table>\\r\\n    </div>\\r\\n</div>    \"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/AccountVoucher/components/DebitNote/FooterwithIncludedVAT.component.html\n// module id = 1308\n// module chunks = 1 2 3","module.exports = \"<style>\\r\\n  .sectionWrapper{\\r\\n      display: flex;\\r\\n      flex-direction: column;\\r\\n      height: 94vh;\\r\\n    }\\r\\n .midTableWrapper{\\r\\n  flex: 1; \\r\\n  overflow: auto;\\r\\n  overflow-x:hidden;\\r\\n}\\r\\n.footer-wrapper {\\r\\n  background: lightgreen;\\r\\n  min-height: 87px;\\r\\n}\\r\\n\\r\\n\\r\\n  </style>\\r\\n\\r\\n<div class=\\\"sectionWrapper\\\">\\r\\n   <div class=\\\"topWrapper\\\">\\r\\n    <div class=\\\"sticky-top\\\">\\r\\n  <div class=\\\"clearfix\\\">\\r\\n    <div class=\\\"col-md-1\\\">\\r\\n      <voucher-master-toggler></voucher-master-toggler>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-4\\\">\\r\\n      <label style=\\\"font-family: Segoe UI Light;font-weight: bold;font-size: 20px;padding-left: 5%;padding-top: 1%;\\\">{{\\r\\n        _trnMainService.pageHeading }}</label>\\r\\n      <label style=\\\"font-size: 14px;\\\">&nbsp;>> {{ _trnMainService.TrnMainObj?.Mode | titlecase}} Voucher</label>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-7\\\">\\r\\n      <account-master-action></account-master-action>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<!-- <div class=\\\"main-container\\\" style=\\\"margin-bottom: 0  !important;z-index: 9;\\\"> -->\\r\\n  <div class=\\\"clearfix\\\" style=\\\"margin-top: 29px;\\\">\\r\\n    <trnmain-voucher-entry></trnmain-voucher-entry>\\r\\n  </div>\\r\\n \\r\\n<!-- </div> -->\\r\\n\\r\\n   </div>\\r\\n    <div class=\\\"midTableWrapper\\\">\\r\\n       <div class=\\\"clearfix\\\" style=\\\"margin-top: 5px\\\">\\r\\n        <trntran-voucher-entry></trntran-voucher-entry>\\r\\n  </div>\\r\\n\\r\\n        <!-- </div> -->\\r\\n      </div>\\r\\n        <div class=\\\"sticky-bottom\\\">\\r\\n           <div class=\\\"\\\" *ngIf='_trnMainService.TrnMainObj.VATBILL ==1' style=\\\"background: gray;\\\">\\r\\n          <account-voucher-summary></account-voucher-summary>\\r\\n        </div>\\r\\n        <div class=\\\"\\\" *ngIf='_trnMainService.TrnMainObj.VATBILL !=1' style=\\\"background: gray;\\\">\\r\\n          <DrCrFooter_With_VAT></DrCrFooter_With_VAT>\\r\\n        </div>\\r\\n\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n<multiple-series [voucherType]=\\\"voucherType\\\"></multiple-series>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/AccountVoucher/components/DebitNote/debit-note.component.html\n// module id = 1309\n// module chunks = 1 2 3","module.exports = \"\\r\\n<style>\\r\\n  .clearfix.trn-main-voucher-entry{\\r\\n    margin-top: 27px;\\r\\n\\r\\n  }\\r\\n    \\r\\n    .sectionWrapper{\\r\\n      display: flex;\\r\\n      flex-direction: column;\\r\\n      height: 94vh;\\r\\n    }\\r\\n\\r\\n .midTableWrapper{\\r\\n  flex: 1; \\r\\n  overflow: auto;\\r\\n  overflow-x:hidden;\\r\\n}\\r\\n.footer-wrapper {\\r\\n  background: lightgreen;\\r\\n  min-height: 87px;\\r\\n}\\r\\n  </style>\\r\\n\\r\\n    <div class=\\\"sectionWrapper\\\">\\r\\n      <div class=\\\"topWwrapper\\\">\\r\\n          <div class=\\\"sticky-top\\\">\\r\\n  <div class=\\\"clearfix\\\">\\r\\n    <div class=\\\"col-md-1\\\">\\r\\n      <voucher-master-toggler></voucher-master-toggler>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-4\\\">\\r\\n      <label style=\\\"font-family: Segoe UI Light;font-weight: bold;font-size: 20px;padding-left: 5%;padding-top: 1%;\\\">{{\\r\\n        _trnMainService.pageHeading }}</label>\\r\\n      <label style=\\\"font-size: 14px;\\\">&nbsp;>> {{ _trnMainService.TrnMainObj?.Mode | titlecase}} Voucher</label>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-7\\\">\\r\\n      <account-master-action (onBillTrackEmit)=\\\"BillTrack()\\\"></account-master-action>\\r\\n    </div>\\r\\n  </div>\\r\\n         </div>\\r\\n        <!-- <div class=\\\"main-container\\\"> -->\\r\\n          <div class=\\\"clearfix\\\" style=\\\"margin-top: 29px;\\\">\\r\\n            <trnmain-voucher-entry></trnmain-voucher-entry>\\r\\n          </div>\\r\\n         \\r\\n        \\r\\n        <!-- </div> -->\\r\\n        \\r\\n        \\r\\n        \\r\\n      </div>\\r\\n       <div class=\\\"midTableWrapper\\\">\\r\\n           <div class=\\\"clearfix\\\" style=\\\"margin-top: 5px\\\">\\r\\n    <trntran-voucher-entry #trnmainentry></trntran-voucher-entry>\\r\\n  </div>\\r\\n\\r\\n        </div>\\r\\n        <div class=\\\"footer-wrapper\\\" style=\\\"background: gray;\\\">\\r\\n  <account-voucher-summary></account-voucher-summary>\\r\\n</div>\\r\\n    </div>\\r\\n\\r\\n\\r\\n\\r\\n<multiple-series [voucherType]=\\\"voucherType\\\"></multiple-series>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/AccountVoucher/components/ExpensesVoucher/expenses-voucher.component.html\n// module id = 1310\n// module chunks = 1 2 3","module.exports = \"<voucherTracking></voucherTracking>>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/AccountVoucher/components/IncomeVoucher/CustomerTracking/customerTracking.component.html\n// module id = 1311\n// module chunks = 1 2 3","module.exports = \"\\r\\n<style>\\r\\n    .table tr th {\\r\\n      text-align: center;\\r\\n      vertical-align: middle;\\r\\n    }\\r\\n    .sectionWrapper{\\r\\n      display: flex;\\r\\n      flex-direction: column;\\r\\n      height: 94vh;\\r\\n    }\\r\\n\\r\\n .midTableWrapper{\\r\\n  flex: 1; \\r\\n  overflow: auto;\\r\\n  overflow-x:hidden;\\r\\n}\\r\\n.footer-wrapper {\\r\\n  background: lightgreen;\\r\\n  min-height: 87px;\\r\\n}\\r\\n  </style>\\r\\n\\r\\n    <div class=\\\"sectionWrapper\\\">\\r\\n        <div class=\\\"topWwrapper\\\">\\r\\n          <div class=\\\"sticky-top\\\">\\r\\n  <div class=\\\"clearfix\\\">\\r\\n    <div class=\\\"col-md-1\\\">\\r\\n      <voucher-master-toggler></voucher-master-toggler>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-4\\\">\\r\\n      <label style=\\\"font-family: Segoe UI Light;font-weight: bold;font-size: 20px;padding-left: 5%;padding-top: 1%;\\\">{{\\r\\n        _trnMainService.pageHeading }}</label>\\r\\n      <label style=\\\"font-size: 14px;\\\">&nbsp;>> {{ _trnMainService.TrnMainObj?.Mode | titlecase}} Voucher</label>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-7\\\">\\r\\n      <account-master-action (onBillTrackEmit)=\\\"BillTrack()\\\"></account-master-action>\\r\\n    </div>\\r\\n  </div>\\r\\n          </div>\\r\\n<!-- <div class=\\\"main-container\\\" style=\\\"margin-bottom: 0;\\\"> -->\\r\\n  <div class=\\\"clearfix\\\" style=\\\"margin-top: 29px;\\\">\\r\\n    <trnmain-voucher-entry></trnmain-voucher-entry>\\r\\n  <!-- </div> -->\\r\\n \\r\\n\\r\\n\\r\\n        </div>\\r\\n        \\r\\n        </div>\\r\\n        <div class=\\\"midTableWrapper\\\">\\r\\n           <div class=\\\"clearfix\\\" style=\\\"margin-top: 5px\\\">\\r\\n    <trntran-voucher-entry #trnmainentry></trntran-voucher-entry>\\r\\n  </div>\\r\\n       </div>\\r\\n\\r\\n        <div class=\\\"footer-wrapper\\\" style=\\\"background: gray;\\\">\\r\\n        <account-voucher-summary></account-voucher-summary>\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n\\r\\n\\r\\n<multiple-series [voucherType]=\\\"voucherType\\\"></multiple-series>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/AccountVoucher/components/IncomeVoucher/income-voucher.component.html\n// module id = 1312\n// module chunks = 1 2 3","module.exports = \"<div class=\\\"modal fade\\\" bsModal #childModal=\\\"bs-modal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"orderModalLabel\\\">\\r\\n\\r\\n    <div class=\\\"modal-dialog modal-lg\\\" role=\\\"document\\\" style=\\\"padding: 0px 100px; padding-left: 300px; top: 25%;margin-top: -200px;\\r\\n    margin-right: 400px;\\\">\\r\\n        <div class=\\\"modal-content\\\" style=\\\"width:500px; height:300px\\\">\\r\\n            <div class=\\\"modal-body\\\">\\r\\n                <div class=\\\"col-md-12\\\">\\r\\n                    <SeriesDialog #seriesDialog [voucherType]=\\\"voucherType\\\" (sendPrefix)=\\\"prefixChanged($event)\\\"\\r\\n                        (closepopup)=\\\"ClosePop()\\\"></SeriesDialog>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/AccountVoucher/components/MultipleSeries/MultipleSeries.component.html\n// module id = 1313\n// module chunks = 1 2 3","module.exports = \"<style>\\r\\n  td {\\r\\n    border: 1px solid #e6e6e6;\\r\\n    height: 24px;\\r\\n  }\\r\\n\\r\\n  input {\\r\\n    padding: 8px;\\r\\n    border: 0px;\\r\\n    width: 100%;\\r\\n    /* padding: 2%; */\\r\\n    margin: 2%;\\r\\n  }\\r\\n\\r\\n  th {\\r\\n    font-weight: bold;\\r\\n    font-family: Roboto, Arial, sans-serif;\\r\\n  }\\r\\n\\r\\n  input_hight {\\r\\n    height: 24px;\\r\\n  }\\r\\n</style>\\r\\n\\r\\n<div class=\\\"clearfix\\\">\\r\\n  <div>\\r\\n    <div class=\\\"clearfix\\\">\\r\\n      <!-- <div class=\\\"col-md-4\\\">\\r\\n        <label\\r\\n          style=\\\"font-family: Segoe UI Light;font-weight: bold;font-size: 20px;padding-left: 5%;padding-top: 1%;width: 100%;\\\">Payment\\r\\n          Collection</label>\\r\\n      </div> -->\\r\\n      <div class=\\\"row col-md-7\\\">\\r\\n        <label\\r\\n          style=\\\"font-family: Segoe UI Light;font-weight: bold;font-size: 20px;padding-left: 3%;padding-top: 1%;\\\">Payment\\r\\n          Collection</label>\\r\\n        <label style=\\\"font-size: 14px;\\\">&nbsp;>> {{mode}}</label>\\r\\n\\r\\n        <!-- <div style=\\\"padding: 0px;\\\" class=\\\"col\\\" > -->\\r\\n        <label class=\\\"smallBoldLabel\\\" style=\\\"padding-left: 3%\\\">Entry Date :</label>\\r\\n        <input type=\\\"date\\\" id=\\\"PE_date\\\" style=\\\"width:145px;height: 25px;\\\" placeholder=\\\"Year Start Date\\\"\\r\\n          [disabled]=\\\"isViewMode\\\" [(ngModel)]=\\\"EntryDate.RECEIVEDATEIS\\\"\\r\\n          (change)=\\\"changeEntryDate($event.target.value,'AD')\\\"> &nbsp;A.D&nbsp;\\r\\n\\r\\n        <div style=\\\" width: 134px; margin-left: 67%; margin-top: -44px; margin-bottom: 8px;\\\">\\r\\n          <nepali-date-picker name=\\\"nepaliDateFrom\\\" [id]=\\\"'nepaliDatefrom'\\\"\\r\\n            (change)=\\\"changeEntryDate($event.detail.value,'BS')\\\" [label]=\\\"'dd/mm/yyyy'\\\" [(ngModel)]=\\\"EntryDate.BSDATE\\\"\\r\\n            [disabled]=\\\"isViewMode\\\">\\r\\n          </nepali-date-picker>\\r\\n        </div>\\r\\n        <!-- <label class=\\\"smallBoldLabel\\\">BS Date :</label>\\r\\n          <input style=\\\"width:100px;height: 25px;\\\" type=\\\"text\\\" [(ngModel)]=\\\"EntryDate.BSDATE\\\"\\r\\n              [disabled]=\\\"isViewMode\\\"  (keydown.Enter)=\\\"focusCustomer()\\\" (keydown.Tab)=\\\"focusCustomer()\\\"\\r\\n              (change)=\\\"changeEntryDate1($event.target.value,'BS')\\\"\\r\\n              /> -->\\r\\n        <!-- </div> -->\\r\\n      </div>\\r\\n\\r\\n      <!-- <div style=\\\"padding: 0px;;\\\" class=\\\"col-md-5\\\" >\\r\\n        <label class=\\\"smallBoldLabel\\\">Entry Date :</label>\\r\\n        <input \\r\\n        type=\\\"date\\\"\\r\\n        id=\\\"PE_date\\\" style=\\\"width:145px;height: 25px;\\\" \\r\\n        placeholder=\\\"Year Start Date\\\" \\r\\n        [disabled] = \\\"isViewMode\\\"\\r\\n        [(ngModel)]=\\\"EntryDate.RECEIVEDATEIS\\\"\\r\\n        (change)=\\\"changeEntryDate($event.target.value,'AD')\\\"\\r\\n        > &nbsp;A.D&nbsp;\\r\\n        \\r\\n\\r\\n        <label class=\\\"smallBoldLabel\\\">BS Date :</label>\\r\\n        <input style=\\\"width:26%;height: 25px;\\\" type=\\\"text\\\" [(ngModel)]=\\\"EntryDate.BSDATE\\\"\\r\\n            [disabled]=\\\"isViewMode\\\"  (keydown.Enter)=\\\"focusCustomer()\\\" (keydown.Tab)=\\\"focusCustomer()\\\"\\r\\n            (change)=\\\"changeEntryDate1($event.target.value,'BS')\\\"\\r\\n            />\\r\\n      </div> -->\\r\\n\\r\\n      <div class=\\\"col-md-5\\\" style=\\\"margin-top:10px\\\">\\r\\n\\r\\n\\r\\n        <!-- <button style=\\\"margin: 0px 4px;\\\" (click)=\\\"SelectDate()\\\" class=\\\"btn btn-info pull-right\\\">\\r\\n        Show Date\\r\\n        </button> -->\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n        <button style=\\\"margin: 0px 4px;\\\" (click)=\\\"back()\\\" class=\\\"btn btn-info pull-right\\\">\\r\\n          F10 BACK\\r\\n        </button>\\r\\n        <button style=\\\"margin: 0px 4px;\\\" (click)=\\\"delete()\\\" class=\\\"btn btn-info pull-right\\\" [disabled]=\\\"!isViewMode\\\">\\r\\n          Delete\\r\\n        </button>\\r\\n        <button style=\\\"margin: 0px 4px;\\\" class=\\\"btn btn-info pull-right\\\" (click)=\\\"saveClick()\\\" [disabled]=\\\"isViewMode\\\">\\r\\n          F6 Save\\r\\n        </button>\\r\\n        <button style=\\\"margin: 0px 4px;\\\" (click)=\\\"view()\\\" class=\\\"btn btn-info pull-right\\\">\\r\\n          F4 View\\r\\n        </button>\\r\\n        <button style=\\\"margin: 0px 4px;\\\" (click)=\\\"edit()\\\" class=\\\"btn btn-info pull-right\\\">\\r\\n          F5 Edit\\r\\n        </button>\\r\\n        <button style=\\\"margin: 0px 4px;\\\" (click)=\\\"reset()\\\" class=\\\"btn btn-info pull-right\\\">\\r\\n          F3 Reset\\r\\n        </button>\\r\\n     \\r\\n\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div style=\\\"padding-right: 0px !important; padding-left: 0px !important;\\\">\\r\\n    <div style=\\\"height:480px; overflow-y: scroll\\\">\\r\\n      <table style=\\\"margin-bottom: 5px;font-size: 13px;width: 100%;\\\">\\r\\n        <thead>\\r\\n          <tr style=\\\" border-bottom: 2px solid #E6E6E6;\\r\\n                            border-top: 2px solid #E6E6E6;\\r\\n                            height: 30px;\\r\\n                            background: silver;\\r\\n                            color: black;\\\">\\r\\n            <th style=\\\"width: 2%;\\\">SNo.</th>\\r\\n\\r\\n            <th style=\\\"width:19%;padding-left: 1%;\\\">Customer Name</th>\\r\\n            <th style=\\\"width: 11%;padding-left: 1%;\\\">\\r\\n              Bill No\\r\\n            </th>\\r\\n            <th style=\\\"width:7%;padding-left: 1%;\\\">\\r\\n              Amount\\r\\n            </th>\\r\\n\\r\\n            <th style=\\\"width:11%;padding-left: 1%;\\\">\\r\\n              Payment Mode\\r\\n            </th>\\r\\n            <th style=\\\"width:17%;padding-left: 1%;\\\">\\r\\n              Cheque No\\r\\n            </th>\\r\\n\\r\\n            <th style=\\\"width:7%;padding-left: 1%;\\\">\\r\\n              Cheque Date\\r\\n            </th>\\r\\n\\r\\n            <th style=\\\"width:17%;padding-left: 1%;\\\">\\r\\n              Salesman\\r\\n            </th>\\r\\n          </tr>\\r\\n        </thead>\\r\\n        <tbody *ngFor=\\\"let i of DetailList;let x = index\\\" (click)=\\\"rowClick(x)\\\">\\r\\n          <tr style=\\\"border: 1px solid #e6e6e6;max-height:25px;\\\">\\r\\n            <td style=\\\"line-height:21px; text-align:center\\\">\\r\\n              {{x+1}}\\r\\n            </td>\\r\\n\\r\\n            <td style=\\\"line-height:21px; text-align:center\\\">\\r\\n              <input #customerInput id=\\\"ACCODEInput_Cust{{x}}\\\" type=\\\"text\\\" [(ngModel)]=\\\"i.customerName\\\"\\r\\n                style=\\\"height:24px;width: 95% !important;\\\" (keydown.Enter)=\\\"showAcList(i); customerInput.blur();\\\"\\r\\n                (keydown.Shift.Delete)=\\\"clearRow($event)\\\" placeholder=\\\"Press Enter to select\\\"\\r\\n                [disabled]=\\\"isViewMode || i.IsStatusOne == true\\\" autocomplete=\\\"off\\\">\\r\\n            </td>\\r\\n            <td style=\\\"line-height:21px; text-align:center\\\">\\r\\n              <input #Bill_Input id=\\\"BillInput{{x}}\\\" type=\\\"text\\\" [(ngModel)]=\\\"i.BillNo\\\" class=\\\"input_hight\\\"\\r\\n                style=\\\"height:24px;width: 94% !important;\\\" (keydown.Enter)=\\\"onBillShow(i); Bill_Input.blur();\\\"\\r\\n                (keydown.Shift.Delete)=\\\"clearRow($event)\\\" placeholder=\\\"Press Enter to select\\\"\\r\\n                [disabled]=\\\"isViewMode || i.IsStatusOne == true\\\" autocomplete=\\\"off\\\">\\r\\n            </td>\\r\\n            <td style=\\\"line-height:21px; text-align:center\\\">\\r\\n              <input id=\\\"amountInput{{x}}\\\" type=\\\"number\\\" [(ngModel)]=\\\"i.Amount\\\" class=\\\"input_hight\\\"\\r\\n                style=\\\"height:24px;float: right;width: 93% !important;padding-right: 0px;text-align: right;\\\"\\r\\n                (keydown.Enter)=\\\"focusPmode(i)\\\" (keydown.Shift.Delete)=\\\"clearRow($event)\\\"\\r\\n                [disabled]=\\\"isViewMode || i.IsStatusOne == true\\\" autocomplete=\\\"off\\\">\\r\\n            </td>\\r\\n            <td style=\\\"line-height:21px; text-align:center\\\">\\r\\n              <select id=\\\"PmodeInput{{x}}\\\" (keydown.Shift.Delete)=\\\"clearRow($event)\\\" [(ngModel)]=\\\"i.PaymentMode\\\"\\r\\n                class=\\\"input_hight\\\" style=\\\"height:24px\\\" (keydown.Shift.Delete)=\\\"clearRow($event)\\\" style=\\\"width: 100%;\\r\\n              height: 24px;\\r\\n              border: 0px;\\r\\n              margin: 2%;width: 93% !important\\\" [disabled]=\\\"isViewMode || i.IsStatusOne == true\\\"\\r\\n                (change)=\\\"ChangePMode($event)\\\" (keydown.Enter)=\\\"focusChequeNo(i)\\\">\\r\\n                <option>Cash</option>\\r\\n                <option>Cheque</option>\\r\\n                <option>Demand Draft</option>\\r\\n                <option>E-Payment</option>\\r\\n              </select>\\r\\n\\r\\n            </td>\\r\\n            <td style=\\\"line-height:21px; text-align:center\\\">\\r\\n              <input #chequeNo_Pay id=\\\"chequeNo_Pay{{x}}\\\" type=\\\"text\\\" [(ngModel)]=\\\"i.ChequeNo\\\" class=\\\"input_hight\\\"\\r\\n                style=\\\"height:24px;width: 90% !important\\\" (keydown.Shift.Delete)=\\\"clearRow($event)\\\"\\r\\n                (keydown.Enter)=\\\"focusChequeDate(i)\\\" (keydown.Tab)=\\\"focusChequeDate(i)\\\"\\r\\n                [disabled]=\\\"isViewMode || !i.isChequeMode || i.IsStatusOne == true\\\" autocomplete=\\\"off\\\">\\r\\n            </td>\\r\\n            <td style=\\\"line-height:21px; text-align:center\\\">\\r\\n              <input #chequeDate id=\\\"chequeDate{{x}}\\\" type=\\\"date\\\" [(ngModel)]=\\\"i.ChequeDate\\\" class=\\\"input_hight\\\"\\r\\n                style=\\\"height:24px;width: auto !important;\\\" (keydown.Enter)=\\\"focusSalesman(i)\\\"\\r\\n                (keydown.Tab)=\\\"focusSalesman(i)\\\" (keydown.Shift.Delete)=\\\"clearRow($event)\\\"\\r\\n                [disabled]=\\\"isViewMode || !i.isChequeMode || i.IsStatusOne == true\\\" autocomplete=\\\"off\\\">\\r\\n            </td>\\r\\n            <td style=\\\"line-height:21px; text-align:center\\\">\\r\\n              <input #sm_Pay id=\\\"sm_Pay{{x}}\\\" type=\\\"text\\\" [(ngModel)]=\\\"i.CostCenter\\\" (keydown.Tab)=\\\"checkValidation(i)\\\"\\r\\n                (focusin)=\\\"Focus_Salesman()\\\" (keydown.Enter)=\\\"EnterClick()\\\" style=\\\"height: 24px;width: 94% !important;\\\"\\r\\n                (keydown.Shift.Delete)=\\\"clearRow($event)\\\" placeholder=\\\"Press Enter to select\\\" autocomplete=\\\"off\\\"\\r\\n                [disabled]=\\\"isViewMode || i.IsStatusOne == true\\\">\\r\\n            </td>\\r\\n          </tr>\\r\\n\\r\\n        </tbody>\\r\\n      </table>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"modal fade\\\" bsModal #ShowDate=\\\"bs-modal\\\" [config]=\\\"{backdrop: 'static'}\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\"\\r\\n  aria-labelledby=\\\"mySmallModalLabel\\\" aria-hidden=\\\"true\\\" style=\\\"margin:-100px;height:460px\\\">\\r\\n  <div class=\\\"modal-dialog modal-sm\\\">\\r\\n    <div class=\\\"modal-content\\\" style=\\\"width: 420px;\\\">\\r\\n      <div class=\\\"modal-header\\\">\\r\\n        <button class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"ShoWdateClose()\\\">\\r\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n\\r\\n        </button>\\r\\n        <h4 class=\\\"modal-title\\\">Date Info:</h4>\\r\\n      </div>\\r\\n      <div class=\\\"modal-body\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-md-12\\\" style=\\\"margin-top: -25px;margin-bottom: 12px;\\\">\\r\\n            <label class=\\\"col\\\">Please select Date:</label>\\r\\n\\r\\n            <input class=\\\"col\\\" style=\\\"width:43% !important;padding:0px !important;\\\" type=\\\"date\\\"\\r\\n              [(ngModel)]=\\\"SelectedPopupDate\\\">\\r\\n          </div>\\r\\n          <div class=\\\"col-md-12\\\">\\r\\n            <button (click)=\\\"ShowDateOk()\\\" style=\\\"margin-right: 4px;\\\" class=\\\"btn btn-danger \\\">Yes</button>\\r\\n            <button (click)=\\\"ShoWdateClose()\\\" type=\\\"button \\\" class=\\\"btn btn-warning\\\">No</button>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n<generic-popup-grid #genericGridACList [popupsettings]=\\\"gridACListPopupSettings\\\"\\r\\n  (onItemDoubleClick)=\\\"onAcSelect($event)\\\"></generic-popup-grid>\\r\\n\\r\\n<generic-popup-grid #genericVchrnoList [popupsettings]=\\\"gridvchrnoListPopupSettings\\\"\\r\\n  (onItemDoubleClick)=\\\"onVchrnoSelect($event)\\\"></generic-popup-grid>\\r\\n\\r\\n<generic-popup-grid #genericeSalesManList [popupsettings]=\\\"gridCostSalesManPopupSetting\\\"\\r\\n  (onItemDoubleClick)=\\\"onSalesManSelect($event)\\\"></generic-popup-grid>\\r\\n\\r\\n<generic-popup-grid #genericGrid [popupsettings]=\\\"gridPopupSettings\\\" (onItemDoubleClick)=\\\"onItemDoubleClick($event)\\\">\\r\\n</generic-popup-grid>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/AccountVoucher/components/PaymentCollection/PaymentCollection.component.html\n// module id = 1314\n// module chunks = 1 2 3","module.exports = \"<style>\\r\\n    .sectionWrapper{\\r\\n      display: flex;\\r\\n      flex-direction: column;\\r\\n      height: 94vh;\\r\\n    }\\r\\n\\r\\n .midTableWrapper{\\r\\n  flex: 1; \\r\\n  overflow: auto;\\r\\n  overflow-x:hidden;\\r\\n}\\r\\n.footer-wrapper {\\r\\n  background: lightgreen;\\r\\n  min-height: 87px;\\r\\n}\\r\\n\\r\\n\\r\\n  </style>\\r\\n<div class=\\\"sectionWrapper\\\">\\r\\n\\r\\n  <div class=\\\"topWwrapper\\\">\\r\\n    <div class=\\\"sticky-top\\\">\\r\\n  <div class=\\\"clearfix\\\">\\r\\n    <div class=\\\"col-md-1\\\">\\r\\n      <voucher-master-toggler></voucher-master-toggler>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-4\\\">\\r\\n      <label style=\\\"font-family: Segoe UI Light;font-weight: bold;font-size: 20px;padding-left: 5%;padding-top: 1%;\\\">{{\\r\\n        _trnMainService.pageHeading }}</label>\\r\\n      <label style=\\\"font-size: 14px;\\\">&nbsp;>> {{ _trnMainService.TrnMainObj?.Mode | titlecase}} Voucher</label>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-7\\\">\\r\\n      <account-master-action (onBillTrackEmit)=\\\"BillTrack()\\\"></account-master-action>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<!-- <div class=\\\"main-container\\\" style=\\\"margin-bottom: 0;\\\"> -->\\r\\n  <div class=\\\"clearfix\\\"  style=\\\"margin-top: 29px;\\\">\\r\\n    <trnmain-voucher-entry></trnmain-voucher-entry>\\r\\n  </div>\\r\\n\\r\\n\\r\\n\\r\\n  <!-- </div> -->\\r\\n  \\r\\n  </div>\\r\\n   <div class=\\\"midTableWrapper\\\">\\r\\n\\r\\n      <div class=\\\"clearfix\\\" style=\\\"margin-top: 5px\\\">\\r\\n    <trntran-voucher-entry #trnmainentry></trntran-voucher-entry>\\r\\n  </div>\\r\\n\\r\\n   </div>\\r\\n<div class=\\\"footer-wrapper\\\" style=\\\"background: gray;\\\">\\r\\n  <account-voucher-summary></account-voucher-summary>\\r\\n</div>\\r\\n\\r\\n</div>\\r\\n\\r\\n<multiple-series [voucherType]=\\\"voucherType\\\"></multiple-series>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/AccountVoucher/components/PostDirectory/postdirectory.component.html\n// module id = 1315\n// module chunks = 1 2 3","module.exports = \"<div class=\\\"sticky-top\\\">\\r\\n  <div class=\\\"clearfix\\\">\\r\\n    <div class=\\\"col-md-1\\\">\\r\\n      <voucher-master-toggler></voucher-master-toggler>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-4\\\">\\r\\n      <label style=\\\"font-family: Segoe UI Light;font-weight: bold;font-size: 20px;padding-left: 5%;padding-top: 1%;\\\">{{\\r\\n        _trnMainService.pageHeading }}</label>\\r\\n      <label style=\\\"font-size: 14px;\\\">&nbsp;>> {{ _trnMainService.TrnMainObj?.Mode | titlecase}} Voucher</label>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-7\\\">\\r\\n      <account-master-action></account-master-action>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<div class=\\\"main-container\\\">\\r\\n  <div class=\\\"clearfix\\\">\\r\\n    <trnmain-voucher-entry></trnmain-voucher-entry>\\r\\n  </div>\\r\\n  <div class=\\\"clearfix\\\" style=\\\"margin-top: 5px\\\">\\r\\n    <trntran-voucher-entry></trntran-voucher-entry>\\r\\n  </div>\\r\\n</div>\\r\\n<div class=\\\"sticky-bottom\\\" *ngIf='_trnMainService.TrnMainObj.VATBILL == 1' style=\\\"background: gray;\\\">\\r\\n  <account-voucher-summary></account-voucher-summary>\\r\\n</div>\\r\\n<div class=\\\"sticky-bottom\\\" *ngIf='_trnMainService.TrnMainObj.VATBILL == 0' style=\\\"background: gray;\\\">\\r\\n  <DrCrFooter_With_VAT></DrCrFooter_With_VAT>\\r\\n</div>\\r\\n<multiple-series [voucherType]=\\\"voucherType\\\"></multiple-series>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/AccountVoucher/components/ReverseCreditNote/reverse-credit-note.component.html\n// module id = 1316\n// module chunks = 1 2 3","module.exports = \"<!-- <div style=\\\"background: #e2eaea !important; height: 40px;\\\"  class=\\\"clearfix\\\" >\\r\\n  <label\\r\\n    style=\\\"\\r\\n    font-family: Segoe UI Light;\\r\\n    font-weight: bold;\\r\\n    font-size: 20px;\\r\\n    padding-left: 5%;\\r\\n    padding-top: 1%;\\r\\n    \\\"\\r\\n    >PARTY BALANCE CONFIRMATION</label>\\r\\n    <button style=\\\"margin-top: 9px; margin-right: 59px;\\\" class=\\\"btn btn-info pull-right\\\" (click)='reSet()'> Reset</button>\\r\\n\\r\\n</div> -->\\r\\n\\r\\n<div class=\\\"clearfix\\\" style=\\\"background: #e2eaea !important; height: 40px;\\\">\\r\\n  <div>\\r\\n    <div class=\\\"col-md-4\\\">\\r\\n      <!-- <h2 style=\\\"color: black;\\\">Bank Reconciliation </h2> -->\\r\\n      <label\\r\\n        style=\\\"font-family: Segoe UI Light;font-weight: bold;font-size: 20px;padding-left: 5%;padding-top: 3%;width: 100%;\\\">Account\\r\\n        HeadingWise Depreciation Detail\\r\\n      </label>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-4\\\">\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"col-md-4\\\" style=\\\"margin-top:8px;\\\">\\r\\n      <button style=\\\"margin: 0px 4px;\\\" class=\\\"btn btn-info pull-right\\\" (click)=\\\"reSet()\\\">\\r\\n        Reset\\r\\n      </button>\\r\\n      <button class=\\\"btn btn-info pull-right\\\" (click)=\\\"onPrintClicked()\\\"> Print</button>\\r\\n      <!-- <button class=\\\"btn btn-info pull-right\\\" (click)=\\\"SelectDate()\\\">\\r\\n      View\\r\\n    </button> -->\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n<style>\\r\\n  input {\\r\\n    height: 25px;\\r\\n    vertical-align: middle;\\r\\n    font-size: 13px;\\r\\n    border: 1px solid #cbcbcb;\\r\\n    border-radius: 3px;\\r\\n    color: black;\\r\\n    padding-left: 4px;\\r\\n  }\\r\\n\\r\\n  label {\\r\\n    font-family: Roboto, Arial, sans-serif;\\r\\n    font-size: 14px;\\r\\n  }\\r\\n\\r\\n  legend {\\r\\n    font-family: Roboto, Arial, sans-serif;\\r\\n    font-size: 14px;\\r\\n    width: 0;\\r\\n\\r\\n  }\\r\\n\\r\\n  .date {\\r\\n    margin-left: 8px;\\r\\n  }\\r\\n</style>\\r\\n\\r\\n<div class=\\\"col-md-12\\\" style=\\\"border-bottom: 1px solid #828080;\\r\\n        margin-top:10px;\\r\\n        margin-bottom: 5px;\\r\\n        padding-bottom: 10px;\\r\\n        background: #e2eaea; padding-top: 9px;\\r\\n        width: 100%;\\r\\n       \\\">\\r\\n\\r\\n  <div style=\\\"display: flex;\\\">\\r\\n    <div class=\\\"col-md-3\\\">\\r\\n      <label>From:</label>\\r\\n      <input placeholder=\\\"Year Start Date\\\" style=\\\"width:128px; height:24px;\\\" type=\\\"date\\\"\\r\\n        [(ngModel)]=\\\"PartyBalanceData.DATE1\\\" (change)=\\\"changeEntryDate($event.target.value,'AD')\\\">&nbsp;A.D &nbsp;\\r\\n\\r\\n      <div style=\\\" width: 134px;margin-left: 202px; margin-top: -29px;\\\">\\r\\n        <nepali-date-picker name=\\\"nepaliDateFrom\\\" [id]=\\\"'nepaliDatefrom'\\\"\\r\\n          (change)=\\\"changeEntryDate($event.detail.value,'BS')\\\" [label]=\\\"'dd/mm/yyyy'\\\"\\r\\n          [(ngModel)]=\\\"PartyBalanceData.BSDATE1\\\">\\r\\n        </nepali-date-picker>\\r\\n      </div>\\r\\n      <!-- <input  autocomplete=\\\"off\\\" id=\\\"nepaliDate\\\" placeholder=\\\"yyyy-mm-dd\\\"type=\\\"text\\\"\\r\\n        [(ngModel)]=\\\"PartyBalanceData.BSDATE1\\\" style=\\\"width: 90px;\\\" type=\\\"text\\\"\\r\\n        (change)=\\\"changeEntryDate($event.target.value,'BS')\\\">&nbsp;B.S\\r\\n        &nbsp; -->\\r\\n    </div>\\r\\n    <div class=\\\"col-md-3\\\" style=\\\"margin-top: 8px;\\\">\\r\\n      <label><input type=\\\"radio\\\" name=\\\"partytype\\\" [(ngModel)]=\\\"PartyBalanceData.PARTYTYPE\\\" value=C\\r\\n          (change)=\\\"parttypeChange()\\\">&nbsp;Customer</label>\\r\\n      <label><input type=\\\"radio\\\" name=\\\"partytype\\\" [(ngModel)]=\\\"PartyBalanceData.PARTYTYPE\\\" value=V\\r\\n          (change)=\\\"parttypeChange()\\\">&nbsp;Supplier</label>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-5\\\" style=\\\"margin-top: 8px;\\\">\\r\\n      <label class=\\\"smallBoldLabel\\\"><input type=\\\"checkbox\\\" name=\\\"transaction\\\"\\r\\n          [(ngModel)]=\\\"PartyBalanceData.INCLUDECASHTRANSACTION\\\" (change)=\\\"$event.target.checked\\r\\n          ? (PartyBalanceData.INCLUDECASHTRANSACTION = 1)\\r\\n          : (PartyBalanceData.INCLUDECASHTRANSACTION = 0)\\\">&nbsp;Including Cash Transaction</label>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"col-md-3\\\" style=\\\"margin-top: 4px;\\\">\\r\\n    <label>To :</label>\\r\\n    <input placeholder=\\\"Year Start Date\\\" type=\\\"date\\\" style=\\\"width: 128px; height: 24px; margin-left: 13px;\\\"\\r\\n      [(ngModel)]=\\\"PartyBalanceData.DATE2\\\" (change)=\\\"changeEndDate($event.target.value,'AD')\\\">&nbsp;A.D &nbsp;\\r\\n\\r\\n    <div style=\\\" width: 134px;margin-left: 202px; margin-top: -29px;\\\">\\r\\n      <nepali-date-picker name=\\\"nepaliDateFrom\\\" [id]=\\\"'nepaliDateto'\\\" (change)=\\\"changeEndDate($event.detail.value,'BS')\\\"\\r\\n        [label]=\\\"'dd/mm/yyyy'\\\" [(ngModel)]=\\\"PartyBalanceData.BSDATE2\\\">\\r\\n      </nepali-date-picker>\\r\\n    </div>\\r\\n    <!-- <input class=\\\"date\\\" autocomplete=\\\"off\\\" id=\\\"nepaliDate\\\" placeholder=\\\"yyyy-mm-dd\\\" type=\\\"text\\\"\\r\\n        [(ngModel)]=\\\"PartyBalanceData.BSDATE2\\\" type=\\\"text\\\" style=\\\"width: 90px;\\\"\\r\\n        (change)=\\\"changeEndDate($event.target.value,'BS')\\\">&nbsp;B.S -->\\r\\n    &nbsp;\\r\\n  </div>\\r\\n  <div class=\\\"col-md-3\\\" style=\\\"margin-top: 8px;\\\">\\r\\n    <label>Cost Center :</label>\\r\\n    <select id=\\\"costcenter\\\" [(ngModel)]=\\\"PartyBalanceData.COSTCENTER\\\" style=\\\"width: 60%;height: 21px;\\r\\n          padding-left: 14px;\\\">\\r\\n      <option [ngValue]=\\\"\\\"></option>\\r\\n      <option *ngFor=\\\"let c of costlists\\\" [ngValue]=\\\"c.CCID\\\">\\r\\n        {{ c.COSTCENTERNAME }}</option>\\r\\n    </select>\\r\\n  </div>\\r\\n  <div class=\\\"col-md-4\\\" style=\\\"margin-top: 9px;\\\">\\r\\n    <div>\\r\\n      <label style=\\\"margin-right:1%;\\\">Party Account:</label>\\r\\n      <input style=\\\"height: 25px; margin-left: 1%; width: 74%;\\\" (keydown.Enter)=\\\"showAcList(i);\\\" name=\\\"customerName\\\"\\r\\n        [(ngModel)]=\\\"PartyBalanceData.CUSTOMERNAME\\\" type=\\\"text\\\" placeholder=\\\"Press Enter to select\\\" autocomplete=\\\"off\\\">\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"col-md-1\\\" style=\\\"margin-top: 6px;\\\">\\r\\n    <button class=\\\"btn btn-info pull-left\\\" (click)='onLoad()'> Load</button>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"col-md-12\\\">\\r\\n  <!-- <div class=\\\"col-md-8\\\" style=\\\"margin-top: 5px;\\\">\\r\\n      <div>\\r\\n      <label>Prepared By:</label>\\r\\n      <label style=\\\"margin-left: 15px;\\\">Name:</label>\\r\\n      <input  [(ngModel)]=\\\"Name\\\" id=\\\"Name0\\\" type=\\\"text\\\">\\r\\n\\r\\n      <label style=\\\"margin-left:30px;\\\">Designation:</label>\\r\\n        <input [(ngModel)]=\\\"Designation\\\" id=\\\"destination\\\" type=\\\"text\\\">\\r\\n      </div>\\r\\n    </div> -->\\r\\n  <!-- <fieldset style=\\\"height: 89px; width:113%\\\">\\r\\n      <legend>Prepared By:</legend>\\r\\n      <div >\\r\\n        <label>Name:</label>\\r\\n        <input style=\\\"width: 79%; margin-left:9.3%\\\"  type=\\\"text\\\">\\r\\n      </div>\\r\\n      <div>\\r\\n        <label>Designation:</label>\\r\\n        <input style=\\\"width:79%; margin-left: 1%;\\\"  type=\\\"text\\\">\\r\\n      </div>\\r\\n  </fieldset>\\r\\n</div> -->\\r\\n  <div class=\\\"col-md-3\\\"></div>\\r\\n\\r\\n\\r\\n  <div class=\\\"col-md-1\\\">\\r\\n    <!-- <button\\r\\n      *ngIf=\\\"_trnMainService.TrnMainObj.Mode == 'VIEW'  &&\\r\\n    !showSecondaryButtons && _trnMainService.TrnMainObj.VoucherType==12 && _trnMainService.TrnMainObj.VoucherType==15|| _trnMainService.TrnMainObj.VoucherType==16 || _trnMainService.TrnMainObj.VoucherType!=3 \\\"\\r\\n      [ngClass]=\\\"changeCursor==true?'PrintPending':'PrintDone'\\\" (click)=\\\"onPrintClicked()\\\" class=\\\"btn btn-info pull-right\\\" [disabled]=\\\"_trnMainService.TrnMainObj.Mode == 'NEW' || _trnMainService.TrnMainObj.Mode == 'EDIT'\\\" >\\r\\n      F8 PRINT\\r\\n    </button> -->\\r\\n    <!-- <button class=\\\"btn btn-info pull-left\\\" (click)=\\\"onPrintClicked()\\\"> Print</button> -->\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n<style>\\r\\n  table {\\r\\n    border-collapse: collapse;\\r\\n  }\\r\\n\\r\\n  td {\\r\\n    /* border: 2px solid #000000; */\\r\\n    height: 24px;\\r\\n  }\\r\\n\\r\\n  th {\\r\\n    font-weight: bold;\\r\\n    font-family: Roboto, Arial, sans-serif;\\r\\n    text-align: center;\\r\\n  }\\r\\n</style>\\r\\n\\r\\n\\r\\n<!-- **************table****************** -->\\r\\n\\r\\n<div style=\\\"margin-top: 100px\\\">\\r\\n  <div style=\\\"height: 480px;\\\">\\r\\n    <table style=\\\"margin-bottom: 5px; font-size: 13px; width: 100%\\\">\\r\\n      <thead>\\r\\n        <tr style=\\\"\\r\\n            border-bottom: 2px solid #e6e6e6;\\r\\n            border-top: 2px solid #e6e6e6;\\r\\n            height: 30px;\\r\\n            background: silver;\\r\\n            color: black;\\\">\\r\\n\\r\\n          <th style=\\\"width: 1%\\\">SNo.</th>\\r\\n          <th style=\\\"width: 19%; padding-left: 1%\\\">Account Heading</th>\\r\\n          <th style=\\\"width: 7%; padding-left: 1%\\\">Depreciation Rate (%)</th>\\r\\n          <th style=\\\"width: 7%; padding-left: 1%\\\">Cost Value</th>\\r\\n          <th style=\\\"width: 7%; padding-left: 1%\\\">Current Book Value</th>\\r\\n          <th style=\\\"width: 7%; padding-left: 1%\\\">Depreciation</th>\\r\\n          <th style=\\\"width: 7%; padding-left: 1%\\\">Net Book Value</th>\\r\\n\\r\\n        </tr>\\r\\n      </thead>\\r\\n      <tbody *ngFor=\\\"let i of PartyInfo\\\">\\r\\n\\r\\n        <tr style=\\\"border: 1px solid #e6e6e6;max-height:25px;\\\">\\r\\n\\r\\n          <td style=\\\"line-height: 21px; text-align: center; border: 1px solid #e6e6e6; \\\">\\r\\n            {{i.SNO}}\\r\\n          </td>\\r\\n\\r\\n          <td style=\\\"line-height: 21px; text-align: center; border: 1px solid #e6e6e6;\\\">\\r\\n            <input style=\\\"height: 25px; width: 100%\\\" [(ngModel)]=\\\"i.PARTICULAR\\\" readonly />\\r\\n          </td>\\r\\n          <td style=\\\"line-height: 21px; text-align: center; border: 1px solid #e6e6e6;\\\">\\r\\n            <input style=\\\"height: 25px; width: 100%\\\" [(ngModel)]=\\\"i.OPERATION\\\" readonly />\\r\\n          </td>\\r\\n          <td style=\\\"line-height: 21px; text-align: center; border: 1px solid #e6e6e6;\\\">\\r\\n            <input style=\\\"height: 25px; text-align: right; width: 100% \\\" [(ngModel)]=\\\"i.AMOUNT\\\" readonly />\\r\\n          </td>\\r\\n\\r\\n        </tr>\\r\\n      </tbody>\\r\\n      <!-- <ng-container *ngIf=\\\"PartyInfo.length == 0\\\">\\r\\n        <tbody style=\\\"background:#e2eaea;\\\">\\r\\n          <tr>\\r\\n            <td colspan=\\\"4\\\">\\r\\n              Party Info is Empty.\\r\\n            </td>\\r\\n          </tr>\\r\\n        </tbody>\\r\\n      </ng-container> -->\\r\\n    </table>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n<generic-popup-grid #genericGridACList [popupsettings]=\\\"gridACListPopupSettings\\\"\\r\\n  (onItemDoubleClick)=\\\"onAcSelect($event)\\\"></generic-popup-grid>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/AccountVoucher/components/account-headingwise-depreciation-detail/account-headingwise-depreciation-detail.component.html\n// module id = 1317\n// module chunks = 1 2 3","module.exports = \"<style>\\r\\n    .sectionWrapper{\\r\\n      display: flex;\\r\\n      flex-direction: column;\\r\\n      height: 94vh;\\r\\n    }\\r\\n\\r\\n .midTableWrapper{\\r\\n  flex: 1; \\r\\n  overflow: auto;\\r\\n  overflow-x:hidden;\\r\\n}\\r\\n.footer-wrapper {\\r\\n  background: lightgreen;\\r\\n  min-height: 87px;\\r\\n}\\r\\n.main-container{\\r\\n  margin-bottom: 0 !important;\\r\\n}\\r\\n\\r\\n</style>\\r\\n\\r\\n<div class=\\\"sectionWrapper\\\">\\r\\n    <div class=\\\"topWwrapper\\\">\\r\\n      <div class=\\\"sticky-top\\\">\\r\\n    <div class=\\\"clearfix\\\">\\r\\n      <div class=\\\"col-md-1\\\">\\r\\n        <voucher-master-toggler></voucher-master-toggler>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-4\\\">\\r\\n        <!-- <h2 style=\\\"color: black;font-size: 18px;  \\\">{{ _trnMainService.pageHeading}}[{{this._trnMainService.TrnMainObj?.Mode}}]</h2> -->\\r\\n        <label style=\\\"font-family: Segoe UI Light;font-weight: bold;font-size: 20px;padding-left: 5%;padding-top: 1%;\\\">{{ _trnMainService.pageHeading }}</label>\\r\\n        <label style=\\\"font-size: 14px;\\\">&nbsp;>> {{ _trnMainService.TrnMainObj?.Mode | titlecase}} Voucher</label>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-7\\\">\\r\\n        <opening-balance-action></opening-balance-action>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"main-container\\\">\\r\\n    <div class=\\\"clearfix\\\"> \\r\\n      <trnmain-voucher-entry></trnmain-voucher-entry> \\r\\n    </div>\\r\\n    \\r\\n  </div>\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"midTableWrapper\\\">\\r\\n      <div class=\\\"clearfix\\\" style=\\\"margin-top: 5px\\\">\\r\\n      <trntran-voucher-entry></trntran-voucher-entry>\\r\\n    </div>\\r\\n    </div>\\r\\n    <div class=\\\"footer-wrapper\\\" style=\\\"background: gray;\\\">\\r\\n      <account-voucher-summary></account-voucher-summary>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n\\r\\n  \\r\\n  \"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/AccountVoucher/components/account-opening-balance/account-opening-balance.component.html\n// module id = 1318\n// module chunks = 1 2 3","module.exports = \"<style>\\r\\n  .table tr th {\\r\\n    text-align: center;\\r\\n    vertical-align: middle;\\r\\n  }\\r\\n\\r\\n  tr {\\r\\n    border: 1px solid #e6e6e6;\\r\\n    max-height: 25px;\\r\\n  }\\r\\n\\r\\n  td {\\r\\n    height: 23px;\\r\\n    border: 1px solid #e6e6e6;\\r\\n\\r\\n  }\\r\\n\\r\\n  .bottom {\\r\\n    position: fixed;\\r\\n    bottom: 20px;\\r\\n    left: 0px;\\r\\n    width: 100%;\\r\\n    height: 135px;\\r\\n    z-index: 999997;\\r\\n    /* background: #e2eaea !important; */\\r\\n  }\\r\\n\\r\\n</style>\\r\\n\\r\\n\\r\\n<div class=\\\"sticky-top\\\">\\r\\n  <div class=\\\"clearfix\\\">\\r\\n    <div class=\\\"col-md-1\\\">\\r\\n      <voucher-master-toggler></voucher-master-toggler>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-4\\\">\\r\\n      <!-- <h2 style=\\\"color: black;\\\">Bank Reconciliation </h2> -->\\r\\n      <label style=\\\"font-family: Segoe UI Light;font-weight: bold;font-size: 20px;padding-left: 5%;padding-top: 1%;width: 100%;\\\">BANK RECONCILIATION</label>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-7\\\">\\r\\n      <button (click)=\\\"onBackClicked()\\\" style=\\\"margin: 0px 4px;\\\" class=\\\"btn btn-info pull-right\\\">\\r\\n        BACK\\r\\n    </button>\\r\\n      <button (click)=\\\"onLoadClick()\\\" style=\\\"margin: 0px 4px;\\\" class=\\\"btn btn-info pull-right\\\">\\r\\n        LOAD\\r\\n      </button>\\r\\n      <button (click)=\\\"onSaveClick()\\\" style=\\\"margin: 0px 4px;\\\" class=\\\"btn btn-info pull-right\\\">\\r\\n        SAVE\\r\\n      </button>\\r\\n\\r\\n      <button (click)=\\\"onExportClick()\\\" style=\\\"margin: 0px 4px;\\\" class=\\\"btn btn-info pull-right\\\">\\r\\n        EXPORT\\r\\n      </button>\\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"main-container\\\">\\r\\n  <div [hidden]=\\\"!masterService.ShowMore\\\" class=\\\"clearfix\\\">\\r\\n\\r\\n    <div class=\\\"row col-md-12\\\" style=\\\"margin: 8px 15px ; border: 1px solid #e6e6e6; \\\">\\r\\n\\r\\n      <!-- <div class=\\\"col-md-4\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n          <label style=\\\"width:30%\\\">Date </label>\\r\\n          <input style=\\\"width:60%\\\" type=\\\"text\\\" ngxDaterangepickerMd [(ngModel)]=\\\"selectedDate\\\" [showDropdowns]=\\\"true\\\"\\r\\n            [showCustomRangeLabel]=\\\"true\\\" [alwaysShowCalendars]=\\\"true\\\" [locale]=\\\"locale\\\" [ranges]=\\\"ranges\\\"\\r\\n            [linkedCalendars]=\\\"true\\\" [showCancel]=\\\"true\\\" placeholder=\\\"Date Range...\\\"\\r\\n            (ngModelChange)=\\\"dateChanged($event)\\\" />\\r\\n        </div>\\r\\n      </div> -->\\r\\n\\r\\n      <div class=\\\"col-md-4\\\">\\r\\n        <label>From:</label>\\r\\n        <input  placeholder=\\\"Year Start Date\\\" style=\\\"width:128px; height: 30px;\\\" type=\\\"date\\\"\\r\\n        (change)=\\\"changeEntryDate($event.target.value,'AD')\\\" [(ngModel)]=\\\"bankReconciliationObj.DATE1\\\">&nbsp;&nbsp;\\r\\n\\r\\n        <div style=\\\" width: 134px;margin-left: 260px; margin-top: -29px;\\\">\\r\\n          <nepali-date-picker name=\\\"nepaliDateFrom\\\" [id]=\\\"'nepaliDatefrom'\\\"\\r\\n            (change)=\\\"changeEntryDate($event.detail.value,'BS')\\\"\\r\\n            [label]=\\\"'dd/mm/yyyy'\\\"  [(ngModel)]=\\\"bankReconciliationObj.BSDATE1\\\">\\r\\n            </nepali-date-picker>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-4\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n          <label style=\\\"width:30%\\\">Bank Account </label>\\r\\n          <input type=\\\"text\\\" style=\\\"width:60%\\\" id=\\\"BankAccount\\\" name=\\\"Bank_Acccount\\\"\\r\\n            (keydown.tab)=\\\"onBankReconciliationPopUPTab()\\\" (keydown.enter)=\\\"onBankReconciliationPopUPTab()\\\"\\r\\n            [(ngModel)]=\\\"bankReconciliationObj.ACNAME\\\" placeholder=\\\"Press ENTER or TAB to Account Name\\\" autocomplete=\\\"off\\\"/>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"col-md-4\\\">\\r\\n        <div class=\\\"checkbox\\\">\\r\\n          <label style=\\\"width:95%\\\"><input type=\\\"checkbox\\\" [(ngModel)]=\\\"bankReconciliationObj.SHOWRECONSILLED\\\"\\r\\n              name=\\\"ReconciledRecord\\\">Show Reconciled Record Also </label>\\r\\n        </div>\\r\\n\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"row col-md-12\\\">\\r\\n      <!-- <div class=\\\"col-md-4\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-sm-5\\\"><label>Division:</label></div>\\r\\n          <div class=\\\"col-sm-7\\\">\\r\\n            <select class=\\\"form-control input-text\\\" [(ngModel)]=\\\"bankReconciliationObj.DIV\\\"\\r\\n            (change)=\\\"onDivisionChanged()\\\">\\r\\n            <option value=\\\"%\\\"></option>\\r\\n            <option *ngFor=\\\"let div of division\\\" value=\\\"{{ div.INITIAL }}\\\">\\r\\n              {{ div.NAME }}\\r\\n            </option>\\r\\n          </select> \\r\\n          </div>\\r\\n       </div>\\r\\n      </div> -->\\r\\n\\r\\n      <div class=\\\"col-md-4\\\" style=\\\"margin-left:30px;\\\">\\r\\n        <label>To :</label>\\r\\n        <input   placeholder=\\\"Year End Date\\\" type=\\\"date\\\" style=\\\"width: 128px; height: 30px;\\\"\\r\\n        (change)=\\\"changeEndDate($event.target.value,'AD')\\\"  [(ngModel)]=\\\"bankReconciliationObj.DATE2\\\">&nbsp;&nbsp;\\r\\n\\r\\n        <div style=\\\" width: 134px;margin-left: 260px; margin-top: -29px;\\\">\\r\\n          <nepali-date-picker name=\\\"nepaliDateTo\\\" [id]=\\\"'nepaliDateto'\\\"\\r\\n            (change)=\\\"changeEndDate($event.detail.value,'BS')\\\"\\r\\n            [label]=\\\"'dd/mm/yyyy'\\\"  [(ngModel)]=\\\"bankReconciliationObj.BSDATE2\\\">\\r\\n            </nepali-date-picker>\\r\\n        </div>\\r\\n        &nbsp;\\r\\n      </div>\\r\\n\\r\\n      \\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"clearfix\\\" style=\\\"margin-top: 5px\\\">\\r\\n    <div class=\\\"col-md-12\\\" style=\\\"height:325px;overflow-y:scroll\\\">\\r\\n      <div class=\\\"header\\\" style=\\\"position: sticky;top:0\\\">\\r\\n        <table style=\\\"width: 100%;table-layout: fixed\\\">\\r\\n          <thead>\\r\\n            <tr style=\\\"border-bottom: 1px solid #E6E6E6; border-top: 1px solid #E6E6E6;    height: 25px;\\r\\n                            background:#C0C0C0;\\r\\n                            color: black;\\\">\\r\\n              <!-- <th style=\\\"width:55px\\\"></th> -->\\r\\n              <th style=\\\"width:108px\\\">Date </th>\\r\\n              <th style=\\\"width:195px\\\">Particular </th>\\r\\n              <th style=\\\"width:190px\\\">Voucher Number </th>\\r\\n              <th style=\\\"width:192px\\\">Voucher Type </th>\\r\\n              <th style=\\\"width:120px\\\">Cheque No </th>\\r\\n              <th style=\\\"width:100px\\\">Cheque Date </th>\\r\\n              <th style=\\\"width:130px\\\">Bank Date </th>\\r\\n              <th style=\\\"width:115px\\\">Debit</th>\\r\\n              <th style=\\\"width:110px\\\">Credit </th>\\r\\n            </tr>\\r\\n          </thead>\\r\\n        </table>\\r\\n      </div>\\r\\n      <table style=\\\"width: 100%;\\\">\\r\\n\\r\\n        <tbody style=\\\"border: 1px;\\\">\\r\\n          <tr *ngFor=\\\"let item of reconcileList; let in=index\\\">\\r\\n            <!-- <td style=\\\"width: 55px;\\\">\\r\\n              <input type=\\\"checkbox\\\" #check id=\\\"checkBox{{in}}\\\" (change)=\\\"itemChecked($event,in)\\\">\\r\\n            </td> -->\\r\\n\\r\\n            <td style=\\\"width: 110px;\\\">\\r\\n              {{item?.TRNDATE|date:'dd/MM/yyyy' }}\\r\\n            </td>\\r\\n\\r\\n\\r\\n\\r\\n            <td style=\\\"width: 195px;\\\">\\r\\n              {{item?.PARTICULARS }}\\r\\n            </td>\\r\\n\\r\\n            <td style=\\\"width: 195px;\\\">\\r\\n              {{item?.VNO }}\\r\\n            </td>\\r\\n\\r\\n            <td style=\\\"width: 195px;\\\">\\r\\n              {{item?.VCHRTYPE }}\\r\\n            </td>\\r\\n\\r\\n            <td style=\\\"width:120px;\\\">\\r\\n              {{item?.CHEQUENO  }}\\r\\n            </td>\\r\\n\\r\\n            <td style=\\\"width:100px;\\\">\\r\\n              {{item?.CHEQUEDATE|date:'dd/MM/yyyy' }}\\r\\n            </td>\\r\\n\\r\\n            <td style=\\\"width:115px;\\\">\\r\\n\\r\\n                <ims-date-picker (keyup.enter)=\\\"KeyUpMethod(in)\\\"   (onDateChange)=\\\"setBankDate($event,in)\\\" [index]=\\\"'bankDate'+in\\\"\\r\\n                  [date]=\\\"getBankDate(in)\\\" [ID]=\\\"in\\\"></ims-date-picker>\\r\\n            </td>\\r\\n\\r\\n\\r\\n            <td style=\\\"width:115px;text-align: right\\\">\\r\\n              {{item?.DRAMNT | twoDigitNumber}}\\r\\n            </td>\\r\\n\\r\\n            <td style=\\\"width:115px;text-align: right;\\\">\\r\\n              {{item?.CRAMNT | twoDigitNumber}}\\r\\n            </td>\\r\\n\\r\\n          </tr>\\r\\n        </tbody>\\r\\n      </table>\\r\\n\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n</div>\\r\\n<div class=\\\"bottom\\\">\\r\\n  <div class=\\\"col-md-12\\\">\\r\\n\\r\\n    <table class=\\\"table\\\" style=\\\"height: 100px; text-align:right; background:#C0C0C0;\\\">\\r\\n      <thead style=\\\"border: 1px solid #e6e6e6; \\\">\\r\\n        <ng-container *ngIf=\\\"showCompanybook == true;\\\">\\r\\n          <tr *ngFor=\\\"let item of balanceAsPerCompanyBook;\\\">\\r\\n            <td style=\\\"padding: 5px 0px; text-align: right; font-size: 12px; font-weight: bold; padding-right: 10px;\\\">\\r\\n              Balance As per Company Book </td>\\r\\n            <td style=\\\"padding: 5px 0px; text-align: right; padding-right: 10px;font-weight: 600;font-size:12px; \\\">\\r\\n              {{ !this.reconcileList  ?'0.00':(item.DRAMNT | twoDigitNumber) }}</td>\\r\\n            <td style=\\\"padding: 5px 0px; text-align: right; padding-right: 10px;font-weight: 600;font-size:12px; \\\">\\r\\n              {{ !this.reconcileList  ?'0.00':(item.CRAMNT | twoDigitNumber) }}</td>\\r\\n          </tr>\\r\\n        </ng-container>\\r\\n        <ng-container *ngIf=\\\"showCompanybook == false;\\\">\\r\\n          <tr>\\r\\n            <td style=\\\"padding: 5px 0px; text-align: right; font-size: 12px; font-weight: bold; padding-right: 10px;\\\">\\r\\n              Balance As per Company Book </td>\\r\\n            <td style=\\\"padding: 5px 0px; text-align: right; padding-right: 10px;font-size:12px; font-weight: 600;\\\">0.00\\r\\n            </td>\\r\\n            <td style=\\\"padding: 5px 0px; text-align: right; padding-right: 10px;font-size:12px; font-weight: 600;\\\">0.00\\r\\n            </td>\\r\\n          </tr>\\r\\n        </ng-container>\\r\\n\\r\\n\\r\\n      </thead>\\r\\n      <tbody style=\\\"border: 1px;\\\">\\r\\n\\r\\n        <ng-container *ngIf=\\\"reflectedBank == true;\\\">\\r\\n          <tr *ngFor=\\\"let item of amountNotReflectedOnBank;\\\" style=\\\"font-size: 11px;\\\">\\r\\n            <td style=\\\"line-height: 15px;padding: 5px 0px;text-align: right; font-size:12x;font-weight: bold; \\\">Amount\\r\\n              Not\\r\\n              Reflected on Bank(opening) </td>\\r\\n            <td style=\\\"line-height: 15px;padding: 5px 10px;text-align: right;font-size:12x;font-weight: bold; \\\">\\r\\n              {{ parseFloat(item.DRAMNT)  | twoDigitNumber }}\\r\\n            </td>\\r\\n            <td style=\\\"line-height: 15px;padding: 5px 10px;text-align: right;font-size:12x;font-weight: bold; \\\">\\r\\n              {{ parseFloat(item.CRAMNT)  | twoDigitNumber}}\\r\\n            </td>\\r\\n          </tr>\\r\\n        </ng-container>\\r\\n        <ng-container *ngIf=\\\"reflectedBank == false;\\\">\\r\\n          <tr style=\\\"font-size: 12px;\\\">\\r\\n            <td style=\\\"line-height: 15px;padding: 5px 10px;text-align: right; font-size:12x;font-weight: bold; \\\">Amount\\r\\n              Not\\r\\n              Reflected on Bank(opening) </td>\\r\\n            <td style=\\\"line-height: 15px;padding: 5px 10px;text-align: right;font-size:12x;font-weight: bold; \\\">0.00\\r\\n            </td>\\r\\n            <td style=\\\"line-height: 15px;padding: 5px 10px;text-align: right;font-size:12x;font-weight: bold; \\\">0.00\\r\\n            </td>\\r\\n          </tr>\\r\\n        </ng-container>\\r\\n\\r\\n\\r\\n\\r\\n        <tr style=\\\"font-size: 12px;\\\">\\r\\n          <td style=\\\"line-height: 15px;padding: 5px 10px; text-align: right;font-size:12x;font-weight: bold; \\\">Amount\\r\\n            Not\\r\\n            Reflected on Bank (Periodic) </td>\\r\\n          <td style=\\\"line-height: 15px;padding: 5px 10px; text-align: right;font-size:12x;font-weight: bold; \\\">\\r\\n            {{!this.reconcileList ?'0.00':(notReflectedonBankDebit | twoDigitNumber) }} </td>\\r\\n          <td style=\\\"line-height: 15px;padding: 5px 10px; text-align: right;font-size:12x;font-weight: bold; \\\">\\r\\n            {{!this.reconcileList ?'0.00':(notReflectedonBankCredit | twoDigitNumber)}} </td>\\r\\n        </tr>\\r\\n\\r\\n        <tr style=\\\"font-size: 12px;\\\">\\r\\n          <td style=\\\"line-height: 15px;padding: 5px 10px; text-align: right;font-size:12x;font-weight: bold; \\\">Balance\\r\\n            As Per\\r\\n            Bank Book </td>\\r\\n          <td style=\\\"line-height: 15px;padding: 5px 10px; text-align: right;font-size:12x;font-weight: bold; \\\">\\r\\n            {{!this.reconcileList ?'0.00': (balanceAsPerBankDebit | twoDigitNumber)}} </td>\\r\\n          <td style=\\\"line-height: 15px;padding: 5px 10px; text-align: right;font-size:12x;font-weight: bold; \\\">\\r\\n            {{!this.reconcileList ?'0.00': (balanceAsperBankCredit | twoDigitNumber) }}</td>\\r\\n        </tr>\\r\\n\\r\\n        <tr style=\\\"font-size: 12px;\\\">\\r\\n          <td style=\\\"line-height: 15px;padding: 5px 10px; text-align: right;font-size:12x;font-weight: bold; \\\">\\r\\n            Difference</td>\\r\\n          <td style=\\\"line-height: 15px;padding: 5px 10px; text-align: right;font-size:12x;font-weight: bold; \\\">\\r\\n            {{!this.reconcileList?'0.00': (differenceDebit | twoDigitNumber)}}</td>\\r\\n          <td style=\\\"line-height: 15px;padding: 5px 10px; text-align: right;font-size:12x;font-weight: bold; \\\">\\r\\n            {{!this.reconcileList?'0.00': (differenceCredit | twoDigitNumber) }}</td>\\r\\n        </tr>\\r\\n\\r\\n      </tbody>\\r\\n\\r\\n    </table>\\r\\n  </div>\\r\\n\\r\\n</div>\\r\\n\\r\\n<generic-popup-grid #bankReconciliationGeneric [popupsettings]=\\\"gridbankReconciliationPopupSettings\\\"\\r\\n  (onItemDoubleClick)=\\\"onItemDoubleClick($event)\\\">\\r\\n</generic-popup-grid>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/AccountVoucher/components/bank-reconciliation/bank-reconciliation.component.html\n// module id = 1319\n// module chunks = 1 2 3","module.exports = \"<style>\\r\\n  td {\\r\\n    border: 1px solid #e3e3e3;\\r\\n  }\\r\\n.radioLabel{\\r\\n  height: 28px;\\r\\n    font-weight: normal;\\r\\n    /* width: 90px; */\\r\\n    margin: 2px;\\r\\n    vertical-align: middle;\\r\\n    font-size: 13px;\\r\\n    padding-top: 4px;\\r\\n}\\r\\n</style>\\r\\n\\r\\n<div class=\\\"clearfix action-bar\\\" style=\\\"background-color: #E2EAEA;padding: 5px;\\\">\\r\\n  <div class=\\\"col-md-1\\\" style=\\\"padding-left: 0px;\\\">\\r\\n    <button class=\\\"btn btn-info\\\"\\r\\n      (click)=\\\"BillTrack.SHOWMORE=!BillTrack.SHOWMORE\\\">{{BillTrack.SHOWMORE?\\\"Hide Details\\\":\\\"Show Details\\\"}}[F1]</button>\\r\\n  </div>\\r\\n  <div class=\\\"col-md-3\\\">\\r\\n    <h3>Bill Tracking Amendment</h3>\\r\\n  </div>\\r\\n  <div class=\\\"col-md-8\\\">\\r\\n    <button class=\\\"btn btn-info pull-right\\\" (click)=\\\"saveBillTrack()\\\">Save</button>\\r\\n    <button class=\\\"btn btn-info pull-right\\\" style=\\\"margin-right: 5px;\\\" (click)=\\\"initialFormLoad()\\\">Reset</button>\\r\\n    <!-- <button class=\\\"btn btn-info pull-right\\\" style=\\\"margin-right: 5px;\\\" (click)=\\\"DeleteExeedTrack()\\\">Delete Exceed Tracking Entry</button> -->\\r\\n    <!-- <button class=\\\"btn btn-info pull-right\\\" style=\\\"margin-right: 5px;\\\" (click)=\\\"DoBillTrackFromBeg()\\\">Do Bill Tracking From The Beginning</button> -->\\r\\n  \\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n<div class=\\\"clearfix\\\" *ngIf=\\\"BillTrack.SHOWMORE \\\">\\r\\n  <div style=\\\"margin:5px 0px 0px 0px ; border: 1px solid #e6e6e6; \\\">\\r\\n    <div class=\\\"col-md-8\\\">\\r\\n      <div class=\\\"col-md-12\\\" style=\\\"padding-left: 0px;\\\">\\r\\n        <!-- <div class=\\\"col-md-6\\\"> -->\\r\\n          <div class=\\\"row\\\">\\r\\n            <label style=\\\"width: 8.6%;margin-left: 2%;\\\">Party Type:</label>\\r\\n           \\r\\n              <input type=\\\"radio\\\" [(ngModel)]=\\\"BillTrack.PARTYTYPE\\\"  value=\\\"Customer\\\" name=\\\"Receipt\\\" (click)=\\\"OnPartyChange($event.target.value)\\\">  <a class=\\\"radioLabel\\\">Customer</a>\\r\\n              <a class=\\\"radioLabel\\\"><input type=\\\"radio\\\" [(ngModel)]=\\\"BillTrack.PARTYTYPE\\\"  value=\\\"Supplier\\\" name=\\\"Payment\\\" (click)=\\\"OnPartyChange($event.target.value)\\\" style=\\\"margin-left:12px\\\"> Supplier</a>\\r\\n              <label style=\\\"width: 47%; margin-left: 14%;\\\">\\r\\n                <input type=\\\"checkbox\\\" name=\\\"zero\\\" [(ngModel)]=\\\"BillTrack.trackBill\\\" (change)=\\\"OnTrackChange($event)\\\"> Track Bills From The Beginning\\r\\n              </label>\\r\\n              \\r\\n\\r\\n            \\r\\n          </div>\\r\\n        <!-- </div> -->\\r\\n        </div>\\r\\n        <!-- <div class=\\\"col-md-12\\\" style=\\\"padding-left: 0px;\\\"> -->\\r\\n        <!-- <div class=\\\"col-md-6\\\"> -->\\r\\n          <!-- <div class=\\\"row\\\">\\r\\n            <label style=\\\"width: 10%;margin-left: 2%\\\">Party Name:</label>\\r\\n            <input type=\\\"text\\\" style=\\\"width:34.5%\\\" id=\\\"partyname\\\" name=\\\"partyname\\\" (keydown)=\\\"onKeydownPrevent($event)\\\"\\r\\n              placeholder=\\\"Press Tab or Enter to select Party\\\" (keydown.enter)=\\\"selectParty()\\\" (keydown.tab)=\\\"selectParty()\\\"\\r\\n              [(ngModel)]=\\\"BillTrack.ACNAME\\\" />\\r\\n              \\r\\n              <button class=\\\"btn btn-info pull-right\\\" style=\\\"float: right;width: 9%;margin-right: 43%\\\" (click)=\\\"autoAdjust()\\\">Auto Adjust</button>\\r\\n              <button class=\\\"btn btn-info pull-right\\\" style=\\\"float: left;width: 9%;margin-right: 43%\\\" (click)=\\\"loadData()\\\">Load</button>\\r\\n          </div> -->\\r\\n<!-- \\r\\n        </div> -->\\r\\n        \\r\\n       \\r\\n      <!-- </div> -->\\r\\n\\r\\n      <div class=\\\"col-md-12\\\" style=\\\"padding-left: 0px;background: #f0f3f4;\\\">\\r\\n          <div class=\\\"col-md-4\\\"style=\\\"\\r\\n          margin-left: 4%;\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n              <label style=\\\"width: 26%;margin-left: -12%;\\\">Party Name: </label>\\r\\n              <!-- <input type=\\\"text\\\" style=\\\"width:50%\\\" id=\\\"ledgerbl\\\" decimalPlacesRestriction=\\\"2\\\" name=\\\"ledgerbl\\\"\\r\\n                [(ngModel)]=\\\"BillTrack.LEDGERBALANCE\\\" readonly /> -->\\r\\n                <input type=\\\"text\\\" style=\\\"width: 80%;margin-left: 2%;\\\" id=\\\"partyname\\\" name=\\\"partyname\\\" (keydown)=\\\"onKeydownPrevent($event)\\\"\\r\\n                placeholder=\\\"Press Tab or Enter to select Party\\\" (keydown.enter)=\\\"selectParty()\\\" (keydown.tab)=\\\"selectParty()\\\"\\r\\n                [(ngModel)]=\\\"BillTrack.ACNAME\\\" autocomplete=\\\"off\\\"/>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"col-md-3\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n              <button class=\\\"btn btn-info pull-right\\\" style=\\\"float: left;width: 38%;margin-right: 43%;\\\" (click)=\\\"loadData()\\\">Load</button>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"col-md-3\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n              <button class=\\\"btn btn-info pull-right\\\" style=\\\"float: right;width: 45%;\\\" (click)=\\\"autoAdjust()\\\"[disabled]=\\\"this.autoAdjustValue==true\\\">Auto Adjust</button>\\r\\n\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n \\r\\n      \\r\\n    </div>\\r\\n    <div class=\\\"col-md-4\\\" style=\\\"border-left: 1px solid silver;\\\">\\r\\n      <div class=\\\"col-md-12\\\" style=\\\"margin-top: 10%;\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n          <label style=\\\"width:31%\\\">Tracking Amount</label>\\r\\n          <input type=\\\"text\\\" style=\\\"width:32%\\\" id=\\\"ledgerbl\\\" decimalPlacesRestriction=\\\"2\\\" name=\\\"ledgerbl\\\"\\r\\n            [(ngModel)]=\\\"BillTrack.LEDGERBALANCE\\\" readonly />\\r\\n            <!-- <input type=\\\"radio\\\" [(ngModel)]=\\\"BillTrack.isBulkTracking\\\"  value=\\\"1\\\" name=\\\"2\\\" (click)=\\\"BullTracking()\\\" style=\\\"margin-left: 4%;\\\">  <a class=\\\"radioLabel\\\">Bulk Tracking</a> -->\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n \\r\\n  </div>\\r\\n</div>\\r\\n<div class=\\\"col-md-8\\\">\\r\\n<div class=\\\"clearfix\\\" style=\\\"margin-top: 5px;height: 400px;overflow-y: scroll;    /* border: 1px solid silver; */\\r\\nbackground-color: white;\\\">\\r\\n  <div class=\\\"header\\\" style=\\\"position: sticky;top:0\\\">\\r\\n    <div class=\\\"col-md-12\\\" style=\\\"padding-left: 0px;background: #f0f3f4;\\\">\\r\\n    <label style=\\\"background: #f0f3f4;padding-top: 0p;margin-top: 0px;margin-bottom: 0px;float: left;font-size: larger;\\r\\n    font-weight: bold;\\r\\n    width: auto;\\\">DUE BILL LISTS:</label>\\r\\n      <!-- <div class=\\\"col-md-3\\\"style=\\\"\\r\\n      margin-left: 4%;\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n          <label style=\\\"width:37%\\\">Ledger B/L: </label>\\r\\n          <input type=\\\"text\\\" style=\\\"width:50%\\\" id=\\\"ledgerbl\\\" decimalPlacesRestriction=\\\"2\\\" name=\\\"ledgerbl\\\"\\r\\n            [(ngModel)]=\\\"BillTrack.LEDGERBALANCE\\\" readonly />\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-3\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n          <label style=\\\"width:33%\\\">Due B/L: </label>\\r\\n          <input type=\\\"text\\\" style=\\\"width:50%\\\" name=\\\"duebl\\\" decimalPlacesRestriction=\\\"2\\\"\\r\\n            [(ngModel)]=\\\"BillTrack.DUEBALANCE\\\" readonly />\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-3\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n          <label style=\\\"width:39%\\\">B/L Tracked: </label>\\r\\n          <input type=\\\"text\\\" style=\\\"width:50%\\\" name=\\\"balance\\\" decimalPlacesRestriction=\\\"2\\\" [(ngModel)]=\\\"BillTrack.BALANCE\\\"\\r\\n            readonly />\\r\\n        </div>\\r\\n      </div> -->\\r\\n\\r\\n      <div class=\\\"col-md-5\\\"style=\\\"\\r\\n      margin-left: 4%;\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n          <label style=\\\"width:37%\\\">Total Adjusted B/L: </label>\\r\\n          <input type=\\\"text\\\" style=\\\"width:31%\\\" id=\\\"ledgerbl\\\" decimalPlacesRestriction=\\\"2\\\" name=\\\"ledgerbl\\\"\\r\\n            [(ngModel)]=\\\"BillTrack.TOTALADJAMOUNT\\\" readonly />\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-3\\\">\\r\\n        \\r\\n      </div>\\r\\n    </div>\\r\\n    <table style=\\\"width: 100%;table-layout: fixed\\\">\\r\\n      <thead>\\r\\n        <tr style=\\\"background-color: #2dacd1;height:25px;\\\">\\r\\n          <th style=\\\"width:40px;\\\">Sno</th>\\r\\n          <th style=\\\"width: 12.5%;\\\">Bill Date</th>\\r\\n          <th style=\\\"width: 7%;\\\">Division</th>\\r\\n          <th style=\\\"width: 12.5%;\\\">Voucher No</th>\\r\\n          <th style=\\\"width: 13%;\\\">Ref Bill No</th>\\r\\n          <th style=\\\"width: 12%;\\\">Bill Amount</th>\\r\\n          <th>Clear Amount</th>\\r\\n          <th>DUE Amount</th>\\r\\n          <th>Adjusting Amount</th>\\r\\n        </tr>\\r\\n      </thead>\\r\\n    </table>\\r\\n  </div>\\r\\n  <table style=\\\"width:100%;table-layout: fixed;\\\">\\r\\n    <tbody *ngIf=\\\" BillTrack.BILL.length\\\">\\r\\n      <tr *ngFor=\\\"let bill of BillTrack.BILL;let i= index\\\">\\r\\n        <td style=\\\"width: 40px;\\\">{{i+1}}</td>\\r\\n        <td>{{bill?.BILLDATE | date: 'dd-MM-yyyy'}}</td>\\r\\n        <td style=\\\"width: 7%;\\\">MMX</td>\\r\\n        <td>{{bill?.BILLNO}}</td>\\r\\n        <td>{{bill?.REFNO}}</td>\\r\\n        <td>{{bill?.BILLAMOUNT |number:'1.2-2'}}</td>\\r\\n        <td>{{bill?.CLEARAMOUNT |number:'1.2-2'}}</td>\\r\\n        <td>{{bill?.DUEAMOUNT |number:'1.2-2' }}</td>\\r\\n        <td>\\r\\n          <input style=\\\"width: 100%;\\r\\n                  height: 25px;\\r\\n                  padding-top: 0px;\\r\\n                  padding-bottom: 0px;text-align: right\\\" id=\\\"adj{{i}}\\\" type=\\\"text\\\" [(ngModel)]=\\\"bill.TAdjustingAmt\\\"\\r\\n            (change)=\\\"onADjustmentChange(i)\\\" (keydown.enter)=\\\"IndividualAdjustment(i)\\\" [disabled]=\\\"this.autoAdjustValue==true\\\" autocomplete=\\\"off\\\">\\r\\n        </td>\\r\\n      </tr>\\r\\n    </tbody>\\r\\n  </table>\\r\\n</div>\\r\\n</div>\\r\\n<div class=\\\"col-md-4\\\" style=\\\"border-left: 1px solid silver;\\\">\\r\\n\\r\\n  <div class=\\\"clearfix\\\" style=\\\"margin-top: 5px;height: 400px;overflow-y: scroll;    /* border: 1px solid silver; */\\r\\n  background-color: white;\\\">\\r\\n    <div class=\\\"header\\\" style=\\\"position: sticky;top:0\\\">\\r\\n      <label style=\\\"width: 100%;background: #f0f3f4;padding-top: 0p;margin-top: 0px;margin-bottom: 0px;font-size: larger;font-weight: bold;\\\">NON TRACK VOUCHER LIST:</label><br />\\r\\n      <table style=\\\"width: 100%;table-layout: fixed\\\">\\r\\n        <thead>\\r\\n          <tr style=\\\"background-color:#2dacd1;height:25px;\\\">\\r\\n            <th style=\\\"width:5%\\\"><input type=\\\"checkbox\\\" (change)=\\\"selectAllIndex($event.target.checked)\\\" [checked]=\\\"selectedAll == true\\\"></th>\\r\\n            <th style=\\\"width: 19%;\\\">Date</th>\\r\\n            <th style=\\\"width: 23%;\\\">Voucher No</th>\\r\\n           <th> Amount</th>\\r\\n            <th>Tracked AMOUNT</th>\\r\\n            <th>Non-Tracked AMOUNT</th>\\r\\n       \\r\\n          </tr>\\r\\n        </thead>\\r\\n      </table>\\r\\n    </div>\\r\\n    <table style=\\\"width:100%;table-layout: fixed;\\\">\\r\\n      <tbody *ngIf=\\\" BillTrack.NonTracking\\\">\\r\\n        <tr *ngFor=\\\"let bill of BillTrack.NonTracking;let i= index\\\">\\r\\n        <td style=\\\"width:5%\\\"><input type=\\\"checkbox\\\" (change)=\\\"selectAll(bill,i,$event.target.checked)\\\" [checked]=\\\"selectedAll == true\\\"></td>\\r\\n         <td style=\\\"width: 19%;height: 28px;\\\">{{bill?.INVOICEDATE | date: 'dd-MM-yyyy'}}</td>\\r\\n          <td style=\\\"width: 23%;\\\">{{bill?.INVOICENO}}</td>\\r\\n          <td>{{bill?.INVOICEAMOUNT}}</td>\\r\\n          <td>{{bill?.TRACKAMOUNT |number:'1.2-2'}}</td>\\r\\n          <td>{{bill?.NONTRACKAMOUNT |number:'1.2-2'}}</td>\\r\\n        \\r\\n          \\r\\n        </tr>\\r\\n      </tbody>\\r\\n    </table>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n\\r\\n<generic-popup-grid #genericGrid [popupsettings]=\\\"gridPopupSettings\\\" (onItemDoubleClick)=\\\"dblClickPartyItem($event)\\\">\\r\\n</generic-popup-grid>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n<style>\\r\\n  .modal-content {\\r\\n    padding: 1px;\\r\\n    margin: 0px;\\r\\n    float: right;\\r\\n  }\\r\\n\\r\\n  tbody>tr:hover {\\r\\n    background-color: #f3f5f4;\\r\\n    cursor: pointer;\\r\\n  }\\r\\n\\r\\n  tr {\\r\\n    font-size: 11px;\\r\\n  }\\r\\n\\r\\n  .selected-row {\\r\\n    background-color: #ced6d3 !important;\\r\\n  }\\r\\n\\r\\n  .table>tbody>tr>td {\\r\\n    line-height: 30px !important;\\r\\n  }\\r\\n\\r\\n  .table>thead>tr>th {\\r\\n    line-height: 5px !important;\\r\\n  }\\r\\n\\r\\n  .table>tbody>tr>td:first-child {\\r\\n    text-align: left !important;\\r\\n    padding: 0px 0px 0px 11px !important;\\r\\n  }\\r\\n\\r\\n  .modal-content {\\r\\n    box-shadow: -10px 0px 10px 1px #aaaaaa;\\r\\n  }\\r\\n\\r\\n  .modal-content-main-area {\\r\\n    max-height: 100%;\\r\\n    height: 100%;\\r\\n    overflow: auto;\\r\\n    overflow-x: hidden;\\r\\n  }\\r\\n\\r\\n  .modal-content-summary-area {\\r\\n    max-height: 20%;\\r\\n    height: 20%;\\r\\n    overflow: auto;\\r\\n    overflow-x: hidden;\\r\\n  }\\r\\n\\r\\n  .ellipsis {\\r\\n    /* width: 220px;\\r\\n    text-overflow: ellipsis;\\r\\n    overflow: hidden; */\\r\\n    white-space: nowrap;\\r\\n  }\\r\\n\\r\\n</style>\\r\\n<div class=\\\"modal-sticky\\\" *ngIf=\\\"isActive\\\" style=\\\"display : block; padding: 0px;  margin-bottom: 25px;\\\">\\r\\n  <!-- Modal content -->\\r\\n  <div class=\\\"modal-content modal-content-main-area\\\">\\r\\n\\r\\n    <div class=\\\"modal-header\\\" style=\\\"padding: 0px;background: #8cccfb;\\\">\\r\\n      <button class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"isActive=!isActive\\\">\\r\\n        <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n      </button>\\r\\n      <h4 class=\\\"modal-title\\\" style=\\\"text-align: center;\\\">\\r\\n        {{ gridDuePopupSettings.title }}\\r\\n      </h4>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-12 table-scroll\\\" style=\\\"padding: 0;\\\">\\r\\n      <table class=\\\"table\\\">\\r\\n        <thead>\\r\\n          <tr style=\\\"background: #8cccfb;\\\">\\r\\n            <th>VCHRNO</th>\\r\\n            <th>AMOUNT</th>\\r\\n            <th>TRACKED AMOUNT</th>\\r\\n            <th>PENDING AMOUNT</th>\\r\\n          </tr>\\r\\n        </thead>\\r\\n        <tbody *ngIf=\\\"pendingVoucherList.length\\\">\\r\\n          <tr class=\\\"highlight\\\" [class.selected-row]=\\\"selectVoucherIndex == i\\\"\\r\\n            *ngFor=\\\"let itemObj of pendingVoucherList;let i = index\\\" (dblclick)=\\\"dblClickDueItem(itemObj)\\\"\\r\\n            (click)=\\\"selectVoucherIndex=i\\\" title=\\\"double click for detail view\\\">\\r\\n            <td style=\\\"border: none;\\\">\\r\\n              {{itemObj?.VCHRNO}}\\r\\n            </td>\\r\\n            <td style=\\\"border: none;\\\">\\r\\n              {{itemObj?.AMOUNT}}\\r\\n            </td>\\r\\n            <td style=\\\"border: none;\\\">\\r\\n              {{itemObj?.TRACKED_AMOUNT==null?'0.00':itemObj?.TRACKED_AMOUNT}}\\r\\n            </td>\\r\\n            <td style=\\\"border: none;\\\">\\r\\n              {{itemObj?.AMOUNT-(itemObj?.TRACKED_AMOUNT==null?0:itemObj?.TRACKED_AMOUNT)}}\\r\\n            </td>\\r\\n          </tr>\\r\\n        </tbody>\\r\\n      </table>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/AccountVoucher/components/bill-tracking-amendment/bill-tracking-amendment.component.html\n// module id = 1320\n// module chunks = 1 2 3","module.exports = \"<style>\\r\\n    .table tr th {\\r\\n      text-align: center;\\r\\n      vertical-align: middle;\\r\\n      line-height: 15px;\\r\\n    }\\r\\n  \\r\\n    tr {\\r\\n      /* border: 1px solid #e6e6e6; */\\r\\n      max-height: 25px;\\r\\n    }\\r\\n  \\r\\n    td {\\r\\n      height: 20px;\\r\\n      /* border: 1px solid #e6e6e6; */\\r\\n     \\r\\n  \\r\\n    }\\r\\n  \\r\\n    .bottom {\\r\\n      position: fixed;\\r\\n      bottom: 20px;\\r\\n      left: 0px;\\r\\n      width: 100%;\\r\\n      height: 140px;\\r\\n      z-index: 999997;\\r\\n      /* background: #e2eaea !important; */\\r\\n    }\\r\\n    .colorLabel{\\r\\n    width: 120px !important;\\r\\n    font-size: 21px !important;\\r\\n    font-weight: bold;\\r\\n    color: #2dacd1;\\r\\n  }\\r\\n  .diffAmountItemForAccount{\\r\\n    font-size: 21px;\\r\\n    width: 160px;\\r\\n    color: #2dacd1;\\r\\n    text-align: right;\\r\\n    border: 1px solid #cbcbcb;\\r\\n    font-weight: bold;\\r\\n  }\\r\\n  .sectionWrapper{\\r\\n      display: flex;\\r\\n      flex-direction: column;\\r\\n      height: 94vh;\\r\\n    }\\r\\n\\r\\n .midTableWrapper{\\r\\n  flex: 1; \\r\\n  overflow: auto;\\r\\n  overflow-x:hidden;\\r\\n}\\r\\n.footer-wrapper {\\r\\n  background: lightgreen;\\r\\n  min-height: 185px;\\r\\n}\\r\\n\\r\\n  \\r\\n  \\r\\n  </style>\\r\\n\\r\\n    <div class=\\\"sectionWrapper\\\">\\r\\n      <div class=\\\"topWwrapper\\\">\\r\\n          \\r\\n<div class=\\\"sticky-top\\\">\\r\\n    <div class=\\\"row clearfix\\\">\\r\\n        <div class=\\\"col-md-1\\\">\\r\\n            <voucher-master-toggler></voucher-master-toggler>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-5\\\">\\r\\n            <!-- <h2 style=\\\"color: black; font-size: 15px; font-weight: 400\\\">{{_transactionService.pageHeading}}[{{this._transactionService.TrnMainObj.Mode}}] </h2> -->\\r\\n            <label style=\\\"font-family: Segoe UI Light;font-weight: bold;font-size: 20px;padding-left: 5%;padding-top: 1%;width:50%;\\\">{{ _transactionService.pageHeading }}</label>\\r\\n            <label style=\\\"font-size: 14px;width: 150px;padding-top: 9px;\\\">&nbsp;>> {{ _transactionService.TrnMainObj?.Mode | titlecase}} Voucher</label>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-6\\\">\\r\\n            <account-master-action  \\r\\n            ></account-master-action> \\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n<div class=\\\"main-container\\\" style=\\\"margin-bottom: 0;\\\">\\r\\n    <div [hidden]=\\\"masterService.ShowMore\\\" class=\\\"row clearfix\\\" style=\\\"margin: 2px;\\\">\\r\\n        <div class=\\\"col-md-12\\\" style=\\\"margin: 2px 15px ; padding-left: 5px; padding-right: 5px; border: 1px solid #e6e6e6; \\\">\\r\\n         <div class=\\\"col-md-8\\\" style=\\\" padding-left: 0px; padding-right: 2px; height: 135px; overflow-y: auto; overflow-x: hidden; \\\" >\\r\\n            <!-- <div class=\\\"row\\\" >\\r\\n                <div class=\\\"col-md-3\\\">\\r\\n                    <label class=\\\" form-control-label\\\">Account Name\\r\\n                    </label>\\r\\n                      <input \\r\\n                         type=\\\"number\\\"\\r\\n                         class=\\\"form-control\\\"\\r\\n                         placeholder=\\\"Account Name\\\"/>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-3\\\">\\r\\n                    <label class=\\\" form-control-label\\\">Amount \\r\\n                    </label>\\r\\n                      <input \\r\\n                        type=\\\"number\\\"\\r\\n                        class=\\\"form-control\\\"\\r\\n                        placeholder=\\\"Amount\\\"\\r\\n                       />\\r\\n                </div>\\r\\n                <div class=\\\"col-md-4\\\">\\r\\n                    <label class=\\\" form-control-label\\\">Naration\\r\\n                    </label>\\r\\n                    <textarea style=\\\"height: 25px; width: 100%; \\\" >\\r\\n                    </textarea>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-2\\\">\\r\\n                    <button (click)=\\\"onAddClick()\\\" style=\\\"margin: 0px 4px;\\\" class=\\\"btn btn-info pull-right\\\">\\r\\n                        ADD\\r\\n                    </button>\\r\\n                </div>\\r\\n            </div> -->\\r\\n            <div class=\\\"row\\\">   \\r\\n                <div class=\\\"col-md-2\\\" >\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-md-10\\\" style=\\\"font-size: 12px;\\\">\\r\\n                            Cr A/c Selection :\\r\\n                        </div>\\r\\n                        <div class=\\\"col-md-2\\\" style=\\\"padding: 0px;\\\">\\r\\n                            <div style=\\\"border-top : 1px solid #a7c7d4;margin-top: 5px;padding-left: 0px; width: 100%; \\\"></div>\\r\\n                        </div>\\r\\n                    </div>                      \\r\\n                </div>       \\r\\n                <div class=\\\"col-md-10\\\" style=\\\"padding-left: 0px;\\\">                \\r\\n                    <div style=\\\"border-top : 1px solid #a7c7d4;margin-top: 5px;padding-left: 0px; width: 100%; \\\"></div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"row\\\" style=\\\"margin-left: 0px;\\\">\\r\\n                <!-- <fieldset> -->\\r\\n                    <!-- <legend>Cr A/c Selection </legend> -->\\r\\n                    <table style=\\\"width: 98%;\\\" >\\r\\n                        <thead>\\r\\n                            <tr style=\\\"border-bottom: 1px solid #E6E6E6; border-top: 1px solid #E6E6E6;    height: 25px;\\r\\n                            background:#C0C0C0;\\r\\n                            color: black;\\\" >\\r\\n    \\r\\n                            <th style=\\\"width: 3%;font-weight: normal;font-size: 13px;\\\">Sn</th>\\r\\n                            <!-- <th style=\\\"width: 24%;font-weight: normal;font-size: 13px;\\\">Ledger A/C</th> -->\\r\\n                            <th style=\\\"width: 24%;font-weight: normal;font-size: 13px;\\\">Ledger A/C</th>\\r\\n                            <th *ngIf=\\\"_transactionService.userSetting.ENABLESUBLEDGER==1\\\" style=\\\"width: 23%;font-weight: normal;font-size: 13px;\\\">\\r\\n                                Sub Ledger A/C\\r\\n                              </th>\\r\\n                              <!-- <th style=\\\"width: 15%;font-weight: normal;font-size: 13px;\\\">Amount Without VAT</th> -->\\r\\n                            <th style=\\\"width: 9%;font-weight: normal;font-size: 13px;\\\">Amount</th>\\r\\n                            <th *ngIf=\\\"_transactionService.userSetting.enableCostCenter==2\\\" style=\\\"width: 15%;font-weight: normal;font-size: 13px;\\\">Cost Center</th>\\r\\n                            <th style=\\\"width: 50%;font-weight: normal;font-size: 13px;\\\">Narration </th>\\r\\n    \\r\\n                            </tr>\\r\\n                          \\r\\n                        </thead>\\r\\n                        <tbody *ngFor=\\\"let t of _transactionService.creditList; let i = index\\\"  >\\r\\n                            <tr>\\r\\n                                <td style=\\\"width: 3%;\\\">\\r\\n                                    {{i+1}}\\r\\n                                </td>\\r\\n                                <td style=\\\"width: 24%;\\\" class=\\\"cell-with-comment\\\" >\\r\\n                                   <input\\r\\n                                   #ACCODEInput_\\r\\n                                   style=\\\"width: 100%;\\\"\\r\\n                                   autocomplete=\\\"off\\\"\\r\\n                                   id = \\\"AccountName_{{i}}\\\"\\r\\n                                   type=\\\"text\\\"\\r\\n                                   placeholder=\\\"press ENTER to Select\\\"\\r\\n                                   [disabled]=\\\"_transactionService.TrnMainObj.Mode=='VIEW'\\\"\\r\\n                                   [(ngModel)]=\\\"t.ACNAME\\\" \\r\\n                                   (keydown.Enter)=\\\"showAcList(i); \\\"\\r\\n                                   (keydown.Tab)=\\\"focusNextValidation('Ledger',t)\\\"\\r\\n                                   (keydown)=\\\"preventInput($event)\\\" \\r\\n                                   (keydown.Shift.Delete)=\\\"clearRow($event, i);\\\"\\r\\n                                   (focus)=\\\"onFocusCreditSelection($event,i)\\\"\\r\\n                                   />\\r\\n    \\r\\n                                   <!-- <span class=\\\"cell-comment\\\">\\r\\n                                    press ENTER or TAB to Select\\r\\n                                    {{ _transactionService.TableAcHeader }}\\r\\n                                  </span> -->\\r\\n                                   \\r\\n                                </td>\\r\\n                                <td  *ngIf=\\\"_transactionService.userSetting.ENABLESUBLEDGER==1\\\" class=\\\"cell-with-comment\\\">\\r\\n             \\r\\n       \\r\\n                                    <div *ngIf=\\\"(_transactionService.TrnMainObj.Mode == 'NEW' || _transactionService.TrnMainObj.Mode == 'EDIT')\\\" style=\\\"width: 100%;\\\">\\r\\n                                      <input #SubLedgerInput id=\\\"SubLedgerInputCr_{{i}}\\\" autocomplete=\\\"off\\\" [(ngModel)]=\\\"t.SL_ACNAME\\\"\\r\\n                                        style=\\\"height:23px;width: 100%;\\\" (keyup.Enter)=\\\"onsubLedgerTab(i,t.A_ACID); SubLedgerInput.blur()\\\"\\r\\n                                        (keydown.Tab)=\\\"focusNextValidation('SubLedger',t)\\\"\\r\\n                                        (keydown.Shift.Delete)=\\\"clearRow($event, i,t);\\\" (keydown)=\\\"preventInput($event)\\\" (focusout)=\\\"changedSubLedger($event,t)\\\"\\r\\n                                        placeholder=\\\"press ENTER to Select\\\" [disabled]=\\\"t.disableSubLedger == true\\\"/>\\r\\n                                      <!-- <span class=\\\"cell-comment\\\">\\r\\n                                        press ENTER or TAB to Select Sub-Ledger\\r\\n                                      </span> -->\\r\\n                                    </div>\\r\\n                                \\r\\n                                    <div *ngIf=\\\"_transactionService.TrnMainObj.Mode != 'NEW' && _transactionService.TrnMainObj.Mode != 'EDIT'\\\" style=\\\"width: 100%;\\\">\\r\\n                                      <div style=\\\"width:100%;line-height:21px;\\\">\\r\\n                                        {{ t.SL_ACNAME }}\\r\\n                                      </div>\\r\\n                                    </div>\\r\\n                                  </td>\\r\\n\\r\\n                                  <!-- <td style=\\\"width: 15%;\\\">\\r\\n                                    <input\\r\\n                                    style=\\\"width: 100%; text-align: right; \\\"\\r\\n                                    id = \\\"Amount_withoutvat_{{i}}\\\"\\r\\n                                    type=\\\"number\\\"\\r\\n                                    [disabled] = \\\"t.ACNAME == null || _transactionService.TrnMainObj.Mode== 'VIEW'\\\"\\r\\n                                    [(ngModel)]=\\\"t.CRAMNT_WITHOUTVAT\\\" decimalPlacesRestriction=\\\"2\\\"\\r\\n                                    (change)=\\\"ChangeCRAMNT_WithoutVAT(i)\\\"\\r\\n                                    (keydown.Enter)=\\\"CRAMNT_WithoutVAT_RowOk(i,t)\\\"\\r\\n                                    (keydown.Tab)=\\\"CRAMNT_WithoutVAT_RowOk(i,t)\\\" \\r\\n                                    (focusout)=\\\"CRAMNT_WithoutVAT_RowOk(i,t)\\\" \\r\\n                                    (keydown.Shift.Delete)=\\\"clearRow($event, i);\\\"\\r\\n                                    />\\r\\n                                </td> -->\\r\\n                                \\r\\n                                <td style=\\\"width: 15%;\\\">\\r\\n                                    <input\\r\\n                                    style=\\\"width: 100%; text-align: right; \\\"\\r\\n                                    id = \\\"Amount_{{i}}\\\"\\r\\n                                    type=\\\"number\\\"\\r\\n                                    [disabled] = \\\"t.ACNAME == null || _transactionService.TrnMainObj.Mode== 'VIEW'\\\"\\r\\n                                    [(ngModel)]=\\\"t.CRAMNT\\\" decimalPlacesRestriction=\\\"2\\\"\\r\\n                                    (change)=\\\"onChagneCRAmount(i)\\\"\\r\\n                                    (keydown.Enter)=\\\"CRAMNTRowOk(i,t)\\\"\\r\\n                                    (keydown.Tab)=\\\"CRAMNTRowOk(i,t)\\\" \\r\\n                                    (focusout)=\\\"CRAMNTRowOk(i,t)\\\" \\r\\n                                    (keydown.Shift.Delete)=\\\"clearRow($event, i);\\\"\\r\\n                                    />\\r\\n                                </td>\\r\\n                                <td *ngIf=\\\"_transactionService.userSetting.enableCostCenter==2\\\" style=\\\"width: 15%;\\\">\\r\\n                                  <input\\r\\n                                  style=\\\"width: 100%; text-align: right; \\\"\\r\\n                                  id = \\\"costcenter_{{i}}\\\"\\r\\n                                  type=\\\"text\\\" placeholder=\\\"press ENTER to Select\\\"\\r\\n                                  [disabled] = \\\"t.ACNAME == null || _transactionService.TrnMainObj.Mode== 'VIEW'\\\"\\r\\n                                  [(ngModel)]=\\\"t.CostCenter\\\" \\r\\n                                  (keydown.Enter)=\\\"showCostCenterList(i)\\\"\\r\\n                                  (keydown.Shift.Delete)=\\\"clearRow($event, i);\\\"\\r\\n                                  />\\r\\n                              </td>\\r\\n                                <td style=\\\"width: 66%;\\\">\\r\\n                                    <input\\r\\n                                    style=\\\"width: 100%;\\\"\\r\\n                                    id = \\\"NarrationCr_{{i}}\\\"\\r\\n                                    [(ngModel)]=\\\"t.NARATION\\\"\\r\\n                                    type=\\\"text\\\"\\r\\n                                    [disabled]=\\\"_transactionService.TrnMainObj.Mode=='VIEW'\\\"\\r\\n                                    (keydown.Enter)=\\\"addCreditnewRow($event, i)\\\"\\r\\n                                    (keydown.Tab)=\\\"addCreditnewRow($event, i)\\\" \\r\\n                                    (keydown.Shift.Delete)=\\\"clearRow($event, i);\\\"\\r\\n                                    />\\r\\n                                </td>\\r\\n                            </tr>\\r\\n    \\r\\n                        </tbody>\\r\\n                    </table>\\r\\n                <!-- </fieldset> -->\\r\\n               \\r\\n            </div>\\r\\n  \\r\\n         </div>\\r\\n         <div class=\\\"col-md-4\\\">\\r\\n            <table\\r\\n              class=\\\"table table-summary\\\"\\r\\n              style=\\\"text-align: left; white-space: nowrap;\\\"\\r\\n            >\\r\\n              <tr>\\r\\n                <td style=\\\"line-height: 16px;font-size: 13px; text-align: left;\\\"  >Voucher No :</td>\\r\\n                <td style=\\\"line-height: 16px;font-size: 13px;\\\"   ><b>{{ _transactionService.TrnMainObj.VCHRNO }}</b></td>\\r\\n              </tr>\\r\\n              <tr >\\r\\n                <td style=\\\"line-height: 16px; font-size: 13px; text-align: left;\\\"  >Entry Date :</td>\\r\\n                <td style=\\\"line-height: 16px; font-size: 13px; display: flex; margin-bottom: 15px;\\\" >\\r\\n                  <!-- {{ _transactionService.TrnMainObj.TRNDATE | date: \\\"dd-MM-yyyy\\\" }} -->\\r\\n                  <input \\r\\n                  type=\\\"date\\\"\\r\\n                  #adEntryDate\\r\\n                  id=\\\"date\\\" \\r\\n                  style=\\\"width:41%; height: 30px;\\\"  \\r\\n                  placeholder=\\\"Year Start Date\\\" \\r\\n                  [disabled]=\\\"_transactionService.TrnMainObj.Mode == 'VIEW'\\\" \\r\\n                  [(ngModel)]=\\\"EntryDate.DATE3\\\"\\r\\n                  (change)=\\\"changeEntryDate1($event.target.value,'AD')\\\" \\r\\n                  (focusout)=\\\"focusOutEntryDate($event)\\\"\\r\\n                  max=\\\"{{date1 | date:'yyyy-MM-dd'}}\\\" min=\\\"{{date2 | date:'yyyy-MM-dd'}}\\\"> &nbsp;A.D&nbsp;\\r\\n                  <div style=\\\"width: 128px;\\\">\\r\\n                    <nepali-date-picker name=\\\"nepaliDateFrom\\\" [id]=\\\"'nepaliDatefrom'\\\"\\r\\n                    (change)=\\\"changeEntryDate1($event.detail.value,'BS')\\\"\\r\\n                    [label]=\\\"'From'\\\"\\r\\n                    [disabled]=\\\"_transactionService.TrnMainObj.Mode == 'VIEW'\\\" [(ngModel)]=\\\"EntryDate.BSDATE1\\\">\\r\\n                    </nepali-date-picker>\\r\\n                  </div>\\r\\n                 \\r\\n                  <!-- <input\\r\\n                   #bsEntryDate\\r\\n                   id=\\\"nepaliDate\\\" \\r\\n                   style=\\\"width:90px;height:25px;text-align:left\\\"\\r\\n                   class=\\\"nepali-calendar ndp-nepali-calendar\\\"\\r\\n                   [disabled]=\\\"_transactionService.TrnMainObj.Mode == 'VIEW'\\\" \\r\\n                   [(ngModel)]=\\\"EntryDate.BSDATE1\\\" type=\\\"text\\\"\\r\\n                   (change)=\\\"changeEntryDate1($event.target.value,'BS')\\\"\\r\\n                   placeholder=\\\"yyyy-mm-dd\\\"> &nbsp;B.S -->\\r\\n                </td>\\r\\n              </tr>\\r\\n              <tr >\\r\\n                <td style=\\\"line-height: 16px;text-align: left;font-size: 13px;\\\" >Trn Date :</td>\\r\\n                <td class=\\\"trndatepicker\\\"style=\\\"line-height: 16px;font-size: 13px; display:flex; margin-bottom: 15px;\\\"  >\\r\\n                  <!-- <ims-date-picker (onDateChange)=\\\"setTrnDate($event,i)\\\" [index]=\\\"'TRN'\\\" [date]=\\\"getTrnDate()\\\" [ID]=\\\"'trndate'\\\"></ims-date-picker> -->\\r\\n                  <input\\r\\n                    type=\\\"date\\\" \\r\\n                    #adTrnDate\\r\\n                    style=\\\"width:41%; height: 30px;\\\" \\r\\n                    placeholder=\\\"Year Start Date\\\"\\r\\n                    [disabled]=\\\"_transactionService.TrnMainObj.Mode == 'VIEW'\\\" \\r\\n                    (change)=\\\"changeEntryDate($event.target.value,'AD')\\\"  \\r\\n                    [(ngModel)]=\\\"VoucherEntry.DATE1\\\" max=\\\"{{date1 | date:'yyyy-MM-dd'}}\\\"\\r\\n                    max=\\\"{{date1 | date:'yyyy-MM-dd'}}\\\" min=\\\"{{date2 | date:'yyyy-MM-dd'}}\\\"> &nbsp;A.D&nbsp;\\r\\n                  <div style=\\\"width: 128px;\\\">\\r\\n                    <nepali-date-picker name=\\\"nepaliDateFrom\\\" [id]=\\\"'nepaliDateto'\\\"\\r\\n                    (change)=\\\"changeEntryDate($event.detail.value,'BS')\\\"\\r\\n                    [label]=\\\"'From'\\\"\\r\\n                    [disabled]=\\\"_transactionService.TrnMainObj.Mode == 'VIEW'\\\" [(ngModel)]=\\\"VoucherEntry.BSDATE1\\\">\\r\\n                    </nepali-date-picker>\\r\\n                  </div>\\r\\n                  <!-- <input \\r\\n                    #bsTrnDate\\r\\n                    id=\\\"nepaliDate\\\"\\r\\n                    style=\\\"width:90px;height:25px;text-align:left\\\" \\r\\n                    class=\\\"nepali-calendar ndp-nepali-calendar\\\"\\r\\n                    [disabled]=\\\"_transactionService.TrnMainObj.Mode == 'VIEW'\\\" \\r\\n                    [(ngModel)]=\\\"VoucherEntry.BSDATE1\\\" type=\\\"text\\\" \\r\\n                    (change)=\\\"changeEntryDate($event.target.value,'BS')\\\"\\r\\n                    placeholder=\\\"yyyy-mm-dd\\\" /> &nbsp;B.S -->\\r\\n      \\r\\n                </td>\\r\\n              </tr>\\r\\n              <tr >\\r\\n                <!-- <td  style=\\\"line-height: 16px;\\\"  >Ref No:</td>\\r\\n                <td  style=\\\"line-height: 16px;\\\" >\\r\\n                  <input\\r\\n                    type=\\\"text\\\"\\r\\n                    class=\\\"form-control\\\"\\r\\n                    [(ngModel)]=\\\"_transactionService.TrnMainObj.REFBILL\\\"\\r\\n                  />\\r\\n                </td> -->       \\r\\n                <!-- <td style=\\\"line-height: 16px; font-size: 13px; text-align: left;\\\"  >\\r\\n                   CP Type :\\r\\n                </td>          -->\\r\\n                <!-- <td>\\r\\n                    <select \\r\\n                    [disabled]=\\\"_transactionService.TrnMainObj.Mode == 'VIEW'\\\"\\r\\n                    [(ngModel)]=\\\"_transactionService.TrnMainObj.CNDN_MODE\\\" \\r\\n                    style=\\\"width: 91%;\\\"\\r\\n                  >\\r\\n                     \\r\\n                      <option [ngValue]=0>Capitalize Purchase Voucher</option>\\r\\n                      <option [ngValue]=10>Non-Capitalize Purchase Voucher</option>\\r\\n                    </select>\\r\\n                   \\r\\n                </td> -->\\r\\n              </tr>\\r\\n              <tr  *ngIf=\\\"userSetting.enableCostCenter == 1\\\">\\r\\n                <!-- <td  style=\\\"line-height: 16px;\\\"  >Ref No:</td>\\r\\n                <td  style=\\\"line-height: 16px;\\\" >\\r\\n                  <input\\r\\n                    type=\\\"text\\\"\\r\\n                    class=\\\"form-control\\\"\\r\\n                    [(ngModel)]=\\\"_transactionService.TrnMainObj.REFBILL\\\"\\r\\n                  />\\r\\n                </td> -->       \\r\\n                <td style=\\\"line-height: 16px; font-size: 13px; text-align: left;\\\"  >\\r\\n                   Cost Center :\\r\\n                </td>         \\r\\n                <td>\\r\\n                   \\r\\n                   \\r\\n                    <select \\r\\n                    [disabled]=\\\"_transactionService.TrnMainObj.Mode == 'VIEW'\\\"\\r\\n                    [(ngModel)]=\\\"_transactionService.TrnMainObj.COSTCENTER\\\" \\r\\n                    style=\\\"width: 91%;\\\"\\r\\n                  >\\r\\n                      <option [ngValue]=\\\"\\\"></option>\\r\\n                      <option *ngFor=\\\"let c of costlists\\\" [ngValue]=\\\"c.CCID\\\">\\r\\n                        {{ c.COSTCENTERNAME }}</option>\\r\\n                    </select>\\r\\n                </td>\\r\\n              </tr>\\r\\n              <tr>          \\r\\n                <td style=\\\"line-height: 16px; font-size: 13px; text-align: left;\\\">\\r\\n                    Refno. :\\r\\n                </td>\\r\\n                <td *ngIf = \\\"userSetting.PrefixForRefNoInvEntry ==1\\\"  >\\r\\n                    <select\\r\\n                      name=\\\"prefix\\\" \\r\\n                      id=\\\"prefix\\\"\\r\\n                      [disabled]=\\\"_transactionService.TrnMainObj.Mode == 'VIEW'\\\"\\r\\n                      [(ngModel)]=\\\"_transactionService.TrnMainObj.CHALANNOPREFIX\\\"\\r\\n                      style=\\\"width: 41%;\\\"\\r\\n                    >\\r\\n                      <option value=\\\"\\\" selected=\\\"selected\\\">Choose Prefix</option>\\r\\n                      <option value=\\\"{{chalan.series}}\\\" *ngFor=\\\"let chalan of chalanSeries;\\\">{{chalan.series}}</option>\\r\\n                    </select>\\r\\n                    <input\\r\\n                        type=\\\"text\\\"\\r\\n                        style=\\\"width: 41%;\\\"\\r\\n                        [disabled]=\\\"_transactionService.TrnMainObj.Mode == 'VIEW'\\\"\\r\\n                        [(ngModel)]=\\\"_transactionService.TrnMainObj.CHALANNO\\\"                      \\r\\n                    />\\r\\n                </td>\\r\\n                <td  *ngIf = \\\"userSetting.PrefixForRefNoInvEntry ==0 \\\">\\r\\n                    <input \\r\\n                        type=\\\"text\\\" \\r\\n                        style=\\\"width: 91%;\\\"\\r\\n                        [disabled]=\\\"_transactionService.TrnMainObj.Mode == 'VIEW'\\\"\\r\\n                        [(ngModel)]=\\\"_transactionService.TrnMainObj.CHALANNO\\\"\\r\\n                    />\\r\\n                </td>                         \\r\\n          </tr>\\r\\n            </table>\\r\\n          </div>\\r\\n          \\r\\n        </div>\\r\\n    </div>\\r\\n  \\r\\n        \\r\\n</div> \\r\\n\\r\\n      </div>\\r\\n       <div class=\\\"midTableWrapper\\\">\\r\\n\\r\\n           <div class=\\\"clearfix\\\" style=\\\"margin-top: 5px\\\">\\r\\n        <div class=\\\"row\\\">   \\r\\n            <div class=\\\"col-md-2\\\" >\\r\\n                <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-md-7\\\" style=\\\"font-size: 12px;\\\">\\r\\n                        Dr A/c Selection :\\r\\n                    </div>\\r\\n                    <div class=\\\"col-md-5\\\" style=\\\"padding: 0px;\\\">\\r\\n                        <div style=\\\"border-top : 1px solid #a7c7d4;margin-top: 5px;padding-left: 0px; width: 100%; \\\"></div>\\r\\n                    </div>\\r\\n                </div>                      \\r\\n            </div>       \\r\\n            <div class=\\\"col-md-10\\\" style=\\\"padding-left: 0px;\\\">                \\r\\n                <div style=\\\"border-top : 1px solid #a7c7d4;margin-top: 5px;padding-left: 0px; width: 100%; \\\"></div>\\r\\n            </div>\\r\\n        </div>\\r\\n                 \\r\\n        <trntran-voucher-entry></trntran-voucher-entry> \\r\\n    </div>\\r\\n\\r\\n       </div>\\r\\n\\r\\n       <div class=\\\" footer-wrapper\\\" style=\\\"text-align:right; background:#C0C0C0;\\\">\\r\\n        <div class=\\\"col-md-4\\\" >\\r\\n            <fieldset style=\\\"border: 1px solid #e6e6e6; padding:0px 2px 4px 2px; \\\">\\r\\n                <legend style=\\\"font-size:11px;font-weight: bold; width:auto; text-align: left;\\\" >Supplier Information </legend>\\r\\n                <div class=\\\"row\\\" >\\r\\n                    <div class= \\\"col-md-3\\\">\\r\\n                        <label style=\\\"text-align: left;height: 15px; \\\">Name :</label>\\r\\n                        <label style=\\\"text-align: left;height: 15px;\\\" >Address :</label>\\r\\n                        <label style=\\\"text-align: left;height: 15px;\\\" >VAT NO :</label>\\r\\n                    </div> \\r\\n                    <div class= \\\"col-md-9\\\">\\r\\n                        <input id=\\\"Name\\\" \\r\\n                        style=\\\"width: 100%;\\\" \\r\\n                        type=\\\"text\\\"\\r\\n                        autocomplete=\\\"off\\\"\\r\\n                        placeholder=\\\"Press ENTER or TAB to select Supplier\\\"\\r\\n                        [disabled]=\\\"_transactionService.TrnMainObj.Mode == 'VIEW'\\\"\\r\\n                        (keydown.enter)=\\\"SupplierEnterCommand($event)\\\"\\r\\n                        (keydown.tab)=\\\"SupplierEnterCommand($event)\\\"\\r\\n                        [(ngModel)]=\\\"_transactionService.TrnMainObj.BILLTO\\\"\\r\\n                        (keydown)=\\\"preventInput($event)\\\" \\r\\n                        />\\r\\n                        <input                \\r\\n                        id=\\\"Address\\\"\\r\\n                        type=\\\"text\\\"\\r\\n                        autocomplete=\\\"off\\\"\\r\\n                        [disabled]=\\\"_transactionService.TrnMainObj.Mode == 'VIEW'\\\"\\r\\n                        style=\\\"width: 100%;\\\"\\r\\n                        [(ngModel)]=\\\"_transactionService.TrnMainObj.BILLTOADD\\\" \\r\\n                         (keydown)=\\\"preventInput($event)\\\"                  \\r\\n                          />\\r\\n                        <input \\r\\n                        id=\\\"VATNO\\\" \\r\\n                        type=\\\"text\\\"\\r\\n                        autocomplete=\\\"off\\\"\\r\\n                        [disabled]=\\\"_transactionService.TrnMainObj.Mode == 'VIEW'\\\"\\r\\n                        style=\\\"width: 100%;\\\" \\r\\n                        [(ngModel)]=\\\"_transactionService.TrnMainObj.BILLTOTEL\\\"\\r\\n                        (keydown)=\\\"preventInput($event)\\\" \\r\\n                        />\\r\\n                    </div> \\r\\n                </div>\\r\\n            </fieldset>\\r\\n            <!-- <fieldset style=\\\"border: 1px solid black; padding:0px 2px 0px 1px; \\\"> -->\\r\\n                <!-- <legend style=\\\"font-size:11px;font-weight: bold; width:auto; text-align: left;\\\" >Remarks </legend> -->\\r\\n                <div class=\\\"row\\\" style=\\\"margin-top: 7px;\\\" >\\r\\n                    <div class=\\\"col-md-3\\\">\\r\\n                        <label style=\\\"text-align: left;height: 15px; \\\">Remarks :</label>\\r\\n                    </div>\\r\\n                    <div class= \\\"col-md-9\\\">\\r\\n                        <input\\r\\n                         id=\\\"Remarks\\\" \\r\\n                         type=\\\"text\\\"\\r\\n                         [disabled]=\\\"_transactionService.TrnMainObj.Mode == 'VIEW'\\\"\\r\\n                         [(ngModel)]=\\\"_transactionService.TrnMainObj.REMARKS\\\"\\r\\n                         style=\\\"width: 100%;\\\"\\r\\n                          />                       \\r\\n                    </div> \\r\\n                </div>\\r\\n            <!-- </fieldset> -->\\r\\n        </div>\\r\\n        <div class=\\\"col-md-4\\\" >\\r\\n            <div class=\\\"row\\\" style=\\\"margin-top: 55px;\\\">\\r\\n               \\r\\n                    <label class=\\\"colorLabel\\\">A/C B/L :\\r\\n                    </label><label class=\\\"diffAmountItemForAccount\\\">{{ differenceAmount | number }}</label>&nbsp;\\r\\n                    <label style=\\\"width:30px !important;font-size:18px;color: #2dacd1;font-weight: bold;\\\" *ngIf=\\\"diffAmountDrCrType == 'Dr'\\\">Dr.</label>\\r\\n                    <label style=\\\"width:30px !important;font-size:18px;color: #2dacd1;font-weight: bold;\\\" *ngIf=\\\"diffAmountDrCrType == 'Cr'\\\">Cr.</label>    \\r\\n        \\r\\n            </div>\\r\\n            <div class=\\\"row\\\" style=\\\"margin-top: 8px;\\\">\\r\\n                <!-- <div class=\\\"col-md-2\\\" >\\r\\n                   Total\\r\\n                </div> -->\\r\\n                <div class=\\\"col-md-6\\\" style=\\\"border: 1px solid #e6e6e6;\\\">\\r\\n                    <label *ngIf = \\\"_transactionService.nullToZeroConverter(_transactionService.totalDRAmount) != 0 \\\" > {{_transactionService.totalDRAmount | twoDigitNumber }} Dr.  </label>\\r\\n                    <label *ngIf = \\\"_transactionService.nullToZeroConverter(_transactionService.totalDRAmount) == 0 \\\" >0Dr.</label>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-6\\\" style=\\\"border: 1px solid #e6e6e6;\\\"  >\\r\\n                    <label *ngIf =\\\"_transactionService.nullToZeroConverter(this._transactionService.totalCRAmount) !=0 \\\" > {{this._transactionService.totalCRAmount | twoDigitNumber }} Cr.</label>\\r\\n                    <label *ngIf =\\\"_transactionService.nullToZeroConverter(this._transactionService.totalCRAmount) ==0 \\\" >0Cr.</label>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-4\\\">\\r\\n            <!-- <div class=\\\"row\\\" >\\r\\n                <div class=\\\"col-md-6\\\">\\r\\n                    <label style=\\\"text-align: left;height: 15px; \\\">Gross Amount</label>\\r\\n                        <label style=\\\"width:100%;height: 15px;\\\" >Discount</label>\\r\\n                        <label style=\\\"width:100%;height: 15px;\\\" >Taxable Amount</label>\\r\\n                        <label style=\\\"width:100%;height: 15px; \\\">Non Taxable Amount</label>\\r\\n                        <label style=\\\"width:100%;height: 15px;\\\" >VAT Amount</label>\\r\\n                        <label style=\\\"width:100%;height: 15px;\\\" >Net Amount</label>\\r\\n                        <label style=\\\"width:100%;height: 15px;\\\" >Rounding</label>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-6\\\">\\r\\n                    <input id=\\\"Name\\\" style=\\\"width: 100%;\\\" />\\r\\n                    <input id=\\\"Address\\\" style=\\\"width: 100%;\\\" />\\r\\n                    <input id=\\\"VATNO\\\" style=\\\"width: 100%;\\\" />\\r\\n                    <input id=\\\"Name\\\" style=\\\"width: 100%;\\\" />\\r\\n                    <input id=\\\"Address\\\" style=\\\"width: 100%;\\\" />\\r\\n                    <input id=\\\"VATNO\\\" style=\\\"width: 100%;\\\" />\\r\\n                    <input id=\\\"VATNO\\\" style=\\\"width: 100%;\\\" />\\r\\n                </div>\\r\\n            </div> -->\\r\\n            <table class=\\\"table\\\" style=\\\"height: 100px; \\\">\\r\\n               <tbody>\\r\\n                   <tr>\\r\\n                       <td style=\\\"line-height: 12px;text-align:left;font-size: 12px; font-weight: bold;\\\">Gross Amount </td>\\r\\n                       <td style=\\\"line-height: 12px;\\\">\\r\\n                           <input                          \\r\\n                           id=\\\"Gross Amount\\\"\\r\\n                           type=\\\"number\\\"\\r\\n                           [disabled]=\\\"_transactionService.TrnMainObj.Mode == 'VIEW'\\\"\\r\\n                           style=\\\"width:100%; height: 19px;text-align:right; \\\"\\r\\n                           [ngModel]=\\\"_transactionService.TrnMainObj.TOTAMNT | twoDigitNumber \\\"\\r\\n                           (ngModelChange)=\\\"_transactionService.TrnMainObj.TOTAMNT = $event\\\" \\r\\n                           (keydown)=\\\"preventInput($event)\\\" \\r\\n                           />\\r\\n                               \\r\\n                       </td>\\r\\n                   </tr>\\r\\n              \\r\\n                   <tr>\\r\\n                        <td style=\\\"line-height: 12px;text-align:left; font-size: 12px; font-weight: bold; \\\" >Discount </td>\\r\\n                        <td style=\\\"line-height: 12px;text-align:right;\\\" >\\r\\n                            <input\\r\\n                           \\r\\n                            id=\\\"Discount\\\"\\r\\n                            type=\\\"number\\\"\\r\\n                            style=\\\"width:100%;height: 19px;text-align:right;\\\"\\r\\n                            [ngModel]=\\\"applyPipeinDiscount?(_transactionService.TrnMainObj.DCAMNT |twoDigitNumber):_transactionService.TrnMainObj.DCAMNT\\\"\\r\\n                            (ngModelChange)=\\\"_transactionService.TrnMainObj.DCAMNT =$event\\\"\\r\\n                            [disabled]=\\\"_transactionService.TrnMainObj.Mode =='VIEW'\\\"                    \\r\\n                            (keyup)=\\\"discountChange($event)\\\"\\r\\n                            (focusout)=\\\"discountFocusOut($event)\\\"\\r\\n                            />\\r\\n                            <!-- <input\\r\\n                            *ngIf = \\\"_transactionService.nullToZeroConverter(_transactionService.TrnMainObj.TOTALDISCOUNT) ==0\\\"\\r\\n                            id=\\\"Discount\\\"\\r\\n                            type=\\\"number\\\"\\r\\n                            style=\\\"width:100%;height: 19px;text-align:right;\\\"\\r\\n                            [(ngModel)]=\\\"discount\\\"\\r\\n                            (change)=\\\"budgetCalculation()\\\"\\r\\n                            /> -->\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                    <tr>\\r\\n                        <td style=\\\"line-height: 12px;text-align:left; font-size: 12px; font-weight: bold; \\\" >Taxable Amount </td>\\r\\n                        <td style=\\\"line-height: 12px;text-align:right;\\\" >\\r\\n                            <input                           \\r\\n                            id=\\\"TaxableAmount\\\"\\r\\n                            type=\\\"number\\\"\\r\\n                         \\r\\n                            style=\\\"width:100%; height: 19px;text-align:right;\\\"\\r\\n                            [ngModel]=\\\"applyPipeinTaxableAmount?(_transactionService.TrnMainObj.TAXABLE |twoDigitNumber):_transactionService.TrnMainObj.TAXABLE\\\"\\r\\n                            [disabled]=\\\"_transactionService.TrnMainObj.Mode =='VIEW'\\\"\\r\\n                            (ngModelChange)=\\\"_transactionService.TrnMainObj.TAXABLE = $event\\\"\\r\\n                            (keyup) = \\\"taxableAmountChange($event)\\\"\\r\\n        \\r\\n                            (focusout)=\\\"foucsOutTaxableAmount($event)\\\"\\r\\n                            />\\r\\n                        \\r\\n                        </td>\\r\\n                    </tr>\\r\\n                    <tr>\\r\\n                        <td style=\\\"line-height: 12px;text-align:left;font-size: 12px; font-weight: bold; \\\" >Non Taxable Amount </td>\\r\\n                        <td style=\\\"line-height: 12px;text-align:right;\\\" >\\r\\n                            <input                         \\r\\n                            id=\\\"NonTaxableAmount\\\"\\r\\n                            type=\\\"number\\\"\\r\\n                            [disabled]=\\\"_transactionService.TrnMainObj.Mode =='VIEW'\\\"\\r\\n                            style=\\\"width:100%; height: 19px;text-align:right;\\\"\\r\\n                            [ngModel]=\\\"applyPipeinNonTaxableAmount? (_transactionService.TrnMainObj.NONTAXABLE |twoDigitNumber):_transactionService.TrnMainObj.NONTAXABLE\\\"\\r\\n                            (ngModelChange)= \\\"_transactionService.TrnMainObj.NONTAXABLE = $event\\\"\\r\\n                            (keyup) = \\\"nonTaxableAmountChange($event)\\\"\\r\\n                            (change)=\\\"nonTaxableAmountChange($event)\\\"\\r\\n                            (focusout)=\\\"foucsOutNonTaxableAmount($event)\\\"\\r\\n                            />\\r\\n                      \\r\\n                        </td>\\r\\n                   </tr>\\r\\n                   <tr>\\r\\n                        <td style=\\\"line-height: 12px;text-align:left;font-size: 12px; font-weight: bold; \\\" >VAT Amount </td>\\r\\n                        <td style=\\\"line-height: 12px;text-align:right;\\\" >\\r\\n                            <input                           \\r\\n                            id=\\\"VATAmount\\\"\\r\\n                            type=\\\"number\\\"\\r\\n                            [disabled]=\\\"_transactionService.TrnMainObj.Mode =='VIEW'\\\"\\r\\n                            style=\\\"width:100%; height: 19px;text-align:right;\\\"\\r\\n                            [ngModel]=\\\"applyPipeinVatAmount?(_transactionService.TrnMainObj.VATAMNT |twoDigitNumber):_transactionService.TrnMainObj.VATAMNT\\\"   \\r\\n                            (ngModelChange)=\\\"_transactionService.TrnMainObj.VATAMNT=$event\\\"\\r\\n                            (keyup) = \\\"VATAmountChange($event)\\\"                       \\r\\n                            (change)=\\\"VATAmountChange($event)\\\"\\r\\n                            (focusout)=\\\"foucsOutVATAmount($event)\\\"\\r\\n                            />\\r\\n                           \\r\\n                        </td>\\r\\n                    </tr>\\r\\n                    <tr>\\r\\n                        <td style=\\\"line-height: 12px;text-align:left;font-size: 12px; font-weight: bold; \\\" >Net Amount </td>\\r\\n                        <td style=\\\"line-height: 12px;text-align:right;\\\" >\\r\\n                            <input                         \\r\\n                            id=\\\"NetAmount\\\"\\r\\n                            type=\\\"number\\\"\\r\\n                            [disabled]=\\\"_transactionService.TrnMainObj.Mode =='VIEW'\\\"\\r\\n                            style=\\\"width:100%; height: 19px;text-align:right;\\\"\\r\\n                            [ngModel]=\\\"_transactionService.TrnMainObj.NETAMNT | twoDigitNumber\\\"\\r\\n                            (ngModelChange) = \\\"_transactionService.TrnMainObj.NETAMNT = $event \\\"\\r\\n                            (keydown)=\\\"preventInput($event)\\\" \\r\\n                            />\\r\\n                      \\r\\n                        </td>\\r\\n                    </tr>\\r\\n                    <tr>\\r\\n                        <td style=\\\"line-height: 12px;text-align:left;font-size: 12px; font-weight: bold; \\\" >Rounding </td>\\r\\n                        <td style=\\\"line-height: 12px;text-align:left;\\\" >\\r\\n                            <input\\r\\n                            id=\\\"Rounding\\\"\\r\\n                            type=\\\"number\\\"\\r\\n                            autocomplete=\\\"off\\\"\\r\\n                            [disabled]=\\\"_transactionService.TrnMainObj.Mode =='VIEW'\\\"\\r\\n                            style=\\\"width:100%; height: 19px;text-align:right;\\\"\\r\\n                            [ngModel]=\\\"applyPipeinRoundingAmount?(_transactionService.TrnMainObj.ROUNDOFF | twoDigitNumber):_transactionService.TrnMainObj.ROUNDOFF\\\"\\r\\n                            (ngModelChange)=\\\"_transactionService.TrnMainObj.ROUNDOFF =$event\\\"\\r\\n                            (keyup) = \\\"RoundedAmountChange($event)\\\" \\r\\n                           \\r\\n                            (focusout)=\\\"roundOffFocusOut($event)\\\"  \\r\\n                            />\\r\\n                        </td>\\r\\n                    </tr>\\r\\n               </tbody>\\r\\n            </table>\\r\\n        </div>\\r\\n    </div>\\r\\n    </div>\\r\\n \\r\\n\\r\\n\\r\\n<generic-popup-grid #genericGridACList [popupsettings]=\\\"gridACListPopupSettings\\\"\\r\\n  (onItemDoubleClick)=\\\"onAcSelect($event)\\\"></generic-popup-grid>\\r\\n  <generic-popup-grid #genericGridSupplier [popupsettings]=\\\"gridPopupSettingsForSupplier\\\"\\r\\n  (onItemDoubleClick)=\\\"onSupplierSelected($event)\\\">\\r\\n</generic-popup-grid>\\r\\n<generic-popup-grid #gridSubLedgerSettingList [popupsettings]=\\\"gridSubLedgerSetting\\\"\\r\\n  (onItemDoubleClick)=\\\"onSubLedgerSelect($event)\\\"></generic-popup-grid>\\r\\n  \\r\\n  <!--TDS Popup-->\\r\\n  <div *ngIf=\\\"showTDSDetailPopup\\\" style=\\\"display : block; padding: 0px;  margin-bottom: 25px;height: auto;\\r\\n  position: absolute;right: 31%;top: 22%;width: 44%;z-index: 9999999\\\">\\r\\n\\r\\n  <div class=\\\"modal-content modal-content-main-area\\\">\\r\\n    <div class=\\\"modal-header\\\">\\r\\n      <h4 class=\\\"modal-title\\\" id=\\\"myModalLabel\\\">Please Select TDS AC</h4>\\r\\n     \\r\\n      <!-- <div style=\\\"float:right;    margin-right: -1%;\\\">\\r\\n        <label style=\\\"width: 49% !important\\\">\\r\\n          TDS Receivable :\\r\\n        </label>\\r\\n        <label><b style=\\\"font-size: 20px;\\\">Rs. {{FinalCrTDSObj.DRAMNT}}</b></label>\\r\\n      </div>\\r\\n      <div style=\\\"float:right;    margin-right: -1%;\\\">\\r\\n        <label>\\r\\n          TDS Payable :\\r\\n        </label>\\r\\n        <label><b style=\\\"font-size: 20px;\\\">Rs. {{FinalDrTDSObj.CRAMNT}}</b></label>\\r\\n      </div> -->\\r\\n    </div>\\r\\n    <div class=\\\"modal-body\\\">\\r\\n      <div class=\\\"main-container\\\" style=\\\"padding-top : 10px; margin-bottom: 0px; margin-top: 0px !important;\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-md-12\\\">\\r\\n              <table>\\r\\n                    <tr>\\r\\n                     \\r\\n                      <th style=\\\"border-bottom: 1px solid;width: 10%;\\\">Sno</th>\\r\\n                      <th style=\\\"width: 50%;border-bottom: 1px solid;\\\">Ledger A/C</th>\\r\\n                      <th style=\\\"width: 15%;border-bottom: 1px solid;\\\">Base Amnt</th>\\r\\n                      <th style=\\\"width: 15%;border-bottom: 1px solid;\\\">TDS</th>\\r\\n\\r\\n                    </tr>\\r\\n                    \\r\\n                      <tbody *ngFor=\\\"let x of this.PartyListFilter;let i=index\\\" (click)=\\\"TdsPopupClick(i)\\\">\\r\\n                        <tr (click)=\\\"TdsPopupClick(i)\\\" style=\\\"height: 38px;\\\">\\r\\n                     \\r\\n                        <td>{{i+1}}</td>\\r\\n                        <td><input type=\\\"text\\\" list=\\\"product\\\" [(ngModel)]=\\\"x.DESCA\\\"  (change)=\\\"ChangeDesca($event)\\\"\\r\\n                          style=\\\"width: 90%;\\\"\\r\\n                         autocomplete=\\\"off\\\" >\\r\\n                      <datalist id=\\\"product\\\" >\\r\\n                          <option *ngFor=\\\"let t of FilterList\\\"  [value]=\\\"t.ACNAME\\\" >\\r\\n                      </datalist>\\r\\n                    </td>\\r\\n                        \\r\\n                        <td><input type=\\\"number\\\" [(ngModel)]=\\\"x.AMNT\\\" style=\\\"width: 90%;\\\" (change)=\\\"BaseAmntChange()\\\"></td>\\r\\n                        <td>{{x.TDS}}</td>\\r\\n                      </tr>\\r\\n                      </tbody>\\r\\n\\r\\n                  \\r\\n\\r\\n\\r\\n                  </table>\\r\\n\\r\\n                </div>\\r\\n               \\r\\n\\r\\n     \\r\\n\\r\\n    \\r\\n       \\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"modal-footer\\\">\\r\\n      <button type=\\\"button\\\" class=\\\"btn btn-default\\\" data-dismiss=\\\"modal\\\"\\r\\n        (click)=\\\"cancelTDSDetailPopup()\\\">Cancel</button>\\r\\n      \\r\\n      <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"TdsPopupOK()\\\">Ok</button>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n</div>\\r\\n\\r\\n<generic-popup-grid #genericGridCostCenterGroupList [popupsettings]=\\\"gridCostCenterGroupListPopupSettings\\\"\\r\\n  (onItemDoubleClick)=\\\"onCostCenterGroupSelect($event)\\\"></generic-popup-grid>\\r\\n  <generic-popup-grid #genericGridCostCenterList [popupsettings]=\\\"gridCostCenterListPopupSettings\\\"\\r\\n  (onItemDoubleClick)=\\\"onCostCenterSelect($event)\\\"></generic-popup-grid>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/AccountVoucher/components/capital-voucher/capital-voucher.component.html\n// module id = 1321\n// module chunks = 1 2 3","module.exports = \"<style>\\r\\n   .sectionWrapper{\\r\\n      display: flex;\\r\\n      flex-direction: column;\\r\\n      height: 94vh;\\r\\n    }\\r\\n\\r\\n    /* .topWwrapper {\\r\\n  background: tomato;\\r\\n} */\\r\\n .midTableWrapper{\\r\\n  flex: 1; /* or flex-grow: 1  */;\\r\\n  overflow: auto;\\r\\n  /* background: gold; */\\r\\n  overflow-x:hidden;\\r\\n}\\r\\n.footer-wrapper {\\r\\n  background: lightgreen;\\r\\n  min-height: 87px;\\r\\n}\\r\\n\\r\\n</style>\\r\\n <div class=\\\"sectionWrapper\\\">\\r\\n    <div class=\\\"topWwrapper\\\">\\r\\n      <div class=\\\"sticky-top\\\">\\r\\n  <div class=\\\"clearfix\\\">\\r\\n    <div class=\\\"col-md-1\\\">\\r\\n      <voucher-master-toggler></voucher-master-toggler>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-4\\\">\\r\\n      <label style=\\\"font-family: Segoe UI Light;font-weight: bold;font-size: 20px;padding-left: 5%;padding-top: 1%;\\\">{{\\r\\n        _trnMainService.pageHeading }}</label>\\r\\n      <label style=\\\"font-size: 14px;\\\">&nbsp;>> {{ _trnMainService.TrnMainObj?.Mode | titlecase}} Voucher</label>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-7\\\">\\r\\n      <account-master-action></account-master-action>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<div class=\\\"main-container\\\" style=\\\"margin-bottom: 0 !important;\\\">\\r\\n  <div class=\\\"clearfix\\\">\\r\\n    <trnmain-voucher-entry></trnmain-voucher-entry>\\r\\n  </div>\\r\\n\\r\\n</div>\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"midTableWrapper\\\">\\r\\n        <div class=\\\"clearfix\\\" style=\\\"margin-top: 5px\\\">\\r\\n    <trntran-voucher-entry></trntran-voucher-entry>\\r\\n  </div>\\r\\n\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"footer-wrapper\\\" style=\\\"background: gray;\\\">\\r\\n  <account-voucher-summary></account-voucher-summary>\\r\\n</div>\\r\\n\\r\\n </div>\\r\\n\\r\\n\\r\\n<multiple-series [voucherType]=\\\"voucherType\\\"></multiple-series>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/AccountVoucher/components/contra/contra-voucher.component.html\n// module id = 1322\n// module chunks = 1 2 3","module.exports = \"<style>\\r\\n    .table tr th {\\r\\n        text-align: center;\\r\\n        vertical-align: middle;\\r\\n    }\\r\\n\\r\\n    tr {\\r\\n        border: 1px solid #e6e6e6;\\r\\n        max-height: 25px;\\r\\n    }\\r\\n\\r\\n    td {\\r\\n        height: 23px;\\r\\n        border: 1px solid #e6e6e6;\\r\\n\\r\\n    }\\r\\n\\r\\n    .bottom {\\r\\n        position: fixed;\\r\\n        padding: 9px;\\r\\n        bottom: 20px;\\r\\n        left: 0px;\\r\\n        width: 100%;\\r\\n        height: 40px;\\r\\n        z-index: 999997;\\r\\n         background: #E2EAEA !important; \\r\\n    }\\r\\n</style>\\r\\n\\r\\n\\r\\n<div class=\\\"sticky-top\\\">\\r\\n    <div class=\\\"row clearfix\\\">\\r\\n        <div class=\\\"col-md-2\\\">\\r\\n            <voucher-master-toggler></voucher-master-toggler>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-2\\\">\\r\\n            <h2 style=\\\"color: black; font-size: 15px; font-weight: 400\\\">{{pageHeading}} </h2>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-8\\\">\\r\\n            <button (click)=\\\"onResetClick()\\\" style=\\\"margin: 0px 4px;\\\" class=\\\"btn btn-info pull-right\\\">\\r\\n                RESET\\r\\n            </button>\\r\\n            <button *ngIf=\\\"_trnMainService.TrnMainObj.Mode=='NEW' || _trnMainService.TrnMainObj.Mode=='EDIT'\\\"  (click)=\\\"onSaveClick()\\\" style=\\\"margin: 0px 4px;\\\" class=\\\"btn btn-info pull-right\\\">\\r\\n                SAVE\\r\\n            </button>\\r\\n            <button (click)=\\\"onViewClick()\\\" style=\\\"margin: 0px 4px;\\\" class=\\\"btn btn-info pull-right\\\">\\r\\n                VIEW\\r\\n            </button>\\r\\n            <button (click)=\\\"onPrintClick()\\\" style=\\\"margin: 0px 4px;\\\" class=\\\"btn btn-info pull-right\\\">\\r\\n                PRINT\\r\\n            </button>\\r\\n            <button (click)=\\\"onEditClick()\\\" style=\\\"margin: 0px 4px;\\\" class=\\\"btn btn-info pull-right\\\">\\r\\n                EDIT\\r\\n            </button>\\r\\n            <button (click)=\\\"onCancelClick()\\\" style=\\\"margin: 0px 4px;\\\" class=\\\"btn btn-info pull-right\\\">\\r\\n                CANCEL\\r\\n            </button>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n<div class=\\\"main-container\\\">\\r\\n    <div [hidden]=\\\"!masterService.ShowMore\\\" class=\\\"row clearfix\\\" style=\\\"margin: 10px;\\\">\\r\\n        <div class=\\\"col-md-12\\\" style=\\\"margin: 8px 15px ; border: 1px solid #e6e6e6; \\\">\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n                <div class=\\\"row\\\">\\r\\n                    <label style=\\\"width:30%\\\">Customer/Supplier: </label>\\r\\n                    <input\\r\\n                     type=\\\"text\\\" \\r\\n                     style=\\\"width:60%\\\"\\r\\n                     id=\\\"CustomerSupplier\\\"\\r\\n                     name=\\\"CustomerSupplier\\\"\\r\\n                     [(ngModel)]=\\\"this._trnMainService.TrnMainObj.BILLTO\\\"\\r\\n                     (keydown.tab)=\\\"onCustomerSupplierPopUPTab()\\\"\\r\\n                     (keydown.enter)=\\\"onCustomerSupplierPopUPTab()\\\"\\r\\n                     placeholder=\\\"Press ENTER or TAB to Customer & Supplier\\\" \\r\\n                     [disabled]=\\\"_trnMainService.TrnMainObj.Mode=='VIEW'\\\"\\r\\n                     />\\r\\n                </div>\\r\\n                <div class=\\\"row\\\">\\r\\n                    <label style=\\\"width:30%\\\">Address: </label>\\r\\n                    <input \\r\\n                    type=\\\"text\\\"\\r\\n                    style=\\\"width:60%\\\"\\r\\n                    [(ngModel)]=\\\"this._trnMainService.TrnMainObj.BILLTOADD\\\"\\r\\n                    id=\\\"Address\\\" \\r\\n                    name=\\\"Address\\\" \\r\\n                    placeholder=\\\"Address\\\"\\r\\n                    [disabled]=\\\"_trnMainService.TrnMainObj.Mode=='VIEW'\\\" />\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"row\\\">\\r\\n                    <label style=\\\"width:30%\\\">Remarks: </label>\\r\\n                    <input \\r\\n                    type=\\\"text\\\" \\r\\n                    style=\\\"width:60%\\\" \\r\\n                    [(ngModel)]=\\\"this._trnMainService.TrnMainObj.REMARKS\\\"\\r\\n                    id=\\\"Remarks\\\" \\r\\n                    name=\\\"Remarks\\\" \\r\\n                    placeholder=\\\"Remarks\\\"\\r\\n                    [disabled]=\\\"_trnMainService.TrnMainObj.Mode=='VIEW'\\\" />\\r\\n                </div>\\r\\n\\r\\n            </div>\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n                <div class=\\\"row\\\">\\r\\n                    <label style=\\\"width:30%\\\">Ref Bill NO: </label>\\r\\n                    <input \\r\\n                    type=\\\"text\\\" \\r\\n                    style=\\\"width:60%\\\" \\r\\n                    id=\\\"RefBillNo\\\" \\r\\n                    name=\\\"RefBillNO\\\"\\r\\n                    [(ngModel)]=\\\"this._trnMainService.TrnMainObj.REFBILL\\\"\\r\\n                    (keydown.enter)=\\\"onRefBillNoPopUPTab($event)\\\"\\r\\n                    placeholder=\\\"Press ENTER  to Ref Bill NO\\\"\\r\\n                    [disabled]=\\\"_trnMainService.TrnMainObj.Mode=='VIEW'\\\" />\\r\\n                </div>\\r\\n                <!-- <div class=\\\"row\\\">\\r\\n                    <label style=\\\"width:30%\\\">Return Mode: </label>\\r\\n                    <select \\r\\n                    style=\\\"width: 60%\\\" \\r\\n                    [(ngModel)]=\\\"this._trnMainService.TrnMainObj.TRNMODE\\\"\\r\\n                    >\\r\\n                        <option></option>\\r\\n                        <option value=\\\"credit\\\">CREDIT</option>\\r\\n                    </select>\\r\\n                </div> -->\\r\\n\\r\\n                <!-- <div class=\\\"row\\\">\\r\\n                    <label style=\\\"width:30%\\\">Sales Type: </label>\\r\\n                    <select style=\\\"width: 60%\\\">\\r\\n                        <option></option>\\r\\n                    </select>\\r\\n                </div> -->\\r\\n\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"col-md-12\\\" style=\\\"height: 550px;\\\">\\r\\n        <table class=\\\"table\\\" style=\\\"margin-bottom: 5px; font-size: 12.5px;\\\">\\r\\n            <thead>\\r\\n                <tr style=\\\"border-bottom: 2px solid #E6E6E6; border-top: 2px solid #E6E6E6;    height: 30px;\\r\\n                                    background:#C0C0C0;\\r\\n                                    color: black;\\\">\\r\\n                    <th><span class=\\\"texttitle\\\" style=\\\"color: black\\\">S NO </span></th>\\r\\n                    <th><span class=\\\"texttitle\\\" style=\\\"color: black\\\">Code </span></th>\\r\\n                    <th><span class=\\\"texttitle\\\" style=\\\"color: black\\\">Description </span></th>\\r\\n                    <th><span class=\\\"texttitle\\\" style=\\\"color: black\\\">BatchNo </span></th>\\r\\n                    <th><span class=\\\"texttitle\\\" style=\\\"color: black\\\">Qty </span></th>\\r\\n                    <th><span class=\\\"texttitle\\\" style=\\\"color: black\\\">Packing </span></th>\\r\\n                    <th><span class=\\\"texttitle\\\" style=\\\"color: black\\\">MRP </span></th>\\r\\n                    <th><span class=\\\"texttitle\\\" style=\\\"color: black\\\">RATE </span></th>\\r\\n                    <th><span class=\\\"texttitle\\\" style=\\\"color: black\\\">New Rate </span></th>\\r\\n                    <th><span class=\\\"texttitle\\\" style=\\\"color: black\\\">Difference Amount </span></th>\\r\\n                    <th><span class=\\\"texttitle\\\" style=\\\"color: black\\\">GST(%) </span></th>     \\r\\n                    <th><span class=\\\"texttitle\\\" style=\\\"color: black\\\">GST AMT </span></th>                                   \\r\\n                    <th><span class=\\\"texttitle\\\" style=\\\"color: black\\\">Total Amount </span></th>  \\r\\n                    \\r\\n                </tr>\\r\\n            </thead>\\r\\n            <tbody style=\\\"border: 1px;\\\" *ngFor=\\\"let tList of _trnMainService.TrnMainObj.ProdList;let i=index\\\" >\\r\\n                \\r\\n                <tr (click)=\\\"RowClick(i)\\\"  [class.selected]=\\\"isTableRowSelected(i)\\\" [class.highlighted]=\\\"i==activerowIndex\\\" (keydown.delete)=\\\"deleteRow()\\\" >\\r\\n                    <td style=\\\"width: 55px;\\\">\\r\\n                        {{i+1}}\\r\\n                    </td>\\r\\n\\r\\n                    <td style=\\\"width: 95px;\\\">\\r\\n                        <input *ngIf=\\\"_trnMainService.TrnMainObj.Mode=='NEW' \\\" \\r\\n                        type=\\\"text\\\" \\r\\n                        id=\\\"Code{{i}}\\\" \\r\\n                        name=\\\"Code\\\" \\r\\n                        style=\\\"width: 120px;\\\"\\r\\n                        placeholder=\\\"Code\\\"\\r\\n                        [(ngModel)]=\\\"tList.MENUCODE\\\"\\r\\n                        (keydown.tab)=\\\"onItemPopUPTab()\\\"\\r\\n                        (keydown.enter)=\\\"onItemPopUPTab()\\\"\\r\\n                        (focus)=\\\"activerowIndex=i\\\"\\r\\n\\r\\n                    />\\r\\n                    <span *ngIf=\\\"_trnMainService.TrnMainObj.Mode=='VIEW' || _trnMainService.TrnMainObj.Mode=='EDIT'\\\" >{{tList.MENUCODE}}</span>\\r\\n                    </td>\\r\\n                    <td style=\\\"width: 300px;\\\">\\r\\n                            {{tList.DESCA}}\\r\\n                    </td>\\r\\n\\r\\n                    <td style=\\\"width: 110px;\\\">\\r\\n                            {{tList.BATCH}}\\r\\n                    </td>\\r\\n\\r\\n                    <td style=\\\"width: 85px;\\\">\\r\\n                            {{tList.STOCK}}\\r\\n                    </td>\\r\\n\\r\\n                    <td style=\\\"width: 85px;\\\">\\r\\n                            {{tList.UNIT}}\\r\\n                    </td>\\r\\n\\r\\n                    <td style=\\\"width: 80px;\\\">\\r\\n                            {{tList.MRP}}\\r\\n                    </td>\\r\\n                    <td style=\\\"width: 100px;\\\">\\r\\n                            {{tList.RATE | number : '1.2-2' }}\\r\\n                    </td>\\r\\n\\r\\n\\r\\n                    <td style=\\\"width:120px;\\\">\\r\\n                            <input \\r\\n                            *ngIf=\\\"_trnMainService.TrnMainObj.Mode=='NEW' || _trnMainService.TrnMainObj.Mode=='EDIT'\\\"\\r\\n                            type=\\\"text\\\"  \\r\\n                            style=\\\"width: 120px;\\\"\\r\\n                            id=\\\"NewRate\\\" \\r\\n                            name=\\\"NewRate\\\" \\r\\n                            [(ngModel)]=\\\"tList.ADJUSTMENTNEWRATE\\\" \\r\\n                            (keyup.enter)=\\\"addNewRow($event,i)\\\"\\r\\n                            (keydown.Delete)=\\\"removeRow(i)\\\"\\r\\n                            (blur)=\\\"onBlurClick(i)\\\"      \\r\\n                            placeholder=\\\"NewAmount\\\" />\\r\\n                            <span  *ngIf=\\\"_trnMainService.TrnMainObj.Mode=='VIEW'\\\">{{tList.ADJUSTMENTNEWRATE}}</span>\\r\\n                    </td>\\r\\n\\r\\n                    <td style=\\\"width:100px;\\\">\\r\\n                        {{ !tList.DIFFERENCEAMOUNT?'0.00':tList.DIFFERENCEAMOUNT | number : '1.2-2' }}\\r\\n                    </td>\\r\\n                    <td style=\\\"width:60px;\\\">\\r\\n                        {{tList.GSTRATE}}\\r\\n                    </td>\\r\\n                    <td style=\\\"width:100px;\\\">\\r\\n                        {{tList.VAT  | number : '1.2-2'}}\\r\\n                    </td>\\r\\n                    <td style=\\\"width:100px;\\\">\\r\\n                        {{tList.NETAMOUNT | number : '1.2-2' }}\\r\\n                    </td>\\r\\n                  \\r\\n                </tr>\\r\\n           \\r\\n            </tbody>\\r\\n\\r\\n        </table>\\r\\n\\r\\n    </div>\\r\\n\\r\\n\\r\\n</div>\\r\\n\\r\\n<div class=\\\"bottom\\\">\\r\\n    <table style=\\\"width: 1400px; border: 0px;\\\">\\r\\n        <td style=\\\"width: 900px;text-align: right ;border: 0px;\\\">\\r\\n            <h4>Total </h4>\\r\\n        </td>\\r\\n        <td style=\\\"text-align: center;width: 223px; border: 0px;\\\">\\r\\n            {{totalDifferenceAmount | number : '1.2-2'}}\\r\\n        </td>\\r\\n        <td style=\\\"text-align: right;width: 40px; border: 0px;\\\">\\r\\n            \\r\\n        </td>\\r\\n        <td style=\\\"text-align: center;border: 0px;\\\" >\\r\\n            {{totalGST | number : '1.2-2' }}\\r\\n        </td>\\r\\n        <td style=\\\"text-align: center;width: 162px;border: 0px;\\\">\\r\\n            {{totalAmount | number : '1.2-2' }}\\r\\n        </td>\\r\\n    </table>\\r\\n\\r\\n\\r\\n</div>\\r\\n\\r\\n<generic-popup-grid #customerSupplierGeneric [popupsettings]=\\\"gridCustomerSupplierPopupSettings\\\"\\r\\n    (onItemDoubleClick)=\\\"onItemDoubleClickCustomerSupplier($event)\\\">\\r\\n</generic-popup-grid>\\r\\n\\r\\n<generic-popup-grid #refBillNoGeneric [popupsettings]=\\\"gridRefBillNoGenericPopupSettings\\\"\\r\\n    (onItemDoubleClick)=\\\"onItemDoubleClickRefBillNO($event)\\\">\\r\\n</generic-popup-grid>\\r\\n\\r\\n<generic-popup-grid #itemGeneric [popupsettings]=\\\"gridItemGenericPopupSettings\\\"\\r\\n    (onItemDoubleClick)=\\\"onItemDoubleClick($event)\\\">\\r\\n</generic-popup-grid>\\r\\n\\r\\n<generic-popup-grid #vchrnoView [popupsettings]=\\\"gridVoucherGenericPopupSettings\\\"\\r\\n    (onItemDoubleClick)=\\\"onVoucherDoubleClick($event)\\\">\\r\\n</generic-popup-grid>\\r\\n<generic-popup-grid #editVchrno [popupsettings]=\\\"gridVoucherGenericPopupSettings\\\"\\r\\n    (onItemDoubleClick)=\\\"onEditVoucherDoubleClick($event)\\\">\\r\\n</generic-popup-grid>\\r\\n\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/AccountVoucher/components/debit-note-rate-adjustment/debit-note-rate-adjustment.comopnent.html\n// module id = 1323\n// module chunks = 1 2 3","module.exports = \".clearfix {\\r\\n    background: #e2eaea;\\r\\n    height: 40px;\\r\\n}\\r\\n\\r\\n.clearfix .btn {\\r\\n    margin-top: 10px;\\r\\n    margin-left: 800px;\\r\\n}\\r\\n.col-md-4 label {\\r\\n    font-family: Segoe UI Light;\\r\\n    font-weight: bold;\\r\\n    font-size: 20px;\\r\\n    padding-left: 5%;\\r\\n    padding-top: 3%;\\r\\n    width: 100%;\\r\\n}\\r\\n\\r\\n\\r\\n.col-md-12 {\\r\\n    border-bottom: 1px solid #828080;\\r\\n    margin-top: 10px;\\r\\n    margin-bottom: 5px;\\r\\n    padding-bottom: 10px;\\r\\n    background: #e2eaea;\\r\\n    padding-top: 9px;\\r\\n    width: 100%;\\r\\n}\\r\\n\\r\\n.col-md-3 label {\\r\\n    font-size: 16px;\\r\\n    margin-bottom: 5px;\\r\\n}\\r\\n\\r\\n.col-md-3 select {\\r\\n    height: 25px;\\r\\n    font-size: 14px;\\r\\n    border: 1px solid #ccc;\\r\\n    border-radius: 3px;\\r\\n    color: black;\\r\\n    padding: 4px;\\r\\n    width: 180px;\\r\\n    margin-left: 5px;\\r\\n}\\r\\n\\r\\n\\r\\n/* Buttons */\\r\\n.col-md-3 .btn {\\r\\n    margin: 0px 4px;\\r\\n    height: 25px;\\r\\n}\\r\\n\\r\\n/* Tab Styles */\\r\\n.tab-container {\\r\\n    display: flex;\\r\\n    align-items: center;\\r\\n    background-color: #f3f3f1;\\r\\n    padding: 10px;\\r\\n    height: auto;\\r\\n}\\r\\n\\r\\n.tab {\\r\\n    padding: 5px 10px;\\r\\n    cursor: pointer;\\r\\n    border: 1px solid #ccc;\\r\\n    background-color: #fff;\\r\\n    transition: background-color 0.2s ease-in-out;\\r\\n}\\r\\n\\r\\n.tab.active {\\r\\n    background-color: #336799;\\r\\n    color: #fff;\\r\\n}\\r\\n\\r\\n.table-container {\\r\\n    overflow: auto;\\r\\n    height: 65vh;\\r\\n}\\r\\n\\r\\ntable {\\r\\n    width: 100%;\\r\\n    border-collapse: collapse;\\r\\n}\\r\\n\\r\\nthead th {\\r\\n    font-weight: bold;\\r\\n}\\r\\n\\r\\nthead tr,\\r\\ntfoot tr {\\r\\n    position: sticky;\\r\\n    top: 0;\\r\\n    border-bottom: 2px solid #e6e6e6;\\r\\n    border-top: 2px solid #e6e6e6;\\r\\n    height: 30px;\\r\\n    background: silver;\\r\\n    color: black;\\r\\n}\\r\\ntfoot tr {\\r\\n    position: sticky;\\r\\n    bottom: 0;\\r\\n}\\r\\n\\r\\ntbody tr{\\r\\n    height: 30px;\\r\\n}\\r\\n\\r\\ntfoot th {\\r\\n    height: 30px;\\r\\n    font-weight: bold;\\r\\n}\\r\\n\\r\\nth {\\r\\n    font-weight: bold;\\r\\n    text-align: center;\\r\\n    white-space: nowrap;\\r\\n}\\r\\n\\r\\nth.sno {\\r\\n    width: 1%;\\r\\n}\\r\\n\\r\\nth.account-heading {\\r\\n    width: 10%;\\r\\n}\\r\\n\\r\\ntbody tr:nth-child(even) {\\r\\n    background-color: #f0f0f0;\\r\\n}\\r\\n\\r\\ntbody tr:nth-child(odd) {\\r\\n    background-color: #ffffff;\\r\\n}\\r\\n\\r\\n.text-left {\\r\\n    text-align: left;\\r\\n}\\r\\n\\r\\n.text-right {\\r\\n    text-align: right;\\r\\n}\\r\\n\\r\\n\\r\\n\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/AccountVoucher/components/depreciation-detail/depreciation-detail.component.css\n// module id = 1324\n// module chunks = 1 2 3","module.exports = \"<div class=\\\"clearfix\\\">\\r\\n    <div class=\\\"col-md-4\\\">\\r\\n        <label>Depreciation\\r\\n            Month Selection\\r\\n        </label>\\r\\n    </div>\\r\\n    <button class=\\\"btn btn-info\\\" (click)=\\\"Reset()\\\">Reset</button>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"col-md-12\\\">\\r\\n    <div style=\\\"display: flex;\\\">\\r\\n        <div class=\\\"col-md-3\\\">\\r\\n            <label>Month Name:</label>\\r\\n            <select [(ngModel)]=\\\"selectedMonth\\\" (change)=\\\"onMonthSelected()\\\">\\r\\n                <option *ngFor=\\\"let month of months\\\" [value]=\\\"month.monthName\\\">{{ month.monthName }}</option>\\r\\n            </select>\\r\\n\\r\\n        </div>\\r\\n        <div class=\\\"col-md-8\\\">\\r\\n            <button class=\\\"btn btn-info\\\" (click)=\\\"calculate()\\\" [disabled]=\\\"!isMonthSelected\\\">Calculate</button>\\r\\n            <button class=\\\"btn btn-info\\\" (click)=\\\"saveToExcel()\\\" [disabled]=\\\"!calculationDone\\\">Save To Excel</button>\\r\\n            <button class=\\\"btn btn-info\\\" (click)=\\\"Save()\\\" [disabled]=\\\"!calculationDone || isViewed\\\">Save</button>\\r\\n            <button class=\\\"btn btn-info\\\" (click)=\\\"View()\\\" [disabled]=\\\"!isMonthSelected\\\">View</button>\\r\\n            <button class=\\\"btn btn-info\\\" (click)=\\\"Cancel()\\\" [disabled]=\\\"isDeleteEnable\\\">Delete</button>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n</div>\\r\\n\\r\\n<!-- **************table****************** -->\\r\\n\\r\\n<div class=\\\"tab-container\\\">\\r\\n    <div class=\\\"tab\\\" [class.active]=\\\"currentTab === 'account-wise'\\\" (click)=\\\"showTab('account-wise')\\\">Depreciation\\r\\n        Detail - Account Head Wise</div>\\r\\n    <div class=\\\"tab\\\" [class.active]=\\\"currentTab === 'item-wise'\\\" (click)=\\\"showTab('item-wise')\\\">Depreciation Detail\\r\\n        - Item Wise</div>\\r\\n    <div class=\\\"tab\\\" [class.active]=\\\"currentTab === 'asset-code-wise'\\\" (click)=\\\"showTab('asset-code-wise')\\\">\\r\\n        Depreciation Detail - Item Asset ID Wise</div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"table-container\\\" *ngIf=\\\"currentTab === 'account-wise'\\\">\\r\\n    <table>\\r\\n        <thead>\\r\\n            <tr>\\r\\n                <th class=\\\"text-left\\\">SNo.</th>\\r\\n                <th class=\\\"text-left\\\">Account Heading</th>\\r\\n                <th class=\\\"text-right\\\">Depreciation Rate</th>\\r\\n                <th class=\\\"text-right\\\">Cost Value</th>\\r\\n                <th class=\\\"text-right\\\">Current Book Value</th>\\r\\n                <th class=\\\"text-right\\\">Depreciation Value</th>\\r\\n                <th class=\\\"text-right\\\">Net Book Value</th>\\r\\n            </tr>\\r\\n        </thead>\\r\\n        <tbody>\\r\\n            <tr *ngFor=\\\"let item of accountWiseData; let i = index\\\">\\r\\n                <td class=\\\"text-left\\\">{{ i + 1 }}</td>\\r\\n                <td class=\\\"text-left\\\">{{ item['Account_Heading'] }}</td>\\r\\n                <td class=\\\"text-right\\\">{{ item['Depreciation_Rate'] | number:'1.2-2'}}</td>\\r\\n                <td class=\\\"text-right\\\">{{ item['Cost_Value'] | number:'1.2-2'}}</td>\\r\\n                <td class=\\\"text-right\\\">{{ item['Current_Book_Value'] | number:'1.2-2' }}</td>\\r\\n                <td class=\\\"text-right\\\">{{ item['Depreciation'] | number:'1.2-2' }}</td>\\r\\n                <td class=\\\"text-right\\\">{{ item['Net_Book_Value'] | number:'1.2-2' }}</td>\\r\\n            </tr>\\r\\n        </tbody>\\r\\n        <tfoot>\\r\\n            <tr>\\r\\n                <th></th>\\r\\n                <th>Total</th>\\r\\n                <th></th>\\r\\n                <th class=\\\"text-right\\\">{{ totalCostValueAccountWise | number:'1.2-2' }}</th>\\r\\n                <th class=\\\"text-right\\\">{{ totalBookValueAccountWise | number:'1.2-2' }}</th>\\r\\n                <th class=\\\"text-right\\\">{{ totalDepreciationAccountWise | number:'1.2-2' }}</th>\\r\\n                <th class=\\\"text-right\\\">{{ totalNetBookValueAccountWise | number:'1.2-2' }}</th>\\r\\n            </tr>\\r\\n        </tfoot>\\r\\n    </table>\\r\\n</div>\\r\\n\\r\\n\\r\\n\\r\\n<!-- Item Wise Table -->\\r\\n<div class=\\\"table-container\\\" *ngIf=\\\"currentTab === 'item-wise'\\\">\\r\\n    <table>\\r\\n        <thead>\\r\\n            <tr>\\r\\n                <th class=\\\"text-left\\\">SNo.</th>\\r\\n                <th class=\\\"text-left\\\">Account Heading</th>\\r\\n                <th class=\\\"text-left\\\">Item Code</th>\\r\\n                <th class=\\\"text-left\\\">Item Name</th>\\r\\n                <th class=\\\"text-right\\\">Depreciation Rate</th>\\r\\n                <th class=\\\"text-right\\\">Cost Price</th>\\r\\n                <th class=\\\"text-right\\\">Quantity</th>\\r\\n                <!-- <th class=\\\"text-right\\\">Total Cost</th> -->\\r\\n                <th class=\\\"text-right\\\">Current Book Value</th>\\r\\n                <th class=\\\"text-right\\\">Depreciation Value</th>\\r\\n                <th class=\\\"text-right\\\">Net Book Value</th>\\r\\n            </tr>\\r\\n        </thead>\\r\\n        <tbody>\\r\\n            <tr *ngFor=\\\"let item of itemWiseData; let i = index\\\">\\r\\n                <td class=\\\"text-left\\\">{{ i + 1 }}</td>\\r\\n                <td class=\\\"text-left\\\">{{ item['Account_Heading'] }}</td>\\r\\n                <td class=\\\"text-left\\\">{{ item['MENUCODE'] }}</td>\\r\\n                <td class=\\\"text-left\\\">{{ item['ITEMNAME'] }}</td>\\r\\n                <td class=\\\"text-right\\\">{{ item['Depreciation_Rate'] | number:'1.2-2' }}</td>\\r\\n                <td class=\\\"text-right\\\">{{ item['Cost_Value'] | number:'1.2-2'}}</td>\\r\\n                <td class=\\\"text-right\\\">{{ item['Quantity'] | number:'1.2-2'}}</td>\\r\\n                <!-- <td class=\\\"text-right\\\">{{ item['TotalCost'] | number:'1.2-2'}}</td> -->\\r\\n                <td class=\\\"text-right\\\">{{ item['Current_Book_Value'] | number:'1.2-2'}}</td>\\r\\n                <td class=\\\"text-right\\\">{{ item['Depreciation'] | number:'1.2-2'}}</td>\\r\\n                <td class=\\\"text-right\\\">{{ item['Net_Book_Value'] | number:'1.2-2'}}</td>\\r\\n            </tr>\\r\\n        </tbody>\\r\\n        <tfoot>\\r\\n            <tr>\\r\\n                <th></th>\\r\\n                <th>Total</th>\\r\\n                <th></th>\\r\\n                <th></th>\\r\\n                <th></th>\\r\\n                <th class=\\\"text-right\\\">{{ totalCostValueItemWise | number:'1.2-2' }}</th>\\r\\n                <th class=\\\"text-right\\\">{{ totalQuantityItemWise | number:'1.2-2' }}</th>\\r\\n                <!-- <th class=\\\"text-right\\\">{{ totalCostItemWise | number:'1.2-2' }}</th> -->\\r\\n                <th class=\\\"text-right\\\">{{ totalBookValueItemWise | number:'1.2-2' }}</th>\\r\\n                <th class=\\\"text-right\\\">{{ totalDepreciationItemWise | number:'1.2-2' }}</th>\\r\\n                <th class=\\\"text-right\\\">{{ totalNetBookValueItemWise | number:'1.2-2' }}</th>\\r\\n            </tr>\\r\\n        </tfoot>\\r\\n    </table>\\r\\n</div>\\r\\n\\r\\n\\r\\n<!-- Item Asset Code Wise Table -->\\r\\n<div class=\\\"table-container\\\" *ngIf=\\\"currentTab === 'asset-code-wise'\\\">\\r\\n    <table>\\r\\n        <thead>\\r\\n            <tr>\\r\\n                <th class=\\\"text-left\\\">SNo.</th>\\r\\n                <th class=\\\"text-left\\\">Account Heading</th>\\r\\n                <th class=\\\"text-left\\\">Item Code</th>\\r\\n                <th class=\\\"text-left\\\">Item Name</th>\\r\\n                <th class=\\\"text-left\\\">Asset Code</th>\\r\\n                <th class=\\\"text-right\\\">Depreciation Rate</th>\\r\\n                <th class=\\\"text-right\\\">Cost Value</th>\\r\\n                <th class=\\\"text-right\\\">Current Book Value</th>\\r\\n                <th class=\\\"text-right\\\">Depreciation</th>\\r\\n                <th class=\\\"text-right\\\">Net Book Value</th>\\r\\n            </tr>\\r\\n        </thead>\\r\\n        <tbody>\\r\\n            <tr *ngFor=\\\"let item of assetCodeWiseData; let i = index\\\">\\r\\n                <td class=\\\"text-left\\\">{{ i + 1 }}</td>\\r\\n                <td class=\\\"text-left\\\">{{ item['Account_Heading'] }}</td>\\r\\n                <td class=\\\"text-left\\\">{{ item['MENUCODE'] }}</td>\\r\\n                <td class=\\\"text-left\\\">{{ item['ITEMNAME'] }}</td>\\r\\n                <td class=\\\"text-left\\\">{{ item['ASSETCODE'] }}</td>\\r\\n                <td class=\\\"text-right\\\">{{ item['Depreciation_Rate'] | number:'1.2-2'}}</td>\\r\\n                <td class=\\\"text-right\\\">{{ item['Cost_Value'] | number:'1.2-2'}}</td>\\r\\n                <td class=\\\"text-right\\\">{{ item['Current_Book_Value'] | number:'1.2-2'}}</td>\\r\\n                <td class=\\\"text-right\\\">{{ item['Depreciation'] | number:'1.2-2'}}</td>\\r\\n                <td class=\\\"text-right\\\">{{ item['Net_Book_Value'] | number:'1.2-2'}}</td>\\r\\n            </tr>\\r\\n        </tbody>\\r\\n        <tfoot>\\r\\n            <tr>\\r\\n                <th></th>\\r\\n                <th>Total</th>\\r\\n                <th></th>\\r\\n                <th></th>\\r\\n                <th></th>\\r\\n                <th></th>\\r\\n                <th class=\\\"text-right\\\">{{ totalCostValueAssetCodeWise | number:'1.2-2' }}</th>\\r\\n                <th class=\\\"text-right\\\">{{ totalBookValueAssetCodeWise | number:'1.2-2' }}</th>\\r\\n                <th class=\\\"text-right\\\">{{ totalDepreciationAssetCodeWise | number:'1.2-2' }}</th>\\r\\n                <th class=\\\"text-right\\\">{{ totalNetBookValueAssetCodeWise | number:'1.2-2' }}</th>\\r\\n            </tr>\\r\\n        </tfoot>\\r\\n    </table>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/AccountVoucher/components/depreciation-detail/depreciation-detail.component.html\n// module id = 1325\n// module chunks = 1 2 3","module.exports = \"\\r\\n<!-- <div style=\\\"background: #e2eaea !important; height: 40px;\\\"  class=\\\"clearfix\\\" >\\r\\n  <label\\r\\n    style=\\\"\\r\\n    font-family: Segoe UI Light;\\r\\n    font-weight: bold;\\r\\n    font-size: 20px;\\r\\n    padding-left: 5%;\\r\\n    padding-top: 1%;\\r\\n    \\\"\\r\\n    >PARTY BALANCE CONFIRMATION</label>\\r\\n    <button style=\\\"margin-top: 9px; margin-right: 59px;\\\" class=\\\"btn btn-info pull-right\\\" (click)='reSet()'> Reset</button>\\r\\n\\r\\n</div> -->\\r\\n\\r\\n<div class=\\\"clearfix\\\"  style=\\\"background: #e2eaea !important; height: 40px;\\\" >\\r\\n  <div>\\r\\n  <div class=\\\"col-md-4\\\">\\r\\n    <!-- <h2 style=\\\"color: black;\\\">Bank Reconciliation </h2> -->\\r\\n    <label\\r\\n      style=\\\"font-family: Segoe UI Light;font-weight: bold;font-size: 20px;padding-left: 5%;padding-top: 3%;width: 100%;\\\">ItemWise Depreciation Detail\\r\\n      </label>\\r\\n  </div>\\r\\n  <div class=\\\"col-md-4\\\">\\r\\n\\r\\n  </div>\\r\\n  <div class=\\\"col-md-4\\\" style=\\\"margin-top:8px;\\\">\\r\\n    <button style=\\\"margin: 0px 4px;\\\" class=\\\"btn btn-info pull-right\\\" (click)=\\\"reSet()\\\">\\r\\n      Reset\\r\\n    </button>\\r\\n    <button class=\\\"btn btn-info pull-right\\\" (click)=\\\"onPrintClicked()\\\"> Print</button>\\r\\n    <!-- <button class=\\\"btn btn-info pull-right\\\" (click)=\\\"SelectDate()\\\">\\r\\n      View\\r\\n    </button> -->\\r\\n  </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n<style>\\r\\n  input{\\r\\n    height: 25px;\\r\\n    vertical-align: middle;\\r\\n    font-size: 13px;\\r\\n    border: 1px solid #cbcbcb;\\r\\n    border-radius: 3px;\\r\\n    color: black;\\r\\n    padding-left: 4px;\\r\\n  }\\r\\n  label{\\r\\n    font-family: Roboto, Arial, sans-serif;\\r\\n    font-size: 14px;\\r\\n  }\\r\\n  legend{\\r\\n    font-family: Roboto, Arial, sans-serif;\\r\\n    font-size: 14px;\\r\\n    width:0;\\r\\n\\r\\n  }\\r\\n  .date{\\r\\n    margin-left: 8px;\\r\\n  }\\r\\n</style>\\r\\n\\r\\n<div  class=\\\"col-md-12\\\" style=\\\"border-bottom: 1px solid #828080;\\r\\n        margin-top:10px;\\r\\n        margin-bottom: 5px;\\r\\n        padding-bottom: 10px;\\r\\n        background: #e2eaea; padding-top: 9px;\\r\\n        width: 100%;\\r\\n       \\\">\\r\\n\\r\\n      <div style=\\\"display: flex;\\\">\\r\\n      <div class=\\\"col-md-3\\\">\\r\\n        <label>From:</label>\\r\\n        <input  placeholder=\\\"Year Start Date\\\" style=\\\"width:128px; height:24px;\\\" type=\\\"date\\\"\\r\\n        [(ngModel)]=\\\"PartyBalanceData.DATE1\\\"\\r\\n        (change)=\\\"changeEntryDate($event.target.value,'AD')\\\">&nbsp;A.D &nbsp;\\r\\n\\r\\n        <div style=\\\" width: 134px;margin-left: 202px; margin-top: -29px;\\\">\\r\\n          <nepali-date-picker name=\\\"nepaliDateFrom\\\" [id]=\\\"'nepaliDatefrom'\\\"\\r\\n            (change)=\\\"changeEntryDate($event.detail.value,'BS')\\\"\\r\\n            [label]=\\\"'dd/mm/yyyy'\\\"\\r\\n            [(ngModel)]=\\\"PartyBalanceData.BSDATE1\\\">\\r\\n            </nepali-date-picker>\\r\\n        </div>\\r\\n        <!-- <input  autocomplete=\\\"off\\\" id=\\\"nepaliDate\\\" placeholder=\\\"yyyy-mm-dd\\\"type=\\\"text\\\"\\r\\n        [(ngModel)]=\\\"PartyBalanceData.BSDATE1\\\" style=\\\"width: 90px;\\\" type=\\\"text\\\"\\r\\n        (change)=\\\"changeEntryDate($event.target.value,'BS')\\\">&nbsp;B.S\\r\\n        &nbsp; -->\\r\\n      </div>\\r\\n      <div class=\\\"col-md-3\\\" style=\\\"margin-top: 8px;\\\">\\r\\n        <label><input type=\\\"radio\\\" name=\\\"partytype\\\" [(ngModel)]=\\\"PartyBalanceData.PARTYTYPE\\\" value=C (change)=\\\"parttypeChange()\\\">&nbsp;Customer</label>\\r\\n        <label><input type=\\\"radio\\\" name=\\\"partytype\\\" [(ngModel)]=\\\"PartyBalanceData.PARTYTYPE\\\" value=V (change)=\\\"parttypeChange()\\\">&nbsp;Supplier</label>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-5\\\" style=\\\"margin-top: 8px;\\\">\\r\\n        <label  class=\\\"smallBoldLabel\\\"><input type=\\\"checkbox\\\" name=\\\"transaction\\\" [(ngModel)]=\\\"PartyBalanceData.INCLUDECASHTRANSACTION\\\" (change)=\\\"$event.target.checked\\r\\n          ? (PartyBalanceData.INCLUDECASHTRANSACTION = 1)\\r\\n          : (PartyBalanceData.INCLUDECASHTRANSACTION = 0)\\\">&nbsp;Including Cash Transaction</label>\\r\\n      </div>\\r\\n    </div>\\r\\n      <div class=\\\"col-md-3\\\" style=\\\"margin-top: 4px;\\\">\\r\\n        <label>To :</label>\\r\\n        <input   placeholder=\\\"Year Start Date\\\" type=\\\"date\\\" style=\\\"width: 128px; height: 24px; margin-left: 13px;\\\"\\r\\n        [(ngModel)]=\\\"PartyBalanceData.DATE2\\\"\\r\\n        (change)=\\\"changeEndDate($event.target.value,'AD')\\\">&nbsp;A.D &nbsp;\\r\\n\\r\\n        <div style=\\\" width: 134px;margin-left: 202px; margin-top: -29px;\\\">\\r\\n          <nepali-date-picker name=\\\"nepaliDateFrom\\\" [id]=\\\"'nepaliDateto'\\\"\\r\\n            (change)=\\\"changeEndDate($event.detail.value,'BS')\\\"\\r\\n            [label]=\\\"'dd/mm/yyyy'\\\"\\r\\n            [(ngModel)]=\\\"PartyBalanceData.BSDATE2\\\">\\r\\n            </nepali-date-picker>\\r\\n        </div>\\r\\n        <!-- <input class=\\\"date\\\" autocomplete=\\\"off\\\" id=\\\"nepaliDate\\\" placeholder=\\\"yyyy-mm-dd\\\" type=\\\"text\\\"\\r\\n        [(ngModel)]=\\\"PartyBalanceData.BSDATE2\\\" type=\\\"text\\\" style=\\\"width: 90px;\\\"\\r\\n        (change)=\\\"changeEndDate($event.target.value,'BS')\\\">&nbsp;B.S -->\\r\\n        &nbsp;\\r\\n      </div>\\r\\n      <div class=\\\"col-md-3\\\" style=\\\"margin-top: 8px;\\\">\\r\\n        <label>Cost Center :</label>\\r\\n        <select id=\\\"costcenter\\\"\\r\\n          [(ngModel)]=\\\"PartyBalanceData.COSTCENTER\\\" style=\\\"width: 60%;height: 21px;\\r\\n          padding-left: 14px;\\\">\\r\\n          <option [ngValue]=\\\"\\\"></option>\\r\\n          <option *ngFor=\\\"let c of costlists\\\" [ngValue]=\\\"c.CCID\\\">\\r\\n            {{ c.COSTCENTERNAME }}</option>\\r\\n        </select>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-4\\\" style=\\\"margin-top: 9px;\\\">\\r\\n        <div>\\r\\n          <label  style=\\\"margin-right:1%;\\\" >Party Account:</label>\\r\\n          <input style=\\\"height: 25px; margin-left: 1%; width: 74%;\\\"\\r\\n          (keydown.Enter)=\\\"showAcList(i);\\\" name=\\\"customerName\\\" [(ngModel)]=\\\"PartyBalanceData.CUSTOMERNAME\\\" type= \\\"text\\\" placeholder=\\\"Press Enter to select\\\" autocomplete=\\\"off\\\">\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-1\\\" style=\\\"margin-top: 6px;\\\">\\r\\n        <button class=\\\"btn btn-info pull-left\\\" (click)='onLoad()'> Load</button>\\r\\n      </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"col-md-12\\\">\\r\\n    <!-- <div class=\\\"col-md-8\\\" style=\\\"margin-top: 5px;\\\">\\r\\n      <div>\\r\\n      <label>Prepared By:</label>\\r\\n      <label style=\\\"margin-left: 15px;\\\">Name:</label>\\r\\n      <input  [(ngModel)]=\\\"Name\\\" id=\\\"Name0\\\" type=\\\"text\\\">\\r\\n\\r\\n      <label style=\\\"margin-left:30px;\\\">Designation:</label>\\r\\n        <input [(ngModel)]=\\\"Designation\\\" id=\\\"destination\\\" type=\\\"text\\\">\\r\\n      </div>\\r\\n    </div> -->\\r\\n  <!-- <fieldset style=\\\"height: 89px; width:113%\\\">\\r\\n      <legend>Prepared By:</legend>\\r\\n      <div >\\r\\n        <label>Name:</label>\\r\\n        <input style=\\\"width: 79%; margin-left:9.3%\\\"  type=\\\"text\\\">\\r\\n      </div>\\r\\n      <div>\\r\\n        <label>Designation:</label>\\r\\n        <input style=\\\"width:79%; margin-left: 1%;\\\"  type=\\\"text\\\">\\r\\n      </div>\\r\\n  </fieldset>\\r\\n</div> -->\\r\\n    <div class=\\\"col-md-3\\\"></div>\\r\\n\\r\\n\\r\\n    <div class=\\\"col-md-1\\\">\\r\\n      <!-- <button\\r\\n      *ngIf=\\\"_trnMainService.TrnMainObj.Mode == 'VIEW'  &&\\r\\n    !showSecondaryButtons && _trnMainService.TrnMainObj.VoucherType==12 && _trnMainService.TrnMainObj.VoucherType==15|| _trnMainService.TrnMainObj.VoucherType==16 || _trnMainService.TrnMainObj.VoucherType!=3 \\\"\\r\\n      [ngClass]=\\\"changeCursor==true?'PrintPending':'PrintDone'\\\" (click)=\\\"onPrintClicked()\\\" class=\\\"btn btn-info pull-right\\\" [disabled]=\\\"_trnMainService.TrnMainObj.Mode == 'NEW' || _trnMainService.TrnMainObj.Mode == 'EDIT'\\\" >\\r\\n      F8 PRINT\\r\\n    </button> -->\\r\\n      <!-- <button class=\\\"btn btn-info pull-left\\\" (click)=\\\"onPrintClicked()\\\"> Print</button> -->\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n<style>\\r\\n  table {\\r\\n  border-collapse: collapse;\\r\\n}\\r\\n  td {\\r\\n    /* border: 2px solid #000000; */\\r\\n    height: 24px;\\r\\n  }\\r\\n\\r\\n  th {\\r\\n    font-weight: bold;\\r\\n    font-family: Roboto, Arial, sans-serif;\\r\\n    text-align: center;\\r\\n  }\\r\\n\\r\\n</style>\\r\\n\\r\\n\\r\\n<!-- **************table****************** -->\\r\\n\\r\\n<div style=\\\"margin-top: 100px\\\">\\r\\n  <div style=\\\"height: 480px;\\\">\\r\\n    <table style=\\\"margin-bottom: 5px; font-size: 13px; width: 100%\\\">\\r\\n      <thead>\\r\\n        <tr\\r\\n          style=\\\"\\r\\n            border-bottom: 2px solid #e6e6e6;\\r\\n            border-top: 2px solid #e6e6e6;\\r\\n            height: 30px;\\r\\n            background: silver;\\r\\n            color: black;\\\">\\r\\n\\r\\n          <th style=\\\"width: 1%\\\">SNo.</th>\\r\\n          <th style=\\\"width: 19%; padding-left: 1%\\\">Account Heading</th>\\r\\n          <th style=\\\"width: 7%; padding-left: 1%\\\">Asset Code</th>\\r\\n          <th style=\\\"width: 7%; padding-left: 1%\\\">Item Name</th>\\r\\n          <th style=\\\"width: 7%; padding-left: 1%\\\">Depreciation Rate (%)</th>\\r\\n          <th style=\\\"width: 7%; padding-left: 1%\\\">Cost Price</th>\\r\\n          <th style=\\\"width: 7%; padding-left: 1%\\\">Book Value</th>\\r\\n          <th style=\\\"width: 7%; padding-left: 1%\\\">Depreciation</th>\\r\\n          <th style=\\\"width: 7%; padding-left: 1%\\\">Net Book Value</th>\\r\\n\\r\\n        </tr>\\r\\n      </thead>\\r\\n      <tbody *ngFor=\\\"let i of PartyInfo\\\" >\\r\\n\\r\\n        <tr style=\\\"border: 1px solid #e6e6e6;max-height:25px;\\\">\\r\\n\\r\\n          <td style=\\\"line-height: 21px; text-align: center; border: 1px solid #e6e6e6; \\\">\\r\\n           {{i.SNO}}\\r\\n          </td>\\r\\n\\r\\n          <td style=\\\"line-height: 21px; text-align: center; border: 1px solid #e6e6e6;\\\">\\r\\n            <input\\r\\n              style=\\\"height: 25px; width: 100%\\\" [(ngModel)]=\\\"i.PARTICULAR\\\" readonly/>\\r\\n          </td>\\r\\n          <td style=\\\"line-height: 21px; text-align: center; border: 1px solid #e6e6e6;\\\">\\r\\n            <input\\r\\n              style=\\\"height: 25px; width: 100%\\\" [(ngModel)]=\\\"i.OPERATION\\\" readonly/>\\r\\n          </td>\\r\\n          <td style=\\\"line-height: 21px; text-align: center; border: 1px solid #e6e6e6;\\\">\\r\\n            <input\\r\\n              style=\\\"height: 25px; text-align: right; width: 100% \\\" [(ngModel)]=\\\"i.AMOUNT\\\" readonly/>\\r\\n          </td>\\r\\n\\r\\n        </tr>\\r\\n      </tbody>\\r\\n      <!-- <ng-container *ngIf=\\\"PartyInfo.length == 0\\\">\\r\\n        <tbody style=\\\"background:#e2eaea;\\\">\\r\\n          <tr>\\r\\n            <td colspan=\\\"4\\\">\\r\\n              Party Info is Empty.\\r\\n            </td>\\r\\n          </tr>\\r\\n        </tbody>\\r\\n      </ng-container> -->\\r\\n    </table> \\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n<generic-popup-grid #genericGridACList [popupsettings]=\\\"gridACListPopupSettings\\\"\\r\\n  (onItemDoubleClick)=\\\"onAcSelect($event)\\\"></generic-popup-grid>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/AccountVoucher/components/itemwise-depreciation-detail/itemwise-depreciation-detail.component.html\n// module id = 1326\n// module chunks = 1 2 3","module.exports = \"<style>\\r\\n  .sectionWrapper{\\r\\n      display: flex;\\r\\n      flex-direction: column;\\r\\n      height: 94vh;\\r\\n    }\\r\\n .midTableWrapper{\\r\\n  flex: 1; \\r\\n  overflow: auto;\\r\\n  overflow-x:hidden;\\r\\n}\\r\\n.footer-wrapper {\\r\\n  background: lightgreen;\\r\\n  min-height: 87px;\\r\\n}\\r\\n</style>\\r\\n\\r\\n<div class=\\\"sectionWrapper\\\">\\r\\n   <div class=\\\"topWrapper\\\">\\r\\n    <div class=\\\"sticky-top\\\">\\r\\n  <div class=\\\"clearfix\\\">\\r\\n    <div class=\\\"col-md-1\\\">\\r\\n      <voucher-master-toggler></voucher-master-toggler>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-4\\\">\\r\\n      <label style=\\\"font-family: Segoe UI Light;font-weight: bold;font-size: 20px;padding-left: 5%;padding-top: 1%;\\\">{{\\r\\n        _trnMainService.pageHeading }}</label>\\r\\n      <label style=\\\"font-size: 14px;\\\">&nbsp;>> {{ _trnMainService.TrnMainObj?.Mode | titlecase}} Voucher</label>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-7\\\">\\r\\n      <!-- <account-master-action (onBillTrackEmit)=\\\"BillTrack()\\\"></account-master-action> -->\\r\\n      <account-master-action></account-master-action>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<div class=\\\"main-container\\\" style=\\\"margin-bottom: 0  !important;\\\">\\r\\n  <div class=\\\"clearfix\\\">\\r\\n    <trnmain-voucher-entry></trnmain-voucher-entry>\\r\\n  </div>\\r\\n \\r\\n</div>\\r\\n\\r\\n   </div>\\r\\n    <div class=\\\"midTableWrapper\\\">\\r\\n       <div class=\\\"clearfix\\\" style=\\\"margin-top: 5px\\\">\\r\\n        <!-- <trntran-voucher-entry #trnmainentry></trntran-voucher-entry> -->\\r\\n        <trntran-voucher-entry></trntran-voucher-entry>\\r\\n  </div>\\r\\n\\r\\n    </div>\\r\\n    \\r\\n<div class=\\\"footer-wrapper\\\" style=\\\"background: gray;\\\">\\r\\n  <account-voucher-summary></account-voucher-summary>\\r\\n</div>\\r\\n\\r\\n</div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n<multiple-series [voucherType]=\\\"voucherType\\\"></multiple-series>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/AccountVoucher/components/journal/journal-voucher.component.html\n// module id = 1327\n// module chunks = 1 2 3","module.exports = \"<form [formGroup]=\\\"TrnMainForm\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-12\\\" style=\\\"padding:5px\\\">\\r\\n      <div style=\\\"margin:5px; margin-bottom:0px\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-md-12\\\">\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n              <div class=\\\"col-md-12\\\">\\r\\n                  <div class=\\\"col-md-4\\\">\\r\\n                      <label style=\\\"width:auto\\\">Difference Amount: </label>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-md-8\\\">\\r\\n                      <input\\r\\n                        formControlName=\\\"DIFFERENCE\\\"\\r\\n                        style=\\\"width:100%\\\"\\r\\n                        value=\\\"{{ _trnMainService.differenceAmount }}\\\"\\r\\n                      />\\r\\n                    </div>\\r\\n              </div>\\r\\n              <div class=\\\"col-md-12\\\">\\r\\n                  <div class=\\\"col-md-4\\\">\\r\\n                      <label>Narration: </label>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-md-8\\\">\\r\\n                      <textarea\\r\\n                        formControlName=\\\"REMARKS\\\"\\r\\n                        rows=\\\"2\\\"\\r\\n                        style=\\\"padding-left:4px; vertical-align: top;width: 100%\\\"\\r\\n                      ></textarea>\\r\\n                    </div>\\r\\n              </div> \\r\\n            </div>\\r\\n            <div class=\\\"col-md-6\\\"></div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</form>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/AccountVoucher/components/journal/trnmain-journal-entry.component.html\n// module id = 1328\n// module chunks = 1 2 3","module.exports = \" \\r\\n<div class=row style=\\\"margin: 5px 0px\\\">\\r\\n    <form [ngClass]=\\\"showWholeSubledger ? 'col-md-8' : 'col-md-12'\\\" style=\\\"padding-left: 0px;padding-right: 5px;\\\">\\r\\n        <!-- <label style=\\\"text-align:center; display: block; font-size: 18px; float:none; margin-left:auto; margin-right:auto;\\\">Journal Entry</label> -->\\r\\n        <div style=\\\"display: block; max-height: 320px; min-height: 250px; overflow-y: auto\\\" class=\\\"scroll\\\">\\r\\n            <table class=\\\"table\\\" style=\\\"margin-bottom: 5px; font-size: 12.5px;\\\" (click)=\\\"hideDetail()\\\">\\r\\n                <thead>\\r\\n                    <tr style=\\\"border-bottom: 2px solid #E6E6E6; border-top: 2px solid #E6E6E6\\\">\\r\\n                        <th>S.No.</th>\\r\\n                        <th>A/C Code</th>\\r\\n                        <th>A/C Name</th>\\r\\n                        <th>Debit Amount</th>\\r\\n                        <th>Credit Amount</th>\\r\\n                        <th [hidden]=\\\"hasCheque == false\\\">Cheque No.</th>\\r\\n                        <th [hidden]=\\\"hasCheque == false\\\">Cheque Date</th>\\r\\n                        <th [hidden]=\\\"hasCostCenter == false\\\">Cost Center</th>\\r\\n                        <th>Narration</th>\\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tbody *ngFor=\\\"let tList of trnMain.TrntranList;let i=index\\\" style=\\\"border: 0px\\\">\\r\\n                    <tr (click)=\\\"clickRow(i)\\\">\\r\\n                        <td>{{i+1}}.</td>\\r\\n                        <td class=\\\"cell-with-comment\\\">\\r\\n                            <input  \\r\\n                                #ACCODEInput\\r\\n                                type=\\\"text\\\" \\r\\n                                autocomplete=\\\"false\\\" \\r\\n                                [focus]=\\\"acNameFocused\\\" \\r\\n                                style=\\\"height:23px;width: 100%;\\\"  \\r\\n                                (keyup.Enter)=\\\"showAcList(i);ACCODEInput.blur()\\\" \\r\\n                                (keydown.Tab)=\\\"showAcList(i); $event.preventDefault();ACCODEInput.blur()\\\" \\r\\n                                (keydown)=\\\"preventInput($event);\\\"\\r\\n                                name=\\\"acCode{{i}}\\\" \\r\\n                                value=\\\"{{(tList.acitem!=null) ? tList.acitem.ACCODE : ''}}\\\" /> \\r\\n                                <span class=\\\"cell-comment\\\">\\r\\n                                    press ENTER or TAB to Select Account\\r\\n                                </span>\\r\\n                        </td>\\r\\n                        <td>\\r\\n                            <input  \\r\\n                            style=\\\"height:23px;width: 100%\\\" list-formatter=\\\"ACNAME\\\" value=\\\"{{(tList.acitem!=null) ? tList.acitem.ACNAME : ''}}\\\" \\r\\n                            name=\\\"acName{{i}}\\\" disabled /> \\r\\n                        </td>\\r\\n                        <td>\\r\\n                            <input decimalPlacesRestriction=\\\"2\\\" [disabled]=\\\"tList.hasDebit == false\\\" [style.background-color]=\\\"tList.drBGColor\\\" [style.color]=\\\"tList.drColor\\\" type=\\\"number\\\"\\r\\n                                style=\\\"width: 100%; height:23px\\\" name=\\\"debit{{i}}\\\" id=\\\"debit{{i}}\\\" [(ngModel)]=\\\"tList.DRAMNT\\\"\\r\\n                                (keyup)=\\\"changeDebit($event.target.value,i)\\\">\\r\\n                        </td>\\r\\n                        <td>\\r\\n                            <input decimalPlacesRestriction=\\\"2\\\"  [disabled]=\\\"tList.hasCredit == false\\\" [style.background-color]=\\\"tList.crBGColor\\\" [style.color]=\\\"tList.crColor\\\" type=\\\"number\\\"\\r\\n                                style=\\\"width: 100%; height:23px\\\" name=\\\"credit{{i}}\\\" id=\\\"credit{{i}}\\\" [(ngModel)]=\\\"tList.CRAMNT\\\"\\r\\n                                (keyup)=\\\"changeCredit($event.target.value, i)\\\">\\r\\n                        </td>\\r\\n                        <td [hidden]=\\\"hasCheque == false\\\"><input type=\\\"text\\\" name=\\\"chequeNo{{i}}\\\" [(ngModel)]=\\\"tList.ChequeNo\\\" style=\\\"width: 100%; height:23px\\\"></td>\\r\\n                        <td [hidden]=\\\"hasCheque == false\\\"><input type=\\\"date\\\" style=\\\"width: 100%; height:23px\\\" name=\\\"chequeDate{{i}}\\\" [(ngModel)]=\\\"tList.ChequeDate\\\"></td>\\r\\n                        <td [hidden]=\\\"hasCostCenter == false\\\">\\r\\n                            <select name=\\\"costCenter{{i}}\\\" [(ngModel)]=\\\"tList.CostCenter\\\" style=\\\"width: 100%;height: 23px;\\\">\\r\\n                                <option hidden></option>\\r\\n                                <option *ngFor=\\\"let c of masterService.costCenterList$ | async\\\">{{c.CostCenterName}}</option>\\r\\n                            </select>\\r\\n                        </td>\\r\\n                        <td>\\r\\n                            <input  \\r\\n                            (keydown.Tab)=\\\"addRow(i)\\\"\\r\\n                            (keydown.Enter)=\\\"addRow(i)\\\"\\r\\n                            (keydown.Delete)=\\\"removeRow(i)\\\"\\r\\n                            style=\\\"width: 100%\\\"\\r\\n                            type=\\\"text\\\" name=\\\"narration{{i}}\\\" [(ngModel)]=\\\"tList.NARATION\\\" placeholder=\\\"Narration\\\">\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                    <!-- <tr *ngIf=\\\"tList.inputMode == true\\\" (click)=\\\"clickRow(i)\\\">\\r\\n                        <td></td>\\r\\n                        <td colspan=\\\"8\\\"> \\r\\n                            <button *ngIf=\\\"tList.inputMode == true && tList.editMode == false\\\" (click)=\\\"addRow(i)\\\" style=\\\"margin-left:3px\\\" [disabled]=\\\"hasAddBtn == false\\\"\\r\\n                                class=\\\"glyphicon glyphicon-plus\\\"></button>\\r\\n                            <button *ngIf=\\\"tList.editMode == true && tList.inputMode == true\\\" (click)=\\\"saveRow(i)\\\" style=\\\"margin-left:3px\\\" class=\\\"glyphicon glyphicon-floppy-disk\\\"></button>\\r\\n                            <button *ngIf=\\\"tList.inputMode == true\\\" (click)=\\\"removeRow(i);\\\" style=\\\"margin-left:2px\\\" class=\\\"glyphicon glyphicon-remove\\\"></button>\\r\\n                        </td>\\r\\n                    </tr> -->\\r\\n                    <tr *ngIf=\\\"tList.inputMode == false\\\" (click)=\\\"clickRow(i)\\\">\\r\\n                        <td style=\\\"line-height:21px\\\">\\r\\n                            <div *ngIf=\\\"tList.AccountItem.HASSUBLEDGER == 1\\\" style=\\\"display:inline-block\\\">*</div>{{i+1}}.</td>\\r\\n                        <td style=\\\"line-height:21px\\\">{{tList.AccountItem.ACCODE}}</td>\\r\\n                        <td style=\\\"line-height:21px\\\">{{tList.AccountItem.ACNAME}}</td>\\r\\n                        <td style=\\\"line-height:21px\\\">{{tList.DRAMNT}}</td>\\r\\n                        <td style=\\\"line-height:21px\\\">{{tList.CRAMNT}}</td>\\r\\n                        <td [hidden]=\\\"hasCheque == false\\\" style=\\\"line-height:21px\\\">{{tList.ChequeNo}}</td>\\r\\n                        <td [hidden]=\\\"hasCheque == false\\\" style=\\\"line-height:21px\\\">{{tList.ChequeDate}}</td>\\r\\n                        <td [hidden]=\\\"hasCostCenter == false\\\" style=\\\"line-height:21px\\\">{{tList.CostCenter}}</td>\\r\\n                        <!-- <td style=\\\"display:flex;\\\">\\r\\n                            <button id=\\\"editBtn{{i}}\\\" (click)=\\\"editRow(i)\\\" style=\\\"margin-top:0px\\\" class=\\\"glyphicon glyphicon-edit\\\"></button>\\r\\n                            <button (click)=\\\"removeRow(i)\\\" style=\\\"margin-left:5px; margin-top:0px\\\" class=\\\"glyphicon glyphicon-remove\\\"></button>\\r\\n                        </td> -->\\r\\n                        <td>\\r\\n                           {{tList.NARATION}} \\r\\n                        </td>\\r\\n                    </tr>  \\r\\n\\r\\n                    <!-- <tr *ngIf=\\\"tList.NARATION != null && tList.inputMode == false\\\" (click)=\\\"clickRow(i)\\\">\\r\\n                        <td style=\\\"padding-top: 0px; line-height:21px\\\"></td>\\r\\n                        <td colspan=\\\"8\\\" style=\\\"padding-top: 0px; line-height:21px\\\">\\r\\n                            ( {{tList.NARATION}} ) \\r\\n                        </td>\\r\\n                    </tr> -->\\r\\n                </tbody>\\r\\n            </table>\\r\\n        </div> \\r\\n    </form>\\r\\n    <div *ngIf=\\\"showWholeSubledger==true\\\">\\r\\n        <form *ngIf=\\\"showSubLedger==true\\\" class=\\\"col-md-4\\\" style=\\\"padding-left: 5px;padding-right: 0px;\\\" id=\\\"sub-ledger\\\">\\r\\n            <label style=\\\"text-align:center; display: block; font-size: 18px; float:none; margin-left:auto; margin-right:auto; width:auto\\\">Sub-Ledger Entry</label>\\r\\n            <div style=\\\"display: block; max-height: 400px;min-height: 292px;\\\" class=\\\"scroll\\\">\\r\\n                <table class=\\\"table\\\" style=\\\"margin-bottom: 5px; font-size: 12.5px;\\\">\\r\\n                    <thead>\\r\\n                        <tr style=\\\"border-bottom: 2px solid #E6E6E6; border-top: 2px solid #E6E6E6\\\">\\r\\n                            <th>S.No.</th>\\r\\n                            <th>A/C Code</th>\\r\\n                            <th>A/C Name</th>\\r\\n                            <th>{{showAmount}} Amount</th>\\r\\n                            <th></th>\\r\\n                        </tr>\\r\\n                    </thead>\\r\\n                    <tbody *ngFor=\\\"let tList of subLedgerList;let i=index\\\" style=\\\"border: 0px;\\\">\\r\\n                        <tr *ngIf=\\\"tList.inputMode == true\\\">\\r\\n                            <td>{{i+1}}.</td>\\r\\n                            <td>\\r\\n                                <select name=\\\"acCode{{i}}\\\" *ngIf=\\\"enableACCodeFocus==true\\\" [subFocus]=\\\"subAcCodeFocused\\\" style=\\\"height: 23px;\\\" [(ngModel)]=\\\"tList.SubledgerItem\\\" (change)=\\\"subACCodeChange(i)\\\">\\r\\n                                    <option *ngFor=\\\"let subItemList of subledgerItemList\\\" [ngValue]=\\\"subItemList\\\">{{subItemList.ACCODE}}</option>\\r\\n                                </select>\\r\\n                                <select name=\\\"acCode{{i}}\\\" *ngIf=\\\"enableACCodeFocus==false\\\" style=\\\"height: 23px;\\\" [(ngModel)]=\\\"tList.SubledgerItem\\\" (change)=\\\"subACCodeChange(i)\\\">\\r\\n                                    <option *ngFor=\\\"let subItemList of subledgerItemList\\\" [ngValue]=\\\"subItemList\\\">{{subItemList.ACCODE}}</option>\\r\\n                                </select>\\r\\n                            </td>\\r\\n                            <td>\\r\\n                                <select name=\\\"acName{{i}}\\\" *ngIf=\\\"enableACNameFocus==true\\\" [subFocus]=\\\"subAcNameFocused\\\" style=\\\"height: 23px; max-width: 140px\\\" [(ngModel)]=\\\"tList.SubledgerItem\\\" (change)=\\\"subACNameChange(i)\\\">\\r\\n                                    <option *ngFor=\\\"let subItemList of subledgerItemList\\\" [ngValue]=\\\"subItemList\\\">{{subItemList.ACNAME}}</option>\\r\\n                                </select>\\r\\n                                <select name=\\\"acName{{i}}\\\" *ngIf=\\\"enableACNameFocus==false\\\" style=\\\"height: 23px; max-width: 140px\\\" [(ngModel)]=\\\"tList.SubledgerItem\\\" (change)=\\\"subACNameChange(i)\\\">\\r\\n                                    <option *ngFor=\\\"let subItemList of subledgerItemList\\\" [ngValue]=\\\"subItemList\\\">{{subItemList.ACNAME}}</option>\\r\\n                                </select>\\r\\n                            </td>\\r\\n                            <td>\\r\\n                                <input type=\\\"number\\\" *ngIf=\\\"showAmount=='Dr.'\\\" style=\\\"height: 23px;max-width: 90px\\\" name=\\\"subDebit{{i}}\\\" id=\\\"subDebit\\\"\\r\\n                                    [(ngModel)]=\\\"tList.DRAMNT\\\" (keyup)=\\\"changeSubDebit($event.target.value,i)\\\">\\r\\n                                <input type=\\\"number\\\" *ngIf=\\\"showAmount=='Cr.'\\\" style=\\\"height: 23px;max-width: 90px\\\" name=\\\"subCredit{{i}}\\\" id=\\\"subCredit\\\"\\r\\n                                    [(ngModel)]=\\\"tList.CRAMNT\\\" (keyup)=\\\"changeSubCredit($event.target.value,i)\\\">\\r\\n                            </td>\\r\\n                            <td></td>\\r\\n                        </tr>\\r\\n                        <tr *ngIf=\\\"tList.inputMode == true\\\">\\r\\n                            <td>\\r\\n                                <td colspan=\\\"5\\\">\\r\\n                                    <input style=\\\"min-width: 70.5%;height: 23px;\\\" type=\\\"text\\\" name=\\\"narration{{i}}\\\" [(ngModel)]=\\\"tList.NARATION\\\" placeholder=\\\"Narration\\\">\\r\\n                                    <button *ngIf=\\\"tList.inputMode == true && tList.editMode == false\\\" (click)=\\\"addLedgerRow(i)\\\" style=\\\"margin-left:3px;\\\" [disabled]=\\\"hasLedgerAddBtn == false\\\"\\r\\n                                        class=\\\"glyphicon glyphicon-plus\\\"></button>\\r\\n                                    <button *ngIf=\\\"tList.editMode == true && tList.inputMode == true\\\" (click)=\\\"saveLedgerRow(i)\\\" style=\\\"margin-left:3px;\\\" class=\\\"glyphicon glyphicon-floppy-disk\\\"></button>\\r\\n                                    <button *ngIf=\\\"tList.inputMode == true\\\" (click)=\\\"removeLedgerRow(i);\\\" style=\\\"margin-left:1px\\\" class=\\\"glyphicon glyphicon-remove\\\"></button>\\r\\n                                </td>\\r\\n                        </tr>\\r\\n\\r\\n                        <tr *ngIf=\\\"tList.inputMode == false\\\">\\r\\n                            <td>{{i+1}}.</td>\\r\\n                            <td>{{tList.SubledgerItem.ACCODE}}</td>\\r\\n                            <td>{{tList.SubledgerItem.ACNAME}}</td>\\r\\n                            <td>\\r\\n                                <div *ngIf=\\\"tList.DRAMNT != 0\\\">{{tList.DRAMNT}}</div>\\r\\n                                <div *ngIf=\\\"tList.CRAMNT != 0\\\">{{tList.CRAMNT}}</div>\\r\\n                            </td>\\r\\n                            <td style=\\\"display:flex;\\\">\\r\\n                                <button id=\\\"editLedgerBtn{{i}}\\\" (click)=\\\"editLedgerRow(i)\\\" class=\\\"glyphicon glyphicon-edit\\\"></button>\\r\\n                                <button (click)=\\\"removeLedgerRow(i)\\\" style=\\\"margin-left:5px\\\" class=\\\"glyphicon glyphicon-remove\\\"></button>\\r\\n                            </td>\\r\\n                        </tr>\\r\\n\\r\\n                        <tr *ngIf=\\\"tList.NARATION != null && tList.inputMode == false\\\">\\r\\n                            <td></td>\\r\\n                            <td colspan=\\\"4\\\" style=\\\"padding-top:0px;\\\">\\r\\n                               ( {{tList.NARATION}} )\\r\\n                            </td>\\r\\n                        </tr>\\r\\n                    </tbody>\\r\\n                </table>\\r\\n            </div>\\r\\n        </form>\\r\\n\\r\\n        <div *ngIf=\\\"showSubLedgerList == true\\\" class=\\\"col-md-4\\\" style=\\\"padding-left: 5px;padding-right: 0px;\\\" id=\\\"sub-ledger\\\">\\r\\n            <label style=\\\"text-align:center; display: block; font-size: 18px; float:none; margin-left:auto; margin-right:auto; width:auto\\\">Sub-Ledger List</label>\\r\\n            <div style=\\\"display: block; max-height: 400px;\\\" class=\\\"scroll\\\">\\r\\n                <table class=\\\"table\\\" style=\\\"margin-bottom: 5px; font-size: 12.5px;\\\">\\r\\n                    <thead>\\r\\n                        <tr style=\\\"border-bottom: 2px solid #E6E6E6; border-top: 2px solid #E6E6E6\\\">\\r\\n                            <th>S.No.</th>\\r\\n                            <th>A/C Code</th>\\r\\n                            <th>A/C Name</th>\\r\\n                            <th>Dr. Amnt</th>\\r\\n                            <th>Cr. Amnt</th>\\r\\n                        </tr>\\r\\n                    </thead>\\r\\n                    <tbody *ngFor=\\\"let tList of trnMain.TrntranList;let i=index\\\" style=\\\"border: 0px;\\\">\\r\\n                        <tr *ngIf=\\\"tList.AccountItem.HASSUBLEDGER == 1\\\">\\r\\n                            <td *ngIf=\\\"tList.AccountItem.ACCODE != null || tList.AccountItem.ACNAME != null\\\"><strong></strong></td>\\r\\n                            <td style=\\\"border-bottom: 2px solid #E6E6E6;line-height:20px;\\\" *ngIf=\\\"tList.AccountItem.ACCODE != null || tList.AccountItem.ACNAME != null\\\"><strong>{{tList.AccountItem.ACCODE}}</strong></td>\\r\\n                            <td style=\\\"border-bottom: 2px solid #E6E6E6;line-height:20px;\\\" *ngIf=\\\"tList.AccountItem.ACCODE != null || tList.AccountItem.ACNAME != null\\\"><strong>{{tList.AccountItem.ACNAME}}:</strong></td>\\r\\n                            <td style=\\\"border-bottom: 2px solid #E6E6E6;line-height:20px;\\\"></td>\\r\\n                            <td style=\\\"border-bottom: 2px solid #E6E6E6;line-height:20px;\\\"></td>\\r\\n                        </tr>\\r\\n                        <tr *ngFor=\\\"let sList of trnMain.TrntranList[i].SubledgerTranList;let j=index\\\">\\r\\n                            <td *ngIf=\\\"sList.SubledgerItem != null && sList.SubledgerItem.ACNAME != null\\\" style=\\\"line-height:20px;\\\">{{j+1}}.</td>\\r\\n                            <td style=\\\"line-height:20px;\\\" *ngIf=\\\"sList.SubledgerItem != null && sList.SubledgerItem.ACNAME != null\\\">{{sList.SubledgerItem.ACCODE}}</td>\\r\\n                            <td style=\\\"line-height:20px;\\\" *ngIf=\\\"sList.SubledgerItem != null && sList.SubledgerItem.ACNAME != null\\\">{{sList.SubledgerItem.ACNAME}}</td>\\r\\n                            <td style=\\\"line-height:20px;\\\" *ngIf=\\\"sList.SubledgerItem != null && sList.SubledgerItem.ACNAME != null\\\">{{sList.DRAMNT}}</td>\\r\\n                            <td style=\\\"line-height:20px;\\\" *ngIf=\\\"sList.SubledgerItem != null && sList.SubledgerItem.ACNAME != null\\\">{{sList.CRAMNT}}</td>\\r\\n                        </tr>\\r\\n\\r\\n                    </tbody>\\r\\n                </table>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <form *ngIf=\\\"showHelp == true\\\" class=\\\"col-md-4\\\" style=\\\"padding-left: 5px;padding-right: 0px;\\\" id=\\\"help\\\">\\r\\n            <label style=\\\"text-align:center; display: block; font-size: 18px; float:none; margin-left:auto; margin-right:auto; width:auto\\\">Help</label>\\r\\n            <table class=\\\"table\\\" style=\\\"margin-bottom: 5px;\\\">\\r\\n                <h5><strong>What is Lorem Ipsum?</strong></h5>\\r\\n                <p>\\r\\n                    <strong>Lorem Ipsum</strong> is simply dummy text of the printing and typesetting industry. Lorem Ipsum\\r\\n                    has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley\\r\\n                    of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also\\r\\n                    the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s\\r\\n                    with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing\\r\\n                    software like Aldus PageMaker including versions of Lorem Ipsum\\r\\n                </p>\\r\\n            </table>\\r\\n        </form>\\r\\n    </div> \\r\\n</div> \\r\\n\\r\\n<generic-popup-grid  \\r\\n  #genericGridACList \\r\\n  [popupsettings]=\\\"gridACListPopupSettings\\\"\\r\\n  (onItemDoubleClick) = \\\"onAcSelect($event)\\\"\\r\\n  ></generic-popup-grid> \"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/AccountVoucher/components/journal/trntran-journal-entry.component.html\n// module id = 1329\n// module chunks = 1 2 3","module.exports = \"<!-- <div style=\\\"background: #e2eaea !important; height: 40px;\\\"  class=\\\"clearfix\\\" >\\r\\n  <label\\r\\n    style=\\\"\\r\\n    font-family: Segoe UI Light;\\r\\n    font-weight: bold;\\r\\n    font-size: 20px;\\r\\n    padding-left: 5%;\\r\\n    padding-top: 1%;\\r\\n    \\\"\\r\\n    >PARTY BALANCE CONFIRMATION</label>\\r\\n    <button style=\\\"margin-top: 9px; margin-right: 59px;\\\" class=\\\"btn btn-info pull-right\\\" (click)='reSet()'> Reset</button>\\r\\n\\r\\n</div> -->\\r\\n\\r\\n<div class=\\\"clearfix\\\" style=\\\"background: #e2eaea !important; height: 40px;\\\">\\r\\n  <div>\\r\\n    <div class=\\\"col-md-4\\\">\\r\\n      <!-- <h2 style=\\\"color: black;\\\">Bank Reconciliation </h2> -->\\r\\n      <label\\r\\n        style=\\\"font-family: Segoe UI Light;font-weight: bold;font-size: 20px;padding-left: 5%;padding-top: 3%;width: 100%;\\\">PARTY\\r\\n        BALANCE CONFIRMATION\\r\\n      </label>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-4\\\">\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"col-md-4\\\" style=\\\"margin-top:8px;\\\">\\r\\n      <button style=\\\"margin: 0px 4px;\\\" class=\\\"btn btn-info pull-right\\\" (click)=\\\"reSet()\\\">\\r\\n        Reset\\r\\n      </button>\\r\\n      <button class=\\\"btn btn-info pull-right\\\" (click)=\\\"onPrintClicked()\\\"> Print</button>\\r\\n      <!-- <button class=\\\"btn btn-info pull-right\\\" (click)=\\\"SelectDate()\\\">\\r\\n      View\\r\\n    </button> -->\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n<style>\\r\\n  input {\\r\\n    height: 25px;\\r\\n    vertical-align: middle;\\r\\n    font-size: 13px;\\r\\n    border: 1px solid #cbcbcb;\\r\\n    border-radius: 3px;\\r\\n    color: black;\\r\\n    padding-left: 4px;\\r\\n  }\\r\\n\\r\\n  label {\\r\\n    font-family: Roboto, Arial, sans-serif;\\r\\n    font-size: 14px;\\r\\n  }\\r\\n\\r\\n  legend {\\r\\n    font-family: Roboto, Arial, sans-serif;\\r\\n    font-size: 14px;\\r\\n    width: 0;\\r\\n\\r\\n  }\\r\\n\\r\\n  .date {\\r\\n    margin-left: 8px;\\r\\n  }\\r\\n</style>\\r\\n\\r\\n<div class=\\\"col-md-12\\\" style=\\\"border-bottom: 1px solid #828080;\\r\\n        margin-top:10px;\\r\\n        margin-bottom: 5px;\\r\\n        padding-bottom: 10px;\\r\\n        background: #e2eaea; padding-top: 9px;\\r\\n        width: 100%;\\r\\n      \\\">\\r\\n\\r\\n  <div style=\\\"display: flex;\\\">\\r\\n    <div class=\\\"col-md-3\\\">\\r\\n      <label>From:</label>\\r\\n      <input placeholder=\\\"Year Start Date\\\" style=\\\"width:128px; height:24px;\\\" type=\\\"date\\\"\\r\\n        [(ngModel)]=\\\"PartyBalanceData.DATE1\\\" (change)=\\\"changeEntryDate($event.target.value,'AD')\\\">&nbsp;A.D &nbsp;\\r\\n\\r\\n      <div style=\\\" width: 134px;margin-left: 202px; margin-top: -29px;\\\">\\r\\n        <nepali-date-picker name=\\\"nepaliDateFrom\\\" [id]=\\\"'nepaliDatefrom'\\\"\\r\\n          (change)=\\\"changeEntryDate($event.detail.value,'BS')\\\" [label]=\\\"'dd/mm/yyyy'\\\"\\r\\n          [(ngModel)]=\\\"PartyBalanceData.BSDATE1\\\">\\r\\n        </nepali-date-picker>\\r\\n      </div>\\r\\n      <!-- <input  autocomplete=\\\"off\\\" id=\\\"nepaliDate\\\" placeholder=\\\"yyyy-mm-dd\\\"type=\\\"text\\\"\\r\\n        [(ngModel)]=\\\"PartyBalanceData.BSDATE1\\\" style=\\\"width: 90px;\\\" type=\\\"text\\\"\\r\\n        (change)=\\\"changeEntryDate($event.target.value,'BS')\\\">&nbsp;B.S\\r\\n        &nbsp; -->\\r\\n    </div>\\r\\n    <div class=\\\"col-md-3\\\" style=\\\"margin-top: 8px;\\\">\\r\\n      <label><input type=\\\"radio\\\" name=\\\"partytype\\\" [(ngModel)]=\\\"PartyBalanceData.PARTYTYPE\\\" value=C\\r\\n          (change)=\\\"parttypeChange()\\\">&nbsp;Customer</label>\\r\\n      <label><input type=\\\"radio\\\" name=\\\"partytype\\\" [(ngModel)]=\\\"PartyBalanceData.PARTYTYPE\\\" value=V\\r\\n          (change)=\\\"parttypeChange()\\\">&nbsp;Supplier</label>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-3\\\" style=\\\"margin-top: 8px;\\\">\\r\\n      <label class=\\\"smallBoldLabel\\\"><input type=\\\"checkbox\\\" name=\\\"transaction\\\"\\r\\n          [(ngModel)]=\\\"PartyBalanceData.INCLUDECASHTRANSACTION\\\" (change)=\\\"$event.target.checked\\r\\n          ? (PartyBalanceData.INCLUDECASHTRANSACTION = 1)\\r\\n          : (PartyBalanceData.INCLUDECASHTRANSACTION = 0)\\\">&nbsp;Including Cash Transaction</label>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-5\\\" style=\\\"margin-top: 8px;\\\">\\r\\n      <label class=\\\"smallBoldLabel\\\"><input type=\\\"checkbox\\\" name=\\\"transaction\\\"\\r\\n          [(ngModel)]=\\\"PartyBalanceData.INCLUDEACBASECNDN\\\" (change)=\\\"$event.target.checked\\r\\n          ? (PartyBalanceData.INCLUDEACBASECNDN = 1)\\r\\n          : (PartyBalanceData.INCLUDEACBASECNDN = 0)\\\">&nbsp;Including Ac Base Transactionn</label>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"col-md-3\\\" style=\\\"margin-top: 4px;\\\">\\r\\n    <label>To :</label>\\r\\n    <input placeholder=\\\"Year Start Date\\\" type=\\\"date\\\" style=\\\"width: 128px; height: 24px; margin-left: 13px;\\\"\\r\\n      [(ngModel)]=\\\"PartyBalanceData.DATE2\\\" (change)=\\\"changeEndDate($event.target.value,'AD')\\\">&nbsp;A.D &nbsp;\\r\\n\\r\\n    <div style=\\\" width: 134px;margin-left: 202px; margin-top: -29px;\\\">\\r\\n      <nepali-date-picker name=\\\"nepaliDateFrom\\\" [id]=\\\"'nepaliDateto'\\\" (change)=\\\"changeEndDate($event.detail.value,'BS')\\\"\\r\\n        [label]=\\\"'dd/mm/yyyy'\\\" [(ngModel)]=\\\"PartyBalanceData.BSDATE2\\\">\\r\\n      </nepali-date-picker>\\r\\n    </div>\\r\\n    <!-- <input class=\\\"date\\\" autocomplete=\\\"off\\\" id=\\\"nepaliDate\\\" placeholder=\\\"yyyy-mm-dd\\\" type=\\\"text\\\"\\r\\n        [(ngModel)]=\\\"PartyBalanceData.BSDATE2\\\" type=\\\"text\\\" style=\\\"width: 90px;\\\"\\r\\n        (change)=\\\"changeEndDate($event.target.value,'BS')\\\">&nbsp;B.S -->\\r\\n    &nbsp;\\r\\n  </div>\\r\\n  <div class=\\\"col-md-3\\\" style=\\\"margin-top: 8px;\\\">\\r\\n    <label>Cost Center :</label>\\r\\n    <select id=\\\"costcenter\\\" [(ngModel)]=\\\"PartyBalanceData.COSTCENTER\\\" style=\\\"width: 60%;height: 21px;\\r\\n          padding-left: 14px;\\\">\\r\\n      <option [ngValue]=\\\"\\\"></option>\\r\\n      <option *ngFor=\\\"let c of costlists\\\" [ngValue]=\\\"c.CCID\\\">\\r\\n        {{ c.COSTCENTERNAME }}</option>\\r\\n    </select>\\r\\n  </div>\\r\\n  <div class=\\\"col-md-4\\\" style=\\\"margin-top: 9px;\\\">\\r\\n    <div>\\r\\n      <label style=\\\"margin-right:1%;\\\">Party Account:</label>\\r\\n      <input style=\\\"height: 25px; margin-left: 1%; width: 74%;\\\" (keydown.Enter)=\\\"showAcList(i);\\\" name=\\\"customerName\\\"\\r\\n        [(ngModel)]=\\\"PartyBalanceData.CUSTOMERNAME\\\" type=\\\"text\\\" placeholder=\\\"Press Enter to select\\\" autocomplete=\\\"off\\\">\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"col-md-1\\\" style=\\\"margin-top: 6px;\\\">\\r\\n    <button class=\\\"btn btn-info pull-left\\\" (click)='onLoad()'> Load</button>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"col-md-12\\\">\\r\\n  <!-- <div class=\\\"col-md-8\\\" style=\\\"margin-top: 5px;\\\">\\r\\n      <div>\\r\\n      <label>Prepared By:</label>\\r\\n      <label style=\\\"margin-left: 15px;\\\">Name:</label>\\r\\n      <input  [(ngModel)]=\\\"Name\\\" id=\\\"Name0\\\" type=\\\"text\\\">\\r\\n\\r\\n      <label style=\\\"margin-left:30px;\\\">Designation:</label>\\r\\n        <input [(ngModel)]=\\\"Designation\\\" id=\\\"destination\\\" type=\\\"text\\\">\\r\\n      </div>\\r\\n    </div> -->\\r\\n  <!-- <fieldset style=\\\"height: 89px; width:113%\\\">\\r\\n      <legend>Prepared By:</legend>\\r\\n      <div >\\r\\n        <label>Name:</label>\\r\\n        <input style=\\\"width: 79%; margin-left:9.3%\\\"  type=\\\"text\\\">\\r\\n      </div>\\r\\n      <div>\\r\\n        <label>Designation:</label>\\r\\n        <input style=\\\"width:79%; margin-left: 1%;\\\"  type=\\\"text\\\">\\r\\n      </div>\\r\\n  </fieldset>\\r\\n</div> -->\\r\\n  <div class=\\\"col-md-3\\\"></div>\\r\\n\\r\\n\\r\\n  <div class=\\\"col-md-1\\\">\\r\\n    <!-- <button\\r\\n      *ngIf=\\\"_trnMainService.TrnMainObj.Mode == 'VIEW'  &&\\r\\n    !showSecondaryButtons && _trnMainService.TrnMainObj.VoucherType==12 && _trnMainService.TrnMainObj.VoucherType==15|| _trnMainService.TrnMainObj.VoucherType==16 || _trnMainService.TrnMainObj.VoucherType!=3 \\\"\\r\\n      [ngClass]=\\\"changeCursor==true?'PrintPending':'PrintDone'\\\" (click)=\\\"onPrintClicked()\\\" class=\\\"btn btn-info pull-right\\\" [disabled]=\\\"_trnMainService.TrnMainObj.Mode == 'NEW' || _trnMainService.TrnMainObj.Mode == 'EDIT'\\\" >\\r\\n      F8 PRINT\\r\\n    </button> -->\\r\\n    <!-- <button class=\\\"btn btn-info pull-left\\\" (click)=\\\"onPrintClicked()\\\"> Print</button> -->\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n<style>\\r\\n  table {\\r\\n    border-collapse: collapse;\\r\\n  }\\r\\n\\r\\n  td {\\r\\n    /* border: 2px solid #000000; */\\r\\n    height: 24px;\\r\\n  }\\r\\n\\r\\n  th {\\r\\n    font-weight: bold;\\r\\n    font-family: Roboto, Arial, sans-serif;\\r\\n    text-align: center;\\r\\n  }\\r\\n</style>\\r\\n\\r\\n\\r\\n<!-- **************table****************** -->\\r\\n\\r\\n<div style=\\\"margin-top: 100px\\\">\\r\\n  <div style=\\\"height: 480px;\\\">\\r\\n    <table style=\\\"margin-bottom: 5px; font-size: 13px; width: 100%\\\">\\r\\n      <thead>\\r\\n        <tr style=\\\"\\r\\n            border-bottom: 2px solid #e6e6e6;\\r\\n            border-top: 2px solid #e6e6e6;\\r\\n            height: 30px;\\r\\n            background: silver;\\r\\n            color: black;\\\">\\r\\n\\r\\n          <th style=\\\"width: 1%\\\">SNo.</th>\\r\\n          <th style=\\\"width: 19%; padding-left: 1%\\\">Particular</th>\\r\\n          <th style=\\\"width: 11%; padding-left: 1%\\\">Operation</th>\\r\\n          <th style=\\\"width: 7%; padding-left: 1%\\\">Amount</th>\\r\\n\\r\\n        </tr>\\r\\n      </thead>\\r\\n      <tbody *ngFor=\\\"let i of PartyInfo\\\">\\r\\n\\r\\n        <tr style=\\\"border: 1px solid #e6e6e6;max-height:25px;\\\">\\r\\n\\r\\n          <td style=\\\"line-height: 21px; text-align: center; border: 1px solid #e6e6e6; \\\">\\r\\n            {{i.SNO}}\\r\\n          </td>\\r\\n\\r\\n          <td style=\\\"line-height: 21px; text-align: center; border: 1px solid #e6e6e6;\\\">\\r\\n            <input style=\\\"height: 25px; width: 100%\\\" [(ngModel)]=\\\"i.PARTICULAR\\\" readonly />\\r\\n          </td>\\r\\n          <td style=\\\"line-height: 21px; text-align: center; border: 1px solid #e6e6e6;\\\">\\r\\n            <input style=\\\"height: 25px; width: 100%\\\" [(ngModel)]=\\\"i.OPERATION\\\" readonly />\\r\\n          </td>\\r\\n          <td style=\\\"line-height: 21px; text-align: center; border: 1px solid #e6e6e6;\\\">\\r\\n            <input style=\\\"height: 25px; text-align: right; width: 100% \\\" [(ngModel)]=\\\"i.AMOUNT\\\" readonly />\\r\\n          </td>\\r\\n\\r\\n        </tr>\\r\\n      </tbody>\\r\\n      <!-- <ng-container *ngIf=\\\"PartyInfo.length == 0\\\">\\r\\n        <tbody style=\\\"background:#e2eaea;\\\">\\r\\n          <tr>\\r\\n            <td colspan=\\\"4\\\">\\r\\n              Party Info is Empty.\\r\\n            </td>\\r\\n          </tr>\\r\\n        </tbody>\\r\\n      </ng-container> -->\\r\\n    </table>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n<generic-popup-grid #genericGridACList [popupsettings]=\\\"gridACListPopupSettings\\\"\\r\\n  (onItemDoubleClick)=\\\"onAcSelect($event)\\\"></generic-popup-grid>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/AccountVoucher/components/party-balance-confirmation/party-balance-confirmation.component.html\n// module id = 1330\n// module chunks = 1 2 3","module.exports = \"<style>\\r\\n    .sectionWrapper{\\r\\n      display: flex;\\r\\n      flex-direction: column;\\r\\n      height: 94vh;\\r\\n    }\\r\\n\\r\\n .midTableWrapper{\\r\\n  flex: 1; \\r\\n  overflow: auto;\\r\\n  overflow-x:hidden;\\r\\n}\\r\\n.footer-wrapper {\\r\\n  background: lightgreen;\\r\\n  min-height: 87px;\\r\\n}\\r\\n.main-container{\\r\\n  margin-bottom: 0 !important;\\r\\n}\\r\\n::-webkit-input-placeholder {\\r\\n    color: inherit;\\r\\n    opacity: 1 !important;\\r\\n}\\r\\n\\r\\n\\r\\n  </style>\\r\\n  <div class=\\\"sectionWrapper\\\">\\r\\n    <div class=\\\"topWwrapper\\\">\\r\\n      <div class=\\\"sticky-top\\\">\\r\\n    <div class=\\\"clearfix\\\">\\r\\n      <div class=\\\"col-md-1\\\">\\r\\n        <voucher-master-toggler></voucher-master-toggler>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-4\\\">\\r\\n        <!-- <h2 style=\\\"color: black;font-size: 18px;\\\">{{ _trnMainService.pageHeading}}[{{this._trnMainService.TrnMainObj?.Mode}}]</h2> -->\\r\\n        <label style=\\\"font-family: Segoe UI Light;font-weight: bold;font-size: 20px;padding-left: 5%;padding-top: 1%;\\\">{{ _trnMainService.pageHeading }}</label>\\r\\n        <label style=\\\"font-size: 14px;\\\">&nbsp;>> {{ _trnMainService.TrnMainObj?.Mode | titlecase}} Voucher</label>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-7\\\">\\r\\n        <opening-balance-action></opening-balance-action>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"main-container\\\">\\r\\n    <div  class=\\\"clearfix\\\"> \\r\\n      <trnmain-voucher-entry></trnmain-voucher-entry> \\r\\n    </div>\\r\\n   \\r\\n  </div>\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"midTableWrapper\\\">\\r\\n       <div class=\\\"clearfix\\\" style=\\\"margin-top: 5px\\\">\\r\\n      <trntran-voucher-entry ></trntran-voucher-entry>\\r\\n    </div>\\r\\n\\r\\n    </div>\\r\\n      <div class=\\\"footer-wrapper\\\" style=\\\"background: gray;\\\">\\r\\n    <account-voucher-summary></account-voucher-summary>\\r\\n  </div> \\r\\n  </div>\\r\\n\\r\\n\\r\\n\\r\\n  \"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/AccountVoucher/components/party-opening-balance/party-opening-balance.component.html\n// module id = 1331\n// module chunks = 1 2 3","module.exports = \"<style>\\r\\n  .table tr th {\\r\\n    text-align: center;\\r\\n    vertical-align: middle;\\r\\n  }\\r\\n\\r\\n  tr {\\r\\n    border: 1px solid #e6e6e6;\\r\\n    max-height: 25px;\\r\\n  }\\r\\n\\r\\n  td {\\r\\n    height: 23px;\\r\\n    border: 1px solid #e6e6e6;\\r\\n\\r\\n  }\\r\\n\\r\\n  .bottom {\\r\\n    position: fixed;\\r\\n    bottom: 20px;\\r\\n    left: 0px;\\r\\n    width: 100%;\\r\\n    height: 135px;\\r\\n    z-index: 999997;\\r\\n    /* background: #e2eaea !important; */\\r\\n  }\\r\\n\\r\\n</style>\\r\\n\\r\\n\\r\\n<div class=\\\"sticky-top\\\">\\r\\n  <div class=\\\"clearfix\\\">\\r\\n    <div class=\\\"col-md-1\\\">\\r\\n      <voucher-master-toggler></voucher-master-toggler>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-4\\\">\\r\\n      <!-- <h2 style=\\\"color: black;\\\">Bank Reconciliation </h2> -->\\r\\n      <label style=\\\"font-family: Segoe UI Light;font-weight: bold;font-size: 20px;padding-left: 5%;padding-top: 1%;width: 100%;\\\">PARTY RECONCILIATION</label>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-7\\\">\\r\\n      <button (click)=\\\"onLoadClick()\\\" style=\\\"margin: 0px 4px;\\\" class=\\\"btn btn-info pull-right\\\">\\r\\n        LOAD\\r\\n      </button>\\r\\n      <button (click)=\\\"onSaveClick()\\\" style=\\\"margin: 0px 4px;\\\" class=\\\"btn btn-info pull-right\\\">\\r\\n        SAVE\\r\\n      </button>\\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"main-container\\\">\\r\\n  <div [hidden]=\\\"!masterService.ShowMore\\\" class=\\\"clearfix\\\">\\r\\n\\r\\n    <div class=\\\"col-md-12\\\" style=\\\"margin: 8px 15px ; border: 1px solid #e6e6e6; \\\">\\r\\n\\r\\n      <!-- <div class=\\\"col-md-4\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n          <label style=\\\"width:30%\\\">Date </label>\\r\\n          <input style=\\\"width:60%\\\" type=\\\"text\\\" ngxDaterangepickerMd [(ngModel)]=\\\"selectedDate\\\" [showDropdowns]=\\\"true\\\"\\r\\n            [showCustomRangeLabel]=\\\"true\\\" [alwaysShowCalendars]=\\\"true\\\" [locale]=\\\"locale\\\" [ranges]=\\\"ranges\\\"\\r\\n            [linkedCalendars]=\\\"true\\\" [showCancel]=\\\"true\\\" placeholder=\\\"Date Range...\\\"\\r\\n            (ngModelChange)=\\\"dateChanged($event)\\\" />\\r\\n        </div>\\r\\n      </div> -->\\r\\n\\r\\n      <div class=\\\"col-md-4\\\">\\r\\n        <label>From:</label>\\r\\n        <input  placeholder=\\\"Year Start Date\\\" style=\\\"width:128px; height: 30px;\\\" type=\\\"date\\\"\\r\\n        (change)=\\\"changeEntryDate($event.target.value,'AD')\\\" [(ngModel)]=\\\"PartyReconciliationObj.DATE1\\\">&nbsp;&nbsp;\\r\\n\\r\\n        <div style=\\\" width: 134px;margin-left: 260px; margin-top: -29px;\\\">\\r\\n          <nepali-date-picker name=\\\"nepaliDateFrom\\\" [id]=\\\"'nepaliDatefrom'\\\"\\r\\n            (change)=\\\"changeEntryDate($event.detail.value,'BS')\\\"\\r\\n            [label]=\\\"'dd/mm/yyyy'\\\"  [(ngModel)]=\\\"PartyReconciliationObj.BSDATE1\\\">\\r\\n            </nepali-date-picker>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-4\\\" style=\\\"margin-top: 8px;\\\">\\r\\n        <label><input type=\\\"radio\\\" name=\\\"partytype\\\" [(ngModel)]=\\\"PartyReconciliationObj.PARTYTYPE\\\" value=C (change)=\\\"parttypeChange()\\\">&nbsp;Customer</label>\\r\\n        <label><input type=\\\"radio\\\" name=\\\"partytype\\\" [(ngModel)]=\\\"PartyReconciliationObj.PARTYTYPE\\\" value=V (change)=\\\"parttypeChange()\\\">&nbsp;Supplier</label>\\r\\n      </div>\\r\\n     \\r\\n\\r\\n      <div class=\\\"col-md-4\\\">\\r\\n        <div class=\\\"checkbox\\\">\\r\\n          <label style=\\\"width:95%\\\"><input type=\\\"checkbox\\\" [(ngModel)]=\\\"PartyReconciliationObj.SHOWRECONSILLED\\\"\\r\\n              name=\\\"ReconciledRecord\\\">Show Reconciled Record Also </label>\\r\\n        </div>\\r\\n\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"row col-md-12\\\">\\r\\n      <div class=\\\"col-md-4\\\" style=\\\"margin-left:30px;\\\">\\r\\n        <label>To :</label>\\r\\n        <input   placeholder=\\\"Year End Date\\\" type=\\\"date\\\" style=\\\"width: 128px; height: 30px;\\\"\\r\\n        (change)=\\\"changeEndDate($event.target.value,'AD')\\\"  [(ngModel)]=\\\"PartyReconciliationObj.DATE2\\\">&nbsp;&nbsp;\\r\\n\\r\\n        <div style=\\\" width: 134px;margin-left: 260px; margin-top: -29px;\\\">\\r\\n          <nepali-date-picker name=\\\"nepaliDateTo\\\" [id]=\\\"'nepaliDateto'\\\"\\r\\n            (change)=\\\"changeEndDate($event.detail.value,'BS')\\\"\\r\\n            [label]=\\\"'dd/mm/yyyy'\\\"  [(ngModel)]=\\\"PartyReconciliationObj.BSDATE2\\\">\\r\\n            </nepali-date-picker>\\r\\n        </div>\\r\\n        &nbsp;\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"col-md-4\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n          <label style=\\\"width:30%\\\">Party Name </label>\\r\\n          <input type=\\\"text\\\" style=\\\"width:60%\\\" id=\\\"BankAccount\\\" name=\\\"Bank_Acccount\\\"\\r\\n            (keydown.tab)=\\\"onBankReconciliationPopUPTab()\\\" (keydown.enter)=\\\"onBankReconciliationPopUPTab()\\\"\\r\\n            [(ngModel)]=\\\"PartyReconciliationObj.ACNAME\\\" placeholder=\\\"Press ENTER or TAB to Account Name\\\" autocomplete=\\\"off\\\" />\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      \\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"clearfix\\\" style=\\\"margin-top: 5px\\\">\\r\\n    <div class=\\\"col-md-12\\\" style=\\\"height:325px;overflow-y:scroll\\\">\\r\\n      <div class=\\\"header\\\" style=\\\"position: sticky;top:0\\\">\\r\\n        <table style=\\\"width: 100%;table-layout: fixed\\\">\\r\\n          <thead>\\r\\n            <tr style=\\\"border-bottom: 1px solid #E6E6E6; border-top: 1px solid #E6E6E6;    height: 25px;\\r\\n                            background:#C0C0C0;\\r\\n                            color: black;\\\">\\r\\n              <th style=\\\"width:55px\\\"></th>\\r\\n              <th style=\\\"width:108px\\\">Date </th>\\r\\n              <th style=\\\"width:195px\\\">Particular </th>\\r\\n              <th style=\\\"width:190px\\\">Voucher Number </th>\\r\\n              <th style=\\\"width:192px\\\">Voucher Type </th>\\r\\n              <th style=\\\"width:120px\\\">REF No. </th>\\r\\n              \\r\\n              <th style=\\\"width:115px\\\">Debit</th>\\r\\n              <th style=\\\"width:110px\\\">Credit </th>\\r\\n            </tr>\\r\\n          </thead>\\r\\n        </table>\\r\\n      </div>\\r\\n      <table style=\\\"width: 100%;\\\">\\r\\n\\r\\n        <tbody style=\\\"border: 1px;\\\">\\r\\n          <tr *ngFor=\\\"let item of reconcileList; let in=index\\\">\\r\\n            <td style=\\\"width: 55px;\\\">\\r\\n              <input type=\\\"checkbox\\\" #check id=\\\"checkBox{{in}}\\\" (change)=\\\"itemChecked($event,in)\\\">\\r\\n            </td>\\r\\n\\r\\n            <td style=\\\"width: 110px;\\\">\\r\\n              {{item?.TRNDATE|date:'dd/MM/yyyy' }}\\r\\n            </td>\\r\\n\\r\\n\\r\\n\\r\\n            <td style=\\\"width: 195px;\\\">\\r\\n              {{item?.PARTICULARS }}\\r\\n            </td>\\r\\n\\r\\n            <td style=\\\"width: 195px;\\\">\\r\\n              {{item?.VNO }}\\r\\n            </td>\\r\\n\\r\\n            <td style=\\\"width: 195px;\\\">\\r\\n              {{item?.VOUCHER_TYPE }}\\r\\n            </td>\\r\\n\\r\\n            <td style=\\\"width:120px;\\\">\\r\\n              {{item?.REFNO  }}\\r\\n            </td>\\r\\n\\r\\n \\r\\n\\r\\n            <td style=\\\"width:115px;text-align: right\\\">\\r\\n              {{item?.DRAMNT | twoDigitNumber}}\\r\\n            </td>\\r\\n\\r\\n            <td style=\\\"width:115px;text-align: right;\\\">\\r\\n              {{item?.CRAMNT  | twoDigitNumber}}\\r\\n            </td>\\r\\n\\r\\n          </tr>\\r\\n        </tbody>\\r\\n      </table>\\r\\n\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n</div>\\r\\n<div class=\\\"bottom\\\">\\r\\n  <div class=\\\"col-md-12\\\">\\r\\n\\r\\n    <table class=\\\"table\\\" style=\\\"height: 100px; text-align:right; background:#C0C0C0;\\\">\\r\\n      <thead style=\\\"border: 1px solid #e6e6e6; \\\">\\r\\n        <ng-container *ngIf=\\\"showCompanybook == true;\\\">\\r\\n          <tr *ngFor=\\\"let item of balanceAsPerCompanyBook;\\\">\\r\\n            <td style=\\\"padding: 5px 0px; text-align: right; font-size: 12px; font-weight: bold; padding-right: 10px;\\\">\\r\\n              Balance As per Company Book </td>\\r\\n            <td style=\\\"padding: 5px 0px; text-align: right; padding-right: 10px;font-weight: 600;font-size:12px; \\\">\\r\\n              {{ !this.reconcileList  ?'0.00':(item.DRAMNT | twoDigitNumber)}}</td>\\r\\n            <td style=\\\"padding: 5px 0px; text-align: right; padding-right: 10px;font-weight: 600;font-size:12px; \\\">\\r\\n              {{ !this.reconcileList  ?'0.00':(item.CRAMNT | twoDigitNumber)}}</td>\\r\\n          </tr>\\r\\n        </ng-container>\\r\\n        <ng-container *ngIf=\\\"showCompanybook == false;\\\">\\r\\n          <tr>\\r\\n            <td style=\\\"padding: 5px 0px; text-align: right; font-size: 12px; font-weight: bold; padding-right: 10px;\\\">\\r\\n              Balance As per Company Book </td>\\r\\n            <td style=\\\"padding: 5px 0px; text-align: right; padding-right: 10px;font-size:12px; font-weight: 600;\\\">0.00\\r\\n            </td>\\r\\n            <td style=\\\"padding: 5px 0px; text-align: right; padding-right: 10px;font-size:12px; font-weight: 600;\\\">0.00\\r\\n            </td>\\r\\n          </tr>\\r\\n        </ng-container>\\r\\n\\r\\n\\r\\n      </thead>\\r\\n      <tbody style=\\\"border: 1px;\\\">\\r\\n\\r\\n        <ng-container *ngIf=\\\"reflectedBank == true;\\\">\\r\\n          <tr *ngFor=\\\"let item of amountNotReflectedOnBank;\\\" style=\\\"font-size: 11px;\\\">\\r\\n            <td style=\\\"line-height: 15px;padding: 5px 0px;text-align: right; font-size:12x;font-weight: bold; \\\">Amount\\r\\n              Not\\r\\n              Reflected on Bank(opening) </td>\\r\\n            <td style=\\\"line-height: 15px;padding: 5px 10px;text-align: right;font-size:12x;font-weight: bold; \\\">\\r\\n              {{ parseFloat(item.DRAMNT) | twoDigitNumber  }}\\r\\n            </td>\\r\\n            <td style=\\\"line-height: 15px;padding: 5px 10px;text-align: right;font-size:12x;font-weight: bold; \\\">\\r\\n              {{ parseFloat(item.CRAMNT) | twoDigitNumber  }}\\r\\n            </td>\\r\\n          </tr>\\r\\n        </ng-container>\\r\\n        <ng-container *ngIf=\\\"reflectedBank == false;\\\">\\r\\n          <tr style=\\\"font-size: 12px;\\\">\\r\\n            <td style=\\\"line-height: 15px;padding: 5px 10px;text-align: right; font-size:12x;font-weight: bold; \\\">Amount\\r\\n              Not\\r\\n              Reflected on Bank(opening) </td>\\r\\n            <td style=\\\"line-height: 15px;padding: 5px 10px;text-align: right;font-size:12x;font-weight: bold; \\\">0.00\\r\\n            </td>\\r\\n            <td style=\\\"line-height: 15px;padding: 5px 10px;text-align: right;font-size:12x;font-weight: bold; \\\">0.00\\r\\n            </td>\\r\\n          </tr>\\r\\n        </ng-container>\\r\\n\\r\\n\\r\\n\\r\\n        <tr style=\\\"font-size: 12px;\\\">\\r\\n          <td style=\\\"line-height: 15px;padding: 5px 10px; text-align: right;font-size:12x;font-weight: bold; \\\">Amount\\r\\n            Not\\r\\n            Reflected on Bank (Periodic) </td>\\r\\n          <td style=\\\"line-height: 15px;padding: 5px 10px; text-align: right;font-size:12x;font-weight: bold; \\\">\\r\\n            {{!this.reconcileList ?'0.00':(notReflectedonBankDebit | twoDigitNumber)}} </td>\\r\\n          <td style=\\\"line-height: 15px;padding: 5px 10px; text-align: right;font-size:12x;font-weight: bold; \\\">\\r\\n            {{!this.reconcileList ?'0.00':(notReflectedonBankCredit | twoDigitNumber)}} </td>\\r\\n        </tr>\\r\\n\\r\\n        <tr style=\\\"font-size: 12px;\\\">\\r\\n          <td style=\\\"line-height: 15px;padding: 5px 10px; text-align: right;font-size:12x;font-weight: bold; \\\">Balance\\r\\n            As Per\\r\\n            Bank Book </td>\\r\\n          <td style=\\\"line-height: 15px;padding: 5px 10px; text-align: right;font-size:12x;font-weight: bold; \\\">\\r\\n            {{!this.reconcileList ?'0.00': (balanceAsPerBankDebit | twoDigitNumber)}} </td>\\r\\n          <td style=\\\"line-height: 15px;padding: 5px 10px; text-align: right;font-size:12x;font-weight: bold; \\\">\\r\\n            {{!this.reconcileList ?'0.00': (balanceAsperBankCredit | twoDigitNumber)}}</td>\\r\\n        </tr>\\r\\n\\r\\n        <tr style=\\\"font-size: 12px;\\\">\\r\\n          <td style=\\\"line-height: 15px;padding: 5px 10px; text-align: right;font-size:12x;font-weight: bold; \\\">\\r\\n            Difference</td>\\r\\n          <td style=\\\"line-height: 15px;padding: 5px 10px; text-align: right;font-size:12x;font-weight: bold; \\\">\\r\\n            {{!this.reconcileList?'0.00': (differenceDebit | twoDigitNumber)}}</td>\\r\\n          <td style=\\\"line-height: 15px;padding: 5px 10px; text-align: right;font-size:12x;font-weight: bold; \\\">\\r\\n            {{!this.reconcileList?'0.00': (differenceCredit | twoDigitNumber)}}</td>\\r\\n        </tr>\\r\\n\\r\\n      </tbody>\\r\\n\\r\\n    </table>\\r\\n  </div>\\r\\n\\r\\n</div>\\r\\n\\r\\n<generic-popup-grid #bankReconciliationGeneric [popupsettings]=\\\"gridbankReconciliationPopupSettings\\\"\\r\\n  (onItemDoubleClick)=\\\"onItemDoubleClick($event)\\\">\\r\\n</generic-popup-grid>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/AccountVoucher/components/party-reconciliation/party-reconciliation.component.html\n// module id = 1332\n// module chunks = 1 2 3","module.exports = \"<div class=\\\"sticky-top\\\">\\r\\n    <div class=\\\"clearfix\\\">\\r\\n      <div class=\\\"col-md-2\\\">\\r\\n        <voucher-master-toggler></voucher-master-toggler>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-3\\\">\\r\\n        <h3 style=\\\"color: black;\\\">Single Payment</h3>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-7\\\">\\r\\n        <account-master-action (onBillTrackEmit)=\\\"BillTrack()\\\"></account-master-action>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"main-container\\\">\\r\\n    <div [hidden]=\\\"!masterService.ShowMore\\\" class=\\\"clearfix\\\">\\r\\n      <!-- <voucher-date-entry style=\\\"margin-top:-15px;\\\"></voucher-date-entry> -->\\r\\n      <trnmain-voucher-entry></trnmain-voucher-entry>\\r\\n      <SeriesDialog\\r\\n        [voucherType]=\\\"voucherType\\\"\\r\\n        (sendPrefix)=\\\"prefixChanged($event)\\\"\\r\\n      ></SeriesDialog>\\r\\n    </div>\\r\\n    <div class=\\\"clearfix\\\" style=\\\"margin-top: 5px\\\">\\r\\n      <trntran-voucher-entry #trnmainentry></trntran-voucher-entry>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"sticky-bottom\\\" style=\\\"background: gray;\\\">\\r\\n      <account-voucher-summary></account-voucher-summary>\\r\\n  </div>\\r\\n  \"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/AccountVoucher/components/payment-single/payment-single.component.html\n// module id = 1333\n// module chunks = 1 2 3","module.exports = \"<style>\\r\\n  .mr {\\r\\n    margin-left: 0px;\\r\\n    padding-left: 0px;\\r\\n  }\\r\\n\\r\\n</style>\\r\\n\\r\\n\\r\\n<div class=\\\"clearfix\\\">\\r\\n  <div class=\\\"col-md-12 mr\\\">\\r\\n    <div class=\\\"col-md-8 mr\\\">\\r\\n      <div class=\\\"col-md-4 mr\\\">\\r\\n        <div class=\\\"date-filters mr\\\">\\r\\n\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label>Voucher Date</label>\\r\\n            <input class=\\\"form-control\\\" type=\\\"text\\\" ngxDaterangepickerMd [(ngModel)]=\\\"selectedDate\\\"\\r\\n              [showDropdowns]=\\\"true\\\" [showCustomRangeLabel]=\\\"true\\\" [alwaysShowCalendars]=\\\"true\\\" [locale]=\\\"locale\\\"\\r\\n              [ranges]=\\\"ranges\\\" [linkedCalendars]=\\\"true\\\" [showCancel]=\\\"true\\\" placeholder=\\\"Date Range...\\\"\\r\\n              (ngModelChange)=\\\"dateChanged($event)\\\" />\\r\\n          </div>\\r\\n\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-4\\\">\\r\\n\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label>Division Selection</label>\\r\\n          <select class=\\\"form-control\\\" [(ngModel)]=\\\"_transactionService.voucherPostingObj.division\\\">\\r\\n            <option *ngFor=\\\"let div of divisionList;let i=index\\\" value=\\\"{{div.INITIAL}}\\\">{{div.NAME}}</option>\\r\\n\\r\\n          </select>\\r\\n        </div>\\r\\n\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-4\\\">\\r\\n      <button class=\\\"btn btn-info\\\" style=\\\"float: right;\\\" (click)=\\\"loadVoucher()\\\">Load</button>\\r\\n      <button class=\\\"btn btn-info\\\" style=\\\"float: right;\\\" (click)=\\\"postInvoice()\\\">Save</button>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"col-md-12 mr\\\">\\r\\n    <div class=\\\"col-md-8 mr\\\">\\r\\n      <div class=\\\"col-md-4 mr\\\">\\r\\n        <div class=\\\"voucher-type-filters mr\\\">\\r\\n\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <select class=\\\"form-control\\\" [(ngModel)]=\\\"_transactionService.voucherPostingObj.voucherPrefix\\\">\\r\\n              <option value=\\\"JV\\\">Journal Voucher</option>\\r\\n              <option value=\\\"CE\\\">Contra</option>\\r\\n              <option value=\\\"PV\\\">Expense Voucher</option>\\r\\n              <option value=\\\"RV\\\">Income Voucher</option>\\r\\n              <option value=\\\"DN\\\">Debit Note</option>\\r\\n              <option value=\\\"CN\\\">Credit Note</option>\\r\\n            </select>\\r\\n          </div>\\r\\n\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-6\\\">\\r\\n\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-4\\\"></div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n<invoice-list #invoiceList [listSetting]=\\\"listSetting\\\" [source]=\\\"itemList\\\" (pageChange)=\\\"pageValueChanged($event)\\\">\\r\\n</invoice-list>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/AccountVoucher/components/voucher-posting/voucher-posting.component.html\n// module id = 1334\n// module chunks = 1 2 3","module.exports = \".table td, .table th{\\r\\n    padding: 0px !important;\\r\\n  }\\r\\n\\r\\ntbody {\\r\\n    /* display:block; */\\r\\n    height:53vh;\\r\\n    overflow:scroll;\\r\\n}\\r\\n\\r\\nthead, tbody tr {\\r\\n  display:table;\\r\\n  width:100%;\\r\\n  table-layout:fixed;/* even columns width , fix width of table too*/\\r\\n}\\r\\n\\r\\nth{\\r\\n  font-size: 15px;\\r\\n  font-weight: bold;\\r\\n  font-family: Roboto,Arial,sans-serif;\\r\\n}\\r\\n\\r\\ntd{\\r\\n  font-size: 13px;\\r\\n  font-family: Roboto,Arial,sans-serif;\\r\\n\\r\\n}\\r\\n\\r\\n.table tbody tr td{\\r\\n  line-height: 24px;\\r\\n}\\r\\n\\r\\ninput,select{\\r\\n    height: 28px;\\r\\n}\\r\\n\\r\\n.form-control{\\r\\n    font-size: 13px !important;\\r\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/AccountVoucher/components/voucher-renumbering/voucher-renumbering.component.css\n// module id = 1335\n// module chunks = 1 2 3","module.exports = \"<div class=\\\"sticky-top\\\">\\r\\n    <div class=\\\"clearfix\\\">\\r\\n      <div class=\\\"col-md-4\\\">\\r\\n        <!-- <h2 style=\\\"color: black;\\\">Bank Reconciliation </h2> -->\\r\\n        <label style=\\\"font-family: Segoe UI Light;font-weight: bold;font-size: 20px;padding-left: 5%;padding-top: 1%;width: 100%;\\\">VOUCHER RENUMBERING</label>\\r\\n      </div>\\r\\n      <!-- <div class=\\\"col-md-7\\\">\\r\\n        <button style=\\\"margin: 4px 4px;\\\" class=\\\"btn btn-info pull-right\\\" (click)='SaveRenum()'>\\r\\n          Update\\r\\n        </button>\\r\\n  \\r\\n      </div> -->\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"main-container\\\">\\r\\n      <div class=\\\"row\\\" style=\\\"margin: 0px 15px ; border: 1px solid #e6e6e6; padding: 10px 10px;\\\">\\r\\n        <div class=\\\"col-md-8\\\">\\r\\n          <form [formGroup]=\\\"form\\\" (ngSubmit)=\\\"onSearch()\\\">\\r\\n          <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-md-4\\\">\\r\\n              <div class=\\\" form-group row\\\">\\r\\n  \\r\\n                  <label class=\\\"form-control-label col-md-2\\\" style=\\\"width: 100px;\\\">Fiscal Year:</label>\\r\\n  \\r\\n                  <div class=\\\"col-md-6\\\">\\r\\n                  <!-- <input type=\\\"date\\\" class=\\\"form-control\\\" formControlName=\\\"FROMDATE\\\"> -->\\r\\n                  <select formControlName=\\\"PHISCALID\\\" class=\\\"form-control\\\">\\r\\n                    <option value=\\\"77/78\\\">2077/78</option>\\r\\n                    <option value=\\\"77/78\\\">2078/79</option>\\r\\n                    <option value=\\\"77/78\\\">2079/80</option>\\r\\n                    <option value=\\\"{{PhiscalObj.PhiscalID}}\\\">{{PhiscalObj.PhiscalName}}</option>\\r\\n                  </select>\\r\\n                  </div>\\r\\n              </div>\\r\\n          </div>\\r\\n          <div class=\\\"col-md-8\\\">\\r\\n              <div class=\\\"form-group row\\\">\\r\\n                  \\r\\n              <label class=\\\"form-control-label col-md-3\\\" style=\\\"width: 120px;\\\">Voucher: </label>\\r\\n              <div class=\\\"col-md-5\\\">\\r\\n                <select class=\\\"form-control\\\" formControlName=\\\"VOUCHERPREFIX\\\">\\r\\n                  <option value=\\\"\\\" disabled selected hidden>Select Voucher</option>\\r\\n                  <option value=\\\"JV\\\">Journal Voucher</option>\\r\\n                  <option value=\\\"CV\\\">Contra Voucher</option>\\r\\n                  <option value=\\\"PV\\\">Payment Voucher</option>\\r\\n                  <option value=\\\"RV\\\">Receipt Voucher</option>\\r\\n  \\r\\n              </select>\\r\\n              </div>\\r\\n              <div class=\\\"col-md-2\\\">\\r\\n                <button type=\\\"submit\\\" class=\\\"btn btn-info\\\">Search</button>\\r\\n             </div>\\r\\n              </div>\\r\\n  \\r\\n          </div>\\r\\n  \\r\\n        </div>\\r\\n  \\r\\n        <!-- <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-4\\\">\\r\\n                <div class=\\\"form-group row\\\">\\r\\n                    <label class=\\\"form-control-label col-md-2\\\" style=\\\"width:20%\\\">Form: </label>\\r\\n                \\r\\n                      <div class=\\\"col-md-4\\\">\\r\\n                          <select class=\\\"form-control\\\" formControlName=\\\"FORM\\\" style=\\\"width:222%\\\">\\r\\n                              <option value=\\\"JV%\\\">Journal Voucher</option>\\r\\n                              <option value=\\\"CV%\\\">Contra Voucher</option>\\r\\n                              <option value=\\\"PV%\\\">Payment Voucher</option>\\r\\n                              <option value=\\\"RV%\\\">Receipt Voucher</option>\\r\\n                              <option value=\\\"CP%\\\">Capital Purchase Voucher</option>\\r\\n                              <option value=\\\"AD%\\\">Additional Cost</option>\\r\\n  \\r\\n                          </select>\\r\\n                          <select (change)=\\\"FormName($event)\\\">\\r\\n                            <option></option>\\r\\n                            <option *ngFor=\\\"let a of accoutMenus\\\" values=\\\"a\\\">{{a.path}}</option>\\r\\n                          </select>\\r\\n                      </div>\\r\\n                </div>\\r\\n  \\r\\n            </div>\\r\\n            <div class=\\\"col-md-4\\\">\\r\\n                <button type=\\\"submit\\\" class=\\\"btn btn-info\\\">Search</button>\\r\\n            </div>\\r\\n  \\r\\n        </div> -->\\r\\n          </form>\\r\\n          \\r\\n        </div>\\r\\n        <div class=\\\"col-md-2\\\">\\r\\n          <button (click)='SaveRenum()' class=\\\"btn btn-info pull-right\\\">Confirm Renumber All</button>\\r\\n       </div>\\r\\n       <div class=\\\"col-md-1\\\" style=\\\"margin: 0px 30px;\\\">\\r\\n        <button (click)=\\\"exportTOExcel(voucherLists, 'VoucherList')\\\" class=\\\"btn btn-info pull-right\\\">Export Renumering</button>\\r\\n     </div>\\r\\n     <div class=\\\"col-md-6\\\" *ngIf=\\\"userSetting.ENABLEVOUCHERSERIES == 1\\\">\\r\\n      <div class=\\\" form-group row\\\">\\r\\n\\r\\n          <label class=\\\"form-control-label col-md-2\\\" style=\\\"width: 124px;\\\">Voucher Series:</label>\\r\\n\\r\\n          <div class=\\\"col-md-5\\\" style=\\\"padding-left: 0px;\\\">\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" style=\\\"height: 25px;\\\" [(ngModel)]=\\\"voucherType\\\" placeholder=\\\"Press Enter to Select Voucher Series\\\" (keydown.Tab)=\\\"showVoucherSeriesList()\\\" (keydown.enter)=\\\"showVoucherSeriesList()\\\">\\r\\n          </div>\\r\\n      </div>\\r\\n      </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"clearfix\\\" style=\\\"margin-top: 5px;\\\">\\r\\n        <div class=\\\"card-header\\\" style=\\\"    background: #4472C4;\\r\\n        color: #ffff;\\\">\\r\\n\\r\\n        <span class=\\\"col-md-6\\\">Voucher Lists</span>\\r\\n        <div style=\\\"margin-left: 62rem; margin-top: -6px;\\\">\\r\\n          <input type=\\\"text\\\" name=\\\"search\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"filter\\\" #searchFilter=\\\"ngModel\\\"\\r\\n            placeholder=\\\"Search By Old Voucher NO.\\\" style=\\\"width: 15rem; height: 1.7rem; padding: 0px 6px;\\\">\\r\\n        </div>\\r\\n\\r\\n\\r\\n      </div>\\r\\n\\r\\n        <div class=\\\"row\\\" style=\\\"margin-left: 15px;\\\">\\r\\n            <table class=\\\"table table-striped\\\" style=\\\"width: 98%;\\\">\\r\\n            <thead>\\r\\n                <tr style=\\\"position: sticky; top:0;line-height: 2.4rem; border-bottom: 1px solid #E6E6E6; border-top: 1px solid #E6E6E6;\\r\\n                background:#C0C0C0;\\r\\n                color: black;\\\">\\r\\n                    <th scope=\\\"col\\\" style=\\\"width: 5%;\\\">S.N</th>\\r\\n                    <th scope=\\\"col\\\" style=\\\"width: 10%;\\\">OLD VOUCHER NO</th>\\r\\n                    <th scope=\\\"col\\\" style=\\\"width: 10%;\\\">NEW VOUCHER NO</th>\\r\\n                    <!-- <th scope=\\\"col\\\" style=\\\"width: 10%;\\\">TRNDATE</th> -->\\r\\n                    <!-- <th scope=\\\"col\\\" style=\\\"width: 10%;\\\">TRN_BSDATE</th> -->\\r\\n                    <th scope=\\\"col\\\" style=\\\"width: 10%;\\\">ENTRY DATE(A.D.)</th>\\r\\n                    <th scope=\\\"col\\\" style=\\\"width: 10%;\\\">ENTRY DATE(B.S.)</th>\\r\\n                    <!-- <th scope=\\\"col\\\" style=\\\"width: 10%;\\\">TRNAC</th> -->\\r\\n                    <th scope=\\\"col\\\" style=\\\"width: 10%;\\\">NETAMNT</th>\\r\\n                    <th scope=\\\"col\\\" style=\\\"width: 10%;\\\">TRNMODE</th>\\r\\n                    <th scope=\\\"col\\\" style=\\\"width: 10%;\\\">FISCALYEAR</th>\\r\\n                </tr>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n                <ng-container *ngIf=\\\"voucherLists && voucherLists.length > 0\\\">\\r\\n                <tr *ngFor=\\\"let voucher of (voucherLists|searchData:filter:'' | paginate: { itemsPerPage: itemsPerPage, currentPage: currentPage, totalItems: totalCount }); let i = index\\\">\\r\\n                    <td style=\\\"width: 5%;\\\">{{i+1}}</td>\\r\\n                    <!-- <td style=\\\"width: 10%;\\\">{{voucher.VCHRNO}}</td> -->\\r\\n                    <td style=\\\"width: 10%;\\\">{{voucher.old_vchrno}}</td>\\r\\n                    <td style=\\\"width: 10%;\\\">{{voucher.new_vchrno}}</td>\\r\\n                    <!-- <td style=\\\"width: 10%;\\\">{{voucher.TRNDATE}}</td> -->\\r\\n                    <td style=\\\"width: 10%;\\\">{{voucher.TRNDATE}}</td>\\r\\n                    <td style=\\\"width: 10%;\\\">{{voucher.BSDATE}}</td>\\r\\n                    <!-- <td style=\\\"width: 10%;\\\">{{voucher.TRNAC}}</td> -->\\r\\n                    <td style=\\\"width: 10%;\\\">{{voucher.NETAMNT}}</td>\\r\\n                    <td style=\\\"width: 10%;\\\">{{voucher.TRNMODE}}</td>\\r\\n                    <td style=\\\"width: 10%;\\\">{{voucher.PhiscalID}}</td>\\r\\n                </tr>\\r\\n                </ng-container>\\r\\n                <ng-container *ngIf=\\\"voucherLists && voucherLists.length === 0\\\">\\r\\n                    <tr>\\r\\n                      <td colspan=\\\"7\\\">\\r\\n                        <div class=\\\"font-weight-bold\\\">Voucher List Information are unavailable.</div>\\r\\n                      </td>\\r\\n                    </tr>\\r\\n                  </ng-container> \\r\\n            </tbody>\\r\\n            </table>\\r\\n        </div>\\r\\n        <div class=\\\"pagination\\\" style=\\\"margin-top: 0rem;\\\" *ngIf=\\\"voucherLists && (voucherLists | searchData: filter:'').length > itemsPerPage\\\">\\r\\n          <div style=\\\"margin:auto\\\">\\r\\n              <pagination-controls class=\\\"my-pagination\\\" (pageChange)=\\\"VoucherPagination($event)\\\"></pagination-controls>\\r\\n          </div>\\r\\n      </div>\\r\\n\\r\\n      </div>\\r\\n\\r\\n  </div>\\r\\n  <div class=\\\"reportpopup\\\" style=\\\"width: 90%;\\\">\\r\\n    <generic-popup-grid #genericGridVoucherSeriesList [popupsettings]=\\\"gridVoucherSeriesListPopupSettings\\\" (onItemDoubleClick)=\\\"onSelectVoucherSeries($event)\\\"></generic-popup-grid>\\r\\n  </div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/AccountVoucher/components/voucher-renumbering/voucher-renumbering.component.html\n// module id = 1336\n// module chunks = 1 2 3","module.exports = \"<!-- <div class=\\\"col-md-12\\\">\\r\\n<div class=\\\"col-md-12\\\">\\r\\n    <label style=\\\"width: 17% !important\\\">Import Document No :</label>\\r\\n    <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"masterService.importDocumentDetailsObj.PPNO\\\">\\r\\n</div>\\r\\n<div class=\\\"col-md-12\\\">\\r\\n    <label style=\\\"width: 17% !important\\\">L/C No. :</label>\\r\\n    <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"masterService.importDocumentDetailsObj.LCNO\\\">\\r\\n</div>\\r\\n<div class=\\\"col-md-12\\\">\\r\\n    <label style=\\\"width: 17% !important;font-weight: bold;\\r\\n    border-bottom: 1px solid #e2e2e2;\\\">Import Declared Value </label>\\r\\n    </div>\\r\\n<div class=\\\"col-md-12\\\">\\r\\n    <label style=\\\"width: 17% !important\\\" >Tax Value :</label>\\r\\n    <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"masterService.importDocumentDetailsObj.TAXABLEVALUE\\\">\\r\\n</div>\\r\\n<div class=\\\"col-md-12\\\">\\r\\n    <label style=\\\"width: 17% !important\\\">Non Taxable value:</label>\\r\\n    <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"masterService.importDocumentDetailsObj.NTAXABLEVALUE\\\">\\r\\n</div>\\r\\n<div class=\\\"col-md-12\\\">\\r\\n    <label style=\\\"width: 17% !important\\\">VAT Amount :</label>\\r\\n    <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"masterService.importDocumentDetailsObj.VATVALUE\\\">\\r\\n</div>\\r\\n<div class=\\\"col-md-12\\\">\\r\\n    <label style=\\\"width: 17% !important\\\">Net Value :</label>\\r\\n    <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"masterService.importDocumentDetailsObj.NETVALUE\\\">\\r\\n</div>\\r\\n\\r\\n\\r\\n</div> -->\\r\\n<style>\\r\\n    label {\\r\\n        width: 150px;\\r\\n        text-align: right;\\r\\n    }\\r\\n\\r\\n    input {\\r\\n        height: 26px;\\r\\n        font-size: 13px;\\r\\n    }\\r\\n</style>\\r\\n\\r\\n\\r\\n<div class=\\\"row\\\">\\r\\n    <div class=\\\"form-group row\\\">\\r\\n        <div class=\\\"col-md-2\\\">\\r\\n            <label class=\\\"form-control-label\\\">Import Document No:</label>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-4\\\">\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" [disabled]=\\\"_transactionService.TrnMainObj.Mode=='VIEW'\\\"\\r\\n                [(ngModel)]=\\\"_addionalcostService.IMPORTDETAILS.DOCUMENTNO\\\" (change)=\\\"ChangeDocumentNo()\\\">\\r\\n        </div>\\r\\n        <div class=\\\"col-md-2\\\">\\r\\n            <label class=\\\"form-control-label\\\">L/C No.:</label>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-4\\\">\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" [disabled]=\\\"_transactionService.TrnMainObj.Mode=='VIEW'\\\"\\r\\n            [(ngModel)]=\\\"_addionalcostService.IMPORTDETAILS.LCNUM\\\" (change)=\\\"ChangeLCNo()\\\">\\r\\n\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n\\r\\n    \\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-12 pd0\\\" style=\\\"height: 40vh; margin-bottom: 1rem; overflow-y: scroll;overflow-x: hidden;    margin-left: 2%;\\r\\n        margin-top: -1%;\\r\\n        width: 98.5%;\\\">\\r\\n            <table class=\\\"table\\\">\\r\\n                <thead>\\r\\n                    <tr style=\\\"border-bottom: 2px solid #e6e6e6; height: 25px; background: #9ccae4 ;\\\">\\r\\n                        <th scope=\\\"col\\\" style=\\\"width: 1%;\\\">Sn.</th>\\r\\n                        <th scope=\\\"col\\\" style=\\\"width: 10%;\\\">Item Name</th>\\r\\n                        <th scope=\\\"col\\\" style=\\\"width: 5%;\\\">Qty</th>\\r\\n                        <th scope=\\\"col\\\" style=\\\"width: 5%;\\\">Taxable</th>\\r\\n                        <th scope=\\\"col\\\" style=\\\"width: 5%;\\\">Non-Taxable</th>\\r\\n                        <th scope=\\\"col\\\" style=\\\"width: 5%;\\\">VAT</th>\\r\\n                        <th scope=\\\"col\\\" style=\\\"width: 5%;\\\">Net amount</th>\\r\\n\\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tbody style=\\\"background-color: aliceblue;\\\">\\r\\n                    <tr *ngFor = \\\"let item of _addionalcostService.IMPORTDETAILS.prodList; let i=index\\\" style=\\\"height: 28px;\\\" (click)=\\\"ClickTableRow(i)\\\">\\r\\n                        <td style=\\\"width: 1%;\\\">{{i+1}}</td>\\r\\n                        <td style=\\\"width: 10%;\\\">\\r\\n                            <input id=\\\"importItemname{{i}}\\\" type=\\\"text\\\" list=\\\"product\\\" [(ngModel)]=\\\"item.ITEMNAME\\\"\\r\\n                                (keydown.Enter)=\\\"masterservice.focusAnyControl('importQty'+i)\\\" (focus)=\\\"rowClick(i)\\\"\\r\\n                               autocomplete=\\\"off\\\" [disabled]=\\\"_transactionService.TrnMainObj.Mode=='VIEW'\\\">\\r\\n                            <datalist id=\\\"product\\\">\\r\\n                                <option *ngFor=\\\"let i of _additionalCostService.addtionalCostList\\\" [value]=\\\"i.desca\\\">\\r\\n                            </datalist>\\r\\n                        </td>\\r\\n                        <td style=\\\"width: 5%;\\\" id=\\\"importQty{{i}}\\\"  ><input (keydown.Enter)=\\\"masterService.focusAnyControl('importQty'+i)\\\" \\r\\n                             [(ngModel)]=\\\"item.QUANTITY\\\" (change)=\\\"onChange()\\\" type=\\\"number\\\" [disabled]=\\\"_transactionService.TrnMainObj.Mode=='VIEW'\\\"></td>\\r\\n                        <td style=\\\"width: 5%;\\\" id=\\\"importTaxable{{i}}\\\" ><input (keydown.Enter)=\\\"masterService.focusAnyControl('importTaxable'+i)\\\"  \\r\\n                            type=\\\"number\\\" (change)=\\\"onChangeTaxable()\\\" [(ngModel)]=\\\"item.TAXABLE\\\" [disabled]=\\\"_transactionService.TrnMainObj.Mode=='VIEW'\\\"></td>\\r\\n                        <td style=\\\"width: 5%;\\\" id=\\\"importNonTaxable{{i}}\\\" ><input (keydown.Enter)=\\\"masterService.focusAnyControl('importNonTaxable'+i)\\\"  \\r\\n                            type=\\\"number\\\" (change)=\\\"onChangeNonTaxable()\\\" [(ngModel)]=\\\"item.NONTAXABLE\\\" [disabled]=\\\"_transactionService.TrnMainObj.Mode=='VIEW'\\\"></td>\\r\\n                        <td style=\\\"width: 5%;\\\" id=\\\"importVAT{{i}}\\\" ><input (keydown.Enter)=\\\"masterService.focusAnyControl('importVAT'+i)\\\"  type=\\\"number\\\" \\r\\n                            (change)=\\\"onChangeVAT()\\\" [(ngModel)]=\\\"item.VAT\\\" [disabled]=\\\"_transactionService.TrnMainObj.Mode=='VIEW'\\\"></td>\\r\\n                        <td style=\\\"width: 5%;\\\" id=\\\"importNetmant{{i}}\\\"><input type=\\\"number\\\" (keydown.Enter)=\\\"nextRow()\\\" \\r\\n                             (keydown.Tab)=\\\"nextRow()\\\"(change)=\\\"nextRow()\\\" [(ngModel)]=\\\"item.NETAMOUNT\\\" [disabled]=\\\"_transactionService.TrnMainObj.Mode=='VIEW'\\\"></td>\\r\\n\\r\\n                    </tr>\\r\\n                </tbody>\\r\\n\\r\\n            </table>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\" style=\\\"margin-left: 2%;\\r\\n    width: 98.5%;\\\">\\r\\n        <table class=\\\"table\\\">\\r\\n          <tr style=\\\"line-height: 1.2rem;\\\">\\r\\n            <th style=\\\"background: rgb(172 172 172); border: 2px white solid;\\\" width=\\\"11%\\\" style=\\\"width: 6.5%;\\\">TOTAL</th>\\r\\n    <th style=\\\"background: rgb(172 172 172); border: 2px white solid;\\\" width=\\\"5%\\\">\\r\\n      {{ _addionalcostService.IMPORTDETAILS.TOTALQTY}} </th>\\r\\n      <th style=\\\"background: rgb(172 172 172); border: 2px white solid;\\\" width=\\\"5%\\\">\\r\\n        {{ _addionalcostService.IMPORTDETAILS.TOTALTAXABLE}} </th>\\r\\n    <th style=\\\"background: rgb(172 172 172); border: 2px white solid;\\\" width=\\\"5%\\\">\\r\\n      {{ _addionalcostService.IMPORTDETAILS.TOTALNONTAXABLE}}</th>\\r\\n    <th style=\\\"background: rgb(172 172 172); border: 2px white solid;\\\" width=\\\"5%\\\">\\r\\n      {{ _addionalcostService.IMPORTDETAILS.TOTALVAT}}</th>\\r\\n    <th style=\\\"background: rgb(172 172 172); border: 2px white solid;\\\" width=\\\"5%\\\">\\r\\n      {{ _addionalcostService.IMPORTDETAILS.NETAMOUNT}}</th>\\r\\n          </tr>\\r\\n        </table>\\r\\n        <!-- <div class=\\\"col-md-2\\\">\\r\\n          <h6>TOTAL QTY: {{_trnMainService.TrnMainObj.IMPORTDETAILS.TOTALQTY}} </h6>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-2\\\">\\r\\n          <h6>TAXABLE: {{_trnMainService.TrnMainObj.IMPORTDETAILS.TOTALTAXABLE}} </h6>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-3\\\">\\r\\n          <h6>NON-TAXABLE: {{_trnMainService.TrnMainObj.IMPORTDETAILS.TOTALNONTAXABLE}} </h6>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-2\\\">\\r\\n          <h6>VAT: {{_trnMainService.TrnMainObj.IMPORTDETAILS.TOTALVAT}} </h6>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-2\\\">\\r\\n          <h6>NET AMNT: {{_trnMainService.TrnMainObj.IMPORTDETAILS.NETAMOUNT}} </h6>\\r\\n        </div> -->\\r\\n      </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/Purchases/components/AdditionalCost/ImportDocumentDetail.component.html\n// module id = 1337\n// module chunks = 1 2 3","module.exports = \"<style>\\r\\n    th {\\r\\n        padding: 0px 5px;\\r\\n        font-family: Roboto, Arial, sans-serif;\\r\\n        font-size: 13px;\\r\\n    }\\r\\n\\r\\n    td {\\r\\n        font-size: 12px;\\r\\n    }\\r\\n\\r\\n    tbody {\\r\\n        display: block;\\r\\n        height: 33vh;\\r\\n        overflow: auto;\\r\\n    }\\r\\n\\r\\n    thead,\\r\\n    tbody tr {\\r\\n        display: table;\\r\\n        width: 100%;\\r\\n        table-layout: fixed;\\r\\n        /* even columns width , fix width of table too*/\\r\\n    }\\r\\n    .costingMethodWrapper {\\r\\nborder:1px solid #ddd;\\r\\nmargin-top:-83px;\\r\\n    padding: 0px 10px 5px 10px;\\r\\n}\\r\\n.costingMethodWrapper label{\\r\\n\\r\\n width: 100px;\\r\\n    background: #F1F1F1;\\r\\n    margin-top: -11px;\\r\\n    padding-left: 6px;\\r\\n}\\r\\n.costingMethodWrapper a{\\r\\nfont-size:12px;\\r\\n}\\r\\n</style>\\r\\n\\r\\n<form disabled [formGroup]=\\\"form\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n\\r\\n        <div class=\\\"col-md-12 plainBackGround\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-md-1\\\"><label>Cost Type: </label></div>\\r\\n                <div class=\\\"col-md-4\\\">\\r\\n                    <a style=\\\"margin-left: 2.5rem;\\\"><input type=\\\"radio\\\" name=\\\"grouping\\\" value=\\\"GroupCost\\\"\\r\\n                            (change)=\\\"IndividualPI(false)\\\" [disabled]=\\\"_transactionService.TrnMainObj.Mode=='VIEW'\\\"\\r\\n                            [(ngModel)]=\\\"masterService.costType\\\" [ngModelOptions]=\\\"{standalone:true}\\\" checked> Group\\r\\n                        Cost</a>\\r\\n                    <a style=\\\"margin-left: 1rem;\\\"><input type=\\\"radio\\\" name=\\\"grouping\\\" value=\\\"IndividualCost\\\"\\r\\n                            (change)=\\\"IndividualPI(true)\\\" [disabled]=\\\"_transactionService.TrnMainObj.Mode=='VIEW'\\\"\\r\\n                            [(ngModel)]=\\\"masterService.costType\\\" [ngModelOptions]=\\\"{standalone:true}\\\"> Individual Item\\r\\n                        Cost </a>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-3\\\">\\r\\n                    <label style=\\\"float: left;\\\">Item :</label>\\r\\n                    <!-- <select class=\\\"form-control col-md-4\\\" name=\\\"menucode\\\" id=\\\"_item\\\" [(ngModel)] = \\\"ItemObj\\\" [ngModelOptions]=\\\"{standalone: true}\\\"\\r\\n                        (change)=\\\"passValue()\\\" [disabled]=\\\"PI == false\\\"\\r\\n                        style=\\\"padding: 0px !important;width: 68%;margin-top:0px; margin-left: -18px;\\\">\\r\\n                        <option style=\\\"color: black;\\\" *ngFor=\\\"let d of _addionalcostService.addtionalCostList\\\"\\r\\n                            [ngValue]=\\\"d\\\">\\r\\n                            {{d.desca}}</option>\\r\\n                    </select> -->\\r\\n                    <input id=\\\"_item\\\" type=\\\"text\\\" [(ngModel)]=\\\"masterService.desca\\\" [ngModelOptions]=\\\"{standalone:true}\\\"\\r\\n                        style=\\\"height:23px;width: 70%;margin-left: -18px; margin-bottom: 8px;\\\" (keydown.Enter)=\\\"ItemSelect()\\\"\\r\\n                        autocomplete=\\\"off\\\" placeholder=\\\"press Enter to select Item\\\" [disabled]=\\\"PI == false || _transactionService.TrnMainObj.Mode=='VIEW'\\\">\\r\\n                </div>\\r\\n                <div class=\\\"col-md-3\\\">\\r\\n                    <label style=\\\"float: left;margin-left:-8%;\\\">Batch :</label>\\r\\n                    <!-- <select class=\\\"form-control col-md-4\\\" name=\\\"batch\\\" formControlName=\\\"BATCH\\\"\\r\\n                        (change)=\\\"passValue()\\\"\\r\\n                        style=\\\"padding: 0px !important;width: 68%;margin-top:0px; margin-left: 0%;\\\">\\r\\n                        <option style=\\\"color: black;\\\" *ngFor=\\\"let d of BatchList\\\"\\r\\n                            [ngValue]=\\\"d.batch\\\">\\r\\n                            {{d.batch}}</option>\\r\\n                    </select> -->\\r\\n                    <input id=\\\"_batch\\\" type=\\\"text\\\" [(ngModel)]=\\\"masterService.batch\\\" [ngModelOptions]=\\\"{standalone:true}\\\"\\r\\n                        style=\\\"height:23px;width: 60%;margin-left: -20px; margin-bottom: 8px;\\\" (keydown.Enter)=\\\"BatchSelect()\\\"\\r\\n                        autocomplete=\\\"off\\\" placeholder=\\\"press Enter to select Batch\\\" [disabled]=\\\"PI == false || _transactionService.TrnMainObj.Mode=='VIEW'\\\">\\r\\n                </div>\\r\\n                <!-- <div class=\\\"col-md-1\\\">\\r\\n                    <input id=\\\"_batchid\\\" type=\\\"text\\\" [(ngModel)]=\\\"masterService.batchid\\\"  [ngModelOptions]=\\\"{standalone:true}\\\"> \\r\\n                </div> -->\\r\\n                <!-- <div> <a><input type=\\\"radio\\\" value=\\\"IndividualCost\\\" name=\\\"grouping\\\" (change)=\\\"IndividualPI(true)\\\" [(ngModel)]=\\\"masterService.costType\\\" [ngModelOptions]=\\\"{standalone: true}\\\"> Individual -->\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"row\\\">\\r\\n\\r\\n                <div class=\\\"col-md-5\\\">\\r\\n                    <label style=\\\"width: initial;\\\">Additional Cost A/C :</label>\\r\\n                    <!-- <select class=\\\"form-control col-md-2\\\" name=\\\"ACNAME\\\" formControlName=\\\"AdditionalPurchaseAc\\\" style=\\\"height:23px;padding:0px !important;width: 70%;float: right;\\\">\\r\\n        <option *ngFor=\\\"let d of allList\\\" [ngValue]=\\\"d\\\">{{d.ACNAME}}</option>\\r\\n       </select> -->\\r\\n                    <input id=\\\"AdditionalCostAc_\\\" type=\\\"text\\\" [(ngModel)]=\\\"masterService.AdditionalPurchaseAcObj\\\"\\r\\n                        [ngModelOptions]=\\\"{standalone: true}\\\"\\r\\n                        style=\\\"height:23px;width: 70%;margin-left: 20px; margin-bottom: 8px;\\\"\\r\\n                        (keydown.Enter)=\\\"TabAcBox('AC')\\\" autocomplete=\\\"off\\\" placeholder=\\\"press Enter to select\\\"\\r\\n                        [disabled]=\\\"_transactionService.TrnMainObj.Mode=='VIEW'\\\">\\r\\n                </div>\\r\\n                <div class=\\\"col-md-5\\\">\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-md-4\\\">\\r\\n                            <label style=\\\"float: left;\\\">Amounts :</label>\\r\\n                             \\r\\n                            <input *ngIf=\\\"_transactionService.TrnMainObj.Mode!='VIEW'\\\" id=\\\"AmountsAD_\\\"\\r\\n                                class=\\\"form-control col-md-2\\\" type=\\\"number\\\" \\r\\n                                [(ngModel)]=\\\"masterService.AdditionalAMOUNT\\\" [ngModelOptions]=\\\"{standalone: true}\\\"\\r\\n                                 style=\\\"width: 50%; margin-left: -18px;\\\">\\r\\n                            <input *ngIf=\\\"_transactionService.TrnMainObj.Mode=='VIEW'\\\" id=\\\"AmountsAD_\\\"\\r\\n                                class=\\\"form-control col-md-2\\\" type=\\\"number\\\" \\r\\n                                [(ngModel)]=\\\"masterService.AdditionalAMOUNT\\\" [ngModelOptions]=\\\"{standalone: true}\\\"\\r\\n                                style=\\\"width: 50%; margin-left: -18px;\\\"\\r\\n                                disabled=\\\"_transactionService.TrnMainObj.Mode=='VIEW'\\\">\\r\\n                                <!-- <div class=\\\"invalid-feedback d-block\\\"\\r\\n                                *ngIf=\\\"form.controls['AMOUNT'].invalid && (form.controls['AMOUNT'].dirty || form.controls['AMOUNT'].touched)\\\">\\r\\n                                <span *ngIf=\\\"form.controls['AMOUNT'].errors.required\\\" style=\\\"color:red; font-size:12px;float: left;\\r\\n    margin-left: -15px;\\\"> required.</span>\\r\\n                            </div> -->\\r\\n                             \\r\\n\\r\\n                        </div>\\r\\n                          \\r\\n                       \\r\\n                      \\r\\n<!-- \\r\\n                        <div class=\\\"col-md-7\\\">\\r\\n                            <label style=\\\"float: left;\\\">Item :</label>\\r\\n                            <select class=\\\"form-control col-md-6\\\" name=\\\"menucode\\\" [(ngModel)] = \\\"ItemObj\\\" [ngModelOptions]=\\\"{standalone: true}\\\"\\r\\n                                (change)=\\\"passValue()\\\" [disabled]=\\\"PI == false\\\"\\r\\n                                style=\\\"padding: 0px !important;width: 75%;margin-top:-33px; margin-left: 39px;\\\">\\r\\n                                <option style=\\\"color: black;\\\" *ngFor=\\\"let d of _addionalcostService.addtionalCostList\\\"\\r\\n                                    [ngValue]=\\\"d\\\">\\r\\n                                    {{d.desca}}</option>\\r\\n                            </select>\\r\\n                        </div> -->\\r\\n\\r\\n                    </div>\\r\\n                </div>\\r\\n                <!-- <div class=\\\"col-md-3\\\" style=\\\"    margin-left: -3%;\\\"> -->\\r\\n                <!-- <label>Costing Type</label>\\r\\n                     <select class=\\\"form-control col-md-2\\\" name=\\\"ACNAME\\\" style=\\\"height:23px;padding:0px !important;width: 37%; float: right;\\\"\\r\\n                      (change)=\\\"byQuantity($event.target.value)\\\">\\r\\n                        <option value=\\\"Amount\\\">Amount</option>\\r\\n                        <option value=\\\"Qty\\\">Qty</option>\\r\\n                    </select> -->\\r\\n                <!-- <div class=\\\"row\\\">\\r\\n                    <label style=\\\"float: left;\\\">Item :</label> -->\\r\\n\\r\\n                <!-- <input type=\\\"text\\\" placeholder=\\\"Press Enter or Tab\\\"\\r\\n                    formControlName=\\\"MCODE\\\" style=\\\"height:23px;padding:0px !important;    width: 75%;\\r\\n                        /* float: right; */\\r\\n                        margin-left: 6%;\\\" (keydown.Enter)=\\\"TabAcBox('AC')\\\" (keydown.Tab)=\\\"TabAcBox('AC')\\\" [disabled]=\\\"PI == false\\\"> -->\\r\\n                <!-- <select class=\\\"form-control col-md-6\\\" name=\\\"menucode\\\" formControlName=\\\"MCODE\\\"\\r\\n                        (change)=\\\"passValue()\\\" style=\\\"padding: 0px !important;width: 75%;float: right;\\\" >\\r\\n                        <option *ngFor=\\\"let d of _addionalcostService.addtionalCostList\\\" [ngValue]=\\\"d.mcode\\\" >\\r\\n                            {{d.desca}}</option>\\r\\n                    </select>\\r\\n                    </div>\\r\\n                    </div> -->\\r\\n                <div class=\\\"col-md-2\\\">\\r\\n                    <!-- <div class=\\\"col-md-7\\\">\\r\\n                        <label style=\\\"float: left;margin-left: -82%;\\\">Batch :</label>\\r\\n                        <select class=\\\"form-control col-md-6\\\" name=\\\"menucode\\\" formControlName=\\\"BATCH\\\"\\r\\n                            (change)=\\\"passValue()\\\"\\r\\n                            style=\\\"padding: 0px !important;width: 135%;margin-top:-33px; margin-left: -30%;\\\">\\r\\n                            <option style=\\\"color: black;\\\" *ngFor=\\\"let d of BatchList\\\"\\r\\n                                [ngValue]=\\\"d.batch\\\">\\r\\n                                {{d.batch}}</option>\\r\\n                        </select>\\r\\n                    </div> -->\\r\\n                    <!-- <label class=\\\"col-md-4\\\">Individuals :</label>\\r\\n\\r\\n                    <input class=\\\"col-md-2\\\" type=\\\"checkbox\\\" style=\\\"margin-left:18px; margin-top:5px; height:15px\\\"\\r\\n                        (change)=\\\"IndividualPI($event.target.checked)\\\">\\r\\n                    <div *ngIf=\\\"PI==true\\\">\\r\\n                        <select class=\\\"form-control col-md-6\\\" name=\\\"menucode\\\" formControlName=\\\"MCODE\\\"\\r\\n                            (change)=\\\"passValue()\\\" style=\\\"height:23px;padding:0px !important;width: 56%;\\\">\\r\\n                            <option *ngFor=\\\"let d of _addionalcostService.addtionalCostList\\\" [ngValue]=\\\"d.mcode\\\">\\r\\n                                {{d.desca}}</option>\\r\\n                        </select>\\r\\n\\r\\n                    </div> -->\\r\\n                  \\r\\n\\r\\n                    <!-- <input class=\\\"col-md-2\\\" type=\\\"checkbox\\\" style=\\\"margin-left:18px; margin-top:5px; height:15px\\\"\\r\\n                        (change)=\\\"IndividualPI($event.target.checked)\\\">\\r\\n                    <div *ngIf=\\\"PI==true\\\">\\r\\n                        <select class=\\\"form-control col-md-6\\\" name=\\\"menucode\\\" formControlName=\\\"MCODE\\\"\\r\\n                            (change)=\\\"passValue()\\\" style=\\\"height:23px;padding:0px !important;width: 56%;\\\">\\r\\n                            <option *ngFor=\\\"let d of _addionalcostService.addtionalCostList\\\" [ngValue]=\\\"d.mcode\\\">\\r\\n                                {{d.desca}}</option>\\r\\n                        </select>\\r\\n\\r\\n                    </div> -->\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"row\\\">\\r\\n\\r\\n\\r\\n                <div class=\\\"col-md-5\\\">\\r\\n                    <label style=\\\"margin-left: 44px;\\\">Credited A/C :</label>\\r\\n                    <!-- <select class=\\\"form-control col-md-2\\\" name=\\\"ACNAME\\\" formControlName=\\\"CREDITEDAC\\\" style=\\\"height:23px; padding:0px !important;width: 70%;float: right;\\\">\\r\\n                <option *ngFor=\\\"let d of allList\\\" [ngValue]=\\\"d\\\">{{d.ACNAME}}</option>\\r\\n               </select> -->\\r\\n                    <input type=\\\"text\\\" placeholder=\\\"Press Enter to select\\\"\\r\\n                        [(ngModel)]=\\\"masterService.AdditionalPurchaseCreditAcObj\\\" [ngModelOptions]=\\\"{standalone: true}\\\"\\r\\n                        style=\\\"height:23px;width: 70%;margin-left: 7px; margin-bottom: 8px;\\\"\\r\\n                        (keydown.Enter)=\\\"TabAcBox('CreditAC')\\\" [disabled]=\\\"_transactionService.TrnMainObj.Mode=='VIEW'\\\">\\r\\n                </div>\\r\\n                <div class=\\\"col-md-5\\\">\\r\\n                    <div class=\\\"col-md-7\\\" style=\\\"margin-left: -15px;\\\">\\r\\n                    <label style=\\\"float: left;\\\">Remarks :</label>\\r\\n                    <input id=\\\"RemarksAD_\\\" type=\\\"text\\\" class=\\\"form-control col-md-9\\\" \\r\\n                    [(ngModel)]=\\\"masterService.AdditionalREMARKS\\\" [ngModelOptions]=\\\"{standalone: true}\\\"\\r\\n                        style=\\\"width: 66%; margin-left: -18px;\\\"\\r\\n                        [disabled]=\\\"_transactionService.TrnMainObj.Mode=='VIEW'\\\" (keydown.Enter)=\\\"remarksEntered()\\\" autocomplete=\\\"off\\\">\\r\\n                    </div>\\r\\n                    <div class=\\\"col-md-5\\\">   <label style=\\\"width: 100%;\\\">Group Cost Mode :</label></div>\\r\\n                     \\r\\n                </div>\\r\\n                <div>\\r\\n                   \\r\\n                    <select class=\\\"form-control col-md-1\\\" name=\\\"ACNAME\\\" style=\\\"height: 23px;\\r\\n                padding: 0px !important;\\r\\n                width: 11%;\\r\\n                margin-left: -110px;\\\" [(ngModel)]=\\\"GcostMode\\\" [ngModelOptions]=\\\"{standalone:true}\\\"\\r\\n                        (change)=\\\"byQuantity($event.target.value)\\\" [disabled]=\\\"PI == true\\\"\\r\\n                        [disabled]=\\\"_transactionService.TrnMainObj.Mode=='VIEW'\\\" (keydown.Enter)=\\\"gcostEntered()\\\">\\r\\n                        <option value=\\\"\\\"></option>\\r\\n                        <option value=\\\"Qty\\\">ON QTY</option>\\r\\n                        <option value=\\\"Amount\\\">ON AMOUNT</option>\\r\\n\\r\\n                    </select>\\r\\n                </div>\\r\\n                  <div class=\\\"col-md-2\\\">\\r\\n                    <div class=\\\"costingMethodWrapper\\\" style=\\\"margin-top: -83px; margin-left:70px;\\\">\\r\\n                         <label style=\\\"width: 100px;\\\"> Costing Mode: </label>\\r\\n                            <div class=\\\"wrapper\\\" style=\\\"display: flex; flex-direction:column;border-bottom: 0;\\\">\\r\\n\\r\\n                                <!-- <a style=\\\"margin-left: 2.5rem;\\\"><input type=\\\"radio\\\" name=\\\"grouping\\\" value=\\\"GroupCost\\\"\\r\\n                                        (change)=\\\"IndividualPI(false)\\\" [disabled]=\\\"_transactionService.TrnMainObj.Mode=='VIEW'\\\"\\r\\n                                        [(ngModel)]=\\\"masterService.costType\\\" [ngModelOptions]=\\\"{standalone:true}\\\" checked> Group\\r\\n                                    Costing</a> -->\\r\\n                                \\r\\n            <!-- \\r\\n                            <a style=\\\"margin-left: 2.5rem;\\\">\\r\\n                                <input type=\\\"radio\\\" checked id=\\\"costing\\\"  name=\\\"addcosting\\\"   value = \\\"true\\\" [(ngModel)]=\\\"masterService.addcosting\\\"   [ngModelOptions]=\\\"{standalone:true}\\\"\\r\\n                                    \\r\\n                                    > <label for=\\\"costing\\\">Costing</label> \\r\\n                                    </a>\\r\\n                                <a style=\\\"margin-left: 1rem;\\\">\\r\\n                                    <input type=\\\"radio\\\" id=\\\"non-costing\\\" name=\\\"addcosting\\\"  value= \\\"false\\\" [(ngModel)]=\\\"masterService.addcosting\\\" [ngModelOptions]=\\\"{standalone:true}\\\"  \\r\\n                                    \\r\\n                                    >  <label for=\\\"non-costing\\\">Non-Costing</label> \\r\\n                                    </a> -->\\r\\n                                    <a ><input type=\\\"radio\\\" name=\\\"addcosting\\\" value=\\\"COSTING\\\"\\r\\n                                        [disabled]=\\\"_transactionService.TrnMainObj.Mode=='VIEW'\\\"\\r\\n                                        [(ngModel)]=\\\"masterService.addcosting\\\" [ngModelOptions]=\\\"{standalone:true}\\\" checked> Costing\\r\\n                                    </a>\\r\\n                                <a ><input type=\\\"radio\\\" name=\\\"addcosting\\\" value=\\\"NONCOSTING\\\"\\r\\n                                    [disabled]=\\\"_transactionService.TrnMainObj.Mode=='VIEW'\\\"\\r\\n                                        [(ngModel)]=\\\"masterService.addcosting\\\" [ngModelOptions]=\\\"{standalone:true}\\\">  Non-Costing\\r\\n                                    </a>\\r\\n\\r\\n\\r\\n                                \\r\\n                            </div>\\r\\n\\r\\n                    </div>\\r\\n                    </div>\\r\\n                   \\r\\n\\r\\n                <div class=\\\"col-md-1\\\">\\r\\n                    <!-- <button class=\\\"btn btn-info btn-add-focus\\\" (click)=\\\"onAddClick()\\\" \\r\\n                        style=\\\" width:100%; height: 1.4rem;\\\"\\r\\n                        *ngIf=\\\"_transactionService.TrnMainObj.Mode!='VIEW'\\\" disabled=\\\"!form.validate\\\">Add</button> -->\\r\\n\\r\\n                               <button class=\\\"btn btn-info btn-add-focus\\\" (click)=\\\"onAddClick()\\\" \\r\\n                        style=\\\" width:100%; height: 1.4rem;margin-left: 70px;\\\"\\r\\n                        *ngIf=\\\"_transactionService.TrnMainObj.Mode!='VIEW'\\\">Add</button>\\r\\n\\r\\n                </div>\\r\\n\\r\\n\\r\\n\\r\\n            </div>\\r\\n\\r\\n        </div>\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"row\\\" style=\\\"width: 105%;\\\">\\r\\n\\r\\n        <div class=\\\"wrapper\\\">\\r\\n            <div style=\\\"margin-left:0px; margin-right:0px;\\\">\\r\\n\\r\\n\\r\\n                <div #prodlistTable style=\\\"background-color: #FFFFFF;\\\">\\r\\n                    <table id=\\\"fix\\\" class=\\\"table\\\">\\r\\n                        <thead>\\r\\n                            <tr style=\\\"border-bottom: 10px solid #c0c0c0;\\r\\n                            border-top: 2px solid #c0c0c0;\\r\\n                            height: 30px;\\r\\n                            background: silver;\\r\\n                            color: black;\\r\\n                            position: sticky;\\\">\\r\\n                                <th style=\\\"width:30px;\\\">S.N\\r\\n\\r\\n                                </th>\\r\\n                                <th style=\\\"width:250px;margin-left:5px;padding-left: 10px;\\\">Additional Cost A/C\\r\\n\\r\\n                                </th>\\r\\n\\r\\n                                <th style=\\\"width:100px\\\">Amount\\r\\n\\r\\n                                </th>\\r\\n                                <th style=\\\"width:250px\\\">Credited A/C\\r\\n\\r\\n                                </th>\\r\\n                                <th style=\\\"width:150px\\\">Remarks\\r\\n\\r\\n                                </th>\\r\\n                                <th style=\\\"width:100px\\\">Cost Type\\r\\n\\r\\n                                </th>\\r\\n                                <th style=\\\"width:100px\\\">G-Cost Mode\\r\\n\\r\\n                                </th>\\r\\n                                <!-- <th *ngIf=\\\"PIADD==true\\\" style=\\\"width:300px\\\">Individual\\r\\n\\r\\n                                </th> -->\\r\\n                                <th style=\\\"width:200px\\\">Item Description\\r\\n\\r\\n                                </th>\\r\\n                                   <th style=\\\"width:150px\\\">Costing/Non-Costing\\r\\n\\r\\n                                </th>\\r\\n                                <th style=\\\"width:250px\\\">Batch\\r\\n\\r\\n                                </th>\\r\\n\\r\\n\\r\\n\\r\\n                            </tr>\\r\\n                        </thead>\\r\\n\\r\\n                        <tbody style=\\\"background-color: #e9e9e9;\\\">\\r\\n                            <tr *ngFor=\\\"let l of _addionalcostService.costList;let i=index\\\"\\r\\n                                (dblclick)=\\\"TableRowDoubleClickEvent(l,i)\\\" (click)=\\\"checkRow(i)\\\">\\r\\n                                <td class=\\\"tableBorder\\\" style=\\\"width:30px\\\">{{i+1}}</td>\\r\\n                                <td class=\\\"tableBorder\\\" style=\\\"width:250px\\\">{{l.costAc.ACNAME}}</td>\\r\\n                                <td class=\\\"tableBorder\\\" style=\\\"width:100px; text-align: right;\\\">{{l.amount}}</td>\\r\\n                                <td class=\\\"tableBorder\\\" style=\\\"width:250px\\\">{{l.creditAc.ACNAME}}</td>\\r\\n                                <td class=\\\"tableBorder\\\" style=\\\"width:150px\\\">{{l.remarks}}</td>\\r\\n                                <td class=\\\"tableBorder\\\" style=\\\"width:100px\\\">{{l.CostingType}}</td>\\r\\n                                <td class=\\\"tableBorder\\\" style=\\\"width:100px\\\">{{l.GCOSTMODE}}</td>\\r\\n                                <!-- <td class=\\\"tableBorder\\\" style=\\\"width:250px\\\">{{l.mcode}}</td> -->\\r\\n                                <td class=\\\"tableBorder\\\" style=\\\"width:200px\\\">{{l.desca}}</td>\\r\\n                                 <td class=\\\"tableBorder\\\" style=\\\"width:150px\\\">{{l.CostingNonCostingValue}}</td>\\r\\n                                <td class=\\\"tableBorder\\\" style=\\\"width:250px\\\">{{l.batch}}</td>\\r\\n                                <!-- <td *ngIf=\\\"PIADD==true\\\" style=\\\"width:300px\\\">{{l.mcode}}</td> -->\\r\\n                            </tr>\\r\\n                        </tbody>\\r\\n                    </table>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n    </div>\\r\\n</form>\\r\\n\\r\\n<div class=\\\"sticky-bottom\\\" style=\\\"background: gray;\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-6\\\">\\r\\n            &nbsp;\\r\\n        </div>\\r\\n        <div class=\\\"col-md-4\\\" style=\\\"text-align: end;\\\">\\r\\n            <label style=\\\"font-weight: bold;font-size: 16px; width: 125px;\\\">Total Amount:</label>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-2\\\" style=\\\"text-align: end;\\\">\\r\\n            <label\\r\\n                style=\\\"font-size: 15px; font-weight: bold; margin-right: 2rem; \\\">{{this._addionalcostService.addCostTotAmount|\\r\\n                number}} </label>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<generic-popup-grid #genericGridACParty [popupsettings]=\\\"gridACListPartyPopupSettings\\\"\\r\\n    (onItemDoubleClick)=\\\"ACNameSelect_Additional($event)\\\"></generic-popup-grid>\\r\\n\\r\\n<generic-popup-grid #genericGridCreditACListParty [popupsettings]=\\\"gridCreditACListPartyPopupSettings\\\"\\r\\n    (onItemDoubleClick)=\\\"ACNameSelect_Credit($event)\\\"></generic-popup-grid>\\r\\n\\r\\n<generic-popup-grid #genericGridItem [popupsettings]=\\\"gridItemPopupSettings\\\"\\r\\n    (onItemDoubleClick)=\\\"dblClickItemSelection($event)\\\"></generic-popup-grid>\\r\\n\\r\\n<generic-popup-grid #genericGridBatch [popupsettings]=\\\"gridBatchPopupSettings\\\"\\r\\n    (onItemDoubleClick)=\\\"dblClickBatchSelection($event)\\\"></generic-popup-grid>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/Purchases/components/AdditionalCost/additionalCost.component.html\n// module id = 1338\n// module chunks = 1 2 3","module.exports = \"<style>\\r\\nth{\\r\\n        padding: 0px 5px;\\r\\n        font-family:  Roboto, Arial, sans-serif;\\r\\n        font-size: 13px;\\r\\n    }\\r\\n\\r\\n    td{\\r\\n        font-size: 12px;\\r\\n    }\\r\\n  \\r\\n</style>\\r\\n\\r\\n<form>\\r\\n    <div class=\\\"row\\\">\\r\\n\\r\\n        <!--<div class=\\\"content \\\">\\r\\n            <div class=\\\"col col-md-9 left\\\">-->\\r\\n\\r\\n        <div class=\\\"wrapper\\\">\\r\\n            <div style=\\\"margin-left:0px; margin-right:0px;\\\">\\r\\n                <!--<div class=\\\"col-md-9 plainBackGround \\\" style=\\\"min-height: 300px;height:300px\\\">-->\\r\\n                    <!-- style=\\\"background-color: #FFFFFF; overflow-x:scroll;overflow-x: scroll; display: block; position: relative;height: 54vh;\\\"> -->\\r\\n                <div #prodlistTable id=\\\"prodlistTable\\\" \\r\\n                style=\\\"overflow-x:scroll; overflow-y: scroll; display: block; position: relative; height: 59vh;\\\">\\r\\n                    <table id=\\\"fix\\\" class=\\\"table\\\" style=\\\"width:1500px;\\\">\\r\\n                        <thead>\\r\\n                            <tr style=\\\"border-bottom: 10px solid #c0c0c0;\\r\\n                            border-top: 2px solid #c0c0c0;\\r\\n                            height: 30px;\\r\\n                            background: silver;\\r\\n                            color: black;\\r\\n                            position: sticky;\\\">\\r\\n                                <th *ngFor=\\\"let head of _addionalcostService.header\\\" [style.text-align]=\\\"head['Alignment']\\\">{{head.TITLE}}\\r\\n                                  \\r\\n                                </th>\\r\\n                                <!--<th>Total\\r\\n                                  \\r\\n                                </th>\\r\\n                                <th>Cost Per Unit\\r\\n\\r\\n                                </th>\\r\\n                                <th *ngFor=\\\"let head of _additionalCostService.addtionalCostList\\\" style=\\\"width:5%\\\"></th> -->\\r\\n\\r\\n                            </tr>\\r\\n                        </thead>\\r\\n                        <!-- <tfoot>\\r\\n                            <tr>\\r\\n                                <td *ngFor=\\\"let head of source.footer\\\">\\r\\n\\r\\n                                </td>\\r\\n                               \\r\\n                            </tr>\\r\\n                        </tfoot> -->\\r\\n                        <tbody style=\\\"background-color: #e9e9e9;\\\">\\r\\n                            <!-- <ng-container *ngFor=\\\"let l of _addionalcostService.costList;let i=index\\\" > -->\\r\\n                                <!-- <ng-container *ngFor=\\\"let l of _addionalcostService.addtionalCostList;let i=index\\\">  -->\\r\\n                                    <tr *ngFor=\\\"let tbody of _additionalCostService.costdetail\\\" >\\r\\n                                <td *ngFor=\\\"let head of _addionalcostService.header\\\" [style.text-align]=\\\"head['Alignment']\\\" class=\\\"tableBorder\\\">\\r\\n                                    {{tbody[head.MAPPINGNAME]}}\\r\\n                                </td>\\r\\n                    \\r\\n                            </tr>\\r\\n\\r\\n                                 <!-- </ng-container> -->\\r\\n                            <!-- </ng-container> -->\\r\\n                            \\r\\n\\r\\n                        </tbody>\\r\\n                        <!-- <ng-container *ngFor=\\\"let l of _addionalcostService.addtionalCostList;let i=index\\\">\\r\\n                                <tbody style=\\\"background-color: #e9e9e9;\\\">\\r\\n                            <tr *ngFor=\\\"let tbody of _additionalCostService.costdetail\\\" >\\r\\n                                 <td *ngFor=\\\"let head of _addionalcostService.header\\\" [style.text-align]=\\\"head['Alignment']\\\" class=\\\"tableBorder\\\">\\r\\n                                    {{tbody[head.MAPPINGNAME]}}\\r\\n                                </td>\\r\\n                                \\r\\n                            </tr>\\r\\n                        </tbody>\\r\\n                        </ng-container> -->\\r\\n                     \\r\\n                    </table>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <!--   </div>\\r\\n            </div>\\r\\n        </div>-->\\r\\n\\r\\n    </div>\\r\\n\\r\\n</form>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/Purchases/components/AdditionalCost/costingDetail.component.html\n// module id = 1339\n// module chunks = 1 2 3","module.exports = \"<div class=\\\"sticky-top\\\">\\r\\n  <div class=\\\"clearfix\\\">\\r\\n    <div class=\\\"col-md-1\\\">\\r\\n      <voucher-master-toggler></voucher-master-toggler>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-4\\\">\\r\\n      <label\\r\\n        style=\\\"font-family: Segoe UI Light;font-weight: bold;font-size: 20px;padding-left: 5%;padding-top: 1%;width:auto\\\">{{ _trnMainService.pageHeading }}</label>\\r\\n      <label style=\\\"font-size: 14px;width: 34%;margin-top: 10px;\\\">&nbsp;>> {{ _trnMainService.TrnMainObj?.Mode | titlecase}}\\r\\n        Voucher</label>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-7\\\">\\r\\n      <account-master-action></account-master-action>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<div class=\\\"main-container\\\" style=\\\"top:10px !important\\\">\\r\\n  <div class=\\\"clearfix\\\">\\r\\n    <!-- <voucher-date-entry style=\\\"margin-top:-15px;\\\"></voucher-date-entry> -->\\r\\n    <trnmain-voucher-entry></trnmain-voucher-entry>\\r\\n    <div style=\\\"padding-bottom: 29px;\\r\\n    margin-top: -20px;\\\">\\r\\n  \\r\\n     <div class=\\\"col-md-3\\\" style=\\\"padding-left: 1px;\\\">\\r\\n      <label style=\\\"margin-left: 20px;\\\">Ref PI NO : </label>\\r\\n      <input id =\\\"REFPINO_AD\\\" type=\\\"test\\\" width=\\\"200px\\\" style=\\\"width: 60%;\\\" placeholder=\\\"Press Enter or Tab\\\"\\r\\n        (keydown.Tab)=\\\"TabRefBill()\\\" (keydown.Enter)=\\\"TabRefBill()\\\" [(ngModel)]='masterService.RefObj.Refno' \\r\\n        (keydown)=\\\"keyPress($event)\\\" autocomplete=\\\"off\\\"\\r\\n        [disabled]=\\\"_trnMainService.TrnMainObj.Mode=='EDIT' || _trnMainService.TrnMainObj.Mode=='VIEW'\\\">\\r\\n      </div>\\r\\n   \\r\\n      <div class=\\\"col-md-3\\\" style=\\\"padding-left: 0px;\\\">\\r\\n        <label style=\\\"margin-left: 11px;\\\">Invoice No : </label>\\r\\n      <input type=\\\"test\\\" width=\\\"200px\\\" style=\\\"width: 57%;\\\" \\r\\n        (keydown.Tab)=\\\"TabRefBill()\\\" (keydown.Enter)=\\\"TabRefBill()\\\" [(ngModel)]='masterService.RefObj.InvoiceNo'\\r\\n        readonly disabled>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"col-md-3\\\" style=\\\"padding-left: 0px;\\\">\\r\\n        <label style=\\\"margin-left: -30px;\\\">Supplier Name:</label>\\r\\n      <input type=\\\"test\\\" width=\\\"200px\\\" style=\\\"margin-left: 25px;width: 53%;\\\" \\r\\n        (keydown.Tab)=\\\"TabRefBill()\\\" (keydown.Enter)=\\\"TabRefBill()\\\" [(ngModel)]='masterService.RefObj.SupplierName' readonly disabled>\\r\\n      </div>\\r\\n      </div>\\r\\n    \\r\\n       \\r\\n    \\r\\n  </div>\\r\\n  <div class=\\\"clearfix\\\" style=\\\"margin-top: 5px\\\">\\r\\n    <ul class=\\\"nav nav-tabs\\\" style=\\\"background-color: #e9e9e9 !important\\\">\\r\\n      <li class=\\\"nav-item\\\">\\r\\n        <a class=\\\"nav-link active\\\" href=\\\"#Purchase\\\" data-toggle=\\\"tab\\\" style=\\\"color:black\\\">Purchase Detail</a>\\r\\n      </li>\\r\\n      <li class=\\\"nav-item\\\">\\r\\n        <a class=\\\"nav-link\\\" href=\\\"#AdditionalCost\\\" data-toggle=\\\"tab\\\" style=\\\"color:black\\\">Additional Cost</a>\\r\\n      </li>\\r\\n      <li class=\\\"nav-item\\\">\\r\\n        <a class=\\\"nav-link\\\" href=\\\"#CostingDetails\\\" data-toggle=\\\"tab\\\" style=\\\"color:black\\\">Costing Details</a>\\r\\n      </li>\\r\\n      <!-- <li class=\\\"nav-item\\\" *ngIf = \\\"_trnMainService.userSetting.EnableRateEditInAddCosting == 1\\\">\\r\\n        <a class=\\\"nav-link\\\" href=\\\"#ImportDocumentDetails\\\" data-toggle=\\\"tab\\\" style=\\\"color:black\\\" (click)=\\\"ImportDetailsClick()\\\">Import Document Details</a>\\r\\n      </li> -->\\r\\n    </ul>\\r\\n    <form [formGroup]=\\\"form\\\">\\r\\n      <div class=\\\"tab-content\\\">\\r\\n        <div class=\\\"tab-pane active\\\" id=\\\"Purchase\\\">\\r\\n          \\r\\n            <div class=\\\"col-md-12 row\\\" style=\\\"width: 100%;\\\">\\r\\n              <purchaseDetail></purchaseDetail>\\r\\n            </div>\\r\\n          \\r\\n        </div>\\r\\n        <div class=\\\"tab-pane\\\" id=\\\"AdditionalCost\\\">\\r\\n          <!-- Contact Details -->\\r\\n          <div class=\\\"col-md-12 row\\\">\\r\\n            <additionalCost></additionalCost>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"tab-pane\\\" id=\\\"CostingDetails\\\">\\r\\n          <!-- Contact Details -->\\r\\n          <div class=\\\"col-md-12 row\\\">\\r\\n            <costingDetail></costingDetail>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div *ngIf = \\\"_trnMainService.userSetting.EnableRateEditInAddCosting == 1\\\"   class=\\\"tab-pane\\\" id=\\\"ImportDocumentDetails\\\">\\r\\n          <ba-card>\\r\\n            <div class=\\\"col-md-12 row\\\" style=\\\"width: 100%; height: 23rem;\\\">\\r\\n              <ImportDocumentDetailsComponent></ImportDocumentDetailsComponent>\\r\\n            </div>\\r\\n          </ba-card>\\r\\n          \\r\\n        </div>\\r\\n\\r\\n      </div>\\r\\n    </form>\\r\\n  </div>\\r\\n</div>\\r\\n<!-- <div class=\\\"sticky-bottom\\\" style=\\\"background: gray;\\\">\\r\\n  <div class=\\\"row\\\" >\\r\\n    <div class=\\\"col-md-6\\\">\\r\\n      &nbsp;\\r\\n    </div>\\r\\n    <div class=\\\"col-md-5\\\" style=\\\"text-align: end;\\\">\\r\\n      <label style=\\\"font-weight: bold;font-size: 16px; width: 125px;\\\">Total Balance</label>\\r\\n      <label style=\\\"font-size: 15px;\\\">{{additionalcostService.loadedTrnmain.TOTAMNT|twoDigitNumber}}</label>\\r\\n    </div>\\r\\n  </div>\\r\\n</div> -->\\r\\n\\r\\n\\r\\n<generic-popup-grid #genericGridRefBill [popupsettings]=\\\"gridPopupSettingsForRefBill\\\"\\r\\n  (onItemDoubleClick)=\\\"onRefBillSelected($event)\\\"></generic-popup-grid>\\r\\n\\r\\n  <!-- <table style=\\\"font-size: 13px;width: 100%;\\\">\\r\\n    <thead>\\r\\n      <tr style=\\\"height: 30px;\\\">\\r\\n        <th style=\\\"width: 15%;\\\"></th>\\r\\n        <th style=\\\"width: 10%;\\\"><h4>Total Balance</h4></th>\\r\\n        <th style=\\\"width: 5%;\\\">{{_additionalCostService.loadedTrnmain.TOTAMNT|twoDigitNumber}}</th>\\r\\n\\r\\n      </tr>\\r\\n    </thead>\\r\\n\\r\\n  </table> -->\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/Purchases/components/AdditionalCost/masterPageAdditional.component.html\n// module id = 1340\n// module chunks = 1 2 3","module.exports = \"<style>\\r\\n    th{\\r\\n        padding: 0px 5px;\\r\\n        font-family:  Roboto, Arial, sans-serif;\\r\\n        font-size: 13px;\\r\\n    }\\r\\n\\r\\n    td{\\r\\n        font-size: 12px;\\r\\n    }\\r\\n\\r\\n    tbody {\\r\\n    display:block;\\r\\n    height:52vh;\\r\\n    overflow:auto;\\r\\n}\\r\\n\\r\\nthead, tbody tr {\\r\\n  display:table;\\r\\n  width:100%;\\r\\n  table-layout:fixed;/* even columns width , fix width of table too*/\\r\\n}\\r\\n</style>\\r\\n<form>\\r\\n    <div class=\\\"row\\\" style=\\\"margin-left: -10px; width:104%;\\\">\\r\\n\\r\\n        <!--<div class=\\\"content \\\">\\r\\n            <div class=\\\"col col-md-9 left\\\">-->\\r\\n\\r\\n        <div class=\\\"wrapper\\\">\\r\\n            <div style=\\\"margin-left:0px; margin-right:0px;\\\">\\r\\n                <!--<div class=\\\"col-md-9 plainBackGround \\\" style=\\\"min-height: 300px;height:300px\\\">-->\\r\\n\\r\\n                <div #prodlistTable id=\\\"prodlistTable\\\" style=\\\"background-color: #FFFFFF;\\\" style=\\\"width: 100%;\\\">\\r\\n                    <table id=\\\"fix\\\" class=\\\"table\\\">\\r\\n                        <thead>\\r\\n                            <tr style=\\\"border-bottom: 6px solid #c0c0c0;\\r\\n                            border-top: 2px solid #c0c0c0;\\r\\n                            height: 30px;\\r\\n                            background: silver;\\r\\n                            color: black;\\r\\n                            position: sticky;\\\">\\r\\n                                <th style=\\\"width:3%\\\">S.N\\r\\n                                   \\r\\n                                </th>\\r\\n                                <th style=\\\"width:6%\\\">Item Code\\r\\n                                 \\r\\n                                </th>\\r\\n                                <th style=\\\"width:30%\\\">Item Description\\r\\n                                   \\r\\n                                </th>\\r\\n\\r\\n                                <th style=\\\"width:5%\\\">Unit\\r\\n                                  </th>\\r\\n\\r\\n                                <th style=\\\"width:8%\\\">Batch\\r\\n                                   \\r\\n                                </th>\\r\\n\\r\\n                                <th style=\\\"width:8%\\\">Rate\\r\\n                                  \\r\\n                                </th>\\r\\n                                <th style=\\\"width:5%\\\">Qty\\r\\n                                  \\r\\n                                </th>\\r\\n                               \\r\\n                                <th style=\\\"width:12%\\\">Amount\\r\\n                                  \\r\\n                                </th>\\r\\n                                \\r\\n                                <!-- <th style=\\\"width:10%\\\">Net Amount\\r\\n                                  \\r\\n                                </th> -->\\r\\n\\r\\n                            </tr>\\r\\n                        </thead>\\r\\n                       \\r\\n                        <tbody style=\\\"background-color: #e9e9e9;\\\">\\r\\n                            <tr *ngFor=\\\"let c of _additionalCostService.addtionalCostList; let i=index\\\">\\r\\n                                <td  style=\\\"width:3%\\\" class=\\\"tableBorder\\\">{{i+1}}</td>\\r\\n                                <td style=\\\"width:6%\\\" class=\\\"tableBorder\\\">{{c.menucode}}</td>\\r\\n                                <td style=\\\"width:30%\\\" class=\\\"tableBorder\\\">{{c.desca}}</td>\\r\\n                                <td style=\\\"width:5%\\\" class=\\\"tableBorder\\\">{{c.unit}}</td>\\r\\n                                <td style=\\\"width:8%\\\" class=\\\"tableBorder\\\">{{c.batch}}</td>\\r\\n                              \\r\\n                                <td class=\\\"tableBorder\\\" style=\\\"text-align: right; width: 8%;\\\">\\r\\n                                  {{c.rate}}</td>\\r\\n                                <!-- <td class=\\\"tableBorder\\\">{{c.rate|twoDigitNumber}}</td> -->\\r\\n                                <td class=\\\"tableBorder\\\" style=\\\"text-align: right; width: 5%;\\\">{{c.quantity}}</td>\\r\\n                              \\r\\n                                <td class=\\\"tableBorder\\\" style=\\\"text-align: right; width: 12%;\\\">{{c.amount|twoDigitNumber}}</td>\\r\\n                                <!-- <td class=\\\"tableBorder\\\">{{c.nAmount|twoDigitNumber}}</td> -->\\r\\n                            </tr>\\r\\n\\r\\n                        </tbody>\\r\\n                        <!-- <tfoot>\\r\\n                            <tr>\\r\\n                                <td colspan=\\\"5\\\">\\r\\n\\r\\n                                </td>\\r\\n                                <td>\\r\\n                                    <div class=\\\"c3\\\">\\r\\n                                        Total Balance :\\r\\n                                    </div>\\r\\n                                </td>\\r\\n                               \\r\\n                                <td>\\r\\n                                    <div class=\\\"c3\\\" style=\\\"margin-left:1px\\\">\\r\\n                                        {{_additionalCostService.loadedTrnmain.TOTAMNT|twoDigitNumber}}\\r\\n                                    </div>\\r\\n                                </td>\\r\\n                                \\r\\n                                <td>\\r\\n                                    <div class=\\\"c3\\\" style=\\\"margin-left:1px\\\">\\r\\n                                        {{_additionalCostService.loadedTrnmain.NETWITHOUTROUNDOFF|twoDigitNumber}}\\r\\n                                    </div>\\r\\n                                </td>\\r\\n                            </tr>\\r\\n                        </tfoot> -->\\r\\n                    </table>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <!--   </div>\\r\\n            </div>\\r\\n        </div>-->\\r\\n\\r\\n    </div>\\r\\n\\r\\n</form>\\r\\n\\r\\n<div class=\\\"sticky-bottom\\\" style=\\\"background: gray;\\\">\\r\\n    <div class=\\\"row\\\" >\\r\\n      <div class=\\\"col-md-6\\\">\\r\\n        &nbsp;\\r\\n      </div>\\r\\n      <div class=\\\"col-md-4\\\" style=\\\"text-align: end;\\\">\\r\\n        <label style=\\\"font-weight: bold;font-size: 16px; width: 125px;\\\">Total Balance</label>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-2\\\" style=\\\"text-align: end;\\\">\\r\\n        <label style=\\\"font-size: 15px; font-weight: bold; margin-right: 2rem; \\\">{{_additionalCostService.loadedTrnmain.TOTAMNT|twoDigitNumber}}</label>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/Purchases/components/AdditionalCost/purchaseDetail.component.html\n// module id = 1341\n// module chunks = 1 2 3","module.exports = \"<style>\\r\\n    th {\\r\\n        padding: 0px 5px;\\r\\n        font-family: Roboto, Arial, sans-serif;\\r\\n        font-size: 13px;\\r\\n    }\\r\\n\\r\\n    td {\\r\\n        font-size: 12px;\\r\\n    }\\r\\n\\r\\n    tbody {\\r\\n        display: block;\\r\\n        height: 25vh;\\r\\n        overflow: auto;\\r\\n    }\\r\\n\\r\\n    .ExpandTable{\\r\\n        height: 45vh;\\r\\n    }\\r\\n\\r\\n    thead,\\r\\n    tbody tr {\\r\\n        display: table;\\r\\n        width: 100%;\\r\\n        table-layout: fixed;\\r\\n        /* even columns width , fix width of table too*/\\r\\n    }\\r\\n\\r\\n    .costingMethodWrapper {\\r\\n        border: 1px solid #ddd;\\r\\n        margin-top: -83px;\\r\\n        padding: 0px 10px 5px 10px;\\r\\n    }\\r\\n\\r\\n    .costingMethodWrapper label {\\r\\n\\r\\n        width: 100px;\\r\\n        background: #F1F1F1;\\r\\n        margin-top: -11px;\\r\\n        padding-left: 6px;\\r\\n    }\\r\\n\\r\\n    .costingMethodWrapper a {\\r\\n        font-size: 12px;\\r\\n    }\\r\\n\\r\\n    .title-wrapper {\\r\\n        width: 128px;\\r\\n        background: #F1F1F1;\\r\\n        margin-top: -29px;\\r\\n        margin-bottom: 10px;\\r\\n        padding-left: 13px;\\r\\n\\r\\n        \\r\\n    }\\r\\n    .tableBorder{\\r\\n        position: relative  !important;\\r\\n    }\\r\\n\\r\\n    .tooltips{\\r\\n        opacity: 0;\\r\\n        visibility: hidden;\\r\\n       \\r\\n\\r\\n    transition: 0.3s ease-in-out;\\r\\n    position: absolute;\\r\\n    top: 23px;\\r\\n    background: #000;\\r\\n    padding: 0 5px;\\r\\n    border-radius: 5px;\\r\\n    font-size: 12px !important;\\r\\n    z-index: 999999;\\r\\n    /* right: -60%; */\\r\\n    \\r\\n    \\r\\n    }\\r\\n    .tooltips p{\\r\\n        color: #fff !important;\\r\\n        margin-bottom: 0;\\r\\n        font-size: 11px;\\r\\n        line-height: 1.8;\\r\\n    }\\r\\n    .showTooltips:hover .tooltips{\\r\\n        opacity: 1;\\r\\n        visibility: visible;\\r\\n\\r\\n    }\\r\\n    .showTooltips:hover .tooltips:after{\\r\\n        display: block;\\r\\n\\r\\n    }\\r\\n\\r\\n    td:hover .tooltips{\\r\\n        opacity: 1;\\r\\n        visibility: visible;\\r\\n\\r\\n\\r\\n    }\\r\\n\\r\\n    .button-class{\\r\\n        width: 85px;\\r\\n        margin-top: 0px;\\r\\n        float: right;\\r\\n    }\\r\\n</style>\\r\\n\\r\\n<form disabled [formGroup]=\\\"form\\\" style=\\\"padding: 10px; border:1.5px solid #ddd;\\\" *ngIf=\\\"!masterService.ShowMore\\\">\\r\\n\\r\\n    <div class=\\\"row\\\" style=\\\"margin-bottom: 10px;\\\">\\r\\n        <div class=\\\"col-lg-2\\\">\\r\\n            <div class=\\\"form-wrapper\\\" style=\\\"display: flex;\\\"> <label style=\\\"flex:0 0 40%\\\">Ref Bill No : </label>\\r\\n                <input id=\\\"REFPINO_AD\\\" type=\\\"text\\\" style=\\\"width: 100%;\\\" [(ngModel)]='masterService.RefObj.Ref_BILLNO_2'\\r\\n                    [disabled]=\\\"_transactionService.TrnMainObj.Mode=='VIEW'\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n            </div>\\r\\n\\r\\n        </div>\\r\\n        <div class=\\\"col-lg-3\\\">\\r\\n            <div class=\\\"form-wrapper\\\" style=\\\"display: flex;margin-left: -15px;\\\"> <label style=\\\"flex:0 0 30%\\\">Ref Bill\\r\\n                    Date : </label>\\r\\n                <input type=\\\"date\\\" style=\\\"width: 100%;\\\" [(ngModel)]='masterService.RefObj.Ref_TRNDATE_2'\\r\\n                    (change)=\\\"changeToBSDate($event.target.value,'AD')\\\" [ngModelOptions]=\\\"{standalone: true}\\\"\\r\\n                    [disabled]=\\\"_transactionService.TrnMainObj.Mode=='VIEW'\\\">\\r\\n                <input  type=\\\"text\\\"style=\\\"width: 100%;\\\" [(ngModel)]='masterService.RefObj.Ref_BSDATE_2'\\r\\n                    [ngModelOptions]=\\\"{standalone: true}\\\" readonly disabled>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n\\r\\n        <div class=\\\"col-lg-3\\\">\\r\\n            <div class=\\\"form-wrapper\\\" style=\\\"display: flex;margin-left: -25px;\\\"> <label style=\\\"flex:0 0 30%\\\">Supplier\\r\\n                    Name:</label>\\r\\n                <input type=\\\"text\\\" style=\\\"width: 100%;\\\" placeholder=\\\"Press Enter or Tab\\\" (keydown.Tab)=\\\"SupplierList()\\\"\\r\\n                    (keydown.Enter)=\\\"SupplierList()\\\" [(ngModel)]='masterService.RefObj.Ref_SupplierName_2'\\r\\n                    [ngModelOptions]=\\\"{standalone: true}\\\" [disabled]=\\\"_transactionService.TrnMainObj.Mode=='VIEW'\\\">\\r\\n            </div>\\r\\n\\r\\n        </div>\\r\\n        <div class=\\\"col-lg-2\\\">\\r\\n            <div class=\\\"form-wrapper\\\" style=\\\"display: flex;margin-left: -15px;\\\"> <label style=\\\"flex:0 0 30%\\\">PAN No :\\r\\n                </label>\\r\\n                <input type=\\\"text\\\" style=\\\"width: 50%;\\\" [(ngModel)]='masterService.RefObj.Ref_SupplierVAT_2'\\r\\n                    [ngModelOptions]=\\\"{standalone: true}\\\" readonly disabled>\\r\\n            </div>\\r\\n\\r\\n        </div>\\r\\n        <div lass=\\\"col-lg-2\\\">\\r\\n            <!-- <div class=\\\"form-wrapper\\\" style=\\\"display: flex;margin-left: -15px;\\\">\\r\\n                <label style=\\\"flex:0 0 60%;margin-left: -40px;\\\">Group Costing Mode</label>\\r\\n                <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-lg-12\\\">\\r\\n\\r\\n                        <select class=\\\"form-control\\\" style=\\\"height: 25px;font-size: 12px;\\\" name=\\\"ACNAME\\\"\\r\\n                            [(ngModel)]=\\\"GcostMode\\\" [ngModelOptions]=\\\"{standalone:true}\\\"\\r\\n                            (change)=\\\"byQuantity($event.target.value)\\\"\\r\\n                            [disabled]=\\\"_transactionService.TrnMainObj.Mode=='VIEW' || PI == true\\\"\\r\\n                            (keydown.Enter)=\\\"gcostEntered()\\\">\\r\\n                            <option value=\\\"\\\"></option>\\r\\n                            <option value=\\\"Qty\\\">ON QTY</option>\\r\\n                            <option value=\\\"Amount\\\">ON AMOUNT</option>\\r\\n\\r\\n                        </select>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div> -->\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-lg-7\\\">\\r\\n\\r\\n            <div style=\\\"border: 1px solid #ddd; padding: 20px 10px 10px 10px;\\\">\\r\\n\\r\\n                <div class=\\\"title-wrapper\\\">\\r\\n                    <span class=\\\"form-title\\\">Bill-Details</span>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"row\\\" style=\\\"margin-top: -10px;\\\">\\r\\n                    <div class=\\\"col-lg-5 showTooltips\\\">\\r\\n                        <div class=\\\"form-wrapper\\\" style=\\\"display: flex;\\\"> <label style=\\\"flex:0 0 25%\\\">Dr Account \\r\\n                            </label>\\r\\n                            <input id=\\\"AdditionalCostAc_\\\" type=\\\"text\\\"\\r\\n                                [(ngModel)]=\\\"masterService.AdditionalPurchaseAcObj_2\\\"\\r\\n                                [ngModelOptions]=\\\"{standalone: true}\\\" style=\\\"width: 100%;\\\"\\r\\n                                (keydown.Enter)=\\\"TabAcBox('AC')\\\" autocomplete=\\\"off\\\" placeholder=\\\"Press Enter to Select\\\"\\r\\n                                [disabled]=\\\"_transactionService.TrnMainObj.Mode=='VIEW'\\\" (keydown)=\\\"keyPress($event)\\\">\\r\\n                        </div>\\r\\n                        <ng-container *ngIf=\\\"_transactionService.userSetting.ENABLESUBLEDGER==1\\\">\\r\\n                            <div style=\\\"display: flex;\\\" >\\r\\n                             \\r\\n                                 <div class=\\\"tooltips\\\">\\r\\n                                  <p *ngIf=\\\" masterService.DR_SL_INDV_ACNAME \\\">Sub Ledger :</p>\\r\\n                                  <p class=\\\"subledgerSelected\\\">{{masterService.DR_SL_INDV_ACNAME}}</p>\\r\\n                                 </div>\\r\\n                              </div>\\r\\n\\r\\n                        </ng-container>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-lg-3\\\">\\r\\n                        <div class=\\\"form-wrapper\\\" style=\\\"display: flex;\\\"> <label style=\\\"flex:0 0 35%\\\">Amount  </label>\\r\\n                            <input *ngIf=\\\"_transactionService.TrnMainObj.Mode!='VIEW'\\\" id=\\\"AmountsAD_\\\"\\r\\n                                class=\\\"form-control col-md-2\\\" type=\\\"number\\\" [(ngModel)]=\\\"masterService.AdditionalAMOUNT_2\\\"\\r\\n                                [ngModelOptions]=\\\"{standalone: true}\\\" style=\\\"width: 100%;\\\" \\r\\n                                placeholder=\\\"Press Enter to Change Individual Amount\\\" (keydown.Enter)=\\\"IndAmountSelect()\\\" \\r\\n                                (keydown.Tab)=\\\"IndAmountSelect()\\\"  (keydown)=\\\"keyPress($event)\\\"> \\r\\n                            <input *ngIf=\\\"_transactionService.TrnMainObj.Mode=='VIEW'\\\" id=\\\"AmountsAD_\\\"\\r\\n                                class=\\\"form-control col-md-2\\\" type=\\\"number\\\" [(ngModel)]=\\\"masterService.AdditionalAMOUNT_2\\\"\\r\\n                                [ngModelOptions]=\\\"{standalone: true}\\\" style=\\\"width: 100%;\\\" \\r\\n                                disabled=\\\"_transactionService.TrnMainObj.Mode=='VIEW'\\\">\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-lg-4\\\">\\r\\n                        <div class=\\\"form-wrapper\\\" style=\\\"display: flex;\\\"> <label style=\\\"flex:0 0 35%\\\">Remarks : </label>\\r\\n                            <input id=\\\"RemarksAD_\\\" type=\\\"text\\\" class=\\\"form-control col-md-9\\\"\\r\\n                                [(ngModel)]=\\\"masterService.AdditionalREMARKS_2\\\" [ngModelOptions]=\\\"{standalone: true}\\\"\\r\\n                                style=\\\"width: 100%;\\\" [disabled]=\\\"_transactionService.TrnMainObj.Mode=='VIEW'\\\"\\r\\n                                (keydown.Enter)=\\\"remarksEntered()\\\" autocomplete=\\\"off\\\">\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-lg-5\\\">\\r\\n                        <div class=\\\"form-wrapper\\\" style=\\\"display: flex;\\\"> <label style=\\\"flex:0 0 25%\\\">Description \\r\\n                            </label>\\r\\n                            <input type=\\\"text\\\" style=\\\"width: 100%;\\\" [(ngModel)]='masterService.AdditionalDesc_2'\\r\\n                                [ngModelOptions]=\\\"{standalone: true}\\\"\\r\\n                                [disabled]=\\\"_transactionService.TrnMainObj.Mode=='VIEW'\\\">\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-lg-3\\\">\\r\\n                        <div class=\\\"form-wrapper\\\" style=\\\"display: flex;\\\"> <label style=\\\"flex:0 0 35%\\\">VAT : </label>\\r\\n                            <input type=\\\"number\\\" style=\\\"width: 100%;\\\" [(ngModel)]='masterService.AdditionalVAT_2'\\r\\n                                [ngModelOptions]=\\\"{standalone: true}\\\" (focusout)=\\\"checkVat()\\\"\\r\\n                                [disabled]=\\\"_transactionService.TrnMainObj.Mode=='VIEW' || masterService.IsTaxableBill_2==0\\\">\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-lg-4 showTooltips\\\">\\r\\n                        <div class=\\\"form-wrapper\\\" style=\\\"display: flex;\\\"> <label style=\\\"flex:0 0 35%\\\">Cr. Account \\r\\n                            </label>\\r\\n                            <input type=\\\"text\\\" placeholder=\\\"Press Enter to Select\\\"\\r\\n                                [(ngModel)]=\\\"masterService.AdditionalPurchaseCreditAcObj_2\\\"\\r\\n                                [ngModelOptions]=\\\"{standalone: true}\\\" style=\\\"width: 100%;\\\"\\r\\n                                (keydown.Enter)=\\\"TabAcBox('CreditAC')\\\"\\r\\n                                [disabled]=\\\"_transactionService.TrnMainObj.Mode=='VIEW'\\\" (keydown)=\\\"keyPress($event)\\\">\\r\\n                        </div>\\r\\n\\r\\n                        <ng-container *ngIf=\\\"_transactionService.userSetting.ENABLESUBLEDGER==1\\\">\\r\\n                            <div style=\\\"display: flex;\\\" >\\r\\n                             \\r\\n                                 <div class=\\\"tooltips\\\">\\r\\n                                  <p *ngIf=\\\" masterService.CR_SL_INDV_ACNAME \\\">Sub Ledger :</p>\\r\\n                                  <p class=\\\"subledgerSelected\\\">{{masterService.CR_SL_INDV_ACNAME}}</p>\\r\\n                                 </div>\\r\\n                              </div>\\r\\n\\r\\n                        </ng-container>\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n            </div>\\r\\n\\r\\n        </div>\\r\\n        <div class=\\\"col-lg-2\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n                <div style=\\\"border: 1px solid #ddd; padding: 20px 10px 10px 10px;\\\">\\r\\n\\r\\n                    <div class=\\\"title-wrapper\\\">\\r\\n                        <span class=\\\"form-title\\\">TDS Adjustment</span>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-lg-12 showTooltips\\\">\\r\\n                            <div class=\\\"form-wrapper\\\" style=\\\"display: flex;\\\"> <label style=\\\"flex:0 0 20%\\\">A/C : </label>\\r\\n                                <input id=\\\"AdditionalCostAc_\\\" type=\\\"text\\\" [(ngModel)]=\\\"masterService.TDSAccount_Name_2\\\"\\r\\n                                    [ngModelOptions]=\\\"{standalone: true}\\\" style=\\\"width: 100%;flex:0 0 80%;\\\"\\r\\n                                    (keydown.Enter)=\\\"TabTDSAccount()\\\" autocomplete=\\\"off\\\"\\r\\n                                    placeholder=\\\"press Enter to select\\\"\\r\\n                                    [disabled]=\\\"_transactionService.TrnMainObj.Mode=='VIEW'\\\">\\r\\n                            </div>\\r\\n\\r\\n                            <ng-container *ngIf=\\\"_transactionService.userSetting.ENABLESUBLEDGER==1\\\">\\r\\n                                <div style=\\\"position: absolute; white-space: nowrap;top: -64px;\\\" >\\r\\n                                 \\r\\n                                     <div class=\\\"tooltips\\\">\\r\\n                                      <p *ngIf=\\\" masterService.TDS_SL_INDV_ACNAME \\\">Sub Ledger :</p>\\r\\n                                      <p class=\\\"subledgerSelected\\\">{{masterService.TDS_SL_INDV_ACNAME}}</p>\\r\\n                                     </div>\\r\\n                                  </div>\\r\\n    \\r\\n                            </ng-container>\\r\\n                            \\r\\n                        </div>\\r\\n                        <div class=\\\"col-lg-12\\\">\\r\\n                            <div class=\\\"form-wrapper\\\" style=\\\"display: flex;\\\"> <label\\r\\n                                style=\\\"flex:0 0 27%;margin-left: -5px;\\\">Amount :\\r\\n                            </label>\\r\\n                            <input type=\\\"number\\\" style=\\\"flex:0 0 55%; width: 100%;\\\"\\r\\n                                [(ngModel)]=\\\"masterService.TDSAmount_2\\\" [ngModelOptions]=\\\"{standalone: true}\\\"\\r\\n                                [disabled]=\\\"_transactionService.TrnMainObj.Mode=='VIEW' || !masterService.TDSAccount_ACID_2\\\">\\r\\n                        </div>\\r\\n\\r\\n                        </div>\\r\\n                        <!-- <div class=\\\"col-lg-5\\\">\\r\\n                        </div> -->\\r\\n\\r\\n\\r\\n                    </div>\\r\\n\\r\\n\\r\\n                </div>\\r\\n                \\r\\n\\r\\n\\r\\n\\r\\n\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-lg-1\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"checkboxWrapper\\\" style=\\\"padding-left: 10px; margin-top: 0px;\\\">\\r\\n                    <div class=\\\"check-box\\\" style=\\\"margin-right: 7px;\\\">\\r\\n                        <input type=\\\"checkbox\\\" id=\\\"taxable\\\" name=\\\"taxable\\\"\\r\\n                            (change)=\\\"ChangeIsTaxableBill($event.target.checked)\\\"\\r\\n                            [checked]=\\\"masterService.IsTaxableBill_2== 1\\\"\\r\\n                            [disabled]=\\\"_transactionService.TrnMainObj.Mode=='VIEW'\\\">\\r\\n                        <label for=\\\"taxable\\\" style=\\\"width: 70%; white-space: nowrap;\\\"> Is Taxable Additional\\r\\n                            Bill</label><br>\\r\\n                    </div>\\r\\n                    <div class=\\\"check-box\\\">\\r\\n                        <input type=\\\"checkbox\\\" id=\\\"accountposting\\\" name=\\\"acposting\\\"\\r\\n                            (change)=\\\"$event.target.checked?(masterService.DoAccountPosting_2=1):(masterService.DoAccountPosting_2=0)\\\"\\r\\n                            [checked]=\\\"masterService.DoAccountPosting_2== 1\\\"\\r\\n                            [disabled]=\\\"_transactionService.TrnMainObj.Mode=='VIEW'\\\">\\r\\n                        <label for=\\\"accountposting\\\" style=\\\"width: 70%; white-space: nowrap;\\\"> Do Account\\r\\n                            Posting</label><br>\\r\\n\\r\\n                    </div>\\r\\n                    <div *ngIf=\\\"_transactionService.userSetting.DoReverseJournalEntry==1\\\" class=\\\"check-box\\\">\\r\\n                        <input type=\\\"checkbox\\\" id=\\\"accountposting\\\" name=\\\"acposting\\\"\\r\\n                            (change)=\\\"ChangeReverseJournal($event)\\\"\\r\\n                            [checked]=\\\"masterService.DoReverseJournalEntry_2== 1\\\"\\r\\n                            [disabled]=\\\"_transactionService.TrnMainObj.Mode=='VIEW'\\\">\\r\\n                        <label for=\\\"accountposting\\\" style=\\\"width: 70%; white-space: nowrap;\\\" [title]=\\\"masterService.DoReverseJournalEntry_2== 1?masterService.ReverseJournalACNAME_2:''\\\"> Do Reverse Journal Entry</label><br>\\r\\n\\r\\n                    </div>\\r\\n                    <ng-container >\\r\\n                        <div class=\\\"check-box\\\">\\r\\n                            <input type=\\\"checkbox\\\" id=\\\"isecaitem\\\" name=\\\"acposting\\\"\\r\\n                                (change)=\\\"ChangeECA_ITEM($event.target.checked)\\\"\\r\\n                                [checked]=\\\"masterService.IS_ECA_ITEM_2== 1\\\"\\r\\n                                [disabled]=\\\"_transactionService.TrnMainObj.Mode=='VIEW'\\\">\\r\\n                            <label for=\\\"isecaitem\\\" style=\\\"width: 70%; white-space: nowrap;\\\">Is Import Document Item</label>\\r\\n                        </div>\\r\\n                    </ng-container>\\r\\n\\r\\n\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-lg-2\\\" style=\\\"margin-top: -10px;\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n             <!-- <div  style=\\\"border: 1px solid #ddd; padding: 20px 10px 10px 10px;     margin: 0px 10px;\\\">\\r\\n               \\r\\n                     <div class=\\\"title-wrapper\\\" style=\\\"width: 158px;\\\">\\r\\n                  <span class=\\\"form-title\\\">Group Costing Mode</span>\\r\\n             </div>\\r\\n                \\r\\n                <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-lg-12\\\">\\r\\n                     \\r\\n                        <select class=\\\"form-control col-md-1\\\" name=\\\"ACNAME\\\"  [(ngModel)]=\\\"GcostMode\\\" [ngModelOptions]=\\\"{standalone:true}\\\"\\r\\n                        (change)=\\\"byQuantity($event.target.value)\\\"\\r\\n                        [disabled]=\\\"_transactionService.TrnMainObj.Mode=='VIEW' || PI == true\\\" (keydown.Enter)=\\\"gcostEntered()\\\">\\r\\n                        <option value=\\\"\\\"></option>\\r\\n                        <option value=\\\"Qty\\\">ON QTY</option>\\r\\n                        <option value=\\\"Amount\\\">ON AMOUNT</option>\\r\\n\\r\\n                    </select>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                   \\r\\n                    \\r\\n                </div>  -->\\r\\n                \\r\\n            \\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"row\\\">\\r\\n            <!-- <fieldset style=\\\"margin-right: 15px !important;\\\">\\r\\n                <legend style=\\\"font-size: 14px;\\\">Costing Mode:</legend>\\r\\n                <div style=\\\"display: flex;\\\">\\r\\n                    <label class=\\\"smallBoldLabel\\\"><input type=\\\"radio\\\" name=\\\"addcosting\\\" value=\\\"COSTING\\\"\\r\\n                            [disabled]=\\\"_transactionService.TrnMainObj.Mode=='VIEW'\\\" [(ngModel)]=\\\"masterService.addcosting\\\"\\r\\n                            [ngModelOptions]=\\\"{standalone:true}\\\" checked>&nbsp;Costing</label>\\r\\n                    <label class=\\\"smallBoldLabel\\\" style=\\\"width: 100px;margin-left: -20px;\\\"><input type=\\\"radio\\\" name=\\\"addcosting\\\"\\r\\n                            value=\\\"NONCOSTING\\\" [disabled]=\\\"_transactionService.TrnMainObj.Mode=='VIEW'\\\"\\r\\n                            [(ngModel)]=\\\"masterService.addcosting\\\"\\r\\n                            [ngModelOptions]=\\\"{standalone:true}\\\">&nbsp;Non-Costing</label>\\r\\n    \\r\\n                </div>\\r\\n            </fieldset> -->\\r\\n           \\r\\n        </div>\\r\\n\\r\\n            <div style=\\\"margin: 110px 0px;\\\"> \\r\\n                <button  class=\\\"btn btn-info btn-add-focus button-class\\\"\\r\\n                    (click)=\\\"onAddClick()\\\" *ngIf=\\\"_transactionService.TrnMainObj.Mode!='VIEW'\\\"\\r\\n                    >Add</button>\\r\\n            </div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n</form>\\r\\n\\r\\n<div class=\\\"tableCOntent\\\" style=\\\"margin-top: 7px;\\\">\\r\\n    <div class=\\\"row\\\" style=\\\"width: 105%;\\\">\\r\\n\\r\\n        <div class=\\\"wrapper\\\">\\r\\n            <div style=\\\"margin-left:0px; margin-right:0px;\\\">\\r\\n\\r\\n\\r\\n                <div #prodlistTable style=\\\"background-color: #FFFFFF;\\\">\\r\\n                    <table id=\\\"fix\\\" class=\\\"table\\\"style=\\\"width:99% !important\\\">\\r\\n                        <thead>\\r\\n                            <tr style=\\\"border-bottom: 10px solid #c0c0c0;\\r\\n                                                                                                    border-top: 2px solid #c0c0c0;\\r\\n                                                                                                    height: 30px;\\r\\n                                                                                                    background: silver;\\r\\n                                                                                                    color: black;\\r\\n                                                                                                    position: sticky;\\\">\\r\\n                                    <th style=\\\"width: 2%;text-align: center;\\\">S.N\\r\\n                                    </th>\\r\\n                                    <th  style=\\\"width: 5%;\\\">Ref Bill No\\r\\n                                    </th>\\r\\n                                    <th  style=\\\"width: 6%;text-align: center;\\\">Date\\r\\n                                    </th>\\r\\n                                    <th  style=\\\"width: 10%;text-align: center;\\\">Dr Account\\r\\n                                    </th>\\r\\n                                    <th  style=\\\"width: 7%;\\\">Description\\r\\n                                    </th>\\r\\n                                    <th  style=\\\"width: 5%;text-align: center;\\\">Amount\\r\\n                                    </th>\\r\\n                                    <th  style=\\\"width: 6%;\\\">VAT\\r\\n                                    </th>\\r\\n                                    <th  style=\\\"width: 6%;\\\">Remarks\\r\\n                                    </th>\\r\\n                                    <th  style=\\\"width: 8%;\\\">Cr Account\\r\\n                                    </th>\\r\\n                                    <th  style=\\\"width: 6%;\\\">TDS Amount\\r\\n                                    </th>\\r\\n                                    <th  style=\\\"width: 6%;\\\">TDS A/C\\r\\n                                    </th>\\r\\n                                    <th  style=\\\"width:9%;\\\">Supplier Name\\r\\n                                    </th>\\r\\n                                    <th  style=\\\"width: 6%;\\\">AC Posting\\r\\n                                    </th>\\r\\n                                    <th  style=\\\"width: 8%;\\\">Taxable Add Bill\\r\\n                                    </th>\\r\\n                                    <!-- <th  style=\\\"width: 6%;\\\">Cost Mode\\r\\n                                    </th> -->\\r\\n                                    <th  style=\\\"width: 4%;\\\">Costing\\r\\n                                    </th>\\r\\n                                    <th  style=\\\"width: 7%;\\\">Imp Doc Item\\r\\n                                    </th>\\r\\n                            </tr>\\r\\n                        </thead>\\r\\n\\r\\n                        <tbody style=\\\"background-color: #e9e9e9;\\\" [ngClass]=\\\"masterService.ShowMore?'ExpandTable':''\\\">\\r\\n                            <tr *ngFor=\\\"let l of _addionalcostService.INDcostList;let i=index\\\"\\r\\n                                (dblclick)=\\\"TableRowDoubleClickEvent(l)\\\" (click)=\\\"checkRow(i)\\\">\\r\\n                                <td class=\\\"tableBorder\\\" style=\\\"width: 2%;text-align: center;\\\">{{i+1}}</td>\\r\\n                                <td class=\\\"tableBorder\\\" style=\\\"width: 5%;\\\">{{l.Ref_BILLNO}}</td>\\r\\n                                <td class=\\\"tableBorder\\\" style=\\\"width:6%\\\">{{l.Ref_TRNDATE}}</td>\\r\\n                                <td class=\\\"tableBorder\\\" style=\\\"width:10%\\\">{{l.costAc.ACNAME}}\\r\\n                                \\r\\n                                    <div class=\\\"tooltips\\\">\\r\\n                                        <p *ngIf=\\\"l.DR_SL_ACNAME\\\">Sub Ledger :</p>\\r\\n                                        <p>{{l.DR_SL_ACNAME}}</p>\\r\\n                                     </div>\\r\\n                                </td>\\r\\n                                <td class=\\\"tableBorder\\\"style=\\\"width: 7%;\\\">{{l.AdditionalDesc}}</td>\\r\\n                                <td class=\\\"tableBorder\\\" style=\\\"width: 5%\\\">{{l.amount | twoDigitNumber}}</td>\\r\\n                                <td class=\\\"tableBorder\\\" style=\\\"width: 6%;\\\">{{l.AdditionalVAT | twoDigitNumber}}</td>\\r\\n                                <td class=\\\"tableBorder\\\" style=\\\"width: 6%;\\\">{{l.remarks}}</td>\\r\\n                                <td class=\\\"tableBorder\\\" style=\\\"width: 8%;\\\">{{l.creditAc.ACNAME}}\\r\\n                                    <div class=\\\"tooltips\\\">\\r\\n                                        <p *ngIf=\\\"l.CR_SL_ACNAME\\\">Sub Ledger :</p>\\r\\n                                        <p>{{l.CR_SL_ACNAME}}</p>\\r\\n                                     </div>\\r\\n                                </td>\\r\\n                                <td class=\\\"tableBorder\\\" style=\\\"width: 6%;text-align: right;\\\">{{l.TDSAmount}}</td>\\r\\n                                <td class=\\\"tableBorder\\\" style=\\\"width: 6%;\\\">{{l.TDSAccount_Name}}\\r\\n                                    <div class=\\\"tooltips\\\">\\r\\n                                        <p *ngIf=\\\"l.TDS_SL_ACNAME\\\">Sub Ledger :</p>\\r\\n                                        <p>{{l.TDS_SL_ACNAME}}</p>\\r\\n                                     </div>\\r\\n                                </td>\\r\\n                                <td class=\\\"tableBorder\\\" style=\\\"width: 9%;\\\">{{l.Ref_SupplierName}}</td>\\r\\n                                <td class=\\\"tableBorder\\\" style=\\\"width: 6%;\\\">{{l.DoAccountPosting}}</td>\\r\\n                                <td class=\\\"tableBorder\\\" style=\\\"width: 8%;\\\">{{l.IsTaxableBill}}</td>\\r\\n                                <!-- <td class=\\\"tableBorder\\\" style=\\\"width:50px\\\">{{l.CostingType}}</td> -->\\r\\n                                <!-- <td class=\\\"tableBorder\\\" style=\\\"width: 6%;\\\">{{l.GCOSTMODE}}</td> -->\\r\\n                                <!-- <td class=\\\"tableBorder\\\" style=\\\"width:50px\\\">{{l.desca}}</td> -->\\r\\n                                <td class=\\\"tableBorder\\\" style=\\\"width: 5%;\\\">{{l.CostingNonCostingValue}}</td>\\r\\n                                <!-- <td class=\\\"tableBorder\\\" style=\\\"width:50px\\\">{{l.batch}}</td> -->\\r\\n                                <td class=\\\"tableBorder\\\" style=\\\"width: 6%;\\\">{{l.IS_ECA_ITEM}}</td>\\r\\n                            </tr>\\r\\n                        </tbody>\\r\\n                    </table>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"sticky-bottom\\\" style=\\\"background: gray; width: 98%;\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-3\\\" style=\\\"text-align: end;\\\">\\r\\n            <label style=\\\"font-weight: bold;font-size: 14px; width: 100%;\\\">Non Taxable: {{this._addionalcostService.addINDCostNonTaxableTotalAmount|\\r\\n                number}}</label>            \\r\\n        </div>\\r\\n        <div class=\\\"col-md-3\\\" style=\\\"text-align: end;\\\">\\r\\n            <label style=\\\"font-weight: bold;font-size: 14px; width: 100%\\\">Taxable: {{this._addionalcostService.addINDCostTaxableTotalAmount|\\r\\n                number}}</label>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-3\\\" style=\\\"text-align: end;\\\">\\r\\n            <label style=\\\"font-weight: bold;font-size: 14px; width: 100%\\\">VAT: {{this._addionalcostService.addINDCostTotalVat|\\r\\n                number}} </label>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-3\\\" style=\\\"text-align: end;\\\">\\r\\n            <label\\r\\n                style=\\\"font-size: 14px; font-weight: bold; width: 90%\\\">Net Amount: {{this._addionalcostService.addINDCostTotalNetAmount|\\r\\n                number}} </label>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div *ngIf=\\\"masterService.showIndividualAmountPopup\\\">\\r\\n    <div class=\\\"modal-sticky\\\" style=\\\"display : block; padding: 0px;  margin-bottom: 1rem;margin-right: 75rem;\\\">\\r\\n        <div class=\\\"modal-content modal-content-main-area\\\" style=\\\"width: 120%; height: auto;padding-bottom: 0px;padding-top: 0px;margin-top: 12pc !important;\\\">\\r\\n            <div #prodlistTable id=\\\"prodlistTable\\\" style=\\\"background-color: #FFFFFF;\\\" style=\\\"width: 109%;\\\">\\r\\n                <table id=\\\"fix\\\" class=\\\"table\\\" style=\\\"margin-left: -19px !important;width: 96% !important;\\\">\\r\\n                    <thead>\\r\\n                        <tr style=\\\"border-bottom: 6px solid #c0c0c0;\\r\\n                        border-top: 2px solid #c0c0c0;\\r\\n                        height: 30px;\\r\\n                        background: silver;\\r\\n                        color: black;\\r\\n                        position: sticky;\\\">\\r\\n                            <th style=\\\"width:3%\\\">S.N\\r\\n\\r\\n                            </th>\\r\\n                            <th style=\\\"width:10%\\\">Item Code\\r\\n\\r\\n                            </th>\\r\\n                            <th style=\\\"width:25%\\\">Item Description\\r\\n\\r\\n                            </th>\\r\\n\\r\\n                            <!-- <th style=\\\"width:5%\\\">Unit\\r\\n                            </th> -->\\r\\n\\r\\n                            <th style=\\\"width:12%\\\">Batch\\r\\n\\r\\n                            </th>\\r\\n\\r\\n                            <th style=\\\"width:8%\\\">Rate\\r\\n\\r\\n                            </th>\\r\\n                            <!-- <th style=\\\"width:5%\\\">Qty\\r\\n\\r\\n                            </th> -->\\r\\n\\r\\n                            <th style=\\\"width:12%\\\">Amount\\r\\n\\r\\n                            </th>\\r\\n                            <!-- <th>acid</th> -->\\r\\n                            <th style=\\\"width:12%\\\">Ind Amount\\r\\n\\r\\n                            </th>\\r\\n\\r\\n                        </tr>\\r\\n                    </thead>\\r\\n\\r\\n                    <tbody style=\\\"background-color: #e9e9e9;\\\">\\r\\n                        <tr *ngFor=\\\"let c of _addionalcostService.tempIndCostList; let i=index\\\">\\r\\n                            <td style=\\\"width:3%\\\" class=\\\"tableBorder\\\">{{i+1}}</td>\\r\\n                            <td style=\\\"width:10%\\\" class=\\\"tableBorder\\\">{{c.menucode}}</td>\\r\\n                            <td style=\\\"width:25%\\\" class=\\\"tableBorder\\\">{{c.desca}}</td>\\r\\n                            <!-- <td style=\\\"width:5%\\\" class=\\\"tableBorder\\\">{{c.unit}}</td> -->\\r\\n                            <td style=\\\"width:12%\\\" class=\\\"tableBorder\\\">{{c.batch}}</td>\\r\\n                            <td class=\\\"tableBorder\\\" style=\\\"text-align: right; width: 8%;\\\">\\r\\n                                {{_transactionService.nullToZeroConverter(c.rate) |twoDigitNumber}}</td>\\r\\n                            <!-- <td class=\\\"tableBorder\\\" style=\\\"text-align: right; width: 5%;\\\">{{c.quantity}}</td> -->\\r\\n\\r\\n                            <td class=\\\"tableBorder\\\" style=\\\"text-align: right; width: 12%;\\\">{{_transactionService.nullToZeroConverter(c.amount)|twoDigitNumber}}\\r\\n                            </td>\\r\\n                            <!-- <td>{{c.additionalcostac}}</td> -->\\r\\n                            <td class=\\\"tableBorder\\\" style=\\\"text-align: right; width: 12%;\\\"><input type=\\\"number\\\" style=\\\"width: 100px;\\\"\\r\\n                                    [(ngModel)]=\\\"c.indamount\\\" (keydown)=\\\"CalculateTotalAmount()\\\" (ngModelChange)=\\\"CalculateTotalAmount()\\\"></td>\\r\\n                                    \\r\\n                        </tr>\\r\\n\\r\\n                    </tbody>\\r\\n                    <tfoot>\\r\\n                        <tr style=\\\"background: #d9d9d9;\\\">\\r\\n                            <td colspan=\\\"6\\\">\\r\\n                                <label style=\\\"float:right;font-size: 16px;font-weight: bold;width: 225px !important;\\\">Total Amount: {{this.masterService.TOTALINDAMOUNT|twoDigitNumber}}</label>\\r\\n                            </td>\\r\\n                        </tr>\\r\\n                    </tfoot>\\r\\n                </table>\\r\\n            </div>\\r\\n            <div class=\\\"modal-footer\\\">\\r\\n                <button type=\\\"submit\\\" class=\\\"btn btn-sm btn-info\\\" style=\\\"font-size: 12px;\\\"\\r\\n                    (click)=\\\"closeIndAmountPopup()\\\">OK</button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<generic-popup-grid #genericGridACParty [popupsettings]=\\\"gridACListPartyPopupSettings\\\"\\r\\n    (onItemDoubleClick)=\\\"ACNameSelect_Additional($event)\\\"></generic-popup-grid>\\r\\n\\r\\n<generic-popup-grid #genericGridCreditACListParty [popupsettings]=\\\"gridCreditACListPartyPopupSettings\\\"\\r\\n    (onItemDoubleClick)=\\\"ACNameSelect_Credit($event)\\\"></generic-popup-grid>\\r\\n\\r\\n<generic-popup-grid #genericGridItem [popupsettings]=\\\"gridItemPopupSettings\\\"\\r\\n    (onItemDoubleClick)=\\\"dblClickItemSelection($event)\\\"></generic-popup-grid>\\r\\n\\r\\n<generic-popup-grid #genericGridBatch [popupsettings]=\\\"gridBatchPopupSettings\\\"\\r\\n    (onItemDoubleClick)=\\\"dblClickBatchSelection($event)\\\"></generic-popup-grid>\\r\\n\\r\\n<generic-popup-grid #genericGridACList [popupsettings]=\\\"gridACListPopupSettings\\\"\\r\\n    (onItemDoubleClick)=\\\"onAcSelect($event)\\\"></generic-popup-grid>\\r\\n\\r\\n<generic-popup-grid #genericGridSupplier [popupsettings]=\\\"gridPopupSettingsForSupplier\\\"\\r\\n    (onItemDoubleClick)=\\\"onSupplierSelected($event)\\\"></generic-popup-grid>\\r\\n    \\r\\n\\r\\n    <generic-popup-grid #gridSubLedgerSettingListCr [popupsettings]=\\\"gridSubLedgerSettingCr\\\"\\r\\n    (onItemDoubleClick)=\\\"onSubLedgerSelectCr($event)\\\"></generic-popup-grid>\\r\\n    <generic-popup-grid #gridSubLedgerSettingListDr [popupsettings]=\\\"gridSubLedgerSettingDr\\\"\\r\\n    (onItemDoubleClick)=\\\"onSubLedgerSelectDr($event)\\\"></generic-popup-grid>\\r\\n    <generic-popup-grid #gridSubLedgerSettingListAc [popupsettings]=\\\"gridSubLedgerSettingAc\\\"\\r\\n    (onItemDoubleClick)=\\\"onSubLedgerSelectAc($event)\\\"></generic-popup-grid>\\r\\n    <generic-popup-grid #genericGridACPartyReverseJournal [popupsettings]=\\\"genericGridACPartyForReverseJournal\\\"\\r\\n    (onItemDoubleClick)=\\\"ACNameSelectForReverseJournal($event)\\\" (onPopUpClose)=\\\"resetReverseJournalEntry()\\\"></generic-popup-grid>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/Purchases/components/NewAdditionalCost/newIndividualCost.component.html\n// module id = 1342\n// module chunks = 1 2 3","module.exports = \"<style>\\r\\n    th {\\r\\n        padding: 0px 5px;\\r\\n        font-family: Roboto, Arial, sans-serif;\\r\\n        font-size: 13px;\\r\\n    }\\r\\n\\r\\n    td {\\r\\n        font-size: 12px;\\r\\n    }\\r\\n\\r\\n    tbody {\\r\\n        display: block;\\r\\n        height: 25vh;\\r\\n        overflow: auto;\\r\\n    }\\r\\n\\r\\n    .ExpandTable{\\r\\n        height: 45vh;\\r\\n    }\\r\\n\\r\\n    thead,\\r\\n    tbody tr {\\r\\n        display: table;\\r\\n        width: 100%;\\r\\n        table-layout: fixed;\\r\\n        /* even columns width , fix width of table too*/\\r\\n    }\\r\\n\\r\\n    .costingMethodWrapper {\\r\\n        border: 1px solid #ddd;\\r\\n        margin-top: -83px;\\r\\n        padding: 0px 10px 5px 10px;\\r\\n    }\\r\\n\\r\\n    .costingMethodWrapper label {\\r\\n\\r\\n        width: 100px;\\r\\n        background: #F1F1F1;\\r\\n        margin-top: -11px;\\r\\n        padding-left: 6px;\\r\\n    }\\r\\n\\r\\n    .costingMethodWrapper a {\\r\\n        font-size: 12px;\\r\\n    }\\r\\n\\r\\n    .title-wrapper {\\r\\n        width: 128px;\\r\\n        background: #F1F1F1;\\r\\n        margin-top: -29px;\\r\\n        margin-bottom: 10px;\\r\\n        padding-left: 13px;\\r\\n\\r\\n    }\\r\\n    .tablebody td{\\r\\n        border: 1px solid black !important;\\r\\n        /* position: relative;  */\\r\\n    }\\r\\n    td:hover .tooltips{\\r\\n        opacity: 1;\\r\\n        visibility: visible;\\r\\n\\r\\n\\r\\n    }\\r\\n    .tableBorder{\\r\\n        position: relative  !important;\\r\\n    }\\r\\n    .tooltips{\\r\\n        opacity: 0;\\r\\n        visibility: hidden;      \\r\\n        transition: 0.3s ease-in-out;\\r\\n        position: absolute;\\r\\n        top: 23px;\\r\\n        background: #000;\\r\\n        padding: 0 5px;\\r\\n        border-radius: 5px;\\r\\n        font-size: 12px !important;\\r\\n        z-index: 999999;\\r\\n        \\r\\n        /* right: -60%; */\\r\\n    \\r\\n    \\r\\n    }\\r\\n    .tooltips p{\\r\\n        color: #fff !important;\\r\\n        margin-bottom: 0;\\r\\n        font-size: 11px;\\r\\n        line-height: 1.8;\\r\\n    }\\r\\n    .showTooltips:hover .tooltips{\\r\\n        opacity: 1;\\r\\n        visibility: visible;\\r\\n\\r\\n    }\\r\\n    .showTooltips:hover .tooltips:after{\\r\\n        display: block;\\r\\n\\r\\n    }\\r\\n\\r\\n    .tablebody th{\\r\\n        border: 1px solid black;\\r\\n    }\\r\\n\\r\\n    /* .tooltips:after {\\r\\n        content: \\\"\\\";\\r\\n    position: absolute;\\r\\n    left: 5px;\\r\\n    margin-left: -5px;\\r\\n    top: -54%;\\r\\n    transform: translateY(-57%);\\r\\n    border: 10px solid #000;\\r\\n    border-color: transparent black transparent transparent;\\r\\n    transform: rotate(90deg);\\r\\n    display: none;\\r\\n \\r\\n} */\\r\\n\\r\\n\\r\\n</style>\\r\\n\\r\\n<form disabled [formGroup]=\\\"form\\\" style=\\\"padding: 10px; border:1.5px solid #ddd;\\\" *ngIf=\\\"!masterService.ShowMore\\\">\\r\\n\\r\\n    <div class=\\\"row\\\" style=\\\"margin-bottom: 10px;\\\" *ngIf=\\\"masterService.RefObj.PURCHASE_TYPE!==  'LOCALPURCHASE'\\\">\\r\\n        <div class=\\\"col-lg-2\\\">\\r\\n            <div class=\\\"form-wrapper\\\" style=\\\"display: flex;\\\"> <label style=\\\"flex:0 0 40%\\\">Ref Bill No : </label>\\r\\n                <input id=\\\"REFPINO_AD\\\" type=\\\"text\\\" style=\\\"width: 100%;\\\" [(ngModel)]='masterService.RefObj.Ref_BILLNO'\\r\\n                    [disabled]=\\\"_transactionService.TrnMainObj.Mode=='VIEW'\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n            </div>\\r\\n\\r\\n        </div>\\r\\n        <div class=\\\"col-lg-3\\\">\\r\\n            <div class=\\\"form-wrapper\\\" style=\\\"display: flex;margin-left: -15px;\\\"> <label style=\\\"flex:0 0 30%\\\">Ref Bill\\r\\n                    Date : </label>\\r\\n                <input type=\\\"date\\\" style=\\\"width: 100%;\\\" [(ngModel)]='masterService.RefObj.Ref_TRNDATE'\\r\\n                    (change)=\\\"changeToBSDate($event.target.value,'AD')\\\" [ngModelOptions]=\\\"{standalone: true}\\\"\\r\\n                    [disabled]=\\\"_transactionService.TrnMainObj.Mode=='VIEW'\\\">\\r\\n                <input type=\\\"text\\\" style=\\\"width: 100%;\\\" [(ngModel)]='masterService.RefObj.Ref_BSDATE'\\r\\n                    [ngModelOptions]=\\\"{standalone: true}\\\" readonly disabled>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n\\r\\n        <div class=\\\"col-lg-3\\\">\\r\\n            <div class=\\\"form-wrapper\\\" style=\\\"display: flex;margin-left: -25px;\\\"> <label style=\\\"flex:0 0 30%\\\">Supplier\\r\\n                    Name:</label>\\r\\n                <input type=\\\"text\\\" style=\\\"width: 100%;\\\" placeholder=\\\"Press Enter or Tab\\\" (keydown.Tab)=\\\"SupplierList()\\\"\\r\\n                    (keydown.Enter)=\\\"SupplierList()\\\" [(ngModel)]='masterService.RefObj.Ref_SupplierName'\\r\\n                    [ngModelOptions]=\\\"{standalone: true}\\\" [disabled]=\\\"_transactionService.TrnMainObj.Mode=='VIEW'\\\">\\r\\n            </div>\\r\\n\\r\\n        </div>\\r\\n        <div class=\\\"col-lg-2\\\">\\r\\n            <div class=\\\"form-wrapper\\\" style=\\\"display: flex;margin-left: -15px;\\\"> <label style=\\\"flex:0 0 30%\\\">PAN No :\\r\\n                </label>\\r\\n                <input type=\\\"text\\\" style=\\\"width: 50%;\\\" [(ngModel)]='masterService.RefObj.Ref_SupplierVAT'\\r\\n                    [ngModelOptions]=\\\"{standalone: true}\\\" readonly disabled>\\r\\n            </div>\\r\\n\\r\\n        </div>\\r\\n        <div lass=\\\"col-lg-2\\\">\\r\\n            <div class=\\\"form-wrapper\\\" style=\\\"display: flex;margin-left: -15px;\\\">\\r\\n                <label style=\\\"flex:0 0 60%;margin-left: -40px;\\\">Group Costing Mode</label>\\r\\n                <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-lg-12\\\">\\r\\n                        <select class=\\\"form-control\\\" style=\\\"height: 25px;font-size: 12px;\\\" name=\\\"ACNAME\\\"\\r\\n                            [(ngModel)]=\\\"GcostMode\\\" [ngModelOptions]=\\\"{standalone:true}\\\"\\r\\n                            (change)=\\\"byQuantity($event.target.value)\\\"\\r\\n                            [disabled]=\\\"_transactionService.TrnMainObj.Mode=='VIEW' || PI == true\\\"\\r\\n                            (keydown.Enter)=\\\"gcostEntered()\\\">\\r\\n                            <option value=\\\"\\\"></option>\\r\\n                            <option value=\\\"Qty\\\">ON QTY</option>\\r\\n                            <option value=\\\"Amount\\\">ON AMOUNT</option>\\r\\n\\r\\n                        </select>\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n\\r\\n                <!-- </div> -->\\r\\n                <!-- <div  > -->\\r\\n\\r\\n                <!-- <div class=\\\"title-wrapper\\\" style=\\\"width: 158px;\\\">\\r\\n         <span class=\\\"form-title\\\">Group Costing Mode</span>\\r\\n    </div> -->\\r\\n\\r\\n\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-lg-7\\\">\\r\\n\\r\\n            <div style=\\\"border: 1px solid #ddd; padding: 20px 10px 10px 0px;\\\">\\r\\n\\r\\n                <div class=\\\"title-wrapper\\\">\\r\\n                    <span class=\\\"form-title\\\">Bill-Details</span>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"row\\\" style=\\\"margin-top: -10px;\\\">\\r\\n                    <div class=\\\"col-lg-5 showTooltips\\\">\\r\\n                        <div class=\\\"form-wrapper \\\" style=\\\"display: flex;\\\"> <label style=\\\"flex:0 0 25%\\\">Dr Account \\r\\n                            </label>\\r\\n                            <input id=\\\"AdditionalCostAc_\\\" type=\\\"text\\\"\\r\\n                                [(ngModel)]=\\\"masterService.AdditionalPurchaseAcObj\\\"\\r\\n                                [ngModelOptions]=\\\"{standalone: true}\\\" style=\\\"width: 100%;\\\"\\r\\n                                (keydown.Enter)=\\\"TabAcBox('AC')\\\" autocomplete=\\\"off\\\" placeholder=\\\"press Enter to select\\\"\\r\\n                                [disabled]=\\\"_transactionService.TrnMainObj.Mode=='VIEW'\\\">\\r\\n                        </div>\\r\\n                        <ng-container *ngIf=\\\"_transactionService.userSetting.ENABLESUBLEDGER==1\\\">\\r\\n                            <div style=\\\"display: flex;\\\"  >\\r\\n                                <!-- <label style=\\\"flex:0 0 35%\\\">Sub-ledger \\r\\n                                </label> -->\\r\\n                                <!-- <input  autocomplete=\\\"off\\\" id=\\\"Dr_Sub_ledger\\\"\\r\\n                                  style=\\\"height:23px;width: 100%; display: none;\\\" (keyup.Enter)=\\\"onsubLedgerTabDr(i)\\\" \\r\\n                                  [(ngModel)]=\\\"masterService.DR_SL_ACNAME\\\" [ngModelOptions]=\\\"{standalone: true}\\\"\\r\\n                                  placeholder=\\\"press ENTER to Select\\\"  [disabled]=\\\"masterService.disable_DrSubLedger==true || _transactionService.TrnMainObj.Mode=='VIEW'\\\"\\r\\n                                 \\r\\n                                   /> -->\\r\\n                                   <div class=\\\"tooltips\\\">\\r\\n                                    <p *ngIf=\\\"masterService.AdditionalPurchaseAcObj && masterService.DR_SL_ACNAME\\\">Sub Ledger :</p>\\r\\n                                    <p class=\\\"subledgerSelected\\\">{{masterService.DR_SL_ACNAME}}</p>\\r\\n                                   </div>\\r\\n                                  \\r\\n                               \\r\\n                              </div>\\r\\n\\r\\n                        </ng-container>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-lg-3\\\">\\r\\n                        <div class=\\\"form-wrapper\\\" style=\\\"display: flex;\\\"> <label style=\\\"flex:0 0 35%\\\">Amount  </label>\\r\\n                            <input *ngIf=\\\"_transactionService.TrnMainObj.Mode!='VIEW'\\\" id=\\\"AmountsAD_\\\"\\r\\n                                class=\\\"form-control col-md-2\\\" type=\\\"number\\\" [(ngModel)]=\\\"masterService.AdditionalAMOUNT\\\" (ngModelChange)=\\\"CalculateVat()\\\"\\r\\n                                [ngModelOptions]=\\\"{standalone: true}\\\" style=\\\"width: 100%;\\\">\\r\\n                            <input *ngIf=\\\"_transactionService.TrnMainObj.Mode=='VIEW'\\\" id=\\\"AmountsAD_\\\"\\r\\n                                class=\\\"form-control col-md-2\\\" type=\\\"number\\\" [(ngModel)]=\\\"masterService.AdditionalAMOUNT\\\"\\r\\n                                [ngModelOptions]=\\\"{standalone: true}\\\" style=\\\"width: 100%;\\\" \\r\\n                                disabled=\\\"_transactionService.TrnMainObj.Mode=='VIEW'\\\">\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-lg-4\\\">\\r\\n                        <div *ngIf=\\\"masterService.RefObj.PURCHASE_TYPE!==  'LOCALPURCHASE'\\\" \\r\\n                        class=\\\"form-wrapper\\\" style=\\\"display: flex;\\\"> <label style=\\\"flex:0 0 35%\\\">Remarks : </label>\\r\\n                            <input id=\\\"RemarksAD_\\\" type=\\\"text\\\" class=\\\"form-control col-md-9\\\"\\r\\n                                [(ngModel)]=\\\"masterService.AdditionalREMARKS\\\" [ngModelOptions]=\\\"{standalone: true}\\\"\\r\\n                                style=\\\"width: 100%;\\\" [disabled]=\\\"_transactionService.TrnMainObj.Mode=='VIEW'\\\"\\r\\n                                (keydown.Enter)=\\\"remarksEntered()\\\" autocomplete=\\\"off\\\">\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-lg-5\\\">\\r\\n                        <div *ngIf=\\\"masterService.RefObj.PURCHASE_TYPE!==  'LOCALPURCHASE'\\\" class=\\\"form-wrapper\\\" style=\\\"display: flex;\\\"> <label style=\\\"flex:0 0 25%\\\">Description \\r\\n                            </label>\\r\\n                            <input type=\\\"text\\\" style=\\\"width: 100%;\\\" [(ngModel)]='masterService.AdditionalDesc'\\r\\n                                [ngModelOptions]=\\\"{standalone: true}\\\"\\r\\n                                [disabled]=\\\"_transactionService.TrnMainObj.Mode=='VIEW'\\\">\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-lg-3\\\">\\r\\n                        <div *ngIf=\\\"masterService.RefObj.PURCHASE_TYPE!==  'LOCALPURCHASE'\\\"  class=\\\"form-wrapper\\\" style=\\\"display: flex;\\\"> <label style=\\\"flex:0 0 35%\\\">VAT : </label>\\r\\n                            <input type=\\\"number\\\" style=\\\"width: 100%;\\\" [(ngModel)]='masterService.AdditionalVAT'\\r\\n                                [ngModelOptions]=\\\"{standalone: true}\\\" (focusout)=\\\"checkVat()\\\"\\r\\n                                [disabled]=\\\"_transactionService.TrnMainObj.Mode=='VIEW' || masterService.IsTaxableBill==0\\\">\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-lg-4 showTooltips\\\">\\r\\n                        <div *ngIf=\\\"masterService.RefObj.PURCHASE_TYPE!==  'LOCALPURCHASE'\\\" class=\\\"form-wrapper\\\" style=\\\"display: flex;\\\"> <label style=\\\"flex:0 0 35%\\\">Cr. Account \\r\\n                            </label>\\r\\n                            <input type=\\\"text\\\" placeholder=\\\"Press Enter to select\\\"\\r\\n                                [(ngModel)]=\\\"masterService.AdditionalPurchaseCreditAcObj\\\"\\r\\n                                [ngModelOptions]=\\\"{standalone: true}\\\" style=\\\"width: 100%;\\\"\\r\\n                                (keydown.Enter)=\\\"TabAcBox('CreditAC')\\\"\\r\\n                                [disabled]=\\\"_transactionService.TrnMainObj.Mode=='VIEW'\\\">\\r\\n                        </div>\\r\\n\\r\\n                        <ng-container *ngIf=\\\"_transactionService.userSetting.ENABLESUBLEDGER==1 && masterService.RefObj.PURCHASE_TYPE!==  'LOCALPURCHASE'\\\">\\r\\n                            <div style=\\\"display: flex;\\\" >\\r\\n                                <!-- <label style=\\\"flex:0 0 35%\\\">Sub-ledger \\r\\n                                </label> -->\\r\\n\\r\\n                                <!-- <input  autocomplete=\\\"off\\\" id=\\\"Cr_Sub_ledger\\\" \\r\\n                                style=\\\"height:23px;width: 100%;display:none\\\" (keyup.Enter)=\\\"onsubLedgerTabCr(i)\\\" \\r\\n                                [(ngModel)]=\\\"masterService.CR_SL_ACNAME\\\" [ngModelOptions]=\\\"{standalone: true}\\\"\\r\\n                                placeholder=\\\"press ENTER to Select\\\"  [disabled]=\\\"masterService.disable_CrSubLedger==true || _transactionService.TrnMainObj.Mode=='VIEW' \\\"\\r\\n                               \\r\\n                                 /> -->\\r\\n                                 <div class=\\\"tooltips\\\">\\r\\n                                  <p *ngIf=\\\"masterService.AdditionalPurchaseCreditAcObj && masterService.CR_SL_ACNAME \\\">Sub Ledger :</p>\\r\\n                                  <p class=\\\"subledgerSelected\\\">{{masterService.CR_SL_ACNAME}}</p>\\r\\n                                 </div>\\r\\n\\r\\n                                \\r\\n\\r\\n                                \\r\\n                               \\r\\n                              </div>\\r\\n\\r\\n                        </ng-container>\\r\\n                       \\r\\n                      \\r\\n                       \\r\\n                    </div>\\r\\n                 \\r\\n                </div>\\r\\n\\r\\n            </div>\\r\\n\\r\\n        </div>\\r\\n        <div class=\\\"col-lg-2\\\" >\\r\\n            <div class=\\\"row\\\">\\r\\n                <div style=\\\"border: 1px solid #ddd; padding: 20px 10px 10px 10px;\\\" *ngIf=\\\"masterService.RefObj.PURCHASE_TYPE!==  'LOCALPURCHASE'\\\" >\\r\\n\\r\\n                    <div class=\\\"title-wrapper\\\">\\r\\n                        <span class=\\\"form-title\\\">TDS Adjustment</span>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-lg-12 showTooltips\\\">\\r\\n                            <div class=\\\"form-wrapper\\\" style=\\\"display: flex;\\\"> <label style=\\\"flex:0 0 25%\\\">A/C : </label>\\r\\n                                <input id=\\\"AdditionalCostAc_\\\" type=\\\"text\\\" [(ngModel)]=\\\"masterService.TDSAccount_Name\\\"\\r\\n                                    [ngModelOptions]=\\\"{standalone: true}\\\" style=\\\"width: 100%;flex:0 0 75%;\\\"\\r\\n                                    (keydown.Enter)=\\\"TabTDSAccount()\\\" autocomplete=\\\"off\\\"\\r\\n                                    placeholder=\\\"press Enter to select\\\"\\r\\n                                    [disabled]=\\\"_transactionService.TrnMainObj.Mode=='VIEW'\\\">\\r\\n                            </div>\\r\\n\\r\\n                            <ng-container *ngIf=\\\"_transactionService.userSetting.ENABLESUBLEDGER==1 && masterService.RefObj.PURCHASE_TYPE!==  'LOCALPURCHASE'\\\">\\r\\n                                <div style=\\\"position: absolute; white-space: nowrap;top: -64px;\\\">\\r\\n                                    <!-- <label style=\\\"flex:0 0 35%\\\">Sub-ledger \\r\\n                                    </label> -->\\r\\n    \\r\\n                                    <!-- <input  autocomplete=\\\"off\\\" id=\\\"Ac_Sub_ledger\\\" \\r\\n                                    style=\\\"height:23px;width: 100%;display:none;\\\" (keyup.Enter)=\\\"onsubLedgerTabAc(i)\\\" \\r\\n                                    [(ngModel)]=\\\"masterService.TDS_SL_ACNAME\\\" [ngModelOptions]=\\\"{standalone: true}\\\"\\r\\n                                    placeholder=\\\"press ENTER to Select\\\"  \\r\\n                                   \\r\\n                                     /> -->\\r\\n                                     <div class=\\\"tooltips\\\">\\r\\n                                        \\r\\n                                      <p *ngIf=\\\"masterService.TDSAccount_Name && masterService.TDS_SL_ACNAME\\\">Sub Ledger :</p>\\r\\n                                      <p class=\\\"subledgerSelected\\\">{{masterService.TDS_SL_ACNAME}}</p>\\r\\n                                     </div>\\r\\n                                  </div>\\r\\n    \\r\\n                            </ng-container>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-lg-12\\\">\\r\\n                            <div class=\\\"form-wrapper\\\" style=\\\"display: flex;\\\"> <label style=\\\"flex:0 0 27%;margin-left: 0px;\\\">Amount :\\r\\n                                </label>\\r\\n                                <input type=\\\"number\\\" style=\\\"flex:0 0 55%; width: 100%;\\\"\\r\\n                                    [(ngModel)]=\\\"masterService.TDSAmount\\\" [ngModelOptions]=\\\"{standalone: true}\\\"\\r\\n                                    [disabled]=\\\"_transactionService.TrnMainObj.Mode=='VIEW' || !masterService.TDSAccount_ACID\\\">\\r\\n                            </div>\\r\\n                        </div>\\r\\n\\r\\n\\r\\n                    </div>\\r\\n\\r\\n\\r\\n                </div>\\r\\n\\r\\n                                    <div *ngIf=\\\"masterService.RefObj.PURCHASE_TYPE==  'LOCALPURCHASE'\\\">\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                            <div class=\\\"col-lg-12\\\">\\r\\n                                                <div class=\\\"col-lg-4\\\">\\r\\n                                                    <label style=\\\"flex:0 0 60%;margin-left: 0px;width: 130px !important;\\\">Group Costing Mode</label>\\r\\n                                                </div>\\r\\n                                                <div class=\\\"col-lg-8\\\">\\r\\n                                                    <select class=\\\"form-control\\\" style=\\\"height: 25px;font-size: 12px;\\\" name=\\\"ACNAME\\\" [(ngModel)]=\\\"GcostMode\\\"\\r\\n                                                    [ngModelOptions]=\\\"{standalone:true}\\\" (change)=\\\"byQuantity($event.target.value)\\\"\\r\\n                                                    [disabled]=\\\"_transactionService.TrnMainObj.Mode=='VIEW' || PI == true\\\" (keydown.Enter)=\\\"gcostEntered()\\\">\\r\\n                                                    <option value=\\\"\\\"></option>\\r\\n                                                    <option value=\\\"Qty\\\">ON QTY</option>\\r\\n                                                    <option value=\\\"Amount\\\">ON AMOUNT</option>\\r\\n                                                </select>\\r\\n                                                </div>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                \\r\\n\\r\\n\\r\\n\\r\\n\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-lg-1\\\" style=\\\"margin-top: -10px;width: 10%;\\\">\\r\\n            <!-- <div class=\\\"row\\\">\\r\\n             <div  style=\\\"border: 1px solid #ddd; padding: 20px 10px 10px 10px;     margin: 0px 10px;\\\">\\r\\n               \\r\\n                     <div class=\\\"title-wrapper\\\" style=\\\"width: 158px;\\\">\\r\\n                  <span class=\\\"form-title\\\">Group Costing Mode</span>\\r\\n             </div>\\r\\n                \\r\\n                <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-lg-12\\\">\\r\\n                     \\r\\n                        <select class=\\\"form-control col-md-1\\\" name=\\\"ACNAME\\\"  [(ngModel)]=\\\"GcostMode\\\" [ngModelOptions]=\\\"{standalone:true}\\\"\\r\\n                        (change)=\\\"byQuantity($event.target.value)\\\"\\r\\n                        [disabled]=\\\"_transactionService.TrnMainObj.Mode=='VIEW' || PI == true\\\" (keydown.Enter)=\\\"gcostEntered()\\\">\\r\\n                        <option value=\\\"\\\"></option>\\r\\n                        <option value=\\\"Qty\\\">ON QTY</option>\\r\\n                        <option value=\\\"Amount\\\">ON AMOUNT</option>\\r\\n\\r\\n                    </select>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                   \\r\\n                    \\r\\n                </div> \\r\\n                \\r\\n            \\r\\n            </div> -->\\r\\n\\r\\n            <div class=\\\"row\\\">\\r\\n                    <fieldset style=\\\"margin-right: 15px !important;\\\">\\r\\n                        <legend style=\\\"font-size: 14px;\\\">Costing Mode:</legend>\\r\\n                        <div class=\\\"row\\\">\\r\\n                            <div class=\\\"col-lg-12\\\">\\r\\n                                <label class=\\\"smallBoldLabel\\\"><input type=\\\"radio\\\" name=\\\"addcosting\\\" value=\\\"COSTING\\\"\\r\\n                                        [disabled]=\\\"_transactionService.TrnMainObj.Mode=='VIEW'\\\" [(ngModel)]=\\\"masterService.addcosting\\\"\\r\\n                                        [ngModelOptions]=\\\"{standalone:true}\\\" checked>&nbsp;Costing</label>\\r\\n                                <label class=\\\"smallBoldLabel\\\" style=\\\"width: 100px;\\\"><input type=\\\"radio\\\" name=\\\"addcosting\\\"\\r\\n                                        value=\\\"NONCOSTING\\\" [disabled]=\\\"_transactionService.TrnMainObj.Mode=='VIEW'\\\"\\r\\n                                        [(ngModel)]=\\\"masterService.addcosting\\\"\\r\\n                                        [ngModelOptions]=\\\"{standalone:true}\\\">&nbsp;Non-Costing</label>\\r\\n\\r\\n                            </div>\\r\\n                            </div>\\r\\n\\r\\n                    </fieldset>\\r\\n                    <ng-container>\\r\\n                        <div class=\\\"check-box\\\" *ngIf=\\\"masterService.RefObj.PURCHASE_TYPE!==  'LOCALPURCHASE'\\\">\\r\\n                            <input type=\\\"checkbox\\\" id=\\\"isecaitem\\\" name=\\\"acposting\\\"\\r\\n                                (change)=\\\"ChangeECA_ITEM($event.target.checked)\\\"\\r\\n                                [checked]=\\\"masterService.IS_ECA_ITEM== 1\\\"\\r\\n                                [disabled]=\\\"_transactionService.TrnMainObj.Mode=='VIEW'\\\">\\r\\n                            <label for=\\\"isecaitem\\\" style=\\\"width: 70%; white-space: nowrap;\\\">Is Import Document Item</label>\\r\\n                        </div>\\r\\n                    </ng-container>\\r\\n        </div>\\r\\n\\r\\n          \\r\\n\\r\\n\\r\\n\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-lg-1\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n                <div  class=\\\"checkboxWrapper\\\" style=\\\" margin-top: 0px;\\\" *ngIf=\\\"masterService.RefObj.PURCHASE_TYPE!==  'LOCALPURCHASE'\\\">\\r\\n                    <div class=\\\"check-box\\\">\\r\\n                        <input type=\\\"checkbox\\\" id=\\\"taxable\\\" name=\\\"taxable\\\"\\r\\n                            (change)=\\\"ChangeIsTaxableBill($event.target.checked)\\\"\\r\\n                            [checked]=\\\"masterService.IsTaxableBill== 1\\\"\\r\\n                            [disabled]=\\\"_transactionService.TrnMainObj.Mode=='VIEW'\\\">\\r\\n                        <label for=\\\"taxable\\\" style=\\\"width: 70%; white-space: nowrap;\\\"> Is Taxable Additional\\r\\n                            Bill</label><br>\\r\\n                    </div>\\r\\n                    <div class=\\\"check-box\\\">\\r\\n                        <input type=\\\"checkbox\\\" id=\\\"accountposting\\\" name=\\\"acposting\\\"\\r\\n                            (change)=\\\"$event.target.checked?(masterService.DoAccountPosting=1):(masterService.DoAccountPosting=0)\\\"\\r\\n                            [checked]=\\\"masterService.DoAccountPosting== 1\\\"\\r\\n                            [disabled]=\\\"_transactionService.TrnMainObj.Mode=='VIEW'\\\">\\r\\n                        <label for=\\\"accountposting\\\" style=\\\"width: 70%; white-space: nowrap;\\\"> Do Account\\r\\n                            Posting</label><br>\\r\\n\\r\\n                    </div>\\r\\n                    <div *ngIf=\\\"_transactionService.userSetting.DoReverseJournalEntry==1\\\"  class=\\\"check-box\\\">\\r\\n                        <input type=\\\"checkbox\\\" id=\\\"DoReverseJournalEntry\\\" name=\\\"assetstrack\\\"\\r\\n                            (change)=\\\"ChangeReverseJournal($event)\\\"\\r\\n                            [checked]=\\\"masterService.DoReverseJournalEntry== 1\\\"\\r\\n                            [disabled]=\\\"_transactionService.TrnMainObj.Mode=='VIEW'\\\">\\r\\n                        <label for=\\\"assetstrack\\\" style=\\\"width: 70%; white-space: nowrap;\\\" [title]=\\\"masterService.DoReverseJournalEntry== 1?masterService.ReverseJournalACNAME:''\\\"> Do Reverse Journal Entry</label><br>\\r\\n\\r\\n                    </div>\\r\\n\\r\\n\\r\\n                </div>\\r\\n                <div>\\r\\n                    <button style=\\\"width: 65px;margin-top: 2px;float: right;\\\" class=\\\"btn btn-info btn-add-focus\\\"\\r\\n                        (click)=\\\"onAddClick()\\\" *ngIf=\\\"_transactionService.TrnMainObj.Mode!='VIEW'\\\">Add</button>\\r\\n                </div>\\r\\n    \\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n</form>\\r\\n\\r\\n<div class=\\\"tableCOntent\\\" style=\\\"margin-top: 7px;\\\">\\r\\n    <div class=\\\"row\\\" style=\\\"width: 105%;\\\">\\r\\n\\r\\n        <div class=\\\"wrapper\\\">\\r\\n            <div style=\\\"margin-left:0px; margin-right:0px;\\\">\\r\\n\\r\\n\\r\\n                <div #prodlistTable >\\r\\n                    <table id=\\\"fix\\\" class=\\\"table\\\" style=\\\"width:99% !important\\\">\\r\\n                        <thead>\\r\\n                            <tr style=\\\"border-bottom: 10px solid #c0c0c0;\\r\\n                                                                                                    border-top: 2px solid #c0c0c0;\\r\\n                                                                                                    height: 30px;\\r\\n                                                                                                    background: silver;\\r\\n                                                                                                    color: black;\\r\\n                                                                                                    position: sticky;\\\">\\r\\n                                 <th style=\\\"width: 2%;text-align: center;\\\">S.N\\r\\n                                </th>\\r\\n                                <th  style=\\\"width: 5%;\\\" *ngIf=\\\"masterService.RefObj.PURCHASE_TYPE!==  'LOCALPURCHASE'\\\">Ref Bill No\\r\\n                                </th>\\r\\n                                <th *ngIf=\\\"masterService.RefObj.PURCHASE_TYPE!==  'LOCALPURCHASE'\\\" style=\\\"width: 6%;text-align: center;\\\">Date\\r\\n                                </th>\\r\\n                               \\r\\n                                <th  style=\\\"width: 10%;text-align: center;\\\">Dr Account\\r\\n                                </th>\\r\\n                                <th *ngIf=\\\"masterService.RefObj.PURCHASE_TYPE!==  'LOCALPURCHASE'\\\" style=\\\"width: 7%;\\\">Description\\r\\n                                </th>\\r\\n                                <th  style=\\\"width: 5%;text-align: center;\\\">Amount\\r\\n                                </th>\\r\\n                                <th  style=\\\"width: 6%;\\\" *ngIf=\\\"masterService.RefObj.PURCHASE_TYPE!==  'LOCALPURCHASE'\\\">VAT\\r\\n                                </th>\\r\\n                                <th *ngIf=\\\"masterService.RefObj.PURCHASE_TYPE!==  'LOCALPURCHASE'\\\" style=\\\"width: 6%;\\\">Remarks\\r\\n                                </th>\\r\\n                                <th *ngIf=\\\"masterService.RefObj.PURCHASE_TYPE!==  'LOCALPURCHASE'\\\" style=\\\"width: 8%;\\\">Cr Account\\r\\n                                </th>\\r\\n                                <th  style=\\\"width: 6%;\\\" *ngIf=\\\"masterService.RefObj.PURCHASE_TYPE!==  'LOCALPURCHASE'\\\">TDS Amount\\r\\n                                </th>\\r\\n                                <th *ngIf=\\\"masterService.RefObj.PURCHASE_TYPE!==  'LOCALPURCHASE'\\\" style=\\\"width: 6%;\\\">TDS A/C\\r\\n                                </th>\\r\\n                                <th *ngIf=\\\"masterService.RefObj.PURCHASE_TYPE!==  'LOCALPURCHASE'\\\" style=\\\"width:9%;\\\">Supplier Name\\r\\n                                </th>\\r\\n                                <th  *ngIf=\\\"masterService.RefObj.PURCHASE_TYPE!==  'LOCALPURCHASE'\\\" style=\\\"width: 6%;\\\">AC Posting\\r\\n                                </th>\\r\\n                                <th *ngIf=\\\"masterService.RefObj.PURCHASE_TYPE!==  'LOCALPURCHASE'\\\" style=\\\"width: 8%;\\\">Taxable Add Bill\\r\\n                                </th>\\r\\n                                <th  style=\\\"width: 6%;\\\">Cost Mode\\r\\n                                </th>\\r\\n                                <th  style=\\\"width: 4%;\\\">Costing\\r\\n                                </th>\\r\\n                                <th style=\\\"width: 7%;\\\">Imp Doc Item\\r\\n                            </th>\\r\\n                            </tr>\\r\\n                        </thead>\\r\\n\\r\\n                        <tbody style=\\\"background-color: #e9e9e9;\\\"  [ngClass]=\\\"masterService.ShowMore?'ExpandTable':''\\\">\\r\\n                            <tr *ngFor=\\\"let l of _addionalcostService.GRPcostList;let i=index\\\"\\r\\n                                (dblclick)=\\\"TableRowDoubleClickEvent(l)\\\" (click)=\\\"checkRow(i)\\\">\\r\\n                                <td class=\\\"tableBorder\\\" style=\\\"width: 2%;text-align: center;\\\">{{i+1}}</td>\\r\\n                                <td class=\\\"tableBorder\\\" style=\\\"width: 5%;\\\" *ngIf=\\\"masterService.RefObj.PURCHASE_TYPE!==  'LOCALPURCHASE'\\\">{{l.Ref_BILLNO}}</td>\\r\\n                                <td *ngIf=\\\"masterService.RefObj.PURCHASE_TYPE!==  'LOCALPURCHASE'\\\"  class=\\\"tableBorder\\\" style=\\\"width:6%\\\">{{l.Ref_TRNDATE}}</td>\\r\\n\\r\\n                               \\r\\n                                <td class=\\\"tableBorder\\\" style=\\\"width:10%\\\">{{l.costAc.ACNAME}}\\r\\n                                    <div class=\\\"tooltips\\\">\\r\\n                                        <p *ngIf=\\\"l.DR_SL_ACNAME\\\">Sub Ledger :</p>\\r\\n                                        <p>{{l.DR_SL_ACNAME}}</p>\\r\\n                                     </div>\\r\\n                                </td>\\r\\n                                <td *ngIf=\\\"masterService.RefObj.PURCHASE_TYPE!==  'LOCALPURCHASE'\\\" class=\\\"tableBorder\\\"style=\\\"width: 7%;\\\">{{l.AdditionalDesc}}</td>\\r\\n                                <td class=\\\"tableBorder\\\" style=\\\"width: 5%;text-align: right;\\\">{{l.amount}}</td>\\r\\n                                <td class=\\\"tableBorder\\\" style=\\\"width: 6%;text-align: right;\\\" *ngIf=\\\"masterService.RefObj.PURCHASE_TYPE!==  'LOCALPURCHASE'\\\">{{l.AdditionalVAT}}</td>\\r\\n                                <td *ngIf=\\\"masterService.RefObj.PURCHASE_TYPE!==  'LOCALPURCHASE'\\\"  class=\\\"tableBorder\\\" style=\\\"width: 6%;\\\">{{l.remarks}}</td>\\r\\n                                <td *ngIf=\\\"masterService.RefObj.PURCHASE_TYPE!==  'LOCALPURCHASE'\\\"  class=\\\"tableBorder\\\" style=\\\"width: 8%;\\\">{{l.creditAc.ACNAME}}\\r\\n                                    <div class=\\\"tooltips\\\">\\r\\n                                        <p *ngIf=\\\"l.CR_SL_ACNAME\\\">Sub Ledger :</p>\\r\\n                                        <p>{{l.CR_SL_ACNAME}}</p>\\r\\n                                     </div>\\r\\n                                </td>\\r\\n                                <td *ngIf=\\\"masterService.RefObj.PURCHASE_TYPE!==  'LOCALPURCHASE'\\\"  class=\\\"tableBorder\\\" style=\\\"width: 6%;text-align: right;\\\">{{l.TDSAmount | twoDigitNumber}}</td>\\r\\n                                <td *ngIf=\\\"masterService.RefObj.PURCHASE_TYPE!==  'LOCALPURCHASE'\\\" class=\\\"tableBorder\\\" style=\\\"width: 6%;\\\">{{l.TDSAccount_Name}}\\r\\n                                    <div class=\\\"tooltips\\\">\\r\\n                                        <p *ngIf=\\\"l.TDS_SL_ACNAME\\\">Sub Ledger :</p>\\r\\n                                        <p>{{l.TDS_SL_ACNAME}}</p>\\r\\n                                     </div>\\r\\n                                </td>\\r\\n                                <td *ngIf=\\\"masterService.RefObj.PURCHASE_TYPE!==  'LOCALPURCHASE'\\\"  class=\\\"tableBorder\\\" style=\\\"width: 9%;\\\">{{l.Ref_SupplierName}}</td>\\r\\n                                <td *ngIf=\\\"masterService.RefObj.PURCHASE_TYPE!==  'LOCALPURCHASE'\\\" class=\\\"tableBorder\\\" style=\\\"width: 6%;\\\">{{l.DoAccountPosting}}</td>\\r\\n                                <td *ngIf=\\\"masterService.RefObj.PURCHASE_TYPE!==  'LOCALPURCHASE'\\\" class=\\\"tableBorder\\\" style=\\\"width: 8%;\\\">{{l.IsTaxableBill}}</td>\\r\\n                                <!-- <td class=\\\"tableBorder\\\" style=\\\"width:50px\\\">{{l.CostingType}}</td> -->\\r\\n                                <td class=\\\"tableBorder\\\" style=\\\"width: 6%;\\\">{{l.GCOSTMODE}}</td>\\r\\n                                <!-- <td class=\\\"tableBorder\\\" style=\\\"width:50px\\\">{{l.desca}}</td> -->\\r\\n                                <td class=\\\"tableBorder\\\" style=\\\"width: 5%;\\\">{{l.CostingNonCosting}}</td>\\r\\n                                <!-- <td class=\\\"tableBorder\\\" style=\\\"width:50px\\\">{{l.batch}}</td> -->\\r\\n                                <td class=\\\"tableBorder\\\" style=\\\"width: 6%;\\\">{{l.IS_ECA_ITEM}}</td>\\r\\n                            </tr>\\r\\n                        </tbody>\\r\\n                    </table>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"sticky-bottom\\\" style=\\\"background: gray;width: 98%\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-3\\\" style=\\\"text-align: end;\\\">\\r\\n            <label style=\\\"font-weight: bold;font-size: 14px; width: 100%;\\\">Non Taxable: {{this._addionalcostService.addGRPCostNonTaxableTotalAmount|\\r\\n                number}}</label>            \\r\\n        </div>\\r\\n        <div class=\\\"col-md-3\\\" style=\\\"text-align: end;\\\">\\r\\n            <label style=\\\"font-weight: bold;font-size: 14px; width: 100%\\\">Taxable: {{this._addionalcostService.addGRPCostTaxableTotalAmount|\\r\\n                number}}</label>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-3\\\" style=\\\"text-align: end;\\\">\\r\\n            <label style=\\\"font-weight: bold;font-size: 14px; width: 100%\\\">VAT: {{this._addionalcostService.addGRPCostTotalVat|\\r\\n                number}} </label>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-3\\\" style=\\\"text-align: end;\\\">\\r\\n            <label\\r\\n                style=\\\"font-size: 14px; font-weight: bold; width: 90%\\\">Net Amount: {{this._addionalcostService.addGRPCostTotalNetAmount|\\r\\n                number}} </label>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"modal-sticky\\\" *ngIf=\\\"masterService.showCostPopup\\\" style=\\\"display : block; padding: 0px;  margin-bottom: 25px;\\r\\nposition: absolute;right: 30%;top: 5px;width: 700px;z-index: 9999999;background-color: white;height: 290px;\\\">\\r\\n    <div style=\\\"padding: 0px;background: #f1f1f1;\\\">\\r\\n        <h4 style=\\\"text-align: center;background-color: #8cccfb; padding: 3px 0;\\\">\\r\\n            Local Purchase Cost Allocation Details\\r\\n        </h4>\\r\\n    </div>\\r\\n    <table style=\\\"width:98%;height:0px;margin-left: 7px;overflow-y: scroll;\\\">\\r\\n        <thead>\\r\\n            <tr\\r\\n            style=\\\"background-color:#8cccfb;    font-size: 13px; position: sticky;top: -1px;font-weight: bolder;height: 25px;\\\">\\r\\n            <!-- <th style=\\\"width: 3%\\\"></th> -->\\r\\n            <th style=\\\"width: 20%;text-align: center;\\\">Ref No</th>\\r\\n            <th style=\\\"width: 52%;text-align: center;\\\">ACNAME</th>\\r\\n            <th style=\\\"width: 15%;text-align: center;\\\">Amount</th>\\r\\n            <th style=\\\"width: 20%;text-align: center;\\\">PI Voucherno</th>\\r\\n        </tr>\\r\\n        </thead>\\r\\n\\r\\n        <tbody class=\\\"tablebody\\\">\\r\\n            <!-- <tr>\\r\\n                    <td style=\\\"text-align: center;width: 3%\\\"><input type=\\\"checkbox\\\" [(ngModel)]=\\\"ALLCHECKBOX\\\" \\r\\n                        (change)=\\\"selectAllCheckboxes()\\\">\\r\\n                    </td>\\r\\n                    <td colspan=\\\"4\\\">Select All</td>\\r\\n            </tr> -->\\r\\n            <tr style=\\\"font-size: 12px;\\\" *ngFor=\\\"let i of masterService.pi_costdetaillist; let index = index\\\" >\\r\\n                <!-- <td style=\\\"text-align: center;width: 3%\\\"><input type=\\\"checkbox\\\" [(ngModel)]=\\\"i.checkbox\\\">\\r\\n                </td> -->\\r\\n                <td style=\\\"width: 20%;padding-left: 3px;\\\">{{i.CAPITALPURCHASE_VCHRNO}}</td>\\r\\n                <td style=\\\"width: 52%;padding-left: 3px;\\\">{{i.ACNAME}}</td>\\r\\n                <td style=\\\"width: 15%;text-align: right;padding-right: 3px;\\\">{{i.AMOUNT| twoDigitNumber}}</td>\\r\\n                <td style=\\\"width: 20%;padding-left: 3px;\\\">{{i.VCHRNO}}</td>\\r\\n            </tr>\\r\\n        </tbody>\\r\\n    </table>\\r\\n    <div style=\\\"margin-top: 1%;\\\">\\r\\n        <!-- <button class=\\\"btn btn-sm btn-info pull-right\\\" style=\\\"margin-left: 1%;margin-right: 1%;\\\"(click)=\\\"cancel()\\\">Cancel</button> -->\\r\\n        <button class=\\\"btn btn-sm btn-info pull-right\\\" style=\\\"margin-right: 1%;\\\" (click)=\\\"ok()\\\">Load</button>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<generic-popup-grid #gridSubLedgerSettingListCr [popupsettings]=\\\"gridSubLedgerSettingCr\\\"\\r\\n  (onItemDoubleClick)=\\\"onSubLedgerSelectCr($event)\\\"></generic-popup-grid>\\r\\n  <generic-popup-grid #gridSubLedgerSettingListDr [popupsettings]=\\\"gridSubLedgerSettingDr\\\"\\r\\n  (onItemDoubleClick)=\\\"onSubLedgerSelectDr($event)\\\"></generic-popup-grid>\\r\\n  <generic-popup-grid #gridSubLedgerSettingListAc [popupsettings]=\\\"gridSubLedgerSettingAc\\\"\\r\\n  (onItemDoubleClick)=\\\"onSubLedgerSelectAc($event)\\\"></generic-popup-grid>\\r\\n\\r\\n\\r\\n<generic-popup-grid #genericGridACParty [popupsettings]=\\\"gridACListPartyPopupSettings\\\"\\r\\n    (onItemDoubleClick)=\\\"ACNameSelect_Additional($event)\\\"></generic-popup-grid>\\r\\n\\r\\n<generic-popup-grid #genericGridCreditACListParty [popupsettings]=\\\"gridCreditACListPartyPopupSettings\\\"\\r\\n    (onItemDoubleClick)=\\\"ACNameSelect_Credit($event)\\\"></generic-popup-grid>\\r\\n\\r\\n<generic-popup-grid #genericGridItem [popupsettings]=\\\"gridItemPopupSettings\\\"\\r\\n    (onItemDoubleClick)=\\\"dblClickItemSelection($event)\\\"></generic-popup-grid>\\r\\n\\r\\n<generic-popup-grid #genericGridBatch [popupsettings]=\\\"gridBatchPopupSettings\\\"\\r\\n    (onItemDoubleClick)=\\\"dblClickBatchSelection($event)\\\"></generic-popup-grid>\\r\\n\\r\\n<!-- <generic-popup-grid #genericGridRefBill [popupsettings]=\\\"gridPopupSettingsForRefBill\\\"\\r\\n  (onItemDoubleClick)=\\\"onRefBillSelected($event)\\\"></generic-popup-grid> -->\\r\\n\\r\\n<generic-popup-grid #genericGridACList [popupsettings]=\\\"gridACListPopupSettings\\\"\\r\\n    (onItemDoubleClick)=\\\"onAcSelect($event)\\\"></generic-popup-grid>\\r\\n\\r\\n<generic-popup-grid #genericGridSupplier [popupsettings]=\\\"gridPopupSettingsForSupplier\\\"\\r\\n    (onItemDoubleClick)=\\\"onSupplierSelected($event)\\\"></generic-popup-grid>\\r\\n\\r\\n    <generic-popup-grid #genericGridACPartyReverseJournal [popupsettings]=\\\"genericGridACPartyForReverseJournal\\\"\\r\\n    (onItemDoubleClick)=\\\"ACNameSelectForReverseJournal($event)\\\" (onPopUpClose)=\\\"resetReverseJournalEntry()\\\"></generic-popup-grid>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/Purchases/components/NewAdditionalCost/newadditionalCost.component.html\n// module id = 1343\n// module chunks = 1 2 3","module.exports = \"<style>\\r\\nth{\\r\\n        padding: 0px 5px;\\r\\n        font-family:  Roboto, Arial, sans-serif;\\r\\n        font-size: 13px;\\r\\n    }\\r\\n\\r\\n    td{\\r\\n        font-size: 12px;\\r\\n    }\\r\\n  \\r\\n</style>\\r\\n\\r\\n<form>\\r\\n    <div class=\\\"row\\\">\\r\\n\\r\\n        <!--<div class=\\\"content \\\">\\r\\n            <div class=\\\"col col-md-9 left\\\">-->\\r\\n\\r\\n        <div class=\\\"wrapper\\\">\\r\\n            <div style=\\\"margin-left:0px; margin-right:0px;\\\">\\r\\n                <!--<div class=\\\"col-md-9 plainBackGround \\\" style=\\\"min-height: 300px;height:300px\\\">-->\\r\\n                    <!-- style=\\\"background-color: #FFFFFF; overflow-x:scroll;overflow-x: scroll; display: block; position: relative;height: 54vh;\\\"> -->\\r\\n                <div #prodlistTable id=\\\"prodlistTable\\\" \\r\\n                style=\\\"overflow-x:scroll; overflow-y: scroll; display: block; position: relative; height: 59vh;\\\">\\r\\n                    <table id=\\\"fix\\\" class=\\\"table\\\" style=\\\"width:1500px;\\\">\\r\\n                        <thead>\\r\\n                            <tr style=\\\"border-bottom: 10px solid #c0c0c0;\\r\\n                            border-top: 2px solid #c0c0c0;\\r\\n                            height: 30px;\\r\\n                            background: silver;\\r\\n                            color: black;\\r\\n                            position: sticky;\\\">\\r\\n                                <th *ngFor=\\\"let head of _addionalcostService.header\\\" [style.text-align]=\\\"head['Alignment']\\\">{{head.TITLE}}\\r\\n                                  \\r\\n                                </th>\\r\\n                                <!--<th>Total\\r\\n                                  \\r\\n                                </th>\\r\\n                                <th>Cost Per Unit\\r\\n\\r\\n                                </th>\\r\\n                                <th *ngFor=\\\"let head of _additionalCostService.addtionalCostList\\\" style=\\\"width:5%\\\"></th> -->\\r\\n\\r\\n                            </tr>\\r\\n                        </thead>\\r\\n                        <!-- <tfoot>\\r\\n                            <tr>\\r\\n                                <td *ngFor=\\\"let head of source.footer\\\">\\r\\n\\r\\n                                </td>\\r\\n                               \\r\\n                            </tr>\\r\\n                        </tfoot> -->\\r\\n                        <tbody style=\\\"background-color: #e9e9e9;\\\">\\r\\n                            <!-- <ng-container *ngFor=\\\"let l of _addionalcostService.costList;let i=index\\\" > -->\\r\\n                                <!-- <ng-container *ngFor=\\\"let l of _addionalcostService.addtionalCostList;let i=index\\\">  -->\\r\\n                                    <tr *ngFor=\\\"let tbody of _additionalCostService.costdetail\\\" >\\r\\n                                <td *ngFor=\\\"let head of _addionalcostService.header\\\" [style.text-align]=\\\"head['Alignment']\\\" class=\\\"tableBorder\\\">\\r\\n                                    <!-- {{tbody[head.MAPPINGNAME]}} -->\\r\\n                                    <ng-container *ngIf=\\\"['prate', 'quantity', 'amount', 'grossAmnt'].includes(head.MAPPINGNAME)\\\">\\r\\n                                        <!-- Apply currency pipe -->\\r\\n                                        {{ tbody[head.MAPPINGNAME] | twoDigitNumber }}\\r\\n                                    </ng-container>\\r\\n                                    <!-- If not, display the value without formatting -->\\r\\n                                    <ng-container *ngIf=\\\"!['prate', 'quantity', 'amount', 'grossAmnt'].includes(head.MAPPINGNAME)\\\">\\r\\n                                        {{ tbody[head.MAPPINGNAME] }}\\r\\n                                    </ng-container>\\r\\n                                </td>\\r\\n                    \\r\\n                            </tr>\\r\\n\\r\\n                                 <!-- </ng-container> -->\\r\\n                            <!-- </ng-container> -->\\r\\n                            \\r\\n\\r\\n                        </tbody>\\r\\n                        <!-- <ng-container *ngFor=\\\"let l of _addionalcostService.addtionalCostList;let i=index\\\">\\r\\n                                <tbody style=\\\"background-color: #e9e9e9;\\\">\\r\\n                            <tr *ngFor=\\\"let tbody of _additionalCostService.costdetail\\\" >\\r\\n                                 <td *ngFor=\\\"let head of _addionalcostService.header\\\" [style.text-align]=\\\"head['Alignment']\\\" class=\\\"tableBorder\\\">\\r\\n                                    {{tbody[head.MAPPINGNAME]}}\\r\\n                                </td>\\r\\n                                \\r\\n                            </tr>\\r\\n                        </tbody>\\r\\n                        </ng-container> -->\\r\\n                     \\r\\n                    </table>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <!--   </div>\\r\\n            </div>\\r\\n        </div>-->\\r\\n\\r\\n    </div>\\r\\n\\r\\n</form>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/Purchases/components/NewAdditionalCost/newcostingDetail.component.html\n// module id = 1344\n// module chunks = 1 2 3","module.exports = \"<div class=\\\"sticky-top\\\">\\r\\n  <div class=\\\"clearfix\\\">\\r\\n    <div class=\\\"col-md-1\\\">\\r\\n      <voucher-master-toggler></voucher-master-toggler>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-4\\\">\\r\\n      <label\\r\\n        style=\\\"font-family: Segoe UI Light;font-weight: bold;font-size: 20px;padding-left: 5%;padding-top: 1%;width:auto\\\">{{ _trnMainService.pageHeading }}</label>\\r\\n      <label style=\\\"font-size: 14px;width: 34%;margin-top: 10px;\\\">&nbsp;>> {{ _trnMainService.TrnMainObj?.Mode | titlecase}}\\r\\n        Voucher</label>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-7\\\">\\r\\n      <account-master-action></account-master-action>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"main-container\\\" style=\\\"top:10px !important\\\">\\r\\n  <div class=\\\"clearfix\\\">\\r\\n    <!-- <voucher-date-entry style=\\\"margin-top:-15px;\\\"></voucher-date-entry> -->\\r\\n    <trnmain-voucher-entry></trnmain-voucher-entry>\\r\\n    <div style=\\\"padding-bottom: 29px;\\r\\n    margin-top: -20px;\\\">\\r\\n    <!-- <div *ngIf = \\\"_trnMainService.userSetting.ENABLELOCALPURCHASE == 1\\\" class=\\\"col-md-3\\\" style=\\\"padding-left: 1px;\\\">\\r\\n      <label style=\\\"margin-left: 20px;width: 100px;\\\">Purchase Type : </label>\\r\\n      <select style=\\\"padding: 0px !important;width: 50%;margin-top:0px; margin-left: 0%;\\\" [(ngModel)]=\\\"masterService.RefObj.PURCHASE_TYPE\\\" [disabled]=\\\"_trnMainService.TrnMainObj.Mode=='EDIT' || _trnMainService.TrnMainObj.Mode=='VIEW'\\\"\\r\\n        (change)=\\\"changePurchaseType()\\\">\\r\\n        <option value=\\\"IMPORTPURCHASE\\\">Import Purchase</option>\\r\\n        <option value=\\\"LOCALPURCHASE\\\">Local Purchase</option>\\r\\n      </select>\\r\\n    </div> -->\\r\\n     <div class=\\\"col-md-3\\\" style=\\\"padding-left: 1px;\\\">\\r\\n      <label style=\\\"margin-left: 20px;\\\">Ref PI NO : </label>\\r\\n      <input id =\\\"REFPINO_AD\\\" type=\\\"test\\\" width=\\\"200px\\\" style=\\\"width: 60%;\\\" placeholder=\\\"Press Enter or Tab\\\"\\r\\n        (keydown.Tab)=\\\"TabRefBill()\\\" (keydown.Enter)=\\\"TabRefBill()\\\" [(ngModel)]='masterService.RefObj.Refno' \\r\\n        (keydown)=\\\"keyPress($event)\\\" autocomplete=\\\"off\\\"\\r\\n        [disabled]=\\\"_trnMainService.TrnMainObj.Mode=='EDIT' || _trnMainService.TrnMainObj.Mode=='VIEW' || isDragging\\\" >\\r\\n      </div>\\r\\n   \\r\\n      <div class=\\\"col-md-3\\\" style=\\\"padding-left: 0px;\\\">\\r\\n        <label style=\\\"margin-left: 11px;\\\">Invoice No : </label>\\r\\n      <input type=\\\"test\\\" width=\\\"200px\\\" style=\\\"width: 57%;\\\" \\r\\n        (keydown.Tab)=\\\"TabRefBill()\\\" (keydown.Enter)=\\\"TabRefBill()\\\" [(ngModel)]='masterService.RefObj.InvoiceNo'\\r\\n        readonly disabled>\\r\\n      </div>\\r\\n\\r\\n       <div class=\\\"col-md-3\\\" style=\\\"padding-left: 0px;\\\">\\r\\n        <label style=\\\"margin-left: -30px;\\\">Supplier Name:</label>\\r\\n      <input type=\\\"test\\\" width=\\\"200px\\\" style=\\\"margin-left: 25px;width: 53%;\\\" \\r\\n        (keydown.Tab)=\\\"TabRefBill()\\\" (keydown.Enter)=\\\"TabRefBill()\\\" [(ngModel)]='masterService.RefObj.SupplierName' readonly disabled>\\r\\n      </div>\\r\\n     <div class=\\\"col-md-3\\\" style=\\\"padding-left: 0px;\\\">\\r\\n        <label style=\\\"margin-left: -30px; width: auto !important;\\\">{{masterService.voucherNature}}</label>\\r\\n     \\r\\n      </div>\\r\\n      </div>\\r\\n    \\r\\n       \\r\\n    \\r\\n  </div>\\r\\n  <div class=\\\"clearfix\\\" style=\\\"margin-top: 5px\\\">\\r\\n    <ul class=\\\"nav nav-tabs\\\" style=\\\"background-color: #e9e9e9 !important\\\">\\r\\n      <li class=\\\"nav-item\\\">\\r\\n        <a class=\\\"nav-link active\\\" href=\\\"#Purchase\\\" data-toggle=\\\"tab\\\" style=\\\"color:black\\\">Purchase Detail</a>\\r\\n      </li>\\r\\n      <li class=\\\"nav-item\\\">\\r\\n        <a class=\\\"nav-link\\\" href=\\\"#AdditionalCost\\\" data-toggle=\\\"tab\\\" style=\\\"color:black\\\">Group Cost</a>\\r\\n      </li>\\r\\n      <li class=\\\"nav-item\\\">\\r\\n        <a class=\\\"nav-link\\\" href=\\\"#AdditionalIndividualCost\\\" data-toggle=\\\"tab\\\" style=\\\"color:black\\\">Individual Costing</a>\\r\\n      </li>\\r\\n      <li class=\\\"nav-item\\\">\\r\\n        <a class=\\\"nav-link\\\" href=\\\"#CostingDetails\\\" data-toggle=\\\"tab\\\" style=\\\"color:black\\\">Costing Details</a>\\r\\n      </li>\\r\\n\\r\\n      <!-- <li class=\\\"nav-item\\\" *ngIf = \\\"_trnMainService.userSetting.EnableRateEditInAddCosting == 1\\\">\\r\\n        <a class=\\\"nav-link\\\" href=\\\"#ImportDocumentDetails\\\" data-toggle=\\\"tab\\\" style=\\\"color:black\\\" (click)=\\\"ImportDetailsClick()\\\">Import Document Details</a>\\r\\n      </li> -->\\r\\n    </ul>\\r\\n    <form [formGroup]=\\\"form\\\">\\r\\n      <div class=\\\"tab-content\\\">\\r\\n        <div class=\\\"tab-pane active\\\" id=\\\"Purchase\\\">\\r\\n          \\r\\n            <div class=\\\"col-md-12 row\\\" style=\\\"width: 100%;\\\">\\r\\n              <new-purchaseDetail></new-purchaseDetail>\\r\\n            </div>\\r\\n          \\r\\n        </div>\\r\\n        <div class=\\\"tab-pane\\\" id=\\\"AdditionalCost\\\">\\r\\n          <!-- Contact Details -->\\r\\n          <div class=\\\"col-md-12 row\\\" >\\r\\n            <newadditionalCost></newadditionalCost>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"tab-pane\\\" id=\\\"CostingDetails\\\">\\r\\n          <!-- Contact Details -->\\r\\n          <div class=\\\"col-md-12 row\\\">\\r\\n            <new-costingDetail></new-costingDetail>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"tab-pane\\\" id=\\\"AdditionalIndividualCost\\\">\\r\\n          <!-- Contact Details -->\\r\\n          <div class=\\\"col-md-12 row\\\" >\\r\\n            <newIndividualCost></newIndividualCost>\\r\\n          </div>\\r\\n        </div>\\r\\n        <!-- <div *ngIf = \\\"_trnMainService.userSetting.EnableRateEditInAddCosting == 1\\\"   class=\\\"tab-pane\\\" id=\\\"ImportDocumentDetails\\\">\\r\\n          <ba-card>\\r\\n            <div class=\\\"col-md-12 row\\\" style=\\\"width: 100%; height: 23rem;\\\">\\r\\n              <ImportDocumentDetailsComponent></ImportDocumentDetailsComponent>\\r\\n            </div>\\r\\n          </ba-card>\\r\\n          \\r\\n        </div> -->\\r\\n\\r\\n      </div>\\r\\n    </form>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<generic-popup-grid #genericGridRefBill [popupsettings]=\\\"gridPopupSettingsForRefBill\\\"\\r\\n  (onItemDoubleClick)=\\\"onRefBillSelected($event)\\\"></generic-popup-grid>\\r\\n\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/Purchases/components/NewAdditionalCost/newmasterPageAdditional.component.html\n// module id = 1345\n// module chunks = 1 2 3","module.exports = \"<style>\\r\\n    th{\\r\\n        padding: 0px 5px;\\r\\n        font-family:  Roboto, Arial, sans-serif;\\r\\n        font-size: 13px;\\r\\n    }\\r\\n\\r\\n    td{\\r\\n        font-size: 12px;\\r\\n    }\\r\\n\\r\\n    tbody {\\r\\n    display:block;\\r\\n    height:48vh;\\r\\n    overflow:auto;\\r\\n}\\r\\n\\r\\nthead, tbody tr {\\r\\n  display:table;\\r\\n  width:100%;\\r\\n  table-layout:fixed;/* even columns width , fix width of table too*/\\r\\n}\\r\\n</style>\\r\\n<form>\\r\\n    <div class=\\\"row\\\" style=\\\"margin-left: -10px; width:104%;\\\">\\r\\n\\r\\n        <!--<div class=\\\"content \\\">\\r\\n            <div class=\\\"col col-md-9 left\\\">-->\\r\\n\\r\\n        <div class=\\\"wrapper\\\">\\r\\n            <div style=\\\"margin-left:0px; margin-right:0px;\\\">\\r\\n                <!--<div class=\\\"col-md-9 plainBackGround \\\" style=\\\"min-height: 300px;height:300px\\\">-->\\r\\n\\r\\n                <div #prodlistTable id=\\\"prodlistTable\\\" style=\\\"background-color: #FFFFFF;\\\" style=\\\"width: 100%;\\\">\\r\\n                    <table id=\\\"fix\\\" class=\\\"table\\\">\\r\\n                        <thead>\\r\\n                            <tr style=\\\"border-bottom: 6px solid #c0c0c0;\\r\\n                            border-top: 2px solid #c0c0c0;\\r\\n                            height: 30px;\\r\\n                            background: silver;\\r\\n                            color: black;\\r\\n                            position: sticky;\\\">\\r\\n                                <th style=\\\"width:3%\\\">S.N\\r\\n                                   \\r\\n                                </th>\\r\\n                                <th style=\\\"width:6%\\\">Item Code\\r\\n                                 \\r\\n                                </th>\\r\\n                                <th style=\\\"width:30%\\\">Item Description\\r\\n                                   \\r\\n                                </th>\\r\\n\\r\\n                                <th style=\\\"width:5%\\\">Unit\\r\\n                                  </th>\\r\\n\\r\\n                                <th style=\\\"width:8%\\\">Batch\\r\\n                                   \\r\\n                                </th>\\r\\n\\r\\n                                <th style=\\\"width:8%\\\">Rate\\r\\n                                  \\r\\n                                </th>\\r\\n                                <th style=\\\"width:5%\\\">Qty\\r\\n                                  \\r\\n                                </th>\\r\\n                               \\r\\n                                <th style=\\\"width:12%\\\">Amount\\r\\n                                  \\r\\n                                </th>\\r\\n                                \\r\\n                                <!-- <th style=\\\"width:10%\\\">Net Amount\\r\\n                                  \\r\\n                                </th> -->\\r\\n\\r\\n                            </tr>\\r\\n                        </thead>\\r\\n                       \\r\\n                        <tbody style=\\\"background-color: #e9e9e9;\\\">\\r\\n                            <tr *ngFor=\\\"let c of _additionalCostService.addtionalCostList; let i=index\\\">\\r\\n                                <td  style=\\\"width:3%\\\" class=\\\"tableBorder\\\">{{i+1}}</td>\\r\\n                                <td style=\\\"width:6%\\\" class=\\\"tableBorder\\\">{{c.menucode}}</td>\\r\\n                                <td style=\\\"width:30%\\\" class=\\\"tableBorder\\\">{{c.desca}}</td>\\r\\n                                <td style=\\\"width:5%\\\" class=\\\"tableBorder\\\">{{c.unit}}</td>\\r\\n                                <td style=\\\"width:8%\\\" class=\\\"tableBorder\\\">{{c.batch}}</td>\\r\\n                                \\r\\n                                <td  class=\\\"tableBorder\\\" style=\\\"text-align: right; width: 8%;\\\">\\r\\n                                  {{c.prate|twoDigitNumber}}</td>\\r\\n                                <!-- <td class=\\\"tableBorder\\\">{{c.rate|twoDigitNumber}}</td> -->\\r\\n                                <td class=\\\"tableBorder\\\" style=\\\"text-align: right; width: 5%;\\\">{{c.quantity}}</td>\\r\\n                              \\r\\n                                <td class=\\\"tableBorder\\\" style=\\\"text-align: right; width: 12%;\\\">{{c.amount|twoDigitNumber}}</td>\\r\\n                                <!-- <td class=\\\"tableBorder\\\">{{c.nAmount|twoDigitNumber}}</td> -->\\r\\n                            </tr>\\r\\n\\r\\n                        </tbody>\\r\\n                        <!-- <tfoot>\\r\\n                            <tr>\\r\\n                                <td colspan=\\\"5\\\">\\r\\n\\r\\n                                </td>\\r\\n                                <td>\\r\\n                                    <div class=\\\"c3\\\">\\r\\n                                        Total Balance :\\r\\n                                    </div>\\r\\n                                </td>\\r\\n                               \\r\\n                                <td>\\r\\n                                    <div class=\\\"c3\\\" style=\\\"margin-left:1px\\\">\\r\\n                                        {{_additionalCostService.loadedTrnmain.TOTAMNT|twoDigitNumber}}\\r\\n                                    </div>\\r\\n                                </td>\\r\\n                                \\r\\n                                <td>\\r\\n                                    <div class=\\\"c3\\\" style=\\\"margin-left:1px\\\">\\r\\n                                        {{_additionalCostService.loadedTrnmain.NETWITHOUTROUNDOFF|twoDigitNumber}}\\r\\n                                    </div>\\r\\n                                </td>\\r\\n                            </tr>\\r\\n                        </tfoot> -->\\r\\n                    </table>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <!--   </div>\\r\\n            </div>\\r\\n        </div>-->\\r\\n\\r\\n    </div>\\r\\n\\r\\n</form>\\r\\n\\r\\n<div class=\\\"sticky-bottom\\\" style=\\\"background: gray;\\\">\\r\\n    <div class=\\\"row\\\" >\\r\\n      <div class=\\\"col-md-6\\\">\\r\\n        &nbsp;\\r\\n      </div>\\r\\n      <div class=\\\"col-md-4\\\" style=\\\"text-align: end;\\\">\\r\\n        <label style=\\\"font-weight: bold;font-size: 16px; width: 125px;\\\">Total Balance</label>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-2\\\" style=\\\"text-align: end;\\\">\\r\\n        <label style=\\\"font-size: 15px; font-weight: bold; margin-right: 2rem; \\\">{{_additionalCostService.loadedTrnmain.TOTAMNT|twoDigitNumber}}</label>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/Purchases/components/NewAdditionalCost/newpurchaseDetail.component.html\n// module id = 1346\n// module chunks = 1 2 3","module.exports = \"<style>\\r\\n  .table tr th {\\r\\n    text-align: center;\\r\\n    vertical-align: middle;\\r\\n  }\\r\\n</style>\\r\\n\\r\\n<div class=\\\"sticky-top\\\" *ngIf=\\\"!_trnMainService.TrnMainObj.hasShipName\\\">\\r\\n  <div class=\\\"row clearfix\\\">\\r\\n    <div class=\\\"col-md-2\\\">\\r\\n      <voucher-master-toggler></voucher-master-toggler>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-2\\\">\\r\\n      <h2 style=\\\"color: black;\\\">{{ _trnMainService.pageHeading }}</h2>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-8\\\">\\r\\n      <voucher-master-action \\r\\n      (onLoadFromHoTaxInvoiceClickEmit)=\\\"showSupplierSalesInvoiceFromHOPopup($event)\\\"\\r\\n      (onLoadFromSAPFTPClickEmit)=\\\"showSAPPurchaseInvoice($event)\\\"\\r\\n      (onPInvoieFileUploadPopupEmit)=\\\"showPurchaseInvoicePopup($event)\\\"\\r\\n      >\\r\\n    </voucher-master-action>\\r\\n      <generic-popup-grid #genericHOSalesInvoiceGridTI [popupsettings]=\\\"gridHoSalesInvoicePopupSettings\\\"\\r\\n        (onItemDoubleClick)=\\\"onHoSalesInvoiceSelect($event)\\\"></generic-popup-grid>\\r\\n\\r\\n      <generic-popup-grid #genericsGridSAPPI [popupsettings]=\\\"gridSAPPIPopupSettings\\\"\\r\\n        (onItemDoubleClick)=\\\"onSAPPurchaseInvoiceSelect($event)\\\">\\r\\n      </generic-popup-grid>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<div class=\\\"main-container row clearfix\\\" *ngIf=\\\"!_trnMainService.TrnMainObj.hasShipName\\\">\\r\\n  <trnmain-purchase-entry></trnmain-purchase-entry>\\r\\n  <!-- <div *ngIf=\\\"masterService.ShowMore == false\\\" class=\\\"row clearfix\\\">\\r\\n  </div> -->\\r\\n  <div class=\\\"row\\\" style=\\\"margin-top: 5px\\\">\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n      <productentry></productentry>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<div class=\\\"sticky-bottom\\\" *ngIf=\\\"!_trnMainService.TrnMainObj.hasShipName\\\">\\r\\n  <voucher-total-area></voucher-total-area>\\r\\n</div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n<div *ngIf=\\\"_trnMainService.TrnMainObj.hasShipName\\\">\\r\\n\\r\\n  <div style=\\\"display : block; padding: 0px;left: 10px;\\r\\n  padding: 0px;\\r\\n  top: 101px;\\r\\n  width: 99%;\\\">\\r\\n    <!-- Modal content -->\\r\\n    <div>\\r\\n      <div>\\r\\n        <div>\\r\\n          <div style=\\\"padding: 0px;background: #ecad79;\\\">\\r\\n            <div class=\\\"col-md-3\\\">\\r\\n              <h3>Sales Invoice</h3>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-3\\\">\\r\\n              <h3>\\r\\n                Ship To:-{{_trnMainService.TrnMainObj.AdditionalObj.SHIPNAMEVIEW}}\\r\\n              </h3>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-3\\\">\\r\\n              <button class=\\\"btn btn-info\\\" (click)=\\\"saveTaxInvoice()\\\">Save</button>\\r\\n              <button class=\\\"btn btn-info\\\" (click)=\\\"popupClose()\\\">Cancel</button>\\r\\n            </div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n          </div>\\r\\n          <div>\\r\\n\\r\\n            <div style=\\\"background-color: #FFFFFF;height:450px;overflow-x: scroll;width: 100%\\\">\\r\\n              <table class=\\\"table\\\" style=\\\"margin-bottom: 5px; font-size: 12.5px;width: 2000px;overflow: scroll\\\">\\r\\n                <tr style=\\\"border-bottom: 2px solid #E6E6E6; border-top: 2px solid #E6E6E6;    height: 30px;\\r\\n                                      background: silver;\\r\\n                                      color: black;\\\">\\r\\n                  <th>S.No.</th>\\r\\n                  <th>Code</th>\\r\\n                  <th>Description</th>\\r\\n                  <th>BatchNo\\r\\n                  </th>\\r\\n                  <th>Mfg Dt\\r\\n                  </th>\\r\\n                  <th>Exp Dt\\r\\n                  </th>\\r\\n                  <th>Qty</th>\\r\\n                  <th>Packing</th>\\r\\n                  <th>MRP</th>\\r\\n                  <th>Cost Price</th>\\r\\n                  <th>Selling Price</th>\\r\\n                  <th>Disc %</th>\\r\\n                  <th>Disc Amt</th>\\r\\n                  <th>GST%</th>\\r\\n                  <th>GST TaxAmt</th>\\r\\n                  <th>P Dis.</th>\\r\\n                  <th>S Dis.</th>\\r\\n                  <th>L Dis.</th>\\r\\n                  <th>OS Dis.</th>\\r\\n\\r\\n                  <th>Net Amnt</th>\\r\\n                  <th>Remarks</th>\\r\\n                </tr>\\r\\n                <tbody *ngFor=\\\"let tList of _trnMainService.TrnMainObj.ProdList;let i=index\\\" style=\\\"border: 1px\\\">\\r\\n                  <tr style=\\\"border: 1px solid #e6e6e6;max-height:25px;\\\">\\r\\n                    <td id=\\\"sno{{i}}\\\" style=\\\"border: 1px solid #e6e6e6;width:20px;\\\">{{i+1}}</td>\\r\\n\\r\\n                    <td style=\\\"height:23px;border: 1px solid #e6e6e6;width:80px\\\">\\r\\n                      {{tList.MENUCODE}}\\r\\n                    </td>\\r\\n\\r\\n                    <td style=\\\"border: 1px solid #e6e6e6;width:300px;background-color: #f9f9f9;\\\">\\r\\n                      {{tList.ITEMDESC}}\\r\\n                    </td>\\r\\n                    <td style=\\\"border: 1px solid #e6e6e6;width:300px;background-color: #f9f9f9;\\\">\\r\\n                      {{tList.BATCH}}\\r\\n                    </td>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n                    <td style=\\\"height:23px;border: 1px solid #e6e6e6;width:150px\\\">{{tList.MFGDATE | date: 'dd-MM-yyyy'}}\\r\\n                    </td>\\r\\n\\r\\n                    <td style=\\\"height:23px;border: 1px solid #e6e6e6;width:150px\\\">{{tList.EXPDATE | date: 'dd-MM-yyyy'}}\\r\\n                    </td>\\r\\n                    <td style=\\\"border: 1px solid #e6e6e6;width:300px;background-color: #f9f9f9;\\\">\\r\\n                      {{_trnMainService.TrnMainObj.TOTALQTY}}\\r\\n                    </td>\\r\\n\\r\\n                    <td style=\\\"height:23px;border: 1px solid #e6e6e6;width:100px\\\">\\r\\n                      {{tList.ALTUNIT}}\\r\\n                    </td>\\r\\n\\r\\n                    <td style=\\\"height:23px;border: 1px solid #e6e6e6;width:100px;background-color: #f9f9f9;\\\">\\r\\n                      {{tList.MRP | twoDigitNumber}}</td>\\r\\n\\r\\n\\r\\n\\r\\n                    <td style=\\\"height:23px;border: 1px solid #e6e6e6;width:100px\\\"> {{tList.ALTRATE2 | twoDigitNumber}}\\r\\n                    </td>\\r\\n                    <td style=\\\"height:23px;border: 1px solid #e6e6e6;width:100px\\\"> {{tList.ALTRATE | twoDigitNumber}}\\r\\n\\r\\n                    </td>\\r\\n                    <td style=\\\"height:23px;border: 1px solid #e6e6e6;width:100px\\\"> {{tList.INDDISCOUNTRATE}}\\r\\n\\r\\n                    </td>\\r\\n\\r\\n                    <td style=\\\"height:23px;border: 1px solid #e6e6e6;width:100px\\\">{{tList.INDDISCOUNT}}\\r\\n\\r\\n\\r\\n\\r\\n                    <td style=\\\"height:23px;border: 1px solid #e6e6e6;width:100px;\\\">\\r\\n\\r\\n                      {{tList.GSTRATE_ONLYFORSHOWING}}</td>\\r\\n                    <td style=\\\"height:23px;border: 1px solid #e6e6e6;width:100px;\\\">\\r\\n                      {{_trnMainService.nullToZeroConverter(tList.VAT) |twoDigitNumber}}</td>\\r\\n                    <td style=\\\"height:23px;border: 1px solid #e6e6e6;width:100px;\\\">\\r\\n                      {{ _trnMainService.nullToZeroConverter(tList.PrimaryDiscount)|twoDigitNumber}}</td>\\r\\n                    <td style=\\\"height:23px;border: 1px solid #e6e6e6;width:100px;\\\">\\r\\n                      {{_trnMainService.nullToZeroConverter(tList.SecondaryDiscount)|twoDigitNumber}}</td>\\r\\n                    <td style=\\\"height:23px;border: 1px solid #e6e6e6;width:100px;\\\">\\r\\n                      {{_trnMainService.nullToZeroConverter(tList.LiquiditionDiscount) |twoDigitNumber}}</td>\\r\\n                    <td style=\\\"height:23px;border: 1px solid #e6e6e6;width:100px;\\\">\\r\\n                    </td>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n                    <td style=\\\"height:23px;border: 1px solid #e6e6e6;width:100px\\\">\\r\\n                      {{_trnMainService.nullToZeroConverter(tList.NETAMOUNT)|twoDigitNumber}}</td>\\r\\n\\r\\n\\r\\n\\r\\n                    <td style=\\\"height:23px;border: 1px solid #e6e6e6;width:150px\\\">{{tList.REMARKS}}\\r\\n                    </td>\\r\\n\\r\\n                  </tr>\\r\\n\\r\\n                </tbody>\\r\\n\\r\\n              </table>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<!-- <file-uploader-popup\\r\\n    #fileUploadPopup \\r\\n    [popupsettings]=\\\"fileUploadPopupSettings\\\"\\r\\n    (onUploaded) = \\\"fileUploadSuccess($event)\\\"\\r\\n> \\r\\n</file-uploader-popup> -->\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/Purchases/components/purchaseinvoice/addpurchaseinvoice.html\n// module id = 1347\n// module chunks = 1 2 3","import { Component } from '@angular/core';\r\nimport { TransactionService } from \"./../../../../common/Transaction Components/transaction.service\";\r\nimport { PREFIX } from \"./../../../../common/interfaces/Prefix.interface\";\r\n\r\nimport { MasterRepo } from \"./../../../../common/repositories/masterRepo.service\";\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { SpinnerService } from '../../../../common/services/spinner/spinner.service';\r\nimport { AlertService } from '../../../../common/services/alert/alert.service';\r\nimport * as moment from 'moment';\r\n\r\n\r\n@Component({\r\n    selector: \"debitnote-itembase\",\r\n    template: require('./debitnote-itembase.component.html'),\r\n    providers: [TransactionService],\r\n    styles: [require('../../../modal-style.css')]\r\n})\r\n\r\nexport class DebitNoteItemBaseComponent {\r\n  \r\n\r\n   \r\n    prefix: PREFIX = <PREFIX>{};\r\n    public printCopyCaption: string = '';\r\n\r\n    private myTimer: any;\r\n    checkstatus = true;\r\n    checkView: string;\r\n\r\n    constructor(public masterService: MasterRepo, private _trnMainService: TransactionService,\r\n    private _activatedRoute: ActivatedRoute,\r\n    private _loadingSerive: SpinnerService,\r\n    private _alertService: AlertService) {\r\n        this._trnMainService.initialFormLoad(16);\r\n        this._trnMainService.pageHeading = \"Purchase Return\";\r\n        this._trnMainService.DrillMode = \"New\";\r\n       \r\n    }\r\n\r\n    ngOnInit() {\r\n        this._activatedRoute.queryParams.subscribe(params => {\r\n            if (params['mode']==\"DRILL\") {\r\n              let VCHR = params['voucher']\r\n              let vparams = []\r\n              vparams = VCHR.split('-');\r\n              let pcl = params['pcl'];\r\n              this.masterService.PCL_VALUE=pcl;\r\n              this._loadingSerive.show(\"Loading Invoice\")\r\n              this.masterService.LoadTransaction(VCHR, vparams[1], vparams[2]).subscribe((res) => {\r\n                if (res.status == \"ok\") {\r\n                  this._loadingSerive.hide()\r\n                  this._trnMainService.TrnMainObj = res.result;\r\n                  this._trnMainService.TrnMainObj.VoucherType = 16;\r\n                  if(this._trnMainService.TrnMainObj.VoucherAbbName=='DN'){\r\n                    this._trnMainService.pageHeading = \"Purchase Return\";\r\n                  }\r\n                  else if(this._trnMainService.TrnMainObj.VoucherAbbName=='DX'){\r\n                    this._trnMainService.pageHeading = \"Reverse Purchase Return\";\r\n                    this.masterService.PCL_VALUE=2;\r\n                  }\r\n                  this._trnMainService.TrnMainObj.VoucherPrefix = \"DN\";\r\n                  this._trnMainService.TrnMainObj.Mode = \"VIEW\";      \r\n                  this._trnMainService.TrnMainObj.TRNDATE=(this._trnMainService.TrnMainObj.TRNDATE == null || this._trnMainService.TrnMainObj.TRNDATE == \"\" || this._trnMainService.TrnMainObj.TRNDATE === undefined)?this._trnMainService.TrnMainObj.TRNDATE:moment(this._trnMainService.TrnMainObj.TRNDATE).format(\"YYYY-MM-DD\");\r\n                  this._trnMainService.TrnMainObj.TRN_DATE=(this._trnMainService.TrnMainObj.TRN_DATE == null || this._trnMainService.TrnMainObj.TRN_DATE == \"\" || this._trnMainService.TrnMainObj.TRN_DATE === undefined)?this._trnMainService.TrnMainObj.TRN_DATE:moment(this._trnMainService.TrnMainObj.TRN_DATE).format(\"YYYY-MM-DD\");\r\n                  this._trnMainService.TrnMainObj.TOTALQTY=0\r\n                  this._trnMainService.TrnMainObj.GROSSAMNT=0\r\n                  this._trnMainService.TrnMainObj.ProdList.forEach(x=>{\r\n                    // x.ALTERNATEQUANTIY == 0 ?x.ALTERNATEQUANTIY=x.AltQty:x.ALTERNATEQUANTIY,\r\n                    this._trnMainService.TrnMainObj.TOTALQTY += this._trnMainService.nullToZeroConverter(x.ALTERNATEQUANTIY);\r\n                    this._trnMainService.TrnMainObj.GROSSAMNT += this._trnMainService.nullToZeroConverter(x.AMOUNT);\r\n                   })\r\n                   this._trnMainService.TrnMainObj.NETWITHOUTROUNDOFF= this._trnMainService.TrnMainObj.NETWITHOUTROUNDOFF==0?  this._trnMainService.TrnMainObj.NETAMNT:this._trnMainService.TrnMainObj.NETWITHOUTROUNDOFF\r\n                  if (this._trnMainService.TrnMainObj.AdditionalObj == null) {\r\n                    this._trnMainService.TrnMainObj.AdditionalObj = <any>{};\r\n                  }\r\n                }\r\n              }, err => {\r\n                this._loadingSerive.hide()\r\n                this._alertService.error(err)\r\n              })\r\n        \r\n            }\r\n        });\r\n    }\r\n\r\n   \r\n\r\n  \r\n\r\n  \r\n\r\n    public printIt() {\r\n        clearInterval(this.myTimer);\r\n        try {\r\n            //alert(\"reached printIT\")\r\n            let printContents, popupWin;\r\n            printContents = document.getElementById('InvoiceNewPrint').innerHTML;\r\n            ////console.log(\"reach CreditNote\", printContents);\r\n            popupWin = window.open('', '_blank', 'top=0,left=0,height=1000px,width=1500px'); //console.log({ POPUP: popupWin })\r\n            // popupWin.document.open();\r\n            popupWin.document.write(`\r\n          <html>\r\n              <head>                  \r\n                  <style>\r\n                      .InvoiceHeader{\r\n                text-align:center;\r\n                font-weight:bold\r\n            }\r\n            p\r\n            {\r\n                height:5px;\r\n            }\r\n            table{\r\n                margin:5px\r\n            }\r\n            .summaryTable{\r\n                float: right;\r\n                border: none;\r\n            }\r\n\r\n            .summaryTable  td{\r\n                text-align:right;\r\n                border:none;\r\n            }\r\n\r\n            .itemtable{\r\n                border: 1px solid black;\r\n                border-collapse: collapse;\r\n            }\r\n            .itemtable th{                \r\n                height:30px;\r\n                font-weight:bold;\r\n            }\r\n            .itemtable th, td {               \r\n                border: 1px solid black;\r\n                padding:2px;\r\n\r\n            }\r\n                  </style>\r\n              </head>\r\n              <body onload=\"window.print();window.close()\">${printContents}\r\n              </body>\r\n          </html>`\r\n            );\r\n            popupWin.document.close();\r\n        }\r\n        catch (ex) {\r\n            //console.log({ printitError: ex })\r\n        }\r\n    }\r\n   \r\n  \r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/pages/Purchases/components/DebitNoteItemWise/debitnote-itembase.component.ts","import {Component} from '@angular/core';\r\n\r\n@Component({\r\n    selector:'purchases',\r\n    template:'<router-outlet></router-outlet>'\r\n})\r\n\r\nexport class Purchases{\r\n    constructor(){};\r\n}\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/pages/Purchases/purchases.component.ts","import { Component, OnInit, Output, EventEmitter, Input } from \"@angular/core\";\r\nimport { TransactionService } from \"./transaction.service\";\r\nimport * as moment from 'moment'\r\n\r\n@Component({\r\n    selector: \"delivery-order\",\r\n    template: require('./delivery-order.component.html'),\r\n    styles: [require('../../pages/Style.css'), require('./_theming.scss')]\r\n})\r\nexport class DeliveryOrderComponent {\r\n    @Input() title: string = \"\"\r\n    @Output() advanceSearchEmiter: EventEmitter<any> = new EventEmitter<any>();\r\n    @Output() dateRangeChange:EventEmitter<any>= new EventEmitter<any>();\r\n    selectedDate: { startDate: moment.Moment, endDate: moment.Moment };\r\n    alwaysShowCalendars: boolean = true;\r\n    ranges: any = {\r\n        'Today': [moment(), moment()],\r\n        'Yesterday': [moment().subtract(1, 'days'), moment().subtract(1, 'days')],\r\n        'Last 7 Days': [moment().subtract(6, 'days'), moment()],\r\n        'Last 30 Days': [moment().subtract(29, 'days'), moment()],\r\n        'This Month': [moment().startOf('month'), moment().endOf('month')],\r\n        'Last Month': [moment().subtract(1, 'month').startOf('month'), moment().subtract(1, 'month').endOf('month')],\r\n        'Financial Year': [moment().set('date', 1).set('month', 3), moment().endOf('month').set('month', 2).add(1, 'year')],\r\n\r\n    }\r\n    locale = {\r\n        format: 'DD/MM/YYYY',\r\n        direction: 'ltr', // could be rtl\r\n        weekLabel: 'W',\r\n        separator: ' - ', // default is ' - '\r\n        cancelLabel: 'Cancel', // detault is 'Cancel'\r\n        applyLabel: 'Okay', // detault is 'Apply'\r\n        clearLabel: 'Clear', // detault is 'Clear'\r\n        customRangeLabel: 'Custom Range',\r\n        daysOfWeek: moment.weekdaysMin(),\r\n        monthNames: moment.monthsShort(),\r\n        firstDay: 0 // first day is monday\r\n    }\r\n    \r\n    constructor(public _transactionService: TransactionService) {\r\n        this.selectedDate = {\r\n            startDate: moment(),\r\n            endDate: moment()\r\n        }\r\n    }\r\n\r\n    advanceSearch() {\r\n        this.advanceSearchEmiter.emit(true)\r\n    }\r\n\r\n    dateChanged(date) {\r\n        this._transactionService.FilterObj.from = moment(this.selectedDate.startDate).format('YYYY-MM-DD HH:mm:ss')\r\n        this._transactionService.FilterObj.to = moment(this.selectedDate.endDate).format('YYYY-MM-DD HH:mm:ss')\r\n        this.dateRangeChange.emit(this.selectedDate)\r\n    }\r\n\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/common/Transaction Components/delivery-order.component.ts","import {\r\n  Component,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  HostListener,\r\n  OnChanges\r\n} from \"@angular/core\";\r\nimport { FormControl } from \"@angular/forms\";\r\n\r\n@Component({\r\n  selector: \"dynamic-filter-option-popup\",\r\n  template: require('./dynamic-filter-option-popup.component.html'),\r\n  styles: [require('../../../pages/Style.css'), require('../pStyle.css')]\r\n})\r\nexport class DynamicFilterOptionComponent implements OnChanges {\r\n  @Output() onPopUpClose = new EventEmitter();\r\n  @Output() onApplyClick = new EventEmitter();\r\n  @Input() dynamicFilterSettings: DynamicFilterSetting;\r\n  public key = new FormControl('')\r\n  isActive: boolean = false;\r\n  currentFilterOption: DynamicFilterOption = new DynamicFilterOption();\r\n  selectedFilterOptions: SelectedFilterOption[] = [];\r\n\r\n  constructor() {\r\n\r\n  }\r\n\r\n  show() {\r\n    setTimeout(() => {\r\n      this.isActive = true;\r\n    }, 100);\r\n  }\r\n\r\n  ngOnChanges(changes: any) {\r\n    this.dynamicFilterSettings = changes.dynamicFilterSettings.currentValue\r\n    this.resetCurrentFilterOption()\r\n    this.addStaticOptionsToList()\r\n  }\r\n\r\n\r\n\r\n  addStaticOptionsToList() {\r\n    this.selectedFilterOptions = [];\r\n    this.dynamicFilterSettings.filterOptions.forEach(\r\n      x => {\r\n        if (x.isSelected) {\r\n          let i = new SelectedFilterOption();\r\n\r\n          i.filterOperatorKey = x.filterOperatorDefaultValue;\r\n          i.filterOptionKey = x.key;\r\n          i.filterValue = x.filterType.value;\r\n\r\n          this.selectedFilterOptions.push(i);\r\n        }\r\n      }\r\n    )\r\n  }\r\n\r\n  onFilterOptionChanged(event: any) {\r\n    this.dynamicFilterSettings.filterOptions.forEach(x => {\r\n      if (x.key == event) {\r\n        this.setCurrentFilterOption(x)\r\n      }\r\n    });\r\n\r\n  }\r\n\r\n  setCurrentFilterOption(filter: any) {\r\n    this.currentFilterOption = new DynamicFilterOption();\r\n    this.currentFilterOption = filter\r\n    this.key.patchValue(this.currentFilterOption.key)\r\n  }\r\n\r\n\r\n  addFilterOption() {\r\n    let index = this.dynamicFilterSettings.filterOptions.indexOf(this.currentFilterOption);\r\n    if (this.currentFilterOption.key == \"\" || this.currentFilterOption.key == undefined || this.currentFilterOption.key == null) return;\r\n    if (this.currentFilterOption.filterOperatorDefaultValue == \"\" || this.currentFilterOption.filterOperatorDefaultValue == undefined || this.currentFilterOption.filterOperatorDefaultValue == null) return;\r\n    if (this.currentFilterOption.filterType.value == \"\" || this.currentFilterOption.filterType.value == undefined || this.currentFilterOption.filterType.value == null) return;\r\n    if (index > -1) this.dynamicFilterSettings.filterOptions[index].isSelected = true;\r\n    this.resetCurrentFilterOption();\r\n\r\n  }\r\n\r\n  deletFilterOption(index) {\r\n    if (index > -1) {\r\n      this.dynamicFilterSettings.filterOptions[index].isSelected = false;\r\n    }\r\n    this.resetCurrentFilterOption()\r\n  }\r\n\r\n\r\n  resetCurrentFilterOption() {\r\n    this.currentFilterOption = this.dynamicFilterSettings.filterOptions.filter(x => !x.isDefaultFixed && !x.isSelected).length ? this.dynamicFilterSettings.filterOptions.find(x => !x.isDefaultFixed && !x.isSelected) : new DynamicFilterOption();\r\n    if (!this.dynamicFilterSettings.filterOptions.filter(x => !x.isDefaultFixed && !x.isSelected).length) {\r\n      this.currentFilterOption.filterType.type = 'text'\r\n    }\r\n    this.key.patchValue(this.currentFilterOption.key)\r\n\r\n  }\r\n\r\n  hide() {\r\n    this.isActive = false;\r\n  }\r\n\r\n  applyClicked($event) {\r\n    this.addStaticOptionsToList();\r\n    this.onApplyClick.emit(this.selectedFilterOptions);\r\n    this.hide();\r\n  }\r\n\r\n  @HostListener(\"document : keydown\", [\"$event\"])\r\n  @debounce(20)\r\n  updown($event: KeyboardEvent) {\r\n    if (!this.isActive) return true;\r\n    if ($event.code == \"Escape\") {\r\n      $event.preventDefault();\r\n      this.hide();\r\n      this.popupClose();\r\n    }\r\n  }\r\n\r\n  popupClose() {\r\n    this.onPopUpClose.emit();\r\n    this.hide();\r\n  }\r\n\r\n}\r\n\r\nexport class DynamicFilterSetting {\r\n  title: string = \"\";\r\n  filterOptions: DynamicFilterOption[] = [] // all list of filter option with values\r\n  //filterOperatorOptions : GenericTitleValue[] = [] // comparable operators\r\n}\r\n\r\nexport class DynamicFilterOption {\r\n  key: string = \"\"; // key representing database column\r\n  title: string = \"\"; // title represents dropdown option title\r\n  isDefaultFixed: boolean = false;\r\n  isSelected: boolean = false; // isSelected true is not present in the option and it is always in selected list\r\n  filterType: FilterType = <FilterType>{};\r\n  filterOperatorDefaultValue: string = \"\";\r\n  filterOperatorOptions: GenericTitleValue[] = []; //only valid if isSelected is true\r\n}\r\n\r\nexport class FilterType {\r\n  type: string = \"\";  // only support | dropdown | text \r\n  value: string = \"\"; // valid if type = text\r\n  options: GenericTitleValue[] = []; // list if type is dropdown | checbox\r\n}\r\n\r\nexport class GenericTitleValue {\r\n  title: string = \"\"; // title\r\n  value: string = \"\"; //value\r\n  selected: boolean = false;\r\n}\r\n\r\nexport class SelectedFilterOption {\r\n  filterOptionKey: string = \"\"; // title\r\n  filterOperatorKey: string = \"\"; //value\r\n  filterValue: string = \"\";\r\n}\r\n\r\nexport function debounce(delay: number): MethodDecorator {\r\n  return function (target: any, propertyKey: string, descriptor: PropertyDescriptor) {\r\n\r\n    const original = descriptor.value;\r\n    const key = `__timeout__${propertyKey}`;\r\n\r\n    descriptor.value = function (...args) {\r\n      clearTimeout(this[key]);\r\n      this[key] = setTimeout(() => original.apply(this, args), delay);\r\n    };\r\n\r\n    return descriptor;\r\n  };\r\n}\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/common/popupLists/dynamic-filter-option-popup/dynamic-filter-option-popup.component.ts","import { MasterRepo } from \"../../repositories\";\r\nimport { DynamicFilterOptionComponent } from \"./dynamic-filter-option-popup.component\";\r\nimport { ModuleWithProviders, NgModule } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule \r\n  \r\n  ],\r\n  declarations: [DynamicFilterOptionComponent],\r\n  exports: [DynamicFilterOptionComponent]\r\n})\r\nexport class DynamicFilterOptionModule {\r\n  static forRoot(): ModuleWithProviders {\r\n    return {\r\n      ngModule: DynamicFilterOptionModule,\r\n      providers: [MasterRepo]\r\n    };\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/common/popupLists/dynamic-filter-option-popup/dynamic-filter-option-popup.module.ts","import { Component, Injector } from '@angular/core';\r\nimport { AuthService } from \"./../../../../common/services/permission/authService.service\";\r\nimport { ModalDirective } from 'ng2-bootstrap';\r\n// import { LocalDataSource } from 'ng2-smart-table';\r\nimport { LocalDataSource, ServerDataSource } from '../../../../node_modules/ng2-smart-table/';\r\nimport { Router } from \"@angular/router\";\r\nimport 'style-loader!./smartTables.scss';\r\nimport { BehaviorSubject } from \"rxjs/BehaviorSubject\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { MdDialog } from \"@angular/material\";\r\nimport { AuthDialog } from \"../../../modaldialogs/authorizationDialog/authorizationDialog.component\";\r\nimport { MasterRepo } from \"../../../../common/repositories/masterRepo.service\";\r\nimport { Subscription } from \"rxjs/Subscription\";\r\nimport { AppComponentBase } from '../../../../app-component-base';\r\nimport { PurchaseInvoiceService } from './purchaseinvoices.service';\r\n\r\n\r\n\r\n@Component({\r\n  selector: \"debitnote-itembase-list\",\r\n  template: require('./debitnote-itembase-list.component.html'),\r\n  //styles: [require('./app/assets/css/styles.css')],\r\n  providers: [PurchaseInvoiceService],\r\n  styles: [require('../../../modal-style.css')],\r\n})\r\n\r\nexport class DebitNoteItemBaseListComponent extends AppComponentBase {\r\n  settings = {\r\n    mode: 'external',\r\n    add: {\r\n      addButtonContent: '',\r\n      createButtonContent: '<i class=\"ion-checkmark\"></i>',\r\n      cancelButtonContent: '<i class=\"ion-close\"></i>',\r\n    },\r\n    view: {\r\n      viewButtonContent: 'View',\r\n      saveButtonContent: '<i class=\"ion-checkmark\"></i>',\r\n      cancelButtonContent: '<i class=\"ion-close\"></i>',\r\n    },\r\n    edit: {\r\n      editButtonContent: '',\r\n      saveButtonContent: '<i class=\"ion-checkmark\"></i>',\r\n      cancelButtonContent: '<i class=\"ion-close\"></i>',\r\n    },\r\n    delete: {\r\n      deleteButtonContent: '',\r\n      confirmDelete: true\r\n    },\r\n    pager: {\r\n      display: true,\r\n      perPage: 10\r\n    },\r\n    columns: {\r\n      VCHRNO: {\r\n        title: 'Voucher No.',\r\n        type: 'string'\r\n      },\r\n      DIVISION: {\r\n        title: 'Division',\r\n        type: 'string'\r\n      },\r\n      TRNAC: {\r\n        title: 'Trn. A/c',\r\n        type: 'string'\r\n      },\r\n      PhiscalId: {\r\n        title: 'Fiscal Year',\r\n        type: 'string'\r\n      }\r\n    }\r\n  };\r\n  source: ServerDataSource;\r\n  messageSubject: BehaviorSubject<string> = new BehaviorSubject<string>(\"You are not authorized.\");\r\n  message$: Observable<string> = this.messageSubject.asObservable();\r\n  sub: Subscription;\r\n  PhiscalObj: any = <any>{};\r\n\r\n  constructor(private masterService: MasterRepo,\r\n    private authService: AuthService,\r\n    public injector: Injector,\r\n    private router: Router, public dialog: MdDialog) {\r\n    super(injector);\r\n    try {\r\n      this.PhiscalObj = authService.getPhiscalInfo();\r\n      var PID = this.PhiscalObj.PhiscalID;\r\n      PID = PID.replace(\"/\", \"ZZ\");\r\n      let apiUrl = `${this.apiUrl}/getTrnMainPagedList/DN/${PID}`;\r\n      this.source =  this.source = new ServerDataSource(this._http, \r\n        { \r\n          endPoint: apiUrl, \r\n          dataKey : \"data\", \r\n          pagerPageKey : \"currentPage\",\r\n          pagerLimitKey : \"maxResultCount\"\r\n        }); \r\n\r\n      // let data: Array<any> = [];\r\n      // ////console.log(\"calling service\")\r\n      // this.sub = this.masterService.getTrnMainList(\"DN\")\r\n      //   .subscribe(res => {\r\n      //     ////console.log({ purchaseData: res })\r\n      //     data.push(<any>res);\r\n\r\n      //     this.source.load(data);\r\n      //   }, error => {\r\n      //     //console.log({ error: error });\r\n      //     this.masterService.resolveError(error, \"debitnote-itembase - getTrnMainList\");\r\n      //   });\r\n    } catch (ex) {\r\n      //console.log(ex);\r\n      alert(ex);\r\n    }\r\n\r\n  }\r\n  setMode() { }\r\n  onAddClick() {\r\n    try {\r\n      // if (this._authService.checkMenuRight(\"debitnoteitembase\", \"add\") == true) {\r\n      this.router.navigate([\"/pages/transaction/inventory/purchases/debitnoteitembase/add-debitnote-itembase\", { pf: 'DN', mode: \"add\", returnUrl: this.router.url }]);\r\n      // } else {\r\n      //   this.messageSubject.next(\"You are not authorized to add debit note item wise.\")\r\n      //   this.openAuthDialog();\r\n      // }\r\n    } catch (ex) {\r\n      //console.log(ex);\r\n      alert(ex);\r\n    }\r\n  }\r\n  onEditClick(event): void {\r\n    try {\r\n      // if (this._authService.checkMenuRight(\"debitnoteitembase\", \"edit\") == true) {\r\n      this.router.navigate([\"/pages/transaction/inventory/purchases/debitnoteitembase/add-debitnote-itembase\", { pf: 'DN', vchr: event.data.VCHRNO, div: event.data.DIVISION, fid: event.data.PhiscalId, mode: \"edit\", returnUrl: this.router.url }]);\r\n      // } else {\r\n      //   this.messageSubject.next(\"You are not authorized to edit debit note item wise.\");\r\n      //   this.openAuthDialog();\r\n      // }\r\n    } catch (ex) {\r\n      //console.log(ex);\r\n      alert(ex);\r\n    }\r\n  }\r\n\r\n  onViewClick(event): void {\r\n    try {\r\n      // if (this._authService.checkMenuRight(\"debitnoteitembase\", \"view\") == true) {\r\n      this.router.navigate([\"/pages/transaction/inventory/purchases/debitnoteitembase/add-debitnote-itembase\", { pf: 'DN', vchr: event.data.VCHRNO, div: event.data.DIVISION, phiscal: event.data.PhiscalID, mode: \"view\", returnUrl: this.router.url }])\r\n      // } else {\r\n      //   this.messageSubject.next(\"You are not authorized to view debit note item wise.\");\r\n      //   this.openAuthDialog();\r\n      // }\r\n    } catch (ex) {\r\n      //console.log(ex);\r\n      alert(ex);\r\n    }\r\n  }\r\n\r\n  openAuthDialog() {\r\n    var message = { header: \"Information\", message: this.message$ };\r\n    this.dialog.open(AuthDialog, { hasBackdrop: true, data: message });\r\n\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/pages/Purchases/components/DebitNoteItemWise/debitnote-itembase-list.component.ts","import { Injectable } from '@angular/core'\r\nimport { MockMasterRepo } from \"../../../../common/repositories/MockmasterRepo.service\";\r\nimport { IDivision } from \"../../../../common/interfaces/commonInterface.interface\";\r\nimport {Headers, Http,  RequestOptions} from '@angular/http';\r\nimport { AuthService } from \"../../../../common/services/permission/index\";\r\nimport { GlobalState } from \"../../../../global.state\";\r\n@Injectable()\r\nexport class PurchaseInvoiceService {\r\n    constructor(private http: Http, private authService: AuthService, private state: GlobalState){\r\n        \r\n    }\r\n    private get apiUrl(): string {\r\n        let url = this.state.getGlobalSetting(\"apiUrl\");\r\n        let apiUrl = \"\";\r\n\r\n        if (!!url && url.length > 0) { apiUrl = url[0] };\r\n        return apiUrl\r\n    }\r\n    private getRequestOption() {\r\n        let headers: Headers = new Headers({ 'Content-type': 'application/json', 'Authorization': this.authService.getAuth().token })\r\n        //console.log({ headers: headers });\r\n        return new RequestOptions({ headers: headers });\r\n    }\r\n\r\n    getPurchaseList(){\r\n        \r\n    }\r\n\r\n    getDNList() {\r\n        return [{ VCHRNO: 'DN1', DIVISION: 'MMX', TRNAC: 'Investment Bank',PhiscalId:'2016' },\r\n            { VCHRNO: 'DN2', DIVISION: 'MMX', TRNAC: 'Citizen Bank', PhiscalId: '2016' },\r\n            { VCHRNO: 'DN3', DIVISION: 'AAX', TRNAC: 'My Bank', PhiscalId: '2016' }];\r\n    }\r\n    getAccountList(){\r\n        return[\r\n       {ACID:'A1',ACCODE:'AA1',ACNAME:'Account1',HASSUBLEDGER:0},\r\n        {ACID:'B1',ACCODE:'BB1',ACNAME:'Account2',HASSUBLEDGER:0},\r\n        {ACID:'C1',ACCODE:'CC1',ACNAME:'Account3',HASSUBLEDGER:1},\r\n        {ACID:'D1',ACCODE:'DD1',ACNAME:'Account4',HASSUBLEDGER:1},\r\n        {ACID:'E1',ACCODE:'EE1',ACNAME:'Account5',HASSUBLEDGER:1}];\r\n    }\r\n    getSubledgerList(){\r\n        return[{ACID:'Ram1',ACCODE:'Ram1',ACNAME:'Ram1'},\r\n        {ACID:'Ram2',ACCODE:'Ram2',ACNAME:'Ram2'},\r\n        {ACID:'Ram3',ACCODE:'Ram3',ACNAME:'Ram3'}];\r\n    }\r\n     getProductList() {\r\n        return [\r\n            {\r\n                MCODE: 'A1',\r\n                MENUCODE: 'A11',\r\n                DESCA: 'Apple',\r\n                BARCODE: '123123',\r\n                RATE: 45,\r\n                PRATE: 40,\r\n                UNIT: 'PC',\r\n                ISVAT: 0,\r\n                ISSERVICECHARGE: 0,\r\n                QUANTITY:0\r\n            },\r\n            {\r\n                MCODE: 'B1',\r\n                MENUCODE: 'B11',\r\n                DESCA: 'Ball',\r\n                BARCODE: 'B1111',\r\n                RATE: 35,\r\n                PRATE: 30,\r\n                UNIT: 'PC',\r\n                ISVAT: 0,\r\n                ISSERVICECHARGE: 0,\r\n                QUANTITY: 0\r\n            },\r\n            {\r\n                MCODE: 'C1',\r\n                MENUCODE: 'C11',\r\n                DESCA: 'Cat',\r\n                BARCODE: 'C432',\r\n                RATE: 25,\r\n                PRATE: 20,\r\n                UNIT: 'PC',\r\n                ISVAT: 0,\r\n                ISSERVICECHARGE: 0,\r\n                QUANTITY: 0\r\n            }];\r\n    }\r\n\r\n    getSelectedItem(Mcode) {\r\n       var aa= \r\n            {\r\n                MCODE: Mcode,\r\n                MENUCODE: 'A11',\r\n                DESCA: 'Apple',\r\n                BARCODE: '123123',\r\n                RATE: 45,\r\n                PRATE: 40,\r\n                UNIT: 'PC',\r\n                ISVAT: 0,\r\n                ISSERVICECHARGE: 0,\r\n                QUANTITY: 0\r\n            }\r\n       return aa;\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/pages/Purchases/components/DebitNoteItemWise/purchaseinvoices.service.ts","import { Http, Response, RequestOptions, Headers } from '@angular/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { ActivatedRoute, ActivatedRouteSnapshot } from '@angular/router';\r\nimport { AuthService } from '../../../common/services/permission';\r\nimport { GlobalState } from '../../../global.state';\r\nimport { Observable } from \"rxjs\";\r\nimport 'rxjs/add/operator/catch';\r\nimport 'rxjs/add/operator/map';\r\nimport 'rxjs/add/observable/throw';\r\n\r\n@Injectable()\r\n\r\nexport class PurchaseService {\r\n\r\n    constructor(private http: Http, private activatedRoute: ActivatedRoute,\r\n        private authService: AuthService,\r\n        private state: GlobalState) {\r\n    }\r\n    private get apiUrl(): string {\r\n        let url = this.state.getGlobalSetting(\"apiUrl\");\r\n        let apiUrl = \"\";\r\n        if (!!url && url.length > 0) { apiUrl = url[0] };\r\n        return apiUrl\r\n    }\r\n\r\n    getPoList(filter,currentPage) {\r\n        let status = 0\r\n        if ('advanceFilterObj' in filter) {\r\n            let filterObj = filter.advanceFilterObj.find(x => x.filterOptionKey == 'STATUS')\r\n            status = filterObj.filterValue\r\n        }\r\n        return this.http.post(`${this.apiUrl}/getPoList?currentPage=${currentPage}&maxResultCount=10`,filter, this.getRequestOption())\r\n            .map(this.extractData)\r\n            .catch(this.handleError)\r\n    }\r\n    private getRequestOption() {\r\n        let headers: Headers = new Headers({ 'Content-type': 'application/json', 'Authorization': this.authService.getAuth().token })\r\n        return new RequestOptions({ headers: headers });\r\n    }\r\n\r\n    public extractData(res: Response) {\r\n        let response = res.json();\r\n        return response || {};\r\n    }\r\n\r\n    public handleError(error: Response | any) {\r\n        return Observable.throw(error);\r\n    }\r\n\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/pages/Purchases/components/purchase.service.ts","import { Routes, RouterModule } from '@angular/router';\r\nimport { Purchases } from './purchases.component';\r\nimport { CanActivateTeam } from '../../common/services/permission/guard.service';\r\nimport { DebitNoteItemBaseComponent } from \"./components/DebitNoteItemWise/debitnote-itembase.component\";\r\nimport { AddPurchaseInvoiceComponent } from './components/purchaseinvoice/AddPurchaseInvoice';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        component: Purchases,\r\n        children: [\r\n         \r\n            { path: 'add-purchase-invoice', component: AddPurchaseInvoiceComponent, canActivate: [CanActivateTeam] },\r\n            { path: 'add-debitnote-itembase', component: DebitNoteItemBaseComponent, canActivate: [CanActivateTeam] },\r\n            // { path: 'additional-cost', component: MasterAdditional, canActivate: [CanActivateTeam] },\r\n  \r\n        ]\r\n\r\n    }\r\n];\r\n\r\nexport const routing = RouterModule.forChild(routes);\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/pages/Purchases/purchases.routing.ts","module.exports = \".ng2-smart-table-container table.ng2-smart-table {\\n  color: #000000; }\\n  .ng2-smart-table-container table.ng2-smart-table th, .ng2-smart-table-container table.ng2-smart-table td {\\n    border: 1px solid gainsboro !important;\\n    line-height: 35px;\\n    vertical-align: middle; }\\n  .ng2-smart-table-container table.ng2-smart-table input {\\n    line-height: 1.5 !important; }\\n  .ng2-smart-table-container table.ng2-smart-table tbody tr:hover {\\n    background: rgba(0, 0, 0, 0.03); }\\n  .ng2-smart-table-container table.ng2-smart-table a.ng2-smart-sort-link {\\n    font-size: 14px !important;\\n    color: #000000;\\n    font-weight: 900; }\\n    .ng2-smart-table-container table.ng2-smart-table a.ng2-smart-sort-link.sort {\\n      font-weight: 900 !important; }\\n      .ng2-smart-table-container table.ng2-smart-table a.ng2-smart-sort-link.sort::after {\\n        border-bottom-color: #000000 !important; }\\n  .ng2-smart-table-container table.ng2-smart-table .ng2-smart-actions {\\n    width: 70px;\\n    text-align: center; }\\n    .ng2-smart-table-container table.ng2-smart-table .ng2-smart-actions .actions {\\n      float: none;\\n      text-align: center; }\\n  .ng2-smart-table-container table.ng2-smart-table a.ng2-smart-action {\\n    font-size: 14px !important;\\n    color: #000000;\\n    padding: 0 5px;\\n    display: inline-block; }\\n    .ng2-smart-table-container table.ng2-smart-table a.ng2-smart-action.ng2-smart-action-add-add {\\n      font-size: 25px !important; }\\n\\nnav.ng2-smart-pagination-nav {\\n  display: flex;\\n  justify-content: center; }\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/raw-loader!./~/sass-loader!./src/app/pages/Purchases/components/DebitNoteItemWise/smartTables.scss\n// module id = 1681\n// module chunks = 2","module.exports = \"<style>\\r\\n    .filter-container {\\r\\n        padding: 15px 0px;\\r\\n    }\\r\\n\\r\\n    .advance-search {\\r\\n        color: #3F82BB !important;\\r\\n        cursor: pointer;\\r\\n    }\\r\\n</style>\\r\\n\\r\\n<div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n        <div class=\\\"col-md-6\\\">\\r\\n            <div class=\\\"col-md-12\\\">\\r\\n                <h3>{{title}}</h3>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n<hr>\\r\\n<div class=\\\"clearfix\\\"></div>\\r\\n<div class=\\\"row filter-container\\\">\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n        <div class=\\\"col-md-4\\\">\\r\\n            <div class=\\\"col-md-4\\\"> <label>Type</label></div>\\r\\n            <div class=\\\"col-md-8\\\">\\r\\n                <input type=\\\"text\\\" readonly name=\\\"type\\\" [(ngModel)]=\\\"_transactionService.FilterObj.type\\\"\\r\\n                    class=\\\"form-control\\\" (keydown.enter)=\\\"location.focus()\\\">\\r\\n            </div>\\r\\n\\r\\n        </div>\\r\\n        <div class=\\\"col-md-4\\\">\\r\\n            <div class=\\\"col-md-4\\\">\\r\\n                <label>Location</label>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-8\\\">\\r\\n                <input type=\\\"text\\\" readonly name=\\\"location\\\" [(ngModel)]=\\\"_transactionService.FilterObj.location\\\"\\r\\n                    #location (keydown.enter)=\\\"from.focus()\\\" class=\\\"form-control\\\">\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n        <div class=\\\"col-md-6\\\">\\r\\n            <div class=\\\"col-md-2\\\">\\r\\n                <label> Date</label>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-10\\\" style=\\\"width: 43%;margin-left:33px\\\">\\r\\n                <input class=\\\"form-control\\\" type=\\\"text\\\" ngxDaterangepickerMd [(ngModel)]=\\\"selectedDate\\\"  [showDropdowns]=\\\"true\\\" [showCustomRangeLabel]=\\\"true\\\"\\r\\n                    [alwaysShowCalendars]=\\\"true\\\" [locale]=\\\"locale\\\" [ranges]=\\\"ranges\\\" [linkedCalendars]=\\\"true\\\"\\r\\n                    [showCancel]=\\\"true\\\" placeholder=\\\"Date Range...\\\" (ngModelChange)=\\\"dateChanged($event)\\\" />\\r\\n            </div>\\r\\n\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-md-4\\\">\\r\\n            <div class=\\\"col-md-4\\\">\\r\\n                <span>\\r\\n                    <a (click)=\\\"advanceSearch()\\\" #advance class=\\\"advance-search\\\">Advance Search</a>\\r\\n                </span>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n<hr>\\r\\n<div class=\\\"clearfix\\\"></div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/common/Transaction Components/delivery-order.component.html\n// module id = 1700\n// module chunks = 2","module.exports = \"<style>\\r\\n  .modal-content {\\r\\n    padding: 1px;\\r\\n    margin: 0px;\\r\\n    float: right;\\r\\n  }\\r\\n\\r\\n  tbody>tr:hover {\\r\\n    background-color: #f3f5f4;\\r\\n    cursor: pointer;\\r\\n  }\\r\\n\\r\\n  tr {\\r\\n    font-size: 11px;\\r\\n  }\\r\\n\\r\\n  .selected-row {\\r\\n    background-color: #ced6d3 !important;\\r\\n  }\\r\\n\\r\\n  .table>tbody>tr>td {\\r\\n    line-height: 30px !important;\\r\\n  }\\r\\n\\r\\n  .table>thead>tr>th {\\r\\n    line-height: 5px !important;\\r\\n  }\\r\\n\\r\\n  .table>tbody>tr>td:first-child {\\r\\n    text-align: left !important;\\r\\n    padding: 0px 0px 0px 11px !important;\\r\\n  }\\r\\n\\r\\n  .modal-content {\\r\\n    box-shadow: -10px 0px 10px 1px #aaaaaa;\\r\\n  }\\r\\n\\r\\n  .modal-content-main-area {\\r\\n    max-height: 100%;\\r\\n    height: 100%;\\r\\n    overflow: auto;\\r\\n    overflow-x: hidden;\\r\\n  }\\r\\n\\r\\n  .modal-content-summary-area {\\r\\n    max-height: 20%;\\r\\n    height: 20%;\\r\\n    overflow: auto;\\r\\n    overflow-x: hidden;\\r\\n  }\\r\\n\\r\\n  .ellipsis {\\r\\n    /* width: 220px;\\r\\n    text-overflow: ellipsis;\\r\\n    overflow: hidden; */\\r\\n    white-space: nowrap;\\r\\n  }\\r\\n</style>\\r\\n<div [class.modal-sticky-hide]=\\\"!isActive\\\" style=\\\"display : block; padding: 0px;position: fixed;\\r\\ntop: 85px ;\\r\\nleft: -5%;\\r\\nwidth: 90%;\\r\\nheight: auto;\\r\\nz-index: 9999999;\\r\\nmax-height: 500px;\\r\\noverflow-y: auto;\\\">\\r\\n  <!-- Modal content -->\\r\\n  <div class=\\\"modal-content modal-content-main-area\\\">\\r\\n    <div *ngIf=\\\"dynamicFilterSettings\\\">\\r\\n      <div class=\\\"modal-header\\\" style=\\\"padding: 0px;background: #8cccfb;\\\">\\r\\n        <button class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"hide()\\\">\\r\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n        <h4 class=\\\"modal-title\\\" style=\\\"text-align: center;\\\">\\r\\n          {{ dynamicFilterSettings.title }}\\r\\n        </h4>\\r\\n      </div>\\r\\n      <hr />\\r\\n      <div class=\\\"clearfix\\\">\\r\\n        <div class=\\\"col-md-12\\\">\\r\\n          <div class=\\\"col-md-3\\\" style=\\\"margin: 2px 0px;\\\">\\r\\n            <select style=\\\"width: 100%;\\\" name=\\\"filterOptions\\\" class=\\\"form-control\\\"\\r\\n             [formControl]=\\\"key\\\" (change)=\\\"onFilterOptionChanged($event.target.value)\\\">\\r\\n\\r\\n              <ng-container *ngFor=\\\"let item of dynamicFilterSettings.filterOptions\\\">\\r\\n                <option *ngIf=\\\"!item.isSelected\\\" value=\\\"{{item.key}}\\\">{{\\r\\n                        item.title\\r\\n                      }}</option>\\r\\n              </ng-container>\\r\\n            </select>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"col-md-3\\\" style=\\\"margin: 2px 0px;\\\">\\r\\n            <select #filterOperatorKey style=\\\"width: 100%;\\\" name=\\\"filterOperatorKey\\\"  class=\\\"form-control\\\"\\r\\n              [(ngModel)]=\\\"currentFilterOption.filterOperatorDefaultValue\\\">\\r\\n              <ng-container *ngFor=\\\"let item of currentFilterOption.filterOperatorOptions\\\">\\r\\n                <option [ngValue]=\\\"item.value\\\">{{\\r\\n                          item.title\\r\\n                        }}</option>\\r\\n              </ng-container>\\r\\n            </select>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"col-md-3\\\" style=\\\"margin: 2px 0px;\\\">\\r\\n            <ng-container *ngIf=\\\"currentFilterOption.filterType.type=='dropdown'\\\">\\r\\n              <select #filterValue style=\\\"width: 100%;\\\" name=\\\"filterValue\\\"  class=\\\"form-control\\\"\\r\\n                [(ngModel)]=\\\"currentFilterOption.filterType.value\\\">\\r\\n                <ng-container *ngFor=\\\"let item of currentFilterOption.filterType.options\\\">\\r\\n                  <option [ngValue]=\\\"item.value\\\">{{\\r\\n                                item.title\\r\\n                              }}</option>\\r\\n                </ng-container>\\r\\n              </select>\\r\\n            </ng-container>\\r\\n\\r\\n\\r\\n            <ng-container #filterValue *ngIf=\\\"currentFilterOption.filterType.type=='text'\\\">\\r\\n              <input type=\\\"text\\\" name=\\\"filterValue\\\" class=\\\"form-control\\\"\\r\\n                [(ngModel)]=\\\"currentFilterOption.filterType.value\\\" />\\r\\n            </ng-container>\\r\\n          </div>\\r\\n          <div class=\\\"col-md-3\\\">\\r\\n            <button class=\\\"btn btn-info\\\" (click)=\\\"addFilterOption()\\\">Add</button>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"clearfix\\\">\\r\\n        <hr>\\r\\n        <div class=\\\"col-md-12\\\" *ngFor=\\\"let filterOption of dynamicFilterSettings.filterOptions;let i=index\\\">\\r\\n          <ng-container *ngIf=\\\"filterOption.isSelected\\\">\\r\\n\\r\\n            <div class=\\\"col-md-3\\\" style=\\\"margin: 2px 0px;\\\">\\r\\n              <label>\\r\\n                <strong>\\r\\n                  {{filterOption?.title}}\\r\\n                </strong>\\r\\n              </label>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"col-md-3\\\" style=\\\"margin: 2px 0px;\\\">\\r\\n              <select style=\\\"width: 100%;\\\" [(ngModel)]=\\\"filterOption.filterOperatorDefaultValue\\\"  class=\\\"form-control\\\"\\r\\n                name=\\\"filterOperatorKey\\\">\\r\\n                <ng-container *ngFor=\\\"let item of filterOption.filterOperatorOptions\\\">\\r\\n                  <option [value]=\\\"item.value\\\">{{\\r\\n                              item.title\\r\\n                            }}</option>\\r\\n                </ng-container>\\r\\n              </select>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"col-md-3\\\" style=\\\"margin: 2px 0px;\\\">\\r\\n              <ng-container *ngIf=\\\"filterOption.filterType.type=='dropdown'\\\">\\r\\n                <select [(ngModel)]=\\\"filterOption.filterType.value\\\" style=\\\"width: 100%;\\\" name=\\\"filterValue\\\"  class=\\\"form-control\\\">\\r\\n                  <ng-container *ngFor=\\\"let item of filterOption.filterType.options\\\">\\r\\n                    <option [value]=\\\"item.value\\\">{{\\r\\n                                    item.title\\r\\n                                  }}</option>\\r\\n                  </ng-container>\\r\\n                </select>\\r\\n              </ng-container>\\r\\n\\r\\n              <ng-container #filterValue *ngIf=\\\"filterOption.filterType.type=='text'\\\">\\r\\n                <input type=\\\"text\\\" name=\\\"filterValue\\\" class=\\\"form-control\\\" [value]=\\\"filterOption.filterType.value\\\" />\\r\\n              </ng-container>\\r\\n\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"col-md-3\\\" style=\\\"margin: 2px 0px;\\\">\\r\\n              <button class=\\\"btn btn-info\\\" *ngIf=\\\"!filterOption.isDefaultFixed\\\" (click)=\\\"deletFilterOption(i)\\\">\\r\\n                <i class=\\\"fa fa-times\\\"></i>\\r\\n              </button>\\r\\n            </div>\\r\\n          </ng-container>\\r\\n        </div>\\r\\n      </div>\\r\\n      <hr style=\\\"margin-bottom: 0px !important\\\">\\r\\n      <div class=\\\"clearfix\\\" style=\\\"padding: 10px;\\\">\\r\\n        <button class=\\\"btn btn-info pull-right\\\" style=\\\"margin-left: 10px;\\\" (click)=\\\"popupClose()\\\">Cancel</button>\\r\\n        <button class=\\\"btn btn-info pull-right\\\" (click)=\\\"applyClicked()\\\">Apply</button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/common/popupLists/dynamic-filter-option-popup/dynamic-filter-option-popup.component.html\n// module id = 1703\n// module chunks = 2","module.exports = \"<div class=\\\"widgets\\\">\\r\\n <div class =\\\"row\\\">\\r\\n    \\r\\n      <button type=\\\"button\\\" class=\\\"btn btn-info\\\" (click)=\\\"onAddClick()\\\" style=\\\"margin-left:18px; margin-bottom:10px\\\">Add DebitNote-ItemWise</button>\\r\\n    \\r\\n  </div>\\r\\n  <div class=\\\"row\\\">\\r\\n    <ba-card title=\\\"DebitNote-ItemWise\\\" baCardClass=\\\"with-scroll\\\">\\r\\n      <ng2-smart-table [settings]=\\\"settings\\\" [source]=\\\"source\\\"  (edit)=\\\"onEditClick($event)\\\" (view)=\\\"onViewClick($event)\\\" (deleteConfirm)=\\\"onDeleteConfirm($event)\\\"></ng2-smart-table>\\r\\n    </ba-card>\\r\\n  </div>\\r\\n \\r\\n\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/Purchases/components/DebitNoteItemWise/debitnote-itembase-list.component.html\n// module id = 1716\n// module chunks = 2","module.exports = \"<div class=\\\"sticky-top\\\">\\r\\n        <div class=\\\"row clearfix\\\">\\r\\n                <div class=\\\"col-md-2\\\">\\r\\n                        <voucher-master-toggler></voucher-master-toggler>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-2\\\">\\r\\n                        <h2 style=\\\"color: black;\\\">{{_trnMainService.pageHeading}}</h2>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-8\\\">\\r\\n                        <voucher-master-action></voucher-master-action>\\r\\n                </div>    \\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"main-container\\\">\\r\\n        <div *ngIf=\\\"masterService.ShowMore\\\" class=\\\"row clearfix\\\" >\\r\\n            <trnmain-purchase-entry></trnmain-purchase-entry>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\" style=\\\"margin-top: 5px\\\">\\r\\n    \\r\\n            <div class=\\\"col-md-12\\\">\\r\\n    \\r\\n                <productentry ></productentry>\\r\\n            </div>\\r\\n            </div>\\r\\n            </div>\\r\\n            <div class=\\\"sticky-bottom\\\">\\r\\n                    <voucher-total-area></voucher-total-area>\\r\\n                  </div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/Purchases/components/DebitNoteItemWise/debitnote-itembase.component.html\n// module id = 1717\n// module chunks = 2","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../node_modules/raw-loader/index.js!../../../../../../node_modules/sass-loader/index.js!./smartTables.scss\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = require(\"!../../../../../../node_modules/style-loader/addStyles.js\")(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../../../../../node_modules/raw-loader/index.js!../../../../../../node_modules/sass-loader/index.js!./smartTables.scss\", function() {\n\t\t\tvar newContent = require(\"!!../../../../../../node_modules/raw-loader/index.js!../../../../../../node_modules/sass-loader/index.js!./smartTables.scss\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/style-loader!./src/app/pages/Purchases/components/DebitNoteItemWise/smartTables.scss\n// module id = 1865\n// module chunks = 2","import { CommonModule } from \"@angular/common\";\r\nimport { NgModule } from \"@angular/core\";\r\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\r\nimport { NguiAutoCompleteModule } from \"@ngui/auto-complete\";\r\nimport { ModalModule } from \"ng2-bootstrap\";\r\nimport { NgxDaterangepickerMd } from \"ngx-daterangepicker-material\";\r\nimport { NgxPaginationModule } from \"ngx-pagination\";\r\nimport { PrintInvoiceComponent } from \"../../common/Invoice/print-invoice/print-invoice.component\";\r\nimport { TransactionModule } from \"../../common/Transaction Components/transaction.module\";\r\nimport { TransactionService } from \"../../common/Transaction Components/transaction.service\";\r\nimport { IMSDatePickerModule } from \"../../common/date-picker/date-picker.module\";\r\nimport { LimitDecimalPlacesModule } from \"../../common/directives/limit-decimal.module\";\r\nimport { GenericPopupGridModule } from \"../../common/popupLists/generic-grid/generic-popup-grid.module\";\r\nimport { ReportFilterModule } from \"../../common/popupLists/report-filter/report-filter.module\";\r\nimport { CanActivateTeam } from \"../../common/services/permission/guard.service\";\r\nimport { Ng2SmartTableModule } from \"../../node_modules/ng2-smart-table/src/ng2-smart-table.module\";\r\nimport { NgaModule } from \"../../theme/nga.module\";\r\nimport { additionalCostDetail } from \"../Purchases/components/AdditionalCost/additionalCost.component\";\r\nimport { LoginModule } from \"../login/index\";\r\nimport { PrefixComponent } from \"./../../common/Prefix/prefix.component\";\r\nimport { AccountVouchers } from \"./accountvoucher.component\";\r\nimport { routing } from \"./accountvoucher.routing\";\r\nimport { CreditNoteComponent } from \"./components/CreditNote/credit-note.component\";\r\nimport { DebitNoteComponent } from \"./components/DebitNote/debit-note.component\";\r\nimport { ExpensesVoucherComponent } from \"./components/ExpensesVoucher/expenses-voucher.component\";\r\nimport { CustomerTrackingComponent } from \"./components/IncomeVoucher/CustomerTracking/customerTracking.component\";\r\nimport { IncomeVoucherComponent } from \"./components/IncomeVoucher/income-voucher.component\";\r\nimport { VoucherTrackingPopupModule } from \"./components/VoucherTracking/VoucherTracking.module\";\r\nimport { AccountOpeningBalance } from \"./components/account-opening-balance/account-opening-balance.component\";\r\nimport { BankReconciliationComponent } from \"./components/bank-reconciliation/bank-reconciliation.component\";\r\nimport { BillTrackingAmendmentComponent } from \"./components/bill-tracking-amendment/bill-tracking-amendment.component\";\r\nimport { BillTrackingAmendmentService } from './components/bill-tracking-amendment/bill-tracking-amendment.service';\r\nimport { CapitalVoucherComponent } from \"./components/capital-voucher/capital-voucher.component\";\r\nimport { ContraVoucherComponent } from \"./components/contra/contra-voucher.component\";\r\nimport { DebitNoteRateAdjustmentComponent } from \"./components/debit-note-rate-adjustment/debit-note-rate-adjustment.component\";\r\nimport { JournalVoucherComponent } from \"./components/journal/journal-voucher.component\";\r\nimport { testComponent } from \"./components/journal/test\";\r\nimport { TrnMainJournalEntryComponent } from \"./components/journal/trnmain-journal-entry.component\";\r\nimport { TrnTranJournalEntryComponent } from \"./components/journal/trntran-journal-entry.component\";\r\nimport { PartyBalanceConfirmationComponent } from './components/party-balance-confirmation/party-balance-confirmation.component';\r\nimport { PartyOpeningBalance } from \"./components/party-opening-balance/party-opening-balance.component\";\r\nimport { VoucherPosting } from \"./components/voucher-posting/voucher-posting.component\";\r\n \r\n\r\nimport { NepaliDatePickerModule } from '../../common/nepali-date-picker/nepali-date-picker.module';\r\nimport { FileUploaderPopupModule } from '../../common/popupLists/file-uploader/file-uploader-popup.module';\r\nimport { ReverseEntryModule } from '../../common/popupLists/reverse-entry-popup/reverse-entry.module';\r\nimport { Ng2SearchPipeModule } from '../../node_modules/ng2-search-filter';\r\nimport { ImportDocumentDetailsComponent } from \"../Purchases/components/AdditionalCost/ImportDocumentDetails.component\";\r\nimport { CostingDetailComponent } from \"../Purchases/components/AdditionalCost/costingDetail.component\";\r\nimport { MasterAdditionalComponent } from \"../Purchases/components/AdditionalCost/masterPageAdditional.component\";\r\nimport { PurchaseDetailComponent } from '../Purchases/components/AdditionalCost/purchaseDetail.component';\r\nimport { TabsComponent } from \"../Purchases/components/AdditionalCost/tabs\";\r\nimport { newIndividualCostDetail } from '../Purchases/components/NewAdditionalCost/newIndividualCost.component ';\r\nimport { newadditionalCostDetail } from '../Purchases/components/NewAdditionalCost/newadditionalCost.component';\r\nimport { NewCostingDetailComponent } from '../Purchases/components/NewAdditionalCost/newcostingDetail.component';\r\nimport { MasterNewAdditionalComponent } from '../Purchases/components/NewAdditionalCost/newmasterPageAdditional.component';\r\nimport { NewPurchaseDetailComponent } from '../Purchases/components/NewAdditionalCost/newpurchaseDetail.component';\r\nimport { AddPurchaseInvoiceComponent } from '../Purchases/components/purchaseinvoice/AddPurchaseInvoice';\r\nimport { CashCollection } from './components/CashCollection/cashcollection.component';\r\nimport { CellPayVoucherComponent } from './components/CellPayVoucher/CellPay-Voucher.component';\r\nimport { DrCrFooterWithVATIncluded } from \"./components/DebitNote/FooterwithIncludedVAT.component\";\r\nimport { MultipleSeriesComponent } from \"./components/MultipleSeries/MultipleSeries.component\";\r\nimport { PaymentCollection } from \"./components/PaymentCollection/PaymentCollection.component\";\r\nimport { PostDirectoryComponent } from \"./components/PostDirectory/postdirectory.component\";\r\nimport { ReverseCreditNoteComponent } from './components/ReverseCreditNote/reverse-credit-note.component';\r\nimport { AccountHeadingWiseDepreciationDetailComponent } from './components/account-headingwise-depreciation-detail/account-headingwise-depreciation-detail.component';\r\nimport { DepreciationDetailsComponent } from './components/depreciation-detail/depreciation-detail.component';\r\nimport { ItemWiseDepreciationDetailComponent } from './components/itemwise-depreciation-detail/itemwise-depreciation-detail.component';\r\nimport { PartyReconciliationComponent } from './components/party-reconciliation/party-reconciliation.component';\r\nimport { PaymentSingleComponent } from \"./components/payment-single/payment-single.component\";\r\nimport { VehicleCostTrackingService } from './components/vehicle-cost-tracking/vehicle-cost-tracking.service';\r\nimport { SearchPipe } from './components/voucher-renumbering/search.pipe';\r\nimport { VoucherRenumberingComponent } from \"./components/voucher-renumbering/voucher-renumbering.component\";\r\nimport { BulkPrintComponent } from \"./components/BulkPrint/bulk-print.component\";\r\n\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    NguiAutoCompleteModule,\r\n    NgaModule,\r\n    Ng2SearchPipeModule,\r\n    routing,\r\n    Ng2SmartTableModule,\r\n    ModalModule.forRoot(),\r\n    LoginModule,\r\n    TransactionModule,\r\n    GenericPopupGridModule.forRoot(),\r\n    LimitDecimalPlacesModule.forRoot(),\r\n    VoucherTrackingPopupModule.forRoot(),\r\n    NgxDaterangepickerMd.forRoot(),\r\n    NgxPaginationModule,\r\n    ReportFilterModule.forRoot(),\r\n    IMSDatePickerModule.forRoot(),\r\n    NepaliDatePickerModule,\r\n    ReverseEntryModule.forRoot(),\r\n    FileUploaderPopupModule.forRoot()\r\n\r\n\r\n\r\n\r\n  ],\r\n  declarations: [\r\n    AccountVouchers,\r\n    PrefixComponent,\r\n    TrnTranJournalEntryComponent,\r\n    TrnMainJournalEntryComponent,\r\n    DebitNoteComponent,\r\n    testComponent,\r\n    IncomeVoucherComponent,\r\n    ExpensesVoucherComponent,\r\n    CreditNoteComponent,\r\n    JournalVoucherComponent,\r\n    ContraVoucherComponent,\r\n    AccountOpeningBalance,\r\n    PartyOpeningBalance,\r\n    CustomerTrackingComponent,\r\n    BankReconciliationComponent,\r\n    VoucherPosting,\r\n    DebitNoteRateAdjustmentComponent,\r\n    PaymentSingleComponent,\r\n    BillTrackingAmendmentComponent,\r\n    CapitalVoucherComponent,\r\n    additionalCostDetail,\r\n    MasterAdditionalComponent,\r\n    MasterNewAdditionalComponent,\r\n    CostingDetailComponent, PurchaseDetailComponent,\r\n    newadditionalCostDetail,\r\n    DrCrFooterWithVATIncluded,\r\n    TabsComponent,\r\n    ImportDocumentDetailsComponent,\r\n    VoucherRenumberingComponent,PaymentCollection,MultipleSeriesComponent,IncomeVoucherComponent,PostDirectoryComponent,\r\n    PaymentCollection,\r\n    PartyBalanceConfirmationComponent,\r\n    PartyReconciliationComponent,\r\n    CellPayVoucherComponent,\r\n    ReverseCreditNoteComponent,\r\n    NewCostingDetailComponent,\r\n    NewPurchaseDetailComponent,\r\n    newIndividualCostDetail,\r\n    AddPurchaseInvoiceComponent,\r\n    CashCollection,\r\n    AccountHeadingWiseDepreciationDetailComponent,\r\n    ItemWiseDepreciationDetailComponent,\r\n    DepreciationDetailsComponent,\r\n    SearchPipe,\r\n    BulkPrintComponent    \r\n    \r\n    \r\n  ],\r\n  providers: [CanActivateTeam, TransactionService,PrintInvoiceComponent,BillTrackingAmendmentService, VehicleCostTrackingService],\r\n\r\n})\r\nexport class AccountVouchersModule {}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/pages/AccountVoucher/accountvoucher.module.ts"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAsCA;AAAA;AACA;AAAA;AAAA;AADA;AAnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1DA;AAEA;AAEA;AAEA;AAUA;AARA;AAMA;AAGA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAAA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;;;;;;;;;;;;;;;AC5PA;AAKA;AAAA;AAAA;AAAA;AAAA;AAHA;AAIA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;;AAnCA;;;;;;;;;;;ACPA;AAEA;AAEA;AAAA;AAIA;AACA;AACA;AACA;AAAA;AAAA;;AANA;AAAA;AAAA;AAAA;AACA;AAAA;;AAAA;AAEA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;;;;;;;;;;;;;ACVA;AAEA;AAAA;AAEA;AACA;AACA;AACA;AAwHA;AA/GA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;;;;;;;;;;;;;AC7HA;AAiBA;AAAA;AAAA;AAAA;AAfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;;;;;;;;;;;AC9EA;AAIA;AAOA;AAAA;AAAA;AAAA;AALA;AACA;AACA;AAIA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;;;;;;;;;;;;AClDA;AAGA;AAEA;AAAA;AAEA;AAKA;AAUA;AARA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;;AAbA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;;AAAA;;;;;;;;;;;;ACZA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;AAQA;AACA;AAAA;AAAA;AAAA;;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;;;AAGA;AACA;AAAA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAOA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;;;;;;;;;;;;AC/IA;AACA;AACA;AACA;AAEA;AACA;AACA;AAGA;AAIA;AAMA;AACA;AAKA;AACA;AACA;AAmCA;AAAA;AACA;AAAA;AAAA;AADA;AAjCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAGA;AACA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;AC/DA;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAWA;AAAA;AAAA;AATA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;;;;;;;;;AASA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;;;;;;;;;;AAUA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;;;;;;;;;;;;;;;;AC/PA;AAEA;AAEA;AAAA;AAGA;AAEA;AAeA;AAbA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;;AAlBA;AAAA;AAAA;AAAA;AACA;AAAA;;AAAA;AAEA;AAAA;;AAAA;;;;;;;;;;;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAkBA;AAAA;AAOA;AANA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAPA;AAhBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;;;;;;;;;;;;;;;;;;;;;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACZA;AAEA;;;;;;;;;;;;ACFA;AAEA;AACA;AAEA;AACA;AAOA;AALA;AAQA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AA+GA;AA7GA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AApLA;AAAA;;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAdA;AALA;AACA;AACA;AACA;AACA;AACA;AAAA;;;;;;;;;;;;;;;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAOA;AAwCA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAxCA;AACA;AAIA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AA6LA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AAEA;AACA;AApkBA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAIA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAEA;AACA;AAEA;AAAA;AAEA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAKA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAxZA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AARA;AALA;AACA;AACA;AAEA;AAyCA;AACA;AACA;AA1CA;AAAA;;;;;;;;;;;;;;;;;;;;ACdA;AASA;AASA;AAAA;AAKA;AAAA;AAAA;;AAEA;AAEA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAzBA;AAAA;;AAAA;AAHA;AANA;AACA;AACA;AAGA;AAMA;AALA;AAAA;;;;;;;;;;;;AClBA;AAEA;AAOA;AAAA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AATA;AAJA;AACA;AACA;AACA;;AACA;AAAA;;;;;;;;;;;;ACTA;AAEA;AAmBA;AAjBA;AAoBA;AAEA;AAUA;AARA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAbA;AAAA;AAAA;AAAA;AACA;AAAA;;AAAA;AAEA;AAAA;;AAAA;AALA;AAjBA;AACA;AACA;AAcA;AACA;AAAA;;;;;;;;;;;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACRA;AAEA;AAgBA;AAAA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAXA;AAdA;AACA;AACA;AACA;AAUA;;AACA;AAAA;;;;;;;;;;;;AClBA;AACA;AAEA;AAcA;AAAA;AAIA;AAAA;AAAA;AAFA;;AAIA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AApBA;AAZA;AACA;AACA;AASA;AAKA;AAJA;AAAA;;;;;;;;;;;;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACdA;AAEA;AAiBA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AALA;AAfA;AACA;AACA;AACA;AAWA;;AACA;AAAA;;;;;;;;;;;;ACnBA;AAEA;AAoBA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AALA;AAlBA;AACA;AACA;AAeA;;AACA;AAAA;;;;;;;;;;;;ACtBA;AAEA;AAkBA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AALA;AAhBA;AACA;AACA;AACA;AAYA;;AACA;AAAA;;;;;;;;;;;;ACpBA;AASA;AAQA;AAMA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AArBA;AAAA;AAAA;AAAA;AACA;AAAA;;AAAA;AAJA;AANA;AACA;AACA;AAGA;AAOA;AANA;AAAA;;;;;;;;;;;;ACjBA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACLA;AAEA;AAYA;AAAA;AAGA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAFA;AAVA;AACA;AACA;AAOA;AACA;AAAA;;;;;;;;;;;;ACdA;AAEA;AACA;AACA;AAYA;AAVA;AAkBA;AACA;AACA;AAEA;AASA;AAPA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAnBA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AAEA;AAAA;;AAAA;AAZA;AAVA;AACA;AACA;AAOA;AACA;AAAA;;;;;;;;;;;;;;AChBA;AACA;AAEA;AAUA;AAAA;AAKA;AAAA;AAHA;AACA;;AAIA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AA5BA;AAPA;AACA;AACA;AAIA;;AACA;AAAA;;;;;;;;;;;;;ACbA;AACA;AACA;AAEA;AAgBA;AAAA;AAIA;AAAA;AAAA;AAFA;;AAIA;AAEA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AA9BA;AAbA;AACA;AACA;AAUA;AAKA;AAJA;AAAA;;;;;;;;;;;;;;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACXA;AACA;AAEA;AAcA;AAAA;AAIA;AAAA;AAFA;;AAIA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAdA;AAXA;AACA;AACA;AAQA;;AACA;AAAA;;;;;;;;;;;;;ACjBA;AACA;AAEA;AAkBA;AAAA;AAIA;AAAA;AAFA;;AAIA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAdA;AAfA;AACA;AACA;AAYA;;AACA;AAAA;;;;;;;;;;;;;ACrBA;AAEA;AACA;AAkCA;AAhCA;AAoCA;AAEA;AAEA;AAkBA;AAhBA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAxBA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;;AAAA;AAEA;AAAA;;AAAA;AANA;AAhCA;AACA;AACA;AACA;AA4BA;AACA;AAAA;;;;;;;;;;;;;ACrCA;AAEA;AAmCA;AAjCA;AAsCA;AAIA;AA+EA;AA7EA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAtFA;AAAA;;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;;AAAA;AALA;AAjCA;AACA;AACA;AACA;AA6BA;AACA;AAAA;;;;;;;;;;;;ACrCA;AAEA;AACA;AAWA;AAAA;AAmBA;AAbA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAjBA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAJA;AATA;AACA;AACA;AAMA;AACA;AAAA;;;;;;;;;;;;;ACdA;AAEA;AACA;AAaA;AAXA;AAoBA;AACA;AACA;AACA;AACA;AA+CA;AA7CA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AA1DA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AAbA;AAXA;AACA;AACA;AAQA;AACA;AAAA;;;;;;;;;;;;;AChBA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACLA;AACA;AAMA;AAJA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAhBA;AAAA;AAAA;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AAjBA;AAJA;AACA;AACA;AACA;AACA;AAAA;;;;;;;;;;;;ACPA;AAGA;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACTA;AAEA;AAQA;AAIA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAAA;AARA;AAAA;AAAA;AAAA;AAFA;AANA;AACA;AACA;AAGA;AAKA;AAJA;AAAA;;;;;;;;;;;;ACVA;AAEA;AAWA;AATA;AAYA;AACA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AACA;AAAA;;AAAA;AAHA;AATA;AACA;AACA;AAMA;AACA;AAAA;;;;;;;;;;;;ACbA;AAEA;AASA;AAMA;AAAA;AAFA;AAGA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AArBA;AAAA;AAAA;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AAJA;AAPA;AACA;AACA;AAIA;AAOA;AANA;AAAA;;;;;;;;;;;;ACXA;AAEA;AAQA;AAAA;AAKA;AAAA;AAAA;AAHA;AAAA;AAAA;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AAJA;AANA;AACA;AACA;AAGA;AACA;AAAA;;;;;;;;;;;;ACVA;AAEA;AAUA;AARA;AAYA;AACA;AAAA;AAAA;AAHA;AAAA;AAAA;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AAJA;AARA;AACA;AACA;AAKA;AACA;AAAA;;;;;;;;;;;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACjBA;AAEA;AACA;AAeA;AAbA;AAeA;AAGA;AAuCA;AArCA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAzCA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;;AAAA;AALA;AAbA;AACA;AACA;AACA;AASA;AACA;AAAA;;;;;;;;;;;;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACRA;AAEA;AAwBA;AAtBA;AA0BA;AACA;AACA;AAAA;AAAA;AAJA;AAAA;AAAA;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AALA;AAtBA;AACA;AACA;AAmBA;AACA;AAAA;;;;;;;;;;;;AC1BA;AAEA;AACA;AAqBA;AAnBA;AAwBA;AAOA;AALA;AACA;AAEA;AACA;AACA;AAAA;AAVA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;;AAAA;AALA;AAnBA;AACA;AACA;AAgBA;AACA;AAAA;;;;;;;;;;;;;ACxBA;AAEA;AAkBA;AAhBA;AAsBA;AACA;AACA;AAAA;AAAA;AANA;AAAA;AAAA;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AAEA;AAAA;;AAAA;AACA;AAAA;;AAAA;AAPA;AAhBA;AACA;AACA;AAaA;AACA;AAAA;;;;;;;;;;;;ACpBA;AAEA;AAMA;AAJA;AAWA;AACA;AACA;AACA;AACA;AAAA;AAAA;AATA;AAAA;AAAA;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AAVA;AAJA;AACA;AACA;AACA;AACA;AAAA;;;;;;;;;;;;ACRA;AAOA;AAIA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACxBA;AACA;AAEA;AAUA;AAAA;AAAA;AANA;AACA;AACA;AAEA;AAGA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;AAGA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;;;;;;;;;;;;;AC3IA;AAAA;AAcA;AARA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;;AAZA;AACA;AACA;;;;;;;;;;ACJA;AAAA;AAKA;AAHA;AACA;AACA;AACA;AAAA;;;;;;;;;;;ACLA;AAAA;AAqBA;AATA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;;AAnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACVA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAIA;AACA;AACA;AAEA;AA2BA;AAsBA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AApBA;AAEA;AACA;AAIA;AAGA;AAGA;AASA;AACA;AACA;AAEA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AAIA;AAEA;AACA;AACA;AACA;AACA;AAGA;AAEA;AACA;AAEA;AACA;AAGA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAIA;AAEA;AAGA;AAAA;AACA;AAEA;AAEA;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AAIA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAGA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAIA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAAA;AA9bA;AADA;AACA;AAAA;AAGA;AADA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAPA;AAzBA;AACA;AACA;AACA;AACA;AACA;AAkBA;AACA;AAwBA;AACA;AACA;AACA;AACA;AACA;AA5BA;AAAA;;;;;;;;;;;;;;;;;;;;;;;AC5CA;AAAA;AAaA;AAAA;AAAA;;AAEA;AAAA;AAkBA;AAAA;AAAA;;;;;;;;;;;;ACjCA;AAOA;AACA;AAAA;AAAA;AACA;AAAA;AAFA;AALA;AACA;AACA;AACA;;AAEA;AAAA;;;;;;;;;;;ACPA;AAEA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AAQA;AA0BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAhpcA;AADA;AACA;AAAA;AAxBA;AAPA;AACA;AACA;AACA;AAEA;AA6BA;AACA;AACA;AACA;AACA;AACA;AACA;AAjCA;AAAA;;;;;;;;;;;;;;;;;;;;;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAOA;AAmCA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAjCA;AAIA;AAIA;AAIA;AAIA;AAIA;AACA;AACA;AAgFA;AApxjBA;AADA;AACA;AAAA;AAIA;AADA;AACA;AAAA;AAIA;AADA;AACA;AAAA;AAIA;AADA;AACA;AAAA;AAIA;AADA;AACA;AAAA;AAuXA;AADA;;AACA;;AAWA;AArZA;AALA;AACA;AACA;AACA;AAqCA;AACA;AACA;AArCA;AAAA;;;;;;;;;;;;;;;;;;;;ACfA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAQA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA;AACA;AACA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AArGA;AAAA;AAAA;AAAA;AAJA;AANA;AACA;AACA;AACA;AACA;AACA;AAQA;AACA;AACA;AACA;AACA;AACA;AAZA;AAAA;;;;;;;;;;;;;;;;;;;AClBA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAQA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA;AACA;AACA;AAYA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AA5FA;AANA;AACA;AACA;AACA;AACA;AACA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AAbA;AAAA;;;;;;;;;;;;;;;;;;;AClBA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAQA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA;AACA;AACA;AAYA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AA1FA;AANA;AACA;AACA;AACA;AACA;AACA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AAbA;AAAA;;;;;;;;;;;;;;;;;;;AClBA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAQA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA;AACA;AACA;AAWA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAtHA;AAAA;AAAA;AAAA;AAJA;AANA;AACA;AACA;AACA;AACA;AACA;AAQA;AACA;AACA;AACA;AACA;AACA;AAZA;AAAA;;;;;;;;;;;;;;;;;;;AClBA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAQA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA;AACA;AACA;AAabA;AAAA;;;;;;;;;;;;;;;;;;;;;;ACtBA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AAmCA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAjpjBA;AADA;AACA;AAAA;AAIA;AADA;AACA;AAAA;AAIA;AADA;AACA;AAAA;AAGA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAYA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAyfA;AADA;;AACA;;AAsBA;AA/iBA;AALA;AACA;AACA;AACA;AAqCA;AACA;AACA;AArCA;AAAA;;;;;;;;;;;;;;;;;;;;;AChBA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAQA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA;AACA;AACA;AAaA;AACA;AACA;AACA;AAGA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAzGA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AALA;AANA;AACA;AACA;AACA;AACA;AACA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AAbA;AAAA;;;;;;;;;;;;;;;;;;;;;;ACtBA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAQA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA;AACA;AACA;AAYA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AA5FA;AANA;AACA;AACA;AACA;AACA;AACA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AAbA;AAAA;;;;;;;;;;;;;;;;;;;AClBA;AACA;AACA;AACA;AACA;AACA;AAOA;AAgBA;AAAA;AACA;AACA;AACA;AAhBA;AAEA;AAIA;AACA;AACA;AA2JA;AAjaA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;AACA;AAGA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AA7PA;AAAA;AAAA;AAAA;AAFA;AANA;AACA;AACA;AACA;AACA;AACA;AAkBA;AACA;AACA;AAnBA;AAAA;;;;;;;;;;;;;;;;ACZA;AACA;AAEA;AAEA;AAIA;AAOA;AACA;AAEA;AAKA;AAOA;AAoBA;AACA;AACA;AACA;AACA;AACA;AAvBA;AACA;AAKA;AAGA;AAIA;AAGA;AASA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAwJA;AAAA;AAxNA;AALA;AACA;AACA;AACA;AACA;AAsBA;AACA;AACA;AACA;AACA;AAzBA;AAAA;;;;;;;;;;;;;;;;;;;AC/BA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AASA;AA0EA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA9EA;AAKA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAGA;AAEA;AAGA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAGA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AAGA;;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAxjBA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAwCA;AAAA;;AAAA;AA7CA;AARA;AACA;AACA;AACA;AACA;AAEA;AA4EA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAjFA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;AC1BA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAQA;AAoBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAllwBA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AA0pBA;AADA;;AACA;;AAqBA;AAlrBA;AANA;AACA;AACA;AACA;AAEA;AAqBA;AApBA;AAAA;;;;;;;;;;;;;;;;;;;AChBA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AASA;AAkEA;AAUA;AAVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAzEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAGA;AACA;AACA;AACA;AAEA;AAUA;AAKA;AAGA;AAGA;AAGA;AAIA;AAGA;AAKA;AAsoCA;AACA;AAuBA;AA9ogBA;AAAA;AA9sCA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAQA;AADA;AACA;AAAA;AAGA;AADA;AACA;AAAA;AAGA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAYA;AADA;AACA;AAAA;AA7DA;AAPA;AACA;AACA;AACA;AACA;AAEA;AAmEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA1EA;AAAA;;;;;;;;;;;;;;;;;;;;;ACpBA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAOA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AACA;AACA;AASA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAzHA;AALA;AACA;AACA;AACA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AAXA;AAAA;;;;;;;;;;;;;;;;;;AChBA;AACA;AACA;AACA;AACA;AASA;AAgBA;AAAA;AACA;AAAA;AAAA;AAAA;AAhBA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAmBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AAlCA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AAgrSA;AANA;AACA;AACA;AACA;AACA;AAmBA;AAjBA;AAAA;;;;;;;;;;;;;;;ACbA;AAEA;AACA;AACA;AACA;AACA;AAOA;AAgBA;AAAA;AACA;AACA;AACA;AAhBA;AAEA;AAIA;AACA;AACA;AA2JA;AAjaA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;AACA;AAGA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AA7PA;AAAA;AAAA;AAAA;AAFA;AANA;AACA;AACA;AACA;AACA;AACA;AAkBA;AACA;AACA;AAnBA;AAAA;;;;;;;;;;;;;;;;ACbA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AAIA;AAQA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA;AACA;AAEA;AAUA;AACA;AACA;AACA;AACA;AAGA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAAA;AA9FA;AAAA;AAAA;AAAA;AAHA;AANA;AACA;AACA;AACA;AACA;AACA;AAQA;AACA;AACA;AACA;AACA;AACA;AAZA;AAAA;;;;;;;;;;;;;;;;;;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAOA;AAgBA;AAAA;AACA;AACA;AACA;AACA;AACA;AAlBA;AAEA;AAIA;AACA;AACA;AAoKA;AAxaA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;AACA;AAGA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AAvQA;AAAA;AAAA;AAAA;AAFA;AANA;AACA;AACA;AACA;AACA;AACA;AAkBA;AACA;AACA;AACA;AACA;AArBA;AAAA;;;;;;;;;;;;;;;;;;ACdA;AACA;AAEA;AAEA;AAIA;AAOA;AACA;AAEA;AAMA;AACA;AAOA;AAsBA;AACA;AACA;AACA;AACA;AACA;AACA;AAzBA;AACA;AAKA;AAGA;AAIA;AAGA;AAWA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAtEA;AALA;AACA;AACA;AACA;AACA;AAwBA;AACA;AACA;AACA;AACA;AACA;AA5BA;AAAA;;;;;;;;;;;;;;;;;;;;ACjhEA;AAAA;;;;;;;;;;;;;;;;;;;;ACpBA;AACA;AACA;AACA;AACA;AACA;AAOA;AAKA;AAAA;AAAA;AAAA;AAAA;AAJA;AACA;AAEA;AA2KA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAhsBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA5BA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AAEA;AACA;AAGA;AAalNA;AADA;AACA;AAAA;AApBA;AAPA;AACA;AACA;AACA;AAEA;AAyBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA9BA;AAAA;;;;;;;;;;;;;;;;;;;;;;;ACvBA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAEA;AACA;AACA;AACA;AAUA;AAiBA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAlBA;AAGA;AACA;AACA;AAEA;AACA;AAGA;AAEA;AA0QA;AApxWA;AAAA;AAAA;AAAA;AAXA;AAPA;AACA;AACA;AACA;AACA;AAEA;AAkBA;AACA;AACA;AAnBA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;AC5BA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AAsKA;AAkBA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAnBA;AAGA;AACA;AACA;AAEA;AACA;AAGA;AAEA;AACA;AAsSA;AAhvgBA;AAAA;AAAA;AAAA;AAoPA;AADA;;AACA;;AAGA;AAGA;AADA;;AACA;;AAGA;AAGA;AADA;;AACA;;AAGA;AA9QA;AAlmBA;AACA;AACA;AApBA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;AC1LA;;;;;;;;ACAA;AAoBA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;;AA/BA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACRA;AACA;AAIA;AACA;AAGA;AAAA;AAMA;AAAA;AAAA;AAAA;AAFA;AAIA;AACA;AACA;AACA;;AACA;AAEA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;;;;AAIA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAGA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;;;;;;;;;;;;;;;AC/IA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACZA;AACA;AACA;AACA;AACA;AACA;AAGA;AAIA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;;;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AA/CA;AAFA;AAMA;AACA;AALA;AAAA;;;;;;;;;;;;;;;;;ACRA;AAIA;AAEA;AACA;AAEA;AAcA;AA2CA;AAAA;AAAA;AAzCA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAmCA;AAjCA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;AAcA;AACA;AAEA;AAAA;AACA;AACA;AAKA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAjFA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AAJA;AAbA;AAEA;AACA;AACA;AAKA;AAEA;AA6CA;AA3CA;AAAA;;;;;;;;;;;;;;;;ACvBA;AAEA;AACA;AAEA;AAGA;AAGA;AAAA;AAAA;AAFA;AAIA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AA3BA;AADA;AAIA;AAHA;AAAA;;;;;;;;;;;;;;;ACPA;AAKA;AAEA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAvBA;AAAA;;AAAA;AAEA;AAAA;;;;AAoBA;AA1BA;AAHA;AACA;AACA;AAGA;AAFA;AAAA;;;;;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzFA;AACA;AAEA;AAEA;AACA;AASA;AAWA;AACA;AACA;AACA;AACA;AAXA;AACA;AACA;AACA;AACA;AACA;AACA;AAOA;AACA;AACA;AAEA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AAIA;AAEA;AACA;AACA;AAIA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAEA;AAEA;AAAA;AA1HA;AANA;AACA;AACA;AACA;AAEA;AAaA;AACA;AACA;AACA;AAfA;AAAA;;;;;;;;;;;;;;;ACfA;AACA;AAIA;AACA;AAQA;AAGA;AACA;AACA;AACA;AALA;AACA;AAOA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AArBA;AANA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AANA;AAAA;;;;;;;;;;;;;;ACdA;AACA;AACA;AAEA;AACA;AACA;AAOA;AAMA;AACA;AACA;AACA;AAPA;AACA;AACA;AAMA;AACA;AAIA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAvDA;AAAA;AAAA;AAAA;AAGA;AAAA;;AAAA;AAJA;AALA;AACA;AACA;AACA;AACA;AAQA;AACA;AACA;AATA;AAAA;;;;;;;;;;;;;;;;;ACbA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAIA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;;;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AAEA;AAGA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAMA;AACA;AACA;AACA;AAGA;AAAA;AAhGA;AAFA;AAIA;AAFA;AAAA;;;;;;;;;;;;;;;;;;;;ACZA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAKA;AAQA;AAuCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA1CA;AAGA;AAGA;AAIA;AAIA;AAEA;AACA;AACA;AACA;AASA;AAIA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAEA;AAGA;AACA;AAEA;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AAEA;AAAA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AAEA;AAEA;AAEA;AAGA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAGA;AAMA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAKA;AAAA;AA9nBA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAbA;AANA;AACA;AACA;AACA;AACA;AACA;AAyCA;AACA;AACA;AACA;AACA;AACA;AACA;AA9CA;AAAA;;;;;;;;;;;;;;;;;;;ACrBA;AACA;AACA;AACA;AAGA;AACA;AACA;AAGA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;;;AAAA;AAEA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AAjDA;AAFA;AAMA;AAJA;AAAA;;;;;;;;;;;;;;;;;;ACXA;AACA;AAEA;AAGA;AACA;AAEA;AACA;AACA;AACA;AAsCA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AARA;AACA;AACA;AAIA;AAWA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AA/DA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AA0DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAKA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAnJA;AAnCA;AACA;AACA;AA6BA;AAEA;AAWA;AATA;AAAA;;;;;;;;;;;;;;;;;;;;;AClDA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAOA;AAyBA;AAAA;AACA;AACA;AACA;AACA;AA5BA;AAIA;AACA;AAEA;AAUA;AAEA;AAEA;AASA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAzEA;AALA;AACA;AACA;AACA;AACA;AA0BA;AACA;AACA;AACA;AACA;AA7BA;AAAA;;;;;;;;;;;;;;;;;ACfA;AACA;AAKA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAUA;AA8CA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AApDA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAMA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AA6CA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAoEA;AA5JA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AA0DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAAA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAAA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AA14BA;AAAA;AAAA;AAAA;AAFA;AAPA;AACA;AACA;AACA;AAEA;AAiDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAvDA;AAAA;;;;;;;;;;;;;;;;;;;;;;;ACzBA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAGA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;;;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AAEA;AAGA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAMA;AACA;AACA;AACA;AAEA;AAAA;AAlGA;AAFA;AAIA;AAFA;AAAA;;;;;;;;;;;;;;;;;;;;ACXA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AASA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AAbA;AACA;AACA;AAaA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAAA;AA1EA;AAAA;AAAA;AAAA;AAJA;AAPA;AACA;AACA;AACA;AACA;AACA;AAWA;AACA;AACA;AACA;AACA;AACA;AAdA;AAAA;;;;;;;;;;;;;;;;;;;ACnBA;AAIA;AAAA;AAqEA;AApEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAAA;AAGA;AACA;AAAA;AAGA;AACA;AAAA;AAGA;AACA;AAAA;AAGA;AACA;AAAA;AAGA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AArEA;AAFA;AAEA;AAAA;;;;;;;;;;;ACJA;AAEA;AACA;AAEA;AACA;AACA;AASA;AAKA;AAAA;AACA;AAAA;AACA;AACA;AACA;AANA;AACA;AAOA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAzFA;AAPA;AACA;AACA;AACA;AACA;AAEA;AAMA;AACA;AACA;AACA;AACA;AATA;AAAA;;;;;;;;;;;;;;;;AChBA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AAUA;AAkCA;AACA;AACA;AACA;AACA;AACA;AApCA;AACA;AAEA;AAGA;AASA;AACA;AACA;AACA;AAKA;AAEA;AAEA;AAEA;AA+DA;AACA;AAvDA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AApEA;AAAA;AACA;AACA;AACA;AAEA;AAEA;;;AALA;AAsxmBA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AA4bA;AADA;;AACA;;AAUA;AAreA;AAPA;AACA;AACA;AACA;AACA;AAEA;AAoCA;AACA;AACA;AACA;AACA;AAvCA;AAAA;;;;;;;;;;;;;;;;;ACnBA;AAEA;AACA;AAEA;AASA;AAKA;AAAA;AAAA;AAAA;AAAA;AAFA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AAAA;AArBA;AAPA;AACA;AACA;AACA;AACA;AAEA;AAMA;AALA;AAAA;;;;;;;;;;;;;;ACdA;AACA;AACA;AAGA;AACA;AASA;AAIA;AAAA;AAAA;AAAA;AAAA;AAFA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAjBA;AAPA;AACA;AACA;AACA;AACA;AAEA;AAKA;AAJA;AAAA;;;;;;;;;;;;;;;ACdA;AAUA;AAAA;AAMA;AAAA;AAAA;AALA;AAAA;;AAAA;AACA;AAAA;;AAAA;AAFA;AARA;AACA;AACA;AAKA;AACA;AAAA;;;;;;;;;;;ACXA;AACA;AACA;AA2CA;AAOA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AA5BA;AAFA;AAEA;AAAA;AAJA;AAzCA;AACA;AACA;AAQA;AA8BA;AAQA;AAPA;AAAA;;;;;;;;;;;;;AC7CA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAQA;AAwDA;AACA;AACA;AACA;AACA;AACA;AACA;AA3DA;AACA;AAEA;AAGA;AASA;AACA;AACA;AACA;AAKA;AACA;AAIA;AAEA;AAEA;AAEA;AAIA;AAEA;AAGA;AAEA;AAEA;AAEA;AAyEA;AACA;AA9DA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA5FA;AAAA;AACA;AACA;AACA;AAEA;AAEA;;;AALA;AA8FA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAGA;AACA;AAEA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAIA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AAGA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAGA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAvsCA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAwoBA;AADA;;AACA;;AAUA;AArsBA;AAPA;AACA;AACA;AACA;AACA;AAEA;AA0DA;AACA;AACA;AACA;AACA;AACA;AA9DA;AAAA;;;;;;;;;;;;;;;;;;;;AClBA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAQA;AAwDA;AACA;AACA;AACA;AACA;AACA;AACA;AAvDA;AACA;AAEA;AAGA;AASA;AACA;AACA;AACA;AASA;AAEA;AAEA;AAEA;AAIA;AAEA;AAGA;AAEA;AAEA;AAEA;AAyEA;AACA;AAjEA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAvFA;AAAA;AACA;AACA;AACA;AAEA;AAEA;;;AALA;AAyxtCA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAgwBA;AADA;;AACA;;AAUA;AAh0BA;AAPA;AACA;AACA;AACA;AACA;AAEA;AA0DA;AACA;AACA;AACA;AACA;AACA;AA9DA;AAAA;;;;;;;;;;;;;;;;;;;;ACnBA;AAEA;AAGA;AACA;AASA;AAKA;AAAA;AAAA;AAAA;AACA;AAHA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AAAA;AAtBA;AAPA;AACA;AACA;AACA;AACA;AAEA;AAMA;AACA;AANA;AAAA;;;;;;;;;;;;;;ACfA;AACA;AACA;AAGA;AACA;AACA;AASA;AAIA;AAAA;AAAA;AAAA;AACA;AAHA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAlBA;AAPA;AACA;AACA;AACA;AACA;AAEA;AAKA;AACA;AALA;AAAA;;;;;;;;;;;;;;AChvIA;AAPA;AACA;AACA;AACA;AACA;AACA;AAaA;AACA;AACA;AACA;AAdA;AAAA;;;;;;;;;;;;;;;;;;AClBA;AAOA;AACA;AAAA;AAAA;AACA;AAAA;AAFA;AALA;AACA;AACA;AACA;;AAEA;AAAA;;;;;;;;;;;ACPA;AACA;AACA;AAOA;AA8BA;AAAA;AA7BA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AAAA;AA/CA;AAAA;;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAHA;AALA;AACA;AACA;AACA;AACA;AA+BA;AA9BA;AAAA;;;;;;;;;;;;;;ACTA;AAQA;AAOA;AASA;AARA;AACA;AAEA;AACA;AACA;AACA;AAIA;AAEA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAIA;AAAA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAIA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AAhHA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;AAAA;AAAA;AAgGA;AAFA;AACA;;AACA;;AAOA;AA1GA;AALA;AACA;AACA;AACA;AACA;;AACA;AAAA;AAmHA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;;AAEA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;;AAEA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;;AAEA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;;AAEA;AACA;AAEA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;;AACA;AACA;AACA;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;;ACjLA;AACA;AACA;AACA;AACA;AAYA;AAAA;AAOA;AANA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAPA;AAVA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;;;;;;;;;;;;;;;;AChBA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAYA;AAAA;AAmDA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AArtIA;AARA;AACA;AACA;AACA;AACA;AACA;AACA;AAqDA;AACA;AACA;AACA;AAtDA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;AC1BA;AAGA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AA/FA;AADA;AAEA;AADA;AAAA;;;;;;;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;;;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAGA;AAAA;AAtCA;AAFA;AAIA;AACA;AACA;AAJA;AAAA;;;;;;;;;;;;;;;;;;;;;;;ACZA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAGA;AAEA;AACA;AAEA;;;;;;;;;;;;;;ACrBA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAkFA;AAAA;AAAA;AAAA;AAAA;AAAA;AA/EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","sourceRoot":""}