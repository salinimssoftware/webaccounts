webpackJsonpac__name_([3,1],{

/***/ 1157:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_common__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__angular_forms__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__theme_nga_module__ = __webpack_require__(44);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__node_modules_ng2_smart_table_src_ng2_smart_table_module__ = __webpack_require__(1171);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__sales_routing__ = __webpack_require__(1553);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__common_services_permission_guard_service__ = __webpack_require__(90);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_ng2_bootstrap__ = __webpack_require__(26);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__common_Transaction_Components_transaction_module__ = __webpack_require__(565);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__common_Transaction_Components_transaction_service__ = __webpack_require__(7);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__AccountVoucher_accountvoucher_module__ = __webpack_require__(572);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__components_CreditNoteItemWise_creditnote_itembase_component__ = __webpack_require__(1379);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12__common_popupLists_popuplist_module__ = __webpack_require__(219);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13__components_salesinvoice_AddSalesInvoices__ = __webpack_require__(1380);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_14__common_popupLists_generic_grid_generic_popup_grid_module__ = __webpack_require__(212);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_15_ngx_pagination__ = __webpack_require__(52);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_16__common_popupLists_file_uploader_file_uploader_popup_module__ = __webpack_require__(566);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_17__sales_component__ = __webpack_require__(1381);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SalesModule", function() { return SalesModule; });


















var SalesModule = (function () {
    function SalesModule() {
    }
    return SalesModule;
}());
SalesModule = __decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["NgModule"])({
        imports: [
            __WEBPACK_IMPORTED_MODULE_1__angular_common__["CommonModule"],
            __WEBPACK_IMPORTED_MODULE_2__angular_forms__["FormsModule"],
            __WEBPACK_IMPORTED_MODULE_3__theme_nga_module__["a" /* NgaModule */],
            __WEBPACK_IMPORTED_MODULE_5__sales_routing__["a" /* routing */],
            __WEBPACK_IMPORTED_MODULE_4__node_modules_ng2_smart_table_src_ng2_smart_table_module__["Ng2SmartTableModule"],
            __WEBPACK_IMPORTED_MODULE_7_ng2_bootstrap__["a" /* ModalModule */].forRoot(),
            __WEBPACK_IMPORTED_MODULE_8__common_Transaction_Components_transaction_module__["a" /* TransactionModule */],
            __WEBPACK_IMPORTED_MODULE_10__AccountVoucher_accountvoucher_module__["AccountVouchersModule"],
            __WEBPACK_IMPORTED_MODULE_12__common_popupLists_popuplist_module__["a" /* popupListModule */],
            __WEBPACK_IMPORTED_MODULE_15_ngx_pagination__["a" /* NgxPaginationModule */],
            __WEBPACK_IMPORTED_MODULE_14__common_popupLists_generic_grid_generic_popup_grid_module__["a" /* GenericPopupGridModule */].forRoot(),
            __WEBPACK_IMPORTED_MODULE_16__common_popupLists_file_uploader_file_uploader_popup_module__["a" /* FileUploaderPopupModule */].forRoot()
        ],
        declarations: [
            __WEBPACK_IMPORTED_MODULE_17__sales_component__["a" /* Sales */],
            __WEBPACK_IMPORTED_MODULE_11__components_CreditNoteItemWise_creditnote_itembase_component__["a" /* CreditNoteItemBaseComponent */],
            __WEBPACK_IMPORTED_MODULE_13__components_salesinvoice_AddSalesInvoices__["a" /* AddSalesInvoiceComponent */]
        ],
        providers: [__WEBPACK_IMPORTED_MODULE_6__common_services_permission_guard_service__["a" /* CanActivateTeam */], __WEBPACK_IMPORTED_MODULE_9__common_Transaction_Components_transaction_service__["a" /* TransactionService */]]
    })
], SalesModule);



/***/ }),

/***/ 1162:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__data_set_data_set__ = __webpack_require__(1221);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_rxjs_Rx__ = __webpack_require__(24);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_rxjs_Rx___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_rxjs_Rx__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__helpers__ = __webpack_require__(1170);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return Grid; });



var Grid = (function () {
    function Grid(source, settings) {
        this.createFormShown = false;
        this.onSelectRowSource = new __WEBPACK_IMPORTED_MODULE_1_rxjs_Rx__["Subject"]();
        this.setSettings(settings);
        this.setSource(source);
    }
    Grid.prototype.showActionColumn = function (position) {
        return this.isCurrentActionsPosition(position) && this.isActionsVisible();
    };
    Grid.prototype.isCurrentActionsPosition = function (position) {
        return position == this.getSetting('actions.position');
    };
    Grid.prototype.isActionsVisible = function () {
        return this.getSetting('actions.add') || this.getSetting('actions.edit') || this.getSetting('actions.delete');
    };
    Grid.prototype.isMultiSelectVisible = function () {
        return this.getSetting('selectMode') === 'multi';
    };
    Grid.prototype.getNewRow = function () {
        return this.dataSet.newRow;
    };
    Grid.prototype.setSettings = function (settings) {
        this.settings = settings;
        this.dataSet = new __WEBPACK_IMPORTED_MODULE_0__data_set_data_set__["a" /* DataSet */]([], this.getSetting('columns'));
        if (this.source) {
            this.source.refresh();
        }
    };
    Grid.prototype.getDataSet = function () {
        return this.dataSet;
    };
    Grid.prototype.setSource = function (source) {
        var _this = this;
        this.source = this.prepareSource(source);
        this.source.onChanged().subscribe(function (changes) { return _this.processDataChange(changes); });
        this.source.onUpdated().subscribe(function (data) {
            var changedRow = _this.dataSet.findRowByData(data);
            changedRow.setData(data);
        });
    };
    Grid.prototype.getSetting = function (name, defaultValue) {
        return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__helpers__["a" /* getDeepFromObject */])(this.settings, name, defaultValue);
    };
    Grid.prototype.getColumns = function () {
        return this.dataSet.getColumns();
    };
    Grid.prototype.getRows = function () {
        return this.dataSet.getRows();
    };
    Grid.prototype.selectRow = function (row) {
        this.dataSet.selectRow(row);
    };
    Grid.prototype.multipleSelectRow = function (row) {
        this.dataSet.multipleSelectRow(row);
    };
    Grid.prototype.onSelectRow = function () {
        return this.onSelectRowSource.asObservable();
    };
    Grid.prototype.edit = function (row) {
        row.isInEditing = true;
    };
    Grid.prototype.view = function (row) {
        row.isInEditing = true;
    };
    Grid.prototype.create = function (row, confirmEmitter) {
        var _this = this;
        var deferred = new __WEBPACK_IMPORTED_MODULE_2__helpers__["b" /* Deferred */]();
        deferred.promise.then(function (newData) {
            newData = newData ? newData : row.getNewData();
            _this.source.prepend(newData).then(function () {
                _this.createFormShown = false;
                _this.dataSet.createNewRow();
            });
        }).catch(function (err) {
            // doing nothing
        });
        if (this.getSetting('add.confirmCreate')) {
            confirmEmitter.emit({
                newData: row.getNewData(),
                source: this.source,
                confirm: deferred
            });
        }
        else {
            deferred.resolve();
        }
    };
    Grid.prototype.save = function (row, confirmEmitter) {
        var _this = this;
        var deferred = new __WEBPACK_IMPORTED_MODULE_2__helpers__["b" /* Deferred */]();
        deferred.promise.then(function (newData) {
            newData = newData ? newData : row.getNewData();
            _this.source.update(row.getData(), newData).then(function () {
                row.isInEditing = false;
            });
        }).catch(function (err) {
            // doing nothing
        });
        if (this.getSetting('edit.confirmSave')) {
            confirmEmitter.emit({
                data: row.getData(),
                newData: row.getNewData(),
                source: this.source,
                confirm: deferred
            });
        }
        else {
            deferred.resolve();
        }
    };
    Grid.prototype.delete = function (row, confirmEmitter) {
        var _this = this;
        var deferred = new __WEBPACK_IMPORTED_MODULE_2__helpers__["b" /* Deferred */]();
        deferred.promise.then(function () {
            _this.source.remove(row.getData());
        }).catch(function (err) {
            // doing nothing
        });
        if (this.getSetting('delete.confirmDelete')) {
            confirmEmitter.emit({
                data: row.getData(),
                source: this.source,
                confirm: deferred
            });
        }
        else {
            deferred.resolve();
        }
    };
    Grid.prototype.processDataChange = function (changes) {
        if (this.shouldProcessChange(changes)) {
            this.dataSet.setData(changes['elements']);
            if (this.getSetting('selectMode') !== 'multi') {
                var row = this.determineRowToSelect(changes);
                if (row) {
                    this.onSelectRowSource.next(row);
                }
            }
        }
    };
    Grid.prototype.shouldProcessChange = function (changes) {
        if (['filter', 'sort', 'page', 'remove', 'refresh', 'load', 'paging'].indexOf(changes['action']) !== -1) {
            return true;
        }
        else if (['prepend', 'append'].indexOf(changes['action']) !== -1 && !this.getSetting('pager.display')) {
            return true;
        }
        return false;
    };
    // TODO: move to selectable? Separate directive
    Grid.prototype.determineRowToSelect = function (changes) {
        if (['load', 'page', 'filter', 'sort', 'refresh'].indexOf(changes['action']) !== -1) {
            return this.dataSet.select();
        }
        if (changes['action'] === 'remove') {
            if (changes['elements'].length === 0) {
                // we have to store which one to select as the data will be reloaded
                this.dataSet.willSelectLastRow();
            }
            else {
                return this.dataSet.selectPreviousRow();
            }
        }
        if (changes['action'] === 'append') {
            // we have to store which one to select as the data will be reloaded
            this.dataSet.willSelectLastRow();
        }
        if (changes['action'] === 'add') {
            return this.dataSet.selectFirstRow();
        }
        if (changes['action'] === 'update') {
            return this.dataSet.selectFirstRow();
        }
        if (changes['action'] === 'prepend') {
            // we have to store which one to select as the data will be reloaded
            this.dataSet.willSelectFirstRow();
        }
        return null;
    };
    Grid.prototype.prepareSource = function (source) {
        var initialSource = this.getInitialSort();
        if (initialSource && initialSource['field'] && initialSource['direction']) {
            source.setSort([initialSource], false);
        }
        if (this.getSetting('pager.display') === true) {
            source.setPaging(1, this.getSetting('pager.perPage'), false);
        }
        source.refresh();
        return source;
    };
    Grid.prototype.getInitialSort = function () {
        var sortConf = {};
        this.getColumns().forEach(function (column) {
            if (column.isSortable && column.defaultSortDirection) {
                sortConf['field'] = column.id;
                sortConf['direction'] = column.defaultSortDirection;
                sortConf['compare'] = column.getCompareFunction();
            }
        });
        return sortConf;
    };
    Grid.prototype.getSelectedRows = function () {
        return this.dataSet.getRows()
            .filter(function (r) { return r.isSelected; })
            .map(function (r) { return r.getData(); });
    };
    Grid.prototype.selectAllRows = function (status) {
        this.dataSet.getRows()
            .forEach(function (r) { return r.isSelected = status; });
    };
    return Grid;
}());



/***/ }),

/***/ 1164:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Cell", function() { return Cell; });
var Cell = (function () {
    function Cell(value, row, column, dataSet) {
        this.value = value;
        this.row = row;
        this.column = column;
        this.dataSet = dataSet;
        this.newValue = '';
        this.newValue = value;
    }
    Cell.prototype.getColumn = function () {
        return this.column;
    };
    Cell.prototype.getRow = function () {
        return this.row;
    };
    Cell.prototype.getValue = function () {
        var valid = this.column.getValuePrepareFunction() instanceof Function;
        var prepare = valid ? this.column.getValuePrepareFunction() : Cell.PREPARE;
        return prepare.call(null, this.value, this.row.getData());
    };
    Cell.prototype.setValue = function (value) {
        this.newValue = value;
    };
    Cell.prototype.getId = function () {
        return this.getColumn().id;
    };
    Cell.prototype.getTitle = function () {
        return this.getColumn().title;
    };
    Cell.prototype.isEditable = function () {
        return this.getColumn().isEditable;
    };
    return Cell;
}());

Cell.PREPARE = function (value) { return value; };


/***/ }),

/***/ 1165:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__lib_data_set_cell__ = __webpack_require__(1164);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DefaultEditor", function() { return DefaultEditor; });


var DefaultEditor = (function () {
    function DefaultEditor() {
        this.onStopEditing = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"]();
        this.onEdited = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"]();
        this.onClick = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"]();
    }
    return DefaultEditor;
}());

__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])(),
    __metadata("design:type", __WEBPACK_IMPORTED_MODULE_1__lib_data_set_cell__["Cell"])
], DefaultEditor.prototype, "cell", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])(),
    __metadata("design:type", String)
], DefaultEditor.prototype, "inputClass", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Output"])(),
    __metadata("design:type", Object)
], DefaultEditor.prototype, "onStopEditing", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Output"])(),
    __metadata("design:type", Object)
], DefaultEditor.prototype, "onEdited", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Output"])(),
    __metadata("design:type", Object)
], DefaultEditor.prototype, "onClick", void 0);


/***/ }),

/***/ 1166:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_rxjs_Rx__ = __webpack_require__(24);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_rxjs_Rx___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_rxjs_Rx__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return DataSource; });

var DataSource = (function () {
    function DataSource() {
        this.onChangedSource = new __WEBPACK_IMPORTED_MODULE_0_rxjs_Rx__["Subject"]();
        this.onAddedSource = new __WEBPACK_IMPORTED_MODULE_0_rxjs_Rx__["Subject"]();
        this.onUpdatedSource = new __WEBPACK_IMPORTED_MODULE_0_rxjs_Rx__["Subject"]();
        this.onRemovedSource = new __WEBPACK_IMPORTED_MODULE_0_rxjs_Rx__["Subject"]();
    }
    DataSource.prototype.refresh = function () {
        this.emitOnChanged('refresh');
    };
    DataSource.prototype.load = function (data) {
        this.emitOnChanged('load');
        return Promise.resolve();
    };
    DataSource.prototype.onChanged = function () {
        return this.onChangedSource.asObservable();
    };
    DataSource.prototype.onAdded = function () {
        return this.onAddedSource.asObservable();
    };
    DataSource.prototype.onUpdated = function () {
        return this.onUpdatedSource.asObservable();
    };
    DataSource.prototype.onRemoved = function () {
        return this.onRemovedSource.asObservable();
    };
    DataSource.prototype.prepend = function (element) {
        this.emitOnAdded(element);
        this.emitOnChanged('prepend');
        return Promise.resolve();
    };
    DataSource.prototype.append = function (element) {
        this.emitOnAdded(element);
        this.emitOnChanged('append');
        return Promise.resolve();
    };
    DataSource.prototype.add = function (element) {
        this.emitOnAdded(element);
        this.emitOnChanged('add');
        return Promise.resolve();
    };
    DataSource.prototype.remove = function (element) {
        this.emitOnRemoved(element);
        this.emitOnChanged('remove');
        return Promise.resolve();
    };
    DataSource.prototype.update = function (element, values) {
        this.emitOnUpdated(element);
        this.emitOnChanged('update');
        return Promise.resolve();
    };
    DataSource.prototype.empty = function () {
        this.emitOnChanged('empty');
        return Promise.resolve();
    };
    DataSource.prototype.setSort = function (conf, doEmit) {
        if (doEmit) {
            this.emitOnChanged('sort');
        }
    };
    DataSource.prototype.setFilter = function (conf, andOperator, doEmit) {
        if (doEmit) {
            this.emitOnChanged('filter');
        }
    };
    DataSource.prototype.addFilter = function (fieldConf, andOperator, doEmit) {
        if (doEmit) {
            this.emitOnChanged('filter');
        }
    };
    DataSource.prototype.setPaging = function (page, perPage, doEmit) {
        if (doEmit) {
            this.emitOnChanged('paging');
        }
    };
    DataSource.prototype.setPage = function (page, doEmit) {
        if (doEmit) {
            this.emitOnChanged('page');
        }
    };
    DataSource.prototype.emitOnRemoved = function (element) {
        this.onRemovedSource.next(element);
    };
    DataSource.prototype.emitOnUpdated = function (element) {
        this.onUpdatedSource.next(element);
    };
    DataSource.prototype.emitOnAdded = function (element) {
        this.onAddedSource.next(element);
    };
    DataSource.prototype.emitOnChanged = function (action) {
        var _this = this;
        this.getElements().then(function (elements) { return _this.onChangedSource.next({
            action: action,
            elements: elements,
            paging: _this.getPaging(),
            filter: _this.getFilter(),
            sort: _this.getSort()
        }); });
    };
    return DataSource;
}());



/***/ }),

/***/ 1167:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return Column; });
var Column = (function () {
    function Column(id, settings, dataSet) {
        this.id = id;
        this.settings = settings;
        this.dataSet = dataSet;
        this.title = '';
        this.type = '';
        this.class = '';
        this.isSortable = false;
        this.isEditable = true;
        this.isFilterable = false;
        this.sortDirection = '';
        this.defaultSortDirection = '';
        this.editor = { type: '', config: {}, component: null };
        this.filter = { type: '', config: {} };
        this.renderComponent = null;
        this.process();
    }
    Column.prototype.getCompareFunction = function () {
        return this.compareFunction;
    };
    Column.prototype.getValuePrepareFunction = function () {
        return this.valuePrepareFunction;
    };
    Column.prototype.getFilterFunction = function () {
        return this.filterFunction;
    };
    Column.prototype.getConfig = function () {
        return this.editor.config;
    };
    Column.prototype.getFilterType = function () {
        return this.filter && this.filter.type;
    };
    Column.prototype.getFilterConfig = function () {
        return this.filter && this.filter.config;
    };
    Column.prototype.process = function () {
        this.title = this.settings['title'];
        this.class = this.settings['class'];
        this.type = this.prepareType();
        this.editor = this.settings['editor'];
        this.filter = this.settings['filter'];
        this.renderComponent = this.settings['renderComponent'];
        this.isFilterable = typeof this.settings['filter'] === 'undefined' ? true : !!this.settings['filter'];
        this.defaultSortDirection = ['asc', 'desc'].indexOf(this.settings['sortDirection']) !== -1 ? this.settings['sortDirection'] : '';
        this.isSortable = typeof this.settings['sort'] === 'undefined' ? true : !!this.settings['sort'];
        this.isEditable = typeof this.settings['editable'] === 'undefined' ? true : !!this.settings['editable'];
        this.sortDirection = this.prepareSortDirection();
        this.compareFunction = this.settings['compareFunction'];
        this.valuePrepareFunction = this.settings['valuePrepareFunction'];
        this.filterFunction = this.settings['filterFunction'];
    };
    Column.prototype.prepareType = function () {
        return this.settings['type'] || this.determineType();
    };
    Column.prototype.prepareSortDirection = function () {
        return this.settings['sort'] === 'desc' ? 'desc' : 'asc';
    };
    Column.prototype.determineType = function () {
        // TODO: determine type by data
        return 'text';
    };
    return Column;
}());



/***/ }),

/***/ 1168:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__cell__ = __webpack_require__(1164);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return Row; });

var Row = (function () {
    function Row(index, data, _dataSet) {
        this.index = index;
        this.data = data;
        this._dataSet = _dataSet;
        this.isSelected = false;
        this.isInEditing = false;
        this.cells = [];
        this.process();
    }
    Row.prototype.getCell = function (column) {
        return this.cells.find(function (el) { return el.getColumn() === column; });
    };
    Row.prototype.getCells = function () {
        return this.cells;
    };
    Row.prototype.getData = function () {
        return this.data;
    };
    Row.prototype.getNewData = function () {
        var values = Object.assign({}, this.data);
        this.getCells().forEach(function (cell) { return values[cell.getColumn().id] = cell.newValue; });
        return values;
    };
    Row.prototype.setData = function (data) {
        this.data = data;
        this.process();
    };
    Row.prototype.process = function () {
        var _this = this;
        this.cells = [];
        this._dataSet.getColumns().forEach(function (column) {
            var cell = _this.createCell(column);
            _this.cells.push(cell);
        });
    };
    Row.prototype.createCell = function (column) {
        var value = typeof this.data[column.id] === 'undefined' ? '' : this.data[column.id];
        return new __WEBPACK_IMPORTED_MODULE_0__cell__["Cell"](value, this, column, this._dataSet);
    };
    return Row;
}());



/***/ }),

/***/ 1169:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__lib_data_set_column__ = __webpack_require__(1167);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return DefaultFilter; });


var DefaultFilter = (function () {
    function DefaultFilter() {
        this.delay = 300;
        this.filter = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"]();
    }
    DefaultFilter.prototype.ngOnDestroy = function () {
        if (this.changesSubscription)
            this.changesSubscription.unsubscribe();
    };
    DefaultFilter.prototype.setFilter = function () {
        this.filter.emit(this.query);
    };
    return DefaultFilter;
}());

__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])(),
    __metadata("design:type", String)
], DefaultFilter.prototype, "query", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])(),
    __metadata("design:type", String)
], DefaultFilter.prototype, "inputClass", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])(),
    __metadata("design:type", __WEBPACK_IMPORTED_MODULE_1__lib_data_set_column__["a" /* Column */])
], DefaultFilter.prototype, "column", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Output"])(),
    __metadata("design:type", Object)
], DefaultFilter.prototype, "filter", void 0);


/***/ }),

/***/ 1170:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(Buffer) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "c", function() { return deepExtend; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return Deferred; });
/* harmony export (immutable) */ __webpack_exports__["a"] = getDeepFromObject;
function isSpecificValue(val) {
    return (val instanceof Buffer
        || val instanceof Date
        || val instanceof RegExp) ? true : false;
}
function cloneSpecificValue(val) {
    if (val instanceof Buffer) {
        var x = new Buffer(val.length);
        val.copy(x);
        return x;
    }
    else if (val instanceof Date) {
        return new Date(val.getTime());
    }
    else if (val instanceof RegExp) {
        return new RegExp(val);
    }
    else {
        throw new Error('Unexpected situation');
    }
}
/**
 * Recursive cloning array.
 */
function deepCloneArray(arr) {
    var clone = [];
    arr.forEach(function (item, index) {
        if (typeof item === 'object' && item !== null) {
            if (Array.isArray(item)) {
                clone[index] = deepCloneArray(item);
            }
            else if (isSpecificValue(item)) {
                clone[index] = cloneSpecificValue(item);
            }
            else {
                clone[index] = deepExtend({}, item);
            }
        }
        else {
            clone[index] = item;
        }
    });
    return clone;
}
/**
 * Extending object that entered in first argument.
 *
 * Returns extended object or false if have no target object or incorrect type.
 *
 * If you wish to clone source object (without modify it), just use empty new
 * object as first argument, like this:
 *   deepExtend({}, yourObj_1, [yourObj_N]);
 */
var deepExtend = function () {
    var objects = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        objects[_i] = arguments[_i];
    }
    if (arguments.length < 1 || typeof arguments[0] !== 'object') {
        return false;
    }
    if (arguments.length < 2) {
        return arguments[0];
    }
    var target = arguments[0];
    // convert arguments to array and cut off target object
    var args = Array.prototype.slice.call(arguments, 1);
    var val, src, clone;
    args.forEach(function (obj) {
        // skip argument if it is array or isn't object
        if (typeof obj !== 'object' || Array.isArray(obj)) {
            return;
        }
        Object.keys(obj).forEach(function (key) {
            src = target[key]; // source value
            val = obj[key]; // new value
            // recursion prevention
            if (val === target) {
                return;
                /**
                 * if new value isn't object then just overwrite by new value
                 * instead of extending.
                 */
            }
            else if (typeof val !== 'object' || val === null) {
                target[key] = val;
                return;
                // just clone arrays (and recursive clone objects inside)
            }
            else if (Array.isArray(val)) {
                target[key] = deepCloneArray(val);
                return;
                // custom cloning and overwrite for specific objects
            }
            else if (isSpecificValue(val)) {
                target[key] = cloneSpecificValue(val);
                return;
                // overwrite by new value if source isn't object or array
            }
            else if (typeof src !== 'object' || src === null || Array.isArray(src)) {
                target[key] = deepExtend({}, val);
                return;
                // source value and new value is objects both, extending...
            }
            else {
                target[key] = deepExtend(src, val);
                return;
            }
        });
    });
    return target;
};
var Deferred = (function () {
    function Deferred() {
        var _this = this;
        this.promise = new Promise(function (resolve, reject) {
            _this.resolve = resolve;
            _this.reject = reject;
        });
    }
    return Deferred;
}());

// getDeepFromObject({result: {data: 1}}, 'result.data', 2); // returns 1
function getDeepFromObject(object, name, defaultValue) {
    if (object === void 0) { object = {}; }
    var keys = name.split('.');
    // clone the object
    var level = deepExtend({}, object);
    keys.forEach(function (k) {
        if (level && typeof level[k] !== 'undefined') {
            level = level[k];
        }
    });
    return typeof level === 'undefined' ? defaultValue : level;
}

/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(123).Buffer))

/***/ }),

/***/ 1171:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_common__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__angular_forms__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_ng2_completer__ = __webpack_require__(91);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__ng2_smart_table_directives__ = __webpack_require__(1178);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__ng2_smart_table_components_cell_cell_component__ = __webpack_require__(1195);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__ng2_smart_table_components_cell_cell_view_mode__ = __webpack_require__(1193);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__ng2_smart_table_components_cell_cell_edit_mode__ = __webpack_require__(1185);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__ng2_smart_table_components_cell_cell_editors__ = __webpack_require__(1188);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__ng2_smart_table_components_filter_filter_component__ = __webpack_require__(1201);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__ng2_smart_table_components_filter_filter_types__ = __webpack_require__(1198);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__ng2_smart_table_components_pager_pager_component__ = __webpack_require__(1202);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12__ng2_smart_table_components_thead_thead_directives__ = __webpack_require__(1220);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13__ng2_smart_table_components_tbody_tbody_directives__ = __webpack_require__(1207);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Ng2SmartTableModule", function() { return Ng2SmartTableModule; });














var Ng2SmartTableModule = (function () {
    function Ng2SmartTableModule() {
    }
    return Ng2SmartTableModule;
}());
Ng2SmartTableModule = __decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["NgModule"])({
        imports: [
            __WEBPACK_IMPORTED_MODULE_1__angular_common__["CommonModule"],
            __WEBPACK_IMPORTED_MODULE_3_ng2_completer__["a" /* Ng2CompleterModule */],
            __WEBPACK_IMPORTED_MODULE_2__angular_forms__["FormsModule"],
            __WEBPACK_IMPORTED_MODULE_2__angular_forms__["ReactiveFormsModule"],
        ],
        declarations: [
            __WEBPACK_IMPORTED_MODULE_5__ng2_smart_table_components_cell_cell_component__["a" /* CellComponent */],
            __WEBPACK_IMPORTED_MODULE_6__ng2_smart_table_components_cell_cell_view_mode__["a" /* ViewCellComponent */],
            __WEBPACK_IMPORTED_MODULE_7__ng2_smart_table_components_cell_cell_edit_mode__["a" /* DefaultEditComponent */],
            __WEBPACK_IMPORTED_MODULE_7__ng2_smart_table_components_cell_cell_edit_mode__["b" /* CustomEditComponent */],
            __WEBPACK_IMPORTED_MODULE_6__ng2_smart_table_components_cell_cell_view_mode__["b" /* CustomViewComponent */],
            __WEBPACK_IMPORTED_MODULE_7__ng2_smart_table_components_cell_cell_edit_mode__["c" /* EditCellComponent */],
            __WEBPACK_IMPORTED_MODULE_8__ng2_smart_table_components_cell_cell_editors__["a" /* CompleterEditorComponent */],
            __WEBPACK_IMPORTED_MODULE_8__ng2_smart_table_components_cell_cell_editors__["b" /* InputEditorComponent */],
            __WEBPACK_IMPORTED_MODULE_8__ng2_smart_table_components_cell_cell_editors__["c" /* SelectEditorComponent */],
            __WEBPACK_IMPORTED_MODULE_8__ng2_smart_table_components_cell_cell_editors__["d" /* TextareaEditorComponent */],
            __WEBPACK_IMPORTED_MODULE_8__ng2_smart_table_components_cell_cell_editors__["e" /* CheckboxEditorComponent */],
            __WEBPACK_IMPORTED_MODULE_9__ng2_smart_table_components_filter_filter_component__["a" /* FilterComponent */],
            __WEBPACK_IMPORTED_MODULE_10__ng2_smart_table_components_filter_filter_types__["a" /* InputFilterComponent */],
            __WEBPACK_IMPORTED_MODULE_10__ng2_smart_table_components_filter_filter_types__["b" /* SelectFilterComponent */],
            __WEBPACK_IMPORTED_MODULE_10__ng2_smart_table_components_filter_filter_types__["c" /* CheckboxFilterComponent */],
            __WEBPACK_IMPORTED_MODULE_10__ng2_smart_table_components_filter_filter_types__["d" /* CompleterFilterComponent */],
            __WEBPACK_IMPORTED_MODULE_11__ng2_smart_table_components_pager_pager_component__["a" /* PagerComponent */]
        ].concat(__WEBPACK_IMPORTED_MODULE_12__ng2_smart_table_components_thead_thead_directives__["a" /* NG2_SMART_TABLE_THEAD_DIRECTIVES */], __WEBPACK_IMPORTED_MODULE_13__ng2_smart_table_components_tbody_tbody_directives__["a" /* NG2_SMART_TABLE_TBODY_DIRECTIVES */], __WEBPACK_IMPORTED_MODULE_4__ng2_smart_table_directives__["NG2_SMART_TABLE_DIRECTIVES"]),
        exports: __WEBPACK_IMPORTED_MODULE_4__ng2_smart_table_directives__["NG2_SMART_TABLE_DIRECTIVES"].slice()
    })
], Ng2SmartTableModule);



/***/ }),

/***/ 1172:
/***/ (function(module, exports) {

module.exports = "input, textarea {\n  width: 100%;\n  line-height: normal;\n  padding: .375rem .75rem; }\n"

/***/ }),

/***/ 1173:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__local_sorter__ = __webpack_require__(1224);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__local_filter__ = __webpack_require__(1222);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__local_pager__ = __webpack_require__(1223);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__data_source__ = __webpack_require__(1166);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__helpers__ = __webpack_require__(1170);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return LocalDataSource; });





var LocalDataSource = (function (_super) {
    __extends(LocalDataSource, _super);
    function LocalDataSource(data) {
        if (data === void 0) { data = []; }
        var _this = _super.call(this) || this;
        _this.data = [];
        _this.filteredAndSorted = [];
        _this.sortConf = [];
        _this.filterConf = {
            filters: [],
            andOperator: true
        };
        _this.pagingConf = {};
        _this.data = data;
        return _this;
    }
    LocalDataSource.prototype.load = function (data) {
        this.data = data;
        return _super.prototype.load.call(this, data);
    };
    LocalDataSource.prototype.prepend = function (element) {
        this.reset(true);
        this.data.unshift(element);
        return _super.prototype.prepend.call(this, element);
    };
    LocalDataSource.prototype.append = function (element) {
        this.reset(true);
        this.data.push(element);
        return _super.prototype.append.call(this, element);
    };
    LocalDataSource.prototype.add = function (element) {
        this.data.push(element);
        return _super.prototype.add.call(this, element);
    };
    LocalDataSource.prototype.remove = function (element) {
        this.data = this.data.filter(function (el) { return el !== element; });
        return _super.prototype.remove.call(this, element);
    };
    LocalDataSource.prototype.update = function (element, values) {
        var _this = this;
        return new Promise(function (resolve, reject) {
            _this.find(element).then(function (found) {
                found = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_4__helpers__["c" /* deepExtend */])(found, values);
                _super.prototype.update.call(_this, found, values).then(resolve).catch(reject);
            }).catch(reject);
        });
    };
    LocalDataSource.prototype.find = function (element) {
        var found = this.data.find(function (el) { return el === element; });
        if (found) {
            return Promise.resolve(found);
        }
        return Promise.reject(new Error('Element was not found in the dataset'));
    };
    LocalDataSource.prototype.getElements = function () {
        var data = this.data.slice(0);
        return Promise.resolve(this.prepareData(data));
    };
    LocalDataSource.prototype.getAll = function () {
        var data = this.data.slice(0);
        return Promise.resolve(data);
    };
    LocalDataSource.prototype.reset = function (silent) {
        if (silent === void 0) { silent = false; }
        if (silent) {
            this.filterConf = {
                filters: [],
                andOperator: true
            };
            this.sortConf = [];
            this.pagingConf['page'] = 1;
        }
        else {
            this.setFilter([], true, false);
            this.setSort([], false);
            this.setPage(1);
        }
    };
    LocalDataSource.prototype.empty = function () {
        this.data = [];
        return _super.prototype.empty.call(this);
    };
    LocalDataSource.prototype.count = function () {
        return this.filteredAndSorted.length;
    };
    /**
     *
     * Array of conf objects
     * [
     *  {field: string, direction: asc|desc|null, compare: Function|null},
     * ]
     * @param conf
     * @param doEmit
     * @returns {LocalDataSource}
     */
    LocalDataSource.prototype.setSort = function (conf, doEmit) {
        if (doEmit === void 0) { doEmit = true; }
        if (conf !== null) {
            conf.forEach(function (fieldConf) {
                if (!fieldConf['field'] || typeof fieldConf['direction'] === 'undefined') {
                    throw new Error('Sort configuration object is not valid');
                }
            });
            this.sortConf = conf;
        }
        _super.prototype.setSort.call(this, conf, doEmit);
        return this;
    };
    /**
     *
     * Array of conf objects
     * [
     *  {field: string, search: string, filter: Function|null},
     * ]
     * @param conf
     * @param andOperator
     * @param doEmit
     * @returns {LocalDataSource}
     */
    LocalDataSource.prototype.setFilter = function (conf, andOperator, doEmit) {
        var _this = this;
        if (andOperator === void 0) { andOperator = true; }
        if (doEmit === void 0) { doEmit = true; }
        if (conf && conf.length > 0) {
            conf.forEach(function (fieldConf) {
                _this.addFilter(fieldConf, andOperator, false);
            });
        }
        else {
            this.filterConf = {
                filters: [],
                andOperator: true
            };
        }
        this.filterConf.andOperator = andOperator;
        this.pagingConf['page'] = 1;
        _super.prototype.setFilter.call(this, conf, andOperator, doEmit);
        return this;
    };
    LocalDataSource.prototype.addFilter = function (fieldConf, andOperator, doEmit) {
        var _this = this;
        if (andOperator === void 0) { andOperator = true; }
        if (doEmit === void 0) { doEmit = true; }
        if (!fieldConf['field'] || typeof fieldConf['search'] === 'undefined') {
            throw new Error('Filter configuration object is not valid');
        }
        var found = false;
        this.filterConf.filters.forEach(function (currentFieldConf, index) {
            if (currentFieldConf['field'] === fieldConf['field']) {
                _this.filterConf.filters[index] = fieldConf;
                found = true;
            }
        });
        if (!found) {
            this.filterConf.filters.push(fieldConf);
        }
        this.filterConf.andOperator = andOperator;
        _super.prototype.addFilter.call(this, fieldConf, andOperator, doEmit);
        return this;
    };
    LocalDataSource.prototype.setPaging = function (page, perPage, doEmit) {
        if (doEmit === void 0) { doEmit = true; }
        this.pagingConf['page'] = page;
        this.pagingConf['perPage'] = perPage;
        _super.prototype.setPaging.call(this, page, perPage, doEmit);
        return this;
    };
    LocalDataSource.prototype.setPage = function (page, doEmit) {
        if (doEmit === void 0) { doEmit = true; }
        this.pagingConf['page'] = page;
        _super.prototype.setPage.call(this, page, doEmit);
        return this;
    };
    LocalDataSource.prototype.getSort = function () {
        return this.sortConf;
    };
    LocalDataSource.prototype.getFilter = function () {
        return this.filterConf;
    };
    LocalDataSource.prototype.getPaging = function () {
        return this.pagingConf;
    };
    LocalDataSource.prototype.prepareData = function (data) {
        data = this.filter(data);
        data = this.sort(data);
        this.filteredAndSorted = data.slice(0);
        return this.paginate(data);
    };
    LocalDataSource.prototype.sort = function (data) {
        if (this.sortConf) {
            this.sortConf.forEach(function (fieldConf) {
                data = __WEBPACK_IMPORTED_MODULE_0__local_sorter__["a" /* LocalSorter */]
                    .sort(data, fieldConf['field'], fieldConf['direction'], fieldConf['compare']);
            });
        }
        return data;
    };
    // TODO: refactor?
    LocalDataSource.prototype.filter = function (data) {
        if (this.filterConf.filters) {
            if (this.filterConf.andOperator) {
                this.filterConf.filters.forEach(function (fieldConf) {
                    data = __WEBPACK_IMPORTED_MODULE_1__local_filter__["a" /* LocalFilter */]
                        .filter(data, fieldConf['field'], fieldConf['search'], fieldConf['filter']);
                });
            }
            else {
                var mergedData_1 = [];
                this.filterConf.filters.forEach(function (fieldConf) {
                    mergedData_1 = mergedData_1.concat(__WEBPACK_IMPORTED_MODULE_1__local_filter__["a" /* LocalFilter */]
                        .filter(data, fieldConf['field'], fieldConf['search'], fieldConf['filter']));
                });
                // remove non unique items
                data = mergedData_1.filter(function (elem, pos, arr) {
                    return arr.indexOf(elem) === pos;
                });
            }
        }
        return data;
    };
    LocalDataSource.prototype.paginate = function (data) {
        if (this.pagingConf && this.pagingConf['page'] && this.pagingConf['perPage']) {
            data = __WEBPACK_IMPORTED_MODULE_2__local_pager__["a" /* LocalPager */].paginate(data, this.pagingConf['page'], this.pagingConf['perPage']);
        }
        return data;
    };
    return LocalDataSource;
}(__WEBPACK_IMPORTED_MODULE_3__data_source__["a" /* DataSource */]));



/***/ }),

/***/ 1174:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__lib_data_set_cell__ = __webpack_require__(1164);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return EditCellDefault; });


var EditCellDefault = (function () {
    function EditCellDefault() {
        this.inputClass = '';
        this.edited = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"]();
    }
    EditCellDefault.prototype.onEdited = function (event) {
        this.edited.next(event);
        return false;
    };
    EditCellDefault.prototype.onStopEditing = function () {
        this.cell.getRow().isInEditing = false;
        return false;
    };
    EditCellDefault.prototype.onClick = function (event) {
        event.stopPropagation();
    };
    return EditCellDefault;
}());

__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])(),
    __metadata("design:type", __WEBPACK_IMPORTED_MODULE_1__lib_data_set_cell__["Cell"])
], EditCellDefault.prototype, "cell", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])(),
    __metadata("design:type", String)
], EditCellDefault.prototype, "inputClass", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Output"])(),
    __metadata("design:type", Object)
], EditCellDefault.prototype, "edited", void 0);


/***/ }),

/***/ 1176:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__repositories__ = __webpack_require__(13);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__angular_common__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__angular_forms__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__report_filter_component__ = __webpack_require__(1180);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_ngx_daterangepicker_material__ = __webpack_require__(567);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__ngui_auto_complete__ = __webpack_require__(564);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__ngui_auto_complete___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_6__ngui_auto_complete__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__directives_onlynumber_directive__ = __webpack_require__(1274);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__generic_grid_generic_popup_grid_module__ = __webpack_require__(212);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__nepali_date_picker_nepali_date_picker_module__ = __webpack_require__(558);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ReportFilterModule; });










var ReportFilterModule = ReportFilterModule_1 = (function () {
    function ReportFilterModule() {
    }
    ReportFilterModule.forRoot = function () {
        return {
            ngModule: ReportFilterModule_1,
            providers: [__WEBPACK_IMPORTED_MODULE_0__repositories__["a" /* MasterRepo */]]
        };
    };
    return ReportFilterModule;
}());
ReportFilterModule = ReportFilterModule_1 = __decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__angular_core__["NgModule"])({
        imports: [
            __WEBPACK_IMPORTED_MODULE_2__angular_common__["CommonModule"],
            __WEBPACK_IMPORTED_MODULE_3__angular_forms__["FormsModule"],
            __WEBPACK_IMPORTED_MODULE_3__angular_forms__["ReactiveFormsModule"],
            __WEBPACK_IMPORTED_MODULE_5_ngx_daterangepicker_material__["a" /* NgxDaterangepickerMd */].forRoot(),
            __WEBPACK_IMPORTED_MODULE_6__ngui_auto_complete__["NguiAutoCompleteModule"],
            __WEBPACK_IMPORTED_MODULE_8__generic_grid_generic_popup_grid_module__["a" /* GenericPopupGridModule */].forRoot(),
            __WEBPACK_IMPORTED_MODULE_9__nepali_date_picker_nepali_date_picker_module__["a" /* NepaliDatePickerModule */]
        ],
        declarations: [__WEBPACK_IMPORTED_MODULE_4__report_filter_component__["a" /* ReportFilterComponent */], __WEBPACK_IMPORTED_MODULE_7__directives_onlynumber_directive__["a" /* OnlyNumber */]],
        providers: [__WEBPACK_IMPORTED_MODULE_0__repositories__["a" /* MasterRepo */]],
        exports: [__WEBPACK_IMPORTED_MODULE_4__report_filter_component__["a" /* ReportFilterComponent */]]
    })
], ReportFilterModule);

var ReportFilterModule_1;


/***/ }),

/***/ 1178:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ng2_smart_table_ng2_smart_table_component__ = __webpack_require__(1179);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NG2_SMART_TABLE_DIRECTIVES", function() { return NG2_SMART_TABLE_DIRECTIVES; });

var NG2_SMART_TABLE_DIRECTIVES = [__WEBPACK_IMPORTED_MODULE_0__ng2_smart_table_ng2_smart_table_component__["Ng2SmartTableComponent"]];


/***/ }),

/***/ 1179:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__lib_grid__ = __webpack_require__(1162);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__lib_data_source_data_source__ = __webpack_require__(1166);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__lib_helpers__ = __webpack_require__(1170);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__lib_data_source_local_local_data_source__ = __webpack_require__(1173);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Ng2SmartTableComponent", function() { return Ng2SmartTableComponent; });





var Ng2SmartTableComponent = (function () {
    function Ng2SmartTableComponent() {
        this.settings = {};
        this.rowSelect = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"]();
        this.userRowSelect = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"]();
        this.delete = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"]();
        this.edit = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"]();
        this.view = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"]();
        this.create = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"]();
        this.deleteConfirm = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"]();
        this.editConfirm = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"]();
        this.viewConfirm = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"]();
        this.createConfirm = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"]();
        this.defaultSettings = {
            mode: 'inline',
            selectMode: 'single',
            hideHeader: false,
            hideSubHeader: false,
            actions: {
                columnTitle: 'Actions',
                add: true,
                edit: true,
                view: true,
                delete: true,
                position: 'left' // left|right
            },
            filter: {
                inputClass: '',
            },
            edit: {
                inputClass: '',
                editButtonContent: 'Edit',
                saveButtonContent: 'Update',
                cancelButtonContent: 'Cancel',
                confirmSave: false
            },
            view: {
                inputClass: '',
                viewButtonContent: '',
                saveButtonContent: 'Update',
                cancelButtonContent: 'Cancel',
                confirmSave: false
            },
            add: {
                inputClass: '',
                addButtonContent: 'Add New',
                createButtonContent: 'Create',
                cancelButtonContent: 'Cancel',
                confirmCreate: false
            },
            delete: {
                deleteButtonContent: 'Delete',
                confirmDelete: false
            },
            attr: {
                id: '',
                class: '',
            },
            noDataMessage: 'No data found',
            columns: {},
            pager: {
                display: true,
                perPage: 10
            }
        };
        this.isAllSelected = false;
    }
    Ng2SmartTableComponent.prototype.ngOnChanges = function (changes) {
        if (this.grid) {
            if (changes['settings']) {
                this.grid.setSettings(this.prepareSettings());
            }
            if (changes['source']) {
                this.grid.setSource(this.source);
            }
        }
        else {
            this.initGrid();
        }
    };
    Ng2SmartTableComponent.prototype.editRowSelect = function (row) {
        if (this.grid.getSetting('selectMode') === 'multi')
            this.onMultipleSelectRow(row);
        else
            this.onSelectRow(row);
    };
    Ng2SmartTableComponent.prototype.viewRowSelect = function (row) {
        if (this.grid.getSetting('selectMode') === 'multi')
            this.onMultipleSelectRow(row);
        else
            this.onSelectRow(row);
    };
    Ng2SmartTableComponent.prototype.onUserSelectRow = function (row) {
        if (this.grid.getSetting('selectMode') !== 'multi') {
            this.grid.selectRow(row);
            this._onUserSelectRow(row.getData());
            this.onSelectRow(row);
        }
    };
    Ng2SmartTableComponent.prototype.multipleSelectRow = function (row) {
        this.grid.multipleSelectRow(row);
        this._onUserSelectRow(row.getData());
        this._onSelectRow(row.getData());
    };
    Ng2SmartTableComponent.prototype.onSelectAllRows = function ($event) {
        this.isAllSelected = !this.isAllSelected;
        this.grid.selectAllRows(this.isAllSelected);
        var selectedRows = this.grid.getSelectedRows();
        this._onUserSelectRow(selectedRows[0], selectedRows);
        this._onSelectRow(selectedRows[0]);
    };
    Ng2SmartTableComponent.prototype.onSelectRow = function (row) {
        this.grid.selectRow(row);
        this._onSelectRow(row.getData());
    };
    Ng2SmartTableComponent.prototype.onMultipleSelectRow = function (row) {
        this._onSelectRow(row.getData());
    };
    Ng2SmartTableComponent.prototype.initGrid = function () {
        var _this = this;
        this.source = this.prepareSource();
        this.grid = new __WEBPACK_IMPORTED_MODULE_1__lib_grid__["a" /* Grid */](this.source, this.prepareSettings());
        this.grid.onSelectRow().subscribe(function (row) { return _this.onSelectRow(row); });
    };
    Ng2SmartTableComponent.prototype.prepareSource = function () {
        if (this.source instanceof __WEBPACK_IMPORTED_MODULE_2__lib_data_source_data_source__["a" /* DataSource */]) {
            return this.source;
        }
        else if (this.source instanceof Array) {
            return new __WEBPACK_IMPORTED_MODULE_4__lib_data_source_local_local_data_source__["a" /* LocalDataSource */](this.source);
        }
        return new __WEBPACK_IMPORTED_MODULE_4__lib_data_source_local_local_data_source__["a" /* LocalDataSource */]();
    };
    Ng2SmartTableComponent.prototype.prepareSettings = function () {
        return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__lib_helpers__["c" /* deepExtend */])({}, this.defaultSettings, this.settings);
    };
    Ng2SmartTableComponent.prototype.changePage = function ($event) {
        this.resetAllSelector();
    };
    Ng2SmartTableComponent.prototype.sort = function ($event) {
        this.resetAllSelector();
    };
    Ng2SmartTableComponent.prototype.filter = function ($event) {
        this.resetAllSelector();
    };
    Ng2SmartTableComponent.prototype._onSelectRow = function (data) {
        this.rowSelect.emit({
            data: data || null,
            source: this.source,
        });
    };
    Ng2SmartTableComponent.prototype._onUserSelectRow = function (data, selected) {
        if (selected === void 0) { selected = []; }
        this.userRowSelect.emit({
            data: data || null,
            source: this.source,
            selected: selected.length ? selected : this.grid.getSelectedRows(),
        });
    };
    Ng2SmartTableComponent.prototype.resetAllSelector = function () {
        this.isAllSelected = false;
    };
    return Ng2SmartTableComponent;
}());
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])(),
    __metadata("design:type", Object)
], Ng2SmartTableComponent.prototype, "source", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])(),
    __metadata("design:type", Object)
], Ng2SmartTableComponent.prototype, "settings", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Output"])(),
    __metadata("design:type", __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"])
], Ng2SmartTableComponent.prototype, "rowSelect", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Output"])(),
    __metadata("design:type", __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"])
], Ng2SmartTableComponent.prototype, "userRowSelect", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Output"])(),
    __metadata("design:type", __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"])
], Ng2SmartTableComponent.prototype, "delete", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Output"])(),
    __metadata("design:type", __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"])
], Ng2SmartTableComponent.prototype, "edit", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Output"])(),
    __metadata("design:type", __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"])
], Ng2SmartTableComponent.prototype, "view", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Output"])(),
    __metadata("design:type", __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"])
], Ng2SmartTableComponent.prototype, "create", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Output"])(),
    __metadata("design:type", __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"])
], Ng2SmartTableComponent.prototype, "deleteConfirm", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Output"])(),
    __metadata("design:type", __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"])
], Ng2SmartTableComponent.prototype, "editConfirm", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Output"])(),
    __metadata("design:type", __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"])
], Ng2SmartTableComponent.prototype, "viewConfirm", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Output"])(),
    __metadata("design:type", __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"])
], Ng2SmartTableComponent.prototype, "createConfirm", void 0);
Ng2SmartTableComponent = __decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
        selector: 'ng2-smart-table',
        styles: [__webpack_require__(1229)],
        template: __webpack_require__(1233)
    })
], Ng2SmartTableComponent);



/***/ }),

/***/ 1180:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_moment__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_moment___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_moment__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__repositories__ = __webpack_require__(13);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_rxjs__ = __webpack_require__(24);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_rxjs___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_rxjs__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__services_alert_alert_service__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__report_filter_service__ = __webpack_require__(555);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__generic_grid_generic_popup_grid_component__ = __webpack_require__(35);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__services_permission__ = __webpack_require__(15);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ReportFilterComponent; });








var ReportFilterComponent = (function () {
    function ReportFilterComponent(_masterRepo, alertService, _authService, _alertService, _reportFilterService) {
        var _this = this;
        this._masterRepo = _masterRepo;
        this.alertService = alertService;
        this._authService = _authService;
        this._alertService = _alertService;
        this._reportFilterService = _reportFilterService;
        this.gridPopupSettings = new __WEBPACK_IMPORTED_MODULE_6__generic_grid_generic_popup_grid_component__["b" /* GenericPopUpSettings */]();
        this.isActive = false;
        this.filterEmiiter = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"]();
        this.ReportFilterObj = {};
        this.ranges = {
            'Today': [__WEBPACK_IMPORTED_MODULE_1_moment__(), __WEBPACK_IMPORTED_MODULE_1_moment__()],
            'Yesterday': [__WEBPACK_IMPORTED_MODULE_1_moment__().subtract(1, 'days'), __WEBPACK_IMPORTED_MODULE_1_moment__().subtract(1, 'days')],
            'Last 7 Days': [__WEBPACK_IMPORTED_MODULE_1_moment__().subtract(6, 'days'), __WEBPACK_IMPORTED_MODULE_1_moment__()],
            'Last 30 Days': [__WEBPACK_IMPORTED_MODULE_1_moment__().subtract(29, 'days'), __WEBPACK_IMPORTED_MODULE_1_moment__()],
            'This Month': [__WEBPACK_IMPORTED_MODULE_1_moment__().startOf('month'), __WEBPACK_IMPORTED_MODULE_1_moment__().endOf('month')],
            'Last Month': [__WEBPACK_IMPORTED_MODULE_1_moment__().subtract(1, 'month').startOf('month'), __WEBPACK_IMPORTED_MODULE_1_moment__().subtract(1, 'month').endOf('month')],
            'Financial Year': [__WEBPACK_IMPORTED_MODULE_1_moment__().set('date', 1).set('month', 3), __WEBPACK_IMPORTED_MODULE_1_moment__().endOf('month').set('month', 2).add(1, 'year')],
        };
        this.locale = {
            format: 'DD/MM/YYYY',
            direction: 'ltr',
            weekLabel: 'W',
            separator: ' - ',
            cancelLabel: 'Cancel',
            applyLabel: 'Okay',
            clearLabel: 'Clear',
            customRangeLabel: 'Custom Range',
            daysOfWeek: __WEBPACK_IMPORTED_MODULE_1_moment__["weekdaysMin"](),
            monthNames: __WEBPACK_IMPORTED_MODULE_1_moment__["monthsShort"](),
            firstDay: 0 // first day is monday
        };
        this.divisionList = [];
        this.vouchertypeList = [];
        this.CostcenterList = [];
        this.dropListItem = function (keyword) {
            return new __WEBPACK_IMPORTED_MODULE_3_rxjs__["Observable"](function (observer) {
                _this._masterRepo.getAccount("report").map(function (res) {
                    if (_this.reportType == "Cash Book") {
                        return res.filter(function (x) { return x.TYPE == 'A' && x.MAPID == 'C'; });
                    }
                    else if (_this.reportType == "Bank Book") {
                        return res.filter(function (x) { return x.TYPE == 'A' && x.MAPID == 'B'; });
                    }
                    else {
                        return res.filter(function (x) { return x.TYPE == 'A'; });
                    }
                }).map(function (data) {
                    return data.filter(function (ac) { return ac.ACNAME.toUpperCase().indexOf(keyword.toUpperCase()) > -1 && ac.TYPE == 'A'; });
                }).subscribe(function (res) { observer.next(res); });
            }).share();
        };
        var PID = this._masterRepo.PhiscalObj.PhiscalID;
        var division = this._masterRepo.PhiscalObj.Div;
        PID = PID.replace("/", "ZZ");
        this.gridPopupSettings = {
            title: "Group Ledger",
            apiEndpoints: "/getMasterPagedListOfAny/" + PID + "/vtype/" + division,
            defaultFilterIndex: 0,
            columns: [
                {
                    key: "ACNAME",
                    title: "NAME",
                    hidden: false,
                    noSearch: false
                },
                {
                    key: "ACCODE",
                    title: "CODE",
                    hidden: false,
                    noSearch: false
                }
            ]
        };
        this.userProfile = this._authService.getUserProfile();
        this.userSetting = _authService.getSetting();
        if (this._masterRepo.userSetting.userwisedivision == 1) {
            this._masterRepo.getDivisionFromRightPrivelege().subscribe(function (res) {
                if (res.status == 'ok') {
                    _this.divisionList = res.result;
                }
            });
        }
        else {
            this._masterRepo.getAllDivisions().subscribe(function (res) {
                _this.divisionList.push(res);
            });
        }
        this._masterRepo.getAllVoucherType().subscribe(function (res) {
            _this.vouchertypeList.push(res);
        });
        this.selectedDate = {
            startDate: __WEBPACK_IMPORTED_MODULE_1_moment__(new Date()),
            endDate: __WEBPACK_IMPORTED_MODULE_1_moment__(new Date())
        };
        this._masterRepo.getCostcenter().subscribe(function (res) {
            _this.CostcenterList = res;
        });
        this._masterRepo.getAccDivList();
    }
    ReportFilterComponent.prototype.ngOnInit = function () {
        this.loadParams(this.reportType);
        this._reportFilterService.ReportFilterObj.DATE1 = __WEBPACK_IMPORTED_MODULE_1_moment__(this.selectedDate.startDate).format('MM-DD-YYYY');
        //this._reportFilterService.ReportFilterObj.DATE2 = moment(this.selectedDate.endDate).format('MM-DD-YYYY')
        this._reportFilterService.ReportFilterObj.DATE1 = this._masterRepo.PhiscalObj.BeginDate.split('T')[0];
        this.changeEntryDate(this._reportFilterService.ReportFilterObj.DATE1, "AD");
        this._reportFilterService.ReportFilterObj.DATE2 = this._masterRepo.PhiscalObj.EndDate.split('T')[0];
        this.changeEndDate(this._reportFilterService.ReportFilterObj.DATE2, "AD");
    };
    ReportFilterComponent.prototype.ngAfterViewInit = function () {
        this.calcStock();
    };
    ReportFilterComponent.prototype.changeEntryDate = function (value, format) {
        var adbs = __webpack_require__(19);
        if (format == "AD") {
            var adDate = (value.replace("-", "/")).replace("-", "/");
            var bsDate = adbs.ad2bs(adDate);
            this._reportFilterService.ReportFilterObj.BSDATE1 = this._masterRepo.toBSDate(value);
            // this.startDateResponse.emit(value);
        }
        else if (format == "BS") {
            var datearr = value.split('/');
            var bsDate_1 = datearr[2] + "/" + datearr[1] + "/" + datearr[0];
            // var bsDate = (value.replace("-", "/")).replace("-", "/");
            var adDate = adbs.bs2ad(bsDate_1);
            var Engdate = this._masterRepo.toADDate(value);
            var Validatedata = this._masterRepo.ValidateNepaliDate(Engdate);
            if (Validatedata == true) {
                var bsDate1 = datearr[2] + "/" + datearr[1] + "/" + datearr[0];
                var adDate1 = adbs.bs2ad(bsDate1);
                this._reportFilterService.ReportFilterObj.DATE1 = this._masterRepo.toADDate(value);
            }
            else {
                this.alertService.error("Cannot Change the date");
                return;
            }
            // this._reportFilterService.ReportFilterObj.DATE1 = this.masterService.toBSDate(value);
        }
    };
    ReportFilterComponent.prototype.changeEndDate = function (value, format) {
        var adbs = __webpack_require__(19);
        if (format == "AD") {
            var adDate = (value.replace("-", "/")).replace("-", "/");
            var bsDate = adbs.ad2bs(adDate);
            this._reportFilterService.ReportFilterObj.BSDATE2 = this._masterRepo.toBSDate(value);
            // this.endDateResponse.emit(value);
        }
        else if (format == "BS") {
            var datearr = value.split('/');
            var bsDate_2 = datearr[2] + "/" + datearr[1] + "/" + datearr[0];
            // var bsDate = (value.replace("-", "/")).replace("-", "/");
            var adDate = adbs.bs2ad(bsDate_2);
            var Engdate = this._masterRepo.toADDate(value);
            var Validatedata = this._masterRepo.ValidateNepaliDate(Engdate);
            if (Validatedata == true) {
                var bsDate1 = datearr[2] + "/" + datearr[1] + "/" + datearr[0];
                var adDate1 = adbs.bs2ad(bsDate1);
                this._reportFilterService.ReportFilterObj.DATE2 = this._masterRepo.toADDate(value);
            }
            else {
                this.alertService.error("Cannot Change the date");
                return;
            }
            // this._reportFilterService.ReportFilterObj.DATE2 = this.masterService.toBSDate(value);
        }
    };
    ReportFilterComponent.prototype.dateChanged = function (date) {
        this._reportFilterService.ReportFilterObj.DATE1 = __WEBPACK_IMPORTED_MODULE_1_moment__(this.selectedDate.startDate).format('MM-DD-YYYY');
        this._reportFilterService.ReportFilterObj.DATE2 = __WEBPACK_IMPORTED_MODULE_1_moment__(this.selectedDate.endDate).format('MM-DD-YYYY');
    };
    ReportFilterComponent.prototype.divisionChanged = function () {
        this._reportFilterService.ReportFilterObj.DIV = this.division.nativeElement.value;
    };
    ReportFilterComponent.prototype.showNarrationChanged = function () {
        this._reportFilterService.ReportFilterObj.SHOWNARRATION = this.showNarration.nativeElement.value;
    };
    ReportFilterComponent.prototype.voucherTypeChanged = function () {
        this._reportFilterService.ReportFilterObj.VTYPE = this.voucherType.nativeElement.value;
    };
    ReportFilterComponent.prototype.setVoucherName = function (id) {
        var _this = this;
        this._reportFilterService.ReportFilterObj.VOUCHERNAME = "All";
        this.vouchertypeList.forEach(function (x) {
            if (x.VOUCHER_ID == id) {
                _this._reportFilterService.ReportFilterObj.VOUCHERNAME = x.VOUCHER_TYPE;
            }
        });
    };
    ReportFilterComponent.prototype.show = function () {
        this.isActive = true;
    };
    ReportFilterComponent.prototype.popupClose = function () {
        this.isActive = false;
    };
    ReportFilterComponent.prototype.accodeChanged = function (value) {
        var item = this._masterRepo.accountList.find(function (x) { return x.ACCODE == value; });
        this._reportFilterService.ReportFilterObj.ACCNAME = '';
        if (item) {
            value = item.ACNAME;
            this._reportFilterService.ReportFilterObj.ACCNAME = value;
        }
    };
    ReportFilterComponent.prototype.itemChanged = function (value) {
        if (typeof (value) === "object") {
            this._reportFilterService.ReportFilterObj.ACCNAME = value.ACNAME;
            this._reportFilterService.ReportFilterObj.ACCODE = value.ACCODE;
            this._reportFilterService.ReportFilterObj.ACID = value.ACID;
        }
    };
    ReportFilterComponent.prototype.onLedgerTypeChange = function () {
        this._reportFilterService.ReportFilterObj.ACCNAME = "";
        this._reportFilterService.ReportFilterObj.ACCODE = "";
        this._reportFilterService.ReportFilterObj.ACID = "";
    };
    ReportFilterComponent.prototype.onGroupEntered = function () {
        this.genericGrid.show("", false, "groupLedger");
    };
    ReportFilterComponent.prototype.onItemSelected = function (event) {
        this._reportFilterService.ReportFilterObj.ACID = event.ACID;
        this._reportFilterService.ReportFilterObj.ACCODE = event.ACCODE;
        this._reportFilterService.ReportFilterObj.ACCNAME = event.ACNAME;
    };
    ReportFilterComponent.prototype.preventInput = function ($event) {
        $event.preventDefault();
        return false;
    };
    ReportFilterComponent.prototype.applyClicked = function () {
        var _this = this;
        this.popupClose();
        if (this.reportType != "OpeningBalance" && this.reportType != "Cash Book" && this.reportType != "Bank Book") {
            if (this.division != null) {
                this._reportFilterService.ReportFilterObj.DIV = this.division.nativeElement.value;
            }
        }
        if (this.reportType == "Ledger Voucher") {
            if ('ACID' in this._reportFilterService.ReportFilterObj) {
                this.filterEmiiter.emit(this._reportFilterService.ReportFilterObj);
            }
            else {
                this._alertService.error("No Account Selected");
            }
        }
        else if (this.reportType == 'Voucher Register' || this.reportType == 'Day Book') {
            this.setVoucherName(this.voucherType.nativeElement.value);
            this._reportFilterService.ReportFilterObj.VTYPE = this.voucherType.nativeElement.value;
            this._reportFilterService.ReportFilterObj.SHOWNARRATION = this.showNarration.nativeElement.value;
            this.filterEmiiter.emit(this._reportFilterService.ReportFilterObj);
        }
        else {
            if (this.reportType == "PL") {
                if (this._reportFilterService.ReportFilterObj.DIV) {
                    if (this._reportFilterService.ReportFilterObj.DIV == '%') {
                        this._reportFilterService.ReportFilterObj.PL_DIVISIONNAME = 'All';
                    }
                    else if (this._reportFilterService.ReportFilterObj.DIV != '%') {
                        var abc = this.divisionList.filter(function (x) { return x.INITIAL == _this._reportFilterService.ReportFilterObj.DIV; });
                        if (abc && abc.length > 0 && abc[0]) {
                            this._reportFilterService.ReportFilterObj.PL_DIVISIONNAME = abc[0].NAME;
                        }
                        else {
                            this._reportFilterService.ReportFilterObj.PL_DIVISIONNAME = '';
                        }
                    }
                    else {
                        this._reportFilterService.ReportFilterObj.PL_DIVISIONNAME = '';
                    }
                }
            }
            else if (this.reportType == "BS") {
                if (this._reportFilterService.ReportFilterObj.DIV) {
                    if (this._reportFilterService.ReportFilterObj.DIV == '%') {
                        this._reportFilterService.ReportFilterObj.BS_DIVISIONNAME = 'All';
                    }
                    else if (this._reportFilterService.ReportFilterObj.DIV != '%') {
                        var abc = this.divisionList.filter(function (x) { return x.INITIAL == _this._reportFilterService.ReportFilterObj.DIV; });
                        if (abc && abc.length > 0 && abc[0]) {
                            this._reportFilterService.ReportFilterObj.BS_DIVISIONNAME = abc[0].NAME;
                        }
                        else {
                            this._reportFilterService.ReportFilterObj.BS_DIVISIONNAME = '';
                        }
                    }
                    else {
                        this._reportFilterService.ReportFilterObj.BS_DIVISIONNAME = '';
                    }
                }
            }
            this.filterEmiiter.emit(this._reportFilterService.ReportFilterObj);
        }
    };
    ReportFilterComponent.prototype.queryAndLoadData = function (dataStore) {
        if (this._reportFilterService.ReportFilterObj.isTBLDataLoaded) {
            if (this._reportFilterService.ReportFilterObj.isSummary && !this._reportFilterService.ReportFilterObj.isLedgerWise) {
                this._reportFilterService.ReportFilterObj.tblData = dataStore.summaryTrialBalance;
                this._reportFilterService.selectedRowIndex = 0;
            }
            else if (!this._reportFilterService.ReportFilterObj.isSummary && !this._reportFilterService.ReportFilterObj.isLedgerWise && !this._reportFilterService.ReportFilterObj.showAllLevel) {
                this._reportFilterService.ReportFilterObj.tblData = dataStore.detailTrialBalance;
                this._reportFilterService.selectedRowIndex = 0;
            }
            else if (this._reportFilterService.ReportFilterObj.showAllLevel && !this._reportFilterService.ReportFilterObj.isLedgerWise) {
                this._reportFilterService.ReportFilterObj.tblData = dataStore.allLevelTrialBalance;
                this._reportFilterService.selectedRowIndex = 0;
            }
            else if (this._reportFilterService.ReportFilterObj.isLedgerWise) {
                this._reportFilterService.ReportFilterObj.tblData = dataStore.ledgerTrialBalance;
                this._reportFilterService.selectedRowIndex = 0;
            }
        }
        else {
            this._reportFilterService.ReportFilterObj.isTBLDataLoaded = false;
            this._reportFilterService.selectedRowIndex = 0;
        }
    };
    ReportFilterComponent.prototype.loadParams = function (reportType) {
        this._reportFilterService.ReportFilterObj.DIV = "%";
        if (this.userSetting.IS_NESTLE == 1) {
            this._reportFilterService.ReportFilterObj.COMPANYTYPE = 'DMS';
        }
        else {
            this._reportFilterService.ReportFilterObj.COMPANYTYPE = 'NONDMS';
        }
        switch (reportType) {
            case "TBL":
                this.checkOpeningBalance();
                // this._reportFilterService.ReportFilterObj.showOpeningBalance = true,
                // this._reportFilterService.ReportFilterObj.showTransaction = true,
                this._reportFilterService.ReportFilterObj.isSummary = true,
                    this._reportFilterService.ReportFilterObj.isLedgerWise = false,
                    this._reportFilterService.ReportFilterObj.isZeroBalance = false,
                    this._reportFilterService.ReportFilterObj.showAllLevel = false,
                    // this._reportFilterService.ReportFilterObj.showClosingBalance = true,
                    this._reportFilterService.ReportFilterObj.showAll = true,
                    this._reportFilterService.ReportFilterObj.nodeACID = "AL";
                this._reportFilterService.ReportFilterObj.nodeACNAME = "ACCOUNT";
                break;
            case "BS":
                this._reportFilterService.ReportFilterObj.stockCalcAuto = false;
                this._reportFilterService.ReportFilterObj.doStockEvaluation = false;
                break;
            case "PL":
                this._reportFilterService.ReportFilterObj.stockCalcAuto = false;
                this._reportFilterService.ReportFilterObj.doStockEvaluation = false;
                break;
            default:
                break;
        }
    };
    ReportFilterComponent.prototype.calcStock = function () {
        var _this = this;
        this._reportFilterService.stockCalculation(this._reportFilterService.ReportFilterObj).subscribe(function (res) {
            _this._reportFilterService.ReportFilterObj.openingStock = res.result;
            _this._reportFilterService.ReportFilterObj.closingStock = res.result2;
        });
    };
    ReportFilterComponent.prototype.checkOpeningBalance = function () {
        if (this._reportFilterService.ReportFilterObj.SHOWOPENINGTRIALONLY == true &&
            this._reportFilterService.ReportFilterObj.showPartylistInTrialBalance != true &&
            this._reportFilterService.ReportFilterObj.showSubLedgerInTrialBalance != true &&
            this._reportFilterService.ReportFilterObj.showClosingStockValueInTrialBalance != true &&
            this._reportFilterService.ReportFilterObj.isZeroBalance !== true) {
            this._reportFilterService.ReportFilterObj.showOpeningBalance = true;
            this._reportFilterService.ReportFilterObj.showClosingBalance = false;
            this._reportFilterService.ReportFilterObj.showTransaction = false;
        }
        else {
            this._reportFilterService.ReportFilterObj.showOpeningBalance = true;
            this._reportFilterService.ReportFilterObj.showClosingBalance = true;
            this._reportFilterService.ReportFilterObj.showTransaction = true;
        }
    };
    return ReportFilterComponent;
}());
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])("genericGrid"),
    __metadata("design:type", __WEBPACK_IMPORTED_MODULE_6__generic_grid_generic_popup_grid_component__["c" /* GenericPopUpComponent */])
], ReportFilterComponent.prototype, "genericGrid", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])('division'),
    __metadata("design:type", __WEBPACK_IMPORTED_MODULE_0__angular_core__["ElementRef"])
], ReportFilterComponent.prototype, "division", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])('voucherType'),
    __metadata("design:type", __WEBPACK_IMPORTED_MODULE_0__angular_core__["ElementRef"])
], ReportFilterComponent.prototype, "voucherType", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])('showNarration'),
    __metadata("design:type", __WEBPACK_IMPORTED_MODULE_0__angular_core__["ElementRef"])
], ReportFilterComponent.prototype, "showNarration", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Output"])(),
    __metadata("design:type", Object)
], ReportFilterComponent.prototype, "filterEmiiter", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])(),
    __metadata("design:type", String)
], ReportFilterComponent.prototype, "reportType", void 0);
ReportFilterComponent = __decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
        selector: "report-filter",
        template: __webpack_require__(1302),
    }),
    __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_2__repositories__["a" /* MasterRepo */], __WEBPACK_IMPORTED_MODULE_4__services_alert_alert_service__["a" /* AlertService */],
        __WEBPACK_IMPORTED_MODULE_7__services_permission__["a" /* AuthService */],
        __WEBPACK_IMPORTED_MODULE_4__services_alert_alert_service__["a" /* AlertService */], __WEBPACK_IMPORTED_MODULE_5__report_filter_service__["a" /* ReportFilterService */]])
], ReportFilterComponent);



/***/ }),

/***/ 1182:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__edit_cell_default__ = __webpack_require__(1174);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return CustomEditComponent; });


var CustomEditComponent = (function (_super) {
    __extends(CustomEditComponent, _super);
    function CustomEditComponent(resolver) {
        var _this = _super.call(this) || this;
        _this.resolver = resolver;
        return _this;
    }
    CustomEditComponent.prototype.ngOnChanges = function (changes) {
        var _this = this;
        if (this.cell && !this.customComponent) {
            var componentFactory = this.resolver.resolveComponentFactory(this.cell.getColumn().editor.component);
            this.customComponent = this.dynamicTarget.createComponent(componentFactory);
            // set @Inputs and @Outputs of custom component
            this.customComponent.instance.cell = this.cell;
            this.customComponent.instance.inputClass = this.inputClass;
            this.customComponent.instance.onStopEditing.subscribe(function () { return _this.onStopEditing(); });
            this.customComponent.instance.onEdited.subscribe(function (event) { return _this.onEdited(event); });
            this.customComponent.instance.onClick.subscribe(function (event) { return _this.onClick(event); });
        }
    };
    CustomEditComponent.prototype.ngOnDestroy = function () {
        if (this.customComponent) {
            this.customComponent.destroy();
        }
    };
    return CustomEditComponent;
}(__WEBPACK_IMPORTED_MODULE_1__edit_cell_default__["a" /* EditCellDefault */]));
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])('dynamicTarget', { read: __WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewContainerRef"] }),
    __metadata("design:type", Object)
], CustomEditComponent.prototype, "dynamicTarget", void 0);
CustomEditComponent = __decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
        selector: 'table-cell-custom-editor',
        template: "\n    <ng-template #dynamicTarget></ng-template>\n  ",
    }),
    __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_0__angular_core__["ComponentFactoryResolver"]])
], CustomEditComponent);



/***/ }),

/***/ 1183:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__edit_cell_default__ = __webpack_require__(1174);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return DefaultEditComponent; });


var DefaultEditComponent = (function (_super) {
    __extends(DefaultEditComponent, _super);
    function DefaultEditComponent() {
        return _super.call(this) || this;
    }
    DefaultEditComponent.prototype.getEditorType = function () {
        return this.cell.getColumn().editor && this.cell.getColumn().editor.type;
    };
    return DefaultEditComponent;
}(__WEBPACK_IMPORTED_MODULE_1__edit_cell_default__["a" /* EditCellDefault */]));
DefaultEditComponent = __decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
        selector: 'table-cell-default-editor',
        template: __webpack_require__(1230),
    }),
    __metadata("design:paramtypes", [])
], DefaultEditComponent);



/***/ }),

/***/ 1184:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__lib_data_set_cell__ = __webpack_require__(1164);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return EditCellComponent; });


var EditCellComponent = (function () {
    function EditCellComponent() {
        this.inputClass = '';
        this.edited = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"]();
    }
    EditCellComponent.prototype.onEdited = function (event) {
        this.edited.next(event);
        return false;
    };
    EditCellComponent.prototype.getEditorType = function () {
        return this.cell.getColumn().editor && this.cell.getColumn().editor.type;
    };
    return EditCellComponent;
}());
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])(),
    __metadata("design:type", __WEBPACK_IMPORTED_MODULE_1__lib_data_set_cell__["Cell"])
], EditCellComponent.prototype, "cell", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])(),
    __metadata("design:type", String)
], EditCellComponent.prototype, "inputClass", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Output"])(),
    __metadata("design:type", Object)
], EditCellComponent.prototype, "edited", void 0);
EditCellComponent = __decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
        selector: 'table-cell-edit-mode',
        template: "\n      <div [ngSwitch]=\"getEditorType()\">\n        <table-cell-custom-editor *ngSwitchCase=\"'custom'\"\n                                  [cell]=\"cell\"\n                                  [inputClass]=\"inputClass\"\n                                  (edited)=\"onEdited($event)\">\n        </table-cell-custom-editor>\n        <table-cell-default-editor *ngSwitchDefault\n                                  [cell]=\"cell\"\n                                  [inputClass]=\"inputClass\"\n                                  (edited)=\"onEdited($event)\">\n        </table-cell-default-editor>\n      </div>\n    "
    })
], EditCellComponent);



/***/ }),

/***/ 1185:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__custom_edit_component__ = __webpack_require__(1182);
/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, "b", function() { return __WEBPACK_IMPORTED_MODULE_0__custom_edit_component__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__default_edit_component__ = __webpack_require__(1183);
/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, "a", function() { return __WEBPACK_IMPORTED_MODULE_1__default_edit_component__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__edit_cell_component__ = __webpack_require__(1184);
/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, "c", function() { return __WEBPACK_IMPORTED_MODULE_2__edit_cell_component__["a"]; });





/***/ }),

/***/ 1186:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__default_editor__ = __webpack_require__(1165);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return CheckboxEditorComponent; });


var CheckboxEditorComponent = (function (_super) {
    __extends(CheckboxEditorComponent, _super);
    function CheckboxEditorComponent() {
        return _super.call(this) || this;
    }
    CheckboxEditorComponent.prototype.onChange = function (event) {
        var trueVal = (this.cell.getColumn().getConfig() && this.cell.getColumn().getConfig().true) || true;
        var falseVal = (this.cell.getColumn().getConfig() && this.cell.getColumn().getConfig().false) || false;
        this.cell.newValue = event.target.checked ? trueVal : falseVal;
    };
    return CheckboxEditorComponent;
}(__WEBPACK_IMPORTED_MODULE_1__default_editor__["DefaultEditor"]));
CheckboxEditorComponent = __decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
        selector: 'checkbox-editor',
        styles: [__webpack_require__(1172)],
        template: "\n    <input [ngClass]=\"inputClass\"\n           type=\"checkbox\"\n           class=\"form-control\"\n           [name]=\"cell.getId()\"\n           [disabled]=\"!cell.isEditable()\"\n           [checked]=\"cell.getValue() == (cell.getColumn().getConfig()?.true || true)\"\n           (click)=\"onClick.emit($event)\"\n           (change)=\"onChange($event)\">\n    ",
    }),
    __metadata("design:paramtypes", [])
], CheckboxEditorComponent);



/***/ }),

/***/ 1187:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ng2_completer__ = __webpack_require__(91);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__default_editor__ = __webpack_require__(1165);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return CompleterEditorComponent; });



var CompleterEditorComponent = (function (_super) {
    __extends(CompleterEditorComponent, _super);
    function CompleterEditorComponent(completerService) {
        var _this = _super.call(this) || this;
        _this.completerService = completerService;
        _this.completerStr = '';
        return _this;
    }
    CompleterEditorComponent.prototype.ngOnInit = function () {
        if (this.cell.getColumn().editor && this.cell.getColumn().editor.type === 'completer') {
            var config = this.cell.getColumn().getConfig().completer;
            config.dataService = this.completerService.local(config.data, config.searchFields, config.titleField);
            config.dataService.descriptionField(config.descriptionField);
        }
    };
    CompleterEditorComponent.prototype.onEditedCompleter = function (event) {
        this.cell.newValue = event.title;
        return false;
    };
    return CompleterEditorComponent;
}(__WEBPACK_IMPORTED_MODULE_2__default_editor__["DefaultEditor"]));
CompleterEditorComponent = __decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
        selector: 'completer-editor',
        template: "\n    <ng2-completer [(ngModel)]=\"completerStr\"\n                   [dataService]=\"cell.getColumn().getConfig().completer.dataService\"\n                   [minSearchLength]=\"cell.getColumn().getConfig().completer.minSearchLength || 0\"\n                   [pause]=\"cell.getColumn().getConfig().completer.pause || 0\"\n                   [placeholder]=\"cell.getColumn().getConfig().completer.placeholder || 'Start typing...'\"\n                   (selected)=\"onEditedCompleter($event)\">\n    </ng2-completer>\n    "
    }),
    __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ng2_completer__["b" /* CompleterService */]])
], CompleterEditorComponent);



/***/ }),

/***/ 1188:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__completer_editor_component__ = __webpack_require__(1187);
/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, "a", function() { return __WEBPACK_IMPORTED_MODULE_0__completer_editor_component__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__input_editor_component__ = __webpack_require__(1189);
/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, "b", function() { return __WEBPACK_IMPORTED_MODULE_1__input_editor_component__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__select_editor_component__ = __webpack_require__(1190);
/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, "c", function() { return __WEBPACK_IMPORTED_MODULE_2__select_editor_component__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__textarea_editor_component__ = __webpack_require__(1191);
/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, "d", function() { return __WEBPACK_IMPORTED_MODULE_3__textarea_editor_component__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__checkbox_editor_component__ = __webpack_require__(1186);
/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, "e", function() { return __WEBPACK_IMPORTED_MODULE_4__checkbox_editor_component__["a"]; });







/***/ }),

/***/ 1189:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__default_editor__ = __webpack_require__(1165);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return InputEditorComponent; });


var InputEditorComponent = (function (_super) {
    __extends(InputEditorComponent, _super);
    function InputEditorComponent() {
        return _super.call(this) || this;
    }
    return InputEditorComponent;
}(__WEBPACK_IMPORTED_MODULE_1__default_editor__["DefaultEditor"]));
InputEditorComponent = __decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
        selector: 'input-editor',
        styles: [__webpack_require__(1172)],
        template: "\n    <input [ngClass]=\"inputClass\"\n           class=\"form-control\"\n           [(ngModel)]=\"cell.newValue\"\n           [name]=\"cell.getId()\"\n           [placeholder]=\"cell.getTitle()\"\n           [disabled]=\"!cell.isEditable()\"\n           (click)=\"onClick.emit($event)\"\n           (keydown.enter)=\"onEdited.emit($event)\"\n           (keydown.esc)=\"onStopEditing.emit()\">\n    ",
    }),
    __metadata("design:paramtypes", [])
], InputEditorComponent);



/***/ }),

/***/ 1190:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__default_editor__ = __webpack_require__(1165);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return SelectEditorComponent; });


var SelectEditorComponent = (function (_super) {
    __extends(SelectEditorComponent, _super);
    function SelectEditorComponent() {
        return _super.call(this) || this;
    }
    return SelectEditorComponent;
}(__WEBPACK_IMPORTED_MODULE_1__default_editor__["DefaultEditor"]));
SelectEditorComponent = __decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
        selector: 'select-editor',
        template: "\n    <select [ngClass]=\"inputClass\"\n            class=\"form-control\"\n            [(ngModel)]=\"cell.newValue\"\n            [name]=\"cell.getId()\"\n            [disabled]=\"!cell.isEditable()\"\n            (click)=\"onClick.emit($event)\"\n            (keydown.enter)=\"onEdited.emit($event)\"\n            (keydown.esc)=\"onStopEditing.emit()\">\n\n        <option *ngFor=\"let option of cell.getColumn().getConfig()?.list\" [value]=\"option.value\"\n                [selected]=\"option.value === cell.getValue()\">{{ option.title }}\n        </option>\n    </select>\n    "
    }),
    __metadata("design:paramtypes", [])
], SelectEditorComponent);



/***/ }),

/***/ 1191:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__default_editor__ = __webpack_require__(1165);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return TextareaEditorComponent; });


var TextareaEditorComponent = (function (_super) {
    __extends(TextareaEditorComponent, _super);
    function TextareaEditorComponent() {
        return _super.call(this) || this;
    }
    return TextareaEditorComponent;
}(__WEBPACK_IMPORTED_MODULE_1__default_editor__["DefaultEditor"]));
TextareaEditorComponent = __decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
        selector: 'textarea-editor',
        styles: [__webpack_require__(1172)],
        template: "\n    <textarea [ngClass]=\"inputClass\"\n              class=\"form-control\"\n              [(ngModel)]=\"cell.newValue\"\n              [name]=\"cell.getId()\"\n              [disabled]=\"!cell.isEditable()\"\n              [placeholder]=\"cell.getTitle()\"\n              (click)=\"onClick.emit($event)\"\n              (keydown.enter)=\"onEdited.emit($event)\"\n              (keydown.esc)=\"onStopEditing.emit()\">\n    </textarea>\n    ",
    }),
    __metadata("design:paramtypes", [])
], TextareaEditorComponent);



/***/ }),

/***/ 1192:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__lib_data_set_cell__ = __webpack_require__(1164);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return CustomViewComponent; });


var CustomViewComponent = (function () {
    function CustomViewComponent(resolver) {
        this.resolver = resolver;
    }
    CustomViewComponent.prototype.ngOnInit = function () {
        if (this.cell && !this.customComponent) {
            var componentFactory = this.resolver.resolveComponentFactory(this.cell.getColumn().renderComponent);
            this.customComponent = this.dynamicTarget.createComponent(componentFactory);
            // set @Inputs and @Outputs of custom component
            this.customComponent.instance.value = this.cell.getValue();
        }
    };
    CustomViewComponent.prototype.ngOnDestroy = function () {
        if (this.customComponent) {
            this.customComponent.destroy();
        }
    };
    return CustomViewComponent;
}());
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])(),
    __metadata("design:type", __WEBPACK_IMPORTED_MODULE_1__lib_data_set_cell__["Cell"])
], CustomViewComponent.prototype, "cell", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])('dynamicTarget', { read: __WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewContainerRef"] }),
    __metadata("design:type", Object)
], CustomViewComponent.prototype, "dynamicTarget", void 0);
CustomViewComponent = __decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
        selector: 'custom-view-component',
        template: "\n    <ng-template #dynamicTarget></ng-template>\n  ",
    }),
    __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_0__angular_core__["ComponentFactoryResolver"]])
], CustomViewComponent);



/***/ }),

/***/ 1193:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__custom_view_component__ = __webpack_require__(1192);
/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, "b", function() { return __WEBPACK_IMPORTED_MODULE_0__custom_view_component__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__view_cell_component__ = __webpack_require__(1194);
/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, "a", function() { return __WEBPACK_IMPORTED_MODULE_1__view_cell_component__["a"]; });




/***/ }),

/***/ 1194:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__lib_data_set_cell__ = __webpack_require__(1164);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ViewCellComponent; });


var ViewCellComponent = (function () {
    function ViewCellComponent() {
    }
    return ViewCellComponent;
}());
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])(),
    __metadata("design:type", __WEBPACK_IMPORTED_MODULE_1__lib_data_set_cell__["Cell"])
], ViewCellComponent.prototype, "cell", void 0);
ViewCellComponent = __decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
        selector: 'table-cell-view-mode',
        template: "\n    <div [ngSwitch]=\"cell.getColumn().type\">\n        <custom-view-component *ngSwitchCase=\"'custom'\" [cell]=\"cell\"></custom-view-component>\n        <div *ngSwitchCase=\"'html'\" [innerHTML]=\"cell.getValue()\"></div>\n        <div *ngSwitchDefault>{{ cell.getValue() }}</div>\n    </div>\n    "
    })
], ViewCellComponent);



/***/ }),

/***/ 1195:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__lib_grid__ = __webpack_require__(1162);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__lib_data_set_cell__ = __webpack_require__(1164);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__lib_data_set_row__ = __webpack_require__(1168);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return CellComponent; });




var CellComponent = (function () {
    function CellComponent() {
        this.inputClass = '';
        this.mode = 'inline';
        this.isInEditing = false;
        this.edited = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"]();
    }
    CellComponent.prototype.onEdited = function (event) {
        if (this.isNew) {
            this.grid.create(this.grid.getNewRow(), this.createConfirm);
        }
        else {
            this.grid.save(this.row, this.editConfirm);
        }
    };
    return CellComponent;
}());
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])(),
    __metadata("design:type", __WEBPACK_IMPORTED_MODULE_1__lib_grid__["a" /* Grid */])
], CellComponent.prototype, "grid", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])(),
    __metadata("design:type", __WEBPACK_IMPORTED_MODULE_3__lib_data_set_row__["a" /* Row */])
], CellComponent.prototype, "row", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])(),
    __metadata("design:type", __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"])
], CellComponent.prototype, "editConfirm", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])(),
    __metadata("design:type", __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"])
], CellComponent.prototype, "createConfirm", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])(),
    __metadata("design:type", Boolean)
], CellComponent.prototype, "isNew", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])(),
    __metadata("design:type", __WEBPACK_IMPORTED_MODULE_2__lib_data_set_cell__["Cell"])
], CellComponent.prototype, "cell", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])(),
    __metadata("design:type", String)
], CellComponent.prototype, "inputClass", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])(),
    __metadata("design:type", String)
], CellComponent.prototype, "mode", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])(),
    __metadata("design:type", Boolean)
], CellComponent.prototype, "isInEditing", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Output"])(),
    __metadata("design:type", Object)
], CellComponent.prototype, "edited", void 0);
CellComponent = __decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
        selector: 'ng2-smart-table-cell',
        template: "\n    <table-cell-view-mode *ngIf=\"!isInEditing\" [cell]=\"cell\"></table-cell-view-mode>\n    <table-cell-edit-mode *ngIf=\"isInEditing\" [cell]=\"cell\"\n                          [inputClass]=\"inputClass\"\n                          (edited)=\"onEdited($event)\">\n    </table-cell-edit-mode>\n  ",
    })
], CellComponent);



/***/ }),

/***/ 1196:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_forms__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__default_filter__ = __webpack_require__(1169);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return CheckboxFilterComponent; });



var CheckboxFilterComponent = (function (_super) {
    __extends(CheckboxFilterComponent, _super);
    function CheckboxFilterComponent() {
        var _this = _super.call(this) || this;
        _this.filterActive = false;
        _this.inputControl = new __WEBPACK_IMPORTED_MODULE_1__angular_forms__["FormControl"]();
        return _this;
    }
    CheckboxFilterComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.changesSubscription = this.inputControl.valueChanges
            .debounceTime(this.delay)
            .subscribe(function (checked) {
            _this.filterActive = true;
            var trueVal = (_this.column.getFilterConfig() && _this.column.getFilterConfig().true) || true;
            var falseVal = (_this.column.getFilterConfig() && _this.column.getFilterConfig().false) || false;
            _this.query = checked ? trueVal : falseVal;
            _this.setFilter();
        });
    };
    CheckboxFilterComponent.prototype.resetFilter = function (event) {
        event.preventDefault();
        this.query = '';
        this.inputControl.setValue(false, { emitEvent: false });
        this.filterActive = false;
        this.setFilter();
    };
    return CheckboxFilterComponent;
}(__WEBPACK_IMPORTED_MODULE_2__default_filter__["a" /* DefaultFilter */]));
CheckboxFilterComponent = __decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
        selector: 'checkbox-filter',
        template: "\n    <input type=\"checkbox\" [formControl]=\"inputControl\" [ngClass]=\"inputClass\" class=\"form-control\">\n    <a href=\"#\" *ngIf=\"filterActive\" (click)=\"resetFilter($event)\">{{column.getFilterConfig()?.resetText || 'reset'}}</a>\n  "
    }),
    __metadata("design:paramtypes", [])
], CheckboxFilterComponent);



/***/ }),

/***/ 1197:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_rxjs_Subject__ = __webpack_require__(27);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_rxjs_Subject___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_rxjs_Subject__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_ng2_completer__ = __webpack_require__(91);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__default_filter__ = __webpack_require__(1169);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return CompleterFilterComponent; });




var CompleterFilterComponent = (function (_super) {
    __extends(CompleterFilterComponent, _super);
    function CompleterFilterComponent(completerService) {
        var _this = _super.call(this) || this;
        _this.completerService = completerService;
        _this.completerContent = new __WEBPACK_IMPORTED_MODULE_1_rxjs_Subject__["Subject"]();
        return _this;
    }
    CompleterFilterComponent.prototype.ngOnInit = function () {
        var _this = this;
        var config = this.column.getFilterConfig().completer;
        config.dataService = this.completerService.local(config.data, config.searchFields, config.titleField);
        config.dataService.descriptionField(config.descriptionField);
        this.changesSubscription = this.completerContent
            .map(function (ev) { return (ev && ev.title) || ev || ''; })
            .distinctUntilChanged()
            .debounceTime(this.delay)
            .subscribe(function (search) {
            _this.query = search;
            _this.setFilter();
        });
    };
    CompleterFilterComponent.prototype.inputTextChanged = function (event) {
        // workaround to trigger the search event when the home/end buttons are clicked
        // when this happens the [(ngModel)]="query" is set to "" but the (selected) method is not called
        // so here it gets called manually
        if (event === '')
            this.completerContent.next(event);
    };
    return CompleterFilterComponent;
}(__WEBPACK_IMPORTED_MODULE_3__default_filter__["a" /* DefaultFilter */]));
CompleterFilterComponent = __decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
        selector: 'completer-filter',
        template: "\n    <ng2-completer [(ngModel)]=\"query\"\n                   (ngModelChange)=\"inputTextChanged($event)\"\n                   [dataService]=\"column.getFilterConfig().completer.dataService\"\n                   [minSearchLength]=\"column.getFilterConfig().completer.minSearchLength || 0\"\n                   [pause]=\"column.getFilterConfig().completer.pause || 0\"\n                   [placeholder]=\"column.getFilterConfig().completer.placeholder || 'Start typing...'\"\n                   (selected)=\"completerContent.next($event)\">\n    </ng2-completer>\n  "
    }),
    __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_2_ng2_completer__["b" /* CompleterService */]])
], CompleterFilterComponent);



/***/ }),

/***/ 1198:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__input_filter_component__ = __webpack_require__(1199);
/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, "a", function() { return __WEBPACK_IMPORTED_MODULE_0__input_filter_component__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__select_filter_component__ = __webpack_require__(1200);
/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, "b", function() { return __WEBPACK_IMPORTED_MODULE_1__select_filter_component__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__checkbox_filter_component__ = __webpack_require__(1196);
/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, "c", function() { return __WEBPACK_IMPORTED_MODULE_2__checkbox_filter_component__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__completer_filter_component__ = __webpack_require__(1197);
/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, "d", function() { return __WEBPACK_IMPORTED_MODULE_3__completer_filter_component__["a"]; });






/***/ }),

/***/ 1199:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_forms__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__default_filter__ = __webpack_require__(1169);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return InputFilterComponent; });



var InputFilterComponent = (function (_super) {
    __extends(InputFilterComponent, _super);
    function InputFilterComponent() {
        var _this = _super.call(this) || this;
        _this.inputControl = new __WEBPACK_IMPORTED_MODULE_1__angular_forms__["FormControl"]();
        return _this;
    }
    InputFilterComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.inputControl.valueChanges
            .distinctUntilChanged()
            .debounceTime(this.delay)
            .subscribe(function (value) { return _this.setFilter(); });
    };
    return InputFilterComponent;
}(__WEBPACK_IMPORTED_MODULE_2__default_filter__["a" /* DefaultFilter */]));
InputFilterComponent = __decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
        selector: 'input-filter',
        template: "\n    <input [(ngModel)]=\"query\"\n           [ngClass]=\"inputClass\"\n           [formControl]=\"inputControl\"\n           class=\"form-control\"\n           type=\"text\" \n           placeholder=\"{{ column.title }}\" />\n  "
    }),
    __metadata("design:paramtypes", [])
], InputFilterComponent);



/***/ }),

/***/ 1200:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_forms__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__default_filter__ = __webpack_require__(1169);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return SelectFilterComponent; });



var SelectFilterComponent = (function (_super) {
    __extends(SelectFilterComponent, _super);
    function SelectFilterComponent() {
        var _this = _super.call(this) || this;
        _this.inputControl = new __WEBPACK_IMPORTED_MODULE_1__angular_forms__["FormControl"]();
        return _this;
    }
    SelectFilterComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.inputControl.valueChanges
            .distinctUntilChanged()
            .debounceTime(this.delay)
            .subscribe(function (value) { return _this.setFilter(); });
    };
    return SelectFilterComponent;
}(__WEBPACK_IMPORTED_MODULE_2__default_filter__["a" /* DefaultFilter */]));
SelectFilterComponent = __decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
        selector: 'select-filter',
        template: "\n    <select [ngClass]=\"inputClass\"\n            class=\"form-control\"\n            [(ngModel)]=\"query\"\n            [formControl]=\"inputControl\">\n\n        <option value=\"\">{{ column.getFilterConfig().selectText }}</option>\n        <option *ngFor=\"let option of column.getFilterConfig().list\" [value]=\"option.value\">\n          {{ option.title }}\n        </option>\n    </select>\n  "
    }),
    __metadata("design:paramtypes", [])
], SelectFilterComponent);



/***/ }),

/***/ 1201:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__lib_data_source_data_source__ = __webpack_require__(1166);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__lib_data_set_column__ = __webpack_require__(1167);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return FilterComponent; });



var FilterComponent = (function () {
    function FilterComponent() {
        this.inputClass = '';
        this.filter = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"]();
        this.query = '';
    }
    FilterComponent.prototype.ngAfterViewInit = function () {
        var _this = this;
        this.source.onChanged().subscribe(function (elements) {
            var filterConf = _this.source.getFilter();
            if (filterConf && filterConf.filters && filterConf.filters.length === 0) {
                _this.query = '';
            }
        });
    };
    FilterComponent.prototype.onFilter = function (query) {
        this.source.addFilter({
            field: this.column.id,
            search: query,
            filter: this.column.getFilterFunction()
        });
    };
    return FilterComponent;
}());
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])(),
    __metadata("design:type", __WEBPACK_IMPORTED_MODULE_2__lib_data_set_column__["a" /* Column */])
], FilterComponent.prototype, "column", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])(),
    __metadata("design:type", __WEBPACK_IMPORTED_MODULE_1__lib_data_source_data_source__["a" /* DataSource */])
], FilterComponent.prototype, "source", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])(),
    __metadata("design:type", String)
], FilterComponent.prototype, "inputClass", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Output"])(),
    __metadata("design:type", Object)
], FilterComponent.prototype, "filter", void 0);
FilterComponent = __decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
        selector: 'ng2-smart-table-filter',
        styles: [__webpack_require__(1226)],
        template: "\n    <div class=\"ng2-smart-filter\" *ngIf=\"column.isFilterable\" [ngSwitch]=\"column.getFilterType()\">\n      <select-filter *ngSwitchCase=\"'list'\"\n                     [query]=\"query\"\n                     [ngClass]=\"inputClass\"\n                     [column]=\"column\"\n                     (filter)=\"onFilter($event)\">\n      </select-filter>\n      <checkbox-filter *ngSwitchCase=\"'checkbox'\"\n                       [query]=\"query\"\n                       [ngClass]=\"inputClass\"\n                       [column]=\"column\"\n                       (filter)=\"onFilter($event)\">\n      </checkbox-filter>\n      <completer-filter *ngSwitchCase=\"'completer'\"\n                        [query]=\"query\"\n                        [ngClass]=\"inputClass\"\n                        [column]=\"column\"\n                        (filter)=\"onFilter($event)\">\n      </completer-filter>\n      <input-filter *ngSwitchDefault\n                    [query]=\"query\"\n                    [ngClass]=\"inputClass\"\n                    [column]=\"column\"\n                    (filter)=\"onFilter($event)\">\n      </input-filter>\n    </div>\n  "
    })
], FilterComponent);



/***/ }),

/***/ 1202:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__lib_data_source_data_source__ = __webpack_require__(1166);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return PagerComponent; });


var PagerComponent = (function () {
    function PagerComponent() {
        this.changePage = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"]();
        this.count = 0;
    }
    PagerComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.source.onChanged().subscribe(function (changes) {
            _this.page = _this.source.getPaging().page;
            _this.count = _this.source.count();
            if (_this.isPageOutOfBounce()) {
                _this.source.setPage(--_this.page);
            }
            _this.processPageChange(changes);
            _this.initPages();
        });
    };
    /**
     * We change the page here depending on the action performed against data source
     * if a new element was added to the end of the table - then change the page to the last
     * if a new element was added to the beginning of the table - then to the first page
     * @param changes
     */
    PagerComponent.prototype.processPageChange = function (changes) {
        if (changes['action'] === 'prepend') {
            this.source.setPage(1);
        }
        if (changes['action'] === 'append') {
            this.source.setPage(this.getLast());
        }
    };
    PagerComponent.prototype.shouldShow = function () {
        return this.source.count() > this.perPage;
    };
    PagerComponent.prototype.paginate = function (page) {
        this.source.setPage(page);
        this.page = page;
        this.changePage.emit({ page: page });
        return false;
    };
    PagerComponent.prototype.getPage = function () {
        return this.page;
    };
    PagerComponent.prototype.getPages = function () {
        return this.pages;
    };
    PagerComponent.prototype.getLast = function () {
        return Math.ceil(this.count / this.perPage);
    };
    PagerComponent.prototype.isPageOutOfBounce = function () {
        return (this.page * this.perPage) >= (this.count + this.perPage) && this.page > 1;
    };
    PagerComponent.prototype.initPages = function () {
        var pagesCount = this.getLast();
        var showPagesCount = 4;
        showPagesCount = pagesCount < showPagesCount ? pagesCount : showPagesCount;
        this.pages = [];
        if (this.shouldShow()) {
            var middleOne = Math.ceil(showPagesCount / 2);
            middleOne = this.page >= middleOne ? this.page : middleOne;
            var lastOne = middleOne + Math.floor(showPagesCount / 2);
            lastOne = lastOne >= pagesCount ? pagesCount : lastOne;
            var firstOne = lastOne - showPagesCount + 1;
            for (var i = firstOne; i <= lastOne; i++) {
                this.pages.push(i);
            }
        }
    };
    return PagerComponent;
}());
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])(),
    __metadata("design:type", Number)
], PagerComponent.prototype, "perPage", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])(),
    __metadata("design:type", __WEBPACK_IMPORTED_MODULE_1__lib_data_source_data_source__["a" /* DataSource */])
], PagerComponent.prototype, "source", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Output"])(),
    __metadata("design:type", Object)
], PagerComponent.prototype, "changePage", void 0);
PagerComponent = __decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
        selector: 'ng2-smart-table-pager',
        styles: [__webpack_require__(1227)],
        template: "\n    <nav *ngIf=\"shouldShow()\" class=\"ng2-smart-pagination-nav\">\n      <ul class=\"ng2-smart-pagination pagination\">\n        <li class=\"ng2-smart-page-item page-item\" [ngClass]=\"{disabled: getPage() == 1}\">\n          <a class=\"ng2-smart-page-link page-link\" href=\"#\" \n          (click)=\"getPage() == 1 ? false : paginate(1)\" aria-label=\"First\">\n            <span aria-hidden=\"true\">&laquo;</span>\n            <span class=\"sr-only\">First</span>\n          </a>\n        </li>\n        <li class=\"ng2-smart-page-item page-item\" \n        [ngClass]=\"{active: getPage() == page}\" *ngFor=\"let page of getPages()\">\n          <span class=\"ng2-smart-page-link page-link\" \n          *ngIf=\"getPage() == page\">{{ page }} <span class=\"sr-only\">(current)</span></span>\n          <a class=\"ng2-smart-page-link page-link\" href=\"#\" \n          (click)=\"paginate(page)\" *ngIf=\"getPage() != page\">{{ page }}</a>\n        </li>\n  \n        <li class=\"ng2-smart-page-item page-item\" \n        [ngClass]=\"{disabled: getPage() == getLast()}\">\n          <a class=\"ng2-smart-page-link page-link\" href=\"#\" \n          (click)=\"getPage() == getLast() ? false : paginate(getLast())\" aria-label=\"Last\">\n            <span aria-hidden=\"true\">&raquo;</span>\n            <span class=\"sr-only\">Last</span>\n          </a>\n        </li>\n      </ul>\n    </nav>\n  "
    })
], PagerComponent);



/***/ }),

/***/ 1203:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__lib_grid__ = __webpack_require__(1162);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__lib_data_set_row__ = __webpack_require__(1168);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return TbodyCreateCancelComponent; });



var TbodyCreateCancelComponent = (function () {
    function TbodyCreateCancelComponent() {
    }
    TbodyCreateCancelComponent.prototype.onSave = function (event) {
        event.preventDefault();
        event.stopPropagation();
        this.grid.save(this.row, this.editConfirm);
    };
    TbodyCreateCancelComponent.prototype.onCancelEdit = function (event) {
        event.preventDefault();
        event.stopPropagation();
        this.row.isInEditing = false;
    };
    return TbodyCreateCancelComponent;
}());
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])(),
    __metadata("design:type", __WEBPACK_IMPORTED_MODULE_1__lib_grid__["a" /* Grid */])
], TbodyCreateCancelComponent.prototype, "grid", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])(),
    __metadata("design:type", __WEBPACK_IMPORTED_MODULE_2__lib_data_set_row__["a" /* Row */])
], TbodyCreateCancelComponent.prototype, "row", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])(),
    __metadata("design:type", __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"])
], TbodyCreateCancelComponent.prototype, "editConfirm", void 0);
TbodyCreateCancelComponent = __decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
        selector: 'ng2-st-tbody-create-cancel',
        template: "\n    <a href=\"#\" class=\"ng2-smart-action ng2-smart-action-edit-save\"\n        [innerHTML]=\"grid.getSetting('edit.saveButtonContent')\" (click)=\"onSave($event)\"></a>\n    <a href=\"#\" class=\"ng2-smart-action ng2-smart-action-edit-cancel\"\n        [innerHTML]=\"grid.getSetting('edit.cancelButtonContent')\" (click)=\"onCancelEdit($event)\"></a>\n  "
    })
], TbodyCreateCancelComponent);



/***/ }),

/***/ 1204:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__lib_grid__ = __webpack_require__(1162);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__lib_data_set_row__ = __webpack_require__(1168);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return TbodyEditDeleteComponent; });



var TbodyEditDeleteComponent = (function () {
    function TbodyEditDeleteComponent() {
        this.edit = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"]();
        this.view = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"]();
        this.delete = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"]();
        this.editRowSelect = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"]();
        this.viewRowSelect = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"]();
    }
    TbodyEditDeleteComponent.prototype.onEdit = function (event) {
        event.preventDefault();
        event.stopPropagation();
        this.editRowSelect.emit(this.row);
        if (this.grid.getSetting('mode') === 'external') {
            this.edit.emit({
                data: this.row.getData(),
                source: this.source
            });
        }
        else {
            this.grid.edit(this.row);
        }
    };
    TbodyEditDeleteComponent.prototype.onView = function (event) {
        event.preventDefault();
        event.stopPropagation();
        this.viewRowSelect.emit(this.row);
        if (this.grid.getSetting('mode') === 'external') {
            this.view.emit({
                data: this.row.getData(),
                source: this.source
            });
        }
        else {
            this.grid.view(this.row);
        }
    };
    TbodyEditDeleteComponent.prototype.onDelete = function (event) {
        event.preventDefault();
        event.stopPropagation();
        if (this.grid.getSetting('mode') === 'external') {
            this.delete.emit({
                data: this.row.getData(),
                source: this.source
            });
        }
        else {
            this.grid.delete(this.row, this.deleteConfirm);
        }
    };
    return TbodyEditDeleteComponent;
}());
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])(),
    __metadata("design:type", __WEBPACK_IMPORTED_MODULE_1__lib_grid__["a" /* Grid */])
], TbodyEditDeleteComponent.prototype, "grid", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])(),
    __metadata("design:type", __WEBPACK_IMPORTED_MODULE_2__lib_data_set_row__["a" /* Row */])
], TbodyEditDeleteComponent.prototype, "row", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])(),
    __metadata("design:type", Object)
], TbodyEditDeleteComponent.prototype, "source", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])(),
    __metadata("design:type", __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"])
], TbodyEditDeleteComponent.prototype, "deleteConfirm", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])(),
    __metadata("design:type", __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"])
], TbodyEditDeleteComponent.prototype, "editConfirm", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])(),
    __metadata("design:type", __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"])
], TbodyEditDeleteComponent.prototype, "viewConfirm", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Output"])(),
    __metadata("design:type", Object)
], TbodyEditDeleteComponent.prototype, "edit", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Output"])(),
    __metadata("design:type", Object)
], TbodyEditDeleteComponent.prototype, "view", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Output"])(),
    __metadata("design:type", Object)
], TbodyEditDeleteComponent.prototype, "delete", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Output"])(),
    __metadata("design:type", Object)
], TbodyEditDeleteComponent.prototype, "editRowSelect", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Output"])(),
    __metadata("design:type", Object)
], TbodyEditDeleteComponent.prototype, "viewRowSelect", void 0);
TbodyEditDeleteComponent = __decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
        selector: 'ng2-st-tbody-edit-delete',
        template: "\n    <a href=\"#\" *ngIf=\"grid.getSetting('actions.view')\" class=\"ng2-smart-action ng2-smart-action-view-view\"\n        [innerHTML]=\"grid.getSetting('view.viewButtonContent')\" (click)=\"onView($event)\"></a>\n    <a href=\"#\" *ngIf=\"grid.getSetting('actions.edit')\" class=\"ng2-smart-action ng2-smart-action-edit-edit\"\n        [innerHTML]=\"grid.getSetting('edit.editButtonContent')\" (click)=\"onEdit($event)\"></a>\n    <a href=\"#\" *ngIf=\"grid.getSetting('actions.delete')\" class=\"ng2-smart-action ng2-smart-action-delete-delete\"\n        [innerHTML]=\"grid.getSetting('delete.deleteButtonContent')\" (click)=\"onDelete($event)\"></a>\n  "
    })
], TbodyEditDeleteComponent);



/***/ }),

/***/ 1205:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__edit_delete_component__ = __webpack_require__(1204);
/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, "b", function() { return __WEBPACK_IMPORTED_MODULE_0__edit_delete_component__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__create_cancel_component__ = __webpack_require__(1203);
/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, "a", function() { return __WEBPACK_IMPORTED_MODULE_1__create_cancel_component__["a"]; });




/***/ }),

/***/ 1206:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__lib_grid__ = __webpack_require__(1162);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return Ng2SmartTableTbodyComponent; });


var Ng2SmartTableTbodyComponent = (function () {
    function Ng2SmartTableTbodyComponent() {
        this.save = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"]();
        this.cancel = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"]();
        this.edit = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"]();
        this.view = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"]();
        this.delete = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"]();
        this.edited = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"]();
        this.userSelectRow = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"]();
        this.editRowSelect = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"]();
        this.viewRowSelect = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"]();
        this.multipleSelectRow = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"]();
    }
    return Ng2SmartTableTbodyComponent;
}());
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])(),
    __metadata("design:type", __WEBPACK_IMPORTED_MODULE_1__lib_grid__["a" /* Grid */])
], Ng2SmartTableTbodyComponent.prototype, "grid", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])(),
    __metadata("design:type", Object)
], Ng2SmartTableTbodyComponent.prototype, "source", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])(),
    __metadata("design:type", __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"])
], Ng2SmartTableTbodyComponent.prototype, "deleteConfirm", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])(),
    __metadata("design:type", __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"])
], Ng2SmartTableTbodyComponent.prototype, "editConfirm", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])(),
    __metadata("design:type", __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"])
], Ng2SmartTableTbodyComponent.prototype, "viewConfirm", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Output"])(),
    __metadata("design:type", Object)
], Ng2SmartTableTbodyComponent.prototype, "save", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Output"])(),
    __metadata("design:type", Object)
], Ng2SmartTableTbodyComponent.prototype, "cancel", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Output"])(),
    __metadata("design:type", Object)
], Ng2SmartTableTbodyComponent.prototype, "edit", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Output"])(),
    __metadata("design:type", Object)
], Ng2SmartTableTbodyComponent.prototype, "view", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Output"])(),
    __metadata("design:type", Object)
], Ng2SmartTableTbodyComponent.prototype, "delete", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Output"])(),
    __metadata("design:type", Object)
], Ng2SmartTableTbodyComponent.prototype, "edited", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Output"])(),
    __metadata("design:type", Object)
], Ng2SmartTableTbodyComponent.prototype, "userSelectRow", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Output"])(),
    __metadata("design:type", Object)
], Ng2SmartTableTbodyComponent.prototype, "editRowSelect", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Output"])(),
    __metadata("design:type", Object)
], Ng2SmartTableTbodyComponent.prototype, "viewRowSelect", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Output"])(),
    __metadata("design:type", Object)
], Ng2SmartTableTbodyComponent.prototype, "multipleSelectRow", void 0);
Ng2SmartTableTbodyComponent = __decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
        selector: '[ng2-st-tbody]',
        template: __webpack_require__(1231)
    })
], Ng2SmartTableTbodyComponent);



/***/ }),

/***/ 1207:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__cells__ = __webpack_require__(1205);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__tbody_component__ = __webpack_require__(1206);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return NG2_SMART_TABLE_TBODY_DIRECTIVES; });


var NG2_SMART_TABLE_TBODY_DIRECTIVES = [
    __WEBPACK_IMPORTED_MODULE_0__cells__["a" /* TbodyCreateCancelComponent */],
    __WEBPACK_IMPORTED_MODULE_0__cells__["b" /* TbodyEditDeleteComponent */],
    __WEBPACK_IMPORTED_MODULE_1__tbody_component__["a" /* Ng2SmartTableTbodyComponent */],
];


/***/ }),

/***/ 1208:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__lib_grid__ = __webpack_require__(1162);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ActionsTitleComponent; });


var ActionsTitleComponent = (function () {
    function ActionsTitleComponent(ref) {
        this.ref = ref;
    }
    ActionsTitleComponent.prototype.ngAfterViewInit = function () {
        this.ref.nativeElement.classList.add('ng2-smart-actions');
    };
    return ActionsTitleComponent;
}());
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])(),
    __metadata("design:type", __WEBPACK_IMPORTED_MODULE_1__lib_grid__["a" /* Grid */])
], ActionsTitleComponent.prototype, "grid", void 0);
ActionsTitleComponent = __decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
        selector: '[ng2-st-actions-title]',
        template: "\n    <div class=\"ng2-smart-title\">{{ grid.getSetting('actions.columnTitle') }}</div>\n  "
    }),
    __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_0__angular_core__["ElementRef"]])
], ActionsTitleComponent);



/***/ }),

/***/ 1209:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__lib_grid__ = __webpack_require__(1162);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ActionsComponent; });


var ActionsComponent = (function () {
    function ActionsComponent() {
        this.create = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"]();
    }
    return ActionsComponent;
}());
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])(),
    __metadata("design:type", __WEBPACK_IMPORTED_MODULE_1__lib_grid__["a" /* Grid */])
], ActionsComponent.prototype, "grid", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Output"])(),
    __metadata("design:type", Object)
], ActionsComponent.prototype, "create", void 0);
ActionsComponent = __decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
        selector: 'ng2-st-actions',
        template: "\n    <a href=\"#\" class=\"ng2-smart-action ng2-smart-action-add-create\"\n        [innerHTML]=\"grid.getSetting('add.createButtonContent')\" (click)=\"$event.preventDefault();create.emit($event)\"></a>\n    <a href=\"#\" class=\"ng2-smart-action ng2-smart-action-add-cancel\"\n        [innerHTML]=\"grid.getSetting('add.cancelButtonContent')\" (click)=\"$event.preventDefault();grid.createFormShown = false;\"></a>\n  "
    })
], ActionsComponent);



/***/ }),

/***/ 1210:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__lib_grid__ = __webpack_require__(1162);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return AddButtonComponent; });


var AddButtonComponent = (function () {
    function AddButtonComponent(ref) {
        this.ref = ref;
        this.create = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"]();
    }
    AddButtonComponent.prototype.ngAfterViewInit = function () {
        this.ref.nativeElement.classList.add('ng2-smart-actions-title', 'ng2-smart-actions-title-add');
    };
    AddButtonComponent.prototype.onAdd = function (event) {
        event.preventDefault();
        event.stopPropagation();
        if (this.grid.getSetting('mode') === 'external') {
            this.create.emit({
                source: this.source
            });
        }
        else
            this.grid.createFormShown = true;
    };
    return AddButtonComponent;
}());
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])(),
    __metadata("design:type", __WEBPACK_IMPORTED_MODULE_1__lib_grid__["a" /* Grid */])
], AddButtonComponent.prototype, "grid", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])(),
    __metadata("design:type", Object)
], AddButtonComponent.prototype, "source", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Output"])(),
    __metadata("design:type", Object)
], AddButtonComponent.prototype, "create", void 0);
AddButtonComponent = __decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
        selector: '[ng2-st-add-button]',
        template: "\n    <a *ngIf=\"grid.getSetting('actions.add')\" href=\"#\" class=\"ng2-smart-action ng2-smart-action-add-add\"\n        [innerHTML]=\"grid.getSetting('add.addButtonContent')\" (click)=\"onAdd($event)\"></a>\n  "
    }),
    __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_0__angular_core__["ElementRef"]])
], AddButtonComponent);



/***/ }),

/***/ 1211:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__lib_grid__ = __webpack_require__(1162);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return CheckboxSelectAllComponent; });


var CheckboxSelectAllComponent = (function () {
    function CheckboxSelectAllComponent() {
    }
    return CheckboxSelectAllComponent;
}());
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])(),
    __metadata("design:type", __WEBPACK_IMPORTED_MODULE_1__lib_grid__["a" /* Grid */])
], CheckboxSelectAllComponent.prototype, "grid", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])(),
    __metadata("design:type", Object)
], CheckboxSelectAllComponent.prototype, "source", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])(),
    __metadata("design:type", Boolean)
], CheckboxSelectAllComponent.prototype, "isAllSelected", void 0);
CheckboxSelectAllComponent = __decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
        selector: '[ng2-st-checkbox-select-all]',
        template: "\n    <input type=\"checkbox\" [ngModel]=\"isAllSelected\">\n  "
    })
], CheckboxSelectAllComponent);



/***/ }),

/***/ 1212:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__lib_data_set_column__ = __webpack_require__(1167);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ColumnTitleComponent; });


var ColumnTitleComponent = (function () {
    function ColumnTitleComponent() {
        this.sort = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"]();
    }
    return ColumnTitleComponent;
}());
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])(),
    __metadata("design:type", __WEBPACK_IMPORTED_MODULE_1__lib_data_set_column__["a" /* Column */])
], ColumnTitleComponent.prototype, "column", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])(),
    __metadata("design:type", Object)
], ColumnTitleComponent.prototype, "source", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Output"])(),
    __metadata("design:type", Object)
], ColumnTitleComponent.prototype, "sort", void 0);
ColumnTitleComponent = __decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
        selector: 'ng2-st-column-title',
        template: "\n    <div class=\"ng2-smart-title\">\n      <ng2-smart-table-title [source]=\"source\" [column]=\"column\" (sort)=\"sort.emit($event)\"></ng2-smart-table-title>\n    </div>\n  "
    })
], ColumnTitleComponent);



/***/ }),

/***/ 1213:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__title_title_component__ = __webpack_require__(1214);
/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, "f", function() { return __WEBPACK_IMPORTED_MODULE_0__title_title_component__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__actions_title_component__ = __webpack_require__(1208);
/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, "b", function() { return __WEBPACK_IMPORTED_MODULE_1__actions_title_component__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__actions_component__ = __webpack_require__(1209);
/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, "a", function() { return __WEBPACK_IMPORTED_MODULE_2__actions_component__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__add_button_component__ = __webpack_require__(1210);
/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, "c", function() { return __WEBPACK_IMPORTED_MODULE_3__add_button_component__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__checkbox_select_all_component__ = __webpack_require__(1211);
/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, "d", function() { return __WEBPACK_IMPORTED_MODULE_4__checkbox_select_all_component__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__column_title_component__ = __webpack_require__(1212);
/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, "e", function() { return __WEBPACK_IMPORTED_MODULE_5__column_title_component__["a"]; });








/***/ }),

/***/ 1214:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__lib_data_source_data_source__ = __webpack_require__(1166);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__lib_data_set_column__ = __webpack_require__(1167);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return TitleComponent; });



var TitleComponent = (function () {
    function TitleComponent() {
        this.currentDirection = '';
        this.sort = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"]();
    }
    TitleComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.source.onChanged().subscribe(function (elements) {
            var sortConf = _this.source.getSort();
            if (sortConf.length > 0 && sortConf[0]['field'] === _this.column.id)
                _this.currentDirection = sortConf[0]['direction'];
            else
                _this.currentDirection = '';
            sortConf.forEach(function (fieldConf) {
            });
        });
    };
    TitleComponent.prototype._sort = function (event) {
        event.preventDefault();
        this.changeSortDirection();
        this.source.setSort([
            {
                field: this.column.id,
                direction: this.currentDirection,
                compare: this.column.getCompareFunction()
            }
        ]);
        this.sort.emit(null);
    };
    TitleComponent.prototype.changeSortDirection = function () {
        if (this.currentDirection) {
            var newDirection = this.currentDirection === 'asc' ? 'desc' : 'asc';
            this.currentDirection = newDirection;
        }
        else {
            this.currentDirection = this.column.sortDirection;
        }
        return this.currentDirection;
    };
    return TitleComponent;
}());
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])(),
    __metadata("design:type", __WEBPACK_IMPORTED_MODULE_2__lib_data_set_column__["a" /* Column */])
], TitleComponent.prototype, "column", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])(),
    __metadata("design:type", __WEBPACK_IMPORTED_MODULE_1__lib_data_source_data_source__["a" /* DataSource */])
], TitleComponent.prototype, "source", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Output"])(),
    __metadata("design:type", Object)
], TitleComponent.prototype, "sort", void 0);
TitleComponent = __decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
        selector: 'ng2-smart-table-title',
        styles: [__webpack_require__(1228)],
        template: "\n    <a href=\"#\" *ngIf=\"column.isSortable\"\n                (click)=\"_sort($event, column)\" \n                class=\"ng2-smart-sort-link sort\"\n                [ngClass]=\"currentDirection\">\n      {{ column.title }}\n    </a>\n    <span class=\"ng2-smart-sort\" *ngIf=\"!column.isSortable\">{{ column.title }}</span>\n  "
    })
], TitleComponent);



/***/ }),

/***/ 1215:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__thead_filters_row_component__ = __webpack_require__(1216);
/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, "a", function() { return __WEBPACK_IMPORTED_MODULE_0__thead_filters_row_component__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__thead_form_row_component__ = __webpack_require__(1217);
/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, "b", function() { return __WEBPACK_IMPORTED_MODULE_1__thead_form_row_component__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__thead_titles_row_component__ = __webpack_require__(1218);
/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, "c", function() { return __WEBPACK_IMPORTED_MODULE_2__thead_titles_row_component__["a"]; });





/***/ }),

/***/ 1216:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__lib_grid__ = __webpack_require__(1162);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return TheadFitlersRowComponent; });


var TheadFitlersRowComponent = (function () {
    function TheadFitlersRowComponent() {
        this.create = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"]();
        this.filter = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"]();
    }
    return TheadFitlersRowComponent;
}());
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])(),
    __metadata("design:type", __WEBPACK_IMPORTED_MODULE_1__lib_grid__["a" /* Grid */])
], TheadFitlersRowComponent.prototype, "grid", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])(),
    __metadata("design:type", Object)
], TheadFitlersRowComponent.prototype, "source", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Output"])(),
    __metadata("design:type", Object)
], TheadFitlersRowComponent.prototype, "create", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Output"])(),
    __metadata("design:type", Object)
], TheadFitlersRowComponent.prototype, "filter", void 0);
TheadFitlersRowComponent = __decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
        selector: '[ng2-st-thead-filters-row]',
        template: "\n    <th *ngIf=\"grid.isMultiSelectVisible()\"></th>\n    <th ng2-st-add-button *ngIf=\"grid.showActionColumn('left')\"\n                          [grid]=\"grid\"\n                          (create)=\"create.emit($event)\">\n    </th>\n    <th *ngFor=\"let column of grid.getColumns()\" class=\"ng2-smart-th {{ column.id }}\">\n      <ng2-smart-table-filter [source]=\"source\"\n                              [column]=\"column\"\n                              [inputClass]=\"grid.getSetting('filter.inputClass')\"\n                              (filter)=\"filter.emit($event)\">\n      </ng2-smart-table-filter>\n    </th>\n    <th ng2-st-add-button *ngIf=\"grid.showActionColumn('right')\"\n                          [grid]=\"grid\"\n                          [source]=\"source\"                          \n                          (create)=\"create.emit($event)\">\n    </th>\n    "
    })
], TheadFitlersRowComponent);



/***/ }),

/***/ 1217:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__lib_grid__ = __webpack_require__(1162);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__lib_data_set_row__ = __webpack_require__(1168);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return TheadFormRowComponent; });



var TheadFormRowComponent = (function () {
    function TheadFormRowComponent() {
        this.create = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"]();
    }
    TheadFormRowComponent.prototype.onCreate = function (event) {
        event.stopPropagation();
        this.grid.create(this.grid.getNewRow(), this.createConfirm);
    };
    return TheadFormRowComponent;
}());
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])(),
    __metadata("design:type", __WEBPACK_IMPORTED_MODULE_1__lib_grid__["a" /* Grid */])
], TheadFormRowComponent.prototype, "grid", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])(),
    __metadata("design:type", __WEBPACK_IMPORTED_MODULE_2__lib_data_set_row__["a" /* Row */])
], TheadFormRowComponent.prototype, "row", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])(),
    __metadata("design:type", __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"])
], TheadFormRowComponent.prototype, "createConfirm", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Output"])(),
    __metadata("design:type", Object)
], TheadFormRowComponent.prototype, "create", void 0);
TheadFormRowComponent = __decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
        selector: '[ng2-st-thead-form-row]',
        template: "\n      <td *ngIf=\"grid.isMultiSelectVisible()\"></td>\n      <td class=\"ng2-smart-actions\">\n        <ng2-st-actions [grid]=\"grid\" (create)=\"onCreate($event)\"></ng2-st-actions>\n      </td>\n      <td *ngFor=\"let cell of grid.getNewRow().getCells()\">\n        <ng2-smart-table-cell [cell]=\"cell\"\n                              [grid]=\"grid\"\n                              [isNew]=\"true\"\n                              [createConfirm]=\"createConfirm\"\n                              [inputClass]=\"grid.getSetting('add.inputClass')\"\n                              [isInEditing]=\"grid.getNewRow().isInEditing\"\n                              (edited)=\"onCreate($event)\">\n        </ng2-smart-table-cell>\n      </td>\n    "
    })
], TheadFormRowComponent);



/***/ }),

/***/ 1218:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__lib_grid__ = __webpack_require__(1162);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return TheadTitlesRowComponent; });


var TheadTitlesRowComponent = (function () {
    function TheadTitlesRowComponent() {
        this.sort = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"]();
        this.selectAllRows = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"]();
    }
    return TheadTitlesRowComponent;
}());
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])(),
    __metadata("design:type", __WEBPACK_IMPORTED_MODULE_1__lib_grid__["a" /* Grid */])
], TheadTitlesRowComponent.prototype, "grid", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])(),
    __metadata("design:type", Boolean)
], TheadTitlesRowComponent.prototype, "isAllSelected", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])(),
    __metadata("design:type", Object)
], TheadTitlesRowComponent.prototype, "source", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Output"])(),
    __metadata("design:type", Object)
], TheadTitlesRowComponent.prototype, "sort", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Output"])(),
    __metadata("design:type", Object)
], TheadTitlesRowComponent.prototype, "selectAllRows", void 0);
TheadTitlesRowComponent = __decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
        selector: '[ng2-st-thead-titles-row]',
        template: "\n    <th ng2-st-checkbox-select-all *ngIf=\"grid.isMultiSelectVisible()\"\n                                   [grid]=\"grid\"\n                                   [source]=\"source\"\n                                   [isAllSelected]=\"isAllSelected\"\n                                   (click)=\"selectAllRows.emit($event)\">\n    </th>\n    <th ng2-st-actions-title *ngIf=\"grid.showActionColumn('left')\" [grid]=\"grid\"></th>\n    <th *ngFor=\"let column of grid.getColumns()\" class=\"ng2-smart-th {{ column.id }}\" [ngClass]=\"column.class\">\n      <ng2-st-column-title [source]=\"source\" [column]=\"column\" (sort)=\"sort.emit($event)\"></ng2-st-column-title>\n    </th>\n    <th ng2-st-actions-title *ngIf=\"grid.showActionColumn('right')\" [grid]=\"grid\"></th>\n    "
    })
], TheadTitlesRowComponent);



/***/ }),

/***/ 1219:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__lib_grid__ = __webpack_require__(1162);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return Ng2SmartTableTheadComponent; });


var Ng2SmartTableTheadComponent = (function () {
    function Ng2SmartTableTheadComponent() {
        this.sort = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"]();
        this.selectAllRows = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"]();
        this.create = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"]();
        this.filter = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"]();
    }
    return Ng2SmartTableTheadComponent;
}());
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])(),
    __metadata("design:type", __WEBPACK_IMPORTED_MODULE_1__lib_grid__["a" /* Grid */])
], Ng2SmartTableTheadComponent.prototype, "grid", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])(),
    __metadata("design:type", Object)
], Ng2SmartTableTheadComponent.prototype, "source", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])(),
    __metadata("design:type", Boolean)
], Ng2SmartTableTheadComponent.prototype, "isAllSelected", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])(),
    __metadata("design:type", __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"])
], Ng2SmartTableTheadComponent.prototype, "createConfirm", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Output"])(),
    __metadata("design:type", Object)
], Ng2SmartTableTheadComponent.prototype, "sort", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Output"])(),
    __metadata("design:type", Object)
], Ng2SmartTableTheadComponent.prototype, "selectAllRows", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Output"])(),
    __metadata("design:type", Object)
], Ng2SmartTableTheadComponent.prototype, "create", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Output"])(),
    __metadata("design:type", Object)
], Ng2SmartTableTheadComponent.prototype, "filter", void 0);
Ng2SmartTableTheadComponent = __decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
        selector: '[ng2-st-thead]',
        template: __webpack_require__(1232)
    })
], Ng2SmartTableTheadComponent);



/***/ }),

/***/ 1220:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__cells__ = __webpack_require__(1213);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__rows__ = __webpack_require__(1215);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__thead_component__ = __webpack_require__(1219);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return NG2_SMART_TABLE_THEAD_DIRECTIVES; });



var NG2_SMART_TABLE_THEAD_DIRECTIVES = [
    __WEBPACK_IMPORTED_MODULE_0__cells__["a" /* ActionsComponent */],
    __WEBPACK_IMPORTED_MODULE_0__cells__["b" /* ActionsTitleComponent */],
    __WEBPACK_IMPORTED_MODULE_0__cells__["c" /* AddButtonComponent */],
    __WEBPACK_IMPORTED_MODULE_0__cells__["d" /* CheckboxSelectAllComponent */],
    __WEBPACK_IMPORTED_MODULE_0__cells__["e" /* ColumnTitleComponent */],
    __WEBPACK_IMPORTED_MODULE_0__cells__["f" /* TitleComponent */],
    __WEBPACK_IMPORTED_MODULE_1__rows__["a" /* TheadFitlersRowComponent */],
    __WEBPACK_IMPORTED_MODULE_1__rows__["b" /* TheadFormRowComponent */],
    __WEBPACK_IMPORTED_MODULE_1__rows__["c" /* TheadTitlesRowComponent */],
    __WEBPACK_IMPORTED_MODULE_2__thead_component__["a" /* Ng2SmartTableTheadComponent */],
];


/***/ }),

/***/ 1221:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__row__ = __webpack_require__(1168);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__column__ = __webpack_require__(1167);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return DataSet; });


var DataSet = (function () {
    function DataSet(data, columnSettings) {
        if (data === void 0) { data = []; }
        this.columnSettings = columnSettings;
        this.data = [];
        this.columns = [];
        this.rows = [];
        this.willSelect = 'first';
        this.createColumns(columnSettings);
        this.setData(data);
        this.createNewRow();
    }
    DataSet.prototype.setData = function (data) {
        this.data = data;
        this.createRows();
    };
    DataSet.prototype.getColumns = function () {
        return this.columns;
    };
    DataSet.prototype.getRows = function () {
        return this.rows;
    };
    DataSet.prototype.findRowByData = function (data) {
        return this.rows.find(function (row) { return row.getData() === data; });
    };
    DataSet.prototype.deselectAll = function () {
        this.rows.forEach(function (row) {
            row.isSelected = false;
        });
    };
    DataSet.prototype.selectRow = function (row) {
        this.deselectAll();
        row.isSelected = true;
        this.selectedRow = row;
        return this.selectedRow;
    };
    DataSet.prototype.multipleSelectRow = function (row) {
        row.isSelected = !row.isSelected;
        this.selectedRow = row;
        return this.selectedRow;
    };
    DataSet.prototype.selectPreviousRow = function () {
        if (this.rows.length > 0) {
            var index = this.selectedRow ? this.selectedRow.index : 0;
            if (index > this.rows.length - 1) {
                index = this.rows.length - 1;
            }
            this.selectRow(this.rows[index]);
            return this.selectedRow;
        }
    };
    DataSet.prototype.selectFirstRow = function () {
        if (this.rows.length > 0) {
            this.selectRow(this.rows[0]);
            return this.selectedRow;
        }
    };
    DataSet.prototype.selectLastRow = function () {
        if (this.rows.length > 0) {
            this.selectRow(this.rows[this.rows.length - 1]);
            return this.selectedRow;
        }
    };
    DataSet.prototype.willSelectFirstRow = function () {
        this.willSelect = 'first';
    };
    DataSet.prototype.willSelectLastRow = function () {
        this.willSelect = 'last';
    };
    DataSet.prototype.select = function () {
        if (this.getRows().length === 0) {
            return;
        }
        if (this.willSelect) {
            if (this.willSelect === 'first') {
                this.selectFirstRow();
            }
            if (this.willSelect === 'last') {
                this.selectLastRow();
            }
            this.willSelect = '';
        }
        else {
            this.selectFirstRow();
        }
        return this.selectedRow;
    };
    DataSet.prototype.createNewRow = function () {
        this.newRow = new __WEBPACK_IMPORTED_MODULE_0__row__["a" /* Row */](0, {}, this);
        this.newRow.isInEditing = true;
    };
    /**
     * Create columns by mapping from the settings
     * @param settings
     * @private
     */
    DataSet.prototype.createColumns = function (settings) {
        for (var id in settings) {
            if (settings.hasOwnProperty(id)) {
                this.columns.push(new __WEBPACK_IMPORTED_MODULE_1__column__["a" /* Column */](id, settings[id], this));
            }
        }
    };
    /**
     * Create rows based on current data prepared in data source
     * @private
     */
    DataSet.prototype.createRows = function () {
        var _this = this;
        this.rows = [];
        this.data.forEach(function (el, index) {
            _this.rows.push(new __WEBPACK_IMPORTED_MODULE_0__row__["a" /* Row */](index, el, _this));
        });
    };
    return DataSet;
}());



/***/ }),

/***/ 1222:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return LocalFilter; });
var LocalFilter = (function () {
    function LocalFilter() {
    }
    LocalFilter.filter = function (data, field, search, customFilter) {
        var filter = customFilter ? customFilter : this.FILTER;
        return data.filter(function (el) {
            var value = typeof el[field] === 'undefined' || el[field] === null ? '' : el[field];
            return filter.call(null, value, search);
        });
    };
    return LocalFilter;
}());

LocalFilter.FILTER = function (value, search) {
    return value.toString().toLowerCase().includes(search.toString().toLowerCase());
};


/***/ }),

/***/ 1223:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return LocalPager; });
var LocalPager = (function () {
    function LocalPager() {
    }
    LocalPager.paginate = function (data, page, perPage) {
        return data.slice(perPage * (page - 1), perPage * page);
    };
    return LocalPager;
}());



/***/ }),

/***/ 1224:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return LocalSorter; });
var LocalSorter = (function () {
    function LocalSorter() {
    }
    LocalSorter.sort = function (data, field, direction, customCompare) {
        var dir = (direction === 'asc') ? 1 : -1;
        var compare = customCompare ? customCompare : this.COMPARE;
        return data.sort(function (a, b) {
            return compare.call(null, dir, a[field], b[field]);
        });
    };
    return LocalSorter;
}());

LocalSorter.COMPARE = function (direction, a, b) {
    if (a < b) {
        return -1 * direction;
    }
    if (a > b) {
        return direction;
    }
    return 0;
};


/***/ }),

/***/ 1226:
/***/ (function(module, exports) {

module.exports = "/deep/ .ng2-smart-filter input, /deep/ .ng2-smart-filter select {\n  width: 100%;\n  line-height: normal;\n  padding: 0.3rem 0.5rem;\n  font-weight: normal; }\n\n/deep/ .ng2-smart-filter input[type=\"search\"] {\n  box-sizing: inherit; }\n\n/deep/ .ng2-smart-filter .completer-dropdown-holder {\n  font-weight: normal; }\n\n/deep/ .ng2-smart-filter a {\n  font-weight: normal; }\n"

/***/ }),

/***/ 1227:
/***/ (function(module, exports) {

module.exports = ".ng2-smart-pagination {\n  display: inline-block;\n  font-size: .875rem;\n  padding: 0; }\n  .ng2-smart-pagination .sr-only {\n    position: absolute;\n    width: 1px;\n    height: 1px;\n    padding: 0;\n    margin: -1px;\n    overflow: hidden;\n    clip: rect(0, 0, 0, 0);\n    border: 0; }\n  .ng2-smart-pagination .ng2-smart-page-item {\n    display: inline; }\n"

/***/ }),

/***/ 1228:
/***/ (function(module, exports) {

module.exports = "a.sort.asc, a.sort.desc {\n  font-weight: bold; }\n  a.sort.asc::after, a.sort.desc::after {\n    content: '';\n    display: inline-block;\n    width: 0;\n    height: 0;\n    border-bottom: 4px solid rgba(0, 0, 0, 0.3);\n    border-top: 4px solid transparent;\n    border-left: 4px solid transparent;\n    border-right: 4px solid transparent;\n    margin-bottom: 2px; }\n\na.sort.desc::after {\n  transform: rotate(-180deg);\n  margin-bottom: -2px; }\n"

/***/ }),

/***/ 1229:
/***/ (function(module, exports) {

module.exports = "/deep/ table.ng2-smart-table {\n  font-family: \"Open Sans\", \"Helvetica Neue\", Helvetica, Arial, sans-serif;\n  font-size: 16px;\n  line-height: 1.5;\n  color: #606c71;\n  border-collapse: collapse;\n  border-spacing: 0;\n  display: table;\n  width: 100%;\n  max-width: 100%;\n  overflow: auto;\n  word-break: normal;\n  word-break: keep-all; }\n  /deep/ table.ng2-smart-table td, /deep/ table.ng2-smart-table th {\n    font-size: .875rem;\n    margin: 0;\n    padding: 0.5rem 1rem;\n    border: 1px solid #e9ebec; }\n  /deep/ table.ng2-smart-table .ng2-smart-row.selected {\n    background: rgba(0, 0, 0, 0.05); }\n  /deep/ table.ng2-smart-table .ng2-smart-row .ng2-smart-actions.ng2-smart-action-multiple-select {\n    text-align: center; }\n"

/***/ }),

/***/ 1230:
/***/ (function(module, exports) {

module.exports = "<div [ngSwitch]=\"getEditorType()\">\r\n    <select-editor *ngSwitchCase=\"'list'\"\r\n                   [cell]=\"cell\"\r\n                   [inputClass]=\"inputClass\"\r\n                   (onClick)=\"onClick($event)\"\r\n                   (onEdited)=\"onEdited($event)\"\r\n                   (onStopEditing)=\"onStopEditing()\">\r\n    </select-editor>\r\n\r\n    <textarea-editor *ngSwitchCase=\"'textarea'\"\r\n                     [cell]=\"cell\"\r\n                     [inputClass]=\"inputClass\"\r\n                     (onClick)=\"onClick($event)\"\r\n                     (onEdited)=\"onEdited($event)\"\r\n                     (onStopEditing)=\"onStopEditing()\">\r\n    </textarea-editor>\r\n\r\n    <checkbox-editor *ngSwitchCase=\"'checkbox'\"\r\n                     [cell]=\"cell\"\r\n                     [inputClass]=\"inputClass\"\r\n                     (onClick)=\"onClick($event)\">\r\n    </checkbox-editor>\r\n\r\n    <completer-editor *ngSwitchCase=\"'completer'\"\r\n                      [cell]=\"cell\">\r\n    </completer-editor>\r\n\r\n    <input-editor *ngSwitchDefault\r\n                  [cell]=\"cell\"\r\n                  [inputClass]=\"inputClass\"\r\n                  (onClick)=\"onClick($event)\"\r\n                  (onEdited)=\"onEdited($event)\"\r\n                  (onStopEditing)=\"onStopEditing()\">\r\n    </input-editor>\r\n</div>"

/***/ }),

/***/ 1231:
/***/ (function(module, exports) {

module.exports = "<tr *ngFor=\"let row of grid.getRows()\" (click)=\"userSelectRow.emit(row)\" class=\"ng2-smart-row\" [ngClass]=\"{selected: row.isSelected}\">\r\n  <td *ngIf=\"grid.isMultiSelectVisible()\" class=\"ng2-smart-actions ng2-smart-action-multiple-select\" (click)=\"multipleSelectRow.emit(row)\">\r\n    <input type=\"checkbox\" class=\"form-control\" [ngModel]=\"row.isSelected\">\r\n  </td>\r\n  <td *ngIf=\"!row.isInEditing && grid.showActionColumn('left')\" class=\"ng2-smart-actions\" style=\"width: 120px;\">\r\n    <ng2-st-tbody-edit-delete [grid]=\"grid\"\r\n                              [deleteConfirm]=\"deleteConfirm\"\r\n                              [editConfirm]=\"editConfirm\"\r\n                              [viewConfirm]=\"viewConfirm\"\r\n                              (edit)=\"edit.emit(row)\"\r\n                              (view)=\"view.emit(row)\"\r\n                              (delete)=\"delete.emit(row)\"\r\n                              (editRowSelect)=\"editRowSelect.emit($event)\"\r\n                              (viewRowSelect)=\"viewRowSelect.emit($event)\"\r\n                              [row]=\"row\"\r\n                              [source]=\"source\">\r\n    </ng2-st-tbody-edit-delete>\r\n  </td>\r\n  <td *ngIf=\"row.isInEditing\" class=\"ng2-smart-actions\">\r\n    <ng2-st-tbody-create-cancel [grid]=\"grid\" [row]=\"row\" [editConfirm]=\"editConfirm\"></ng2-st-tbody-create-cancel>\r\n  </td>\r\n  <td *ngFor=\"let cell of row.getCells()\">\r\n    <ng2-smart-table-cell [cell]=\"cell\"\r\n                          [grid]=\"grid\"\r\n                          [row]=\"row\"\r\n                          [isNew]=\"false\"\r\n                          [mode]=\"grid.getSetting('mode')\"\r\n                          [editConfirm]=\"editConfirm\"\r\n                          [inputClass]=\"grid.getSetting('edit.inputClass')\"\r\n                          [isInEditing]=\"row.isInEditing\">\r\n    </ng2-smart-table-cell>\r\n  </td>\r\n  \r\n  <td *ngIf=\"!row.isInEditing && grid.showActionColumn('right')\" class=\"ng2-smart-actions\">\r\n    <ng2-st-tbody-edit-delete [grid]=\"grid\"\r\n                              [deleteConfirm]=\"deleteConfirm\"\r\n                              [editConfirm]=\"editConfirm\"\r\n                              [row]=\"row\"\r\n                              [source]=\"source\"\r\n                              (edit)=\"edit.emit(row)\"\r\n                              (delete)=\"delete.emit(row)\"\r\n                              (editRowSelect)=\"editRowSelect.emit($event)\">\r\n    </ng2-st-tbody-edit-delete>\r\n  </td>\r\n  </tr>\r\n\r\n  <tr *ngIf=\"grid.getRows().length == 0\">\r\n  <td [attr.colspan]=\"grid.getColumns().length + (grid.getSetting('actions.add') || grid.getSetting('actions.edit') || grid.getSetting('actions.delete'))\">\r\n    {{ grid.getSetting('noDataMessage') }}\r\n  </td>\r\n</tr>"

/***/ }),

/***/ 1232:
/***/ (function(module, exports) {

module.exports = "<tr ng2-st-thead-titles-row *ngIf=\"!grid.getSetting('hideHeader')\"\r\n                            class=\"ng2-smart-titles\"\r\n                            [grid]=\"grid\"\r\n                            [isAllSelected]=\"isAllSelected\"\r\n                            [source]=\"source\"\r\n                            (sort)=\"sort.emit($event)\"\r\n                            (selectAllRows)=\"selectAllRows.emit($event)\">\r\n</tr>\r\n\r\n<tr ng2-st-thead-filters-row *ngIf=\"!grid.getSetting('hideSubHeader')\"\r\n                              class=\"ng2-smart-filters\"\r\n                              [grid]=\"grid\"\r\n                              [source]=\"source\"\r\n                              (create)=\"create.emit($event)\"\r\n                              (filter)=\"filter.emit($event)\">\r\n</tr>\r\n<tr ng2-st-thead-form-row *ngIf=\"grid.createFormShown\"\r\n                          [grid]=\"grid\"\r\n                          [createConfirm]=\"createConfirm\">\r\n</tr>"

/***/ }),

/***/ 1233:
/***/ (function(module, exports) {

module.exports = "<div class=\"ng2-smart-table-container\">\r\n  <table class=\"ng2-smart-table table\" [id]=\"grid.getSetting('attr.id')\" [ngClass]=\"grid.getSetting('attr.class')\">\r\n\r\n    <thead ng2-st-thead *ngIf=\"!grid.getSetting('hideHeader') || !grid.getSetting('hideSubHeader')\"\r\n                        [grid]=\"grid\"\r\n                        [isAllSelected]=\"isAllSelected\"\r\n                        [source]=\"source\"\r\n                        [createConfirm]=\"createConfirm\"\r\n                        (create)=\"create.emit($event)\"\r\n                        (selectAllRows)=\"onSelectAllRows($event)\"\r\n                        (sort)=\"sort($event)\"\r\n                        (filter)=\"filter($event)\">\r\n    </thead>\r\n\r\n    <tbody ng2-st-tbody [grid]=\"grid\"\r\n                        [source]=\"source\"\r\n                        [deleteConfirm]=\"deleteConfirm\"\r\n                        [editConfirm]=\"editConfirm\"\r\n                        [viewConfirm]=\"viewConfirm\"\r\n                        (edit)=\"edit.emit($event)\"\r\n                        (view)=\"view.emit($event)\"\r\n                        (delete)=\"delete.emit($event)\"\r\n                        (userSelectRow)=\"onUserSelectRow($event)\"\r\n                        (editRowSelect)=\"editRowSelect($event)\"\r\n                        (viewRowSelect)=\"viewRowSelect($event)\"\r\n                        (multipleSelectRow)=\"multipleSelectRow($event)\">\r\n    </tbody>\r\n\r\n  </table>\r\n\r\n  <ng2-smart-table-pager *ngIf=\"grid.getSetting('pager.display')\"\r\n                         [source]=\"source\"\r\n                         [perPage]=\"grid.getSetting('pager.perPage')\"\r\n                         (changePage)=\"changePage($event)\">\r\n  </ng2-smart-table-pager>\r\n</div>\r\n"

/***/ }),

/***/ 1236:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_material__ = __webpack_require__(16);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__angular_router__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_moment__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_moment___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_moment__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_rxjs_BehaviorSubject__ = __webpack_require__(30);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_rxjs_BehaviorSubject___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_rxjs_BehaviorSubject__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__common_popupLists_file_uploader_file_uploader_popup_component__ = __webpack_require__(121);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__common_popupLists_generic_grid_generic_popup_grid_component__ = __webpack_require__(35);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__common_services_alert_alert_service__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__common_services_spinner_spinner_service__ = __webpack_require__(20);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__common_Transaction_Components_transaction_service__ = __webpack_require__(7);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__common_repositories_masterRepo_service__ = __webpack_require__(8);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return AddPurchaseInvoiceComponent; });
//import { BehaviorSubject } from 'rxjs/BehaviorSubject';











var AddPurchaseInvoiceComponent = (function () {
    function AddPurchaseInvoiceComponent(masterService, _trnMainService, dialog, alertService, loadingSerive, route) {
        var _this = this;
        this.masterService = masterService;
        this._trnMainService = _trnMainService;
        this.dialog = dialog;
        this.alertService = alertService;
        this.loadingSerive = loadingSerive;
        this.route = route;
        this.fileUploadPopupSettings = new __WEBPACK_IMPORTED_MODULE_5__common_popupLists_file_uploader_file_uploader_popup_component__["a" /* FileUploaderPopUpSettings */]();
        this.gridHoSalesInvoicePopupSettings = new __WEBPACK_IMPORTED_MODULE_6__common_popupLists_generic_grid_generic_popup_grid_component__["b" /* GenericPopUpSettings */]();
        this.gridSAPPIPopupSettings = new __WEBPACK_IMPORTED_MODULE_6__common_popupLists_generic_grid_generic_popup_grid_component__["b" /* GenericPopUpSettings */]();
        this.prefix = {};
        this.dataArriveSubject = new __WEBPACK_IMPORTED_MODULE_4_rxjs_BehaviorSubject__["BehaviorSubject"](false);
        this.dataArrive$ = this.dataArriveSubject.asObservable();
        this._trnMainService.initialFormLoad(3);
        masterService.Currencies = [];
        masterService.getCurrencies();
        this.masterService.ShowMore == true;
        this.route.queryParams
            .subscribe(function (params) {
            if (params.from == "Ledger") {
                if (params.voucherNumber) {
                    var VCHR = params.voucherNumber;
                    var divphiscal = [];
                    divphiscal = VCHR.split('-');
                    _this.loadingSerive.show("Loading Invoice");
                    _this.masterService.LoadTransaction(VCHR, divphiscal[1], divphiscal[2]).subscribe(function (res) {
                        if (res.status == "ok") {
                            _this.loadingSerive.hide();
                            _this._trnMainService.TrnMainObj = res.result;
                            _this._trnMainService.TrnMainObj.VoucherType = 3;
                            _this._trnMainService.pageHeading = "Purchase Invoice";
                            _this._trnMainService.TrnMainObj.VoucherPrefix = "PI";
                            _this._trnMainService.TrnMainObj.Mode = "VIEW";
                        }
                    }, function (err) {
                        _this.loadingSerive.hide();
                        _this.alertService.error(err);
                    });
                }
            }
        });
        this.gridHoSalesInvoicePopupSettings = {
            title: "Sales Invoices From Supplier",
            apiEndpoints: "/getAllHOTaxInvoicePagedList",
            defaultFilterIndex: 0,
            columns: [
                {
                    key: "CHALANNO",
                    title: "Bill No",
                    hidden: false,
                    noSearch: false
                },
                {
                    key: "TRNDATE",
                    title: "Date",
                    hidden: false,
                    noSearch: false
                },
                {
                    key: "NETAMNT",
                    title: "Amount",
                    hidden: false,
                    noSearch: false
                },
            ]
        };
        this.gridSAPPIPopupSettings = {
            title: "Purchase Invoice From SAP",
            apiEndpoints: "/getAllSAPPurchaseInvoicePagedList",
            defaultFilterIndex: 0,
            columns: [
                {
                    key: "VCHRNO",
                    title: "VOUCHER NO.",
                    hidden: false,
                    noSearch: false
                },
                {
                    key: "PLANTDESC",
                    title: "PLANT",
                    hidden: false,
                    noSearch: false
                },
                {
                    key: "INVDATE",
                    title: "INVOICE DATE",
                    hidden: false,
                    noSearch: false
                }
            ]
        };
    }
    AddPurchaseInvoiceComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.route.queryParams.subscribe(function (params) {
            if (params['mode'] == "DRILL") {
                var VCHR = params['voucher'];
                var vparams = [];
                vparams = VCHR.split('-');
                var pcl = params['pcl'];
                _this.masterService.PCL_VALUE = pcl;
                _this.loadingSerive.show("Loading Invoice");
                _this.masterService.LoadTransaction(VCHR, vparams[1], vparams[2]).subscribe(function (res) {
                    if (res.status == "ok") {
                        _this.loadingSerive.hide();
                        _this._trnMainService.TrnMainObj = res.result;
                        _this._trnMainService.TrnMainObj.VoucherType = 3;
                        _this._trnMainService.pageHeading = "Purchase Invoice";
                        _this._trnMainService.TrnMainObj.VoucherPrefix = "PI";
                        _this._trnMainService.TrnMainObj.Mode = "VIEW";
                        _this._trnMainService.TrnMainObj.TRNDATE = (_this._trnMainService.TrnMainObj.TRNDATE == null || _this._trnMainService.TrnMainObj.TRNDATE == "" || _this._trnMainService.TrnMainObj.TRNDATE === undefined) ? _this._trnMainService.TrnMainObj.TRNDATE : __WEBPACK_IMPORTED_MODULE_3_moment__(_this._trnMainService.TrnMainObj.TRNDATE).format("YYYY-MM-DD");
                        _this._trnMainService.TrnMainObj.TRN_DATE = (_this._trnMainService.TrnMainObj.TRN_DATE == null || _this._trnMainService.TrnMainObj.TRN_DATE == "" || _this._trnMainService.TrnMainObj.TRN_DATE === undefined) ? _this._trnMainService.TrnMainObj.TRN_DATE : __WEBPACK_IMPORTED_MODULE_3_moment__(_this._trnMainService.TrnMainObj.TRN_DATE).format("YYYY-MM-DD");
                        _this._trnMainService.TrnMainObj.TOTALQTY = 0;
                        _this._trnMainService.TrnMainObj.GROSSAMNT = 0;
                        _this._trnMainService.TrnMainObj.ProdList.forEach(function (x) {
                            // x.ALTERNATEQUANTIY == 0 ?x.ALTERNATEQUANTIY=x.AltQty:x.ALTERNATEQUANTIY,
                            _this._trnMainService.TrnMainObj.TOTALQTY += _this._trnMainService.nullToZeroConverter(x.ALTERNATEQUANTIY);
                            _this._trnMainService.TrnMainObj.GROSSAMNT += _this._trnMainService.nullToZeroConverter(x.AMOUNT);
                        });
                        _this._trnMainService.TrnMainObj.NETWITHOUTROUNDOFF = _this._trnMainService.TrnMainObj.NETWITHOUTROUNDOFF == 0 ? _this._trnMainService.TrnMainObj.NETAMNT : _this._trnMainService.TrnMainObj.NETWITHOUTROUNDOFF;
                        if (_this._trnMainService.TrnMainObj.AdditionalObj == null) {
                            _this._trnMainService.TrnMainObj.AdditionalObj = {};
                        }
                    }
                }, function (err) {
                    _this.loadingSerive.hide();
                    _this.alertService.error(err);
                });
            }
            else if (params['mode'] == "fromLatepost") {
                _this.loadingSerive.show("Loading Invoice");
                var pcl = params['pcl'];
                _this.masterService.PCL_VALUE = pcl;
                _this.masterService.LoadTransaction(params.voucher, params.DIVISION, params.PHISCALID).subscribe(function (res) {
                    if (res.status == "ok") {
                        _this.loadingSerive.hide();
                        _this._trnMainService.TrnMainObj = res.result;
                        _this._trnMainService.TrnMainObj.VoucherType = 3;
                        _this._trnMainService.pageHeading = "Purchase Invoice";
                        _this._trnMainService.TrnMainObj.VoucherPrefix = "PI";
                        _this._trnMainService.TrnMainObj.Mode = "VIEW";
                        _this._trnMainService.TrnMainObj.TRNDATE = (_this._trnMainService.TrnMainObj.TRNDATE == null || _this._trnMainService.TrnMainObj.TRNDATE == "" || _this._trnMainService.TrnMainObj.TRNDATE === undefined) ? _this._trnMainService.TrnMainObj.TRNDATE : __WEBPACK_IMPORTED_MODULE_3_moment__(_this._trnMainService.TrnMainObj.TRNDATE).format("YYYY-MM-DD");
                        _this._trnMainService.TrnMainObj.TRN_DATE = (_this._trnMainService.TrnMainObj.TRN_DATE == null || _this._trnMainService.TrnMainObj.TRN_DATE == "" || _this._trnMainService.TrnMainObj.TRN_DATE === undefined) ? _this._trnMainService.TrnMainObj.TRN_DATE : __WEBPACK_IMPORTED_MODULE_3_moment__(_this._trnMainService.TrnMainObj.TRN_DATE).format("YYYY-MM-DD");
                        if (_this._trnMainService.TrnMainObj.AdditionalObj == null) {
                            _this._trnMainService.TrnMainObj.AdditionalObj = {};
                        }
                    }
                }, function (err) {
                    _this.loadingSerive.hide();
                    _this.alertService.error(err);
                });
            }
            else {
                _this.masterService.refreshTransactionList();
                _this._trnMainService.TrnMainObj.TRNMODE = "credit";
                _this.masterService.getPurchaseAcList().subscribe(function (res) {
                    _this._trnMainService.PurchaseAcList.push(res);
                }, function (error) {
                    _this.masterService.resolveError(error, "trnmain-purchase-getPurchaseList");
                }, function () {
                    if (_this._trnMainService.AppSettings.MultiplePurchaseAccount == 0) {
                        _this._trnMainService.TrnMainObj.RETTO = _this._trnMainService.AppSettings.PurchaseAc;
                    }
                    // ////console.log("trnmainpurchaseac",this.TrnMainObj.RETTO,this.AppSettings.PurchaseAc);
                });
                _this.masterService.getCashList().subscribe(function (res) {
                    _this._trnMainService.CashList = res;
                }, function (error) {
                    _this.masterService.resolveError(error, "trnmain-purchase-getCashList");
                });
                _this.fileUploadPopupSettings = Object.assign(new __WEBPACK_IMPORTED_MODULE_5__common_popupLists_file_uploader_file_uploader_popup_component__["a" /* FileUploaderPopUpSettings */](), {
                    title: "Import Purchase Invoice",
                    sampleFileUrl: "/downloadSampleFile/" + _this._trnMainService.TrnMainObj.VoucherPrefix,
                    uploadEndpoints: "/importFileForTransaction/" + _this._trnMainService.TrnMainObj.VoucherPrefix,
                    allowMultiple: false,
                    acceptFormat: ".xlsx",
                });
            }
        });
    };
    AddPurchaseInvoiceComponent.prototype.showPurchaseInvoicePopup = function () {
        this.fileUploadPopup.show();
    };
    AddPurchaseInvoiceComponent.prototype.fileUploadSuccess = function (uploadResult) {
        if (uploadResult.status == 'ok') {
            ////console.log("purchase invoice"+JSON.stringify(uploadResult.result))
            //////console.log("purchase invoice"+JSON.stringify(uploadResult.result.prodList)) 
            this._trnMainService.initialFormLoad(3);
            this._trnMainService.TrnMainObj.ProdList = uploadResult.result;
            if (!this._trnMainService.TrnMainObj ||
                !this._trnMainService.TrnMainObj.ProdList ||
                this._trnMainService.TrnMainObj.ProdList == undefined)
                return;
            this._trnMainService.TrnMainObj.VoucherType = 3;
            this._trnMainService.TrnMainObj.VoucherPrefix = "PI";
            this._trnMainService.TrnMainObj.VoucherAbbName = "PI";
            this._trnMainService.getVoucherNumber();
            this._trnMainService.getCurrentDate();
            this._trnMainService.TrnMainObj.Mode = "NEW";
            // this._trnMainService.TrnMainObj.REFBILL = voucherNo;
            this._trnMainService.TrnMainObj.VCHRNO = "";
            this._trnMainService.TrnMainObj.CHALANNO = "";
            for (var i in this._trnMainService.TrnMainObj.ProdList) {
                //////console.log("ProdList Rate"+this._trnMainService.TrnMainObj.ProdList[i].RATE);
                this._trnMainService.setAltunitDropDownForView(i);
                ////console.log("ProdList Rate"+this._trnMainService.TrnMainObj.ProdList[i].RATE);
                // ////console.log("PurchaseInvoice",this._trnMainService.TrnMainObj.ProdList[i].RATE,this._trnMainService.TrnMainObj.ProdList[i].ALTRATE2,i, this._trnMainService.TrnMainObj.ProdList[i].ALTUNITObj);
                this._trnMainService.AssignSellingPriceAndDiscounts(this._trnMainService.TrnMainObj.ProdList[i].PClist, i, this._trnMainService.TrnMainObj.PARTY_ORG_TYPE);
                this._trnMainService.setunit(this._trnMainService.TrnMainObj.ProdList[i].RATE, this._trnMainService.TrnMainObj.ProdList[i].ALTRATE2, i, this._trnMainService.TrnMainObj.ProdList[i].ALTUNITObj);
                this._trnMainService.CalculateNormalNew(i);
                this._trnMainService.TrnMainObj.ProdList[i].MFGDATE = ((this._trnMainService.TrnMainObj.ProdList[i].MFGDATE == null) ? "" : this._trnMainService.TrnMainObj.ProdList[i].MFGDATE.toString().substring(0, 10));
                this._trnMainService.TrnMainObj.ProdList[i].EXPDATE = ((this._trnMainService.TrnMainObj.ProdList[i].EXPDATE == null) ? "" : this._trnMainService.TrnMainObj.ProdList[i].EXPDATE.toString().substring(0, 10));
            }
            this._trnMainService.ReCalculateBill();
        }
        else {
            this.loadingSerive.show("Error" + uploadResult.error);
        }
    };
    AddPurchaseInvoiceComponent.prototype.showSupplierSalesInvoiceFromHOPopup = function () {
        this.genericHOSalesInvoiceGridTI.show();
    };
    AddPurchaseInvoiceComponent.prototype.onHoSalesInvoiceSelect = function (item) {
        ////console.log("checkmmm",item);
        this.getSalesInvoiceFromSupplier(item.VCHRNO, item.FROMCOMPANYID);
    };
    AddPurchaseInvoiceComponent.prototype.getSalesInvoiceFromSupplier = function (voucherNo, FROMCOMPANYID) {
        var _this = this;
        this.loadingSerive.show("Getting Data. Please Wait...");
        this.masterService.loadSalesInvoiceFromSupplierHO(voucherNo, FROMCOMPANYID).subscribe(function (result) {
            _this.loadingSerive.hide();
            if (result.status == "ok") {
                _this._trnMainService.TrnMainObj = result.result; //Object.assign({}, this._trnMainService.TrnMainObj, result.result );
                if (!_this._trnMainService.TrnMainObj ||
                    !_this._trnMainService.TrnMainObj.ProdList ||
                    _this._trnMainService.TrnMainObj.ProdList == undefined)
                    return;
                _this._trnMainService.TrnMainObj.VoucherType = 3;
                _this._trnMainService.TrnMainObj.VoucherPrefix = "PI";
                _this._trnMainService.TrnMainObj.VoucherAbbName = "PI";
                _this._trnMainService.TrnMainObj.Mode = "NEW";
                _this._trnMainService.TrnMainObj.REFBILL = voucherNo;
                _this._trnMainService.TrnMainObj.VCHRNO = "";
                _this._trnMainService.TrnMainObj.CHALANNO = "";
                for (var i in _this._trnMainService.TrnMainObj.ProdList) {
                    _this._trnMainService.TrnMainObj.ProdList[i].inputMode = false;
                    _this._trnMainService.setAltunitDropDownForView(i);
                    _this._trnMainService.AssignSellingPriceAndDiscounts(_this._trnMainService.TrnMainObj.ProdList[i].PClist, i, _this._trnMainService.TrnMainObj.PARTY_ORG_TYPE);
                    _this._trnMainService.setunit(_this._trnMainService.TrnMainObj.ProdList[i].RATE, _this._trnMainService.TrnMainObj.ProdList[i].SPRICE, i, _this._trnMainService.TrnMainObj.ProdList[i].ALTUNITObj);
                    _this._trnMainService.CalculateNormalNew(i);
                    _this._trnMainService.TrnMainObj.ProdList[i].MFGDATE = ((_this._trnMainService.TrnMainObj.ProdList[i].MFGDATE == null) ? "" : _this._trnMainService.TrnMainObj.ProdList[i].MFGDATE.toString().substring(0, 10));
                    _this._trnMainService.TrnMainObj.ProdList[i].EXPDATE = ((_this._trnMainService.TrnMainObj.ProdList[i].EXPDATE == null) ? "" : _this._trnMainService.TrnMainObj.ProdList[i].EXPDATE.toString().substring(0, 10));
                }
                _this._trnMainService.ReCalculateBill();
                _this._trnMainService.getVoucherNumber();
                _this._trnMainService.getCurrentDate();
            }
        }, function (error) {
            _this.loadingSerive.hide();
        });
    };
    AddPurchaseInvoiceComponent.prototype.showSAPPurchaseInvoice = function () {
        this.genericsGridSAPPI.show();
    };
    AddPurchaseInvoiceComponent.prototype.onSAPPurchaseInvoiceSelect = function (item) {
        this.loadSAPPurchaseInvoice(item.VCHRNO);
    };
    AddPurchaseInvoiceComponent.prototype.loadSAPPurchaseInvoice = function (voucherNo) {
        var _this = this;
        this.loadingSerive.show("Getting Data. Please Wait...");
        this.masterService.loadSAPPurchaseInvoiceDetail(voucherNo).subscribe(function (result) {
            _this.loadingSerive.hide();
            if (result.status == "ok") {
                _this._trnMainService.TrnMainObj = result.result; //Object.assign({}, this._trnMainService.TrnMainObj, result.result );
                if (!_this._trnMainService.TrnMainObj ||
                    !_this._trnMainService.TrnMainObj.ProdList ||
                    _this._trnMainService.TrnMainObj.ProdList == undefined)
                    return;
                _this._trnMainService.TrnMainObj.VoucherType = 3;
                _this._trnMainService.TrnMainObj.VoucherPrefix = "PI";
                _this._trnMainService.TrnMainObj.VoucherAbbName = "PI";
                _this._trnMainService.TrnMainObj.Mode = "NEW";
                _this._trnMainService.TrnMainObj.REFBILL = voucherNo;
                _this._trnMainService.TrnMainObj.VCHRNO = "";
                _this._trnMainService.TrnMainObj.CHALANNO = "";
                _this._trnMainService.TrnMainObj.tag = "FTP";
                for (var i in _this._trnMainService.TrnMainObj.ProdList) {
                    _this._trnMainService.TrnMainObj.ProdList[i].inputMode = false;
                    _this._trnMainService.setAltunitDropDownForView(i);
                    _this._trnMainService.AssignSellingPriceAndDiscounts(_this._trnMainService.TrnMainObj.ProdList[i].PClist, i, _this._trnMainService.TrnMainObj.PARTY_ORG_TYPE);
                    _this._trnMainService.setunit(_this._trnMainService.TrnMainObj.ProdList[i].RATE, _this._trnMainService.TrnMainObj.ProdList[i].SPRICE, i, _this._trnMainService.TrnMainObj.ProdList[i].ALTUNITObj);
                    _this._trnMainService.CalculateNormalNew(i);
                    _this._trnMainService.TrnMainObj.ProdList[i].MFGDATE = ((_this._trnMainService.TrnMainObj.ProdList[i].MFGDATE == null) ? "" : _this._trnMainService.TrnMainObj.ProdList[i].MFGDATE.toString().substring(0, 10));
                    _this._trnMainService.TrnMainObj.ProdList[i].EXPDATE = ((_this._trnMainService.TrnMainObj.ProdList[i].EXPDATE == null) ? "" : _this._trnMainService.TrnMainObj.ProdList[i].EXPDATE.toString().substring(0, 10));
                    // this._trnMainService.setAltunitDropDownForView(i);
                    // this._trnMainService.getPricingOfItem(i, "", false);
                    // this._trnMainService.TrnMainObj.ProdList[i].inputMode = false;
                    // this._trnMainService.TrnMainObj.ProdList[i].VoucherType = 3;
                    // this._trnMainService.TrnMainObj.ProdList[i].MFGDATE =
                    //   this._trnMainService.TrnMainObj.ProdList[i].MFGDATE == null
                    //     ? ""
                    //     : this._trnMainService.TrnMainObj.ProdList[
                    //         i
                    //       ].MFGDATE.toString().substring(0, 10);
                    // this._trnMainService.TrnMainObj.ProdList[i].EXPDATE =
                    //   this._trnMainService.TrnMainObj.ProdList[i].EXPDATE == null
                    //     ? ""
                    //     : this._trnMainService.TrnMainObj.ProdList[
                    //         i
                    //       ].EXPDATE.toString().substring(0, 10);
                }
                //   var ZeroStockedProduct = this._trnMainService.TrnMainObj.ProdList.filter(
                //     x => x.SELECTEDITEM.STOCK <= 0
                //   );
                //   this._trnMainService.TrnMainObj.ProdList = this._trnMainService.TrnMainObj.ProdList.filter(
                //     x => x.SELECTEDITEM.STOCK > 0
                //   );
                _this._trnMainService.ReCalculateBill();
                _this._trnMainService.getVoucherNumber();
                _this._trnMainService.getCurrentDate();
            }
            else {
                _this.loadingSerive.hide();
                _this.alertService.error(result.result._body);
            }
        }, function (error) {
            _this.loadingSerive.hide();
        });
    };
    AddPurchaseInvoiceComponent.prototype.saveTaxInvoice = function () {
        var _this = this;
        this._trnMainService.TrnMainObj.Mode = 'NEW';
        this._trnMainService.TrnMainObj.tag = "shipto";
        this.alertService.show();
        this.masterService.saveTransaction(this._trnMainService.TrnMainObj.Mode, this._trnMainService.TrnMainObj)
            .subscribe(function (data) {
            if (data.status == "ok") {
                _this.alertService.hide();
                _this.popupClose();
            }
        }, function (error) {
            _this.alertService.error(error);
        });
    };
    AddPurchaseInvoiceComponent.prototype.popupClose = function () {
        this._trnMainService.initialFormLoad(3);
    };
    return AddPurchaseInvoiceComponent;
}());
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])("genericHOSalesInvoiceGridTI"),
    __metadata("design:type", __WEBPACK_IMPORTED_MODULE_6__common_popupLists_generic_grid_generic_popup_grid_component__["c" /* GenericPopUpComponent */])
], AddPurchaseInvoiceComponent.prototype, "genericHOSalesInvoiceGridTI", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])("genericsGridSAPPI"),
    __metadata("design:type", __WEBPACK_IMPORTED_MODULE_6__common_popupLists_generic_grid_generic_popup_grid_component__["c" /* GenericPopUpComponent */])
], AddPurchaseInvoiceComponent.prototype, "genericsGridSAPPI", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])("fileUploadPopup"),
    __metadata("design:type", __WEBPACK_IMPORTED_MODULE_5__common_popupLists_file_uploader_file_uploader_popup_component__["b" /* FileUploaderPopupComponent */])
], AddPurchaseInvoiceComponent.prototype, "fileUploadPopup", void 0);
AddPurchaseInvoiceComponent = __decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
        selector: 'addpurchaseinvoice',
        template: __webpack_require__(1347),
        providers: [__WEBPACK_IMPORTED_MODULE_9__common_Transaction_Components_transaction_service__["a" /* TransactionService */]],
        styles: [
            "\n      .GRNPopUp tbody tr:hover {\n        background-color: #e0e0e0;\n      }\n      .GRNPopUp tr.active td {\n        background-color: #123456 !important;\n        color: white;\n      }\n      .modal-dialog.modal-md {\n        top: 45%;\n        margin-top: 0px;\n      }\n\n      .modal-dialog.modal-sm {\n        top: 45%;\n        margin-top: 0px;\n      }\n    "
        ]
    }),
    __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_10__common_repositories_masterRepo_service__["a" /* MasterRepo */],
        __WEBPACK_IMPORTED_MODULE_9__common_Transaction_Components_transaction_service__["a" /* TransactionService */],
        __WEBPACK_IMPORTED_MODULE_1__angular_material__["a" /* MdDialog */],
        __WEBPACK_IMPORTED_MODULE_7__common_services_alert_alert_service__["a" /* AlertService */],
        __WEBPACK_IMPORTED_MODULE_8__common_services_spinner_spinner_service__["a" /* SpinnerService */],
        __WEBPACK_IMPORTED_MODULE_2__angular_router__["ActivatedRoute"]])
], AddPurchaseInvoiceComponent);



/***/ }),

/***/ 1237:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return BankReconciliation; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return Reconcile; });
var BankReconciliation = (function () {
    function BankReconciliation() {
    }
    return BankReconciliation;
}());

var Reconcile = (function () {
    function Reconcile() {
    }
    return Reconcile;
}());



/***/ }),

/***/ 1238:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return AccountVouchers; });

var AccountVouchers = (function () {
    function AccountVouchers() {
    }
    ;
    return AccountVouchers;
}());
AccountVouchers = __decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
        selector: 'accountvouchers',
        template: '<router-outlet></router-outlet>'
    }),
    __metadata("design:paramtypes", [])
], AccountVouchers);



/***/ }),

/***/ 1239:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__common_services_permission_authService_service__ = __webpack_require__(17);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__common_repositories_masterRepo_service__ = __webpack_require__(8);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__common_services_spinner_spinner_service__ = __webpack_require__(20);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__common_services_alert_alert_service__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__common_Transaction_Components_transaction_service__ = __webpack_require__(7);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__angular_forms__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_xlsx__ = __webpack_require__(563);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_xlsx___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_7_xlsx__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8_file_saver__ = __webpack_require__(561);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8_file_saver___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_8_file_saver__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__common_popupLists_generic_grid_generic_popup_grid_component__ = __webpack_require__(35);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return BulkPrintComponent; });










var EXCEL_EXTENSION = '.xlsx';
var EXCEL_TYPE = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8';
var BulkPrintComponent = (function () {
    function BulkPrintComponent(masterService, spinnerService, alertSerivces, _transactionService, fb, authService, _authService) {
        this.masterService = masterService;
        this.spinnerService = spinnerService;
        this.alertSerivces = alertSerivces;
        this._transactionService = _transactionService;
        this.fb = fb;
        this.authService = authService;
        this._authService = _authService;
        this.BulkVoucherPrintBodyList = [];
        // accoutingVouchersList =
        // [{name:"Journal Voucher"},{name:"Contra Voucher"},{name:"Payment Voucher"},{name:"Receipt Voucher"},{name:"Debit Note -AC Base"},{name:"Credit Note - AC Base"},{name:"Bill Tracking Amendment"},{name:"Additional Cost"},{name:"Capital Purchase Voucher"},{name:"Payment Collection"}];
        //
        this.userProfile = {};
        this.PhiscalObj = {};
        this.isLoader = true;
        this.currentPage = 1;
        this.itemsPerPage = 10;
        this.offset = 0;
        this.voucherPrefix = '';
        this.SelectAll = false;
        this.gridVoucherListPopupSettings = new __WEBPACK_IMPORTED_MODULE_9__common_popupLists_generic_grid_generic_popup_grid_component__["b" /* GenericPopUpSettings */]();
        this.userProfile = authService.getUserProfile();
        this.PhiscalObj = authService.getPhiscalInfo();
        this.userSetting = this._authService.getSetting();
    }
    BulkPrintComponent.prototype.ngOnInit = function () {
    };
    BulkPrintComponent.prototype.PrepareVoucherListForPrint = function (value) {
        var _this = this;
        if (value.IS_CHECKED) {
            //   let duplicate_vchrno = this.masterService.voucherListsForBulkPrint.find((voucher) => voucher.VCHRNO == value.VCHRNO);
            //  if(duplicate_vchrno){
            //   this.alertSerivces.info("Voucher Already Select.");
            //   setTimeout(() => {
            //       this.alertSerivces.hide();
            //   }, 3000);
            //  }else {
            //      this.masterService.voucherListsForBulkPrint.push(value);
            //      this.PrepareBodyDataForBulkPrint(value.VCHRNO);
            //  }
            this.PrepareBodyDataForBulkPrint(value.VCHRNO);
        }
        else if (!value.IS_CHECKED) {
            // this.masterService.voucherListsForBulkPrint.forEach((voucher,i) => {
            //     if(voucher.VCHRNO == value.VCHRNO){
            //         this.masterService.voucherListsForBulkPrint.splice(i,1);
            //     }
            // });
            this.BulkVoucherPrintBodyList.forEach(function (VBody, i) {
                if (VBody.Parameter.vchrno == value.VCHRNO) {
                    _this.BulkVoucherPrintBodyList.splice(i, 1);
                }
            });
        }
        this.checkSelectAll();
    };
    BulkPrintComponent.prototype.onPrintClicked = function () {
        var _this = this;
        if (this.BulkVoucherPrintBodyList.length == 0) {
            this.alertSerivces.info("No Voucher is Selected.");
            return;
        }
        this.spinnerService.show("Printing, Please Wait...");
        this.masterService.BulkVoucherPrint(this.BulkVoucherPrintBodyList).subscribe(function (res) {
            ////console.log("pdfresponse", res);
            var blobUrl = URL.createObjectURL(res.content);
            var iframe = document.createElement('iframe');
            iframe.style.display = 'none';
            iframe.src = blobUrl;
            document.body.appendChild(iframe);
            iframe.contentWindow.print();
            _this.spinnerService.hide();
        }, function (error) {
            _this.spinnerService.hide();
            _this.alertSerivces.info("Issue in print file.");
        });
    };
    BulkPrintComponent.prototype.PrepareBodyDataForBulkPrint = function (VCHRNO) {
        var _this = this;
        var vat = this.userProfile.CompanyInfo.VAT;
        var VATresult = vat.split("");
        var voucherprefix = this.voucherPrefix;
        this.masterService.getPrintFileName(voucherprefix).subscribe(function (res) {
            if (res.status == "ok") {
                _this.filename = res.result ? res.result[0].FileName : '';
                _this.rownumber = res.result ? res.result[0].RowsNumber : 0;
                _this.masterService.getNumberToWords(VCHRNO, _this.userProfile.CompanyInfo.INITIAL, _this.masterService.PhiscalObj.PhiscalID, _this.userProfile.CompanyInfo.COMPANYID, '').subscribe(function (res) {
                    if (res.status == "ok") {
                        _this.numtowords = res.result ? res.result[0].NUMTOWORDS : '';
                        var userdivision = _this.userProfile.userDivision ? _this.userProfile.userDivision : _this.userProfile.CompanyInfo.INITIAL;
                        var ADDRESS_1 = _this.userProfile.CompanyInfo.ADDRESS;
                        var BRANCHNAME_1 = _this.userProfile.CompanyInfo.INITIAL;
                        _this.masterService.getDetailsByUserDivision(userdivision).subscribe(function (res) {
                            if (res.status == "ok") {
                                if (res.result && res.result.length > 0 && res.result[0] && res.result[0].COMADD) {
                                    ADDRESS_1 = res.result[0].COMADD;
                                }
                                if (ADDRESS_1 === null || ADDRESS_1 === undefined || ADDRESS_1 === '') {
                                    ADDRESS_1 = _this.userProfile.CompanyInfo.ADDRESS;
                                }
                                if (res.result && res.result.length > 0 && res.result[0] && res.result[0].BRANCHNAME) {
                                    BRANCHNAME_1 = res.result[0].BRANCHNAME;
                                }
                                if (BRANCHNAME_1 === null || BRANCHNAME_1 === undefined || BRANCHNAME_1 === '') {
                                    BRANCHNAME_1 = _this.userProfile.CompanyInfo.INITIAL;
                                }
                                var pdfPrintFormatParameters = {};
                                pdfPrintFormatParameters.filename = _this.filename;
                                pdfPrintFormatParameters.rownumber = _this.rownumber;
                                pdfPrintFormatParameters.VCHRNO = VCHRNO;
                                pdfPrintFormatParameters.NAME = _this.userProfile.CompanyInfo.NAME;
                                pdfPrintFormatParameters.ADDRESS = ADDRESS_1 ? ADDRESS_1 : ' ';
                                pdfPrintFormatParameters.INITIAL = _this.userProfile.CompanyInfo.INITIAL;
                                pdfPrintFormatParameters.PhiscalID = _this.userProfile.CompanyInfo.PhiscalID,
                                    pdfPrintFormatParameters.COMPANYID = _this.userProfile.CompanyInfo.COMPANYID;
                                pdfPrintFormatParameters.phone1 = _this.userProfile.CompanyInfo.TELA ? _this.userProfile.CompanyInfo.TELA : ' ';
                                pdfPrintFormatParameters.phone2 = _this.userProfile.CompanyInfo.TELB ? _this.userProfile.CompanyInfo.TELB : ' ';
                                pdfPrintFormatParameters.EMAIL = _this.userProfile.CompanyInfo.EMAIL ? _this.userProfile.CompanyInfo.EMAIL : ' ';
                                pdfPrintFormatParameters.numtowords = _this.numtowords ? _this.numtowords : ' ';
                                pdfPrintFormatParameters.panno1 = VATresult[0] ? VATresult[0] : ' ';
                                pdfPrintFormatParameters.panno2 = VATresult[1] ? VATresult[1] : ' ';
                                pdfPrintFormatParameters.panno3 = VATresult[2] ? VATresult[2] : ' ';
                                pdfPrintFormatParameters.panno4 = VATresult[3] ? VATresult[3] : ' ';
                                pdfPrintFormatParameters.panno5 = VATresult[4] ? VATresult[4] : ' ';
                                pdfPrintFormatParameters.panno6 = VATresult[5] ? VATresult[5] : ' ';
                                pdfPrintFormatParameters.panno7 = VATresult[6] ? VATresult[6] : ' ';
                                pdfPrintFormatParameters.panno8 = VATresult[7] ? VATresult[7] : ' ';
                                pdfPrintFormatParameters.panno9 = VATresult[8] ? VATresult[8] : ' ';
                                pdfPrintFormatParameters.VoucherPrefix = _this.voucherPrefix;
                                pdfPrintFormatParameters.PRINTBY = _this.userProfile.username ? _this.userProfile.username : ' ';
                                pdfPrintFormatParameters.COMPANYVAT = vat ? vat : _this.userProfile.CompanyInfo.VAT;
                                pdfPrintFormatParameters.BRANCHNAME = BRANCHNAME_1 ? BRANCHNAME_1 : ' ';
                                var bodyData = {
                                    "filename": pdfPrintFormatParameters.filename,
                                    "Parameter": {
                                        "vchrno": pdfPrintFormatParameters.VCHRNO, "voucherno": pdfPrintFormatParameters.VCHRNO, "rowsnumber": pdfPrintFormatParameters.rownumber,
                                        "companyname": pdfPrintFormatParameters.NAME, "companyaddress": pdfPrintFormatParameters.ADDRESS,
                                        "division": pdfPrintFormatParameters.INITIAL, "phiscalid": pdfPrintFormatParameters.PhiscalID, "companyid": pdfPrintFormatParameters.COMPANYID, "numtowords": pdfPrintFormatParameters.numtowords,
                                        "p1": pdfPrintFormatParameters.panno1, "p2": pdfPrintFormatParameters.panno2, "p3": pdfPrintFormatParameters.panno3, "p4": pdfPrintFormatParameters.panno4, "p5": pdfPrintFormatParameters.panno5, "p6": pdfPrintFormatParameters.panno6, "p7": pdfPrintFormatParameters.panno7, "p8": pdfPrintFormatParameters.panno8, "p9": pdfPrintFormatParameters.panno9,
                                        "branchname": pdfPrintFormatParameters.BRANCHNAME,
                                        "phone1": pdfPrintFormatParameters.phone1, "phone2": pdfPrintFormatParameters.phone2, "email": pdfPrintFormatParameters.EMAIL,
                                        "PRINTBY": pdfPrintFormatParameters.PRINTBY, "companyemail": pdfPrintFormatParameters.EMAIL, "companyvat": pdfPrintFormatParameters.COMPANYVAT
                                    }
                                };
                                _this.BulkVoucherPrintBodyList.push(bodyData);
                            }
                        });
                    }
                });
            }
        });
    };
    BulkPrintComponent.prototype.onSelectAllClicked = function () {
        var _this = this;
        if (this.SelectAll) {
            this.masterService.voucherListsForBulkPrint.forEach(function (x) {
                if (x.IS_CHECKED) {
                    return;
                }
                else {
                    x.IS_CHECKED = true;
                    _this.PrepareVoucherListForPrint(x);
                }
            });
        }
        else if (!this.SelectAll) {
            this.masterService.voucherListsForBulkPrint.forEach(function (x) {
                x.IS_CHECKED = false;
                _this.PrepareVoucherListForPrint(x);
            });
        }
    };
    BulkPrintComponent.prototype.checkSelectAll = function () {
        var unSelected = this.masterService.voucherListsForBulkPrint.filter(function (x) { return x.IS_CHECKED == false; });
        if (unSelected && unSelected.length > 0) {
            this.SelectAll = false;
        }
        else {
            this.SelectAll = true;
        }
    };
    BulkPrintComponent.prototype.onLoadVoucherList = function (VType) {
        var PID = this.PhiscalObj.PhiscalID;
        PID = PID.replace("/", "ZZ");
        var division = this.PhiscalObj.Div;
        if (VType == 'JV') {
            this.gridVoucherListPopupSettings = {
                title: "Journal Vouchers",
                apiEndpoints: "/getMasterPagedListOfAny/" + PID + "/" + VType + "/" + division,
                defaultFilterIndex: 1,
                columns: Object.assign([{
                        key: 'TRNDATE',
                        title: 'DATE',
                        hidden: false,
                        noSearch: false,
                        alignment: 'left',
                    },
                    {
                        key: 'VCHRNO',
                        title: 'VOUCHER NO.',
                        hidden: false,
                        noSearch: false,
                        alignment: 'left',
                    },
                    {
                        key: 'NETAMNT',
                        title: 'AMOUNT',
                        hidden: false,
                        noSearch: false,
                        alignment: 'right',
                    },
                    {
                        key: 'PREFIXREMOVECHALANNO',
                        title: 'REF NO',
                        hidden: false,
                        noSearch: false,
                        alignment: 'left',
                    },
                ])
            };
            this.genericGridVoucherList.show('', false, 'journal', true);
        }
        else if (VType == 'CV') {
            this.gridVoucherListPopupSettings = {
                title: "Contra Vouchers",
                apiEndpoints: "/getTrnMainPagedList/" + VType + "/" + PID,
                defaultFilterIndex: 1,
                columns: Object.assign([{
                        key: 'TRNDATE',
                        title: 'DATE',
                        hidden: false,
                        noSearch: false,
                        alignment: 'left',
                    },
                    {
                        key: 'VCHRNO',
                        title: 'VOUCHER NO.',
                        hidden: false,
                        noSearch: false,
                        alignment: 'left',
                    },
                    {
                        key: 'NETAMNT',
                        title: 'AMOUNT',
                        hidden: false,
                        noSearch: false,
                        alignment: 'right',
                    },
                ])
            };
            this.genericGridVoucherList.show('', false, '', true);
        }
        else if (VType == 'PV') {
            this.gridVoucherListPopupSettings = {
                title: "Payment Vouchers",
                apiEndpoints: "/getTrnMainPagedList/" + VType + "/" + PID,
                defaultFilterIndex: 1,
                columns: Object.assign([{
                        key: 'TRNDATE',
                        title: 'DATE',
                        hidden: false,
                        noSearch: false,
                        alignment: 'left',
                    },
                    {
                        key: 'VCHRNO',
                        title: 'VOUCHER NO.',
                        hidden: false,
                        noSearch: false,
                        alignment: 'left',
                    },
                    {
                        key: 'NETAMNT',
                        title: 'AMOUNT',
                        hidden: false,
                        noSearch: false,
                        alignment: 'right',
                    },
                ])
            };
            this.genericGridVoucherList.show('', false, '', true);
        }
        else if (VType == 'RV') {
            this.gridVoucherListPopupSettings = {
                title: "Receipt Vouchers",
                apiEndpoints: "/getTrnMainPagedList/" + VType + "/" + PID,
                defaultFilterIndex: 1,
                columns: Object.assign([{
                        key: 'TRNDATE',
                        title: 'DATE',
                        hidden: false,
                        noSearch: false,
                        alignment: 'left',
                    },
                    {
                        key: 'VCHRNO',
                        title: 'VOUCHER NO.',
                        hidden: false,
                        noSearch: false,
                        alignment: 'left',
                    },
                    {
                        key: 'NETAMNT',
                        title: 'AMOUNT',
                        hidden: false,
                        noSearch: false,
                        alignment: 'right',
                    },
                ])
            };
            this.genericGridVoucherList.show('', false, '', true);
        }
    };
    BulkPrintComponent.prototype.LoadVoucherWiseList = function (VType) {
        var _this = this;
        if (this.FROM == null || this.FROM <= 0 || this.TO == null || this.TO <= 0 || this.TO < this.FROM) {
            this.alertSerivces.info("Please Enter Valid Range.");
            return;
        }
        this.masterService.voucherListsForBulkPrint = [];
        this.BulkVoucherPrintBodyList = [];
        var PID = this.PhiscalObj.PhiscalID;
        PID = PID.replace("/", "ZZ");
        var division = this.PhiscalObj.Div;
        this.spinnerService.show("Loading Data...");
        this.masterService.getBulkVoucherList(VType, PID, division, this.FROM, this.TO).subscribe(function (res) {
            if (res.result.length > 0) {
                _this.masterService.voucherListsForBulkPrint = res.result;
                _this.masterService.voucherListsForBulkPrint.forEach(function (x) {
                    x.IS_CHECKED = false;
                });
                _this.checkSelectAll();
                _this.spinnerService.hide();
            }
            else {
                _this.alertSerivces.info("No Voucher found within the given range.");
                _this.spinnerService.hide();
            }
        }, function (error) {
            _this.alertSerivces.error(error._body);
            _this.spinnerService.hide();
        });
    };
    /**
     * to export renumbering voucher to excel
     */
    BulkPrintComponent.prototype.exportTOExcel = function (dataList, excelFileName) {
        var newArray = [];
        dataList.forEach(function (data) {
            newArray.push({
                OLD_VOUCHERNO: data.old_vchrno,
                NEW_VOUCHERNO: data.new_vchrno,
                ENTRY_DATE: data.TRNDATE,
                ENTRY_DATEBS: data.BSDATE,
                NETAMNT: data.NETAMNT,
                TRNMODE: data.TRNMODE,
                FISCALYEAR: data.PhiscalID
            });
        });
        var exportArray = Object.assign([], newArray);
        var ws = __WEBPACK_IMPORTED_MODULE_7_xlsx__["utils"].json_to_sheet(exportArray);
        var wb = __WEBPACK_IMPORTED_MODULE_7_xlsx__["utils"].book_new();
        __WEBPACK_IMPORTED_MODULE_7_xlsx__["utils"].book_append_sheet(wb, ws, "ABC");
        excelFileName += '.xlsx';
        /* save to file */
        var excelBuffer = __WEBPACK_IMPORTED_MODULE_7_xlsx__["write"](wb, { bookType: 'xlsx', type: 'buffer' });
        this.saveAsExcelFile(excelBuffer, excelFileName);
    };
    BulkPrintComponent.prototype.saveAsExcelFile = function (buffer, fileName) {
        var data = new Blob([buffer], { type: EXCEL_TYPE });
        __WEBPACK_IMPORTED_MODULE_8_file_saver__["saveAs"](data, fileName + EXCEL_EXTENSION);
    };
    BulkPrintComponent.prototype.VoucherPagination = function (event) {
        this.currentPage = event;
        var t = this;
        window.scrollTo({ top: 0, behavior: 'smooth' });
    };
    BulkPrintComponent.prototype.onReset = function () {
        this.voucherPrefix = "";
        this.masterService.voucherListsForBulkPrint = [];
        this.BulkVoucherPrintBodyList = [];
        this.FROM = null;
        this.TO = null;
    };
    return BulkPrintComponent;
}());
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__angular_core__["ViewChild"])("genericGridVoucherList"),
    __metadata("design:type", __WEBPACK_IMPORTED_MODULE_9__common_popupLists_generic_grid_generic_popup_grid_component__["c" /* GenericPopUpComponent */])
], BulkPrintComponent.prototype, "genericGridVoucherList", void 0);
BulkPrintComponent = __decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__angular_core__["Component"])({
        selector: 'bulk-print',
        template: __webpack_require__(1304),
        styles: [__webpack_require__(1303)]
    }),
    __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_2__common_repositories_masterRepo_service__["a" /* MasterRepo */],
        __WEBPACK_IMPORTED_MODULE_3__common_services_spinner_spinner_service__["a" /* SpinnerService */],
        __WEBPACK_IMPORTED_MODULE_4__common_services_alert_alert_service__["a" /* AlertService */],
        __WEBPACK_IMPORTED_MODULE_5__common_Transaction_Components_transaction_service__["a" /* TransactionService */],
        __WEBPACK_IMPORTED_MODULE_6__angular_forms__["FormBuilder"],
        __WEBPACK_IMPORTED_MODULE_0__common_services_permission_authService_service__["a" /* AuthService */],
        __WEBPACK_IMPORTED_MODULE_0__common_services_permission_authService_service__["a" /* AuthService */]])
], BulkPrintComponent);



/***/ }),

/***/ 1240:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__common_popupLists_generic_grid_generic_popup_grid_component__ = __webpack_require__(35);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__common_repositories__ = __webpack_require__(13);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__common_services_alert_alert_service__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__common_services_spinner_spinner_service__ = __webpack_require__(20);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__common_Transaction_Components_transaction_service__ = __webpack_require__(7);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_moment__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_moment___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_6_moment__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__angular_router__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__common_services_permission_authService_service__ = __webpack_require__(17);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return CashCollection; });









var CashCollection = (function () {
    function CashCollection(masterService, loadingService, _transactionService, alertService, authService, router) {
        this.masterService = masterService;
        this.loadingService = loadingService;
        this._transactionService = _transactionService;
        this.alertService = alertService;
        this.authService = authService;
        this.router = router;
        this.gridACListPopupSettings = new __WEBPACK_IMPORTED_MODULE_1__common_popupLists_generic_grid_generic_popup_grid_component__["b" /* GenericPopUpSettings */]();
        this.gridCostSalesManPopupSetting = new __WEBPACK_IMPORTED_MODULE_1__common_popupLists_generic_grid_generic_popup_grid_component__["b" /* GenericPopUpSettings */]();
        this.gridCashBankListPopupSettings = new __WEBPACK_IMPORTED_MODULE_1__common_popupLists_generic_grid_generic_popup_grid_component__["b" /* GenericPopUpSettings */]();
        this.gridCostCenterListPopupSettings = new __WEBPACK_IMPORTED_MODULE_1__common_popupLists_generic_grid_generic_popup_grid_component__["b" /* GenericPopUpSettings */]();
        this.gridCCvoucherListPopupSettings = new __WEBPACK_IMPORTED_MODULE_1__common_popupLists_generic_grid_generic_popup_grid_component__["b" /* GenericPopUpSettings */]();
        this.CashCollectionObj = {};
        this.SaveCashCollectionObj = {};
        this.userProfile = {};
        this.BillList = [];
        this.userProfile = authService.getUserProfile();
        this.reset();
    }
    CashCollection.prototype.ngOnInit = function () {
    };
    CashCollection.prototype.reset = function () {
        var _this = this;
        this.CashCollectionBillAmount = 0;
        this.CashCollectionDueAmount = 0;
        this.CashCollectionTotalBalance = 0;
        this.TotalBillCount = 0;
        this.CashCollectionObj = {};
        this.DetailList = [];
        this.CashCollectionObj.TOTAL_CASHCOLLECTION = 0;
        this.CashCollectionObj.RECEIPT_MODE = "cash";
        this.CashCollectionObj.DAYS_BASIS = "BILLDATE_WISE";
        this._transactionService.TrnMainObj.VoucherName = "CashCollection";
        this._transactionService.TrnMainObj.DIVISION = this.userProfile.division;
        this._transactionService.TrnMainObj.PhiscalID = this.userProfile.PhiscalYearInfo.PhiscalID;
        this.masterService.getVoucherNo(this._transactionService.TrnMainObj, "CC").subscribe(function (res) {
            if (res.status == "ok") {
                _this.CashCollectionObj.CC_VCHRNO = res.result.VCHRNO;
            }
            else {
                alert("Failed to retrieve VoucherNo");
            }
        });
    };
    CashCollection.prototype.ValidateSaveObj = function () {
        var _this = this;
        if (this.DetailList.length == 0) {
            this.alertService.info("No data to save!");
            return false;
        }
        this.DetailList.forEach(function (x) {
            var neg_cashcollectedlist = _this.DetailList.filter(function (x) { return x.CASH_COLLECTION < 0; });
            if (neg_cashcollectedlist && neg_cashcollectedlist.length && neg_cashcollectedlist.length > 0) {
                _this.alertService.info("Please enter valid cash collection amount for Bill no " + x.BILL_NO + ".");
                return false;
            }
            var cashcollectedlist = _this.DetailList.filter(function (x) { return x.CASH_COLLECTION > 0; });
            if (cashcollectedlist.length == 0) {
                _this.alertService.info("Please enter cash collected in atleast one row.");
                return false;
            }
            if (x.CASH_COLLECTION > 0 && (x.CASH_COLLECTION > x.DUE_AMOUNT || x.CASH_COLLECTION < x.DUE_AMOUNT)) {
                _this.alertService.info("Cash Collection should be equal to Due Amount for Bill no " + x.BILL_NO + ".");
                return false;
            }
            else {
                _this.DetailList.forEach(function (x) {
                    x.BALANCE = x.DUE_AMOUNT - x.CASH_COLLECTION;
                });
                _this.CalculateSum();
            }
        });
        if (this.CashCollectionObj.CASHBANK_ACID == null ||
            this.CashCollectionObj.CASHBANK_ACID == "" ||
            this.CashCollectionObj.CASHBANK_ACID == undefined) {
            this.alertService.info("Please select Cash/Bank!");
            return false;
        }
    };
    CashCollection.prototype.saveClick = function () {
        var _this = this;
        if (this.ValidateSaveObj() == false) {
            return;
        }
        if (!this.CashCollectionObj.ENTRYDATE) {
            this.CashCollectionObj.ENTRYDATE = new Date().toJSON().split('T')[0];
            this.changeEntryDate(this.CashCollectionObj.ENTRYDATE, 'AD');
        }
        if (!this.CashCollectionObj.DATE1) {
            this.CashCollectionObj.DATE1 = new Date().toJSON().split('T')[0];
            this.changeDate1(this.CashCollectionObj.DATE1, 'AD');
        }
        if (!this.CashCollectionObj.DATE2) {
            this.CashCollectionObj.DATE2 = new Date().toJSON().split('T')[0];
            this.changeDate2(this.CashCollectionObj.DATE2, 'AD');
        }
        //main and tran data prepare starts
        this._transactionService.initialFormLoad(18, "cashcollection");
        this._transactionService.TrnMainObj.TRNACName = this.CashCollectionObj.CASHBANK_ACNAME;
        this._transactionService.TrnMainObj.TRNAC = this.CashCollectionObj.CASHBANK_ACID;
        this._transactionService.TrnMainObj.REMARKS = this.CashCollectionObj.REMARKS;
        this._transactionService.TrnMainObj.TRNDATE = this._transactionService.TrnMainObj.TRN_DATE = this.CashCollectionObj.ENTRYDATE;
        this._transactionService.TrnMainObj.BSDATE = this._transactionService.TrnMainObj.BS_DATE = this.CashCollectionObj.ENTRY_BSDATE;
        this._transactionService.TrnMainObj.TRNMODE = "Party Receipt";
        this._transactionService.TrnMainObj.TOTAMNT = this._transactionService.TrnMainObj.NETAMNT = this.CashCollectionObj.TOTAL_CASHCOLLECTION;
        this._transactionService.TrnMainObj.TrntranList = [];
        // this._transactionService.TrnMainObj.BillTrackedList = [];
        if (this.DetailList.filter(function (x) { return x.CASH_COLLECTION > 0; }).length > 0 &&
            this.DetailList.filter(function (x) { return x.CASH_COLLECTION > x.DUE_AMOUNT; }).length == 0 &&
            this.DetailList.filter(function (x) { return x.BALANCE < 0; }).length == 0 &&
            this.DetailList.filter(function (x) { return x.CASH_COLLECTION < 0; }).length == 0 &&
            this.DetailList.filter(function (x) { return x.CASH_COLLECTION > 0 && (x.CASH_COLLECTION < x.DUE_AMOUNT); }).length == 0) {
            this.SaveCashCollectionObj.CashDataList = this.DetailList.filter(function (x) { return x.CASH_COLLECTION > 0; });
            this.SaveCashCollectionObj.CashDataList.forEach(function (x) {
                //cashcollection data prepare starts
                x.ENTRYDATE = _this.CashCollectionObj.ENTRYDATE;
                x.ENTRY_BSDATE = _this.CashCollectionObj.ENTRY_BSDATE;
                x.CASHBANK_ACID = _this.CashCollectionObj.CASHBANK_ACID;
                x.CASHBANK_ACNAME = _this.CashCollectionObj.CASHBANK_ACNAME;
                x.SALESMAN_ID = _this.CashCollectionObj.SALESMAN_ID;
                x.SALESMAN_NAME = _this.CashCollectionObj.SALESMAN_NAME;
                x.REMARKS = _this.CashCollectionObj.REMARKS;
                x.DIVISION = _this.userProfile.division;
                x.PHISCALID = _this.userProfile.PhiscalYearInfo.PhiscalID;
                x.COMPANYID = _this.userProfile.CompanyInfo.COMPANYID;
                x.CC_VCHRNO = _this.CashCollectionObj.CC_VCHRNO;
                x.TOTAL_CASHCOLLECTION = _this.CashCollectionObj.TOTAL_CASHCOLLECTION;
                x.DATE1 = _this.CashCollectionObj.DATE1;
                x.BSDATE1 = _this.CashCollectionObj.BSDATE1;
                x.DATE2 = _this.CashCollectionObj.DATE2;
                x.BSDATE2 = _this.CashCollectionObj.BSDATE2;
                x.RECEIPT_MODE = _this.CashCollectionObj.RECEIPT_MODE;
                x.DAYS_BASIS = _this.CashCollectionObj.DAYS_BASIS;
                x.CUS_ACID = _this.CashCollectionObj.CUS_ACID;
                x.CUS_ACNAME = _this.CashCollectionObj.CUS_ACNAME;
                //cashcollection data prepare ends
                var val = { AccountItem: {} };
                val.AccountItem.ACNAME = x.CUSTOMER_ACNAME;
                val.AccountItem.ACID = x.CUSTOMER_ACID;
                val.CRAMNT = x.CASH_COLLECTION;
                _this._transactionService.TrnMainObj.TrntranList.push(val);
                for (var _i = 0, _a = _this._transactionService.TrnMainObj.TrntranList; _i < _a.length; _i++) {
                    var x_1 = _a[_i];
                    x_1.acitem = x_1.AccountItem;
                }
                _this._transactionService.calculateDrCrDifferences();
                //main and tran data prepare ends
                //billtracking data prepare starts
                // let a: BillTrack = <BillTrack>{} //billtracking comment for 1st phase
                // if (x.BALANCE > 0 && x.CASH_COLLECTION > 0) {
                //   a.AMOUNT = x.BALANCE;
                //   a.REFBILL = x.BILL_NO;
                //   a.VCHRNO = this._transactionService.TrnMainObj.VCHRNO;
                //   a.DIVISION = x.DIVISION;
                //   a.ACID = x.CUSTOMER_ACID;
                //   a.REFDIVISION = x.DIVISION;
                //   a.TBillNo = this._transactionService.TrnMainObj.CHALANNO;
                //   a.VOUCHERTYPE = this._transactionService.TrnMainObj.VoucherPrefix;
                //   a.ID = this._transactionService.TrnMainObj.guid;
                //   this._transactionService.TrnMainObj.BillTrackedList.push(a);
                // }
            });
            //billtracking data prepare ends
            var bodyData = { data: this.SaveCashCollectionObj };
            var rv_voucherno = this._transactionService.TrnMainObj.VCHRNO;
            this.masterService.saveCashCollection(bodyData).subscribe(function (x) {
                if (x.status == "ok") {
                    _this.masterService.saveTransaction(_this._transactionService.TrnMainObj.Mode, _this._transactionService.TrnMainObj)
                        .subscribe(function (data) {
                        if (data.status == "ok") {
                            _this.reset();
                            _this.alertService.info("Cash Collection Saved Successfully as Receipt Voucher No. " + data.savedvchrno);
                        }
                        else {
                            _this.alertService.error(x.result);
                        }
                    }), function (err) {
                        _this.alertService.error(err);
                    };
                }
                else {
                    _this.alertService.error(x.result);
                }
            }), function (err) {
                _this.alertService.error(err);
            };
        }
    };
    CashCollection.prototype.changeEntryDate = function (value, format) {
        var adbs = __webpack_require__(19);
        if (format == "AD") {
            var yearValue = __WEBPACK_IMPORTED_MODULE_6_moment__(value).year();
            if (yearValue.toString().length == 4) {
                var adDate = (value.replace("-", "/")).replace("-", "/");
                var bsDate = adbs.ad2bs(adDate);
                bsDate.en.month = bsDate.en.month <= 9 ? "0" + (bsDate.en.month) : bsDate.en.month;
                this.CashCollectionObj.ENTRY_BSDATE =
                    this.masterService.toBSDate(value);
            }
        }
        else if (format == "BS") {
            var datearr = value.split('/');
            var bsDate_1 = datearr[2] + "/" + datearr[1] + "/" + datearr[0];
            var yearValue = __WEBPACK_IMPORTED_MODULE_6_moment__(value).year();
            var adDate = adbs.bs2ad(bsDate_1);
            this.CashCollectionObj.ENTRYDATE = this.masterService.toADDate(value);
        }
    };
    CashCollection.prototype.changeDate1 = function (value, format) {
        var adbs = __webpack_require__(19);
        if (format == "AD") {
            var yearValue = __WEBPACK_IMPORTED_MODULE_6_moment__(value).year();
            if (yearValue.toString().length == 4) {
                var adDate = (value.replace("-", "/")).replace("-", "/");
                var bsDate = adbs.ad2bs(adDate);
                bsDate.en.month = bsDate.en.month <= 9 ? "0" + (bsDate.en.month) : bsDate.en.month;
                this.CashCollectionObj.BSDATE1 =
                    this.masterService.toBSDate(value);
            }
        }
        else if (format == "BS") {
            var datearr = value.split('/');
            var bsDate_2 = datearr[2] + "/" + datearr[1] + "/" + datearr[0];
            var yearValue = __WEBPACK_IMPORTED_MODULE_6_moment__(value).year();
            var adDate = adbs.bs2ad(bsDate_2);
            this.CashCollectionObj.DATE1 = this.masterService.toADDate(value);
        }
    };
    CashCollection.prototype.changeDate2 = function (value, format) {
        var adbs = __webpack_require__(19);
        if (format == "AD") {
            var yearValue = __WEBPACK_IMPORTED_MODULE_6_moment__(value).year();
            if (yearValue.toString().length == 4) {
                var adDate = (value.replace("-", "/")).replace("-", "/");
                var bsDate = adbs.ad2bs(adDate);
                bsDate.en.month = bsDate.en.month <= 9 ? "0" + (bsDate.en.month) : bsDate.en.month;
                this.CashCollectionObj.BSDATE2 =
                    this.masterService.toBSDate(value);
            }
        }
        else if (format == "BS") {
            var datearr = value.split('/');
            var bsDate_3 = datearr[2] + "/" + datearr[1] + "/" + datearr[0];
            var yearValue = __WEBPACK_IMPORTED_MODULE_6_moment__(value).year();
            var adDate = adbs.bs2ad(bsDate_3);
            this.CashCollectionObj.DATE2 = this.masterService.toADDate(value);
        }
    };
    CashCollection.prototype.showAcList = function () {
        this._transactionService.TrnMainObj.TRNMODE = "Customer_Pay";
        var TRNMODE = "" + this._transactionService.TrnMainObj.TRNMODE;
        this.gridACListPopupSettings = {
            title: "Accounts",
            apiEndpoints: "/getAccountPagedListByMapId/Details/" + TRNMODE,
            defaultFilterIndex: 1,
            columns: [
                {
                    key: "ACID",
                    title: "AC CODE",
                    hidden: false,
                    noSearch: false
                },
                {
                    key: "ACNAME",
                    title: "A/C NAME",
                    hidden: false,
                    noSearch: false
                }
            ]
        };
        this.genericGridACList.show();
    };
    CashCollection.prototype.onAcSelect = function (acItem) {
        this.CashCollectionObj.CUS_ACID = acItem.ACID;
        this.CashCollectionObj.CUS_ACNAME = acItem.ACNAME;
    };
    CashCollection.prototype.EnterClick = function () {
        this.gridCostSalesManPopupSetting = {
            title: "Salesman List",
            apiEndpoints: "/getSalesManPageList",
            defaultFilterIndex: 0,
            columns: [
                {
                    key: "Name",
                    title: "Name",
                    hidden: false,
                    noSearch: false
                }
            ]
        };
        this.genericeSalesManList.show();
    };
    CashCollection.prototype.onSalesManSelect = function (salesman) {
        this.CashCollectionObj.SALESMAN_ID = salesman.SALESMANID;
        this.CashCollectionObj.SALESMAN_NAME = salesman.Name;
    };
    CashCollection.prototype.CashBankList = function () {
        var TRNMODE = "Cash Transfer PV";
        this.gridCashBankListPopupSettings = {
            title: "Accounts",
            apiEndpoints: "/getAccountPagedListByMapId/Master/" + TRNMODE + "/",
            defaultFilterIndex: 1,
            columns: [
                {
                    key: "ACCODE",
                    title: "AC CODE",
                    hidden: false,
                    noSearch: false
                },
                {
                    key: "ACNAME",
                    title: "A/C NAME",
                    hidden: false,
                    noSearch: false
                }
            ]
        };
        this.genericGridCashBankList.show();
    };
    CashCollection.prototype.onCashBankSelect = function (cashbank) {
        this.CashCollectionObj.CASHBANK_ACID = cashbank.ACID;
        this.CashCollectionObj.CASHBANK_ACNAME = cashbank.ACNAME;
    };
    CashCollection.prototype.showCostCenterList = function (i) {
        this.gridCostCenterListPopupSettings = {
            title: "Cost Centers",
            apiEndpoints: "/getCostCenterPagedList",
            defaultFilterIndex: 0,
            columns: [
                {
                    key: "COSTCENTERNAME",
                    title: "Cost Center Name",
                    hidden: false,
                    noSearch: false
                }
            ]
        };
        this.genericGridCostCenterList.show();
    };
    CashCollection.prototype.onCostcenterSelect = function (costcenter) {
        this.CashCollectionObj.COSTCENTER_ID = costcenter.CCID;
        this.CashCollectionObj.COSTCENTER_NAME = costcenter.COSTCENTERNAME;
    };
    CashCollection.prototype.handleKeyDownboardEvent = function ($event) {
        if ($event.code == "F3") {
            $event.preventDefault();
            this.reset();
        }
        else if ($event.code == "F6") {
            $event.preventDefault();
            this.saveClick();
        }
        else if ($event.code == "F10") {
            $event.preventDefault();
            this.back();
        }
    };
    CashCollection.prototype.back = function () {
        this.returnUrl = "/pages/dashboard/dashboard";
        this.router.navigate([this.returnUrl]);
    };
    CashCollection.prototype.loadsalesdata = function () {
        var _this = this;
        // if (this.CashCollectionObj.CUS_ACID == "" ||
        //   this.CashCollectionObj.CUS_ACID == null ||
        //   this.CashCollectionObj.CUS_ACID == undefined) {
        //   this.alertService.info("Please select customer.");
        //   return;
        // }
        this.loadingService.show("Please wait. Data is Loading.");
        var cashCollectionParameters = {};
        cashCollectionParameters.DATE1 = this.CashCollectionObj.DATE1 ? this.CashCollectionObj.DATE1 : new Date().toJSON().split('T')[0];
        cashCollectionParameters.DATE2 = this.CashCollectionObj.DATE2 ? this.CashCollectionObj.DATE2 : new Date().toJSON().split('T')[0];
        cashCollectionParameters.AREA_ID = this.CashCollectionObj.AREA_ID ? this.CashCollectionObj.AREA_ID : '%';
        cashCollectionParameters.SALESMAN_ID = this.CashCollectionObj.SALESMAN_ID ? this.CashCollectionObj.SALESMAN_ID : '%';
        cashCollectionParameters.RECEIPT_MODE = '%';
        cashCollectionParameters.DAYS_BASIS = '%';
        cashCollectionParameters.CASHBANK_ACID = this.CashCollectionObj.CASHBANK_ACID ? this.CashCollectionObj.CASHBANK_ACID : '%';
        cashCollectionParameters.CUS_ACID = this.CashCollectionObj.CUS_ACID ? this.CashCollectionObj.CUS_ACID : '%';
        cashCollectionParameters.COSTCENTER_ID = this.CashCollectionObj.COSTCENTER_ID ? this.CashCollectionObj.COSTCENTER_ID : '%';
        cashCollectionParameters.DIVISION = this.userProfile.division;
        cashCollectionParameters.COMPANYID = this.userProfile.CompanyInfo.COMPANYID;
        cashCollectionParameters.PHISCALID = this.userProfile.PhiscalYearInfo.PhiscalID;
        cashCollectionParameters.VIEWMODE = 0;
        cashCollectionParameters.VNO = 0;
        this.masterService.getCashCollectionDetails(cashCollectionParameters).subscribe(function (res) {
            if (res.status == 'ok') {
                _this.loadingService.hide();
                if (res.result == 0) {
                    _this.alertService.info("No data found.");
                    return;
                }
                _this.DetailList = [];
                for (var _i = 0, _a = res.result; _i < _a.length; _i++) {
                    var i = _a[_i];
                    var load_val = {};
                    load_val.CUSTOMER_ACID = i.ACID;
                    load_val.CUSTOMER_ACNAME = i.CUSTOMERNAME;
                    load_val.BILL_NO = i.BILLNO;
                    load_val.BILL_DATE = _this._transactionService.transformDate(i.BILLDATE);
                    load_val.BILL_BSDATE = i.BSDATE;
                    load_val.DUE_DATE = _this._transactionService.transformDate(i.DUEDATE);
                    load_val.BILL_AMOUNT = i.BILLAMOUNT;
                    load_val.DUE_AMOUNT = i.DUEAMOUNT;
                    load_val.BALANCE = i.DUEAMOUNT;
                    load_val.IS_CHECKED = false;
                    load_val.CASH_COLLECTION = 0;
                    load_val.RECEIPT_NO = "";
                    _this.DetailList.push(load_val);
                }
                _this.CalculateSum();
            }
            else {
                _this.alertService.error(res.result._body);
                _this.loadingService.hide();
            }
        }), function (err) {
            _this.alertService.error(err);
            _this.loadingService.hide();
        };
    };
    CashCollection.prototype.CalculateSum = function () {
        var _this = this;
        this.CashCollectionBillAmount = 0;
        this.CashCollectionDueAmount = 0;
        this.CashCollectionTotalBalance = 0;
        this.CashCollectionObj.TOTAL_CASHCOLLECTION = 0;
        this.TotalBillCount = 0;
        this.DetailList.forEach(function (x) {
            _this.CashCollectionBillAmount += Number(x.BILL_AMOUNT);
            _this.CashCollectionDueAmount += Number(x.DUE_AMOUNT);
            _this.CashCollectionTotalBalance += Number(x.BALANCE);
            _this.CashCollectionObj.TOTAL_CASHCOLLECTION += Number(x.CASH_COLLECTION);
        });
        this.TotalBillCount = this.DetailList && this.DetailList.length;
    };
    CashCollection.prototype.CalculateBal = function (index) {
        if (this.DetailList[index].CASH_COLLECTION > 0 &&
            (this.DetailList[index].CASH_COLLECTION < this.DetailList[index].DUE_AMOUNT ||
                this.DetailList[index].CASH_COLLECTION > this.DetailList[index].DUE_AMOUNT)) {
            this.alertService.info("Cash Collection should be equal to  Due Amount.");
            return;
        }
        this.DetailList[index].BALANCE = this.DetailList[index].DUE_AMOUNT - this.DetailList[index].CASH_COLLECTION;
        this.CalculateSum();
    };
    CashCollection.prototype.ChooseCashCollection = function (event, index) {
        this.calculation(event.target.checked, index);
    };
    CashCollection.prototype.calculation = function (isChecked, index) {
        if (isChecked) {
            this.DetailList[index].CASH_COLLECTION = this.DetailList[index].DUE_AMOUNT;
            this.DetailList[index].IS_CHECKED = true;
            this.DetailList[index].BALANCE = 0;
        }
        else {
            this.DetailList[index].CASH_COLLECTION = 0;
            this.DetailList[index].IS_CHECKED = false;
            this.DetailList[index].BALANCE = this.DetailList[index].DUE_AMOUNT;
        }
        this.CalculateSum();
    };
    CashCollection.prototype.handleChange = function (event) {
        // Handle the change event here
        if (event.target.checked == true) {
            this.DetailList.forEach(function (x) {
                x.CASH_COLLECTION = x.DUE_AMOUNT;
                x.BALANCE = x.DUE_AMOUNT - x.CASH_COLLECTION;
                x.IS_CHECKED = true;
            });
        }
        else {
            this.DetailList.forEach(function (x) {
                x.CASH_COLLECTION = 0;
                x.BALANCE = x.DUE_AMOUNT;
                x.IS_CHECKED = false;
            });
        }
        this.CalculateSum();
    };
    CashCollection.prototype.preventInput = function ($event) {
        $event.preventDefault();
        return false;
    };
    CashCollection.prototype.onViewClicked = function () {
        this.gridCCvoucherListPopupSettings = this.masterService.getGenericGridPopUpSettings("CC", "CC");
        this.genericGridCCvoucherList.show();
    };
    CashCollection.prototype.onVoucherDoubleClick = function (event) {
        var _this = this;
        this.CashCollectionObj.MODE = "VIEW";
        this.masterService.LoadCashCollection(event.CC_VCHRNO).subscribe(function (res) {
            if (res.result && res.result.length && res.result.length > 0) {
                _this.DetailList = res.result;
                _this.CalculateSum();
                _this.DetailList.forEach(function (x) {
                    if (x.BALANCE == 0) {
                        x.IS_CHECKED = true;
                    }
                });
                _this.CashCollectionObj.CC_VCHRNO = event.CC_VCHRNO;
                _this.CashCollectionObj.RV_VCHRNO = res.result[0].RV_VCHRNO;
                _this.CashCollectionObj.CASHBANK_ACNAME = res.result[0].CASHBANK_ACNAME;
                _this.CashCollectionObj.CUS_ACNAME = res.result[0].CUSTOMER_ACNAME;
                _this.CashCollectionObj.REMARKS = res.result[0].REMARKS;
                _this.CashCollectionObj.ENTRYDATE = res.result[0].ENTRYDATE;
                _this.CashCollectionObj.ENTRY_BSDATE = res.result[0].ENTRY_BSDATE;
                _this.CashCollectionObj.DATE1 = res.result[0].DATE1;
                _this.CashCollectionObj.BSDATE1 = res.result[0].BSDATE1;
                _this.CashCollectionObj.DATE2 = res.result[0].DATE2;
                _this.CashCollectionObj.BSDATE2 = res.result[0].BSDATE2;
                _this.CashCollectionObj.SALESMAN_NAME = res.result[0].SALESMAN_NAME;
                _this.CashCollectionObj.CUS_ACNAME = res.result[0].CUS_ACNAME;
            }
        });
    };
    return CashCollection;
}());
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])("genericGridACList"),
    __metadata("design:type", __WEBPACK_IMPORTED_MODULE_1__common_popupLists_generic_grid_generic_popup_grid_component__["c" /* GenericPopUpComponent */])
], CashCollection.prototype, "genericGridACList", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])("genericeSalesManList"),
    __metadata("design:type", __WEBPACK_IMPORTED_MODULE_1__common_popupLists_generic_grid_generic_popup_grid_component__["c" /* GenericPopUpComponent */])
], CashCollection.prototype, "genericeSalesManList", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])("genericGridCashBankList"),
    __metadata("design:type", __WEBPACK_IMPORTED_MODULE_1__common_popupLists_generic_grid_generic_popup_grid_component__["c" /* GenericPopUpComponent */])
], CashCollection.prototype, "genericGridCashBankList", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])("genericGridCostCenterList"),
    __metadata("design:type", __WEBPACK_IMPORTED_MODULE_1__common_popupLists_generic_grid_generic_popup_grid_component__["c" /* GenericPopUpComponent */])
], CashCollection.prototype, "genericGridCostCenterList", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])("genericGridCCvoucherList"),
    __metadata("design:type", __WEBPACK_IMPORTED_MODULE_1__common_popupLists_generic_grid_generic_popup_grid_component__["c" /* GenericPopUpComponent */])
], CashCollection.prototype, "genericGridCCvoucherList", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["HostListener"])("document : keydown", ["$event"]),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [KeyboardEvent]),
    __metadata("design:returntype", void 0)
], CashCollection.prototype, "handleKeyDownboardEvent", null);
CashCollection = __decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
        selector: 'cash-collection-selector',
        template: __webpack_require__(1305),
    }),
    __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_2__common_repositories__["a" /* MasterRepo */], __WEBPACK_IMPORTED_MODULE_4__common_services_spinner_spinner_service__["a" /* SpinnerService */],
        __WEBPACK_IMPORTED_MODULE_5__common_Transaction_Components_transaction_service__["a" /* TransactionService */], __WEBPACK_IMPORTED_MODULE_3__common_services_alert_alert_service__["a" /* AlertService */],
        __WEBPACK_IMPORTED_MODULE_8__common_services_permission_authService_service__["a" /* AuthService */], __WEBPACK_IMPORTED_MODULE_7__angular_router__["Router"]])
], CashCollection);



/***/ }),

/***/ 1241:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__common_Transaction_Components_transaction_service__ = __webpack_require__(7);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__common_interfaces_TrnMain__ = __webpack_require__(25);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__common_repositories_masterRepo_service__ = __webpack_require__(8);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__angular_router__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__common_services_index__ = __webpack_require__(21);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__common_services_alert_alert_service__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__common_services_spinner_spinner_service__ = __webpack_require__(20);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__common_Transaction_Components_trntran_voucher_entry_component__ = __webpack_require__(557);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return CellPayVoucherComponent; });









var CellPayVoucherComponent = (function () {
    function CellPayVoucherComponent(masterService, _trnMainService, setting, _loadingSerive, _alertService, _activatedRoute) {
        this.masterService = masterService;
        this._trnMainService = _trnMainService;
        this.setting = setting;
        this._loadingSerive = _loadingSerive;
        this._alertService = _alertService;
        this._activatedRoute = _activatedRoute;
        this.TrnMainObj = {};
        this.voucherType = __WEBPACK_IMPORTED_MODULE_2__common_interfaces_TrnMain__["a" /* VoucherTypeEnum */].PaymentVoucher;
        this.prefix = {};
        this.TrnMainObj = this._trnMainService.TrnMainObj;
        this._trnMainService.initialFormLoad(75);
        this.masterService.ShowMore = false;
        // this._trnMainService.TrnMainObj.TRNAC = "AG10278";
        //       this._trnMainService.TrnMainObj.TRNACName = "NIBL";
        //       this._trnMainService.masterSelectACID = "AG10278";
    }
    CellPayVoucherComponent.prototype.ngOnInit = function () {
        var _this = this;
        this._activatedRoute.queryParams.subscribe(function (params) {
            if (params['mode'] == "DRILL") {
                var VCHR = params['voucher'];
                var vparams = [];
                vparams = VCHR.split('-');
                _this._loadingSerive.show("Loading Invoice");
                _this.masterService.LoadTransaction(VCHR, vparams[1], vparams[2]).subscribe(function (res) {
                    if (res.status == "ok") {
                        _this._loadingSerive.hide();
                        _this._trnMainService.TrnMainObj = res.result;
                        _this._trnMainService.TrnMainObj.VoucherType = 17;
                        _this._trnMainService.pageHeading = "CellPay Voucher";
                        _this._trnMainService.TrnMainObj.VoucherPrefix = "PV";
                        _this._trnMainService.TrnMainObj.Mode = "VIEW";
                        _this._trnMainService.viewDate.next();
                    }
                }, function (err) {
                    _this._loadingSerive.hide();
                    _this._alertService.error(err);
                });
            }
            else {
                if (_this._activatedRoute.snapshot.params['from']) {
                    var VCHR = _this._activatedRoute.snapshot.params['voucherNumber'];
                    var params_1 = [];
                    params_1 = VCHR.split('-');
                    _this._loadingSerive.show("Loading Invoice");
                    _this.masterService.LoadTransaction(VCHR, params_1[1], params_1[2]).subscribe(function (res) {
                        if (res.status == "ok") {
                            _this._loadingSerive.hide();
                            _this._trnMainService.TrnMainObj = res.result;
                            _this._trnMainService.TrnMainObj.VoucherType = 17;
                            _this._trnMainService.pageHeading = "CellPay Voucher";
                            _this._trnMainService.TrnMainObj.VoucherPrefix = "PV";
                            _this._trnMainService.TrnMainObj.Mode = "VIEW";
                        }
                    }, function (err) {
                        _this._loadingSerive.hide();
                        _this._alertService.error(err);
                    });
                }
                else {
                    _this.TrnMainObj.Mode = "NEW";
                    _this.masterService.ShowMore = false;
                }
            }
        });
        this._trnMainService.DrillMode = "New";
    };
    CellPayVoucherComponent.prototype.prefixChanged = function (pref) {
        var _this = this;
        try {
            this._trnMainService.prefix = pref;
            this.prefix = pref;
            if (this.TrnMainObj.Mode == "NEW") {
                if (this.TrnMainObj.DIVISION == "" ||
                    this.TrnMainObj.DIVISION == null) {
                    this.TrnMainObj.DIVISION = this.setting.appSetting.DefaultDivision;
                }
                this.masterService.getVoucherNo(this.TrnMainObj).subscribe(function (res) {
                    if (res.status == "ok") {
                        var TMain = res.result;
                        _this.TrnMainObj.VCHRNO = TMain.VCHRNO.substr(2, TMain.VCHRNO.length - 2);
                        _this.TrnMainObj.CHALANNO = TMain.CHALANNO;
                    }
                    else {
                        alert("Failed to retrieve VoucherNo");
                    }
                });
            }
        }
        catch (ex) {
        }
    };
    CellPayVoucherComponent.prototype.BillTrack = function () {
        this.trnmainentry.BillTrack();
    };
    return CellPayVoucherComponent;
}());
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])("trnmainentry"),
    __metadata("design:type", __WEBPACK_IMPORTED_MODULE_8__common_Transaction_Components_trntran_voucher_entry_component__["a" /* TrnTranVoucherEntryComponent */])
], CellPayVoucherComponent.prototype, "trnmainentry", void 0);
CellPayVoucherComponent = __decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
        selector: "cellpay-voucher",
        template: __webpack_require__(1306),
        providers: [__WEBPACK_IMPORTED_MODULE_1__common_Transaction_Components_transaction_service__["a" /* TransactionService */]],
        styles: [__webpack_require__(120)]
    }),
    __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_3__common_repositories_masterRepo_service__["a" /* MasterRepo */],
        __WEBPACK_IMPORTED_MODULE_1__common_Transaction_Components_transaction_service__["a" /* TransactionService */],
        __WEBPACK_IMPORTED_MODULE_5__common_services_index__["c" /* SettingService */],
        __WEBPACK_IMPORTED_MODULE_7__common_services_spinner_spinner_service__["a" /* SpinnerService */],
        __WEBPACK_IMPORTED_MODULE_6__common_services_alert_alert_service__["a" /* AlertService */],
        __WEBPACK_IMPORTED_MODULE_4__angular_router__["ActivatedRoute"]])
], CellPayVoucherComponent);



/***/ }),

/***/ 1242:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__common_Transaction_Components_transaction_service__ = __webpack_require__(7);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__common_interfaces_TrnMain__ = __webpack_require__(25);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__common_repositories_masterRepo_service__ = __webpack_require__(8);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__common_services_setting_service__ = __webpack_require__(72);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__common_services_spinner_spinner_service__ = __webpack_require__(20);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__common_services_alert_alert_service__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__angular_router__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__common_services_permission__ = __webpack_require__(15);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return CreditNoteComponent; });









var CreditNoteComponent = (function () {
    function CreditNoteComponent(masterService, _trnMainService, setting, _loadingSerive, _alertService, _activatedRoute, authservice) {
        this.masterService = masterService;
        this._trnMainService = _trnMainService;
        this.setting = setting;
        this._loadingSerive = _loadingSerive;
        this._alertService = _alertService;
        this._activatedRoute = _activatedRoute;
        this.authservice = authservice;
        this.TrnMainObj = {};
        this.voucherType = __WEBPACK_IMPORTED_MODULE_2__common_interfaces_TrnMain__["a" /* VoucherTypeEnum */].CreditNote;
        this.prefix = {};
        this.TrnMainObj = _trnMainService.TrnMainObj;
        this._trnMainService.initialFormLoad(15);
        this._trnMainService.TrnMainObj.VATBILL = 0;
        this.userSetting = authservice.getSetting();
    }
    CreditNoteComponent.prototype.ngOnInit = function () {
        var _this = this;
        this._activatedRoute.queryParams.subscribe(function (params) {
            if (params['mode'] == "DRILL") {
                var VCHR = params['voucher'];
                var vparams = [];
                vparams = VCHR.split('-');
                _this._loadingSerive.show("Loading Invoice");
                _this.masterService.LoadTransaction(VCHR, vparams[1], vparams[2]).subscribe(function (res) {
                    if (res.status == "ok") {
                        _this._loadingSerive.hide();
                        _this._trnMainService.TrnMainObj = res.result;
                        //console.log("salesreturn", this.userSetting,this.userSetting.Vat_Sales)
                        var abc = _this._trnMainService.TrnMainObj.TrntranList.findIndex(function (x) { return x.A_ACID == _this.userSetting.Vat_Sales; });
                        //console.log("abc", abc)
                        if (abc >= 0) {
                            _this._trnMainService.TrnMainObj.TrntranList.splice(abc, 1);
                        }
                        _this._trnMainService.TrnMainObj.VoucherType = 15;
                        _this._trnMainService.pageHeading = "CreditNote";
                        _this._trnMainService.TrnMainObj.VoucherPrefix = "CN";
                        _this._trnMainService.TrnMainObj.Mode = "VIEW";
                        _this._trnMainService.viewDate.next();
                    }
                }, function (err) {
                    _this._loadingSerive.hide();
                    _this._alertService.error(err);
                });
            }
            else {
                _this.TrnMainObj.Mode = "NEW";
                _this.masterService.ShowMore = false;
                _this._trnMainService.TrnMainObj.ProdList = [];
                _this._trnMainService.TrnMainObj.IsAccountBase = true;
                _this._trnMainService.TrnMainObj.CNDN_MODE = 1;
            }
        });
    };
    CreditNoteComponent.prototype.prefixChanged = function (pref) {
        var _this = this;
        try {
            this._trnMainService.prefix = pref;
            this.prefix = pref;
            if (this.TrnMainObj.Mode == "NEW") {
                var tMain = { VoucherPrefix: pref.VNAME };
                if (this.TrnMainObj.DIVISION == "" ||
                    this.TrnMainObj.DIVISION == null) {
                    tMain.DIVISION = this.setting.appSetting.DefaultDivision;
                }
                this.masterService.getVoucherNo(tMain).subscribe(function (res) {
                    if (res.status == "ok") {
                        var TMain = res.result;
                        _this.TrnMainObj.VCHRNO = TMain.VCHRNO.substr(2, TMain.VCHRNO.length - 2);
                        _this.TrnMainObj.CHALANNO = TMain.CHALANNO;
                    }
                    else {
                        alert("Failed to retrieve VoucherNo");
                    }
                });
            }
        }
        catch (ex) {
        }
    };
    return CreditNoteComponent;
}());
CreditNoteComponent = __decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
        selector: "credit-note",
        template: __webpack_require__(1307),
        providers: [__WEBPACK_IMPORTED_MODULE_1__common_Transaction_Components_transaction_service__["a" /* TransactionService */]],
        styles: [__webpack_require__(120)]
    }),
    __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_3__common_repositories_masterRepo_service__["a" /* MasterRepo */],
        __WEBPACK_IMPORTED_MODULE_1__common_Transaction_Components_transaction_service__["a" /* TransactionService */],
        __WEBPACK_IMPORTED_MODULE_4__common_services_setting_service__["a" /* SettingService */],
        __WEBPACK_IMPORTED_MODULE_5__common_services_spinner_spinner_service__["a" /* SpinnerService */],
        __WEBPACK_IMPORTED_MODULE_6__common_services_alert_alert_service__["a" /* AlertService */],
        __WEBPACK_IMPORTED_MODULE_7__angular_router__["ActivatedRoute"],
        __WEBPACK_IMPORTED_MODULE_8__common_services_permission__["a" /* AuthService */]])
], CreditNoteComponent);



/***/ }),

/***/ 1243:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__common_Transaction_Components_transaction_service__ = __webpack_require__(7);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__common_interfaces_TrnMain__ = __webpack_require__(25);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__common_repositories_masterRepo_service__ = __webpack_require__(8);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__common_services_setting_service__ = __webpack_require__(72);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__angular_router__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__common_services_spinner_spinner_service__ = __webpack_require__(20);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__common_services_alert_alert_service__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__common_services_permission__ = __webpack_require__(15);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return DebitNoteComponent; });









var DebitNoteComponent = (function () {
    function DebitNoteComponent(masterService, _trnMainService, setting, _activatedRoute, _loadingSerive, _alertService, authservice) {
        this.masterService = masterService;
        this._trnMainService = _trnMainService;
        this.setting = setting;
        this._activatedRoute = _activatedRoute;
        this._loadingSerive = _loadingSerive;
        this._alertService = _alertService;
        this.authservice = authservice;
        this.TrnMainObj = {};
        this.voucherType = __WEBPACK_IMPORTED_MODULE_2__common_interfaces_TrnMain__["a" /* VoucherTypeEnum */].DebitNote;
        this.prefix = {};
        this.TrnMainObj = _trnMainService.TrnMainObj;
        this._trnMainService.initialFormLoad(16);
        this.userSetting = authservice.getSetting();
    }
    DebitNoteComponent.prototype.ngOnInit = function () {
        var _this = this;
        this._activatedRoute.queryParams.subscribe(function (params) {
            if (params['mode'] == "DRILL") {
                var VCHR = params['voucher'];
                var vparams = [];
                vparams = VCHR.split('-');
                _this._loadingSerive.show("Loading Invoice");
                _this.masterService.LoadTransaction(VCHR, vparams[1], vparams[2]).subscribe(function (res) {
                    if (res.status == "ok") {
                        _this._loadingSerive.hide();
                        _this._trnMainService.TrnMainObj = res.result;
                        //console.log("Vat_Purchase", this.userSetting.Vat_Purchase)
                        var abc = _this._trnMainService.TrnMainObj.TrntranList.findIndex(function (x) { return x.A_ACID == _this.userSetting.Vat_Purchase; });
                        //console.log("abc", abc)
                        if (abc >= 0) {
                            _this._trnMainService.TrnMainObj.TrntranList.splice(abc, 1);
                        }
                        _this._trnMainService.TrnMainObj.VoucherType = 16;
                        _this._trnMainService.pageHeading = "DebitNote";
                        _this._trnMainService.TrnMainObj.VoucherPrefix = "DN";
                        _this._trnMainService.TrnMainObj.Mode = "VIEW";
                        _this._trnMainService.viewDate.next();
                    }
                }, function (err) {
                    _this._loadingSerive.hide();
                    _this._alertService.error(err);
                });
            }
            else {
                _this.TrnMainObj.Mode = "NEW";
                _this.masterService.ShowMore = false;
                _this._trnMainService.TrnMainObj.ProdList = [];
                _this._trnMainService.TrnMainObj.IsAccountBase = true;
                _this._trnMainService.TrnMainObj.VATBILL = 0;
                _this._trnMainService.TrnMainObj.CNDN_MODE = 1;
            }
        });
    };
    DebitNoteComponent.prototype.prefixChanged = function (pref) {
        var _this = this;
        try {
            this._trnMainService.prefix = pref;
            this.prefix = pref;
            if (this.TrnMainObj.Mode == "NEW") {
                var tMain = { VoucherPrefix: pref.VNAME };
                if (this.TrnMainObj.DIVISION == "" ||
                    this.TrnMainObj.DIVISION == null) {
                    tMain.DIVISION = this.setting.appSetting.DefaultDivision;
                }
                this.masterService.getVoucherNo(tMain).subscribe(function (res) {
                    if (res.status == "ok") {
                        var TMain = res.result;
                        _this.TrnMainObj.VCHRNO = TMain.VCHRNO.substr(2, TMain.VCHRNO.length - 2);
                        _this.TrnMainObj.CHALANNO = TMain.CHALANNO;
                    }
                    else {
                        alert("Failed to retrieve VoucherNo");
                    }
                });
            }
        }
        catch (ex) {
            alert(ex);
        }
    };
    return DebitNoteComponent;
}());
DebitNoteComponent = __decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
        selector: "debit-note",
        template: __webpack_require__(1309),
        providers: [__WEBPACK_IMPORTED_MODULE_1__common_Transaction_Components_transaction_service__["a" /* TransactionService */]],
        styles: [__webpack_require__(120)]
    }),
    __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_3__common_repositories_masterRepo_service__["a" /* MasterRepo */],
        __WEBPACK_IMPORTED_MODULE_1__common_Transaction_Components_transaction_service__["a" /* TransactionService */],
        __WEBPACK_IMPORTED_MODULE_4__common_services_setting_service__["a" /* SettingService */],
        __WEBPACK_IMPORTED_MODULE_5__angular_router__["ActivatedRoute"],
        __WEBPACK_IMPORTED_MODULE_6__common_services_spinner_spinner_service__["a" /* SpinnerService */],
        __WEBPACK_IMPORTED_MODULE_7__common_services_alert_alert_service__["a" /* AlertService */],
        __WEBPACK_IMPORTED_MODULE_8__common_services_permission__["a" /* AuthService */]])
], DebitNoteComponent);



/***/ }),

/***/ 1244:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__common_Transaction_Components_transaction_service__ = __webpack_require__(7);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__common_interfaces_TrnMain__ = __webpack_require__(25);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__common_repositories_masterRepo_service__ = __webpack_require__(8);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__angular_router__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__common_services_index__ = __webpack_require__(21);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__common_services_alert_alert_service__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__common_services_spinner_spinner_service__ = __webpack_require__(20);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__common_Transaction_Components_trntran_voucher_entry_component__ = __webpack_require__(557);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ExpensesVoucherComponent; });









var ExpensesVoucherComponent = (function () {
    function ExpensesVoucherComponent(masterService, _trnMainService, setting, _loadingSerive, _alertService, _activatedRoute) {
        this.masterService = masterService;
        this._trnMainService = _trnMainService;
        this.setting = setting;
        this._loadingSerive = _loadingSerive;
        this._alertService = _alertService;
        this._activatedRoute = _activatedRoute;
        this.TrnMainObj = {};
        this.voucherType = __WEBPACK_IMPORTED_MODULE_2__common_interfaces_TrnMain__["a" /* VoucherTypeEnum */].PaymentVoucher;
        this.prefix = {};
        this.TrnMainObj = this._trnMainService.TrnMainObj;
        this._trnMainService.initialFormLoad(17);
        this.masterService.ShowMore = false;
    }
    ExpensesVoucherComponent.prototype.ngOnInit = function () {
        var _this = this;
        this._activatedRoute.queryParams.subscribe(function (params) {
            if (params['mode'] == "DRILL") {
                var VCHR = params['voucher'];
                var vparams = [];
                vparams = VCHR.split('-');
                _this._loadingSerive.show("Loading Invoice");
                _this.masterService.LoadTransaction(VCHR, vparams[1], vparams[2]).subscribe(function (res) {
                    if (res.status == "ok") {
                        _this._loadingSerive.hide();
                        _this._trnMainService.TrnMainObj = res.result;
                        _this._trnMainService.TrnMainObj.VoucherType = 17;
                        _this._trnMainService.pageHeading = "Payment Voucher";
                        _this._trnMainService.TrnMainObj.VoucherPrefix = "PV";
                        _this._trnMainService.TrnMainObj.Mode = "VIEW";
                        _this._trnMainService.viewDate.next();
                        _this._trnMainService.calculateCrDrTotal();
                        _this._trnMainService.calculateDrCrDifferences();
                    }
                }, function (err) {
                    _this._loadingSerive.hide();
                    _this._alertService.error(err);
                });
            }
            else if (params['mode'] == "fromLatepost") {
                // alert("params['mode']== Payment voucher ")
                _this.masterService.LoadTransaction(params.voucher, params.DIVISION, params.PHISCALID).subscribe(function (res) {
                    if (res.status == "ok") {
                        _this._loadingSerive.hide();
                        _this._trnMainService.TrnMainObj = res.result;
                        _this._trnMainService.TrnMainObj.VoucherType = 17;
                        _this._trnMainService.pageHeading = "Payment Voucher";
                        _this._trnMainService.TrnMainObj.VoucherPrefix = "PV";
                        _this._trnMainService.TrnMainObj.Mode = "VIEW";
                        _this._trnMainService.viewDate.next();
                    }
                }, function (err) {
                    _this._loadingSerive.hide();
                    _this._alertService.error(err);
                });
            }
            else {
                if (_this._activatedRoute.snapshot.params['from']) {
                    var VCHR = _this._activatedRoute.snapshot.params['voucherNumber'];
                    var params_1 = [];
                    params_1 = VCHR.split('-');
                    _this._loadingSerive.show("Loading Invoice");
                    _this.masterService.LoadTransaction(VCHR, params_1[1], params_1[2]).subscribe(function (res) {
                        if (res.status == "ok") {
                            _this._loadingSerive.hide();
                            _this._trnMainService.TrnMainObj = res.result;
                            _this._trnMainService.TrnMainObj.VoucherType = 17;
                            _this._trnMainService.pageHeading = "Payment Voucher";
                            _this._trnMainService.TrnMainObj.VoucherPrefix = "PV";
                            _this._trnMainService.TrnMainObj.Mode = "VIEW";
                        }
                    }, function (err) {
                        _this._loadingSerive.hide();
                        _this._alertService.error(err);
                    });
                }
                else {
                    _this.TrnMainObj.Mode = "NEW";
                    _this.masterService.ShowMore = false;
                }
            }
        });
        this._trnMainService.DrillMode = "New";
    };
    ExpensesVoucherComponent.prototype.prefixChanged = function (pref) {
        var _this = this;
        try {
            this._trnMainService.prefix = pref;
            this.prefix = pref;
            if (this.TrnMainObj.Mode == "NEW") {
                if (this.TrnMainObj.DIVISION == "" ||
                    this.TrnMainObj.DIVISION == null) {
                    this.TrnMainObj.DIVISION = this.setting.appSetting.DefaultDivision;
                }
                this.masterService.getVoucherNo(this.TrnMainObj).subscribe(function (res) {
                    if (res.status == "ok") {
                        var TMain = res.result;
                        _this.TrnMainObj.VCHRNO = TMain.VCHRNO.substr(2, TMain.VCHRNO.length - 2);
                        _this.TrnMainObj.CHALANNO = TMain.CHALANNO;
                    }
                    else {
                        alert("Failed to retrieve VoucherNo");
                    }
                });
            }
        }
        catch (ex) {
        }
    };
    ExpensesVoucherComponent.prototype.BillTrack = function () {
        this.trnmainentry.BillTrack();
    };
    return ExpensesVoucherComponent;
}());
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])("trnmainentry"),
    __metadata("design:type", __WEBPACK_IMPORTED_MODULE_8__common_Transaction_Components_trntran_voucher_entry_component__["a" /* TrnTranVoucherEntryComponent */])
], ExpensesVoucherComponent.prototype, "trnmainentry", void 0);
ExpensesVoucherComponent = __decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
        selector: "expenses-voucher",
        template: __webpack_require__(1310),
        providers: [__WEBPACK_IMPORTED_MODULE_1__common_Transaction_Components_transaction_service__["a" /* TransactionService */]],
        styles: [__webpack_require__(120)]
    }),
    __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_3__common_repositories_masterRepo_service__["a" /* MasterRepo */],
        __WEBPACK_IMPORTED_MODULE_1__common_Transaction_Components_transaction_service__["a" /* TransactionService */],
        __WEBPACK_IMPORTED_MODULE_5__common_services_index__["c" /* SettingService */],
        __WEBPACK_IMPORTED_MODULE_7__common_services_spinner_spinner_service__["a" /* SpinnerService */],
        __WEBPACK_IMPORTED_MODULE_6__common_services_alert_alert_service__["a" /* AlertService */],
        __WEBPACK_IMPORTED_MODULE_4__angular_router__["ActivatedRoute"]])
], ExpensesVoucherComponent);



/***/ }),

/***/ 1245:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__common_Transaction_Components_transaction_service__ = __webpack_require__(7);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__common_interfaces_TrnMain__ = __webpack_require__(25);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__common_repositories_masterRepo_service__ = __webpack_require__(8);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__angular_router__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_angular2_hotkeys__ = __webpack_require__(51);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_angular2_hotkeys___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5_angular2_hotkeys__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__common_services_index__ = __webpack_require__(21);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__VoucherTracking_VoucherTracking_component__ = __webpack_require__(94);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__common_services_spinner_spinner_service__ = __webpack_require__(20);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__common_services_alert_alert_service__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__common_Transaction_Components_trntran_voucher_entry_component__ = __webpack_require__(557);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return IncomeVoucherComponent; });











var IncomeVoucherComponent = (function () {
    function IncomeVoucherComponent(masterService, _trnMainService, setting, _hotkeysService, _loadingSerive, _alertService, _activatedRoute) {
        this.masterService = masterService;
        this._trnMainService = _trnMainService;
        this.setting = setting;
        this._hotkeysService = _hotkeysService;
        this._loadingSerive = _loadingSerive;
        this._alertService = _alertService;
        this._activatedRoute = _activatedRoute;
        this.TrnMainObj = {};
        this.voucherType = __WEBPACK_IMPORTED_MODULE_2__common_interfaces_TrnMain__["a" /* VoucherTypeEnum */].ReceiveVoucher;
        this.prefix = {};
        this.TrnMainObj = this._trnMainService.TrnMainObj;
        this._trnMainService.initialFormLoad(18);
        this.masterService.ShowMore = false;
    }
    IncomeVoucherComponent.prototype.ngOnInit = function () {
        var _this = this;
        this._activatedRoute.queryParams.subscribe(function (params) {
            if (params['mode'] == "DRILL") {
                var VCHR = params['voucher'];
                var vparams = [];
                vparams = VCHR.split('-');
                _this._loadingSerive.show("Loading Invoice");
                _this.masterService.LoadTransaction(VCHR, vparams[1], vparams[2]).subscribe(function (res) {
                    if (res.status == "ok") {
                        _this._loadingSerive.hide();
                        _this._trnMainService.TrnMainObj = res.result;
                        _this._trnMainService.TrnMainObj.VoucherType = 18;
                        _this._trnMainService.pageHeading = "Receipt Voucher";
                        _this._trnMainService.TrnMainObj.VoucherPrefix = "RV";
                        _this._trnMainService.TrnMainObj.Mode = "VIEW";
                        _this._trnMainService.viewDate.next();
                        _this._trnMainService.calculateCrDrTotal();
                        _this._trnMainService.calculateDrCrDifferences();
                    }
                }, function (err) {
                    _this._loadingSerive.hide();
                    _this._alertService.error(err);
                });
            }
            else if (params['mode'] == "fromLatepost") {
                // alert("params['mode']== Receipt voucher ")
                _this.masterService.LoadTransaction(params.voucher, params.DIVISION, params.PHISCALID).subscribe(function (res) {
                    if (res.status == "ok") {
                        _this._loadingSerive.hide();
                        _this._trnMainService.TrnMainObj = res.result;
                        _this._trnMainService.TrnMainObj.VoucherType = 18;
                        _this._trnMainService.pageHeading = "Receipt Voucher";
                        _this._trnMainService.TrnMainObj.VoucherPrefix = "RV";
                        _this._trnMainService.TrnMainObj.Mode = "VIEW";
                        _this._trnMainService.viewDate.next();
                    }
                }, function (err) {
                    _this._loadingSerive.hide();
                    _this._alertService.error(err);
                });
            }
            else {
                if (_this._activatedRoute.snapshot.params['from']) {
                    var VCHR = _this._activatedRoute.snapshot.params['voucherNumber'];
                    var params_1 = [];
                    params_1 = VCHR.split('-');
                    _this._loadingSerive.show("Loading Invoice");
                    _this.masterService.LoadTransaction(VCHR, params_1[1], params_1[2]).subscribe(function (res) {
                        if (res.status == "ok") {
                            _this._loadingSerive.hide();
                            _this._trnMainService.TrnMainObj = res.result;
                            _this._trnMainService.TrnMainObj.VoucherType = 18;
                            _this._trnMainService.pageHeading = "Receipt Voucher";
                            _this._trnMainService.TrnMainObj.VoucherPrefix = "RV";
                            _this._trnMainService.TrnMainObj.Mode = "VIEW";
                        }
                    }, function (err) {
                        _this._loadingSerive.hide();
                        _this._alertService.error(err);
                    });
                }
                else {
                    _this.TrnMainObj.Mode = "NEW";
                    _this.masterService.ShowMore = false;
                }
            }
        });
        this._trnMainService.DrillMode = "New";
    };
    IncomeVoucherComponent.prototype.prefixChanged = function (pref) {
        var _this = this;
        try {
            this._trnMainService.prefix = pref;
            this.prefix = pref;
            if (this.TrnMainObj.Mode == "NEW") {
                var tMain = { VoucherPrefix: pref.VNAME };
                if (this.TrnMainObj.DIVISION == "" ||
                    this.TrnMainObj.DIVISION == null) {
                    tMain.DIVISION = this.setting.appSetting.DefaultDivision;
                }
                this.masterService.getVoucherNo(tMain).subscribe(function (res) {
                    if (res.status == "ok") {
                        var TMain = res.result;
                        _this.TrnMainObj.VCHRNO = TMain.VCHRNO.substr(2, TMain.VCHRNO.length - 2);
                        _this.TrnMainObj.CHALANNO = TMain.CHALANNO;
                    }
                    else {
                        alert("Failed to retrieve VoucherNo");
                    }
                });
            }
        }
        catch (ex) {
        }
    };
    IncomeVoucherComponent.prototype.BillTrack = function () {
        this.trnmainentry.BillTrack();
    };
    return IncomeVoucherComponent;
}());
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])("voucherTrack"),
    __metadata("design:type", __WEBPACK_IMPORTED_MODULE_7__VoucherTracking_VoucherTracking_component__["a" /* VoucherTrackingComponent */])
], IncomeVoucherComponent.prototype, "VoucherTrackingComponent", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])("trnmainentry"),
    __metadata("design:type", __WEBPACK_IMPORTED_MODULE_10__common_Transaction_Components_trntran_voucher_entry_component__["a" /* TrnTranVoucherEntryComponent */])
], IncomeVoucherComponent.prototype, "trnmainentry", void 0);
IncomeVoucherComponent = __decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
        selector: "income-voucher",
        template: __webpack_require__(1312),
        providers: [__WEBPACK_IMPORTED_MODULE_1__common_Transaction_Components_transaction_service__["a" /* TransactionService */]],
        styles: [__webpack_require__(120)]
    }),
    __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_3__common_repositories_masterRepo_service__["a" /* MasterRepo */],
        __WEBPACK_IMPORTED_MODULE_1__common_Transaction_Components_transaction_service__["a" /* TransactionService */],
        __WEBPACK_IMPORTED_MODULE_6__common_services_index__["c" /* SettingService */],
        __WEBPACK_IMPORTED_MODULE_5_angular2_hotkeys__["HotkeysService"],
        __WEBPACK_IMPORTED_MODULE_8__common_services_spinner_spinner_service__["a" /* SpinnerService */],
        __WEBPACK_IMPORTED_MODULE_9__common_services_alert_alert_service__["a" /* AlertService */],
        __WEBPACK_IMPORTED_MODULE_4__angular_router__["ActivatedRoute"]])
], IncomeVoucherComponent);



/***/ }),

/***/ 1246:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ng2_bootstrap__ = __webpack_require__(26);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__common_popupLists_generic_grid_generic_popup_grid_component__ = __webpack_require__(35);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__common_repositories__ = __webpack_require__(13);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__common_services_alert_alert_service__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__common_services_spinner_spinner_service__ = __webpack_require__(20);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__common_Transaction_Components_transaction_service__ = __webpack_require__(7);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_moment__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_moment___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_7_moment__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__angular_router__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__angular_forms__ = __webpack_require__(3);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return PaymentCollection; });










var PaymentCollection = (function () {
    function PaymentCollection(masterService, loadingService, _transactionService, alertService, router, _fb) {
        this.masterService = masterService;
        this.loadingService = loadingService;
        this._transactionService = _transactionService;
        this.alertService = alertService;
        this.router = router;
        this._fb = _fb;
        this.gridACListPopupSettings = new __WEBPACK_IMPORTED_MODULE_2__common_popupLists_generic_grid_generic_popup_grid_component__["b" /* GenericPopUpSettings */]();
        this.gridvchrnoListPopupSettings = new __WEBPACK_IMPORTED_MODULE_2__common_popupLists_generic_grid_generic_popup_grid_component__["b" /* GenericPopUpSettings */]();
        this.gridCostSalesManPopupSetting = new __WEBPACK_IMPORTED_MODULE_2__common_popupLists_generic_grid_generic_popup_grid_component__["b" /* GenericPopUpSettings */]();
        this.gridPopupSettings = new __WEBPACK_IMPORTED_MODULE_2__common_popupLists_generic_grid_generic_popup_grid_component__["b" /* GenericPopUpSettings */]();
        this.DetailObj = {};
        this.PayMainObj = {};
        this.isViewMode = false;
        this.EntryDate = {};
        this.reset();
        // this.masterService.focusAnyControl("ACCODEInput_Cust" + 1)
        this._transactionService.DrillMode = "New";
        this.CellPayForm = this._fb.group({
            merchant_id: [''],
            product_id: [''],
            description: [''],
            amount: [''],
            quantity: [''],
            invoice_number: [''],
            sucess_callback: [''],
            failure_callback: [''],
            transaction_type: [''],
            cancel_callback: [''],
            is_live: ['']
        });
    }
    PaymentCollection.prototype.reset = function () {
        var _this = this;
        var guid = null;
        var uuidV1 = __webpack_require__(32);
        guid = uuidV1();
        this.DetailObj = {};
        this.DetailList = [];
        var nulltt = {};
        nulltt.customerName = '';
        nulltt.BillNo = '';
        nulltt.Amount = 0;
        nulltt.PaymentMode = 'Cheque',
            nulltt.ChequeDate = this._transactionService.transformDate(new Date()),
            nulltt.ChequeNo = '',
            nulltt.CostCenter = '';
        nulltt.isChequeMode = true;
        nulltt.GUID = guid;
        nulltt.IsStatusOne = false;
        nulltt.STATUS = '0';
        this.DetailList.push(nulltt);
        this.isViewMode = false;
        this.mode = "NEW";
        this.EntryDate.RECEIVEDATEIS = this._transactionService.transformDate(new Date());
        this.changeEntryDate(this.EntryDate.RECEIVEDATEIS, 'AD');
        // this.masterService.focusAnyControl("ACCODEInput_Cust" + 0)
        setTimeout(function () {
            _this.customerInput.nativeElement.focus();
        }, 10);
        this.rowIndex = 0;
    };
    PaymentCollection.prototype.ngAfterViewInit = function () { };
    PaymentCollection.prototype.saveClick = function () {
        var _this = this;
        this.ValidateSaveObj();
        // ////console.log("@@this.DetailList",this.DetailList)
        var EmptyChequeNo = this.DetailList.filter(function (x) { return x.PaymentMode == "Cheque" && x.ChequeNo == ""; });
        ////console.log("EmptyChequeNo", EmptyChequeNo)
        if (EmptyChequeNo.length > 0) {
            this.alertService.info("Please Enter Cheque No. and Cheque Date for Payment Mode Cheque");
            return;
        }
        if (this._transactionService.subtractDates(this._transactionService.transformDatetoMMddYY(new Date()), this._transactionService.transformDatetoMMddYY(this.EntryDate.RECEIVEDATEIS)) > 0) {
            this.alertService.info("Received Date should not be future date!");
            return;
        }
        this.PayMainObj.PList = this.DetailList;
        if (!this.EntryDate.RECEIVEDATEIS) {
            this.EntryDate.RECEIVEDATEIS = this._transactionService.transformDate(new Date());
        }
        this.EntryDate.mode = this.mode;
        var bodyData = { data: this.PayMainObj, EntryDate: this.EntryDate };
        if (this.DetailList.length > 0) {
            this.loadingService.show("Please wait. Saving Payment Collection.");
            this.masterService.savePaymentCollection(bodyData).subscribe(function (x) {
                if (x.status == "ok") {
                    _this.reset();
                    _this.loadingService.hide();
                    _this.alertService.info("Payment Collection saved successfully.");
                }
                else {
                    _this.loadingService.hide();
                    _this.alertService.error(x.result);
                }
            }, function (error) {
                _this.loadingService.hide();
                // ////console.log("@@error",error)
            });
        }
    };
    PaymentCollection.prototype.changeEntryDate = function (value, format) {
        var adbs = __webpack_require__(19);
        if (format == "AD") {
            var yearValue = __WEBPACK_IMPORTED_MODULE_7_moment__(value).year();
            if (yearValue.toString().length == 4) {
                var adDate = (value.replace("-", "/")).replace("-", "/");
                var bsDate = adbs.ad2bs(adDate);
                bsDate.en.month = bsDate.en.month <= 9 ? "0" + (bsDate.en.month) : bsDate.en.month;
                this.EntryDate.BSDATE =
                    this.masterService.toADDate(value);
            }
            // this.VoucherEntry.BSDATE1.disableBefore = 5/4/2020;
        }
        else if (format == "BS") {
            var datearr = value.split('/');
            var bsDate_1 = datearr[2] + "/" + datearr[1] + "/" + datearr[0];
            var yearValue = __WEBPACK_IMPORTED_MODULE_7_moment__(value).year();
            ////console.log("momentyes", yearValue);
            // var bsDate = (value.replace("-", "/")).replace("-", "/");
            var adDate = adbs.bs2ad(bsDate_1);
            this.EntryDate.RECEIVEDATEIS = this.masterService.toADDate(value);
        }
    };
    PaymentCollection.prototype.ValidateSaveObj = function () {
        var _this = this;
        this.DetailList.forEach(function (element) {
            var indexnum = 0;
            if (element.ACID) {
                if (element.ACID == '' || element.ACID == undefined || element.ACID == null) {
                    indexnum += 1;
                    _this.DetailList.splice(indexnum);
                    return true;
                }
            }
            if (!element.ACID) {
                _this.DetailList.splice(-1);
            }
        });
        var index = this.DetailList.findIndex(function (x) { return x.STATUS == '1'; });
        if (index >= 0) {
            this.DetailList.splice(index);
        }
        this.DetailList.forEach(function (element) {
            if (element.Amount <= 0) {
                _this.alertService.warning("Amount is missing");
                return;
            }
        });
    };
    PaymentCollection.prototype.NextRow = function () {
        if (this.DetailList.length > 0) {
            if (!this.DetailList[this.DetailList.length - 1].ACID) {
                return;
            }
        }
        var guid = null;
        var uuidV1 = __webpack_require__(32);
        guid = uuidV1();
        this.rowIndex = this.rowIndex + 1;
        this.DetailObj = {};
        this.DetailObj.PaymentMode = 'Cheque',
            this.DetailObj.isChequeMode = true;
        this.DetailObj.ChequeDate = this._transactionService.transformDate(new Date());
        this.DetailObj.GUID = guid;
        this.DetailObj.IsStatusOne = false;
        this.DetailObj.STATUS = '0';
        this.DetailList.push(this.DetailObj);
    };
    PaymentCollection.prototype.NewRowForSalesman = function () {
        if (this.DetailList.length > 0) {
            if (!this.DetailList[this.DetailList.length - 1].ACID) {
                return;
            }
        }
        var guid = null;
        var uuidV1 = __webpack_require__(32);
        guid = uuidV1();
        this.DetailObj = {};
        this.DetailObj.PaymentMode = 'Cheque',
            this.DetailObj.isChequeMode = true;
        this.DetailObj.ChequeDate = this._transactionService.transformDate(new Date());
        this.DetailObj.GUID = guid;
        this.DetailObj.IsStatusOne = false;
        this.DetailObj.STATUS = '0';
        this.DetailList.push(this.DetailObj);
    };
    PaymentCollection.prototype.showAcList = function (i) {
        this._transactionService.TrnMainObj.TRNMODE = "Customer_Pay";
        var TRNMODE = "" + this._transactionService.TrnMainObj.TRNMODE;
        this.gridACListPopupSettings = {
            title: "Accounts",
            apiEndpoints: "/getAccountPagedListByMapId/Details/" + TRNMODE,
            defaultFilterIndex: 1,
            columns: [
                {
                    key: "ACID",
                    title: "AC CODE",
                    hidden: false,
                    noSearch: false
                },
                {
                    key: "ACNAME",
                    title: "A/C NAME",
                    hidden: false,
                    noSearch: false
                }
            ]
        };
        this.genericGridACList.show();
    };
    PaymentCollection.prototype.onAcSelect = function (acItem) {
        ////console.log("ChecKVa@", acItem, this.rowIndex);
        this.DetailList[this.rowIndex].customerName = acItem.ACNAME;
        this.DetailList[this.rowIndex].ACID = this.custAcid = acItem.ACID;
        this.masterService.focusAnyControl('BillInput' + this.rowIndex);
        // this.onBillShow();
    };
    PaymentCollection.prototype.onBillShow = function () {
        if (!this.custAcid) {
            this.alertService.warning("Please select the customer first!");
        }
        this.gridvchrnoListPopupSettings = {
            title: "BillList",
            apiEndpoints: "/getAllTrnMainFromParty/" + this.custAcid,
            defaultFilterIndex: 0,
            columns: [
                {
                    key: "vchrno",
                    title: "VCHRNO",
                    hidden: false,
                    noSearch: false
                },
                {
                    key: "trndate",
                    title: "TRNDATE",
                    hidden: false,
                    noSearch: false
                },
                {
                    key: "billto",
                    title: "CUSTOMER",
                    hidden: false,
                    noSearch: false
                }
            ]
        };
        this.genericGridACList.hide();
        this.genericVchrnoList.show();
    };
    PaymentCollection.prototype.rowClick = function (i) {
        this.rowIndex = i;
    };
    PaymentCollection.prototype.onVchrnoSelect = function (value) {
        this.DetailList[this.rowIndex].BillNo = value.vchrno;
        // this.DetailList[this.rowIndex].Amount = value.netamnt;
        this.genericGridACList.hide();
        this.masterService.focusAnyControl('amountInput' + this.rowIndex);
    };
    PaymentCollection.prototype.clearRow = function (value) {
        this.DetailList.splice(this.rowIndex);
    };
    PaymentCollection.prototype.onSalesManSelect = function (value) {
        this.DetailList[this.rowIndex].CostCenter = value.Name;
        this.rowIndex = this.rowIndex + 1;
        this.masterService.focusAnyControl('ACCODEInput_Cust' + this.rowIndex);
    };
    PaymentCollection.prototype.EnterClick = function () {
        this.gridCostSalesManPopupSetting = {
            title: "Salesman List",
            apiEndpoints: "/getSalesManPageList",
            defaultFilterIndex: 0,
            columns: [
                {
                    key: "Name",
                    title: "Salesman",
                    hidden: false,
                    noSearch: false
                }
            ]
        };
        this.genericeSalesManList.show();
    };
    PaymentCollection.prototype.DisableInputFunction = function () {
        if (this.mode == 'EDIT') {
            this;
        }
    };
    PaymentCollection.prototype.ChangePMode = function (value) {
        this.DetailList[this.rowIndex].ChequeNo = '';
        this.DetailList[this.rowIndex].PaymentMode == "Cheque" ?
            this.DetailList[this.rowIndex].isChequeMode = true :
            this.DetailList[this.rowIndex].isChequeMode = false;
        if (this.DetailList[this.rowIndex].PaymentMode == "Cheque") {
            this.DetailList[this.rowIndex].ChequeDate = this._transactionService.transformDate(new Date());
            // document.getElementById('chequeNo_Pay'+this.rowIndex).focus();
            // this.masterService.focusAnyControl("chequeNo_Pay"+this.rowIndex);
        }
        else {
            this.DetailList[this.rowIndex].ChequeDate = null;
            this.masterService.focusAnyControl("sm_Pay" + this.rowIndex);
            // this.checkValidation(this.DetailList[this.rowIndex]);
        }
    };
    PaymentCollection.prototype.checkValidation = function (i) {
        var sameCustomer = this.DetailList.filter(function (x) { return x.customerName == i.customerName && x.BillNo == i.BillNo && x.CostCenter == i.CostCenter; });
        if (sameCustomer.length > 1) {
            if (confirm("Same Customer, Bill No. and Costcenter detected. Do you want to continue?")) {
            }
            else {
                return;
            }
        }
        if (i.customerName && i.customerName != "") {
            if (i.PaymentMode == "Cheque") {
                if (i.ChequeNo === "" || i.ChequeNo == null || i.ChequeNo === undefined || i.ChequeNo == undefined) {
                    this.alertService.info("Please Enter Cheque No.");
                    return;
                }
                if (!i.ChequeDate) {
                    this.alertService.info("Please Enter Cheque Date.");
                    return;
                }
            }
        }
        if (this.mode == 'NEW') {
            if (i.customerName && i.customerName != "") {
                this.NewRowForSalesman();
            }
        }
    };
    PaymentCollection.prototype.SelectDate = function () {
        this.ShowDate.show();
    };
    PaymentCollection.prototype.ShowDateOk = function () {
        var _this = this;
        this.masterService.getReceiveLogDataFromDate(this.SelectedPopupDate, 'PC').subscribe((function (x) {
            if (x.status == 'ok') {
                _this.DetailList.splice(0);
                if (x.result) {
                    for (var _i = 0, _a = x.result; _i < _a.length; _i++) {
                        var i = _a[_i];
                        var val = {};
                        val.customerName = i.customerName;
                        val.BillNo = i.BillNO;
                        val.Amount = i.Amount;
                        val.PaymentMode = i.PaymentMode;
                        val.ChequeNo = i.ChequeNo;
                        val.ChequeDate = _this._transactionService.transformDate(i.ChequeDate);
                        val.CostCenter = i.CostCenter;
                        _this.DetailList.push(val);
                    }
                }
                _this.ShowDate.hide();
            }
        }));
    };
    PaymentCollection.prototype.ShoWdateClose = function () {
        this.ShowDate.hide();
    };
    PaymentCollection.prototype.view = function () {
        this.mode = "VIEW";
        this.gridPopupSettings = this.masterService.getGenericGridPopUpSettings('PAYMENTCOLLECTION');
        this.genericGrid.show('', false, "paymentcollectionview");
    };
    PaymentCollection.prototype.edit = function () {
        this.mode = "EDIT";
        this.gridPopupSettings = this.masterService.getGenericGridPopUpSettings('PAYMENTCOLLECTION');
        this.genericGrid.show('', false, "paymentcollectionedit");
    };
    PaymentCollection.prototype.delete = function () {
        var _this = this;
        this.masterService.deletePaymentCollection(this.SelectedPopupDate).subscribe(function (x) {
            if (x.status == 'ok') {
                _this.reset();
            }
        });
    };
    PaymentCollection.prototype.onItemDoubleClick = function (event) {
        var _this = this;
        this.SelectedPopupDate = event.RECEIVEDATE;
        this.masterService.getReceiveLogDataFromDate(this.SelectedPopupDate, 'PC').subscribe((function (x) {
            if (x.status == 'ok') {
                if (x.result.length == 0) {
                    _this.ShowDate.hide();
                    _this.alertService.info("No data found on " + _this.SelectedPopupDate);
                    return;
                }
                _this.DetailList = [];
                if (x.result) {
                    for (var _i = 0, _a = x.result; _i < _a.length; _i++) {
                        var i = _a[_i];
                        var val = {};
                        // ////console.log("@@i",i)
                        val.customerName = i.customerName;
                        val.BillNo = i.BillNO;
                        val.Amount = i.Amount;
                        val.PaymentMode = i.PaymentMode;
                        val.ChequeNo = i.ChequeNo;
                        if (i.PaymentMode == "Cheque") {
                            val.ChequeDate = _this._transactionService.transformDate(i.ChequeDate);
                            val.isChequeMode = true;
                        }
                        val.CostCenter = i.CostCenter;
                        val.STATUS = i.STATUS;
                        val.ACID = i.ACID;
                        val.GUID = i.GUID;
                        if (i.STATUS == '1') {
                            val.IsStatusOne = true;
                        }
                        _this.DetailList.push(val);
                        _this.EntryDate.RECEIVEDATEIS = _this._transactionService.transformDate(i.ReceiveDate);
                    }
                }
                _this.ShowDate.hide();
            }
        }));
        if (this.mode == "EDIT") {
            this.isViewMode = false;
        }
        else if (this.mode == "VIEW") {
            this.isViewMode = true;
        }
    };
    PaymentCollection.prototype.focusPmode = function (value) {
        this.masterService.focusAnyControl('PmodeInput' + this.rowIndex);
    };
    PaymentCollection.prototype.focusChequeDate = function (value) {
        this.masterService.focusAnyControl('chequeDate' + this.rowIndex);
    };
    PaymentCollection.prototype.focusSalesman = function (value) {
        this.masterService.focusAnyControl('sm_Pay' + this.rowIndex);
        // this.checkValidation(this.DetailList[this.rowIndex]);
    };
    PaymentCollection.prototype.focusCustomer = function () {
        var _this = this;
        setTimeout(function () {
            _this.customerInput.nativeElement.focus();
        }, 10);
        this.rowIndex = 0;
    };
    PaymentCollection.prototype.focusChequeNo = function (i) {
        if (i.PaymentMode == "Cheque") {
            this.masterService.focusAnyControl('chequeNo_Pay' + this.rowIndex);
        }
    };
    PaymentCollection.prototype.Focus_Salesman = function () {
        this.checkValidation(this.DetailList[this.rowIndex]);
    };
    PaymentCollection.prototype.handleKeyDownboardEvent = function ($event) {
        if ($event.code == "F3") {
            $event.preventDefault();
            this.reset();
        }
        else if ($event.code == "F6") {
            $event.preventDefault();
            this.saveClick();
        }
        else if ($event.code == "F5") {
            $event.preventDefault();
            this.edit();
        }
        else if ($event.code == "F4") {
            $event.preventDefault();
            this.view();
        }
        else if ($event.code == "F10") {
            $event.preventDefault();
            this.back();
        }
    };
    PaymentCollection.prototype.back = function () {
        this.returnUrl = "/pages/dashboard/dashboard";
        this.router.navigate([this.returnUrl]);
    };
    return PaymentCollection;
}());
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])("genericGridACList"),
    __metadata("design:type", __WEBPACK_IMPORTED_MODULE_2__common_popupLists_generic_grid_generic_popup_grid_component__["c" /* GenericPopUpComponent */])
], PaymentCollection.prototype, "genericGridACList", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])("genericVchrnoList"),
    __metadata("design:type", __WEBPACK_IMPORTED_MODULE_2__common_popupLists_generic_grid_generic_popup_grid_component__["c" /* GenericPopUpComponent */])
], PaymentCollection.prototype, "genericVchrnoList", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])("genericeSalesManList"),
    __metadata("design:type", __WEBPACK_IMPORTED_MODULE_2__common_popupLists_generic_grid_generic_popup_grid_component__["c" /* GenericPopUpComponent */])
], PaymentCollection.prototype, "genericeSalesManList", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])('ShowDate'),
    __metadata("design:type", __WEBPACK_IMPORTED_MODULE_1_ng2_bootstrap__["b" /* ModalDirective */])
], PaymentCollection.prototype, "ShowDate", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])("genericGrid"),
    __metadata("design:type", __WEBPACK_IMPORTED_MODULE_2__common_popupLists_generic_grid_generic_popup_grid_component__["c" /* GenericPopUpComponent */])
], PaymentCollection.prototype, "genericGrid", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])('ShowCellPay'),
    __metadata("design:type", __WEBPACK_IMPORTED_MODULE_1_ng2_bootstrap__["b" /* ModalDirective */])
], PaymentCollection.prototype, "ShowCellPay", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])('customerInput'),
    __metadata("design:type", __WEBPACK_IMPORTED_MODULE_0__angular_core__["ElementRef"])
], PaymentCollection.prototype, "customerInput", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])('chequeDate'),
    __metadata("design:type", __WEBPACK_IMPORTED_MODULE_0__angular_core__["ElementRef"])
], PaymentCollection.prototype, "chequeDate", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["HostListener"])("document : keydown", ["$event"]),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [KeyboardEvent]),
    __metadata("design:returntype", void 0)
], PaymentCollection.prototype, "handleKeyDownboardEvent", null);
PaymentCollection = __decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
        selector: 'PaymentCollection',
        template: __webpack_require__(1314)
    }),
    __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_3__common_repositories__["a" /* MasterRepo */], __WEBPACK_IMPORTED_MODULE_5__common_services_spinner_spinner_service__["a" /* SpinnerService */],
        __WEBPACK_IMPORTED_MODULE_6__common_Transaction_Components_transaction_service__["a" /* TransactionService */], __WEBPACK_IMPORTED_MODULE_4__common_services_alert_alert_service__["a" /* AlertService */],
        __WEBPACK_IMPORTED_MODULE_8__angular_router__["Router"], __WEBPACK_IMPORTED_MODULE_9__angular_forms__["FormBuilder"]])
], PaymentCollection);



/***/ }),

/***/ 1247:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__common_Transaction_Components_transaction_service__ = __webpack_require__(7);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__common_interfaces_TrnMain__ = __webpack_require__(25);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__common_repositories_masterRepo_service__ = __webpack_require__(8);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__angular_router__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_angular2_hotkeys__ = __webpack_require__(51);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_angular2_hotkeys___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5_angular2_hotkeys__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__common_services_index__ = __webpack_require__(21);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__VoucherTracking_VoucherTracking_component__ = __webpack_require__(94);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__common_services_spinner_spinner_service__ = __webpack_require__(20);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__common_services_alert_alert_service__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__common_Transaction_Components_trntran_voucher_entry_component__ = __webpack_require__(557);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return PostDirectoryComponent; });











var PostDirectoryComponent = (function () {
    function PostDirectoryComponent(masterService, _trnMainService, setting, _hotkeysService, _loadingSerive, _alertService, _activatedRoute) {
        this.masterService = masterService;
        this._trnMainService = _trnMainService;
        this.setting = setting;
        this._hotkeysService = _hotkeysService;
        this._loadingSerive = _loadingSerive;
        this._alertService = _alertService;
        this._activatedRoute = _activatedRoute;
        this.TrnMainObj = {};
        this.voucherType = __WEBPACK_IMPORTED_MODULE_2__common_interfaces_TrnMain__["a" /* VoucherTypeEnum */].PostDirectory;
        this.prefix = {};
        this.TrnMainObj = this._trnMainService.TrnMainObj;
        this._trnMainService.initialFormLoad(72);
        this.masterService.ShowMore = false;
    }
    PostDirectoryComponent.prototype.ngOnInit = function () {
        var _this = this;
        this._activatedRoute.queryParams.subscribe(function (params) {
            if (params['mode'] == "DRILL") {
                var VCHR = params['voucher'];
                var vparams = [];
                vparams = VCHR.split('-');
                _this._loadingSerive.show("Loading Invoice");
                _this.masterService.LoadTransaction(VCHR, vparams[1], vparams[2]).subscribe(function (res) {
                    if (res.status == "ok") {
                        _this._loadingSerive.hide();
                        _this._trnMainService.TrnMainObj = res.result;
                        _this._trnMainService.TrnMainObj.VoucherType = 72;
                        _this._trnMainService.pageHeading = "Post Directory";
                        _this._trnMainService.TrnMainObj.VoucherPrefix = "PC";
                        _this._trnMainService.TrnMainObj.Mode = "VIEW";
                        _this._trnMainService.viewDate.next();
                        _this._trnMainService.calculateCrDrTotal();
                        _this._trnMainService.calculateDrCrDifferences();
                    }
                }, function (err) {
                    _this._loadingSerive.hide();
                    _this._alertService.error(err);
                });
            }
            else {
                if (_this._activatedRoute.snapshot.params['from']) {
                    var VCHR = _this._activatedRoute.snapshot.params['voucherNumber'];
                    var params_1 = [];
                    params_1 = VCHR.split('-');
                    _this._loadingSerive.show("Loading Invoice");
                    _this.masterService.LoadTransaction(VCHR, params_1[1], params_1[2]).subscribe(function (res) {
                        if (res.status == "ok") {
                            _this._loadingSerive.hide();
                            _this._trnMainService.TrnMainObj = res.result;
                            _this._trnMainService.TrnMainObj.VoucherType = 72;
                            _this._trnMainService.pageHeading = "Post Directory";
                            _this._trnMainService.TrnMainObj.VoucherPrefix = "PC";
                            _this._trnMainService.TrnMainObj.Mode = "VIEW";
                        }
                    }, function (err) {
                        _this._loadingSerive.hide();
                        _this._alertService.error(err);
                    });
                }
                else {
                    _this.TrnMainObj.Mode = "NEW";
                    _this.masterService.ShowMore = false;
                    _this._trnMainService.TrnMainObj.TRNMODE = 'Party Receipt';
                }
            }
        });
    };
    PostDirectoryComponent.prototype.prefixChanged = function (pref) {
        var _this = this;
        try {
            this._trnMainService.prefix = pref;
            this.prefix = pref;
            if (this.TrnMainObj.Mode == "NEW") {
                var tMain = { VoucherPrefix: pref.VNAME };
                if (this.TrnMainObj.DIVISION == "" ||
                    this.TrnMainObj.DIVISION == null) {
                    tMain.DIVISION = this.setting.appSetting.DefaultDivision;
                }
                this.masterService.getVoucherNo(tMain).subscribe(function (res) {
                    if (res.status == "ok") {
                        var TMain = res.result;
                        _this.TrnMainObj.VCHRNO = TMain.VCHRNO.substr(2, TMain.VCHRNO.length - 2);
                        _this.TrnMainObj.CHALANNO = TMain.CHALANNO;
                    }
                    else {
                        alert("Failed to retrieve VoucherNo");
                    }
                });
            }
        }
        catch (ex) {
        }
    };
    PostDirectoryComponent.prototype.BillTrack = function () {
        this.trnmainentry.BillTrack();
    };
    return PostDirectoryComponent;
}());
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])("voucherTrack"),
    __metadata("design:type", __WEBPACK_IMPORTED_MODULE_7__VoucherTracking_VoucherTracking_component__["a" /* VoucherTrackingComponent */])
], PostDirectoryComponent.prototype, "VoucherTrackingComponent", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])("trnmainentry"),
    __metadata("design:type", __WEBPACK_IMPORTED_MODULE_10__common_Transaction_Components_trntran_voucher_entry_component__["a" /* TrnTranVoucherEntryComponent */])
], PostDirectoryComponent.prototype, "trnmainentry", void 0);
PostDirectoryComponent = __decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
        selector: "postdirectory",
        template: __webpack_require__(1315),
        providers: [__WEBPACK_IMPORTED_MODULE_1__common_Transaction_Components_transaction_service__["a" /* TransactionService */]],
        styles: [__webpack_require__(120)]
    }),
    __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_3__common_repositories_masterRepo_service__["a" /* MasterRepo */],
        __WEBPACK_IMPORTED_MODULE_1__common_Transaction_Components_transaction_service__["a" /* TransactionService */],
        __WEBPACK_IMPORTED_MODULE_6__common_services_index__["c" /* SettingService */],
        __WEBPACK_IMPORTED_MODULE_5_angular2_hotkeys__["HotkeysService"],
        __WEBPACK_IMPORTED_MODULE_8__common_services_spinner_spinner_service__["a" /* SpinnerService */],
        __WEBPACK_IMPORTED_MODULE_9__common_services_alert_alert_service__["a" /* AlertService */],
        __WEBPACK_IMPORTED_MODULE_4__angular_router__["ActivatedRoute"]])
], PostDirectoryComponent);



/***/ }),

/***/ 1248:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__common_Transaction_Components_transaction_service__ = __webpack_require__(7);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__common_interfaces_TrnMain__ = __webpack_require__(25);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__common_repositories_masterRepo_service__ = __webpack_require__(8);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__common_services_setting_service__ = __webpack_require__(72);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__common_services_spinner_spinner_service__ = __webpack_require__(20);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__common_services_alert_alert_service__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__angular_router__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__common_services_permission__ = __webpack_require__(15);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ReverseCreditNoteComponent; });









var ReverseCreditNoteComponent = (function () {
    function ReverseCreditNoteComponent(masterService, _trnMainService, setting, _loadingSerive, _alertService, _activatedRoute, authservice) {
        this.masterService = masterService;
        this._trnMainService = _trnMainService;
        this.setting = setting;
        this._loadingSerive = _loadingSerive;
        this._alertService = _alertService;
        this._activatedRoute = _activatedRoute;
        this.authservice = authservice;
        this.TrnMainObj = {};
        this.voucherType = __WEBPACK_IMPORTED_MODULE_2__common_interfaces_TrnMain__["a" /* VoucherTypeEnum */].ReverseCreditNote;
        this.prefix = {};
        this.TrnMainObj = _trnMainService.TrnMainObj;
        this._trnMainService.initialFormLoad(41);
        this._trnMainService.TrnMainObj.VATBILL = 0;
        this.userSetting = authservice.getSetting();
    }
    ReverseCreditNoteComponent.prototype.ngOnInit = function () {
        var _this = this;
        this._activatedRoute.queryParams.subscribe(function (params) {
            if (params['mode'] == "DRILL") {
                var VCHR = params['voucher'];
                var vparams = [];
                vparams = VCHR.split('-');
                _this._loadingSerive.show("Loading Invoice");
                _this.masterService.LoadTransaction(VCHR, vparams[1], vparams[2]).subscribe(function (res) {
                    if (res.status == "ok") {
                        _this._loadingSerive.hide();
                        _this._trnMainService.TrnMainObj = res.result;
                        //console.log("salesreturn", this.userSetting,this.userSetting.Vat_Sales)
                        var abc = _this._trnMainService.TrnMainObj.TrntranList.findIndex(function (x) { return x.A_ACID == _this.userSetting.Vat_Sales; });
                        //console.log("abc", abc)
                        if (abc >= 0) {
                            _this._trnMainService.TrnMainObj.TrntranList.splice(abc, 1);
                        }
                        _this._trnMainService.TrnMainObj.VoucherType = 41;
                        _this._trnMainService.pageHeading = "Reverse Credit Note";
                        _this._trnMainService.TrnMainObj.VoucherPrefix = "RR";
                        _this._trnMainService.TrnMainObj.Mode = "VIEW";
                        _this._trnMainService.viewDate.next();
                    }
                }, function (err) {
                    _this._loadingSerive.hide();
                    _this._alertService.error(err);
                });
            }
            else {
                _this._trnMainService.TrnMainObj.Mode = "NEW";
                _this.masterService.ShowMore = false;
                _this._trnMainService.TrnMainObj.ProdList = [];
                _this._trnMainService.TrnMainObj.IsAccountBase = true;
                _this._trnMainService.TrnMainObj.CNDN_MODE = 1;
            }
        });
    };
    ReverseCreditNoteComponent.prototype.prefixChanged = function (pref) {
        var _this = this;
        try {
            this._trnMainService.prefix = pref;
            this.prefix = pref;
            if (this.TrnMainObj.Mode == "NEW") {
                var tMain = { VoucherPrefix: pref.VNAME };
                if (this.TrnMainObj.DIVISION == "" ||
                    this.TrnMainObj.DIVISION == null) {
                    tMain.DIVISION = this.setting.appSetting.DefaultDivision;
                }
                this.masterService.getVoucherNo(tMain).subscribe(function (res) {
                    if (res.status == "ok") {
                        var TMain = res.result;
                        _this.TrnMainObj.VCHRNO = TMain.VCHRNO.substr(2, TMain.VCHRNO.length - 2);
                        _this.TrnMainObj.CHALANNO = TMain.CHALANNO;
                    }
                    else {
                        alert("Failed to retrieve VoucherNo");
                    }
                });
            }
        }
        catch (ex) {
        }
    };
    return ReverseCreditNoteComponent;
}());
ReverseCreditNoteComponent = __decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
        selector: "reverse-credit-note",
        template: __webpack_require__(1316),
        providers: [__WEBPACK_IMPORTED_MODULE_1__common_Transaction_Components_transaction_service__["a" /* TransactionService */]],
        styles: [__webpack_require__(120)]
    }),
    __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_3__common_repositories_masterRepo_service__["a" /* MasterRepo */],
        __WEBPACK_IMPORTED_MODULE_1__common_Transaction_Components_transaction_service__["a" /* TransactionService */],
        __WEBPACK_IMPORTED_MODULE_4__common_services_setting_service__["a" /* SettingService */],
        __WEBPACK_IMPORTED_MODULE_5__common_services_spinner_spinner_service__["a" /* SpinnerService */],
        __WEBPACK_IMPORTED_MODULE_6__common_services_alert_alert_service__["a" /* AlertService */],
        __WEBPACK_IMPORTED_MODULE_7__angular_router__["ActivatedRoute"],
        __WEBPACK_IMPORTED_MODULE_8__common_services_permission__["a" /* AuthService */]])
], ReverseCreditNoteComponent);



/***/ }),

/***/ 1249:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__common_Transaction_Components_transaction_service__ = __webpack_require__(7);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__common_popupLists_generic_grid_generic_popup_grid_component__ = __webpack_require__(35);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__common_repositories_masterRepo_service__ = __webpack_require__(8);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__common_services_permission_authService_service__ = __webpack_require__(17);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__theme_pipes__ = __webpack_require__(560);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return AccountHeadingWiseDepreciationDetailComponent; });






var AccountHeadingWiseDepreciationDetailComponent = (function () {
    function AccountHeadingWiseDepreciationDetailComponent(_transactionService, masterService, authService) {
        var _this = this;
        this._transactionService = _transactionService;
        this.masterService = masterService;
        this.authService = authService;
        this.gridACListPopupSettings = new __WEBPACK_IMPORTED_MODULE_2__common_popupLists_generic_grid_generic_popup_grid_component__["b" /* GenericPopUpSettings */]();
        this.rowIndex = 0;
        this.PartyInfo = [];
        this.costlists = [];
        this.PartyBalanceData = {};
        this.userProfile = {};
        this.userProfile = this.authService.getUserProfile();
        this.PartyBalanceData.DATE1 = this.masterService.PhiscalObj.BeginDate.split('T')[0];
        this.changeEntryDate(this.PartyBalanceData.DATE1, "AD");
        this.PartyBalanceData.DATE2 = this.masterService.PhiscalObj.EndDate.split('T')[0];
        this.changeEndDate(this.PartyBalanceData.DATE2, "AD");
        this.PartyBalanceData.INCLUDECASHTRANSACTION = 0;
        this.masterService.getAllNEWCostCenter().subscribe(function (res) {
            if (res) {
                _this.costlists = res.result;
            }
        }, function (error) {
            _this.costlists = [];
        });
        this.PartyBalanceData.PARTYTYPE = "C";
    }
    AccountHeadingWiseDepreciationDetailComponent.prototype.showAcList = function (i) {
        this._transactionService.TrnMainObj.TRNMODE = "SinglePayment_Party";
        var TRNMODE = "" + this._transactionService.TrnMainObj.TRNMODE;
        if (this.PartyBalanceData.PARTYTYPE == "C") {
            TRNMODE = "PartyBalance_Customer";
        }
        else {
            TRNMODE = "SinglePayment_Party";
        }
        this.gridACListPopupSettings = {
            title: "Accounts",
            apiEndpoints: "/getAccountPagedListByMapId/Details/" + TRNMODE,
            defaultFilterIndex: 1,
            columns: [
                {
                    key: "ACID",
                    title: "AC CODE",
                    hidden: false,
                    noSearch: false
                },
                {
                    key: "ACNAME",
                    title: "A/C NAME",
                    hidden: false,
                    noSearch: false
                }
            ]
        };
        this.genericGridACList.show();
    };
    // ngOnInit(){
    //   this.changeEntryDate(this.PartyBalanceData.DATE1, "AD");
    //   this.changeEndDate(this.PartyBalanceData.DATE2, "AD");
    // }
    AccountHeadingWiseDepreciationDetailComponent.prototype.onAcSelect = function (acItem) {
        //console.log('sdgfgsdh', acItem);
        this.PartyBalanceData.CUSTOMERNAME = acItem.ACNAME;
        this.PartyBalanceData.ACID = acItem.ACID;
        this.PartyBalanceData.PANNO = acItem.VATNO;
        this.PartyBalanceData.COMPANYADDRESS = acItem.ADDRESS;
        //  this.setFocus();
    };
    AccountHeadingWiseDepreciationDetailComponent.prototype.setFocus = function () {
        document.getElementById('Name0').focus();
    };
    AccountHeadingWiseDepreciationDetailComponent.prototype.onLoad = function () {
        var _this = this;
        // //console.log('hello its working',this.PartyBalanceData);
        this.PartyBalanceData.DIVISION = this.userProfile.CompanyInfo.INITIAL;
        this.PartyBalanceData.PHISCALID = this.userProfile.CompanyInfo.PhiscalID;
        this.PartyBalanceData.COMPANYID = this.userProfile.CompanyInfo.COMPANYID;
        if (!this.PartyBalanceData.COSTCENTER) {
            this.PartyBalanceData.COSTCENTER = '%';
        }
        if (!this.PartyBalanceData.ACID) {
            this.PartyBalanceData.ACID = '%';
        }
        this.masterService.LoadPartyBalanceData(this.PartyBalanceData).subscribe(function (res) {
            //console.log("@@@res.result",res.result)
            _this.PartyInfo = res.result;
            var abcd = _this.PartyInfo.filter(function (x) { return (x.PARTICULAR == 'Net Receivable' || x.PARTICULAR == 'Net Payable'); }); //check for Net Receivable and Net Payable
            //console.log("abcd",abcd)
            if (abcd.length > 0 && abcd[0] && abcd[0].AMOUNT) {
                if (abcd[0].AMOUNT < 0) {
                    _this.PartyBalanceData.NETAMOUNT = abcd[0].AMOUNT * (-1); // send positive netamount for partbalnce print if in negative.
                }
                else {
                    _this.PartyBalanceData.NETAMOUNT = abcd[0].AMOUNT;
                }
            }
            else {
                _this.PartyBalanceData.NETAMOUNT = 0;
            }
        });
    };
    AccountHeadingWiseDepreciationDetailComponent.prototype.reSet = function () {
        this.PartyInfo = [];
        this.PartyBalanceData = {};
    };
    // **********For Date Format**************
    AccountHeadingWiseDepreciationDetailComponent.prototype.changeEntryDate = function (value, format) {
        //console.log('working');
        var adbs = __webpack_require__(19);
        if (format == "AD") {
            var adDate = (value.replace("-", "/")).replace("-", "/");
            var bsDate = adbs.ad2bs(adDate);
            this.PartyBalanceData.BSDATE1 = this.masterService.toADDate(value);
        }
        else if (format == "BS") {
            var datearr = value.split('/');
            var bsDate_1 = datearr[2] + "/" + datearr[1] + "/" + datearr[0];
            // var bsDate = (value.replace("-", "/")).replace("-", "/");
            var adDate = adbs.bs2ad(bsDate_1);
            this.PartyBalanceData.DATE1 = this.masterService.toBSDate(value);
        }
    };
    AccountHeadingWiseDepreciationDetailComponent.prototype.changeEndDate = function (value, format) {
        var adbs = __webpack_require__(19);
        if (format == "AD") {
            var adDate = (value.replace("-", "/")).replace("-", "/");
            var bsDate = adbs.ad2bs(adDate);
            this.PartyBalanceData.BSDATE2 = this.masterService.toADDate(value);
        }
        else if (format == "BS") {
            var datearr = value.split('/');
            var bsDate_2 = datearr[2] + "/" + datearr[1] + "/" + datearr[0];
            // var bsDate = (value.replace("-", "/")).replace("-", "/");
            var adDate = adbs.bs2ad(bsDate_2);
            this.PartyBalanceData.DATE2 = this.masterService.toBSDate(value);
        }
    };
    AccountHeadingWiseDepreciationDetailComponent.prototype.onPrintClicked = function () {
        //console.log('Its working');
        // if (this._trnMainService.TrnMainObj.TrntranList.length > 0) {
        //   this.promptPrintDevice = true;
        // } else {
        //   this.alertService.warning("No voucher Found for Printing");
        // }
        var _this = this;
        this.showVoucherReplicateButton = false;
        var vat = 606764917;
        // let VATresult = vat.split("");
        // this.masterService.getPrintFileName("PV").subscribe((res) => {
        // if (res.status == "ok") {
        this.filename = 'PARTYBALANCE.ims';
        this.rownumber = 0;
        this.changeCursor = true;
        this.masterService.getGivenNumberToWords(this.PartyBalanceData.NETAMOUNT).subscribe(function (res) {
            if (res.status == "ok") {
                _this.numtowords = res.result ? res.result[0].NUMTOWORDS : '';
                ////console.log("@@numtowords", this.numtowords);
                var userdivision = _this.userProfile.userDivision ? _this.userProfile.userDivision : _this.userProfile.CompanyInfo.INITIAL;
                var ADDRESS_1 = _this.userProfile.CompanyInfo.ADDRESS;
                _this.masterService.getDetailsByUserDivision(userdivision).subscribe(function (res) {
                    if (res.status == "ok") {
                        if (res.result && res.result.length > 0 && res.result[0] && res.result[0].COMADD) {
                            ADDRESS_1 = res.result[0].COMADD;
                        }
                        if (ADDRESS_1 === null || ADDRESS_1 === undefined || ADDRESS_1 === '') {
                            ADDRESS_1 = _this.userProfile.CompanyInfo.ADDRESS;
                        }
                        _this.PartyBalanceData.DIVISION = _this.userProfile.CompanyInfo.INITIAL; // must for SP
                        _this.PartyBalanceData.PHISCALID = _this.userProfile.CompanyInfo.PhiscalID; // must for SP
                        _this.PartyBalanceData.COMPANYID = _this.userProfile.CompanyInfo.COMPANYID; // must for SP
                        _this.PartyBalanceData.NAME = _this.userProfile.CompanyInfo.NAME ? _this.userProfile.CompanyInfo.NAME : '';
                        _this.PartyBalanceData.ADDRESS = _this.userProfile.CompanyInfo.ADDRESS ? _this.userProfile.CompanyInfo.ADDRESS : '';
                        _this.PartyBalanceData.VATNO = _this.userProfile.CompanyInfo.VAT ? _this.userProfile.CompanyInfo.VAT : '';
                        _this.PartyBalanceData.numtowords = _this.numtowords ? _this.numtowords : '';
                        _this.PartyBalanceData.NETAMOUNT = _this.PartyBalanceData.NETAMOUNT ? _this.PartyBalanceData.NETAMOUNT : 0;
                        _this.PartyBalanceData.COMPANYNAME = _this.PartyBalanceData.CUSTOMERNAME ? _this.PartyBalanceData.CUSTOMERNAME : '';
                        _this.PartyBalanceData.COMPANYADDRESS = _this.PartyBalanceData.COMPANYADDRESS ? _this.PartyBalanceData.COMPANYADDRESS : '';
                        _this.PartyBalanceData.PANNO = _this.PartyBalanceData.PANNO ? _this.PartyBalanceData.PANNO : 0;
                        _this.PartyBalanceData.INCLUDECASHTRANSACTION = _this.PartyBalanceData.INCLUDECASHTRANSACTION ? _this.PartyBalanceData.INCLUDECASHTRANSACTION : 0;
                        if (!_this.PartyBalanceData.COSTCENTER) {
                            _this.PartyBalanceData.COSTCENTER = '%'; // must for SP
                        }
                        if (!_this.PartyBalanceData.ACID) {
                            _this.PartyBalanceData.ACID = '%'; // must for SP
                        }
                        console.log("d", _this.PartyBalanceData);
                        _this.masterService.printPartyBalance(_this.filename, _this.PartyBalanceData).subscribe(function (res) {
                            ////console.log("pdfresponse", res);
                            var blobUrl = URL.createObjectURL(res.content);
                            var iframe = document.createElement('iframe');
                            iframe.style.display = 'none';
                            iframe.src = blobUrl;
                            document.body.appendChild(iframe);
                            iframe.contentWindow.print();
                            _this.changeCursor = false;
                        });
                    }
                });
            }
        });
        this.changeCursor = false;
    };
    AccountHeadingWiseDepreciationDetailComponent.prototype.parttypeChange = function () {
        this.PartyBalanceData.CUSTOMERNAME = "";
        this.PartyBalanceData.ACID = "";
    };
    return AccountHeadingWiseDepreciationDetailComponent;
}());
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])("genericGridACList"),
    __metadata("design:type", __WEBPACK_IMPORTED_MODULE_2__common_popupLists_generic_grid_generic_popup_grid_component__["c" /* GenericPopUpComponent */])
], AccountHeadingWiseDepreciationDetailComponent.prototype, "genericGridACList", void 0);
AccountHeadingWiseDepreciationDetailComponent = __decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
        selector: 'account-headingwise-depreciation-detail',
        template: __webpack_require__(1317),
        providers: [__WEBPACK_IMPORTED_MODULE_5__theme_pipes__["a" /* TwoDigitNumber */]]
        // styles: [require('./party-balance-confirmation.component.styl')]
    }),
    __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1__common_Transaction_Components_transaction_service__["a" /* TransactionService */],
        __WEBPACK_IMPORTED_MODULE_3__common_repositories_masterRepo_service__["a" /* MasterRepo */],
        __WEBPACK_IMPORTED_MODULE_4__common_services_permission_authService_service__["a" /* AuthService */]])
], AccountHeadingWiseDepreciationDetailComponent);



/***/ }),

/***/ 1250:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__common_Transaction_Components_transaction_service__ = __webpack_require__(7);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__common_interfaces_TrnMain__ = __webpack_require__(25);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__common_repositories_masterRepo_service__ = __webpack_require__(8);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__common_services_setting_service__ = __webpack_require__(72);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__common_services_AppSettings__ = __webpack_require__(214);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_rxjs_BehaviorSubject__ = __webpack_require__(30);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_rxjs_BehaviorSubject___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_6_rxjs_BehaviorSubject__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__angular_material__ = __webpack_require__(16);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return AccountOpeningBalance; });








//import { MdDialog } from "@angular/material/material";
var AccountOpeningBalance = (function () {
    function AccountOpeningBalance(masterService, _trnMainService, setting, AppSettings, dialog) {
        this.masterService = masterService;
        this._trnMainService = _trnMainService;
        this.setting = setting;
        this.AppSettings = AppSettings;
        this.dialog = dialog;
        this.voucherType = __WEBPACK_IMPORTED_MODULE_2__common_interfaces_TrnMain__["a" /* VoucherTypeEnum */].AccountOpeningBalance;
        this.prefix = {};
        this.dialogMessageSubject = new __WEBPACK_IMPORTED_MODULE_6_rxjs_BehaviorSubject__["BehaviorSubject"]("");
        this.dialogMessage$ = this.dialogMessageSubject.asObservable();
        this.TranList = [];
        this.previousOpeningAccountData = [];
        this.TrnMainObj = this._trnMainService.TrnMainObj;
        this.TrnMainObj.DIVISION = this.AppSettings.DefaultDivision;
        this._trnMainService.initialFormLoad(22);
    }
    AccountOpeningBalance.prototype.ngOnInit = function () {
        this.TrnMainObj.Mode = "NEW";
        this.masterService.ShowMore = false;
        this.voucherType = this._trnMainService.TrnMainObj.VoucherType;
    };
    AccountOpeningBalance.prototype.prefixChanged = function (pref) {
        var _this = this;
        try {
            this._trnMainService.prefix = pref;
            this.prefix = pref;
            if (this.TrnMainObj.Mode == "NEW") {
                if (this.TrnMainObj.DIVISION == "" ||
                    this.TrnMainObj.DIVISION == null) {
                    this.TrnMainObj.DIVISION = this.setting.appSetting.DefaultDivision;
                }
                this.masterService.getVoucherNo(this.TrnMainObj).subscribe(function (res) {
                    if (res.status == "ok") {
                        var TMain = res.result;
                        _this.TrnMainObj.VCHRNO = TMain.VCHRNO.substr(2, TMain.VCHRNO.length - 2);
                        _this.TrnMainObj.CHALANNO = TMain.CHALANNO;
                    }
                    else {
                        alert("Failed to retrieve VoucherNo");
                    }
                });
            }
        }
        catch (ex) {
        }
    };
    return AccountOpeningBalance;
}());
AccountOpeningBalance = __decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
        selector: "account-opening-balance",
        template: __webpack_require__(1318),
        providers: [__WEBPACK_IMPORTED_MODULE_1__common_Transaction_Components_transaction_service__["a" /* TransactionService */]]
    }),
    __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_3__common_repositories_masterRepo_service__["a" /* MasterRepo */],
        __WEBPACK_IMPORTED_MODULE_1__common_Transaction_Components_transaction_service__["a" /* TransactionService */],
        __WEBPACK_IMPORTED_MODULE_4__common_services_setting_service__["a" /* SettingService */],
        __WEBPACK_IMPORTED_MODULE_5__common_services_AppSettings__["a" /* AppSettings */],
        __WEBPACK_IMPORTED_MODULE_7__angular_material__["a" /* MdDialog */]])
], AccountOpeningBalance);



/***/ }),

/***/ 1251:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__common_repositories_masterRepo_service__ = __webpack_require__(8);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_moment__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_moment___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_moment__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__bank_reconciliation_service__ = __webpack_require__(1279);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__common_popupLists_generic_grid_generic_popup_grid_component__ = __webpack_require__(35);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__common_interfaces_bank_reconciliation_interface__ = __webpack_require__(1237);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__common_services_spinner_spinner_service__ = __webpack_require__(20);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__common_services_alert_alert_service__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__common_Transaction_Components_transaction_service__ = __webpack_require__(7);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__common_services_permission_authService_service__ = __webpack_require__(17);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__angular_router__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11_file_saver__ = __webpack_require__(561);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11_file_saver___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_11_file_saver__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12_xlsx__ = __webpack_require__(563);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12_xlsx___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_12_xlsx__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return BankReconciliationComponent; });













var EXCEL_TYPE = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8';
var EXCEL_EXTENSION = '.xlsx';
var BankReconciliationComponent = (function () {
    function BankReconciliationComponent(platformId, masterService, bankReconciliationService, spinnerService, alertSerivces, _transactionService, authservice, router) {
        var _this = this;
        this.platformId = platformId;
        this.masterService = masterService;
        this.bankReconciliationService = bankReconciliationService;
        this.spinnerService = spinnerService;
        this.alertSerivces = alertSerivces;
        this._transactionService = _transactionService;
        this.authservice = authservice;
        this.router = router;
        this.gridbankReconciliationPopupSettings = new __WEBPACK_IMPORTED_MODULE_4__common_popupLists_generic_grid_generic_popup_grid_component__["b" /* GenericPopUpSettings */]();
        this.bankReconciliationObj = new __WEBPACK_IMPORTED_MODULE_5__common_interfaces_bank_reconciliation_interface__["a" /* BankReconciliation */]();
        this.reconcileListObj = new __WEBPACK_IMPORTED_MODULE_5__common_interfaces_bank_reconciliation_interface__["b" /* Reconcile */]();
        this.reconcileList = [];
        this.balanceAsPerCompanyBook = [];
        this.amountNotReflectedOnBank = [];
        this.notReflectedonBankDebit = 0;
        this.notReflectedonBankCredit = 0;
        this.balanceAsPerBankDebit = 0;
        this.balanceAsperBankCredit = 0;
        this.differenceDebit = 0;
        this.differenceCredit = 0;
        this.companybook = 0;
        this.resBalance = 0;
        this.resDifference = 0;
        this.userProfile = this.authservice.getUserProfile();
        this.fbdate = this.userProfile.CompanyInfo.FBDATE.split('T')[0];
        this.xyz = this.fbdate.split('-');
        this.fb_day = this.xyz[2];
        this.fb_month = this.xyz[1] - 1;
        this.fb_year = this.xyz[0];
        this.fedate = this.userProfile.CompanyInfo.FEDATE.split('T')[0];
        this.pqr = this.fedate.split('-');
        this.fe_day = this.pqr[2];
        this.fe_month = this.pqr[1] - 1;
        this.fe_year = this.pqr[0];
        this.division = [];
        this.alwaysShowCalendars = true;
        this.ranges = {
            'Today': [__WEBPACK_IMPORTED_MODULE_2_moment__(), __WEBPACK_IMPORTED_MODULE_2_moment__()],
            'Yesterday': [__WEBPACK_IMPORTED_MODULE_2_moment__().subtract(1, 'days'), __WEBPACK_IMPORTED_MODULE_2_moment__().subtract(1, 'days')],
            'Last 7 Days': [__WEBPACK_IMPORTED_MODULE_2_moment__().subtract(6, 'days'), __WEBPACK_IMPORTED_MODULE_2_moment__()],
            'Last 30 Days': [__WEBPACK_IMPORTED_MODULE_2_moment__().subtract(29, 'days'), __WEBPACK_IMPORTED_MODULE_2_moment__()],
            'This Month': [__WEBPACK_IMPORTED_MODULE_2_moment__().startOf('month'), __WEBPACK_IMPORTED_MODULE_2_moment__().endOf('month')],
            'Last Month': [__WEBPACK_IMPORTED_MODULE_2_moment__().subtract(1, 'month').startOf('month'), __WEBPACK_IMPORTED_MODULE_2_moment__().subtract(1, 'month').endOf('month')],
            'Financial Year': [__WEBPACK_IMPORTED_MODULE_2_moment__().set('date', this.fb_day).set('month', this.fb_month).set('year', this.fb_year),
                __WEBPACK_IMPORTED_MODULE_2_moment__().endOf('month').set('date', this.fe_day).set('month', this.fe_month).set('year', this.fe_year)],
        };
        this.locale = {
            format: 'DD/MM/YYYY',
            direction: 'ltr',
            weekLabel: 'W',
            separator: ' - ',
            cancelLabel: 'Cancel',
            applyLabel: 'Okay',
            clearLabel: 'Clear',
            customRangeLabel: 'Custom Range',
            daysOfWeek: __WEBPACK_IMPORTED_MODULE_2_moment__["weekdaysMin"](),
            monthNames: __WEBPACK_IMPORTED_MODULE_2_moment__["monthsShort"](),
            firstDay: 0 // first day is monday
        };
        this.division = [];
        this.masterService.ShowMore = true;
        this.showBankDate = false;
        this.selectedDate = {
            startDate: __WEBPACK_IMPORTED_MODULE_2_moment__(),
            endDate: __WEBPACK_IMPORTED_MODULE_2_moment__()
        };
        // this.gridbankReconciliationPopupSettings = {
        //     title: "Bank Account Name ",
        //     apiEndpoints: `/getBankListPagedList`,
        //     defaultFilterIndex: 0,
        //     columns: [
        //         {
        //             key: "ACID",
        //             title: "Account No.",
        //             hidden: false,
        //             noSearch: false
        //         },
        //         {
        //             key: "ACNAME",
        //             title: "Account Name",
        //             hidden: false,
        //             noSearch: false
        //         }
        //     ]
        // };
        this.showCompanybook = false;
        this.reflectedBank = false;
        this.bankReconciliationObj.DATE1 = new Date().toJSON().split('T')[0];
        this.bankReconciliationObj.DATE2 = new Date().toJSON().split('T')[0];
        this.changeEntryDate(this.bankReconciliationObj.DATE1, "AD");
        this.changeEndDate(this.bankReconciliationObj.DATE2, "AD");
        if (this.masterService.userSetting.userwisedivision == 1) {
            this.masterService.getDivisionFromRightPrivelege().subscribe(function (res) {
                if (res.status == 'ok') {
                    _this.division = res.result;
                }
            });
        }
        else {
            this.masterService.getAllDivisions()
                .subscribe(function (res) {
                _this.division.push(res);
            }, function (error) {
                _this.masterService.resolveError(error, "divisions - getDivisions");
            });
        }
    }
    BankReconciliationComponent.prototype.onItemDoubleClick = function (event) {
        this.selectedValue = event;
        this.bankReconciliationObj.ACNAME = this.selectedValue.ACNAME;
        this.bankReconciliationObj.ACID = this.selectedValue.ACID;
        this.onLoadClick();
    };
    BankReconciliationComponent.prototype.onSaveExcelClick = function () {
    };
    BankReconciliationComponent.prototype.onLoadClick = function () {
        var _this = this;
        if (this.bankReconciliationObj.ACNAME == '' || this.bankReconciliationObj.ACNAME == null || this.bankReconciliationObj.ACNAME == undefined) {
            this.alertSerivces.warning("Please select Bank first!");
            return;
        }
        this.spinnerService.show('Loading Data .. ');
        this.notReflectedonBankDebit = 0;
        this.notReflectedonBankCredit = 0;
        this.balanceAsPerBankDebit = 0;
        this.balanceAsperBankCredit = 0;
        this.differenceDebit = 0;
        this.differenceCredit = 0;
        this.companybook = 0;
        this.resBalance = 0;
        this.resDifference = 0;
        this.bankReconciliationService.getBankReconcileList(this.bankReconciliationObj)
            .subscribe(function (res) {
            var reconcileResult = res.result;
            if (res.status == 'ok') {
                _this.reconcileList = res.result.result;
                ////console.log("ReconsilaltionList",this.reconcileList)
                if (!_this.reconcileList || !_this.reconcileList.length) {
                    _this.alertSerivces.info('Could not found data');
                }
                _this.amountNotReflectedOnBank = res.result.amountNotReflectedOnBank;
                _this.balanceAsPerCompanyBook = res.result.balanceAsPerCompanyBook;
                if (_this.balanceAsPerCompanyBook == null) {
                    _this.showCompanybook = false;
                }
                else {
                    if (_this.balanceAsPerCompanyBook.length > 0) {
                        _this.showCompanybook = true;
                    }
                    else {
                        _this.showCompanybook = false;
                    }
                }
                if (_this.amountNotReflectedOnBank == null) {
                    _this.reflectedBank = false;
                }
                else {
                    if (_this.amountNotReflectedOnBank.length > 0) {
                        _this.reflectedBank = true;
                    }
                    else {
                        _this.reflectedBank = false;
                    }
                }
                _this.buildCheckBox();
                _this.DebitCreditCalculate();
                _this.spinnerService.hide();
            }
            else {
                _this.spinnerService.hide();
                _this.alertSerivces.error("Error" + res.result);
            }
        });
    };
    BankReconciliationComponent.prototype.buildCheckBox = function () {
        for (var i in this.reconcileList) {
            this.reconcileList[i].isChecked = false;
            if (this.reconcileList[i].BANKDATE == undefined || this.reconcileList[i].BANKDATE == null || String(this.reconcileList[i].BANKDATE) == '') {
                this.reconcileList[i].isReconciled = false;
            }
            else {
                this.reconcileList[i].isReconciled = true;
            }
        }
    };
    /**
     * Save Function to Save Bank Reconcilation
     */
    BankReconciliationComponent.prototype.onSaveClick = function () {
        var _this = this;
        var x = this.reconcileList.filter(function (x) { return x.isChecked == true; });
        if (x.length == 0) {
            this.alertSerivces.error("Please Select Bank Date of at least one voucher");
            return;
        }
        else {
            this.spinnerService.show("Saving Data. Please Wait!");
            this.bankReconciliationService.saveBank(this.reconcileList.filter(function (x) { return x.isChecked == true; }))
                .subscribe(function (res) {
                if (res.status == "ok") {
                    _this.spinnerService.hide();
                    _this.alertSerivces.success("Reconciled  Successfully");
                    _this.reconcileList = null;
                    if (_this.reconcileList === undefined) {
                    }
                    _this.bankReconciliationObj = new __WEBPACK_IMPORTED_MODULE_5__common_interfaces_bank_reconciliation_interface__["a" /* BankReconciliation */]();
                    _this.bankReconciliationObj.DATE1 = new Date().toJSON().split('T')[0];
                    _this.bankReconciliationObj.DATE2 = new Date().toJSON().split('T')[0];
                    _this.changeEntryDate(_this.bankReconciliationObj.DATE1, "AD");
                    _this.changeEndDate(_this.bankReconciliationObj.DATE2, "AD");
                }
                else {
                    _this.spinnerService.hide();
                    _this.alertSerivces.error("Error" + res.error);
                }
            }, function (error) {
                _this.spinnerService.hide();
                _this.alertSerivces.error(error);
            });
        }
    };
    BankReconciliationComponent.prototype.dateChanged = function () {
        this.bankReconciliationObj.DATE1 = __WEBPACK_IMPORTED_MODULE_2_moment__(this.selectedDate.startDate).format('YYYY-MM-DD HH:mm:ss');
        this.bankReconciliationObj.DATE2 = __WEBPACK_IMPORTED_MODULE_2_moment__(this.selectedDate.endDate).format('YYYY-MM-DD HH:mm:ss');
    };
    BankReconciliationComponent.prototype.onBankReconciliationPopUPTab = function () {
        this.onDivisionChanged();
        this.bankReconciliationGeneric.show();
    };
    BankReconciliationComponent.prototype.itemChecked = function (event, i) {
        //console.log("BANKDATE",this.reconcileList[i].BANKDATE)
        if (this.reconcileList[i].BANKDATE) {
            this.reconcileList[i].isChecked = true;
            this.showBankDate = true;
            this.notReflectedonBankDebit = 0;
            this.notReflectedonBankCredit = 0;
            this.balanceAsPerBankDebit = 0;
            this.balanceAsperBankCredit = 0;
            this.differenceDebit = 0;
            this.differenceCredit = 0;
            // document.getElementById("bankDate" + i).focus();
        }
        else {
            this.reconcileList[i].isChecked = false;
            this.showBankDate = false;
            this.notReflectedonBankDebit = 0;
            this.notReflectedonBankCredit = 0;
            this.balanceAsPerBankDebit = 0;
            this.balanceAsperBankCredit = 0;
            this.differenceDebit = 0;
            this.differenceCredit = 0;
            for (var i_1 in this.reconcileList) {
                if (this.reconcileList[i_1].isReconciled == false) {
                    this.reconcileList[i_1].BANKDATE = null;
                }
            }
        }
        this.DebitCreditCalculate();
    };
    BankReconciliationComponent.prototype.DebitCreditCalculate = function () {
        var _this = this;
        this.notReflectedonBankDebit = 0;
        this.notReflectedonBankCredit = 0;
        this.balanceAsPerBankDebit = 0;
        this.balanceAsperBankCredit = 0;
        if (this.reconcileList == null)
            return;
        this.reconcileList.filter(function (x) { return isNaN(Date.parse(String(x.BANKDATE))); }).forEach(function (i) {
            _this.notReflectedonBankCredit += _this._transactionService.nullToReturnZero(i.CRAMNT);
            _this.notReflectedonBankDebit += _this._transactionService.nullToReturnZero(i.DRAMNT);
        });
        if (this.balanceAsPerCompanyBook[0] != null) {
            var r = this.balanceAsPerCompanyBook[0].DRAMNT - (this.notReflectedonBankDebit - this.notReflectedonBankCredit);
            if (r > 0) {
                this.balanceAsPerBankDebit = r;
            }
            else {
                this.balanceAsperBankCredit = r;
            }
            var s = this.balanceAsPerCompanyBook[0].DRAMNT - r;
            if (s > 0) {
                this.differenceDebit = s;
            }
            else {
                this.differenceCredit = s;
            }
        }
    };
    BankReconciliationComponent.prototype.parseFloat = function (param) {
        return parseFloat(param).toFixed(2);
    };
    BankReconciliationComponent.prototype.KeyUpMethod = function (o) {
        for (var i in this.reconcileList) {
            if (this.reconcileList[i].isReconciled == false) {
                this.reconcileList[i].isChecked = true;
                break;
            }
        }
    };
    BankReconciliationComponent.prototype.BankDateFocus = function () {
        this.bDate = false;
        this.notReflectedonBankDebit = 0;
        this.notReflectedonBankCredit = 0;
        this.balanceAsPerBankDebit = 0;
        this.balanceAsperBankCredit = 0;
        this.differenceDebit = 0;
        this.differenceCredit = 0;
        for (var i in this.reconcileList) {
            var date = this.reconcileList[i].TRNDATE;
            var bankDate = this.reconcileList[i].BANKDATE;
            var time1 = __WEBPACK_IMPORTED_MODULE_2_moment__(date).format('YYYY-MM-DD');
            var time2 = __WEBPACK_IMPORTED_MODULE_2_moment__(bankDate).format('YYYY-MM-DD');
            if (this.reconcileList[i].isReconciled == false) {
                if (time1 > time2) {
                    this.alertSerivces.error("Bank Date is less than Trnscation Date");
                }
            }
        }
        this.DebitCreditCalculate();
    };
    BankReconciliationComponent.prototype.setBankDate = function (value, index) {
        if (value != null && value != undefined && value != "") {
            if (this.masterService.ValidateDate(value)) {
                this.reconcileList[index].BANKDATE = this.masterService.changeIMsDateToDate(value);
                this.itemChecked('', index);
            }
            else {
                this.alertSerivces.error("Invalid Transaction Date");
                return;
            }
        }
    };
    BankReconciliationComponent.prototype.getBankDate = function (index) {
        if (this.reconcileList[index].BANKDATE) {
            return this.masterService.customDateFormate(this.reconcileList[index].BANKDATE.toString());
        }
    };
    BankReconciliationComponent.prototype.onBackClicked = function () {
        this.returnUrl = "/pages/dashboard/dashboard";
        this.router.navigate([this.returnUrl]);
    };
    BankReconciliationComponent.prototype.DivisionEnterClicked = function () {
        this.bankReconciliationGeneric.show();
    };
    BankReconciliationComponent.prototype.onDivisionChanged = function () {
        // //console.log("DIV",this.bankReconsciliationObj.DIV)
        this.bankReconciliationObj.ACNAME = "";
        var division = this.bankReconciliationObj.DIV ? this.bankReconciliationObj.DIV : 'ALL';
        if (this.bankReconciliationObj.DIV == '%') {
            division = 'ALL';
        }
        //console.log("this.userProfile.userDivision",this.userProfile.userDivision)
        division = this.userProfile.userDivision ? this.userProfile.userDivision : 'ALL';
        this.gridbankReconciliationPopupSettings = {
            title: "Bank Account Name ",
            apiEndpoints: "/getBankListPagedList/" + division,
            defaultFilterIndex: 0,
            columns: [
                {
                    key: "ACID",
                    title: "Account No.",
                    hidden: false,
                    noSearch: false
                },
                {
                    key: "ACNAME",
                    title: "Account Name",
                    hidden: false,
                    noSearch: false
                }
            ]
        };
    };
    BankReconciliationComponent.prototype.changeEntryDate = function (value, format) {
        var adbs = __webpack_require__(19);
        if (format == "AD") {
            var adDate = (value.replace("-", "/")).replace("-", "/");
            var bsDate = adbs.ad2bs(adDate);
            this.bankReconciliationObj.BSDATE1 = this.masterService.toBSDate(value);
        }
        else if (format == "BS") {
            var datearr = value.split('/');
            var bsDate_1 = datearr[2] + "/" + datearr[1] + "/" + datearr[0];
            // var bsDate = (value.replace("-", "/")).replace("-", "/");
            var adDate = adbs.bs2ad(bsDate_1);
            var Engdate = this.masterService.toBSDate(value);
            var Validatedata = this.masterService.ValidateNepaliDate(Engdate);
            if (Validatedata == true) {
                var bsDate1 = datearr[2] + "/" + datearr[1] + "/" + datearr[0];
                var adDate1 = adbs.bs2ad(bsDate1);
                this.bankReconciliationObj.DATE1 = this.masterService.toADDate(value);
            }
            else {
                // this.alertService.error("Cannot Change the date");
                return;
            }
        }
    };
    BankReconciliationComponent.prototype.changeEndDate = function (value, format) {
        var adbs = __webpack_require__(19);
        if (format == "AD") {
            var adDate = (value.replace("-", "/")).replace("-", "/");
            var bsDate = adbs.ad2bs(adDate);
            this.bankReconciliationObj.BSDATE2 = this.masterService.toBSDate(value);
        }
        else if (format == "BS") {
            var datearr = value.split('/');
            var bsDate_2 = datearr[2] + "/" + datearr[1] + "/" + datearr[0];
            var adDate = adbs.bs2ad(bsDate_2);
            var Engdate = this.masterService.toBSDate(value);
            var Validatedata = this.masterService.ValidateNepaliDate(Engdate);
            if (Validatedata == true) {
                var bsDate1 = datearr[2] + "/" + datearr[1] + "/" + datearr[0];
                var adDate1 = adbs.bs2ad(bsDate1);
                this.bankReconciliationObj.DATE2 = this.masterService.toADDate(value);
            }
            else {
                // this.alertService.error("Cannot Change the date");
                return;
            }
        }
    };
    BankReconciliationComponent.prototype.onExportClick = function () {
        this.exportAsExcelFile(this.reconcileList, this.balanceAsPerCompanyBook, this.notReflectedonBankDebit, this.notReflectedonBankCredit, this.balanceAsPerBankDebit, this.balanceAsperBankCredit, this.differenceDebit, this.differenceCredit, this.amountNotReflectedOnBank, "Bank Reconciliation");
    };
    BankReconciliationComponent.prototype.exportAsExcelFile = function (json, json1, value1, value2, value3, value4, value5, value6, json2, excelFileName) {
        var newArray = [];
        newArray = Object.assign([], json);
        console.log("1", this.reconcileList);
        Object.keys(newArray).forEach(function (key) {
            newArray[key].VoucherType = json[key].VCHRTYPE;
            newArray[key].VoucherNumber = json[key].VNO;
            newArray[key].DIVISION = json[key].DIV;
            newArray[key].ACID = json[key].B_ACID;
            delete newArray[key].VCHRTYPE;
            delete newArray[key].VNO;
            delete newArray[key].DIV;
            delete newArray[key].B_ACID;
            console.log(newArray);
        });
        var obj1 = {};
        newArray.push(obj1);
        json1[0].PARTICULARS = "Balance As per Company Book";
        newArray.push(json1[0]);
        if (json2 && json2.length > 0) {
            json2[0].PARTICULARS = "Amount Not Reflected on Bank(opening)	";
            newArray.push(json2[0]);
        }
        else {
            json2 = [];
            var obj5 = {};
            obj5.DRAMNT = 0;
            obj5.CRAMNT = 0;
            obj5.PARTICULARS = "Amount Not Reflected on Bank(opening)	";
            json2.push(obj5);
            newArray.push(json2[0]);
        }
        var obj2 = {};
        obj2.DRAMNT = value1;
        obj2.CRAMNT = value2;
        obj2.PARTICULARS = "Not Reflected on Bank (Periodic)";
        newArray.push(obj2);
        var obj3 = {};
        obj3.DRAMNT = value3;
        obj3.CRAMNT = value4;
        obj3.PARTICULARS = "Balance As Per Bank Book";
        newArray.push(obj3);
        var obj4 = {};
        obj4.DRAMNT = value5;
        obj4.CRAMNT = value6;
        obj4.PARTICULARS = "Difference";
        newArray.push(obj4);
        var ws = __WEBPACK_IMPORTED_MODULE_12_xlsx__["utils"].json_to_sheet(newArray);
        var wb = __WEBPACK_IMPORTED_MODULE_12_xlsx__["utils"].book_new();
        __WEBPACK_IMPORTED_MODULE_12_xlsx__["utils"].book_append_sheet(wb, ws, "ABC");
        excelFileName += '.xlsx';
        /* save to file */
        var excelBuffer = __WEBPACK_IMPORTED_MODULE_12_xlsx__["write"](wb, { bookType: 'xlsx', type: 'buffer' });
        this.saveAsExcelFile(excelBuffer, excelFileName);
    };
    // public exportAsExcelFile(json: any[], excelFileName: string): void {
    //     const ws = XLSX.utils.book_new();
    //     // XLSX.utils.sheet_to_json(ws, this.Heading );
    //     const worksheet: XLSX.WorkSheet = XLSX.utils.json_to_sheet(json);
    //     const workbook: XLSX.WorkBook = { Sheets: { 'Ledger Report': worksheet }, SheetNames: ['Ledger Report'] };
    //     // let headerRow =XLSX.utils.json_to_sheet(json);
    //     const excelBuffer: any = XLSX.write(workbook, { bookType: 'xlsx', type: 'buffer' });
    //     this.saveAsExcelFile(excelBuffer, excelFileName);
    // }
    BankReconciliationComponent.prototype.saveAsExcelFile = function (buffer, fileName) {
        var data = new Blob([buffer], { type: EXCEL_TYPE });
        __WEBPACK_IMPORTED_MODULE_11_file_saver__["saveAs"](data, fileName + EXCEL_EXTENSION);
    };
    return BankReconciliationComponent;
}());
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])("bankReconciliationGeneric"),
    __metadata("design:type", __WEBPACK_IMPORTED_MODULE_4__common_popupLists_generic_grid_generic_popup_grid_component__["c" /* GenericPopUpComponent */])
], BankReconciliationComponent.prototype, "bankReconciliationGeneric", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])("check"),
    __metadata("design:type", __WEBPACK_IMPORTED_MODULE_0__angular_core__["ElementRef"])
], BankReconciliationComponent.prototype, "check", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])('bankInput'),
    __metadata("design:type", Object)
], BankReconciliationComponent.prototype, "bankInput", void 0);
BankReconciliationComponent = __decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
        selector: 'bank-reconciliation',
        template: __webpack_require__(1319),
        providers: [__WEBPACK_IMPORTED_MODULE_3__bank_reconciliation_service__["a" /* BankReconciliationService */]],
        styles: [__webpack_require__(9)]
    }),
    __param(0, __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Inject"])(__WEBPACK_IMPORTED_MODULE_0__angular_core__["PLATFORM_ID"])),
    __metadata("design:paramtypes", [Object,
        __WEBPACK_IMPORTED_MODULE_1__common_repositories_masterRepo_service__["a" /* MasterRepo */],
        __WEBPACK_IMPORTED_MODULE_3__bank_reconciliation_service__["a" /* BankReconciliationService */],
        __WEBPACK_IMPORTED_MODULE_6__common_services_spinner_spinner_service__["a" /* SpinnerService */],
        __WEBPACK_IMPORTED_MODULE_7__common_services_alert_alert_service__["a" /* AlertService */],
        __WEBPACK_IMPORTED_MODULE_8__common_Transaction_Components_transaction_service__["a" /* TransactionService */],
        __WEBPACK_IMPORTED_MODULE_9__common_services_permission_authService_service__["a" /* AuthService */],
        __WEBPACK_IMPORTED_MODULE_10__angular_router__["Router"]])
], BankReconciliationComponent);



/***/ }),

/***/ 1252:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__common_repositories__ = __webpack_require__(13);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__common_Transaction_Components_transaction_service__ = __webpack_require__(7);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__common_services_alert_alert_service__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__common_popupLists_generic_grid_generic_popup_grid_component__ = __webpack_require__(35);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__common_services_spinner_spinner_service__ = __webpack_require__(20);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_moment__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_moment___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_6_moment__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__bill_tracking_amendment_service__ = __webpack_require__(570);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return BillTrackingAmendmentComponent; });








var BillTrackingAmendmentComponent = (function () {
    function BillTrackingAmendmentComponent(spinnerService, alertService, masterServicce, _transactionService, billService) {
        this.spinnerService = spinnerService;
        this.alertService = alertService;
        this.masterServicce = masterServicce;
        this._transactionService = _transactionService;
        this.billService = billService;
        this.gridPopupSettings = new __WEBPACK_IMPORTED_MODULE_4__common_popupLists_generic_grid_generic_popup_grid_component__["b" /* GenericPopUpSettings */]();
        this.gridDuePopupSettings = new __WEBPACK_IMPORTED_MODULE_4__common_popupLists_generic_grid_generic_popup_grid_component__["b" /* GenericPopUpSettings */]();
        this.BillTrack = {};
        this.pendingVoucherList = [];
        this.isActive = false;
        this.selectVoucherIndex = 0;
        this.selectedAll = false;
        this.autoAdjustValue = false;
        this.voucherLoadObj = {
            VoucherType: 0,
            VoucherPrefix: "",
            Mode: "NEW",
            DIVISION: "",
            MWAREHOUSE: ""
        };
        this.partyAcid = null;
        this.voucherLoadObj.VoucherType = 71;
        this.voucherLoadObj.VoucherPrefix = "#";
        this.voucherLoadObj.DIVISION = this._transactionService.userProfile.CompanyInfo.INITIAL;
        this.voucherLoadObj.MWAREHOUSE = this._transactionService.userProfile.userWarehouse;
        this.selectedRow = [];
    }
    BillTrackingAmendmentComponent.prototype.ngOnInit = function () {
        this.initialFormLoad();
    };
    BillTrackingAmendmentComponent.prototype.selectParty = function () {
        if (this.BillTrack.PARTYTYPE == null || this.BillTrack.PARTYTYPE == undefined || this.BillTrack.PARTYTYPE == "") {
            this.alertService.error("Please select party type to proceed");
            return;
        }
        else {
            this.genericGrid.show();
        }
    };
    BillTrackingAmendmentComponent.prototype.selectVoucher = function () {
        var _this = this;
        if (this.BillTrack.PARTYTYPE == null || this.BillTrack.PARTYTYPE == undefined || this.BillTrack.PARTYTYPE == "") {
            this.alertService.error("Please select party type to proceed");
            return;
        }
        if (this.BillTrack.ACID == null || this.BillTrack.ACID == undefined || this.BillTrack.ACID == "") {
            this.alertService.error("Please select party name to proceed");
            return;
        }
        this.billService.getDuePendingAmount(this.BillTrack.PARTYTYPE, this.BillTrack.ACID).subscribe(function (res) {
            if (res.status == "ok") {
                _this.pendingVoucherList = res.result;
            }
            else {
                _this.alertService.error(res.message);
            }
        });
        this.isActive = true;
    };
    BillTrackingAmendmentComponent.prototype.OnPartyChange = function (value) {
        if (this.BillTrack.ACNAME != "" || this.BillTrack.ACNAME != null) {
            this.BillTrack.ACNAME = '';
            this.BillTrack.trackBill = 0;
            this.BillTrack.BILL = [];
            this.BillTrack.NonTracking = [];
            this.BillTrack.TOTALADJAMOUNT = null;
            this.BillTrack.LEDGERBALANCE = null;
            this.selectedAll = false;
            //this.selectedRow = [];
        }
        this.BillTrack.PARTYTYPE = value;
        this.gridPopupSettings.apiEndpoints = "/getAccountPagedListByMapId/Master/" + this.BillTrack.PARTYTYPE;
    };
    BillTrackingAmendmentComponent.prototype.OnTrackChange = function (event) {
        if (event.target.checked == true) {
            this.BillTrack.trackBill = 1;
        }
        else {
            this.BillTrack.trackBill = 0;
        }
        this.DoBillTrackFromBeg();
        this.autoAdjustValue = false;
    };
    BillTrackingAmendmentComponent.prototype.initialFormLoad = function () {
        var _this = this;
        this.BillTrack = Object.assign({});
        this.BillTrack.SHOWMORE = true;
        this.BillTrack.SHOWZEROBALANCE = true;
        this.autoAdjustValue = false;
        this.BillTrack.BILL = [];
        this.BillTrack.trackBill = 0;
        this.masterServicce.getVoucherNo(this.voucherLoadObj).subscribe(function (res) {
            _this.BillTrack.VCHRNO = res.result.VCHRNO;
        });
        this.masterServicce.getCurrentDate().subscribe(function (res) {
            _this.BillTrack.TRNDATE = __WEBPACK_IMPORTED_MODULE_6_moment__(res.Date).format("YYYY-MM-DD");
        });
        this.BillTrack.PARTYTYPE = "Customer";
        this.gridPopupSettings = {
            title: "Party List",
            apiEndpoints: "/getAccountPagedListByMapId/Master/" + this.BillTrack.PARTYTYPE,
            defaultFilterIndex: 0,
            columns: [
                {
                    key: 'ACNAME',
                    title: 'Account Name',
                    hidden: false,
                    noSearch: false
                },
            ]
        };
        this.gridDuePopupSettings = {
            title: "Voucher List",
            apiEndpoints: "/getRVPVPendingAmount/" + this.BillTrack.PARTYTYPE + "/" + this.BillTrack.ACID,
            defaultFilterIndex: 0,
            columns: [
                {
                    key: 'VCHRNO',
                    title: 'Voucher No',
                    hidden: false,
                    noSearch: false
                },
                {
                    key: 'AMOUNT',
                    title: 'Amount',
                    hidden: false,
                    noSearch: false
                },
                {
                    key: 'TRACKED_AMOUNT',
                    title: 'Tracked Amount',
                    hidden: false,
                    noSearch: false
                }
            ]
        };
        this.BillTrack.isBulkTracking = "1";
    };
    BillTrackingAmendmentComponent.prototype.dblClickPartyItem = function (partyData) {
        this.BillTrack.ACID = partyData.ACID;
        this.BillTrack.ACNAME = partyData.ACNAME;
        // if(this.BillTrack.BILL.length>0 || this.BillTrack.NonTracking.length>0){
        this.BillTrack.BALANCE = null;
        this.BillTrack.LEDGERBALANCE = null;
        this.BillTrack.DUEBALANCE = null;
        this.BillTrack.BILL = [];
        this.BillTrack.NonTracking = [];
        this.BillTrack.TOTALADJAMOUNT = null;
        // }
        //this.partyAcid = partyData.ACID;
        console.log("checkMode", partyData);
    };
    BillTrackingAmendmentComponent.prototype.loadData = function () {
        var _this = this;
        this.spinnerService.show("Getting BillTack data. Please Wait");
        this.BillTrack.TOTALADJAMOUNT = null;
        this.BillTrack.LEDGERBALANCE = null;
        this.autoAdjustValue = false;
        if (this.masterServicce.userSetting.EnableLatePost == 1) {
            this.masterServicce.CheckBillTrackPost(this.BillTrack.ACID).subscribe(function (data) {
                if (data.status == "ok") {
                    _this.DueList(_this.BillTrack);
                    _this.NonTracking(_this.BillTrack);
                }
                else {
                    _this.spinnerService.hide();
                    _this.alertService.error("Some of the Bill have not been posted.Please post the Bill and continue the amendment");
                    return;
                }
            });
        }
        else {
            this.DueList(this.BillTrack);
            this.NonTracking(this.BillTrack);
        }
        //no need
        // this.billService.getDuePendingAmount(this.BillTrack.PARTYTYPE, this.BillTrack.ACID).subscribe((res) => {
        //     if (res.status == "ok") {
        //         this.pendingVoucherList = res.result;
        //         this.selectedAll=true
        //     } else {
        //         this.alertService.error(res.message);
        //     }
        // })
    };
    BillTrackingAmendmentComponent.prototype.selectAll = function (value, i, event) {
        this.BillTrack.LEDGERBALANCE = 0;
        this.BillTrack.TOTALADJAMOUNT = null;
        if (this.selectedAll == true) {
            // this.selectedAll=false
            // this.selectedRow = [];
            value.checkbox = false;
        }
        if (event == true) {
            value.checkbox = true;
            this.autoAdjustValue = false;
            this.BillTrack.BILL.filter(function (x) {
                if (x.TAdjustingAmt >= 0) {
                    x.TAdjustingAmt = null;
                }
            });
            this.selectedRow.push(value);
        }
        else {
            this.autoAdjustValue = false;
            this.BillTrack.BILL.filter(function (x) {
                if (x.TAdjustingAmt >= 0) {
                    x.TAdjustingAmt = null;
                }
            });
            var index = this.selectedRow.findIndex(function (x) { return x.INVOICENO == value.INVOICENO; });
            this.selectedRow.splice(index, 1);
        }
        for (var x in this.selectedRow) {
            this.BillTrack.LEDGERBALANCE = this.BillTrack.LEDGERBALANCE + (parseFloat(this.selectedRow[x].NONTRACKAMOUNT));
        }
        this.BillTrack.ADJUSTINGAMOUNT = this.BillTrack.LEDGERBALANCE;
        //this.selectedRow.forEach(x=>this.BillTrack.LEDGERBALANCE=this.BillTrack.LEDGERBALANCE+ (parseInt(x.BILLAMOUNT)))
    };
    BillTrackingAmendmentComponent.prototype.selectAllIndex = function (event) {
        var _this = this;
        this.BillTrack.TOTALADJAMOUNT = null;
        this.autoAdjustValue = false;
        if (event == false) {
            this.selectedAll = !this.selectedAll;
            this.selectedRow = [];
            this.BillTrack.LEDGERBALANCE = 0;
            this.BillTrack.ADJUSTINGAMOUNT = 0;
            this.BillTrack.BILL.filter(function (x) {
                if (x.TAdjustingAmt >= 0) {
                    x.TAdjustingAmt = null;
                }
            });
        }
        else {
            this.selectedAll = true;
            this.BillTrack.LEDGERBALANCE = 0;
            this.BillTrack.NonTracking.forEach(function (x) {
                _this.BillTrack.LEDGERBALANCE = _this.BillTrack.LEDGERBALANCE + (parseFloat(x.NONTRACKAMOUNT));
                x.checkbox = true;
                _this.selectedRow.push(x);
            });
            this.BillTrack.BILL.filter(function (x) {
                if (x.TAdjustingAmt >= 0) {
                    x.TAdjustingAmt = null;
                }
            });
            // this.selectedRow=this.BillTrack.NonTracking;
            //  for(let x in this.selectedRow){
            //     this.BillTrack.LEDGERBALANCE=this.BillTrack.LEDGERBALANCE+ (parseFloat( this.selectedRow[x].NONTRACKAMOUNT))
            //     this.selectedRow[x].checkbox=true;
            //     this.BillTrack.NonTracking[x].checkbox=true
            // }
            this.BillTrack.ADJUSTINGAMOUNT = this.BillTrack.LEDGERBALANCE;
        }
    };
    BillTrackingAmendmentComponent.prototype.dblClickDueItem = function (partyData) {
        this.BillTrack.REFVCHRNO = partyData.VCHRNO;
        this.isActive = !this.isActive;
        this.selectVoucherIndex = 0;
        this.BillTrack.ADJUSTINGAMOUNT = this._transactionService.nullToZeroConverter(partyData.AMOUNT) - this._transactionService.nullToZeroConverter(partyData.TRACKED_AMOUNT);
    };
    BillTrackingAmendmentComponent.prototype.onKeydownPrevent = function (event) {
        if (event.key === "Enter" || event.key === "Tab") { }
        else {
            event.preventDefault();
        }
    };
    BillTrackingAmendmentComponent.prototype.validateAdjustingAmount = function () {
        if (this.BillTrack.BILL.length) {
            this.BillTrack.BILL.forEach(function (x) {
                x.TAdjustingAmt = 0;
            });
        }
        this.BillTrack.TOTALADJAMOUNT = 0;
        if (this._transactionService.nullToZeroConverter(this.BillTrack.ADJUSTINGAMOUNT) > this._transactionService.nullToZeroConverter(this.BillTrack.BALANCE)) {
            this.alertService.error("Adjustable amount entry greater than Balance");
            this.BillTrack.ADJUSTINGAMOUNT = 0;
            return;
        }
    };
    BillTrackingAmendmentComponent.prototype.saveBillTrack = function () {
        var _this = this;
        if (this.BillTrack.ADJUSTINGAMOUNT == null || this.BillTrack.ADJUSTINGAMOUNT == undefined || this.BillTrack.ADJUSTINGAMOUNT <= 0) {
            this.alertService.error("Please Adjust some value to save.");
            return;
        }
        if (this.BillTrack.TOTALADJAMOUNT == null || this.BillTrack.TOTALADJAMOUNT == undefined || this.BillTrack.TOTALADJAMOUNT <= 0) {
            this.alertService.error("Please Adjust some value to save.");
            return;
        }
        if (this.BillTrack.BILL.length > 0) {
            // if (this.BillTrack.REFVCHRNO == null || this.BillTrack.REFVCHRNO == "" || this.BillTrack.REFVCHRNO == undefined) {
            //     this.BillTrack.AdjustmentMode = "Manual";
            //     this.BillTrack.BILL.forEach(x => {
            //         x.VCHRNO =this.BillTrack.VCHRNO;
            //         x.REFBILL =x.BILLNO;
            //         x.AMOUNT = this._transactionService.nullToZeroConverter(x.TAdjustingAmt);
            //     })
            // } else {
            //     this.BillTrack.AdjustmentMode = "Voucher";
            //     this.BillTrack.BILL.forEach(x => {
            //         x.VCHRNO = x.BILLNO
            //         x.REFBILL = this.BillTrack.REFVCHRNO
            //         x.AMOUNT = this._transactionService.nullToZeroConverter(x.TAdjustingAmt)
            //     })
            // }
            //    if(this.BillTrack.TOTALADJAMOUNT<this.BillTrack.LEDGERBALANCE ){
            //     this.alertService.error("Adjustment Amount and tracking amount is not same ")
            //     return
            //    }
            this.spinnerService.show("Saving Data.Please Wait");
            console.log("d", this.HoldALLBillList);
            this.billService.saveBillTrack(this.HoldALLBillList, this.BillTrack.trackBill, this.autoAdjustValue).subscribe(function (res) {
                if (res.status == "ok") {
                    _this.spinnerService.hide();
                    _this.alertService.success(res.result);
                    _this.initialFormLoad();
                }
                else {
                    _this.spinnerService.hide();
                    _this.alertService.error(res.result);
                }
            }, function (error) {
                _this.spinnerService.hide();
                _this.alertService.error(error);
            });
        }
        else {
            this.alertService.error("Please Load at least one Bill Track to save");
        }
    };
    BillTrackingAmendmentComponent.prototype.autoAdjust = function () {
        var _this = this;
        this.autoAdjustValue = true;
        this.BillTrack.TOTALADJAMOUNT = 0;
        if (this.BillTrack.BILL.filter(function (x) { return x.TAdjustingAmt > 0; }).length > 0) {
            return;
        }
        this.HoldALLBillList = [];
        if (this.BillTrack.NonTracking.length > 0) {
            this.selectedRow = this.selectedRow.filter(function (x) { return x.checkbox == true; });
            for (var _i = 0, _a = this.selectedRow; _i < _a.length; _i++) {
                var x = _a[_i];
                console.log("d", this.BillTrack.TOTALADJAMOUNT);
                var adjustmentAmount = this._transactionService.nullToZeroConverter(x.NONTRACKAMOUNT);
                for (var _b = 0, _c = this.BillTrack.BILL; _b < _c.length; _b++) {
                    var a = _c[_b];
                    if (adjustmentAmount > 0 && a.TAdjustingAmt != a.DUEAMOUNT) {
                        var val = a.TAdjustingAmt + adjustmentAmount;
                        if (a.DUEAMOUNT < 0) {
                            a.TAdjustingAmt = 0;
                        }
                        else if (a.TAdjustingAmt != undefined && a.TAdjustingAmt < a.DUEAMOUNT) {
                            //if the row adjusted amount  is less than nontracked amount and due amount is still not fullfiled but can stii add the value  then due amnt then other vouchers data can be added 
                            if (val < a.DUEAMOUNT) {
                                a.TAdjustingAmt += adjustmentAmount;
                                var b = {};
                                b.AMOUNT = adjustmentAmount;
                                b.REFBILL = a.BILLNO;
                                b.VCHRNO = x.INVOICENO;
                                b.ACID = this.BillTrack.ACID;
                                b.TRNDATE = new Date(this.BillTrack.TRNDATE);
                                b.VOUCHERTYPE = x.INVOICENO.substring(0, 2);
                                b.trackBill = this.BillTrack.trackBill;
                                this.HoldALLBillList.push(b);
                                adjustmentAmount = this._transactionService.nullToZeroConverter(adjustmentAmount) - this._transactionService.nullToZeroConverter(a.DUEAMOUNT);
                                //this.BillTrack.TOTALADJAMOUNT = this._transactionService.nullToZeroConverter(this.BillTrack.TOTALADJAMOUNT) + this._transactionService.nullToZeroConverter(a.TAdjustingAmt)
                                console.log("s4", a.TAdjustingAmt);
                            }
                            else {
                                //if the row adjusted amount  is less than nontracked amount and due amount is still not fullfiled but when addedgives the larger value then due amnt then other vouchers data can be added 
                                var Data1 = this._transactionService.nullToZeroConverter(a.DUEAMOUNT) - this._transactionService.nullToZeroConverter(a.TAdjustingAmt);
                                a.TAdjustingAmt += Data1;
                                var b = {};
                                b.AMOUNT = Data1;
                                b.REFBILL = a.BILLNO;
                                b.VCHRNO = x.INVOICENO;
                                b.ACID = this.BillTrack.ACID;
                                b.TRNDATE = new Date(this.BillTrack.TRNDATE);
                                b.VOUCHERTYPE = x.INVOICENO.substring(0, 2);
                                b.trackBill = this.BillTrack.trackBill;
                                this.HoldALLBillList.push(b);
                                //remaining data of nontracking amount is calculated and sent for adjustment 
                                adjustmentAmount = this._transactionService.nullToZeroConverter(adjustmentAmount) - this._transactionService.nullToZeroConverter(Data1);
                                //this.BillTrack.TOTALADJAMOUNT = this._transactionService.nullToZeroConverter(this.BillTrack.TOTALADJAMOUNT) + this._transactionService.nullToZeroConverter(a.TAdjustingAmt)
                                console.log("s3", a.TAdjustingAmt);
                            }
                        }
                        else if (a.DUEAMOUNT > 0 && (this._transactionService.nullToZeroConverter(a.DUEAMOUNT) <= this._transactionService.nullToZeroConverter(adjustmentAmount))) {
                            a.TAdjustingAmt = a.DUEAMOUNT;
                            adjustmentAmount = this._transactionService.nullToZeroConverter(adjustmentAmount) - this._transactionService.nullToZeroConverter(a.DUEAMOUNT);
                            //this.BillTrack.TOTALADJAMOUNT = this._transactionService.nullToZeroConverter(this.BillTrack.TOTALADJAMOUNT) + this._transactionService.nullToZeroConverter(a.TAdjustingAmt)
                            var b = {};
                            b.AMOUNT = parseFloat(a.TAdjustingAmt.toString());
                            b.REFBILL = a.BILLNO;
                            b.VCHRNO = x.INVOICENO;
                            b.ACID = this.BillTrack.ACID;
                            b.VOUCHERTYPE = x.INVOICENO.substring(0, 2);
                            b.TRNDATE = new Date(this.BillTrack.TRNDATE);
                            b.trackBill = this.BillTrack.trackBill;
                            this.HoldALLBillList.push(b);
                            console.log("s2", a.TAdjustingAmt);
                        }
                        else if (a.DUEAMOUNT > 0 && (this._transactionService.nullToZeroConverter(a.DUEAMOUNT) > this._transactionService.nullToZeroConverter(adjustmentAmount))) {
                            a.TAdjustingAmt = adjustmentAmount;
                            adjustmentAmount = this._transactionService.nullToZeroConverter(adjustmentAmount) - this._transactionService.nullToZeroConverter(a.DUEAMOUNT);
                            // this.BillTrack.TOTALADJAMOUNT = this._transactionService.nullToZeroConverter(this.BillTrack.TOTALADJAMOUNT) + this._transactionService.nullToZeroConverter(a.TAdjustingAmt)
                            var b = {};
                            b.AMOUNT = parseFloat(a.TAdjustingAmt.toString());
                            b.REFBILL = a.BILLNO;
                            b.VCHRNO = x.INVOICENO;
                            b.ACID = this.BillTrack.ACID;
                            b.VOUCHERTYPE = x.INVOICENO.substring(0, 2);
                            b.TRNDATE = new Date(this.BillTrack.TRNDATE);
                            b.trackBill = this.BillTrack.trackBill;
                            this.HoldALLBillList.push(b);
                            console.log("s1", a.TAdjustingAmt);
                        }
                    }
                }
            }
            this.BillTrack.BILL.forEach(function (x) {
                _this.BillTrack.TOTALADJAMOUNT = _this._transactionService.nullToZeroConverter(_this.BillTrack.TOTALADJAMOUNT) + _this._transactionService.nullToZeroConverter(x.TAdjustingAmt);
            });
            // if (this.BillTrack.BILL.length > 0) {
            //     if (this._transactionService.nullToZeroConverter(this.BillTrack.ADJUSTINGAMOUNT) > 0) {
            //         let adjustmentAmount: number = this._transactionService.nullToZeroConverter(this.BillTrack.ADJUSTINGAMOUNT);
            //         for (let x of this.BillTrack.BILL) {
            //             if (adjustmentAmount > 0) {
            //                 if (x.DUEAMOUNT < 0) {
            //                     x.TAdjustingAmt = 0
            //                 } else if (x.DUEAMOUNT > 0 && (this._transactionService.nullToZeroConverter(x.DUEAMOUNT) <= this._transactionService.nullToZeroConverter(adjustmentAmount))) {
            //                     x.TAdjustingAmt = x.DUEAMOUNT;
            //                     adjustmentAmount = this._transactionService.nullToZeroConverter(adjustmentAmount) - this._transactionService.nullToZeroConverter(x.DUEAMOUNT)
            //                     this.BillTrack.TOTALADJAMOUNT = this._transactionService.nullToZeroConverter(this.BillTrack.TOTALADJAMOUNT) + this._transactionService.nullToZeroConverter(x.TAdjustingAmt)
            //                 } else if (x.DUEAMOUNT > 0 && (this._transactionService.nullToZeroConverter(x.DUEAMOUNT) > this._transactionService.nullToZeroConverter(adjustmentAmount))) {
            //                     x.TAdjustingAmt = adjustmentAmount
            //                     adjustmentAmount = this._transactionService.nullToZeroConverter(adjustmentAmount) - this._transactionService.nullToZeroConverter(x.DUEAMOUNT)
            //                     this.BillTrack.TOTALADJAMOUNT = this._transactionService.nullToZeroConverter(this.BillTrack.TOTALADJAMOUNT) + this._transactionService.nullToZeroConverter(x.TAdjustingAmt)
            //                 } else {
            //                     x.TAdjustingAmt = 0
            //                 }
            //             }
            //         }
            //     } else {
            //         this.alertService.error("Please Enter Adjusting Amount")
            //         return;
            //     }
            // } else {
            //     this.alertService.error("Please Load BillTrack Data to save")
            // }
            if (this.BillTrack.REFVCHRNO == null || this.BillTrack.REFVCHRNO == "" || this.BillTrack.REFVCHRNO == undefined) {
                this.prepareBillTrackVoucherWise(this.BillTrack, this.BillTrack.NonTracking);
            }
        }
    };
    BillTrackingAmendmentComponent.prototype.onADjustmentChange = function (index) {
        var _this = this;
        if (this._transactionService.nullToZeroConverter(this.BillTrack.BILL[index].TAdjustingAmt) > this.BillTrack.BILL[index].DUEAMOUNT) {
            this.alertService.error("Adjustment Amount greater than due amount detected");
            this.BillTrack.BILL[index].TAdjustingAmt = 0;
            return;
        }
        this.BillTrack.TOTALADJAMOUNT = 0;
        this.BillTrack.BILL.forEach(function (x) {
            _this.BillTrack.TOTALADJAMOUNT = _this._transactionService.nullToZeroConverter(_this.BillTrack.TOTALADJAMOUNT) + _this._transactionService.nullToZeroConverter(x.TAdjustingAmt);
        });
        var totalAdjustingAmount = 0;
        if (this._transactionService.nullToZeroConverter(this.BillTrack.ADJUSTINGAMOUNT) == 0) {
            totalAdjustingAmount = this._transactionService.nullToZeroConverter(this.BillTrack.BALANCE);
        }
        else {
            totalAdjustingAmount = this._transactionService.nullToZeroConverter(this.BillTrack.ADJUSTINGAMOUNT);
        }
        if (this._transactionService.nullToZeroConverter(this.BillTrack.TOTALADJAMOUNT) > this._transactionService.nullToZeroConverter(totalAdjustingAmount)) {
            this.alertService.error("Adjusted amount is greater than Tracking amount");
            this.BillTrack.BILL[index].TAdjustingAmt = 0;
            this.BillTrack.TOTALADJAMOUNT = 0;
            this.BillTrack.BILL.forEach(function (x) {
                _this.BillTrack.TOTALADJAMOUNT = _this._transactionService.nullToZeroConverter(_this.BillTrack.TOTALADJAMOUNT) + _this._transactionService.nullToZeroConverter(x.TAdjustingAmt);
            });
            return;
        }
        if (index + 1 < this.BillTrack.BILL.length) {
            document.getElementById("adj" + (index + 1)).focus();
        }
        this.RecalculateManualChangeInTAdjustment(); //biju dai code for individual one to many calc
    };
    BillTrackingAmendmentComponent.prototype.RecalculateManualChangeInTAdjustment = function () {
        if (this.selectedRow.filter(function (x) { return x.checkbox == true; }).length > 1) {
            this.BillTrack.BILL.filter(function (x) {
                if (x.TAdjustingAmt >= 0) {
                    x.TAdjustingAmt = null;
                }
            });
            this.alertService.error("Manual Adjustment features is available only for single non track voucher.");
            this.autoAdjustValue = true;
        }
        var remainingAmount = 0;
        var actualTAdjustingAmount = 0;
        this.HoldALLBillList = [];
        for (var _i = 0, _a = this.selectedRow; _i < _a.length; _i++) {
            var i = _a[_i];
            for (var _b = 0, _c = this.BillTrack.BILL; _b < _c.length; _b++) {
                var j = _c[_b];
                if (j.TAdjustingAmt > 0) {
                    actualTAdjustingAmount = j.TAdjustingAmt;
                    var minValue = Math.min(actualTAdjustingAmount, i.NONTRACKAMOUNT);
                    remainingAmount = i.NONTRACKAMOUNT - minValue;
                    if (minValue >= j.TAdjustingAmt) {
                        var b = {};
                        b.AMOUNT = minValue;
                        b.REFBILL = j.BILLNO;
                        b.VCHRNO = i.INVOICENO;
                        b.ACID = this.BillTrack.ACID;
                        b.TRNDATE = new Date(this.BillTrack.TRNDATE);
                        b.VOUCHERTYPE = i.INVOICENO.substring(0, 2);
                        this.HoldALLBillList.push(b);
                    }
                    // console.log("remaining amount", remainingAmount);
                    // if (remainingAmount > 0) {
                    //     // Check for the next bill and distribute remaining amount if necessary
                    //     let nextBillIndex = this.BillTrack.BILL.indexOf(j) + 1;
                    //     while (nextBillIndex < this.BillTrack.BILL.length && this.BillTrack.BILL[nextBillIndex].TAdjustingAmt <= 0) {
                    //         nextBillIndex++;
                    //     }
                    //     if(this.BillTrack.BILL[nextBillIndex].TAdjustingAmt > 0){
                    //     if (nextBillIndex < this.BillTrack.BILL.length) {
                    //         const nextBill = this.BillTrack.BILL[nextBillIndex];
                    //         if (remainingAmount >= nextBill.TAdjustingAmt) {
                    //             // Deduct remaining amount from the next bill
                    //             remainingAmount -= nextBill.TAdjustingAmt;
                    //             let b: BillTrack = <BillTrack>{}
                    //             b.AMOUNT = nextBill.TAdjustingAmt;
                    //             b.REFBILL = nextBill.BILLNO;
                    //             b.VCHRNO = i.INVOICENO;
                    //             b.ACID = this.BillTrack.ACID;
                    //             b.TRNDATE = new Date(this.BillTrack.TRNDATE);
                    //             b.VOUCHERTYPE = i.INVOICENO.substring(0, 2);
                    //             this.HoldALLBillList.push(b);
                    //             break;
                    //         } else {
                    //             // Distribute remaining amount among next bill and update current bill's adjusting amount
                    //             let b: BillTrack = <BillTrack>{}
                    //             b.AMOUNT = remainingAmount;
                    //             b.REFBILL = nextBill.BILLNO;
                    //             b.VCHRNO = i.INVOICENO;
                    //             b.ACID = this.BillTrack.ACID;
                    //             b.TRNDATE = new Date(this.BillTrack.TRNDATE);
                    //             b.VOUCHERTYPE = i.INVOICENO.substring(0, 2);
                    //             this.HoldALLBillList.push(b);
                    //             // Update current bill's adjusting amount
                    //             this.BillTrack.BILL[nextBillIndex].TAdjustingAmt -= remainingAmount;
                    //             remainingAmount = 0; // No remaining amount after distribution
                    //             break;
                    //         }
                    //     }
                    // }
                    // }
                }
            }
        }
    };
    BillTrackingAmendmentComponent.prototype.IndividualAdjustment = function (index) {
        // let totalAdjustedAmount: number = 0;
        // for (let i in this.BillTrack.BILL) {
        //     totalAdjustedAmount = totalAdjustedAmount + this._transactionService.nullToZeroConverter(this.BillTrack.BILL[i].TAdjustingAmt);
        // }
        // if (this._transactionService.nullToZeroConverter(this.BillTrack.ADJUSTINGAMOUNT) > 0) {
        //     let adjustableAmount = this._transactionService.nullToZeroConverter(this.BillTrack.ADJUSTINGAMOUNT) - this._transactionService.nullToZeroConverter(totalAdjustedAmount);
        //     if (adjustableAmount <= this._transactionService.nullToZeroConverter(this.BillTrack.BILL[index].DUEAMOUNT) && adjustableAmount > 0) {
        //         this.BillTrack.BILL[index].TAdjustingAmt = adjustableAmount;
        //     } else if (adjustableAmount > 0 && adjustableAmount > this.BillTrack.BILL[index].DUEAMOUNT) {
        //         this.BillTrack.BILL[index].TAdjustingAmt = this.BillTrack.BILL[index].DUEAMOUNT;
        var _this = this;
        //     }
        //     this.BillTrack.TOTALADJAMOUNT = 0
        //     this.BillTrack.BILL.forEach(x => {
        //         this.BillTrack.TOTALADJAMOUNT = (this.BillTrack.TOTALADJAMOUNT) + this._transactionService.nullToZeroConverter(x.TAdjustingAmt)
        //     })
        //     if (index < this.BillTrack.BILL.length) {
        //         if (document.getElementById("adj" + (index + 1)) != null) {
        //             document.getElementById("adj" + (index + 1)).focus()
        //         }
        //     }
        // }
        this.BillTrack.TOTALADJAMOUNT = 0;
        this.BillTrack.BILL.forEach(function (x) {
            _this.BillTrack.TOTALADJAMOUNT = _this._transactionService.nullToZeroConverter(_this.BillTrack.TOTALADJAMOUNT) + _this._transactionService.nullToZeroConverter(x.TAdjustingAmt);
        });
        this.RecalculateManualChangeInTAdjustment();
    };
    BillTrackingAmendmentComponent.prototype.prepareBillTrackVoucherWise = function (BillTrackList, voucherlist) {
        for (var _i = 0, voucherlist_1 = voucherlist; _i < voucherlist_1.length; _i++) {
            var v = voucherlist_1[_i];
            v.PENDINGAMOUNT = this._transactionService.nullToZeroConverter(v.AMOUNT) - this._transactionService.nullToZeroConverter(v.TRACKED_AMOUNT);
        }
        for (var _a = 0, _b = BillTrackList.BILL; _a < _b.length; _a++) {
            var b = _b[_a];
            b.TempAdjustingAmount = b.TAdjustingAmt;
        }
        for (var _c = 0, _d = BillTrackList.BILL; _c < _d.length; _c++) {
            var bill = _d[_c];
            bill.TRACK = [];
            if (bill.TempAdjustingAmount > 0) {
                for (var _e = 0, voucherlist_2 = voucherlist; _e < voucherlist_2.length; _e++) {
                    var voucher = voucherlist_2[_e];
                    if (bill.TempAdjustingAmount < voucher.PENDINGAMOUNT) {
                        bill.TRACK.push({
                            TRACKBY: voucher.VCHRNO,
                            TRACKAMOUNT: bill.TempAdjustingAmount
                        });
                        voucher.PENDINGAMOUNT = this._transactionService.nullToZeroConverter(voucher.PENDINGAMOUNT) -
                            this._transactionService.nullToZeroConverter(bill.TAdjustingAmt);
                        bill.TempAdjustingAmount = 0;
                        break;
                    }
                    if ((bill.TempAdjustingAmount == voucher.PENDINGAMOUNT) && voucher.PENDINGAMOUNT > 0) {
                        bill.TRACK.push({
                            TRACKBY: voucher.VCHRNO,
                            TRACKAMOUNT: bill.TempAdjustingAmount
                        });
                        voucher.PENDINGAMOUNT = 0;
                        bill.TempAdjustingAmount = 0;
                        break;
                    }
                    if (bill.TempAdjustingAmount > voucher.PENDINGAMOUNT) {
                        bill.TRACK.push({
                            TRACKBY: voucher.VCHRNO,
                            TRACKAMOUNT: voucher.PENDINGAMOUNT
                        });
                        bill.TempAdjustingAmount = bill.TempAdjustingAmount - voucher.PENDINGAMOUNT;
                        voucher.PENDINGAMOUNT = 0;
                        continue;
                    }
                }
            }
        }
    };
    BillTrackingAmendmentComponent.prototype.updown = function ($event) {
        if ($event.code == "F1") {
            $event.preventDefault();
            this.BillTrack.SHOWMORE = !this.BillTrack.SHOWMORE;
        }
        else if ($event.code == "ArrowDown") {
            $event.preventDefault();
            if (this.selectVoucherIndex == this.pendingVoucherList.length) {
                this.selectVoucherIndex = this.pendingVoucherList.length;
            }
            else {
                this.selectVoucherIndex++;
            }
        }
        else if ($event.code == "ArrowUp") {
            $event.preventDefault();
            if (this.selectVoucherIndex == 0) {
                this.selectVoucherIndex = 0;
            }
            else {
                this.selectVoucherIndex--;
            }
        }
    };
    BillTrackingAmendmentComponent.prototype.DeleteExeedTrack = function () { };
    BillTrackingAmendmentComponent.prototype.DoBillTrackFromBeg = function () {
        var _this = this;
        if (!this.BillTrack.ACID) {
            this.alertService.warning("Please select the party name first!");
            return;
        }
        // this._transactionService.TrnMainObj.Mode = 'VIEW'
        if (this.masterServicce.userSetting.EnableLatePost == 1) {
            this.masterServicce.CheckBillTrackPost(this.BillTrack.ACID).subscribe(function (data) {
                if (data.status == "ok") {
                    _this.DueList(_this.BillTrack);
                    _this.NonTracking(_this.BillTrack);
                }
                else {
                    _this.spinnerService.hide();
                    _this.alertService.error("Some of the Bill have not been posted.Please post the Bill and continue the amendment");
                    return;
                }
            });
        }
        else {
            this.DueList(this.BillTrack);
            this.NonTracking(this.BillTrack);
        }
    };
    BillTrackingAmendmentComponent.prototype.DueList = function (partyData) {
        var _this = this;
        this.masterServicce.DueVoucherAmendment(partyData.ACID, this.BillTrack.TRNDATE, this.BillTrack.PARTYTYPE, this.BillTrack.SHOWZEROBALANCE, this.BillTrack.trackBill).subscribe(function (res) {
            if (res.status == "ok") {
                _this.spinnerService.hide();
                //this.BillTrack.LEDGERBALANCE = res.result.balance[0].BALANCE
                _this.BillTrack.DUEBALANCE = res.result.dueBalance[0].DUEBALANCE;
                _this.BillTrack.BALANCE = Math.abs(Math.round(_this._transactionService.nullToZeroConverter(res.result.dueBalance[0].DUEBALANCE) - _this._transactionService.nullToZeroConverter(res.result.balance[0].BALANCE)));
                _this.BillTrack.BILL = res.result.bill;
                console.log("ww", _this.BillTrack.BILL);
            }
            else {
                _this.spinnerService.hide();
                _this.alertService.error(res.result);
            }
        }, function (error) {
            _this.spinnerService.hide();
            _this.alertService.error(error);
        });
    };
    BillTrackingAmendmentComponent.prototype.NonTracking = function (partyData) {
        var _this = this;
        this.masterServicce.DueVoucherAmendment_Nontracking(partyData.ACID, this.BillTrack.TRNDATE, this.BillTrack.PARTYTYPE, this.BillTrack.SHOWZEROBALANCE, this.BillTrack.trackBill).subscribe(function (res) {
            if (res.status == "ok") {
                _this.spinnerService.hide();
                // this.BillTrack.LEDGERBALANCE = res.result.balance[0].BALANCE
                // this.BillTrack.DUEBALANCE = res.result.dueBalance[0].DUEBALANCE
                // this.BillTrack.BALANCE = Math.abs(Math.round(this._transactionService.nullToZeroConverter(res.result.dueBalance[0].DUEBALANCE) - this._transactionService.nullToZeroConverter(res.result.balance[0].BALANCE)))
                _this.BillTrack.NonTracking = res.result;
                if (_this.BillTrack.NonTracking.length > 0) {
                    _this.selectedAll = true;
                    //after loading all checkbox will be checked for bulk 
                    _this.selectAllIndex(true);
                }
                else {
                    _this.BillTrack.LEDGERBALANCE = 0;
                }
            }
            else {
                _this.spinnerService.hide();
                _this.alertService.error(res.result);
            }
        }, function (error) {
            _this.spinnerService.hide();
            _this.alertService.error(error);
        });
    };
    BillTrackingAmendmentComponent.prototype.BullTracking = function (value) {
    };
    return BillTrackingAmendmentComponent;
}());
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])("genericGrid"),
    __metadata("design:type", __WEBPACK_IMPORTED_MODULE_4__common_popupLists_generic_grid_generic_popup_grid_component__["c" /* GenericPopUpComponent */])
], BillTrackingAmendmentComponent.prototype, "genericGrid", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])("genericDueGrid"),
    __metadata("design:type", __WEBPACK_IMPORTED_MODULE_4__common_popupLists_generic_grid_generic_popup_grid_component__["c" /* GenericPopUpComponent */])
], BillTrackingAmendmentComponent.prototype, "genericDueGrid", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["HostListener"])("document : keydown", ["$event"]),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [KeyboardEvent]),
    __metadata("design:returntype", void 0)
], BillTrackingAmendmentComponent.prototype, "updown", null);
BillTrackingAmendmentComponent = __decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
        selector: 'bill-tracking-amendment',
        template: __webpack_require__(1320),
        styles: [__webpack_require__(9)]
    }),
    __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_5__common_services_spinner_spinner_service__["a" /* SpinnerService */], __WEBPACK_IMPORTED_MODULE_3__common_services_alert_alert_service__["a" /* AlertService */], __WEBPACK_IMPORTED_MODULE_1__common_repositories__["a" /* MasterRepo */], __WEBPACK_IMPORTED_MODULE_2__common_Transaction_Components_transaction_service__["a" /* TransactionService */], __WEBPACK_IMPORTED_MODULE_7__bill_tracking_amendment_service__["a" /* BillTrackingAmendmentService */]])
], BillTrackingAmendmentComponent);



/***/ }),

/***/ 1253:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__common_repositories__ = __webpack_require__(13);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__common_Transaction_Components_transaction_service__ = __webpack_require__(7);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__common_services_alert_alert_service__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__common_popupLists_generic_grid_generic_popup_grid_component__ = __webpack_require__(35);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__common_services_permission__ = __webpack_require__(15);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__theme_pipes__ = __webpack_require__(560);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_moment__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_moment___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_7_moment__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__angular_router__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__common_services_spinner_spinner_service__ = __webpack_require__(20);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return CapitalVoucherComponent; });










var CapitalVoucherComponent = (function () {
    function CapitalVoucherComponent(masterService, _transactionService, alertService, _authService, twoDigitPipe, changeDetection, el, _activatedRoute, _loadingSerive) {
        //  this.masterService.ShowMore = false;
        this.masterService = masterService;
        this._transactionService = _transactionService;
        this.alertService = alertService;
        this._authService = _authService;
        this.twoDigitPipe = twoDigitPipe;
        this.changeDetection = changeDetection;
        this.el = el;
        this._activatedRoute = _activatedRoute;
        this._loadingSerive = _loadingSerive;
        this.selectedIndex = 0;
        this.trntranTotal = 0;
        this.AcObj = {};
        this.GROSSAMOUNT = 0;
        this.discount = 0;
        this.taxableAmount = 0;
        this.nonTaxableAmount = 0;
        this.VATAMOUNT = 0;
        this.NETAMOUNT = 0;
        this.rounding = 0;
        this.nexIndex = 0;
        this.totalamount = 0;
        this.EntryDate = {};
        this.VoucherEntry = {};
        this.differenceAmount = 0;
        this.applyPipeinDiscount = true;
        this.applyPipeinVatAmount = true;
        this.applyPipeinTaxableAmount = true;
        this.applyPipeinNonTaxableAmount = true;
        this.applyPipeinRoundingAmount = true;
        this.specialKeys = ["Tab"];
        this.gridCostCenterListPopupSettings = new __WEBPACK_IMPORTED_MODULE_4__common_popupLists_generic_grid_generic_popup_grid_component__["b" /* GenericPopUpSettings */]();
        this.gridCostCenterGroupListPopupSettings = new __WEBPACK_IMPORTED_MODULE_4__common_popupLists_generic_grid_generic_popup_grid_component__["b" /* GenericPopUpSettings */]();
        this.gridACListPopupSettings = new __WEBPACK_IMPORTED_MODULE_4__common_popupLists_generic_grid_generic_popup_grid_component__["b" /* GenericPopUpSettings */]();
        this.gridPopupSettingsForSupplier = new __WEBPACK_IMPORTED_MODULE_4__common_popupLists_generic_grid_generic_popup_grid_component__["b" /* GenericPopUpSettings */]();
        this.costlists = [];
        this.errorOccurfromDate = false;
        this.gridSubLedgerSetting = new __WEBPACK_IMPORTED_MODULE_4__common_popupLists_generic_grid_generic_popup_grid_component__["b" /* GenericPopUpSettings */]();
        this.showTDSDetailPopup = false;
        this.PartyListFilter = [];
        this.FilterList = [];
        ////console.log("showMore",this.masterService.ShowMore);
        this._transactionService.initialFormLoad(64);
        this._transactionService.creditList = [];
        this.addCreditListnewRow();
        this._transactionService.TrnMainObj.DCAMNT = 0.00;
        this._transactionService.TrnMainObj.NETAMNT = 0.00;
        this._transactionService.TrnMainObj.TAXABLE = 0.00;
        this._transactionService.TrnMainObj.NONTAXABLE = 0.00;
        this._transactionService.TrnMainObj.VATAMNT = 0.00;
        this._transactionService.TrnMainObj.TOTAMNT = 0.00;
        this._transactionService.TrnMainObj.ROUNDOFF = 0.00;
        this.userSetting = _authService.getSetting();
        this.getSupplierList();
        this.getChalanSeries();
        this.getCostCenterList();
        this.userProfile = this._authService.getUserProfile();
        var y = this.masterService.PhiscalObj.BeginDate;
        y = y.substring(0, 10);
        this.date2 = y;
        if (this.userProfile.CompanyInfo.ActualFY == this.masterService.PhiscalObj.PhiscalID) {
            this.date1 = new Date();
        }
        else {
            this.date1 = this.masterService.PhiscalObj.EndDate;
        }
        this._transactionService.DrillMode = "New";
        ////console.log("dcamount",this._transactionService.TrnMainObj.DCAMNT);
    }
    CapitalVoucherComponent.prototype.ngOnInit = function () {
        var _this = this;
        this._activatedRoute.queryParams.subscribe(function (params) {
            if (params['mode'] == "DRILL") {
                var VCHR = params['voucher'];
                var vparams = [];
                vparams = VCHR.split('-');
                _this._loadingSerive.show("Loading Invoice");
                _this._transactionService.CapitalBudgetData(VCHR, vparams[1], vparams[2]);
                // this.masterService.LoadTransaction(VCHR, vparams[1], vparams[2]).subscribe((res) => {
                //   if (res.status == "ok") {
                //     this._loadingSerive.hide()
                //     this._transactionService.TrnMainObj = res.result;
                //     //console.log("Vat_Purchase", this.userSetting.Vat_Purchase)
                //     let abc = this._transactionService.TrnMainObj.TrntranList.findIndex(x => x.A_ACID == this.userSetting.Vat_Purchase);
                //     //console.log("abc", abc)
                //     if (abc >= 0) {
                //       this._transactionService.TrnMainObj.TrntranList.splice(abc, 1)
                //     }
                //     this._transactionService.TrnMainObj.VoucherType = 64;
                //     this._transactionService.pageHeading = "Capital Voucher";
                //     this._transactionService.TrnMainObj.VoucherPrefix = "CP";
                //     this._transactionService.TrnMainObj.Mode = "VIEW";
                //   }
                // }, err => {
                //   this._loadingSerive.hide()
                //   this.alertService.error(err)
                // })
                _this._transactionService.TrnMainObj.VoucherType = 64;
                _this._transactionService.pageHeading = "Capitalize Purchase Voucher";
                _this._transactionService.TrnMainObj.VoucherPrefix = "CP";
                setTimeout(function () {
                    console.log("mode of Voucher", _this._transactionService.TrnMainObj);
                    // this._transactionService.TrnMainObj.Mode = "VIEW";
                }, 1000);
                _this._transactionService.viewDate.subscribe(function (data) {
                    _this.initDate();
                });
            }
            else if (params['mode'] == "fromLatepost") {
                // alert("params['mode']==Capital voucher")
                _this._loadingSerive.show("Loading Invoice");
                _this._transactionService.CapitalBudgetData(params.voucher, params.DIVISION, params.PHISCALID);
            }
            else {
                _this._transactionService.TrnMainObj.Mode = 'NEW';
                _this.initDate();
                _this._transactionService.viewDate.subscribe(function (data) {
                    _this.initDate();
                });
                _this.alertService.emitShowHideSubject.subscribe(function (res) {
                    _this.mangeFocusonDatefield();
                });
                _this.masterService.ShowMore = false;
            }
        });
        this._transactionService.TrnMainObj.CNDN_MODE = 0;
    };
    CapitalVoucherComponent.prototype.ngAfterContentChecked = function () {
        this.differenceAmount = this._transactionService.diffAmountItemForAccount;
        this.diffAmountDrCrType = this._transactionService.diffAmountDrCrType;
        this.changeDetection.detectChanges();
    };
    CapitalVoucherComponent.prototype.initDate = function () {
        if (this._transactionService.TrnMainObj.Mode == 'NEW') {
            // this._transactionService.TrnMainObj.TRNDATE = this.VoucherEntry.DATE1 =   new Date().toJSON().split('T')[0];
            // this._transactionService.TrnMainObj.TRN_DATE = this.EntryDate.DATE3 = new Date().toJSON().split('T')[0];
            // this.changeEntryDate(this.VoucherEntry.DATE1, "AD");
            // this._transactionService.TrnMainObj.TRN_DATE = this.VoucherEntry.DATE = new Date().toJSON().split('T')[0];
            // this.changeEndDate(this.VoucherEntry.DATE, "AD");
            // this._transactionService.TrnMainObj.TRNDATE = this.EntryDate.DATE3 = new Date().toJSON().split('T')[0];
            // this.changeEntryDate1(this.EntryDate.DATE3, "AD");
            // this.EntryDate.DATE2 = new Date().toJSON().split('T')[0];
            // this.changeEndDate1(this.EntryDate.DATE2, "AD");
            // this._transactionService.TrnMainObj.TRNDATE = this.EntryDate.PhiscalADDate = this.masterService.PhiscalObj.BeginDate.split('T')[0];
            // this.changePhiscalDate(this.EntryDate.PhiscalADDate, "AD");
            if (this.userProfile.CompanyInfo.ActualFY == this._transactionService.PhiscalObj.PhiscalID) {
                this._transactionService.TrnMainObj.TRNDATE = this.VoucherEntry.DATE1 = new Date().toJSON().split('T')[0];
                this._transactionService.TrnMainObj.TRN_DATE = this.EntryDate.DATE3 = new Date().toJSON().split('T')[0];
                this.changeEntryDate(this.VoucherEntry.DATE1, "AD");
                this._transactionService.TrnMainObj.TRNDATE = this.EntryDate.DATE3 = new Date().toJSON().split('T')[0];
                this.changeEntryDate1(this.EntryDate.DATE3, "AD");
                // this._transactionService.TrnMainObj.TRN_DATE = this.VoucherEntry.DATE = new Date().toJSON().split('T')[0];
                // this.changeEndDate(this.VoucherEntry.DATE, "AD");
                // this.EntryDate.DATE2 = new Date().toJSON().split('T')[0];
                // this.changeEndDate1(this.EntryDate.DATE2, "AD");
            }
            else {
                var x = this.masterService.PhiscalObj.EndDate;
                x = x.substring(0, 10);
                this._transactionService.TrnMainObj.TRNDATE = this.VoucherEntry.DATE1 = x;
                this._transactionService.TrnMainObj.TRN_DATE = x;
                this.changeEntryDate(this.VoucherEntry.DATE1, "AD");
                this._transactionService.TrnMainObj.TRNDATE = this.EntryDate.DATE3 = x;
                this.changeEntryDate1(this.EntryDate.DATE3, "AD");
                // this._transactionService.TrnMainObj.TRN_DATE = this.VoucherEntry.DATE = x;
                // this.changeEndDate(this.VoucherEntry.DATE, "AD");
                // this.EntryDate.DATE2 = x;
                // this.changeEndDate1(this.EntryDate.DATE2, "AD");
                ////console.log("ChecKEntrYDAte",this._transactionService.TrnMainObj.TRN_DATE)
            }
            this.EntryDate.PhiscalADDate = this.masterService.PhiscalObj.BeginDate.split('T')[0];
            this.changePhiscalDate(this.EntryDate.PhiscalADDate, "AD");
        }
        else {
            var trnDateForView = this._transactionService.TrnMainObj.TRNDATE;
            var trn_DateForView = this._transactionService.TrnMainObj.TRN_DATE;
            this.EntryDate.DATE3 = __WEBPACK_IMPORTED_MODULE_7_moment__(trnDateForView).format("YYYY-MM-DD");
            this.VoucherEntry.DATE1 = __WEBPACK_IMPORTED_MODULE_7_moment__(trn_DateForView).format("YYYY-MM-DD");
            this.changeEntryDate(this.VoucherEntry.DATE1, "AD");
            // this._transactionService.TrnMainObj.TRN_DATE =
            //  this.VoucherEntry.DATE = new Date().toJSON().split('T')[0];
            // this.changeEndDate(this.VoucherEntry.DATE, "AD");
            ////console.log("viewDATE3",this.EntryDate.DATE3);
            this.changeEntryDate1(this.EntryDate.DATE3, "AD");
            // this.EntryDate.DATE2 = new Date().toJSON().split('T')[0];
            // this.changeEndDate1(this.EntryDate.DATE2, "AD");
            // this._transactionService.TrnMainObj.TRNDATE =
            this.EntryDate.PhiscalADDate = this.masterService.PhiscalObj.BeginDate.split('T')[0];
            this.changePhiscalDate(this.EntryDate.PhiscalADDate, "AD");
        }
    };
    CapitalVoucherComponent.prototype.changeEntryDate = function (value, format) {
        this.dateChangeFormate = "DATE1" + format;
        // this.ValidatePhiscalYear(value,"TRN_DATE","DATE1");
        ////console.log("changebasdate", value, this.VoucherEntry.DATE1);
        var adbs = __webpack_require__(19);
        if (format == "AD") {
            this._transactionService.TrnMainObj.TRN_DATE = value;
            var yearValue = __WEBPACK_IMPORTED_MODULE_7_moment__(value).year();
            if (yearValue.toString().length == 4) {
                var adDate = (value.replace("-", "/")).replace("-", "/");
                var bsDate = adbs.ad2bs(adDate);
                bsDate.en.month = bsDate.en.month <= 9 ? "0" + (bsDate.en.month) : bsDate.en.month;
                this._transactionService.TrnMainObj.BS_DATE = this.VoucherEntry.BSDATE1 =
                    this.masterService.toADDate(value);
            }
        }
        else if (format == "BS") {
            this._transactionService.TrnMainObj.BS_DATE = value;
            var xyz = value.split("-");
            var DateValue = xyz[2] + "-" + xyz[1] + "-" + xyz[0];
            var datearr = value.split('/');
            var bsDate_1 = datearr[2] + "/" + datearr[1] + "/" + datearr[0];
            // var bsDate = (DateValue.replace("-", "/")).replace("-", "/");
            var adDate = adbs.bs2ad(bsDate_1);
            this._transactionService.TrnMainObj.TRN_DATE = this.VoucherEntry.DATE1 = this.masterService.toBSDate(value);
            this.ValidateBSDATE(this.VoucherEntry.DATE1, "DATE1", "TRN_DATE");
        }
    };
    CapitalVoucherComponent.prototype.changeEntryDate1 = function (value, format) {
        this.dateChangeFormate = "DATE3" + format;
        ////console.log("dateformat", value);
        var adbs = __webpack_require__(19);
        if (format == "AD") {
            this._transactionService.TrnMainObj.TRNDATE = value;
            var yearValue = __WEBPACK_IMPORTED_MODULE_7_moment__(value).year();
            ////console.log("yearLength",yearValue)
            if (yearValue.toString().length == 4) {
                var adDate = (value.replace("-", "/")).replace("-", "/");
                var bsDate = adbs.ad2bs(adDate);
                bsDate.en.month = bsDate.en.month <= 9 ? "0" + (bsDate.en.month) : bsDate.en.month;
                this._transactionService.TrnMainObj.BSDATE = this.EntryDate.BSDATE1 =
                    this.masterService.toADDate(value);
                this.bsDate = this.EntryDate.BSDATE1;
            }
        }
        else if (format == "BS") {
            this._transactionService.TrnMainObj.BSDATE = value;
            var datearr = value.split('/');
            var bsDate_2 = datearr[2] + "/" + datearr[1] + "/" + datearr[0];
            var xyz = value.split("-");
            var DateValue = xyz[2] + "-" + xyz[1] + "-" + xyz[0];
            // var bsDate = (DateValue.replace("-", "/")).replace("-", "/");
            var adDate = adbs.bs2ad(bsDate_2);
            this._transactionService.TrnMainObj.TRNDATE = this.EntryDate.DATE3 = this.masterService.toBSDate(value);
            //console.log("@@DATE3", this.EntryDate.DATE3);
            // this._transactionService.TrnMainObj.TRNDATE= this.EntryDate.DATE3;
            //this.ValidatePhiscalYear(this.EntryDate.DATE3,"TRNDATE",'DATE3');
            this.ValidateBSDATE(this.EntryDate.DATE3, "DATE3", "TRNDATE");
        }
        // //console.log('CheckDate',this._transactionService.TrnMainObj.TRN_DATE,this._transactionService.TrnMainObj.BS_DATE)
    };
    // changeEndDate(value, format: string) {
    //   var adbs = require("ad-bs-converter");
    //   if (format == "AD") {
    //     this._transactionService.TrnMainObj.TRNDATE = value;
    //     var adDate = (value.replace("-", "/")).replace("-", "/");
    //     var bsDate = adbs.ad2bs(adDate);
    //     this._transactionService.TrnMainObj.BSDATE = this.VoucherEntry.BSDATE2 = this._masterRepo.toBSDate(value);
    //   }
    //   else if (format == "BS") {
    //     var bsDate = (value.replace("-", "/")).replace("-", "/");
    //     var adDate = adbs.bs2ad(bsDate);
    //     this.VoucherEntry.DATE = this.masterService.toBSDate(value);
    //   }
    // }
    // changeEndDate1(value, format: string) {
    //   var adbs = require("ad-bs-converter");
    //   if (format == "AD") {
    //     this._transactionService.TrnMainObj.TRNDATE = value;
    //     var adDate = (value.replace("-", "/")).replace("-", "/");
    //     var bsDate = adbs.ad2bs(adDate);
    //     this._transactionService.TrnMainObj.BSDATE = this.EntryDate.BSDATE2 = bsDate.en.year + '-' + bsDate.en.month + '-' + (bsDate.en.day == '1' || bsDate.en.day == '2' || bsDate.en.day == '3' || bsDate.en.day == '4' || bsDate.en.day == '5' || bsDate.en.day == '6' || bsDate.en.day == '7' || bsDate.en.day == '8' || bsDate.en.day == '9' ? '0' + bsDate.en.day : bsDate.en.day);
    //   }
    //   else if (format == "BS") {
    //     var bsDate = (value.replace("-", "/")).replace("-", "/");
    //     var adDate = adbs.bs2ad(bsDate);
    //     this.EntryDate.DATE = this.masterService.toBSDate(value);
    //   }
    // }
    CapitalVoucherComponent.prototype.focusOutEntryDate = function ($event) {
        this.ValidatePhiscalYear($event.target.value, "TRNDATE", 'DATE3');
        this.ValidateBSDATE($event.target.value, "DATE1", "TRNDATE");
    };
    CapitalVoucherComponent.prototype.mangeFocusonDatefield = function () {
        if (this.errorOccurfromDate) {
            if (this.userProfile.CompanyInfo.ActualFY == this.masterService.PhiscalObj.PhiscalID) {
                var elementObj_1 = null;
                ////console.log("datechangeformat",this.dateChangeFormate);
                if (this.dateChangeFormate == 'DATE1BS') {
                    elementObj_1 = this._bsTrnDate;
                    this.VoucherEntry.DATE1 = __WEBPACK_IMPORTED_MODULE_7_moment__(this.date1).format("YYYY-MM-DD");
                    this.changeEntryDate(this.VoucherEntry.DATE1, 'AD');
                }
                else if (this.dateChangeFormate == 'DATE1AD') {
                    elementObj_1 = this._adTrnDate;
                    this.VoucherEntry.DATE1 = __WEBPACK_IMPORTED_MODULE_7_moment__(this.date1).format("YYYY-MM-DD");
                    this.changeEntryDate(this.VoucherEntry.DATE1, 'AD');
                }
                else if (this.dateChangeFormate == 'DATE3BS') {
                    elementObj_1 = this._bsEntryDate;
                    this.EntryDate.DATE3 = __WEBPACK_IMPORTED_MODULE_7_moment__(this.date1).format("YYYY-MM-DD");
                    this.changeEntryDate1(this.EntryDate.DATE3, 'AD');
                }
                else if (this.dateChangeFormate == 'DATE3AD') {
                    elementObj_1 = this._adEntryDate;
                    // this.EntryDate.DATE3 = moment(this.date1).format("YYYY-MM-DD");
                    ////console.log("entry date",this.EntryDate.DATE3);
                    this.EntryDate.DATE3 = new Date().toJSON().split('T')[0];
                    this.changeEntryDate1(this.EntryDate.DATE3, 'AD');
                }
                if (elementObj_1 != null) {
                    setTimeout(function () {
                        elementObj_1.nativeElement.focus();
                    }, 2);
                }
            }
            else {
                var x = this.masterService.PhiscalObj.EndDate;
                x = x.substring(0, 10);
                this._transactionService.TrnMainObj.TRNDATE = this.VoucherEntry.DATE1 = x;
                this._transactionService.TrnMainObj.TRN_DATE = x;
                this.changeEntryDate(this.VoucherEntry.DATE1, "AD");
                this._transactionService.TrnMainObj.TRNDATE = this.EntryDate.DATE3 = x;
                this.changeEntryDate1(this.EntryDate.DATE3, "AD");
                // this._transactionService.TrnMainObj.TRN_DATE = this.VoucherEntry.DATE = x;
                // this.changeEndDate(this.VoucherEntry.DATE, "AD");
                // this.EntryDate.DATE2 = x;
                // this.changeEndDate1(this.EntryDate.DATE2, "AD");
                ////console.log("ChecKEntrYDAte",this._transactionService.TrnMainObj.TRN_DATE)
            }
        }
    };
    CapitalVoucherComponent.prototype.showAcList = function (i) {
        this.selectedIndex = i;
        ////console.log("selectedIndex",this.selectedIndex);
        var TRNMODE = "" + this._transactionService.TrnMainObj.TRNMODE;
        ////console.log("vouchertype",this._transactionService.TrnMainObj.VoucherType);
        if (this._transactionService.TrnMainObj.VoucherType == 64) {
            TRNMODE = "ALL";
        }
        this.gridACListPopupSettings = {
            title: "Accounts",
            apiEndpoints: "/getAccountPagedListByMapId/Details/" + TRNMODE,
            defaultFilterIndex: 1,
            columns: [
                {
                    key: "ACID",
                    title: "AC CODE",
                    hidden: false,
                    noSearch: false
                },
                {
                    key: "ACNAME",
                    title: "A/C NAME",
                    hidden: false,
                    noSearch: false
                }
            ]
        };
        this.genericGridACList.show();
    };
    CapitalVoucherComponent.prototype.clearRow = function ($event, index) {
        try {
            $event.preventDefault();
            if (confirm("Are you sure you want to delete the row?")) {
                //console.log("inside the row");
                this.deleteCreditRow(index);
                // this.TrnTranCrAmtChange(0);
                // this.TrnTranDrAmtChange(0);
                this.onChagneCRAmount(index);
            }
        }
        catch (ex) {
            alert(ex);
        }
    };
    CapitalVoucherComponent.prototype.TrnTranCrAmtChange = function (value) {
        var _this = this;
        try {
            this.trntranTotal = 0;
            this._transactionService.TrnMainObj.TrntranList.forEach(function (x) {
                _this.trntranTotal += x.CRAMNT == null ? 0 : x.CRAMNT;
            });
            this._transactionService.trntranTotal = this.trntranTotal;
            this._transactionService.TrnMainObj.NETAMNT = this.trntranTotal;
            this._transactionService.TrnMainObj.TOTAMNT = this.trntranTotal;
            this._transactionService.calculateDrCrDifferences();
        }
        catch (ex) {
            alert(ex);
        }
    };
    CapitalVoucherComponent.prototype.TrnTranDrAmtChange = function (value) {
        var _this = this;
        try {
            this.trntranTotal = 0;
            this._transactionService.TrnMainObj.TrntranList.forEach(function (x) {
                _this.trntranTotal += x.DRAMNT == null ? 0 : x.DRAMNT;
            });
            this._transactionService.trntranTotal = this.trntranTotal;
            this._transactionService.TrnMainObj.NETAMNT = this.trntranTotal;
            this._transactionService.TrnMainObj.TOTAMNT = this.trntranTotal;
            this._transactionService.calculateDrCrDifferences();
        }
        catch (ex) {
            alert(ex);
        }
    };
    CapitalVoucherComponent.prototype.onAcSelect = function (acItem) {
        var _this = this;
        try {
            if (typeof acItem == "object") {
                var ac = acItem;
                this.AcObj = acItem;
                this._transactionService.creditList[this.selectedIndex].AccountItem = acItem;
                this._transactionService.creditList[this.selectedIndex].A_ACID = acItem.ACID;
                this._transactionService.creditList[this.selectedIndex].AccountItem.ACCODE = ac.ACCODE;
                this._transactionService.creditList[this.selectedIndex].acitem = ac;
                this._transactionService.creditList[this.selectedIndex].ACNAME = ac.ACNAME;
                this._transactionService.getAccountWiseTrnAmount(ac.ACID);
            }
            if (acItem.HASSUBLEDGER == 1) {
                this._transactionService.creditList[this.selectedIndex].disableSubLedger = false;
                setTimeout(function () {
                    _this.masterService.focusAnyControl("SubLedgerInputCr_" + _this.selectedIndex);
                    _this._transactionService.subledgerfocus = true;
                }, 20);
            }
            else {
                this._transactionService.creditList[this.selectedIndex].disableSubLedger = true;
                this._transactionService.creditList[this.selectedIndex].SL_ACNAME = '';
                this._transactionService.creditList[this.selectedIndex].CRAMNT = 0;
                this._transactionService.creditList[this.selectedIndex].NARATION = '';
                if (document.getElementById("SubLedgerInputCr_" + this.selectedIndex)) {
                    document.getElementById("SubLedgerInputCr_" + this.selectedIndex).removeAttribute("placeholder");
                }
                setTimeout(function () {
                    _this.masterService.focusAnyControl("Amount_" + _this.selectedIndex);
                }, 20);
            }
        }
        catch (error) {
            this.alertService.info(error);
        }
    };
    CapitalVoucherComponent.prototype.onFocusCreditSelection = function (event, i) {
        var acObj = this._transactionService.creditList[i].AccountItem;
        if (acObj != null && acObj !== undefined) {
            this._transactionService.getAccountWiseTrnAmount(acObj.ACID);
        }
    };
    CapitalVoucherComponent.prototype.getChalanSeries = function () {
        var _this = this;
        this._transactionService.TrnMainObj.CHALANNOPREFIX = '';
        var vType = this._transactionService.TrnMainObj.VoucherPrefix ? this._transactionService.TrnMainObj.VoucherPrefix : '';
        this.masterService.getAllChalanSeries(vType).subscribe(function (response) {
            var res = response.json();
            if (res && res.status === 'ok' && res.result) {
                _this.chalanSeries = res.result ? res.result : [];
            }
            else {
                _this.chalanSeries = [];
            }
        }, function (error) {
            _this.chalanSeries = [];
        });
    };
    CapitalVoucherComponent.prototype.getCostCenterList = function () {
        var _this = this;
        this.masterService.getAllNEWCostCenter().subscribe(function (res) {
            if (res) {
                ////console.log("result", res)
                _this.costlists.push(res);
                _this.costlists = res.result;
                // _transactionService.TrnMainObj.COSTCENTER ='';
            }
        }, function (error) {
            _this.costlists = [];
        });
    };
    CapitalVoucherComponent.prototype.addCreditnewRow = function (event, index) {
        var _this = this;
        this.nexIndex = index + 1;
        if (!this._transactionService.creditList) {
            this._transactionService.creditList = [];
        }
        var currentObj = this._transactionService.creditList[index];
        if (index != -1 &&
            (!currentObj.AccountItem ||
                currentObj.AccountItem.ACID == undefined ||
                currentObj.AccountItem.ACID == "")) {
            alert("Please Select A/C");
            return;
        }
        if (index != -1 &&
            ((currentObj.DRAMNT == 0 || currentObj.DRAMNT == null) &&
                (currentObj.CRAMNT == 0 || currentObj.CRAMNT == null))) {
            alert("Debit Amount or Credit Amount is Required.");
            return;
        }
        if (this._transactionService.userSetting.COSTCENTERCOMPULSORY == 1 && this._transactionService.userSetting.enableCostCenter == 2) {
            if (index != -1 && ((currentObj.CostCenter == "" || currentObj.CostCenter == null || currentObj.CostCenter == undefined))) {
                alert("Please Select Cost Center.");
                return;
            }
        }
        this.addCreditListnewRow();
        setTimeout(function () {
            if (document.getElementById("AccountName_" + _this.nexIndex) != null) {
                document.getElementById("AccountName_" + _this.nexIndex).focus();
            }
        }, 100);
    };
    CapitalVoucherComponent.prototype.addCreditListnewRow = function () {
        var newRow = {};
        var newaclist = {};
        newRow.AccountItem = newaclist;
        newRow.NARATION = "";
        newRow.inputMode = true;
        newRow.editMode = true;
        newRow.CRAMNT = 0;
        newRow.DRAMNT = 0;
        newRow.ROWMODE = "new";
        newRow.PartyDetails = [];
        newRow.disableSubLedger = true;
        this._transactionService.creditList.push(newRow);
        this.accnamefocus = true;
    };
    CapitalVoucherComponent.prototype.discountChange = function (event) {
        this.applyPipeinDiscount = false;
        var discountAmount = this._transactionService.nullToReturnZero(event.target.value);
        //  this._transactionService.TrnMainObj.DCAMNT = discountAmount;
        this._transactionService.TrnMainObj.NETAMNT = discountAmount;
        this.budgetCalculation();
        this.calculateCrAmount();
    };
    CapitalVoucherComponent.prototype.discountFocusOut = function (event) {
        this.applyPipeinDiscount = true;
        //this._transactionService.TrnMainObj.DCAMNT = this.formatetoTwoDecimal(this._transactionService.TrnMainObj.DCAMNT);
    };
    CapitalVoucherComponent.prototype.foucsOutTaxableAmount = function (event) {
        this.applyPipeinTaxableAmount = true;
        // this._transactionService.TrnMainObj.TAXABLE = this.formatetoTwoDecimal(this._transactionService.TrnMainObj.TAXABLE);
        ////console.log("focusout taxable",this._transactionService.TrnMainObj.TAXABLE);
    };
    CapitalVoucherComponent.prototype.foucsOutNonTaxableAmount = function (event) {
        this.applyPipeinNonTaxableAmount = true;
        // this._transactionService.TrnMainObj.NONTAXABLE = this.formatetoTwoDecimal(this._transactionService.TrnMainObj.NONTAXABLE);
    };
    CapitalVoucherComponent.prototype.roundOffFocusOut = function (event) {
        ////console.log("keyborad",typeof event.key);
        this.applyPipeinRoundingAmount = true;
        // if (event.key !== undefined){
        //   this._transactionService.TrnMainObj.ROUNDOFF = this.formatetoTwoDecimal(this._transactionService.TrnMainObj.ROUNDOFF);
        // }
    };
    CapitalVoucherComponent.prototype.foucsOutVATAmount = function ($event) {
        this.applyPipeinVatAmount = true;
        //this._transactionService.TrnMainObj.VATAMNT = this.formatetoTwoDecimal(this._transactionService.TrnMainObj.VATAMNT);
    };
    CapitalVoucherComponent.prototype.formatetoTwoDecimal = function (formatValue) {
        if (typeof formatValue == 'number' || typeof formatValue == 'string') {
            formatValue = Number(formatValue);
            return formatValue = formatValue.toFixed(2);
        }
        else {
            formatValue = 0;
            return formatValue = formatValue.toFixed(2);
        }
    };
    CapitalVoucherComponent.prototype.taxableAmountChange = function (event) {
        this.applyPipeinTaxableAmount = false;
        if (this.specialKeys.indexOf(event.key) != -1) {
            ////console.log("reachtab");
        }
        else {
            this._transactionService.TrnMainObj.NONTAXABLE = this._transactionService.nullToReturnZero(this._transactionService.TrnMainObj.TOTAMNT) -
                this._transactionService.nullToReturnZero(this._transactionService.TrnMainObj.DCAMNT) -
                this._transactionService.nullToReturnZero(this._transactionService.TrnMainObj.TAXABLE);
            this.calculation();
        }
        //this._transactionService.TrnMainObj.TAXABLE = this._transactionService.nullToReturnZero(event.target.value);
    };
    CapitalVoucherComponent.prototype.nonTaxableAmountChange = function (event) {
        this.applyPipeinNonTaxableAmount = false;
        if (this.specialKeys.indexOf(event.key) != -1) {
            return false;
        }
        // this._transactionService.TrnMainObj.NONTAXABLE = this._transactionService.nullToReturnZero(event.target.value);
        this._transactionService.TrnMainObj.TAXABLE = this._transactionService.TrnMainObj.TOTAMNT -
            this._transactionService.nullToReturnZero(this._transactionService.TrnMainObj.DCAMNT) -
            this._transactionService.nullToReturnZero(this._transactionService.TrnMainObj.NONTAXABLE);
        this.calculation();
    };
    CapitalVoucherComponent.prototype.VATAmountChange = function (event) {
        this.applyPipeinVatAmount = false;
        // this._transactionService.TrnMainObj.VATAMNT = this._transactionService.nullToZeroConverter(event.target.value);
        //this.budgetCalculation();
        this._transactionService.TrnMainObj.NETAMNT = this._transactionService.nullToReturnZero(this._transactionService.TrnMainObj.TAXABLE) +
            this._transactionService.nullToReturnZero(this._transactionService.TrnMainObj.VATAMNT) +
            this._transactionService.nullToReturnZero(this._transactionService.TrnMainObj.NONTAXABLE);
        this._transactionService.totalDRAmount = this._transactionService.nullToReturnZero(this._transactionService.TrnMainObj.TOTAMNT) + this._transactionService.nullToReturnZero(this._transactionService.TrnMainObj.VATAMNT);
    };
    CapitalVoucherComponent.prototype.RoundedAmountChange = function (event) {
        var _this = this;
        this.applyPipeinRoundingAmount = false;
        event.preventDefault();
        var roundOffAmount = this._transactionService.nullToReturnZero(this._transactionService.TrnMainObj.ROUNDOFF);
        if (roundOffAmount != 0) {
            // this.calculateCrAmount();
            this._transactionService.TrnMainObj.NETAMNT = this._transactionService.nullToReturnZero(this._transactionService.TrnMainObj.TAXABLE) +
                this._transactionService.nullToReturnZero(this._transactionService.TrnMainObj.VATAMNT) +
                this._transactionService.nullToReturnZero(this._transactionService.TrnMainObj.NONTAXABLE);
            this._transactionService.storePreviousRoundOff = this._transactionService.TrnMainObj.ROUNDOFF;
            this._transactionService.TrnMainObj.NETAMNT = this._transactionService.TrnMainObj.NETAMNT +
                this._transactionService.TrnMainObj.ROUNDOFF;
            if (roundOffAmount < 0) {
                this._transactionService.totalCRAmount = 0;
                this._transactionService.creditList.forEach(function (x) { return _this._transactionService.totalCRAmount += x.CRAMNT; });
                this._transactionService.totalCRAmount = this._transactionService.totalCRAmount + this._transactionService.nullToReturnZero(this._transactionService.TrnMainObj.DCAMNT)
                    + this._transactionService.nullToReturnZero(Math.abs(this._transactionService.TrnMainObj.ROUNDOFF));
            }
            else {
                this._transactionService.totalCRAmount = 0;
                this._transactionService.creditList.forEach(function (x) { return _this._transactionService.totalCRAmount += x.CRAMNT; });
                this._transactionService.totalCRAmount = this._transactionService.totalCRAmount + this._transactionService.nullToReturnZero(this._transactionService.TrnMainObj.DCAMNT)
                    - this._transactionService.nullToReturnZero(Math.abs(this._transactionService.TrnMainObj.ROUNDOFF));
            }
        }
        else {
            this.calculateCrAmount();
            this._transactionService.TrnMainObj.NETAMNT = this._transactionService.nullToReturnZero(this._transactionService.TrnMainObj.TAXABLE) +
                this._transactionService.nullToReturnZero(this._transactionService.TrnMainObj.VATAMNT) +
                this._transactionService.nullToReturnZero(this._transactionService.TrnMainObj.NONTAXABLE);
        }
    };
    CapitalVoucherComponent.prototype.roundChange = function ($event) {
        ////console.log("round change");
    };
    CapitalVoucherComponent.prototype.onChagneCRAmount = function (i) {
        // this._transactionService.creditList[i].CRAMNT_WITHOUTVAT=Math.round(((this._transactionService.creditList[i].CRAMNT/1.13) + Number.EPSILON) * 100) / 100;
        this.calculateCrAmount();
    };
    CapitalVoucherComponent.prototype.CRAMNTRowOk = function (index, value) {
        //console.log("CheckValues",value,this._transactionService.creditList)
        if (value.AccountItem.PARENT == this.masterService.userSetting.TDS_PAYABLE ||
            value.AccountItem.PARENT == this.masterService.userSetting.TDS_RECEIVABLE) {
            // alert("reached")
            var x = {};
            this.FilterList = [];
            this.PartyListFilter = [];
            for (var _i = 0, _a = this._transactionService.creditList; _i < _a.length; _i++) {
                var i = _a[_i];
                if (i.AccountItem.PARENT != this.masterService.userSetting.TDS_PAYABLE &&
                    i.AccountItem.PARENT != this.masterService.userSetting.TDS_RECEIVABLE) {
                    this.FilterList.push(i);
                }
                if (i.AccountItem.ACID.substring(0, 2) == 'PA') {
                    x.ACNAME = i.AccountItem.ACNAME;
                    x.ACID = i.A_ACID;
                    x.isCheck = true;
                    x.TDS = value.CRAMNT ? value.CRAMNT : value.DRAMNT;
                }
            }
            this.PartyListFilter.push(x);
            this.showTDSDetailPopup = true;
        }
        else {
            if (value.AccountItem.HASSUBLEDGER == 1 && (!this._transactionService.creditList[index].SL_ACID)) {
                var ACNAME = value.AccountItem.ACNAME;
                this.alertService.warning("PLEASE, SPECIFY SUB LEDGER FOR A/C '" + ACNAME + "'");
                return;
            }
            if (this._transactionService.userSetting.enableCostCenter == 2) {
                this.masterService.focusAnyControl("costcenterCR_" + index);
            }
            else {
                // document.getElementById("Narration_" + index).focus();
                this.masterService.focusAnyControl("NarrationCr_" + index);
            }
        }
    };
    CapitalVoucherComponent.prototype.deleteCreditRow = function (index) {
        try {
            if (this._transactionService.creditList.length < 1)
                return;
            if (this._transactionService.creditList.length == 1) {
                this._transactionService.creditList.splice(index, 1);
                this.addCreditListnewRow();
                return;
            }
            var rm = this._transactionService.creditList[index].ROWMODE;
            if (rm == "new") {
                // //console.log("inside the delte row",rm);
                this._transactionService.creditList.splice(index, 1);
            }
            if (this.masterService.addnMode = 'EDIT') {
                this._transactionService.creditList.splice(index, 1);
            }
        }
        catch (error) {
        }
    };
    CapitalVoucherComponent.prototype.showCostCenterList = function (i) {
        this.selectedIndex = i;
        if (this.masterService.userSetting.EnableCompulsoryCostCategory == 1) {
            this.gridCostCenterGroupListPopupSettings = {
                title: "Cost Centers Group",
                apiEndpoints: "/getCostCenterGroupPagedList",
                defaultFilterIndex: 0,
                columns: [
                    {
                        key: "ccgid",
                        title: "ID",
                        hidden: false,
                        noSearch: false
                    },
                    {
                        key: "COSTCENTERGROUPNAME",
                        title: "Cost Center Group Name",
                        hidden: false,
                        noSearch: false
                    },
                ]
            };
            this.genericGridCostCenterGroupList.show();
        }
        else {
            this.gridCostCenterListPopupSettings = {
                title: "Cost Centers",
                apiEndpoints: "/getCostCenterPagedList",
                defaultFilterIndex: 0,
                columns: [
                    {
                        key: "COSTCENTERNAME",
                        title: "Cost Center Name",
                        hidden: false,
                        noSearch: false
                    }
                ]
            };
            this.genericGridCostCenterList.show();
        }
    };
    CapitalVoucherComponent.prototype.onCostCenterGroupSelect = function (costCenter) {
        this._transactionService.creditList[this.selectedIndex].COSTCENTERGROUP_NAME = costCenter.COSTCENTERGROUPNAME;
        this._transactionService.creditList[this.selectedIndex].CCG_ID = costCenter.ccgid;
        this.gridCostCenterListPopupSettings = {
            title: "Cost Centers",
            apiEndpoints: "/getCostCenterPagedListAccordingToId/" + costCenter.ccgid,
            defaultFilterIndex: 0,
            columns: [
                {
                    key: "COSTCENTERNAME",
                    title: "Cost Center Name",
                    hidden: false,
                    noSearch: false
                }
            ]
        };
        this.genericGridCostCenterList.show();
    };
    CapitalVoucherComponent.prototype.onCostCenterSelect = function (costCenter) {
        this._transactionService.creditList[this.selectedIndex].CostCenter = costCenter.COSTCENTERNAME;
        this._transactionService.creditList[this.selectedIndex].CCID = costCenter.CCID; // for Budget Status Checking
        this.masterService.focusAnyControl("NarrationCr_" + this.selectedIndex);
    };
    CapitalVoucherComponent.prototype.calculation = function () {
        this._transactionService.totalDRAmount = 0;
        this._transactionService.TrnMainObj.VATAMNT = (this._transactionService.TrnMainObj.TAXABLE * 0.13);
        ////console.log("sec tasavle",this._transactionService.TrnMainObj.TAXABLE);
        this._transactionService.TrnMainObj.NETAMNT = this._transactionService.nullToReturnZero(this._transactionService.TrnMainObj.TAXABLE) +
            this._transactionService.nullToReturnZero(this._transactionService.TrnMainObj.VATAMNT) +
            this._transactionService.nullToReturnZero(this._transactionService.TrnMainObj.NONTAXABLE);
        ////console.log("finalnetamout", this._transactionService.TrnMainObj.NETAMNT);
        // this._transactionService.totalDRAmount = this._transactionService.TrnMainObj.NETAMNT + this._transactionService.nullToReturnZero(this._transactionService.nullToReturnZero(this._transactionService.TrnMainObj.DCAMNT));
        this._transactionService.totalDRAmount = this._transactionService.nullToReturnZero(this._transactionService.TrnMainObj.TOTAMNT) +
            this._transactionService.nullToReturnZero(this._transactionService.TrnMainObj.VATAMNT);
    };
    CapitalVoucherComponent.prototype.budgetCalculation = function () {
        this._transactionService.totalDRAmount = 0;
        this._transactionService.TrnMainObj.TAXABLE = this._transactionService.TrnMainObj.TOTAMNT -
            this._transactionService.nullToReturnZero(this._transactionService.TrnMainObj.DCAMNT) -
            this._transactionService.nullToReturnZero(this._transactionService.TrnMainObj.NONTAXABLE);
        this._transactionService.TrnMainObj.NONTAXABLE = this._transactionService.nullToReturnZero(this._transactionService.TrnMainObj.TOTAMNT) -
            this._transactionService.nullToReturnZero(this._transactionService.TrnMainObj.DCAMNT) -
            this._transactionService.nullToReturnZero(this._transactionService.TrnMainObj.TAXABLE);
        ////console.log("None taxable", this._transactionService.TrnMainObj.NONTAXABLE)
        this._transactionService.TrnMainObj.VATAMNT = (this._transactionService.TrnMainObj.TAXABLE * 0.13);
        this._transactionService.TrnMainObj.NETAMNT = this._transactionService.nullToReturnZero(this._transactionService.TrnMainObj.TAXABLE) +
            this._transactionService.nullToReturnZero(this._transactionService.TrnMainObj.VATAMNT) +
            this._transactionService.nullToReturnZero(this._transactionService.TrnMainObj.NONTAXABLE);
        // this._transactionService.totalDRAmount = this._transactionService.TrnMainObj.NETAMNT +
        //                                       this._transactionService.nullToReturnZero(this._transactionService.TrnMainObj.DCAMNT);
        this._transactionService.totalDRAmount = this._transactionService.nullToReturnZero(this._transactionService.TrnMainObj.TOTAMNT) +
            this._transactionService.nullToReturnZero(this._transactionService.TrnMainObj.VATAMNT);
    };
    CapitalVoucherComponent.prototype.calculateCrAmount = function () {
        var _this = this;
        this._transactionService.totalCRAmount = 0;
        this._transactionService.creditList.forEach(function (x) { return _this._transactionService.totalCRAmount += x.CRAMNT; });
        this._transactionService.totalCRAmount = this._transactionService.nullToReturnZero(this._transactionService.totalCRAmount)
            + this._transactionService.nullToReturnZero(this._transactionService.TrnMainObj.DCAMNT);
        if (this._transactionService.nullToReturnZero(this._transactionService.TrnMainObj.ROUNDOFF) > 0) {
            this._transactionService.totalCRAmount = this._transactionService.totalCRAmount - this._transactionService.nullToReturnZero(Math.abs(this._transactionService.TrnMainObj.ROUNDOFF));
        }
        else if (this._transactionService.nullToReturnZero(this._transactionService.TrnMainObj.ROUNDOFF) < 0) {
            this._transactionService.totalCRAmount = this._transactionService.totalCRAmount + this._transactionService.nullToReturnZero(Math.abs(this._transactionService.TrnMainObj.ROUNDOFF));
        }
    };
    CapitalVoucherComponent.prototype.onSupplierSelected = function (supplier) {
        this._transactionService.TrnMainObj.BILLTO = supplier.ACNAME;
        this._transactionService.TrnMainObj.BILLTOTEL = supplier.VATNO ? supplier.VATNO : supplier.GSTNO;
        this._transactionService.TrnMainObj.PARAC = supplier.ACID;
        this._transactionService.TrnMainObj.TRNAC = supplier.ACID;
        this._transactionService.TrnMainObj.BILLTOADD = supplier.ADDRESS;
        this._transactionService.TrnMainObj.AdditionalObj.TRNTYPE = supplier.PSTYPE == null ? null : supplier.PSTYPE.toLowerCase();
        this._transactionService.TrnMainObj.TRNMODE = supplier.PMODE;
        this._transactionService.TrnMainObj.PARTY_ORG_TYPE = supplier.ORG_TYPE;
        this._transactionService.TrnMainObj.CREDITDAYS = supplier.CRPERIOD;
    };
    CapitalVoucherComponent.prototype.SupplierEnterCommand = function () {
        this.genericGridSupplier.show();
    };
    CapitalVoucherComponent.prototype.preventInput = function (event) {
        if (this.specialKeys.indexOf(event.key) !== -1) {
            return;
        }
        else {
            event.preventDefault();
            return false;
        }
    };
    CapitalVoucherComponent.prototype.ValidatePhiscalYear = function (value, DateType, DATE) {
        ////console.log("date",value,this.masterService.PhiscalObj.BeginDate);
        if (value < this.masterService.PhiscalObj.BeginDate.split('T')[0]) {
            this.alertService.info("Date Exceed to Current Phiscal Year!");
            if (DateType == "TRNDATE") {
                this.EntryDate.DATE3 = __WEBPACK_IMPORTED_MODULE_7_moment__(this.date1).format("YYYY-MM-DD");
                this.changeEntryDate1(this.EntryDate.DATE3, "AD");
            }
            else if (DateType == "TRN_DATE") {
                this.VoucherEntry.DATE1 = __WEBPACK_IMPORTED_MODULE_7_moment__(this.date1).format("YYYY-MM-DD");
                this.changeEntryDate(this.VoucherEntry.DATE1, "AD");
            }
        }
    };
    CapitalVoucherComponent.prototype.ValidateBSDATE = function (value, date, dateType) {
        //console.log("value",value)
        if (date == 'DATE3') {
            if ((value < this.masterService.PhiscalObj.BeginDate.split('T')[0])
                || value > this.masterService.PhiscalObj.EndDate.split('T')[0]) {
                this.errorOccurfromDate = true;
                this.alertService.info("Date Exceed to Current Phiscal Year !");
                return;
            }
            if (value > __WEBPACK_IMPORTED_MODULE_7_moment__(this.date1).format("YYYY-MM-DD")) {
                this.alertService.info("TRN DATE SHOULD NOT BE ENTERED FUTURE DATE");
                this.errorOccurfromDate = true;
            }
        }
        else if (date == 'DATE1') {
            if (value > __WEBPACK_IMPORTED_MODULE_7_moment__(this.date1).format("YYYY-MM-DD")) {
                this.alertService.info("TRN DATE SHOULD NOT BE ENTERED FUTURE DATE");
                this.errorOccurfromDate = true;
                if (dateType == "TRNDATE") {
                    // this.EntryDate.DATE3 = moment(this.date1).format("YYYY-MM-DD");
                    // this.changeEntryDate1(this.EntryDate.DATE3, "AD");
                }
                else if (dateType == "TRN_DATE") {
                    /// this.VoucherEntry.DATE1 = moment(this.date1).format("YYYY-MM-DD");
                    //  this.changeEntryDate(this.VoucherEntry.DATE1,"AD");
                }
                return;
            }
        }
    };
    CapitalVoucherComponent.prototype.getSupplierList = function () {
        var voucherprefix = "CP";
        this.gridPopupSettingsForSupplier = {
            title: "Supplier",
            apiEndpoints: "/getAccountPagedListByPType/PA/V/" + voucherprefix,
            defaultFilterIndex: 0,
            columns: [
                {
                    key: "ACNAME",
                    title: "NAME",
                    hidden: false,
                    noSearch: false
                },
                {
                    key: "ACCODE",
                    title: "CODE",
                    hidden: false,
                    noSearch: false
                },
                {
                    key: "ADDRESS",
                    title: "ADDRESS",
                    hidden: false,
                    noSearch: false
                },
                {
                    key: "EMAIL",
                    title: "EMAIL",
                    hidden: false,
                    noSearch: false
                }
            ]
        };
    };
    CapitalVoucherComponent.prototype.changePhiscalDate = function (value, format) {
        var adbs = __webpack_require__(19);
        if (format == "AD") {
            var adDate = (value.replace("-", "/")).replace("-", "/");
            var bsDate = adbs.ad2bs(adDate);
            this._transactionService.TrnMainObj.BSDATE = this.EntryDate.PhiscalBSDate = bsDate.en.year + '-' + bsDate.en.month + '-' + (bsDate.en.day == '1' || bsDate.en.day == '2' || bsDate.en.day == '3' || bsDate.en.day == '4' || bsDate.en.day == '5' || bsDate.en.day == '6' || bsDate.en.day == '7' || bsDate.en.day == '8' || bsDate.en.day == '9' ? '0' + bsDate.en.day : bsDate.en.day);
        }
    };
    CapitalVoucherComponent.prototype.onsubLedgerTab = function (i, ACID) {
        this.selectedIndex = i;
        this.gridSubLedgerSetting = {
            title: "SubLedger List",
            apiEndpoints: "/getSubLedgerByACIDPageList/" + ACID,
            defaultFilterIndex: 1,
            columns: [
                {
                    key: "SL_ACID",
                    title: "SubLedger ID",
                    hidden: false,
                    noSearch: false
                },
                {
                    key: "SL_ACNAME",
                    title: "SubLedger Name",
                    hidden: false,
                    noSearch: false
                }
            ]
        };
        this.gridSubLedgerSettingList.show();
    };
    CapitalVoucherComponent.prototype.onSubLedgerSelect = function (value) {
        var _this = this;
        this._transactionService.creditList[this.selectedIndex].SL_ACID = value.SL_ACID;
        this._transactionService.creditList[this.selectedIndex].SL_ACNAME = value.SL_ACNAME;
        setTimeout(function () {
            _this.masterService.focusAnyControl("Amount_" + _this.selectedIndex);
        }, 20);
        // this.focusNext(1, this.selectedIndex);
    };
    CapitalVoucherComponent.prototype.changedSubLedger = function (value) {
        // if(value.hasSubLedger==1){
        //   this.alertService.warning("PLEASE, SPECIFY SUB LEDGER FOR A/C");
        // }
    };
    CapitalVoucherComponent.prototype.focusNextValidation = function (value, tvalue) {
        var _this = this;
        ////console.log("CheckValueee",value,tvalue)
        if (value == 'Ledger') {
            if (tvalue.AccountItem) {
                if (tvalue.AccountItem.HASSUBLEDGER == 1) {
                    setTimeout(function () {
                        _this.masterService.focusAnyControl("SubLedgerInputCr_" + _this.selectedIndex);
                    }, 20);
                }
                else {
                    setTimeout(function () {
                        _this.masterService.focusAnyControl("Amount_" + _this.selectedIndex);
                    }, 20);
                }
            }
        }
        else if (value == 'SubLedger') {
            if (!tvalue.SL_ACNAME) {
            }
            else {
                this.masterService.focusAnyControl("Amount_" + this.selectedIndex);
            }
        }
    };
    CapitalVoucherComponent.prototype.TdsPopupClick = function (index) {
    };
    CapitalVoucherComponent.prototype.ClickDrList = function () {
    };
    CapitalVoucherComponent.prototype.cancelTDSDetailPopup = function () {
        this.showTDSDetailPopup = false;
    };
    CapitalVoucherComponent.prototype.TdsPopupOK = function () {
        this.showTDSDetailPopup = false;
        this._transactionService.creditList[this.selectedIndex].OPPREMARKS = this.PartyListFilter[0].AMNT;
        this._transactionService.creditList[this.selectedIndex].OppAcid = this.PartyListFilter[0].ACID[0].A_ACID;
        //console.log("FinalTDSACID", this._transactionService.creditList)
    };
    CapitalVoucherComponent.prototype.ChangeDesca = function (value) {
        this.PartyListFilter[0].ACID = this._transactionService.creditList.filter(function (x) { return x.acitem.ACNAME == value.target.value; });
    };
    CapitalVoucherComponent.prototype.BaseAmntChange = function () {
    };
    return CapitalVoucherComponent;
}());
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])("adEntryDate"),
    __metadata("design:type", __WEBPACK_IMPORTED_MODULE_0__angular_core__["ElementRef"])
], CapitalVoucherComponent.prototype, "_adEntryDate", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])("bsEntryDate"),
    __metadata("design:type", __WEBPACK_IMPORTED_MODULE_0__angular_core__["ElementRef"])
], CapitalVoucherComponent.prototype, "_bsEntryDate", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])("adTrnDate"),
    __metadata("design:type", __WEBPACK_IMPORTED_MODULE_0__angular_core__["ElementRef"])
], CapitalVoucherComponent.prototype, "_adTrnDate", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])("bsTrnDate"),
    __metadata("design:type", __WEBPACK_IMPORTED_MODULE_0__angular_core__["ElementRef"])
], CapitalVoucherComponent.prototype, "_bsTrnDate", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])("genericGridCostCenterList"),
    __metadata("design:type", __WEBPACK_IMPORTED_MODULE_4__common_popupLists_generic_grid_generic_popup_grid_component__["c" /* GenericPopUpComponent */])
], CapitalVoucherComponent.prototype, "genericGridCostCenterList", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])("genericGridCostCenterGroupList"),
    __metadata("design:type", __WEBPACK_IMPORTED_MODULE_4__common_popupLists_generic_grid_generic_popup_grid_component__["c" /* GenericPopUpComponent */])
], CapitalVoucherComponent.prototype, "genericGridCostCenterGroupList", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])("genericGridACList"),
    __metadata("design:type", __WEBPACK_IMPORTED_MODULE_4__common_popupLists_generic_grid_generic_popup_grid_component__["c" /* GenericPopUpComponent */])
], CapitalVoucherComponent.prototype, "genericGridACList", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])("genericGridSupplier"),
    __metadata("design:type", __WEBPACK_IMPORTED_MODULE_4__common_popupLists_generic_grid_generic_popup_grid_component__["c" /* GenericPopUpComponent */])
], CapitalVoucherComponent.prototype, "genericGridSupplier", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])("gridSubLedgerSettingList"),
    __metadata("design:type", __WEBPACK_IMPORTED_MODULE_4__common_popupLists_generic_grid_generic_popup_grid_component__["c" /* GenericPopUpComponent */])
], CapitalVoucherComponent.prototype, "gridSubLedgerSettingList", void 0);
CapitalVoucherComponent = __decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
        selector: 'capital-voucher',
        template: __webpack_require__(1321),
        styles: [__webpack_require__(9)],
        providers: [__WEBPACK_IMPORTED_MODULE_6__theme_pipes__["a" /* TwoDigitNumber */]]
    }),
    __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1__common_repositories__["a" /* MasterRepo */],
        __WEBPACK_IMPORTED_MODULE_2__common_Transaction_Components_transaction_service__["a" /* TransactionService */],
        __WEBPACK_IMPORTED_MODULE_3__common_services_alert_alert_service__["a" /* AlertService */],
        __WEBPACK_IMPORTED_MODULE_5__common_services_permission__["a" /* AuthService */],
        __WEBPACK_IMPORTED_MODULE_6__theme_pipes__["a" /* TwoDigitNumber */],
        __WEBPACK_IMPORTED_MODULE_0__angular_core__["ChangeDetectorRef"],
        __WEBPACK_IMPORTED_MODULE_0__angular_core__["ElementRef"],
        __WEBPACK_IMPORTED_MODULE_8__angular_router__["ActivatedRoute"],
        __WEBPACK_IMPORTED_MODULE_9__common_services_spinner_spinner_service__["a" /* SpinnerService */]])
], CapitalVoucherComponent);



/***/ }),

/***/ 1254:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__common_Transaction_Components_transaction_service__ = __webpack_require__(7);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__common_interfaces_TrnMain__ = __webpack_require__(25);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__common_repositories_masterRepo_service__ = __webpack_require__(8);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__common_services_setting_service__ = __webpack_require__(72);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__common_services_spinner_spinner_service__ = __webpack_require__(20);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__common_services_alert_alert_service__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__angular_router__ = __webpack_require__(6);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ContraVoucherComponent; });








var ContraVoucherComponent = (function () {
    function ContraVoucherComponent(_trnMainService, masterService, _loadingSerive, _alertService, _activatedRoute, setting) {
        this._trnMainService = _trnMainService;
        this.masterService = masterService;
        this._loadingSerive = _loadingSerive;
        this._alertService = _alertService;
        this._activatedRoute = _activatedRoute;
        this.setting = setting;
        this.TrnMainObj = {};
        this.voucherType = __WEBPACK_IMPORTED_MODULE_2__common_interfaces_TrnMain__["a" /* VoucherTypeEnum */].ContraVoucher;
        this.prefix = {};
        this.TrnMainObj = _trnMainService.TrnMainObj;
        this._trnMainService.initialFormLoad(62);
        this.voucherType = __WEBPACK_IMPORTED_MODULE_2__common_interfaces_TrnMain__["a" /* VoucherTypeEnum */].ContraVoucher;
        this._trnMainService.DrillMode = "New";
    }
    ContraVoucherComponent.prototype.ngOnInit = function () {
        var _this = this;
        this._activatedRoute.queryParams.subscribe(function (params) {
            if (params['mode'] == "DRILL") {
                var VCHR = params['voucher'];
                var vparams = [];
                vparams = VCHR.split('-');
                _this._loadingSerive.show("Loading Invoice");
                _this.masterService.LoadTransaction(VCHR, vparams[1], vparams[2]).subscribe(function (res) {
                    if (res.status == "ok") {
                        _this._loadingSerive.hide();
                        _this._trnMainService.TrnMainObj = res.result;
                        _this._trnMainService.TrnMainObj.VoucherType = 62;
                        _this._trnMainService.pageHeading = "Contra Voucher";
                        _this._trnMainService.TrnMainObj.VoucherPrefix = "CV";
                        _this._trnMainService.TrnMainObj.Mode = "VIEW";
                        _this._trnMainService.calculateCrDrTotal();
                        _this._trnMainService.calculateDrCrDifferences();
                    }
                }, function (err) {
                    _this._loadingSerive.hide();
                    _this._alertService.error(err);
                });
            }
            else if (params['mode'] == "fromLatepost") {
                //console.log("inside the fromlatepost drill")
                // alert("params['mode']==Contra voucher ")
                _this._loadingSerive.show("Loading Invoice");
                _this.masterService.LoadTransaction(params.voucher, params.DIVISION, params.PHISCALID).subscribe(function (res) {
                    if (res.status == "ok") {
                        _this._loadingSerive.hide();
                        _this._trnMainService.TrnMainObj = res.result;
                        _this._trnMainService.TrnMainObj.VoucherType = 62;
                        _this._trnMainService.pageHeading = "Contra Voucher";
                        _this._trnMainService.TrnMainObj.VoucherPrefix = "CE";
                        _this._trnMainService.TrnMainObj.Mode = "VIEW";
                    }
                }, function (err) {
                    _this._loadingSerive.hide();
                    _this._alertService.error(err);
                });
            }
            else {
                if (_this._activatedRoute.snapshot.params['from']) {
                    var VCHR = _this._activatedRoute.snapshot.params['voucherNumber'];
                    var params_1 = [];
                    params_1 = VCHR.split('-');
                    _this._loadingSerive.show("Loading Invoice");
                    _this.masterService.LoadTransaction(VCHR, params_1[1], params_1[2]).subscribe(function (res) {
                        if (res.status == "ok") {
                            _this._loadingSerive.hide();
                            _this._trnMainService.TrnMainObj = res.result;
                            _this._trnMainService.TrnMainObj.VoucherType = 62;
                            _this._trnMainService.pageHeading = "Contra Voucher";
                            _this._trnMainService.TrnMainObj.VoucherPrefix = "CE";
                            _this._trnMainService.TrnMainObj.Mode = "VIEW";
                        }
                    }, function (err) {
                        _this._loadingSerive.hide();
                        _this._alertService.error(err);
                    });
                }
                else {
                    _this.TrnMainObj.Mode = "NEW";
                    _this.masterService.ShowMore = false;
                }
            }
        });
    };
    ContraVoucherComponent.prototype.ngAfterViewInit = function () {
        ////console.log("voucherTypeInit",this._trnMainService.TrnMainObj.VoucherType)
    };
    ContraVoucherComponent.prototype.prefixChanged = function (pref) {
        var _this = this;
        try {
            this._trnMainService.prefix = pref;
            this.prefix = pref;
            if (this.TrnMainObj.Mode == "NEW") {
                if (this.TrnMainObj.DIVISION == "" ||
                    this.TrnMainObj.DIVISION == null) {
                    this.TrnMainObj.DIVISION = this.setting.appSetting.DefaultDivision;
                }
                this.masterService.getVoucherNo(this.TrnMainObj).subscribe(function (res) {
                    if (res.status == "ok") {
                        var TMain = res.result;
                        _this.TrnMainObj.VCHRNO = TMain.VCHRNO.substr(2, TMain.VCHRNO.length - 2);
                        _this.TrnMainObj.CHALANNO = TMain.CHALANNO;
                    }
                    else {
                        alert("Failed to retrieve VoucherNo");
                    }
                });
            }
        }
        catch (ex) {
        }
    };
    return ContraVoucherComponent;
}());
ContraVoucherComponent = __decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
        selector: "contra-voucher",
        template: __webpack_require__(1322),
        providers: [__WEBPACK_IMPORTED_MODULE_1__common_Transaction_Components_transaction_service__["a" /* TransactionService */]]
    }),
    __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1__common_Transaction_Components_transaction_service__["a" /* TransactionService */],
        __WEBPACK_IMPORTED_MODULE_3__common_repositories_masterRepo_service__["a" /* MasterRepo */],
        __WEBPACK_IMPORTED_MODULE_5__common_services_spinner_spinner_service__["a" /* SpinnerService */],
        __WEBPACK_IMPORTED_MODULE_6__common_services_alert_alert_service__["a" /* AlertService */],
        __WEBPACK_IMPORTED_MODULE_7__angular_router__["ActivatedRoute"],
        __WEBPACK_IMPORTED_MODULE_4__common_services_setting_service__["a" /* SettingService */]])
], ContraVoucherComponent);



/***/ }),

/***/ 1255:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__common_repositories__ = __webpack_require__(13);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__common_services_alert_alert_service__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__common_services_permission_authService_service__ = __webpack_require__(17);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__common_services_spinner_spinner_service__ = __webpack_require__(20);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return DepreciationDetailsComponent; });





var DepreciationDetailsComponent = (function () {
    function DepreciationDetailsComponent(masterService, loader, alertService, authService) {
        var _this = this;
        this.masterService = masterService;
        this.loader = loader;
        this.alertService = alertService;
        this.authService = authService;
        this.accountWiseData = [];
        this.itemWiseData = [];
        this.assetCodeWiseData = [];
        this.PhiscalObj = {};
        this.allTabData = {
            accountWiseData: [],
            itemWiseData: [],
            assetCodeWiseData: [],
        };
        this.monthMap = new Map();
        this.months = [
            { monthId: 1, monthName: 'Shrawan' },
            { monthId: 2, monthName: 'Bhadra' },
            { monthId: 3, monthName: 'Asoj' },
            { monthId: 4, monthName: 'Kartik' },
            { monthId: 5, monthName: 'Mangsir' },
            { monthId: 6, monthName: 'Poush' },
            { monthId: 7, monthName: 'Magh' },
            { monthId: 8, monthName: 'Falgun' },
            { monthId: 9, monthName: 'Chaitra' },
            { monthId: 10, monthName: 'Baisakh' },
            { monthId: 11, monthName: 'Jestha' },
            { monthId: 12, monthName: 'Asaar' },
        ];
        this.selectedMonth = '';
        this.isMonthSelected = false;
        this.calculationDone = false;
        this.isDeleteEnable = true;
        this.currentTab = 'account-wise';
        this.isViewed = false;
        this.isMonthSelected = false;
        this.months.forEach(function (month) {
            _this.monthMap.set(month.monthName, month.monthId);
        });
        this.PhiscalObj = this.masterService.PhiscalObj;
    }
    DepreciationDetailsComponent.prototype.ngOnInit = function () {
    };
    DepreciationDetailsComponent.prototype.onMonthSelected = function () {
        this.isMonthSelected = !!this.selectedMonth;
        if (this.isMonthSelected) {
            this.selectedMonthId = this.monthMap.get(this.selectedMonth);
        }
        else {
            this.selectedMonthId = undefined;
        }
    };
    DepreciationDetailsComponent.prototype.calculate = function () {
        var _this = this;
        this.loader.show('Please wait..');
        this.masterService.getDepreciationDetail(this.selectedMonthId, this.PhiscalObj.PhiscalID).subscribe(function (res) {
            _this.loader.hide();
            _this.accountWiseData = res.result; // Store data for account-wise tab
            _this.itemWiseData = res.result2; // Store data for item-wise tab
            _this.assetCodeWiseData = res.result3;
            if (_this.currentTab === 'account-wise') {
                _this.accountWiseData = res.result;
            }
            else if (_this.currentTab === 'item-wise') {
                _this.itemWiseData = res.result2;
            }
            else if (_this.currentTab === 'asset-code-wise') {
                _this.assetCodeWiseData = res.result3;
            }
            _this.calculateTotalsAccountWise();
            _this.calculateTotalsItemWise();
            _this.calculateTotalsAssetCodeWise();
            _this.calculationDone = true;
            _this.isDeleteEnable = true;
        }, function (error) {
            _this.loader.hide();
            _this.alertService.info(error._body);
        });
    };
    // totals for 'account-wise' tab
    DepreciationDetailsComponent.prototype.calculateTotalsAccountWise = function () {
        this.totalCostValueAccountWise = this.calculateTotal('Cost_Value', this.accountWiseData);
        this.totalBookValueAccountWise = this.calculateTotal('Current_Book_Value', this.accountWiseData);
        this.totalDepreciationAccountWise = this.calculateTotal('Depreciation', this.accountWiseData);
        this.totalNetBookValueAccountWise = this.calculateTotal('Net_Book_Value', this.accountWiseData);
    };
    // totals for 'item-wise' tab
    DepreciationDetailsComponent.prototype.calculateTotalsItemWise = function () {
        this.totalCostValueItemWise = this.calculateTotal('Cost_Value', this.itemWiseData);
        this.totalQuantityItemWise = this.calculateTotal('Quantity', this.itemWiseData);
        // this.totalCostItemWise = this.calculateTotal('TotalCost', this.itemWiseData);
        this.totalBookValueItemWise = this.calculateTotal('Current_Book_Value', this.itemWiseData);
        this.totalDepreciationItemWise = this.calculateTotal('Depreciation', this.itemWiseData);
        this.totalNetBookValueItemWise = this.calculateTotal('Net_Book_Value', this.itemWiseData);
    };
    // totals for 'asset-code-wise' tab
    DepreciationDetailsComponent.prototype.calculateTotalsAssetCodeWise = function () {
        this.totalCostValueAssetCodeWise = this.calculateTotal('Cost_Value', this.assetCodeWiseData);
        this.totalBookValueAssetCodeWise = this.calculateTotal('Current_Book_Value', this.assetCodeWiseData);
        this.totalDepreciationAssetCodeWise = this.calculateTotal('Depreciation', this.assetCodeWiseData);
        this.totalNetBookValueAssetCodeWise = this.calculateTotal('Net_Book_Value', this.assetCodeWiseData);
    };
    DepreciationDetailsComponent.prototype.calculateTotal = function (column, data) {
        var total = 0;
        for (var _i = 0, data_1 = data; _i < data_1.length; _i++) {
            var row = data_1[_i];
            var value = row[column];
            if (!isNaN(value)) {
                total += value;
            }
        }
        return total;
    };
    DepreciationDetailsComponent.prototype.Reset = function () {
        this.selectedMonth = '';
        this.isMonthSelected = false;
        this.accountWiseData = [];
        this.itemWiseData = [];
        this.assetCodeWiseData = [];
        this.calculationDone = false;
        this.isViewed = false;
        this.isDeleteEnable = true;
        this.totalCostValueAccountWise = 0;
        this.totalBookValueAccountWise = 0;
        this.totalDepreciationAccountWise = 0;
        this.totalNetBookValueAccountWise = 0;
        this.totalCostValueItemWise = 0;
        this.totalQuantityItemWise = 0;
        // this.totalCostItemWise = 0;
        this.totalBookValueItemWise = 0;
        this.totalDepreciationItemWise = 0;
        this.totalNetBookValueItemWise = 0;
        this.totalCostValueAssetCodeWise = 0;
        this.totalBookValueAssetCodeWise = 0;
        this.totalDepreciationAssetCodeWise = 0;
        this.totalNetBookValueAssetCodeWise = 0;
    };
    DepreciationDetailsComponent.prototype.Save = function () {
        var _this = this;
        this.loader.show("Saving data. Please wait...");
        this.masterService.saveDepreciationCalculation("/SaveAssetDepreciation?currentmonth=" + this.selectedMonthId + "&phiscalyear=" + this.PhiscalObj.PhiscalID + "&configmode=1", this.allTabData).subscribe(function (res) {
            if (res.status == "ok") {
                _this.loader.hide();
                _this.alertService.success("Depreciation for the month " + _this.selectedMonth + " has been adjusted. Voucher No. " + res.refNo);
                _this.Reset();
            }
        }, function (error) {
            _this.loader.hide();
            _this.alertService.error(error._body);
        });
    };
    DepreciationDetailsComponent.prototype.saveToExcel = function () {
        var _this = this;
        this.loader.show("Loading data. Please wait...");
        var filterObjData = { filtername: "AllDepreciationList" };
        this.masterService.getExcelFile("/exportToExcel?currentmonth=" + this.selectedMonthId + "&phiscalyear=" + this.PhiscalObj.PhiscalID + "&configmode=1&type=" + this.selectedTabExcel, filterObjData).subscribe(function (data) {
            _this.masterService.downloadFile(data);
            _this.alertService.success("Depreciation for the month " + _this.selectedMonth + " has been adjusted.");
            _this.loader.hide();
        }, function (error) {
            _this.loader.hide();
            _this.alertService.error(error._body);
        });
    };
    DepreciationDetailsComponent.prototype.View = function () {
        var _this = this;
        this.loader.show("Please wait...");
        this.masterService.viewDepreciationDetail("/ViewAssetDepreciation?currentmonth=" + this.selectedMonthId + "&phiscalyear=" + this.PhiscalObj.PhiscalID + "&configmode=1").subscribe(function (res) {
            if (res.status === "ok") {
                _this.loader.hide();
                _this.accountWiseData = res.result;
                _this.itemWiseData = res.result2;
                _this.assetCodeWiseData = res.result3;
                _this.calculationDone = true;
                _this.calculateTotalsAccountWise();
                _this.calculateTotalsItemWise();
                _this.calculateTotalsAssetCodeWise();
                _this.isViewed = true;
                _this.isDeleteEnable = false;
                _this.RefNo = res.RefNo;
            }
        }, function (error) {
            _this.loader.hide();
            _this.alertService.error(error._body);
            _this.Reset();
        });
    };
    DepreciationDetailsComponent.prototype.Cancel = function () {
        var _this = this;
        if (confirm("Are you sure you want to delete?")) {
            this.loader.show("Please wait...");
            var bodyData = {
                VoucherType: 12,
                VCHRNO: this.RefNo,
                MODE: "CANCELDEPRECIATION",
                VoucherPrefix: "JV"
            };
            this.masterService.cancelDepreciationDetail("/cancelAcVouchers", bodyData).subscribe(function (res) {
                _this.loader.hide();
                if (res.status === "ok") {
                    _this.alertService.success("Voucher " + _this.RefNo + " has been canceled successfully.");
                    _this.Reset();
                }
                else {
                    _this.alertService.info(res.result.result);
                }
            }, function (error) {
                _this.loader.hide();
                _this.alertService.error(error._body);
            });
        }
    };
    DepreciationDetailsComponent.prototype.showTab = function (tabName) {
        this.currentTab = tabName;
        switch (tabName) {
            case 'account-wise':
                this.selectedTabExcel = 1;
                break;
            case 'item-wise':
                this.selectedTabExcel = 2;
                break;
            case 'asset-code-wise':
                this.selectedTabExcel = 3;
                break;
        }
    };
    return DepreciationDetailsComponent;
}());
DepreciationDetailsComponent = __decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
        selector: 'depreciation-detail',
        template: __webpack_require__(1325),
        styles: [__webpack_require__(1324)]
    }),
    __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1__common_repositories__["a" /* MasterRepo */], __WEBPACK_IMPORTED_MODULE_4__common_services_spinner_spinner_service__["a" /* SpinnerService */], __WEBPACK_IMPORTED_MODULE_2__common_services_alert_alert_service__["a" /* AlertService */], __WEBPACK_IMPORTED_MODULE_3__common_services_permission_authService_service__["a" /* AuthService */]])
], DepreciationDetailsComponent);



/***/ }),

/***/ 1256:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__common_popupLists_generic_grid_generic_popup_grid_component__ = __webpack_require__(35);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__common_repositories_masterRepo_service__ = __webpack_require__(8);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__common_services_permission_authService_service__ = __webpack_require__(17);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__common_Transaction_Components_transaction_service__ = __webpack_require__(7);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__theme_pipes__ = __webpack_require__(560);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ItemWiseDepreciationDetailComponent; });






var ItemWiseDepreciationDetailComponent = (function () {
    function ItemWiseDepreciationDetailComponent(_transactionService, masterService, authService) {
        var _this = this;
        this._transactionService = _transactionService;
        this.masterService = masterService;
        this.authService = authService;
        this.gridACListPopupSettings = new __WEBPACK_IMPORTED_MODULE_1__common_popupLists_generic_grid_generic_popup_grid_component__["b" /* GenericPopUpSettings */]();
        this.rowIndex = 0;
        this.PartyInfo = [];
        this.costlists = [];
        this.PartyBalanceData = {};
        this.userProfile = {};
        this.userProfile = this.authService.getUserProfile();
        this.PartyBalanceData.DATE1 = this.masterService.PhiscalObj.BeginDate.split('T')[0];
        this.changeEntryDate(this.PartyBalanceData.DATE1, "AD");
        this.PartyBalanceData.DATE2 = this.masterService.PhiscalObj.EndDate.split('T')[0];
        this.changeEndDate(this.PartyBalanceData.DATE2, "AD");
        this.PartyBalanceData.INCLUDECASHTRANSACTION = 0;
        this.masterService.getAllNEWCostCenter().subscribe(function (res) {
            if (res) {
                _this.costlists = res.result;
            }
        }, function (error) {
            _this.costlists = [];
        });
        this.PartyBalanceData.PARTYTYPE = "C";
    }
    ItemWiseDepreciationDetailComponent.prototype.showAcList = function (i) {
        this._transactionService.TrnMainObj.TRNMODE = "SinglePayment_Party";
        var TRNMODE = "" + this._transactionService.TrnMainObj.TRNMODE;
        if (this.PartyBalanceData.PARTYTYPE == "C") {
            TRNMODE = "PartyBalance_Customer";
        }
        else {
            TRNMODE = "SinglePayment_Party";
        }
        this.gridACListPopupSettings = {
            title: "Accounts",
            apiEndpoints: "/getAccountPagedListByMapId/Details/" + TRNMODE,
            defaultFilterIndex: 1,
            columns: [
                {
                    key: "ACID",
                    title: "AC CODE",
                    hidden: false,
                    noSearch: false
                },
                {
                    key: "ACNAME",
                    title: "A/C NAME",
                    hidden: false,
                    noSearch: false
                }
            ]
        };
        this.genericGridACList.show();
    };
    // ngOnInit(){
    //   this.changeEntryDate(this.PartyBalanceData.DATE1, "AD");
    //   this.changeEndDate(this.PartyBalanceData.DATE2, "AD");
    // }
    ItemWiseDepreciationDetailComponent.prototype.onAcSelect = function (acItem) {
        //console.log('sdgfgsdh', acItem);
        this.PartyBalanceData.CUSTOMERNAME = acItem.ACNAME;
        this.PartyBalanceData.ACID = acItem.ACID;
        this.PartyBalanceData.PANNO = acItem.VATNO;
        this.PartyBalanceData.COMPANYADDRESS = acItem.ADDRESS;
        //  this.setFocus();
    };
    ItemWiseDepreciationDetailComponent.prototype.setFocus = function () {
        document.getElementById('Name0').focus();
    };
    ItemWiseDepreciationDetailComponent.prototype.onLoad = function () {
        var _this = this;
        // //console.log('hello its working',this.PartyBalanceData);
        this.PartyBalanceData.DIVISION = this.userProfile.CompanyInfo.INITIAL;
        this.PartyBalanceData.PHISCALID = this.userProfile.CompanyInfo.PhiscalID;
        this.PartyBalanceData.COMPANYID = this.userProfile.CompanyInfo.COMPANYID;
        if (!this.PartyBalanceData.COSTCENTER) {
            this.PartyBalanceData.COSTCENTER = '%';
        }
        if (!this.PartyBalanceData.ACID) {
            this.PartyBalanceData.ACID = '%';
        }
        this.masterService.LoadPartyBalanceData(this.PartyBalanceData).subscribe(function (res) {
            //console.log("@@@res.result",res.result)
            _this.PartyInfo = res.result;
            var abcd = _this.PartyInfo.filter(function (x) { return (x.PARTICULAR == 'Net Receivable' || x.PARTICULAR == 'Net Payable'); }); //check for Net Receivable and Net Payable
            //console.log("abcd",abcd)
            if (abcd.length > 0 && abcd[0] && abcd[0].AMOUNT) {
                if (abcd[0].AMOUNT < 0) {
                    _this.PartyBalanceData.NETAMOUNT = abcd[0].AMOUNT * (-1); // send positive netamount for partbalnce print if in negative.
                }
                else {
                    _this.PartyBalanceData.NETAMOUNT = abcd[0].AMOUNT;
                }
            }
            else {
                _this.PartyBalanceData.NETAMOUNT = 0;
            }
        });
    };
    ItemWiseDepreciationDetailComponent.prototype.reSet = function () {
        this.PartyInfo = [];
        this.PartyBalanceData = {};
    };
    // **********For Date Format**************
    ItemWiseDepreciationDetailComponent.prototype.changeEntryDate = function (value, format) {
        //console.log('working');
        var adbs = __webpack_require__(19);
        if (format == "AD") {
            var adDate = (value.replace("-", "/")).replace("-", "/");
            var bsDate = adbs.ad2bs(adDate);
            this.PartyBalanceData.BSDATE1 = this.masterService.toADDate(value);
        }
        else if (format == "BS") {
            var datearr = value.split('/');
            var bsDate_1 = datearr[2] + "/" + datearr[1] + "/" + datearr[0];
            // var bsDate = (value.replace("-", "/")).replace("-", "/");
            var adDate = adbs.bs2ad(bsDate_1);
            this.PartyBalanceData.DATE1 = this.masterService.toBSDate(value);
        }
    };
    ItemWiseDepreciationDetailComponent.prototype.changeEndDate = function (value, format) {
        var adbs = __webpack_require__(19);
        if (format == "AD") {
            var adDate = (value.replace("-", "/")).replace("-", "/");
            var bsDate = adbs.ad2bs(adDate);
            this.PartyBalanceData.BSDATE2 = this.masterService.toADDate(value);
        }
        else if (format == "BS") {
            var datearr = value.split('/');
            var bsDate_2 = datearr[2] + "/" + datearr[1] + "/" + datearr[0];
            // var bsDate = (value.replace("-", "/")).replace("-", "/");
            var adDate = adbs.bs2ad(bsDate_2);
            this.PartyBalanceData.DATE2 = this.masterService.toBSDate(value);
        }
    };
    ItemWiseDepreciationDetailComponent.prototype.onPrintClicked = function () {
        //console.log('Its working');
        // if (this._trnMainService.TrnMainObj.TrntranList.length > 0) {
        //   this.promptPrintDevice = true;
        // } else {
        //   this.alertService.warning("No voucher Found for Printing");
        // }
        var _this = this;
        this.showVoucherReplicateButton = false;
        var vat = 606764917;
        // let VATresult = vat.split("");
        // this.masterService.getPrintFileName("PV").subscribe((res) => {
        // if (res.status == "ok") {
        this.filename = 'PARTYBALANCE.ims';
        this.rownumber = 0;
        this.changeCursor = true;
        this.masterService.getGivenNumberToWords(this.PartyBalanceData.NETAMOUNT).subscribe(function (res) {
            if (res.status == "ok") {
                _this.numtowords = res.result ? res.result[0].NUMTOWORDS : '';
                ////console.log("@@numtowords", this.numtowords);
                var userdivision = _this.userProfile.userDivision ? _this.userProfile.userDivision : _this.userProfile.CompanyInfo.INITIAL;
                var ADDRESS_1 = _this.userProfile.CompanyInfo.ADDRESS;
                _this.masterService.getDetailsByUserDivision(userdivision).subscribe(function (res) {
                    if (res.status == "ok") {
                        if (res.result && res.result.length > 0 && res.result[0] && res.result[0].COMADD) {
                            ADDRESS_1 = res.result[0].COMADD;
                        }
                        if (ADDRESS_1 === null || ADDRESS_1 === undefined || ADDRESS_1 === '') {
                            ADDRESS_1 = _this.userProfile.CompanyInfo.ADDRESS;
                        }
                        _this.PartyBalanceData.DIVISION = _this.userProfile.CompanyInfo.INITIAL; // must for SP
                        _this.PartyBalanceData.PHISCALID = _this.userProfile.CompanyInfo.PhiscalID; // must for SP
                        _this.PartyBalanceData.COMPANYID = _this.userProfile.CompanyInfo.COMPANYID; // must for SP
                        _this.PartyBalanceData.NAME = _this.userProfile.CompanyInfo.NAME ? _this.userProfile.CompanyInfo.NAME : '';
                        _this.PartyBalanceData.ADDRESS = _this.userProfile.CompanyInfo.ADDRESS ? _this.userProfile.CompanyInfo.ADDRESS : '';
                        _this.PartyBalanceData.VATNO = _this.userProfile.CompanyInfo.VAT ? _this.userProfile.CompanyInfo.VAT : '';
                        _this.PartyBalanceData.numtowords = _this.numtowords ? _this.numtowords : '';
                        _this.PartyBalanceData.NETAMOUNT = _this.PartyBalanceData.NETAMOUNT ? _this.PartyBalanceData.NETAMOUNT : 0;
                        _this.PartyBalanceData.COMPANYNAME = _this.PartyBalanceData.CUSTOMERNAME ? _this.PartyBalanceData.CUSTOMERNAME : '';
                        _this.PartyBalanceData.COMPANYADDRESS = _this.PartyBalanceData.COMPANYADDRESS ? _this.PartyBalanceData.COMPANYADDRESS : '';
                        _this.PartyBalanceData.PANNO = _this.PartyBalanceData.PANNO ? _this.PartyBalanceData.PANNO : 0;
                        _this.PartyBalanceData.INCLUDECASHTRANSACTION = _this.PartyBalanceData.INCLUDECASHTRANSACTION ? _this.PartyBalanceData.INCLUDECASHTRANSACTION : 0;
                        if (!_this.PartyBalanceData.COSTCENTER) {
                            _this.PartyBalanceData.COSTCENTER = '%'; // must for SP
                        }
                        if (!_this.PartyBalanceData.ACID) {
                            _this.PartyBalanceData.ACID = '%'; // must for SP
                        }
                        console.log("d", _this.PartyBalanceData);
                        _this.masterService.printPartyBalance(_this.filename, _this.PartyBalanceData).subscribe(function (res) {
                            ////console.log("pdfresponse", res);
                            var blobUrl = URL.createObjectURL(res.content);
                            var iframe = document.createElement('iframe');
                            iframe.style.display = 'none';
                            iframe.src = blobUrl;
                            document.body.appendChild(iframe);
                            iframe.contentWindow.print();
                            _this.changeCursor = false;
                        });
                    }
                });
            }
        });
        this.changeCursor = false;
    };
    ItemWiseDepreciationDetailComponent.prototype.parttypeChange = function () {
        this.PartyBalanceData.CUSTOMERNAME = "";
        this.PartyBalanceData.ACID = "";
    };
    return ItemWiseDepreciationDetailComponent;
}());
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])("genericGridACList"),
    __metadata("design:type", __WEBPACK_IMPORTED_MODULE_1__common_popupLists_generic_grid_generic_popup_grid_component__["c" /* GenericPopUpComponent */])
], ItemWiseDepreciationDetailComponent.prototype, "genericGridACList", void 0);
ItemWiseDepreciationDetailComponent = __decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
        selector: 'itemwise-depreciation-detail',
        template: __webpack_require__(1326),
        providers: [__WEBPACK_IMPORTED_MODULE_5__theme_pipes__["a" /* TwoDigitNumber */]]
        // styles: [require('./party-balance-confirmation.component.styl')]
    }),
    __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_4__common_Transaction_Components_transaction_service__["a" /* TransactionService */],
        __WEBPACK_IMPORTED_MODULE_2__common_repositories_masterRepo_service__["a" /* MasterRepo */],
        __WEBPACK_IMPORTED_MODULE_3__common_services_permission_authService_service__["a" /* AuthService */]])
], ItemWiseDepreciationDetailComponent);



/***/ }),

/***/ 1257:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__common_Transaction_Components_transaction_service__ = __webpack_require__(7);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__common_interfaces_TrnMain__ = __webpack_require__(25);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__common_repositories_masterRepo_service__ = __webpack_require__(8);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__common_services_setting_service__ = __webpack_require__(72);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__angular_router__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__common_services_spinner_spinner_service__ = __webpack_require__(20);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__common_services_alert_alert_service__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__common_Transaction_Components_trntran_voucher_entry_component__ = __webpack_require__(557);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return JournalVoucherComponent; });









var JournalVoucherComponent = (function () {
    function JournalVoucherComponent(_trnMainService, masterService, setting, _activatedRoute, _loadingSerive, _alertService) {
        this._trnMainService = _trnMainService;
        this.masterService = masterService;
        this.setting = setting;
        this._activatedRoute = _activatedRoute;
        this._loadingSerive = _loadingSerive;
        this._alertService = _alertService;
        this.TrnMainObj = {};
        this.voucherType = __WEBPACK_IMPORTED_MODULE_2__common_interfaces_TrnMain__["a" /* VoucherTypeEnum */].Journal;
        this.VoucherLatePostList = [];
        this.TrnMainObj = _trnMainService.TrnMainObj;
        this._trnMainService.initialFormLoad(12);
        this.voucherType = __WEBPACK_IMPORTED_MODULE_2__common_interfaces_TrnMain__["a" /* VoucherTypeEnum */].Journal;
        this._trnMainService.DrillMode = "New";
    }
    JournalVoucherComponent.prototype.ngOnInit = function () {
        var _this = this;
        this._activatedRoute.queryParams.subscribe(function (params) {
            if (params['mode'] == "DRILL") {
                var VCHR = params['voucher'];
                var vparams = [];
                _this.masterService.SelectedRepDiv = params['Div'];
                _this._trnMainService.DrillMode = params['mode'];
                vparams = VCHR.split('-');
                _this._loadingSerive.show("Loading Invoice");
                _this.masterService.LoadTransaction(VCHR, vparams[1], vparams[2]).subscribe(function (res) {
                    if (res.status == "ok") {
                        _this._loadingSerive.hide();
                        _this._trnMainService.TrnMainObj = res.result;
                        _this._trnMainService.TrnMainObj.VoucherType = 12;
                        _this._trnMainService.pageHeading = "Journal";
                        _this._trnMainService.TrnMainObj.VoucherPrefix = "JV";
                        _this._trnMainService.TrnMainObj.Mode = "VIEW";
                        _this._trnMainService.viewDate.next();
                        _this._trnMainService.calculateCrDrTotal();
                        _this._trnMainService.calculateDrCrDifferences();
                    }
                }, function (err) {
                    _this._loadingSerive.hide();
                    _this._alertService.error(err);
                });
            }
            else if (params['mode'] == "fromLatepost") {
                // alert("params['mode']==fromLatepost")
                _this._loadingSerive.show("Loading Invoice");
                _this.masterService.LoadTransaction(params.voucher, params.DIVISION, params.PHISCALID).subscribe(function (res) {
                    if (res.status == "ok") {
                        _this._loadingSerive.hide();
                        _this._trnMainService.TrnMainObj = res.result;
                        _this._trnMainService.TrnMainObj.VoucherType = 12;
                        _this._trnMainService.pageHeading = "Journal";
                        _this._trnMainService.TrnMainObj.VoucherPrefix = "JV";
                        _this._trnMainService.TrnMainObj.Mode = "VIEW";
                        _this._trnMainService.viewDate.next();
                    }
                }, function (err) {
                    _this._loadingSerive.hide();
                    _this._alertService.error(err);
                });
            }
            else {
                _this.TrnMainObj.Mode = "NEW";
                _this.masterService.ShowMore = false;
                _this.masterService.getEnableLatePost().subscribe(function (res) {
                    if (res.status == "ok") {
                        _this.VoucherLatePostList = res.result;
                        for (var _i = 0, _a = _this.VoucherLatePostList; _i < _a.length; _i++) {
                            var i = _a[_i];
                            if (i.VoucherName == 'JournalVoucher') {
                                if (i.Status == 1) {
                                    _this._trnMainService.TrnMainObj.isVoucherLatePostEnable = 1;
                                }
                            }
                        }
                    }
                });
            }
        });
        ////console.log("ChecksESSION",this.masterService.PhiscalObj.USER_PROFILE,this.masterService.PhiscalObj.setting)
    };
    JournalVoucherComponent.prototype.BillTrack = function () {
        this.trnmainentry.BillTrack();
    };
    return JournalVoucherComponent;
}());
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])("trnmainentry"),
    __metadata("design:type", __WEBPACK_IMPORTED_MODULE_8__common_Transaction_Components_trntran_voucher_entry_component__["a" /* TrnTranVoucherEntryComponent */])
], JournalVoucherComponent.prototype, "trnmainentry", void 0);
JournalVoucherComponent = __decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
        selector: "journal-voucher",
        template: __webpack_require__(1327),
        providers: [__WEBPACK_IMPORTED_MODULE_1__common_Transaction_Components_transaction_service__["a" /* TransactionService */]],
        styles: [__webpack_require__(120)]
    }),
    __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1__common_Transaction_Components_transaction_service__["a" /* TransactionService */],
        __WEBPACK_IMPORTED_MODULE_3__common_repositories_masterRepo_service__["a" /* MasterRepo */],
        __WEBPACK_IMPORTED_MODULE_4__common_services_setting_service__["a" /* SettingService */],
        __WEBPACK_IMPORTED_MODULE_5__angular_router__["ActivatedRoute"],
        __WEBPACK_IMPORTED_MODULE_6__common_services_spinner_spinner_service__["a" /* SpinnerService */],
        __WEBPACK_IMPORTED_MODULE_7__common_services_alert_alert_service__["a" /* AlertService */]])
], JournalVoucherComponent);



/***/ }),

/***/ 1258:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__common_Transaction_Components_transaction_service__ = __webpack_require__(7);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__common_popupLists_generic_grid_generic_popup_grid_component__ = __webpack_require__(35);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__common_repositories_masterRepo_service__ = __webpack_require__(8);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__common_services_permission_authService_service__ = __webpack_require__(17);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__theme_pipes__ = __webpack_require__(560);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__common_services_spinner_spinner_service__ = __webpack_require__(20);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__common_services_alert_alert_service__ = __webpack_require__(12);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return PartyBalanceConfirmationComponent; });








var PartyBalanceConfirmationComponent = (function () {
    function PartyBalanceConfirmationComponent(_transactionService, alterService, spinnerService, masterService, authService) {
        var _this = this;
        this._transactionService = _transactionService;
        this.alterService = alterService;
        this.spinnerService = spinnerService;
        this.masterService = masterService;
        this.authService = authService;
        this.gridACListPopupSettings = new __WEBPACK_IMPORTED_MODULE_2__common_popupLists_generic_grid_generic_popup_grid_component__["b" /* GenericPopUpSettings */]();
        this.rowIndex = 0;
        this.PartyInfo = [];
        this.costlists = [];
        this.PartyBalanceData = {};
        this.userProfile = {};
        this.userProfile = this.authService.getUserProfile();
        this.PartyBalanceData.DATE1 = this.masterService.PhiscalObj.BeginDate.split('T')[0];
        this.changeEntryDate(this.PartyBalanceData.DATE1, "AD");
        this.PartyBalanceData.DATE2 = this.masterService.PhiscalObj.EndDate.split('T')[0];
        this.changeEndDate(this.PartyBalanceData.DATE2, "AD");
        this.PartyBalanceData.INCLUDECASHTRANSACTION = 0;
        this.PartyBalanceData.INCLUDEACBASECNDN = 0;
        this.masterService.getAllNEWCostCenter().subscribe(function (res) {
            if (res) {
                _this.costlists = res.result;
            }
        }, function (error) {
            _this.costlists = [];
        });
        this.PartyBalanceData.PARTYTYPE = "C";
    }
    PartyBalanceConfirmationComponent.prototype.showAcList = function (i) {
        this._transactionService.TrnMainObj.TRNMODE = "SinglePayment_Party";
        var TRNMODE = "" + this._transactionService.TrnMainObj.TRNMODE;
        if (this.PartyBalanceData.PARTYTYPE == "C") {
            TRNMODE = "PartyBalance_Customer";
        }
        else {
            TRNMODE = "SinglePayment_Party";
        }
        this.gridACListPopupSettings = {
            title: "Accounts",
            apiEndpoints: "/getAccountPagedListByMapId/Details/" + TRNMODE,
            defaultFilterIndex: 1,
            columns: [
                {
                    key: "ACID",
                    title: "AC CODE",
                    hidden: false,
                    noSearch: false
                },
                {
                    key: "ACNAME",
                    title: "A/C NAME",
                    hidden: false,
                    noSearch: false
                }
            ]
        };
        this.genericGridACList.show();
    };
    // ngOnInit(){
    //   this.changeEntryDate(this.PartyBalanceData.DATE1, "AD");
    //   this.changeEndDate(this.PartyBalanceData.DATE2, "AD");
    // }
    PartyBalanceConfirmationComponent.prototype.onAcSelect = function (acItem) {
        //console.log('sdgfgsdh', acItem);
        this.PartyBalanceData.CUSTOMERNAME = acItem.ACNAME;
        this.PartyBalanceData.ACID = acItem.ACID;
        this.PartyBalanceData.PANNO = acItem.VATNO;
        this.PartyBalanceData.COMPANYADDRESS = acItem.ADDRESS;
        //  this.setFocus();
    };
    PartyBalanceConfirmationComponent.prototype.setFocus = function () {
        document.getElementById('Name0').focus();
    };
    PartyBalanceConfirmationComponent.prototype.onLoad = function () {
        var _this = this;
        // //console.log('hello its working',this.PartyBalanceData);
        this.PartyBalanceData.DIVISION = this.userProfile.CompanyInfo.INITIAL;
        this.PartyBalanceData.PHISCALID = this.userProfile.CompanyInfo.PhiscalID;
        this.PartyBalanceData.COMPANYID = this.userProfile.CompanyInfo.COMPANYID;
        this.PartyBalanceData.SUMMARY = 1;
        if (!this.PartyBalanceData.COSTCENTER) {
            this.PartyBalanceData.COSTCENTER = '%';
        }
        if (!this.PartyBalanceData.ACID) {
            this.PartyBalanceData.ACID = '%';
        }
        this.spinnerService.show("Data Loading...");
        this.masterService.LoadPartyBalanceData(this.PartyBalanceData).subscribe(function (res) {
            //console.log("@@@res.result",res.result)
            _this.PartyInfo = res.result;
            var abcd = _this.PartyInfo.filter(function (x) { return (x.PARTICULAR == 'Net Receivable' || x.PARTICULAR == 'Net Payable'); }); //check for Net Receivable and Net Payable
            //console.log("abcd",abcd)
            _this.spinnerService.hide();
            if (abcd.length > 0 && abcd[0] && abcd[0].AMOUNT) {
                if (abcd[0].AMOUNT < 0) {
                    _this.PartyBalanceData.NETAMOUNT = abcd[0].AMOUNT * (-1); // send positive netamount for partbalnce print if in negative.
                }
                else {
                    _this.PartyBalanceData.NETAMOUNT = abcd[0].AMOUNT;
                }
            }
            else {
                _this.PartyBalanceData.NETAMOUNT = 0;
            }
        }, function (error) {
            _this.alterService.error(error._body);
            _this.spinnerService.hide();
        });
    };
    PartyBalanceConfirmationComponent.prototype.reSet = function () {
        this.PartyInfo = [];
        this.PartyBalanceData = {};
    };
    // **********For Date Format**************
    PartyBalanceConfirmationComponent.prototype.changeEntryDate = function (value, format) {
        //console.log('working');
        var adbs = __webpack_require__(19);
        if (format == "AD") {
            var adDate = (value.replace("-", "/")).replace("-", "/");
            var bsDate = adbs.ad2bs(adDate);
            this.PartyBalanceData.BSDATE1 = this.masterService.toBSDate(value);
        }
        else if (format == "BS") {
            var datearr = value.split('/');
            var bsDate_1 = datearr[2] + "/" + datearr[1] + "/" + datearr[0];
            // var bsDate = (value.replace("-", "/")).replace("-", "/");
            var adDate = adbs.bs2ad(bsDate_1);
            this.PartyBalanceData.DATE1 = this.masterService.toADDate(value);
        }
    };
    PartyBalanceConfirmationComponent.prototype.changeEndDate = function (value, format) {
        var adbs = __webpack_require__(19);
        if (format == "AD") {
            var adDate = (value.replace("-", "/")).replace("-", "/");
            var bsDate = adbs.ad2bs(adDate);
            this.PartyBalanceData.BSDATE2 = this.masterService.toBSDate(value);
        }
        else if (format == "BS") {
            var datearr = value.split('/');
            var bsDate_2 = datearr[2] + "/" + datearr[1] + "/" + datearr[0];
            // var bsDate = (value.replace("-", "/")).replace("-", "/");
            var adDate = adbs.bs2ad(bsDate_2);
            this.PartyBalanceData.DATE2 = this.masterService.toADDate(value);
        }
    };
    PartyBalanceConfirmationComponent.prototype.onPrintClicked = function () {
        //console.log('Its working');
        // if (this._trnMainService.TrnMainObj.TrntranList.length > 0) {
        //   this.promptPrintDevice = true;
        // } else {
        //   this.alertService.warning("No voucher Found for Printing");
        // }
        var _this = this;
        this.showVoucherReplicateButton = false;
        var vat = 606764917;
        // let VATresult = vat.split("");
        // this.masterService.getPrintFileName("PV").subscribe((res) => {
        // if (res.status == "ok") {
        this.filename = 'PARTYBALANCE.ims';
        this.rownumber = 0;
        this.changeCursor = true;
        this.masterService.getGivenNumberToWords(this.PartyBalanceData.NETAMOUNT).subscribe(function (res) {
            if (res.status == "ok") {
                _this.numtowords = res.result ? res.result[0].NUMTOWORDS : '';
                ////console.log("@@numtowords", this.numtowords);
                var userdivision = _this.userProfile.userDivision ? _this.userProfile.userDivision : _this.userProfile.CompanyInfo.INITIAL;
                var ADDRESS_1 = _this.userProfile.CompanyInfo.ADDRESS;
                _this.masterService.getDetailsByUserDivision(userdivision).subscribe(function (res) {
                    if (res.status == "ok") {
                        if (res.result && res.result.length > 0 && res.result[0] && res.result[0].COMADD) {
                            ADDRESS_1 = res.result[0].COMADD;
                        }
                        if (ADDRESS_1 === null || ADDRESS_1 === undefined || ADDRESS_1 === '') {
                            ADDRESS_1 = _this.userProfile.CompanyInfo.ADDRESS;
                        }
                        _this.PartyBalanceData.DIVISION = _this.userProfile.CompanyInfo.INITIAL; // must for SP
                        _this.PartyBalanceData.PHISCALID = _this.userProfile.CompanyInfo.PhiscalID; // must for SP
                        _this.PartyBalanceData.COMPANYID = _this.userProfile.CompanyInfo.COMPANYID; // must for SP
                        _this.PartyBalanceData.NAME = _this.userProfile.CompanyInfo.NAME ? _this.userProfile.CompanyInfo.NAME : '';
                        _this.PartyBalanceData.ADDRESS = _this.userProfile.CompanyInfo.ADDRESS ? _this.userProfile.CompanyInfo.ADDRESS : '';
                        _this.PartyBalanceData.VATNO = _this.userProfile.CompanyInfo.VAT ? _this.userProfile.CompanyInfo.VAT : '';
                        _this.PartyBalanceData.numtowords = _this.numtowords ? _this.numtowords : '';
                        _this.PartyBalanceData.NETAMOUNT = _this.PartyBalanceData.NETAMOUNT ? _this.PartyBalanceData.NETAMOUNT : 0;
                        _this.PartyBalanceData.COMPANYNAME = _this.PartyBalanceData.CUSTOMERNAME ? _this.PartyBalanceData.CUSTOMERNAME : '';
                        _this.PartyBalanceData.COMPANYADDRESS = _this.PartyBalanceData.COMPANYADDRESS ? _this.PartyBalanceData.COMPANYADDRESS : '';
                        _this.PartyBalanceData.PANNO = _this.PartyBalanceData.PANNO ? _this.PartyBalanceData.PANNO : 0;
                        _this.PartyBalanceData.INCLUDECASHTRANSACTION = _this.PartyBalanceData.INCLUDECASHTRANSACTION ? _this.PartyBalanceData.INCLUDECASHTRANSACTION : 0;
                        _this.PartyBalanceData.INCLUDEACBASECNDN = _this.PartyBalanceData.INCLUDEACBASECNDN ? _this.PartyBalanceData.INCLUDEACBASECNDN : 0;
                        if (!_this.PartyBalanceData.COSTCENTER) {
                            _this.PartyBalanceData.COSTCENTER = '%'; // must for SP
                        }
                        if (!_this.PartyBalanceData.ACID) {
                            _this.PartyBalanceData.ACID = '%'; // must for SP
                        }
                        console.log("d", _this.PartyBalanceData);
                        _this.masterService.printPartyBalance(_this.filename, _this.PartyBalanceData).subscribe(function (res) {
                            ////console.log("pdfresponse", res);
                            var blobUrl = URL.createObjectURL(res.content);
                            var iframe = document.createElement('iframe');
                            iframe.style.display = 'none';
                            iframe.src = blobUrl;
                            document.body.appendChild(iframe);
                            iframe.contentWindow.print();
                            _this.changeCursor = false;
                        });
                    }
                });
            }
        });
        this.changeCursor = false;
    };
    PartyBalanceConfirmationComponent.prototype.parttypeChange = function () {
        this.PartyBalanceData.CUSTOMERNAME = "";
        this.PartyBalanceData.ACID = "";
    };
    return PartyBalanceConfirmationComponent;
}());
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])("genericGridACList"),
    __metadata("design:type", __WEBPACK_IMPORTED_MODULE_2__common_popupLists_generic_grid_generic_popup_grid_component__["c" /* GenericPopUpComponent */])
], PartyBalanceConfirmationComponent.prototype, "genericGridACList", void 0);
PartyBalanceConfirmationComponent = __decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
        selector: 'party-balance-confirmation',
        template: __webpack_require__(1330),
        providers: [__WEBPACK_IMPORTED_MODULE_5__theme_pipes__["a" /* TwoDigitNumber */]]
        // styles: [require('./party-balance-confirmation.component.styl')]
    }),
    __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1__common_Transaction_Components_transaction_service__["a" /* TransactionService */],
        __WEBPACK_IMPORTED_MODULE_7__common_services_alert_alert_service__["a" /* AlertService */],
        __WEBPACK_IMPORTED_MODULE_6__common_services_spinner_spinner_service__["a" /* SpinnerService */],
        __WEBPACK_IMPORTED_MODULE_3__common_repositories_masterRepo_service__["a" /* MasterRepo */],
        __WEBPACK_IMPORTED_MODULE_4__common_services_permission_authService_service__["a" /* AuthService */]])
], PartyBalanceConfirmationComponent);



/***/ }),

/***/ 1259:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__common_Transaction_Components_transaction_service__ = __webpack_require__(7);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__common_interfaces_TrnMain__ = __webpack_require__(25);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__common_repositories_masterRepo_service__ = __webpack_require__(8);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__common_services_setting_service__ = __webpack_require__(72);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__common_services_AppSettings__ = __webpack_require__(214);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_rxjs_BehaviorSubject__ = __webpack_require__(30);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_rxjs_BehaviorSubject___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_6_rxjs_BehaviorSubject__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__angular_material__ = __webpack_require__(16);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__common_services_alert_alert_service__ = __webpack_require__(12);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return PartyOpeningBalance; });









//import { MdDialog } from "@angular/material/material";
var PartyOpeningBalance = (function () {
    function PartyOpeningBalance(masterService, _trnMainService, setting, AppSettings, dialog, alertService) {
        this.masterService = masterService;
        this._trnMainService = _trnMainService;
        this.setting = setting;
        this.AppSettings = AppSettings;
        this.dialog = dialog;
        this.alertService = alertService;
        this.voucherType = __WEBPACK_IMPORTED_MODULE_2__common_interfaces_TrnMain__["a" /* VoucherTypeEnum */].PartyOpeningBalance;
        this.prefix = {};
        this.dialogMessageSubject = new __WEBPACK_IMPORTED_MODULE_6_rxjs_BehaviorSubject__["BehaviorSubject"]("");
        this.dialogMessage$ = this.dialogMessageSubject.asObservable();
        this.TranList = [];
        this.previousOpeningAccountData = [];
        this.TrnMainObj = this._trnMainService.TrnMainObj;
        this.TrnMainObj.DIVISION = this.AppSettings.DefaultDivision;
        this._trnMainService.initialFormLoad(23);
    }
    PartyOpeningBalance.prototype.ngOnInit = function () {
        this.TrnMainObj.Mode = "NEW";
        this.masterService.ShowMore = false;
        this.voucherType = this._trnMainService.TrnMainObj.VoucherType;
    };
    PartyOpeningBalance.prototype.prefixChanged = function (pref) {
        var _this = this;
        try {
            this._trnMainService.prefix = pref;
            this.prefix = pref;
            if (this.TrnMainObj.Mode == "NEW") {
                if (this.TrnMainObj.DIVISION == "" ||
                    this.TrnMainObj.DIVISION == null) {
                    this.TrnMainObj.DIVISION = this.setting.appSetting.DefaultDivision;
                }
                this.masterService.getVoucherNo(this.TrnMainObj).subscribe(function (res) {
                    if (res.status == "ok") {
                        var TMain = res.result;
                        _this.TrnMainObj.VCHRNO = TMain.VCHRNO.substr(2, TMain.VCHRNO.length - 2);
                        _this.TrnMainObj.CHALANNO = TMain.CHALANNO;
                    }
                    else {
                        alert("Failed to retrieve VoucherNo");
                    }
                });
            }
        }
        catch (ex) {
            alert(ex);
        }
    };
    return PartyOpeningBalance;
}());
PartyOpeningBalance = __decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
        selector: "party-opening-balance",
        template: __webpack_require__(1331),
        providers: [__WEBPACK_IMPORTED_MODULE_1__common_Transaction_Components_transaction_service__["a" /* TransactionService */]]
    }),
    __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_3__common_repositories_masterRepo_service__["a" /* MasterRepo */],
        __WEBPACK_IMPORTED_MODULE_1__common_Transaction_Components_transaction_service__["a" /* TransactionService */],
        __WEBPACK_IMPORTED_MODULE_4__common_services_setting_service__["a" /* SettingService */],
        __WEBPACK_IMPORTED_MODULE_5__common_services_AppSettings__["a" /* AppSettings */],
        __WEBPACK_IMPORTED_MODULE_7__angular_material__["a" /* MdDialog */],
        __WEBPACK_IMPORTED_MODULE_8__common_services_alert_alert_service__["a" /* AlertService */]])
], PartyOpeningBalance);



/***/ }),

/***/ 1260:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__common_repositories_masterRepo_service__ = __webpack_require__(8);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_moment__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_moment___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_moment__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__party_reconciliation_service__ = __webpack_require__(1285);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__common_popupLists_generic_grid_generic_popup_grid_component__ = __webpack_require__(35);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__common_interfaces_bank_reconciliation_interface__ = __webpack_require__(1237);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__common_services_spinner_spinner_service__ = __webpack_require__(20);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__common_services_alert_alert_service__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__common_Transaction_Components_transaction_service__ = __webpack_require__(7);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return PartyReconciliationComponent; });









var PartyReconciliationComponent = (function () {
    function PartyReconciliationComponent(platformId, masterService, partyReconciliationService, spinnerService, alertSerivces, _transactionService) {
        this.platformId = platformId;
        this.masterService = masterService;
        this.partyReconciliationService = partyReconciliationService;
        this.spinnerService = spinnerService;
        this.alertSerivces = alertSerivces;
        this._transactionService = _transactionService;
        this.gridbankReconciliationPopupSettings = new __WEBPACK_IMPORTED_MODULE_4__common_popupLists_generic_grid_generic_popup_grid_component__["b" /* GenericPopUpSettings */]();
        this.PartyReconciliationObj = new __WEBPACK_IMPORTED_MODULE_5__common_interfaces_bank_reconciliation_interface__["a" /* BankReconciliation */]();
        this.reconcileListObj = new __WEBPACK_IMPORTED_MODULE_5__common_interfaces_bank_reconciliation_interface__["b" /* Reconcile */]();
        this.reconcileList = [];
        this.balanceAsPerCompanyBook = [];
        this.amountNotReflectedOnBank = [];
        this.notReflectedonBankDebit = 0;
        this.notReflectedonBankCredit = 0;
        this.balanceAsPerBankDebit = 0;
        this.balanceAsperBankCredit = 0;
        this.differenceDebit = 0;
        this.differenceCredit = 0;
        this.companybook = 0;
        this.resBalance = 0;
        this.resDifference = 0;
        this.alwaysShowCalendars = true;
        this.ranges = {
            'Today': [__WEBPACK_IMPORTED_MODULE_2_moment__(), __WEBPACK_IMPORTED_MODULE_2_moment__()],
            'Yesterday': [__WEBPACK_IMPORTED_MODULE_2_moment__().subtract(1, 'days'), __WEBPACK_IMPORTED_MODULE_2_moment__().subtract(1, 'days')],
            'Last 7 Days': [__WEBPACK_IMPORTED_MODULE_2_moment__().subtract(6, 'days'), __WEBPACK_IMPORTED_MODULE_2_moment__()],
            'Last 30 Days': [__WEBPACK_IMPORTED_MODULE_2_moment__().subtract(29, 'days'), __WEBPACK_IMPORTED_MODULE_2_moment__()],
            'This Month': [__WEBPACK_IMPORTED_MODULE_2_moment__().startOf('month'), __WEBPACK_IMPORTED_MODULE_2_moment__().endOf('month')],
            'Last Month': [__WEBPACK_IMPORTED_MODULE_2_moment__().subtract(1, 'month').startOf('month'), __WEBPACK_IMPORTED_MODULE_2_moment__().subtract(1, 'month').endOf('month')],
            'Financial Year': [__WEBPACK_IMPORTED_MODULE_2_moment__().set('date', 1).set('month', 3), __WEBPACK_IMPORTED_MODULE_2_moment__().endOf('month').set('month', 2).add(1, 'year')],
        };
        this.locale = {
            format: 'DD/MM/YYYY',
            direction: 'ltr',
            weekLabel: 'W',
            separator: ' - ',
            cancelLabel: 'Cancel',
            applyLabel: 'Okay',
            clearLabel: 'Clear',
            customRangeLabel: 'Custom Range',
            daysOfWeek: __WEBPACK_IMPORTED_MODULE_2_moment__["weekdaysMin"](),
            monthNames: __WEBPACK_IMPORTED_MODULE_2_moment__["monthsShort"](),
            firstDay: 0 // first day is monday
        };
        this.masterService.ShowMore = true;
        this.showBankDate = false;
        this.selectedDate = {
            startDate: __WEBPACK_IMPORTED_MODULE_2_moment__(),
            endDate: __WEBPACK_IMPORTED_MODULE_2_moment__()
        };
        this.showCompanybook = false;
        this.reflectedBank = false;
        this.PartyReconciliationObj.DATE1 = new Date().toJSON().split('T')[0];
        this.PartyReconciliationObj.DATE2 = new Date().toJSON().split('T')[0];
        this.changeEntryDate(this.PartyReconciliationObj.DATE1, "AD");
        this.changeEndDate(this.PartyReconciliationObj.DATE2, "AD");
        this.PartyReconciliationObj.PARTYTYPE = "C";
    }
    PartyReconciliationComponent.prototype.onItemDoubleClick = function (event) {
        this.selectedValue = event;
        this.PartyReconciliationObj.ACNAME = this.selectedValue.ACNAME;
        this.PartyReconciliationObj.ACID = this.selectedValue.ACID;
        this.onLoadClick();
    };
    PartyReconciliationComponent.prototype.onSaveExcelClick = function () {
    };
    PartyReconciliationComponent.prototype.onLoadClick = function () {
        var _this = this;
        this.spinnerService.show('Loading Data .. ');
        this.notReflectedonBankDebit = 0;
        this.notReflectedonBankCredit = 0;
        this.balanceAsPerBankDebit = 0;
        this.balanceAsperBankCredit = 0;
        this.differenceDebit = 0;
        this.differenceCredit = 0;
        this.companybook = 0;
        this.resBalance = 0;
        this.resDifference = 0;
        this.PartyReconciliationObj.COMPANYID = this.masterService.userProfile.CompanyInfo.COMPANYID;
        this.PartyReconciliationObj.PHISCALID = this.masterService.PhiscalObj.PhiscalID;
        this.PartyReconciliationObj.DIV = this.masterService.userProfile.CompanyInfo.INITIAL;
        this.partyReconciliationService.getPartyReconcileList(this.PartyReconciliationObj)
            .subscribe(function (res) {
            var reconcileResult = res.result;
            if (res.status == 'ok') {
                _this.reconcileList = res.result.result;
                if (!_this.reconcileList || !_this.reconcileList.length) {
                    _this.alertSerivces.error('Could not found data');
                }
                _this.amountNotReflectedOnBank = res.result.amountNotReflectedOnBank;
                _this.balanceAsPerCompanyBook = res.result.balanceAsPerCompanyBook;
                if (_this.balanceAsPerCompanyBook == null) {
                    _this.showCompanybook = false;
                }
                else {
                    if (_this.balanceAsPerCompanyBook.length > 0) {
                        _this.showCompanybook = true;
                    }
                    else {
                        _this.showCompanybook = false;
                    }
                }
                if (_this.amountNotReflectedOnBank == null) {
                    _this.reflectedBank = false;
                }
                else {
                    if (_this.amountNotReflectedOnBank.length > 0) {
                        _this.reflectedBank = true;
                    }
                    else {
                        _this.reflectedBank = false;
                    }
                }
                _this.buildCheckBox();
                _this.DebitCreditCalculate();
                _this.spinnerService.hide();
            }
            else {
                _this.spinnerService.hide();
                _this.alertSerivces.error("Error" + res.result);
            }
        });
    };
    PartyReconciliationComponent.prototype.buildCheckBox = function () {
        for (var i in this.reconcileList) {
            this.reconcileList[i].isChecked = false;
            if (this.reconcileList[i].BANKDATE == undefined || this.reconcileList[i].BANKDATE == null || String(this.reconcileList[i].BANKDATE) == '') {
                this.reconcileList[i].isReconciled = false;
            }
            else {
                this.reconcileList[i].isReconciled = true;
            }
        }
    };
    /**
     * Save Function to Save Bank Reconcilation
     */
    PartyReconciliationComponent.prototype.onSaveClick = function () {
        var _this = this;
        var x = this.reconcileList.filter(function (x) { return x.isChecked == true; });
        if (x.length == 0) {
            this.alertSerivces.error("Please Select at least one voucher");
            return;
        }
        else {
            this.spinnerService.show("Saving Data. Please Wait!");
            this.partyReconciliationService.savePartyReconciliation(this.reconcileList.filter(function (x) { return x.isChecked == true; }))
                .subscribe(function (res) {
                if (res.status == "ok") {
                    _this.spinnerService.hide();
                    _this.alertSerivces.success("Reconciled  Successfully");
                    _this.reconcileList = null;
                    if (_this.reconcileList === undefined) {
                    }
                    _this.PartyReconciliationObj = new __WEBPACK_IMPORTED_MODULE_5__common_interfaces_bank_reconciliation_interface__["a" /* BankReconciliation */]();
                    _this.PartyReconciliationObj.DATE1 = new Date().toJSON().split('T')[0];
                    _this.PartyReconciliationObj.DATE2 = new Date().toJSON().split('T')[0];
                    _this.changeEntryDate(_this.PartyReconciliationObj.DATE1, "AD");
                    _this.changeEndDate(_this.PartyReconciliationObj.DATE2, "AD");
                }
                else {
                    _this.spinnerService.hide();
                    _this.alertSerivces.error("Error" + res.error);
                }
            }, function (error) {
                _this.spinnerService.hide();
                _this.alertSerivces.error(error);
            });
        }
    };
    PartyReconciliationComponent.prototype.dateChanged = function () {
        this.PartyReconciliationObj.DATE1 = __WEBPACK_IMPORTED_MODULE_2_moment__(this.selectedDate.startDate).format('YYYY-MM-DD HH:mm:ss');
        this.PartyReconciliationObj.DATE2 = __WEBPACK_IMPORTED_MODULE_2_moment__(this.selectedDate.endDate).format('YYYY-MM-DD HH:mm:ss');
    };
    PartyReconciliationComponent.prototype.onBankReconciliationPopUPTab = function () {
        var TRNMODE = "Party Payment";
        if (this.PartyReconciliationObj.PARTYTYPE == "C") {
            TRNMODE = "PartyBalance_Customer";
        }
        else {
            TRNMODE = "Party Payment";
        }
        this.gridbankReconciliationPopupSettings = {
            title: "Party Name ",
            apiEndpoints: "/getAccountPagedListByMapId/Details/" + TRNMODE,
            defaultFilterIndex: 0,
            columns: [
                {
                    key: "ACID",
                    title: "Party No.",
                    hidden: false,
                    noSearch: false
                },
                {
                    key: "ACNAME",
                    title: "Party Name",
                    hidden: false,
                    noSearch: false
                }
            ]
        };
        this.bankReconciliationGeneric.show();
    };
    PartyReconciliationComponent.prototype.itemChecked = function (event, i) {
        if (event.target.checked) {
            this.reconcileList[i].isChecked = true;
            this.showBankDate = true;
            this.notReflectedonBankDebit = 0;
            this.notReflectedonBankCredit = 0;
            this.balanceAsPerBankDebit = 0;
            this.balanceAsperBankCredit = 0;
            this.differenceDebit = 0;
            this.differenceCredit = 0;
            // document.getElementById("bankDate" + i).focus();
        }
        else {
            this.reconcileList[i].isChecked = false;
            this.showBankDate = false;
            this.notReflectedonBankDebit = 0;
            this.notReflectedonBankCredit = 0;
            this.balanceAsPerBankDebit = 0;
            this.balanceAsperBankCredit = 0;
            this.differenceDebit = 0;
            this.differenceCredit = 0;
            for (var i_1 in this.reconcileList) {
                if (this.reconcileList[i_1].isReconciled == false) {
                    this.reconcileList[i_1].BANKDATE = null;
                }
            }
        }
        this.DebitCreditCalculate();
    };
    PartyReconciliationComponent.prototype.DebitCreditCalculate = function () {
        var _this = this;
        this.notReflectedonBankDebit = 0;
        this.notReflectedonBankCredit = 0;
        this.balanceAsPerBankDebit = 0;
        this.balanceAsperBankCredit = 0;
        if (this.reconcileList == null)
            return;
        this.reconcileList.filter(function (x) { return isNaN(Date.parse(String(x.BANKDATE))); }).forEach(function (i) {
            _this.notReflectedonBankCredit += _this._transactionService.nullToReturnZero(i.CRAMNT);
            _this.notReflectedonBankDebit += _this._transactionService.nullToReturnZero(i.DRAMNT);
        });
        if (this.balanceAsPerCompanyBook[0] != null) {
            var r = this.balanceAsPerCompanyBook[0].DRAMNT - (this.notReflectedonBankDebit - this.notReflectedonBankCredit);
            if (r > 0) {
                this.balanceAsPerBankDebit = r;
            }
            else {
                this.balanceAsperBankCredit = r;
            }
            var s = this.balanceAsPerCompanyBook[0].DRAMNT - r;
            if (s > 0) {
                this.differenceDebit = s;
            }
            else {
                this.differenceCredit = s;
            }
        }
    };
    PartyReconciliationComponent.prototype.parseFloat = function (param) {
        return parseFloat(param).toFixed(2);
    };
    PartyReconciliationComponent.prototype.KeyUpMethod = function (o) {
        for (var i in this.reconcileList) {
            if (this.reconcileList[i].isReconciled == false) {
                this.reconcileList[i].isChecked = true;
                break;
            }
        }
    };
    PartyReconciliationComponent.prototype.BankDateFocus = function () {
        this.bDate = false;
        this.notReflectedonBankDebit = 0;
        this.notReflectedonBankCredit = 0;
        this.balanceAsPerBankDebit = 0;
        this.balanceAsperBankCredit = 0;
        this.differenceDebit = 0;
        this.differenceCredit = 0;
        for (var i in this.reconcileList) {
            var date = this.reconcileList[i].TRNDATE;
            var bankDate = this.reconcileList[i].BANKDATE;
            var time1 = __WEBPACK_IMPORTED_MODULE_2_moment__(date).format('YYYY-MM-DD');
            var time2 = __WEBPACK_IMPORTED_MODULE_2_moment__(bankDate).format('YYYY-MM-DD');
            if (this.reconcileList[i].isReconciled == false) {
                if (time1 > time2) {
                    this.alertSerivces.error("Bank Date is less than Trnscation Date");
                }
            }
        }
        this.DebitCreditCalculate();
    };
    PartyReconciliationComponent.prototype.setBankDate = function (value, index) {
        if (value != null && value != undefined && value != "") {
            if (this.masterService.ValidateDate(value)) {
                this.reconcileList[index].BANKDATE = this.masterService.changeIMsDateToDate(value);
            }
            else {
                this.alertSerivces.error("Invalid Transaction Date");
                return;
            }
        }
    };
    PartyReconciliationComponent.prototype.getBankDate = function (index) {
        if (this.reconcileList[index].BANKDATE) {
            return this.masterService.customDateFormate(this.reconcileList[index].BANKDATE.toString());
        }
    };
    PartyReconciliationComponent.prototype.changeEntryDate = function (value, format) {
        var adbs = __webpack_require__(19);
        if (format == "AD") {
            var adDate = (value.replace("-", "/")).replace("-", "/");
            var bsDate = adbs.ad2bs(adDate);
            this.PartyReconciliationObj.BSDATE1 = this.masterService.toBSDate(value);
        }
        else if (format == "BS") {
            var datearr = value.split('/');
            var bsDate_1 = datearr[2] + "/" + datearr[1] + "/" + datearr[0];
            // var bsDate = (value.replace("-", "/")).replace("-", "/");
            var adDate = adbs.bs2ad(bsDate_1);
            var Engdate = this.masterService.toADDate(value);
            var Validatedata = this.masterService.ValidateNepaliDate(Engdate);
            if (Validatedata == true) {
                var bsDate1 = datearr[2] + "/" + datearr[1] + "/" + datearr[0];
                var adDate1 = adbs.bs2ad(bsDate1);
                this.PartyReconciliationObj.DATE1 = this.masterService.toADDate(value);
            }
            else {
                // this.alertService.error("Cannot Change the date");
                return;
            }
        }
    };
    PartyReconciliationComponent.prototype.changeEndDate = function (value, format) {
        var adbs = __webpack_require__(19);
        if (format == "AD") {
            var adDate = (value.replace("-", "/")).replace("-", "/");
            var bsDate = adbs.ad2bs(adDate);
            this.PartyReconciliationObj.BSDATE2 = this.masterService.toBSDate(value);
        }
        else if (format == "BS") {
            var datearr = value.split('/');
            var bsDate_2 = datearr[2] + "/" + datearr[1] + "/" + datearr[0];
            var adDate = adbs.bs2ad(bsDate_2);
            var Engdate = this.masterService.toADDate(value);
            var Validatedata = this.masterService.ValidateNepaliDate(Engdate);
            if (Validatedata == true) {
                var bsDate1 = datearr[2] + "/" + datearr[1] + "/" + datearr[0];
                var adDate1 = adbs.bs2ad(bsDate1);
                this.PartyReconciliationObj.DATE2 = this.masterService.toADDate(value);
            }
            else {
                // this.alertService.error("Cannot Change the date");
                return;
            }
        }
    };
    PartyReconciliationComponent.prototype.parttypeChange = function () {
        this.PartyReconciliationObj.ACNAME = "";
        this.PartyReconciliationObj.ACID = "";
    };
    return PartyReconciliationComponent;
}());
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])("bankReconciliationGeneric"),
    __metadata("design:type", __WEBPACK_IMPORTED_MODULE_4__common_popupLists_generic_grid_generic_popup_grid_component__["c" /* GenericPopUpComponent */])
], PartyReconciliationComponent.prototype, "bankReconciliationGeneric", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])("check"),
    __metadata("design:type", __WEBPACK_IMPORTED_MODULE_0__angular_core__["ElementRef"])
], PartyReconciliationComponent.prototype, "check", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])('bankInput'),
    __metadata("design:type", Object)
], PartyReconciliationComponent.prototype, "bankInput", void 0);
PartyReconciliationComponent = __decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
        selector: 'party-reconciliation',
        template: __webpack_require__(1332),
        providers: [__WEBPACK_IMPORTED_MODULE_3__party_reconciliation_service__["a" /* PartyReconciliationService */]],
        styles: [__webpack_require__(9)]
    }),
    __param(0, __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Inject"])(__WEBPACK_IMPORTED_MODULE_0__angular_core__["PLATFORM_ID"])),
    __metadata("design:paramtypes", [Object,
        __WEBPACK_IMPORTED_MODULE_1__common_repositories_masterRepo_service__["a" /* MasterRepo */],
        __WEBPACK_IMPORTED_MODULE_3__party_reconciliation_service__["a" /* PartyReconciliationService */],
        __WEBPACK_IMPORTED_MODULE_6__common_services_spinner_spinner_service__["a" /* SpinnerService */],
        __WEBPACK_IMPORTED_MODULE_7__common_services_alert_alert_service__["a" /* AlertService */],
        __WEBPACK_IMPORTED_MODULE_8__common_Transaction_Components_transaction_service__["a" /* TransactionService */]])
], PartyReconciliationComponent);



/***/ }),

/***/ 1261:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__common_Transaction_Components_invoice_list_component__ = __webpack_require__(576);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_moment__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_moment___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_moment__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__common_repositories__ = __webpack_require__(13);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__common_Transaction_Components_transaction_service__ = __webpack_require__(7);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__common_services_alert_alert_service__ = __webpack_require__(12);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return VoucherPosting; });






var VoucherPosting = (function () {
    function VoucherPosting(alertService, _masterService, _transactionService) {
        var _this = this;
        this.alertService = alertService;
        this._masterService = _masterService;
        this._transactionService = _transactionService;
        this.listSetting = new __WEBPACK_IMPORTED_MODULE_1__common_Transaction_Components_invoice_list_component__["b" /* GenericListSettings */]();
        this.divisionList = [];
        this.itemList = [];
        this.alwaysShowCalendars = true;
        this.ranges = {
            'Today': [__WEBPACK_IMPORTED_MODULE_2_moment__(), __WEBPACK_IMPORTED_MODULE_2_moment__()],
            'Yesterday': [__WEBPACK_IMPORTED_MODULE_2_moment__().subtract(1, 'days'), __WEBPACK_IMPORTED_MODULE_2_moment__().subtract(1, 'days')],
            'Last 7 Days': [__WEBPACK_IMPORTED_MODULE_2_moment__().subtract(6, 'days'), __WEBPACK_IMPORTED_MODULE_2_moment__()],
            'Last 30 Days': [__WEBPACK_IMPORTED_MODULE_2_moment__().subtract(29, 'days'), __WEBPACK_IMPORTED_MODULE_2_moment__()],
            'This Month': [__WEBPACK_IMPORTED_MODULE_2_moment__().startOf('month'), __WEBPACK_IMPORTED_MODULE_2_moment__().endOf('month')],
            'Last Month': [__WEBPACK_IMPORTED_MODULE_2_moment__().subtract(1, 'month').startOf('month'), __WEBPACK_IMPORTED_MODULE_2_moment__().subtract(1, 'month').endOf('month')],
            'Financial Year': [__WEBPACK_IMPORTED_MODULE_2_moment__().set('date', 1).set('month', 3), __WEBPACK_IMPORTED_MODULE_2_moment__().endOf('month').set('month', 2).add(1, 'year')],
        };
        this.locale = {
            format: 'DD/MM/YYYY',
            direction: 'ltr',
            weekLabel: 'W',
            separator: ' - ',
            cancelLabel: 'Cancel',
            applyLabel: 'Okay',
            clearLabel: 'Clear',
            customRangeLabel: 'Custom Range',
            daysOfWeek: __WEBPACK_IMPORTED_MODULE_2_moment__["weekdaysMin"](),
            monthNames: __WEBPACK_IMPORTED_MODULE_2_moment__["monthsShort"](),
            firstDay: 0 // first day is monday
        };
        this._masterService.getAllDivisions().subscribe(function (res) {
            _this.divisionList.push(res);
        });
        this.itemList = [
            {
                VCHRNO: '10121211',
                ACNAME: 'IMS POS',
                TRNDATE: '2019-07-21',
                DRAMNT: '2000000',
                CRAMNT: '2000000',
                ChequeNo: "0023556526550",
                ChequeDate: '2019-07-20',
                CostCenter: "I Dont Know",
                NARATION: 'NARATION'
            },
            {
                VCHRNO: '10121211',
                ACNAME: 'IMS POS',
                TRNDATE: '2019-07-21',
                DRAMNT: '2000000',
                CRAMNT: '2000000',
                ChequeNo: "0023556526550",
                ChequeDate: '2019-07-20',
                CostCenter: "I Dont Know",
                NARATION: 'NARATION'
            },
            {
                VCHRNO: '10121211',
                ACNAME: 'IMS POS',
                TRNDATE: '2019-07-21',
                DRAMNT: '2000000',
                CRAMNT: '2000000',
                ChequeNo: "0023556526550",
                ChequeDate: '2019-07-20',
                CostCenter: "I Dont Know",
                NARATION: 'NARATION'
            },
            {
                VCHRNO: '10121211',
                ACNAME: 'IMS POS',
                TRNDATE: '2019-07-21',
                DRAMNT: '2000000',
                CRAMNT: '2000000',
                ChequeNo: "0023556526550",
                ChequeDate: '2019-07-20',
                CostCenter: "I Dont Know",
                NARATION: 'NARATION'
            },
            {
                VCHRNO: '10121211',
                ACNAME: 'IMS POS',
                TRNDATE: '2019-07-21',
                DRAMNT: '2000000',
                CRAMNT: '2000000',
                ChequeNo: "0023556526550",
                ChequeDate: '2019-07-20',
                CostCenter: "I Dont Know",
                NARATION: 'NARATION'
            },
            {
                VCHRNO: '10121211',
                ACNAME: 'IMS POS',
                TRNDATE: '2019-07-21',
                DRAMNT: '2000000',
                CRAMNT: '2000000',
                ChequeNo: "0023556526550",
                ChequeDate: '2019-07-20',
                CostCenter: "I Dont Know",
                NARATION: 'NARATION'
            },
            {
                VCHRNO: '10121211',
                ACNAME: 'IMS POS',
                TRNDATE: '2019-07-21',
                DRAMNT: '2000000',
                CRAMNT: '2000000',
                ChequeNo: "0023556526550",
                ChequeDate: '2019-07-20',
                CostCenter: "I Dont Know",
                NARATION: 'NARATION'
            },
            {
                VCHRNO: '10121211',
                ACNAME: 'IMS POS',
                TRNDATE: '2019-07-21',
                DRAMNT: '2000000',
                CRAMNT: '2000000',
                ChequeNo: "0023556526550",
                ChequeDate: '2019-07-20',
                CostCenter: "I Dont Know",
                NARATION: 'NARATION'
            },
            {
                VCHRNO: '10121211',
                ACNAME: 'IMS POS',
                TRNDATE: '2019-07-21',
                DRAMNT: '2000000',
                CRAMNT: '2000000',
                ChequeNo: "0023556526550",
                ChequeDate: '2019-07-20',
                CostCenter: "I Dont Know",
                NARATION: 'NARATION'
            },
            {
                VCHRNO: '10121211',
                ACNAME: 'IMS POS',
                TRNDATE: '2019-07-21',
                DRAMNT: '2000000',
                CRAMNT: '2000000',
                ChequeNo: "0023556526550",
                ChequeDate: '2019-07-20',
                CostCenter: "I Dont Know",
                NARATION: 'NARATION'
            }
        ];
        this.selectedDate = {
            startDate: __WEBPACK_IMPORTED_MODULE_2_moment__(),
            endDate: __WEBPACK_IMPORTED_MODULE_2_moment__()
        };
        this.listSetting = {
            title: "Voucher Posting",
            apiEndpoints: "",
            columns: [
                {
                    key: "VCHRNO",
                    title: "Voucher No"
                },
                {
                    key: "ACNAME",
                    title: "Account Description"
                },
                {
                    key: "TRNDATE",
                    title: "Date"
                },
                {
                    key: "DRAMNT",
                    title: "Dr Amount"
                },
                {
                    key: "CRAMNT",
                    title: "Cr Amnt"
                },
                {
                    key: "ChequeNo",
                    title: "Cheque Number"
                },
                {
                    key: "ChequeDate",
                    title: "Cheque Date"
                },
                {
                    key: "CostCenter",
                    title: "Cost Center"
                },
                {
                    key: "NARATION",
                    title: "Naration"
                }
            ]
        };
    }
    VoucherPosting.prototype.dateChanged = function (date) {
        this._transactionService.voucherPostingObj.from = __WEBPACK_IMPORTED_MODULE_2_moment__(this.selectedDate.startDate).format('YYYY-MM-DD HH:mm:ss');
        this._transactionService.voucherPostingObj.to = __WEBPACK_IMPORTED_MODULE_2_moment__(this.selectedDate.endDate).format('YYYY-MM-DD HH:mm:ss');
    };
    VoucherPosting.prototype.divisionChange = function (division) {
    };
    VoucherPosting.prototype.voucherChange = function (voucher) {
        console.group(voucher);
    };
    VoucherPosting.prototype.pageValueChanged = function (pageNumber) {
        this.pageNumber = pageNumber;
    };
    VoucherPosting.prototype.loadVoucher = function () {
    };
    VoucherPosting.prototype.postInvoice = function () {
        var voucherList = [];
        var isChecked = this._transactionService.voucherPostingObj.invoiceList.find(function (x) { return x.checked == true; });
        if (isChecked == undefined || isChecked == null || isChecked == "") {
            this.alertService.error("No Invoice Selected");
            return;
        }
        this._transactionService.voucherPostingObj.invoiceList.find(function (x) {
            if (x.checked == true) {
                voucherList.push(x.VCHRNO);
            }
        });
    };
    return VoucherPosting;
}());
VoucherPosting = __decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
        selector: 'voucher-posting',
        template: __webpack_require__(1334)
    }),
    __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_5__common_services_alert_alert_service__["a" /* AlertService */], __WEBPACK_IMPORTED_MODULE_3__common_repositories__["a" /* MasterRepo */], __WEBPACK_IMPORTED_MODULE_4__common_Transaction_Components_transaction_service__["a" /* TransactionService */]])
], VoucherPosting);



/***/ }),

/***/ 1262:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__common_services_permission_authService_service__ = __webpack_require__(17);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__pages_menu__ = __webpack_require__(215);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__common_repositories_masterRepo_service__ = __webpack_require__(8);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__common_services_spinner_spinner_service__ = __webpack_require__(20);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__common_services_alert_alert_service__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__common_Transaction_Components_transaction_service__ = __webpack_require__(7);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__angular_forms__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8_xlsx__ = __webpack_require__(563);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8_xlsx___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_8_xlsx__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9_file_saver__ = __webpack_require__(561);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9_file_saver___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_9_file_saver__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__common_popupLists_generic_grid_generic_popup_grid_component__ = __webpack_require__(35);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return VoucherRenumberingComponent; });











var EXCEL_EXTENSION = '.xlsx';
var EXCEL_TYPE = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8';
var VoucherRenumberingComponent = (function () {
    function VoucherRenumberingComponent(masterService, spinnerService, alertSerivces, _transactionService, fb, authService, loadingService, _authService) {
        this.masterService = masterService;
        this.spinnerService = spinnerService;
        this.alertSerivces = alertSerivces;
        this._transactionService = _transactionService;
        this.fb = fb;
        this.authService = authService;
        this.loadingService = loadingService;
        this._authService = _authService;
        this.renumberingObj = {};
        this.voucherLists = [];
        // accoutingVouchersList =
        // [{name:"Journal Voucher"},{name:"Contra Voucher"},{name:"Payment Voucher"},{name:"Receipt Voucher"},{name:"Debit Note -AC Base"},{name:"Credit Note - AC Base"},{name:"Bill Tracking Amendment"},{name:"Additional Cost"},{name:"Capital Purchase Voucher"},{name:"Payment Collection"}];
        //
        this.accoutMenus = [];
        this.userProfile = {};
        this.PhiscalObj = {};
        this.voucherType = '';
        this.isLoader = true;
        this.currentPage = 1;
        this.itemsPerPage = 10;
        this.offset = 0;
        this.gridVoucherSeriesListPopupSettings = new __WEBPACK_IMPORTED_MODULE_10__common_popupLists_generic_grid_generic_popup_grid_component__["b" /* GenericPopUpSettings */]();
        this.userProfile = authService.getUserProfile();
        this.PhiscalObj = authService.getPhiscalInfo();
        this.userSetting = this._authService.getSetting();
    }
    VoucherRenumberingComponent.prototype.ngOnInit = function () {
        this.form = this.fb.group({
            // FROMDATE: [''],
            // TODATE: [''],
            VOUCHERTYPE: [''],
            // FORM: [''],
            VOUCHERPREFIX: [''],
            DIVISION: [''],
            PHISCALID: [''],
        });
        this.form.patchValue({
            // DIVISION :  this.PhiscalObj.Div,
            PHISCALID: this.PhiscalObj.PhiscalID
        });
        // ////console.log("CheckMenu",this.userProfile.menuRights.menu)
        //console.log(PAGES_MENU,"pagessss")
        var aa = __WEBPACK_IMPORTED_MODULE_1__pages_menu__["a" /* PAGES_MENU */].filter(function (x) { return x.path == "pages"; })[0];
        //    ////console.log("aa",aa);
        var aaa = aa.children.filter(function (x) { return x.path == "account"; })[0];
        //    ////console.log("aaa",aaa);
        //    let aaaa=aaa.children.filter(x=>x.path=="acvouchers")[0];
        //    ////console.log("aaaa",aaaa);
        //    this.accoutMenus=aaaa.children;
        //    ////console.log("aaaaa",aaaa.children);
        // for(let a of PAGES_MENU)
        // {
        //     this.list1 = a;
        // }
        // this.list2 = this.list1.children;
        // //console.log(this.list2,"lsit2")
        // this.list3 = this.list2[1];
        // //console.log(this.list3,"list3")
    };
    VoucherRenumberingComponent.prototype.onSearch = function () {
        var _this = this;
        if (this.userSetting.ENABLEVOUCHERSERIES == 0) {
            this.form.patchValue({
                VOUCHERTYPE: this.form.controls['VOUCHERPREFIX'].value
            });
        }
        else if (this.userSetting.ENABLEVOUCHERSERIES == 1 && this.form.controls['VOUCHERTYPE'].value == '') {
            this.alertSerivces.error('Please Select Voucher Series.');
            return;
        }
        this.loadingService.show("Searching...");
        this.form.patchValue({
            DIVISION: this.PhiscalObj.Div,
        });
        //console.log("CheckVlaue",this.form.value)
        var searchObj = Object.assign(this.renumberingObj, this.form.value);
        this.masterService.getPhiscalRangeValue(searchObj).subscribe(function (x) {
            if (x) {
                x.result.forEach(function (data) {
                    var trnDateObj = new Date(data.TRNDATE);
                    data.NETAMNT = Number(data.NETAMNT).toFixed(2);
                    // Format the Date object into a more readable format
                    data.TRNDATE = trnDateObj.toLocaleDateString();
                });
                _this.voucherLists = x.result;
                _this.loadingService.hide();
            }
        });
    };
    VoucherRenumberingComponent.prototype.onSelectVoucherPrefix = function () {
    };
    VoucherRenumberingComponent.prototype.SaveRenum = function () {
        if (confirm("Are you sure you want to changes all the listed below Vouchers? It cannot revert once accepted.")) {
            this.SaveConfirm();
        }
    };
    VoucherRenumberingComponent.prototype.SaveConfirm = function () {
        var _this = this;
        // ket bodyData = {data:this.}
        // this.masterService.saveRenumering()
        if (!this.voucherLists) {
            this.alertSerivces.warning("Please load the renumering list first!");
        }
        // this.renumberingObj.VList = this.voucherLists;
        // //console.log("CheckeVoucherList",this.voucherLists)
        this.renumberingObj.DIVISION = this.PhiscalObj.Div;
        // this.renumberingObj.PHISCALID = this.PhiscalObj.PhiscalID;
        this.renumberingObj.VOUCHERPREFIX = this.form.controls['VOUCHERPREFIX'].value;
        this.renumberingObj.VOUCHERTYPE = this.form.controls['VOUCHERTYPE'].value;
        var bodyData = this.renumberingObj;
        this.loadingService.show('saving data please wait...');
        this.masterService.saveRenumering(bodyData).subscribe(function (x) {
            if (x.status == "ok") {
                _this.alertSerivces.info("Voucher Renumering saved successfully!");
                _this.voucherLists = [];
                _this.renumberingObj.VList = [];
                // this.renumberingObj.FORM = '';
                // this.renumberingObj.TODATE = '';
                // this.renumberingObj.FROMDATE = '';
                _this.loadingService.hide();
            }
            else {
                _this.loadingService.hide();
                _this.alertSerivces.error(x.result);
            }
        }, function (error) {
            _this.alertSerivces.error("Error in savin data. Please try again!");
        });
    };
    /**
     * to export renumbering voucher to excel
     */
    VoucherRenumberingComponent.prototype.exportTOExcel = function (dataList, excelFileName) {
        var newArray = [];
        dataList.forEach(function (data) {
            newArray.push({
                OLD_VOUCHERNO: data.old_vchrno,
                NEW_VOUCHERNO: data.new_vchrno,
                ENTRY_DATE: data.TRNDATE,
                ENTRY_DATEBS: data.BSDATE,
                NETAMNT: data.NETAMNT,
                TRNMODE: data.TRNMODE,
                FISCALYEAR: data.PhiscalID
            });
        });
        var exportArray = Object.assign([], newArray);
        //     Object.keys(newArray).forEach((key: any)=>{
        //       delete newArray[key].ACCOUNTGROUP_ID;
        //       delete newArray[key].ACID;
        //       delete newArray[key].CCID;
        //       delete newArray[key].COSTCENTER_CATEGORYID;
        //   })
        // this.downloadFile(this.listOfData, 'transaction')
        var ws = __WEBPACK_IMPORTED_MODULE_8_xlsx__["utils"].json_to_sheet(exportArray);
        var wb = __WEBPACK_IMPORTED_MODULE_8_xlsx__["utils"].book_new();
        __WEBPACK_IMPORTED_MODULE_8_xlsx__["utils"].book_append_sheet(wb, ws, "ABC");
        excelFileName += '.xlsx';
        /* save to file */
        var excelBuffer = __WEBPACK_IMPORTED_MODULE_8_xlsx__["write"](wb, { bookType: 'xlsx', type: 'buffer' });
        this.saveAsExcelFile(excelBuffer, excelFileName);
    };
    VoucherRenumberingComponent.prototype.saveAsExcelFile = function (buffer, fileName) {
        var data = new Blob([buffer], { type: EXCEL_TYPE });
        __WEBPACK_IMPORTED_MODULE_9_file_saver__["saveAs"](data, fileName + EXCEL_EXTENSION);
    };
    VoucherRenumberingComponent.prototype.showVoucherSeriesList = function () {
        this.gridVoucherSeriesListPopupSettings = {
            title: "Voucher Series",
            apiEndpoints: "/getAllVoucherSeries",
            defaultFilterIndex: 0,
            columns: [
                {
                    key: "VOUCHER_ID",
                    title: "Voucher ID",
                    hidden: false,
                    noSearch: false
                },
                {
                    key: "VSERIES_NAME",
                    title: "Voucher Name",
                    hidden: false,
                    noSearch: false
                }
            ]
        };
        this.genericGridVoucherSeriesList.show();
    };
    VoucherRenumberingComponent.prototype.onSelectVoucherSeries = function (voucherType) {
        this.voucherType = voucherType.VOUCHER_ID;
        this.form.patchValue({
            VOUCHERTYPE: this.voucherType
        });
    };
    VoucherRenumberingComponent.prototype.VoucherPagination = function (event) {
        this.currentPage = event;
        var t = this;
        window.scrollTo({ top: 0, behavior: 'smooth' });
    };
    return VoucherRenumberingComponent;
}());
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__angular_core__["ViewChild"])("genericGridVoucherSeriesList"),
    __metadata("design:type", __WEBPACK_IMPORTED_MODULE_10__common_popupLists_generic_grid_generic_popup_grid_component__["c" /* GenericPopUpComponent */])
], VoucherRenumberingComponent.prototype, "genericGridVoucherSeriesList", void 0);
VoucherRenumberingComponent = __decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__angular_core__["Component"])({
        selector: 'voucher-renumbering',
        template: __webpack_require__(1336),
        styles: [__webpack_require__(9), __webpack_require__(1335)]
    }),
    __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_3__common_repositories_masterRepo_service__["a" /* MasterRepo */],
        __WEBPACK_IMPORTED_MODULE_4__common_services_spinner_spinner_service__["a" /* SpinnerService */],
        __WEBPACK_IMPORTED_MODULE_5__common_services_alert_alert_service__["a" /* AlertService */],
        __WEBPACK_IMPORTED_MODULE_6__common_Transaction_Components_transaction_service__["a" /* TransactionService */],
        __WEBPACK_IMPORTED_MODULE_7__angular_forms__["FormBuilder"],
        __WEBPACK_IMPORTED_MODULE_0__common_services_permission_authService_service__["a" /* AuthService */],
        __WEBPACK_IMPORTED_MODULE_4__common_services_spinner_spinner_service__["a" /* SpinnerService */],
        __WEBPACK_IMPORTED_MODULE_0__common_services_permission_authService_service__["a" /* AuthService */]])
], VoucherRenumberingComponent);



/***/ }),

/***/ 1264:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__common_Transaction_Components_transaction_service__ = __webpack_require__(7);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__modaldialogs_messageDialog_messageDialog_component__ = __webpack_require__(55);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_rxjs_BehaviorSubject__ = __webpack_require__(30);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_rxjs_BehaviorSubject___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_rxjs_BehaviorSubject__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__angular_material__ = __webpack_require__(16);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__common_repositories_masterRepo_service__ = __webpack_require__(8);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__addtionalCost_service__ = __webpack_require__(43);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__common_interfaces_TrnMain__ = __webpack_require__(25);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__angular_forms__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__common_popupLists_generic_grid_generic_popup_grid_component__ = __webpack_require__(35);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__common_services__ = __webpack_require__(21);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__common_services_spinner_spinner_service__ = __webpack_require__(20);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12__common_services_alert_alert_service__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13__angular_router__ = __webpack_require__(6);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return MasterAdditionalComponent; });














var MasterAdditionalComponent = (function () {
    function MasterAdditionalComponent(additionalcostService, fb, masterService, dialog, _trnMainService, setting, loadingService, alertService, route) {
        this.additionalcostService = additionalcostService;
        this.fb = fb;
        this.masterService = masterService;
        this.dialog = dialog;
        this._trnMainService = _trnMainService;
        this.setting = setting;
        this.loadingService = loadingService;
        this.alertService = alertService;
        this.route = route;
        this.modeTitle = 'Additional Cost';
        this.dialogMessageSubject = new __WEBPACK_IMPORTED_MODULE_2_rxjs_BehaviorSubject__["BehaviorSubject"]('');
        this.dialogMessage$ = this.dialogMessageSubject.asObservable();
        this.items = [];
        this.activeIndexSubject = new __WEBPACK_IMPORTED_MODULE_2_rxjs_BehaviorSubject__["BehaviorSubject"](0);
        this.activeIndex$ = this.activeIndexSubject.asObservable();
        this.gridPopupSettingsForRefBill = new __WEBPACK_IMPORTED_MODULE_9__common_popupLists_generic_grid_generic_popup_grid_component__["b" /* GenericPopUpSettings */]();
        this.voucherType = __WEBPACK_IMPORTED_MODULE_7__common_interfaces_TrnMain__["a" /* VoucherTypeEnum */].AdditionalCost;
        this.prefix = {};
        this.TrnMainObj = additionalcostService.TrnMainObj;
        this._trnMainService.TrnMainObj.VoucherType = 66;
        // this._trnMainService.pageHeading = "Additoinal Cost";
        // this._trnMainService.TrnMainObj.VoucherPrefix = "AD";
        // this.TrnMainObj.VoucherPrefix = "AD";
        // this._trnMainService.initialFormLoad(66);
        this.form = fb.group({
            VCHRNO: ['', [__WEBPACK_IMPORTED_MODULE_8__angular_forms__["Validators"].required]],
            DIVISION: ['', [__WEBPACK_IMPORTED_MODULE_8__angular_forms__["Validators"].required]],
            // PIVchr:['',[Validators.required]],
            TRNDATE: ['', [__WEBPACK_IMPORTED_MODULE_8__angular_forms__["Validators"].required]],
            BSDATE: ['', [__WEBPACK_IMPORTED_MODULE_8__angular_forms__["Validators"].required]],
            AdditionalPurchaseAc: [''],
            CHALANNO: [''],
        });
        this.additionalCost = 99;
    }
    MasterAdditionalComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.route.queryParams.subscribe(function (params) {
            if (params['mode'] == "DRILL") {
                var VCHR = params['voucher'];
                var vparams = [];
                vparams = VCHR.split('-');
                var data = {
                    VCHRNO: VCHR,
                    DIVISION: vparams[1]
                };
                _this.loadingService.show("Loading Invoice");
                _this.additionalcostService.loadAdditionalCost(data);
                _this.additionalcostService.ObservableReturnData.subscribe(function (x) {
                    _this._trnMainService.TrnMainObj = _this.masterService.loadedTrnmain;
                    _this._trnMainService.TrnMainObj.Mode = "VIEW";
                    //Dbl check if trnmain vchrno missing -- sometimes date will not show on Edit or View
                    _this.loadVoucher(x.TrnMainObj);
                });
                // this.masterService.LoadTransaction(VCHR, vparams[1], vparams[2]).subscribe((res) => {
                //   if (res.status == "ok") {
                //     this.loadingService.hide()
                //     this._trnMainService.TrnMainObj = res.result;
                //     this._trnMainService.TrnMainObj.VoucherType = 3;
                //     this._trnMainService.pageHeading = "Additional Cost";
                //     this._trnMainService.TrnMainObj.VoucherPrefix = "AD";
                //     this._trnMainService.TrnMainObj.Mode = "VIEW";
                //   }
                // }, err => {
                //   this.loadingService.hide()
                //   this.alertService.error(err)
                // })
            }
            else if (params['mode'] == "fromLatepost") {
                // alert("params['mode']==additional cost")
                _this.loadingService.show("Loading Invoice");
                var data = {
                    VCHRNO: params.voucher,
                    DIVISION: params.DIVISION,
                    PHISCALID: params.PHISCALID
                };
                _this.additionalcostService.loadAdditionalCost(data);
                _this.additionalcostService.ObservableReturnData.subscribe(function (x) {
                    _this._trnMainService.TrnMainObj = _this.masterService.loadedTrnmain;
                    _this._trnMainService.TrnMainObj.Mode = "VIEW";
                    //Dbl check if trnmain vchrno missing -- sometimes date will not show on Edit or View
                    _this.loadVoucher(x.TrnMainObj);
                });
            }
            else {
                _this.items = [
                    {},
                    { label: 'Additional Cost Details', icon: 'fa-support', id: 'addcost', command: function (event) { _this.activeItem = event.item; } },
                    { label: 'Costing Detail', icon: 'fa-book', id: 'detailcosting', command: function (event) { _this.activeItem = event.item; } },
                ];
                _this.activeItem = _this.items[0];
                // ////console.log("ROUTERERERERER", this.activeItem)
                _this.menuItems = [
                    // { label: 'Purchase Details', menuName: 'purchasedetail', icon: 'fa-bar-chart' },
                    { label: 'Additional Cost Details', menuName: 'adddetail' },
                    { label: 'Costing Detail', menuName: 'costingdetail' }
                ];
                _this.masterService.ShowMore = true;
                _this.masterService.focusAnyControl("REFPINO_AD");
                _this.additionalcostService.IMPORTDETAILS.prodList = [];
            }
        });
    };
    MasterAdditionalComponent.prototype.ngAfterViewInit = function () {
        this.addRow();
    };
    MasterAdditionalComponent.prototype.loadPi = function (Vchrno, Division) {
        this.additionalcostService.loadPurchase(Vchrno, Division, null);
    };
    MasterAdditionalComponent.prototype.onSave = function () {
        //alert("MasterSave!!!");
        this.dialogMessageSubject.next("Saving Data please wait...!");
        var dialogRef = this.dialog.open(__WEBPACK_IMPORTED_MODULE_1__modaldialogs_messageDialog_messageDialog_component__["a" /* MessageDialog */], { hasBackdrop: true, data: { header: 'Information', message: this.dialogMessage$ } });
        try {
            this.additionalcostService.saveAdditionalCost();
        }
        catch (ex) {
            this.dialogMessageSubject.next(ex);
            setTimeout(function () {
                dialogRef.close();
            }, 3000);
            //  alert(ex);
            //  //console.log(ex);
        }
    };
    MasterAdditionalComponent.prototype.cancel = function () {
    };
    MasterAdditionalComponent.prototype.costingDetailClickEvent = function () {
        this.additionalcostService.generateCostDetails();
    };
    MasterAdditionalComponent.prototype.getAdditionalCost = function (value) {
        var _this = this;
        this.loadingService.show("please wait. Getting purchase invoice data..");
        //  this.additionalCostService.loadPurchase(value,this.form.value.DIVISION.INITIAL,this.phiscalid)
        var VCHR = value.VCHRNO;
        var division = value.DIVISION;
        var phiscalid = this.masterService.PhiscalObj.PhiscalID;
        // ////console.log("vchr,Div,Phis", VCHR, division, phiscalid,this.masterService.PhiscalObj.phiscalID,this.masterService.userProfile);
        // this._trnMainService.trnmainBehavior= new BehaviorSubject(<TrnMain>{});
        //   this._trnMainService.loadData(VCHR, division, phiscalid);
        this.masterService.LoadTransaction(VCHR, division, phiscalid).subscribe(function (data) {
            if (data) {
                try {
                    _this.additionalcostService.costList = [];
                    _this.additionalcostService.costdetail = [];
                    _this.additionalcostService.addtionalCostList = [];
                    _this.additionalcostService.addCostTotAmount = 0;
                    var result = data.result.ProdList.filter(function (elem1, i) { return data.result.ProdList.some(function (elem2, j) { return (elem2.MCODE === elem1.MCODE)
                        && (elem2.BATCHID == elem1.BATCHID) && j !== i; }); });
                    //console.log("@@PI__result:", result);
                    var acs1_1 = { mcode: "", menucode: "", desca: "", unit: "",
                        quantity: 0, rate: 0, amount: 0, nAmount: 0, batch: "",
                        batchid: "", prate: 0 };
                    if (result.length > 0) {
                        result.forEach(function (element) {
                            acs1_1.mcode = element.MCODE,
                                acs1_1.menucode = element.MENUCODE,
                                acs1_1.desca = element.ITEMDESC,
                                acs1_1.unit = element.UNIT,
                                acs1_1.batch = element.BATCH,
                                acs1_1.rate = element.RATE,
                                acs1_1.quantity = element.REALQTY_IN + acs1_1.quantity,
                                acs1_1.amount = element.AMOUNT + acs1_1.amount,
                                acs1_1.nAmount = element.NETAMOUNT + acs1_1.nAmount,
                                acs1_1.batchid = element.BATCHID,
                                acs1_1.prate = element.PRATE;
                        });
                        _this.additionalcostService.addtionalCostList.push(acs1_1);
                        var result2 = data.result.ProdList.filter(function (elem1, i) { return result.some(function (elem2, j) { return (elem2.MCODE != elem1.MCODE || elem2.BATCHID != elem1.BATCHID) && j !== i; }); });
                        if (result2.length > 0) {
                            //console.log("@@mcodediff_ac2",result2)
                            for (var _i = 0, result2_1 = result2; _i < result2_1.length; _i++) {
                                var i = result2_1[_i];
                                var acs = {
                                    mcode: i.MCODE, menucode: i.MENUCODE, desca: i.ITEMDESC, unit: i.UNIT,
                                    quantity: i.REALQTY_IN,
                                    rate: i.RATE,
                                    amount: i.AMOUNT,
                                    nAmount: i.NETAMOUNT, batch: i.BATCH, batchid: i.BATCHID,
                                    prate: i.PRATE
                                };
                                _this.additionalcostService.addtionalCostList.push(acs);
                            }
                        }
                    }
                    if (_this.additionalcostService.addtionalCostList.length == 0) {
                        //console.log("@@ac2")
                        for (var _a = 0, _b = data.result.ProdList; _a < _b.length; _a++) {
                            var i = _b[_a];
                            var acs = {
                                mcode: i.MCODE, menucode: i.MENUCODE, desca: i.ITEMDESC, unit: i.UNIT,
                                quantity: i.REALQTY_IN,
                                // rate: i.RATE,
                                //  amount: i.AMOUNT, 
                                rate: i.CRATE ? i.CRATE : i.RATE,
                                amount: i.CRATE ? i.CRATE * i.REALQTY_IN : i.AMOUNT,
                                nAmount: i.NETAMOUNT, batch: i.BATCH, batchid: i.BATCHID,
                                prate: i.PRATE
                            };
                            _this.additionalcostService.addtionalCostList.push(acs);
                        }
                    }
                    _this.masterService.batch = data.result.ProdList && data.result.ProdList.length > 0 && data.result.ProdList[0].BATCH;
                    //total amount
                    _this.additionalcostService.loadedTrnmain = data.result;
                    //console.log("additionalCstService", this.additionalcostService.loadedTrnmain)
                    _this.loadingService.hide();
                }
                catch (ex) { }
            }
            else {
                alert("Cannot Get Data from Bill no.");
            }
            //console.log({ trnMAIN00000000000000: this._trnMainService.TrnMainObj });
        });
    };
    MasterAdditionalComponent.prototype.calculatecosting = function () {
        this.additionalcostService.generateCostDetails();
    };
    MasterAdditionalComponent.prototype.TabRefBill = function () {
        //    this.genericGridRefBill.show();
        // this.gridACListPartyPopupSettings = {
        //     title: "Accounts",
        //     apiEndpoints: `/getAccountPagedListByMapId/Master/${'SinglePayment_Party'}/`,
        //     defaultFilterIndex: 1,
        //     columns: [
        //       {
        //         key: "ACCODE",
        //         title: "AC CODE",
        //         hidden: false,
        //         noSearch: false
        //       },
        //       {
        //         key: "ACNAME",
        //         title: "A/C NAME",
        //         hidden: false,
        //         noSearch: false
        //       }
        //     ]
        //   };
        //console.log("@@PURCHASE_TYPE",this.masterService.RefObj.PURCHASE_TYPE,this._trnMainService.userSetting.ENABLELOCALPURCHASE)
        if (this._trnMainService.userSetting.ENABLELOCALPURCHASE == 0) {
            this.masterService.RefObj.PURCHASE_TYPE = 'ALL';
        }
        else {
            if (this._trnMainService.userSetting.ENABLELOCALPURCHASE == 1 && !this.masterService.RefObj.PURCHASE_TYPE) {
                this.masterService.RefObj.PURCHASE_TYPE = 'ALL';
            }
        }
        this.gridPopupSettingsForRefBill = this.masterService.getGenericGridPopUpSettingsForAdditionalCost("AdditionalCost", this.masterService.RefObj.PURCHASE_TYPE);
        this.genericGridRefBill.show();
    };
    MasterAdditionalComponent.prototype.prefixChanged = function (pref) {
        var _this = this;
        try {
            this._trnMainService.prefix = pref;
            this.prefix = pref;
            if (this.TrnMainObj.Mode == "NEW") {
                if (this.TrnMainObj.DIVISION == "" ||
                    this.TrnMainObj.DIVISION == null) {
                    this.TrnMainObj.DIVISION = this.setting.appSetting.DefaultDivision;
                }
                this.masterService.getVoucherNo(this.TrnMainObj).subscribe(function (res) {
                    if (res.status == "ok") {
                        var TMain = res.result;
                        _this.TrnMainObj.VCHRNO = TMain.VCHRNO.substr(2, TMain.VCHRNO.length - 2);
                        _this.TrnMainObj.CHALANNO = TMain.CHALANNO;
                    }
                    else {
                        alert("Failed to retrieve VoucherNo");
                    }
                });
            }
        }
        catch (ex) {
        }
    };
    MasterAdditionalComponent.prototype.onRefBillSelected = function (value) {
        this.masterService.AdditionalPurchaseAcObj = '';
        this.masterService.AdditionalPurchaseCreditAcObj = '';
        this.masterService.mcode = '';
        this.masterService.desca = '';
        this.masterService.batch = '';
        this.masterService.batchid = '';
        this.masterService.RefObj.Refno = value.VCHRNO;
        this.masterService.RefObj.disable = true;
        this._trnMainService.TrnMainObj.REFBILL = value.VCHRNO;
        this.masterService.RefObj.InvoiceNo = value.REFBILL;
        this.masterService.RefObj.SupplierName = value.ACNAME;
        this._trnMainService.TrnMainObj.PARAC = value.PARAC;
        this.getAdditionalCost(value);
        this.masterService.focusAnyControl("_AdditioanlCostRate" + 0);
    };
    MasterAdditionalComponent.prototype.loadVoucher = function (selectedItem) {
        this._trnMainService.loadData(selectedItem.VCHRNO, selectedItem.DIVISION, selectedItem.PhiscalID);
        this._trnMainService.showPerformaApproveReject = false;
        if (this._trnMainService.TrnMainObj.gstInfoOfAccount == null) {
            this._trnMainService.TrnMainObj.gstInfoOfAccount = {};
        }
        this._trnMainService.TrnMainObj.gstInfoOfAccount.TRNTYPE = selectedItem.PSTYPE;
        // this.vouchernois = selectedItem.VCHRNO;
        // this.division = selectedItem.DIVISION;
        // this.phiscalid = selectedItem.PhiscalID;
    };
    MasterAdditionalComponent.prototype.ImportDetailsClick = function () {
    };
    MasterAdditionalComponent.prototype.addRow = function () {
        try {
            var newRow = {};
            newRow.ITEMNAME = '';
            newRow.NETAMOUNT = 0;
            newRow.NONTAXABLE = 0;
            newRow.QUANTITY = 0;
            newRow.TAXABLE = 0;
            newRow.VAT = 0;
            //console.log("add row",newRow);
            this.additionalcostService.IMPORTDETAILS.prodList && this.additionalcostService.IMPORTDETAILS.prodList.push(newRow);
        }
        catch (ex) {
            //console.log(ex);
            alert(ex);
        }
    };
    MasterAdditionalComponent.prototype.keyPress = function (event) {
        if (event.key != "Enter" && event.key != "Tab") {
            event.preventDefault();
        }
    };
    return MasterAdditionalComponent;
}());
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_5__angular_core__["ViewChild"])("genericGridRefBill"),
    __metadata("design:type", __WEBPACK_IMPORTED_MODULE_9__common_popupLists_generic_grid_generic_popup_grid_component__["c" /* GenericPopUpComponent */])
], MasterAdditionalComponent.prototype, "genericGridRefBill", void 0);
MasterAdditionalComponent = __decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_5__angular_core__["Component"])({
        selector: 'additional-cost',
        template: __webpack_require__(1340),
        styles: [__webpack_require__(120), __webpack_require__(9), __webpack_require__(554)],
        providers: [__WEBPACK_IMPORTED_MODULE_6__addtionalCost_service__["a" /* AdditionalCostService */]]
    }),
    __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_6__addtionalCost_service__["a" /* AdditionalCostService */], __WEBPACK_IMPORTED_MODULE_8__angular_forms__["FormBuilder"],
        __WEBPACK_IMPORTED_MODULE_4__common_repositories_masterRepo_service__["a" /* MasterRepo */], __WEBPACK_IMPORTED_MODULE_3__angular_material__["a" /* MdDialog */], __WEBPACK_IMPORTED_MODULE_0__common_Transaction_Components_transaction_service__["a" /* TransactionService */],
        __WEBPACK_IMPORTED_MODULE_10__common_services__["c" /* SettingService */], __WEBPACK_IMPORTED_MODULE_11__common_services_spinner_spinner_service__["a" /* SpinnerService */], __WEBPACK_IMPORTED_MODULE_12__common_services_alert_alert_service__["a" /* AlertService */], __WEBPACK_IMPORTED_MODULE_13__angular_router__["ActivatedRoute"]])
], MasterAdditionalComponent);



/***/ }),

/***/ 1265:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__common_Transaction_Components_transaction_service__ = __webpack_require__(7);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__modaldialogs_messageDialog_messageDialog_component__ = __webpack_require__(55);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_rxjs_BehaviorSubject__ = __webpack_require__(30);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_rxjs_BehaviorSubject___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_rxjs_BehaviorSubject__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__angular_material__ = __webpack_require__(16);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__common_repositories_masterRepo_service__ = __webpack_require__(8);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__common_interfaces_TrnMain__ = __webpack_require__(25);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__angular_forms__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__common_popupLists_generic_grid_generic_popup_grid_component__ = __webpack_require__(35);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__common_services__ = __webpack_require__(21);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__common_services_spinner_spinner_service__ = __webpack_require__(20);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__common_services_alert_alert_service__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12__angular_router__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13__AdditionalCost_addtionalCost_service__ = __webpack_require__(43);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_14_lodash__ = __webpack_require__(36);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_14_lodash___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_14_lodash__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return MasterNewAdditionalComponent; });






// import { AdditionalCostService, prodCost } from "./addtionalCost.service";









var MasterNewAdditionalComponent = (function () {
    function MasterNewAdditionalComponent(additionalcostService, fb, masterService, dialog, _trnMainService, setting, loadingService, alertService, route) {
        this.additionalcostService = additionalcostService;
        this.fb = fb;
        this.masterService = masterService;
        this.dialog = dialog;
        this._trnMainService = _trnMainService;
        this.setting = setting;
        this.loadingService = loadingService;
        this.alertService = alertService;
        this.route = route;
        this.modeTitle = 'Additional Cost';
        this.dialogMessageSubject = new __WEBPACK_IMPORTED_MODULE_2_rxjs_BehaviorSubject__["BehaviorSubject"]('');
        this.dialogMessage$ = this.dialogMessageSubject.asObservable();
        this.items = [];
        this.activeIndexSubject = new __WEBPACK_IMPORTED_MODULE_2_rxjs_BehaviorSubject__["BehaviorSubject"](0);
        this.activeIndex$ = this.activeIndexSubject.asObservable();
        this.gridPopupSettingsForRefBill = new __WEBPACK_IMPORTED_MODULE_8__common_popupLists_generic_grid_generic_popup_grid_component__["b" /* GenericPopUpSettings */]();
        this.voucherType = __WEBPACK_IMPORTED_MODULE_6__common_interfaces_TrnMain__["a" /* VoucherTypeEnum */].AdditionalCost;
        this.isDragging = false;
        this.prefix = {};
        this.TrnMainObj = additionalcostService.TrnMainObj;
        this._trnMainService.TrnMainObj.VoucherType = 66;
        // this._trnMainService.pageHeading = "Additoinal Cost";
        // this._trnMainService.TrnMainObj.VoucherPrefix = "AD";
        // this.TrnMainObj.VoucherPrefix = "AD";
        // this._trnMainService.initialFormLoad(66);
        this.form = fb.group({
            VCHRNO: ['', [__WEBPACK_IMPORTED_MODULE_7__angular_forms__["Validators"].required]],
            DIVISION: ['', [__WEBPACK_IMPORTED_MODULE_7__angular_forms__["Validators"].required]],
            // PIVchr:['',[Validators.required]],
            TRNDATE: ['', [__WEBPACK_IMPORTED_MODULE_7__angular_forms__["Validators"].required]],
            BSDATE: ['', [__WEBPACK_IMPORTED_MODULE_7__angular_forms__["Validators"].required]],
            AdditionalPurchaseAc: [''],
            CHALANNO: [''],
            INDDATA: ['']
        });
        this.additionalCost = 99;
    }
    MasterNewAdditionalComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.route.queryParams.subscribe(function (params) {
            if (params['mode'] == "DRILL") {
                var VCHR = params['voucher'];
                var vparams = [];
                vparams = VCHR.split('-');
                var data = {
                    VCHRNO: VCHR,
                    DIVISION: vparams[1]
                };
                _this.loadingService.show("Loading Invoice");
                _this.additionalcostService.loadAdditionalCost(data);
                _this.additionalcostService.ObservableReturnData.subscribe(function (x) {
                    _this._trnMainService.TrnMainObj = _this.masterService.loadedTrnmain;
                    _this._trnMainService.TrnMainObj.Mode = "VIEW";
                    //Dbl check if trnmain vchrno missing -- sometimes date will not show on Edit or View
                    _this.loadVoucher(x.TrnMainObj);
                });
                // this.masterService.LoadTransaction(VCHR, vparams[1], vparams[2]).subscribe((res) => {
                //   if (res.status == "ok") {
                //     this.loadingService.hide()
                //     this._trnMainService.TrnMainObj = res.result;
                //     this._trnMainService.TrnMainObj.VoucherType = 3;
                //     this._trnMainService.pageHeading = "Additional Cost";
                //     this._trnMainService.TrnMainObj.VoucherPrefix = "AD";
                //     this._trnMainService.TrnMainObj.Mode = "VIEW";
                //   }
                // }, err => {
                //   this.loadingService.hide()
                //   this.alertService.error(err)
                // })
            }
            else if (params['mode'] == "fromLatepost") {
                // alert("params['mode']==additional cost")
                _this.loadingService.show("Loading Invoice");
                var data = {
                    VCHRNO: params.voucher,
                    DIVISION: params.DIVISION,
                    PHISCALID: params.PHISCALID
                };
                _this.additionalcostService.loadAdditionalCost(data);
                _this.additionalcostService.ObservableReturnData.subscribe(function (x) {
                    _this._trnMainService.TrnMainObj = _this.masterService.loadedTrnmain;
                    _this._trnMainService.TrnMainObj.Mode = "VIEW";
                    //Dbl check if trnmain vchrno missing -- sometimes date will not show on Edit or View
                    _this.loadVoucher(x.TrnMainObj);
                });
            }
            else {
                _this.items = [
                    {},
                    { label: 'Additional Cost Details', icon: 'fa-support', id: 'addcost', command: function (event) { _this.activeItem = event.item; } },
                    { label: 'Costing Detail', icon: 'fa-book', id: 'detailcosting', command: function (event) { _this.activeItem = event.item; } },
                ];
                _this.activeItem = _this.items[0];
                // ////console.log("ROUTERERERERER", this.activeItem)
                _this.menuItems = [
                    // { label: 'Purchase Details', menuName: 'purchasedetail', icon: 'fa-bar-chart' },
                    { label: 'Additional Cost Details', menuName: 'adddetail' },
                    { label: 'Costing Detail', menuName: 'costingdetail' }
                ];
                _this.masterService.ShowMore = true;
                _this.masterService.focusAnyControl("REFPINO_AD");
                _this.additionalcostService.IMPORTDETAILS.prodList = [];
            }
        });
    };
    MasterNewAdditionalComponent.prototype.ngAfterViewInit = function () {
        this.addRow();
    };
    MasterNewAdditionalComponent.prototype.loadPi = function (Vchrno, Division) {
        this.additionalcostService.loadPurchase(Vchrno, Division, null);
    };
    MasterNewAdditionalComponent.prototype.onSave = function () {
        //alert("MasterSave!!!");
        this.dialogMessageSubject.next("Saving Data please wait...!");
        var dialogRef = this.dialog.open(__WEBPACK_IMPORTED_MODULE_1__modaldialogs_messageDialog_messageDialog_component__["a" /* MessageDialog */], { hasBackdrop: true, data: { header: 'Information', message: this.dialogMessage$ } });
        try {
            this.additionalcostService.saveAdditionalCost();
        }
        catch (ex) {
            this.dialogMessageSubject.next(ex);
            setTimeout(function () {
                dialogRef.close();
            }, 3000);
            //  alert(ex);
            //  //console.log(ex);
        }
    };
    MasterNewAdditionalComponent.prototype.cancel = function () {
    };
    MasterNewAdditionalComponent.prototype.costingDetailClickEvent = function () {
        this.additionalcostService.generateCostDetails();
    };
    MasterNewAdditionalComponent.prototype.getAdditionalCost = function (value) {
        var _this = this;
        this.loadingService.show("please wait. Getting purchase invoice data..");
        //  this.additionalCostService.loadPurchase(value,this.form.value.DIVISION.INITIAL,this.phiscalid)
        var VCHR = value.VCHRNO;
        var division = value.DIVISION;
        var phiscalid = this.masterService.PhiscalObj.PhiscalID;
        // console.log("vchr,Div,Phis", VCHR, division, phiscalid,this.masterService.PhiscalObj.phiscalID,this.masterService.userProfile);
        // this._trnMainService.trnmainBehavior= new BehaviorSubject(<TrnMain>{});
        //   this._trnMainService.loadData(VCHR, division, phiscalid);
        this.masterService.LoadTransaction(VCHR, division, phiscalid).subscribe(function (data) {
            if (data) {
                try {
                    _this.masterService._verifyImportPurchase(data);
                    _this.EmptyAddCost();
                    //console.log("@@data.result.ProdList",data.result.ProdList)
                    // var result = data.result.ProdList.filter((elem1, i) => data.result.ProdList.some((elem2, j) => (elem2.MCODE === elem1.MCODE)
                    //     && (elem2.BATCHID == elem1.BATCHID) && j !== i));
                    var result = data.result.ProdList;
                    //console.log("@@PI__result:", result);
                    var acs1 = {
                        mcode: "", menucode: "", desca: "", unit: "",
                        quantity: 0, rate: 0, amount: 0, nAmount: 0, batch: "", batchid: "", sno: 0, prate: 0
                    };
                    if (result.length > 0) {
                        var result2 = data.result.ProdList.filter(function (elem1, i) { return result.some(function (elem2, j) { return (elem2.MCODE != elem1.MCODE || elem2.BATCHID != elem1.BATCHID) && j !== i; }); });
                        if (result2.length > 0) {
                            //console.log("@@mcodediff_ac2",result2)
                            for (var _i = 0, result2_1 = result2; _i < result2_1.length; _i++) {
                                var i = result2_1[_i];
                                var acs = {
                                    mcode: i.MCODE, menucode: i.MENUCODE, desca: i.ITEMDESC, unit: i.UNIT,
                                    quantity: i.REALQTY_IN,
                                    rate: Number(i.RATE).toFixed(12),
                                    amount: i.PRATE * i.REALQTY_IN,
                                    nAmount: i.NETAMOUNT, batch: i.BATCH, batchid: i.BATCHID, sno: i.SNO, prate: i.PRATE,
                                    grossAmnt: i.AMOUNT
                                };
                                _this.additionalcostService.addtionalCostList.push(acs);
                            }
                        }
                    }
                    if (_this.additionalcostService.addtionalCostList.length == 0) {
                        // console.log("@@ac2",data.result.ProdList)
                        for (var _a = 0, _b = data.result.ProdList; _a < _b.length; _a++) {
                            var i = _b[_a];
                            var acs = {
                                mcode: i.MCODE, menucode: i.MENUCODE, desca: i.ITEMDESC, unit: i.UNIT,
                                quantity: i.REALQTY_IN,
                                rate: (i.RATE).toFixed(12),
                                // amount:  i.AMOUNT,                              
                                amount: i.PRATE * i.REALQTY_IN,
                                nAmount: i.NETAMOUNT, batch: i.BATCH, batchid: i.BATCHID, sno: i.SNO, prate: i.PRATE, grossAmnt: i.AMOUNT
                            };
                            _this.additionalcostService.addtionalCostList.push(acs);
                        }
                    }
                    var sortedArray = __WEBPACK_IMPORTED_MODULE_14_lodash___default.a.sortBy(_this.additionalcostService.addtionalCostList, 'sno');
                    if (sortedArray) {
                        _this.additionalcostService.addtionalCostList = sortedArray;
                    }
                    if (_this.additionalcostService.IndividualCostList.length == 0) {
                        // this.additionalcostService.IndividualCostList=this.additionalcostService.addtionalCostList;
                        // this.additionalcostService.IndividualCostList.forEach(x=>x.indamount=x.amount);
                        // this.masterService.TOTALINDAMOUNT =0;
                        // this.additionalcostService.IndividualCostList.forEach(x => this.masterService.TOTALINDAMOUNT += x.indamount);
                    }
                    _this.masterService.batch = data.result.ProdList && data.result.ProdList.length > 0 && data.result.ProdList[0].BATCH;
                    //total amount
                    if (data.result.CNDN_MODE == 10) {
                        _this.additionalcostService.loadedTrnmain = data.result;
                        _this.additionalcostService.loadedTrnmain.TOTAMNT = data.result.NETAMNT;
                    }
                    else {
                        _this.additionalcostService.loadedTrnmain = data.result;
                    }
                    // this.additionalcostService.loadedTrnmain = data.result;
                    // console.log("additionalCstService", this.additionalcostService.loadedTrnmain)
                    _this.loadingService.hide();
                }
                catch (ex) { }
            }
            else {
                alert("Cannot Get Data from Bill no.");
            }
            //console.log({ trnMAIN00000000000000: this._trnMainService.TrnMainObj });
        });
    };
    MasterNewAdditionalComponent.prototype.onDragOver = function (event) {
        this.isDragging = true;
        // event.preventDefault();
    };
    MasterNewAdditionalComponent.prototype.onDrop = function (event) {
        this.isDragging = false;
        //   event.preventDefault();
    };
    MasterNewAdditionalComponent.prototype.onDragStart = function (event) {
        this.isDragging = true;
        //   event.preventDefault();
    };
    MasterNewAdditionalComponent.prototype.calculatecosting = function () {
        this.additionalcostService.generateCostDetails();
    };
    MasterNewAdditionalComponent.prototype.TabRefBill = function () {
        //    this.genericGridRefBill.show();
        // this.gridACListPartyPopupSettings = {
        //     title: "Accounts",
        //     apiEndpoints: `/getAccountPagedListByMapId/Master/${'SinglePayment_Party'}/`,
        //     defaultFilterIndex: 1,
        //     columns: [
        //       {
        //         key: "ACCODE",
        //         title: "AC CODE",
        //         hidden: false,
        //         noSearch: false
        //       },
        //       {
        //         key: "ACNAME",
        //         title: "A/C NAME",
        //         hidden: false,
        //         noSearch: false
        //       }
        //     ]
        //   };
        //console.log("@@PURCHASE_TYPE",this.masterService.RefObj.PURCHASE_TYPE,this._trnMainService.userSetting.ENABLELOCALPURCHASE)
        // if (this._trnMainService.userSetting.ENABLELOCALPURCHASE == 0) {
        //     this.masterService.RefObj.PURCHASE_TYPE = 'ALL';
        // } else {
        //     if (this._trnMainService.userSetting.ENABLELOCALPURCHASE == 1 && !this.masterService.RefObj.PURCHASE_TYPE) {
        //         this.masterService.RefObj.PURCHASE_TYPE = 'ALL';
        //     }
        // }
        this.gridPopupSettingsForRefBill = this.masterService.getGenericGridPopUpSettingsForAdditionalCost("AdditionalCost", this.masterService.RefObj.PURCHASE_TYPE);
        this.genericGridRefBill.show();
    };
    MasterNewAdditionalComponent.prototype.prefixChanged = function (pref) {
        var _this = this;
        try {
            this._trnMainService.prefix = pref;
            this.prefix = pref;
            if (this.TrnMainObj.Mode == "NEW") {
                if (this.TrnMainObj.DIVISION == "" ||
                    this.TrnMainObj.DIVISION == null) {
                    this.TrnMainObj.DIVISION = this.setting.appSetting.DefaultDivision;
                }
                this.masterService.getVoucherNo(this.TrnMainObj).subscribe(function (res) {
                    if (res.status == "ok") {
                        var TMain = res.result;
                        _this.TrnMainObj.VCHRNO = TMain.VCHRNO.substr(2, TMain.VCHRNO.length - 2);
                        _this.TrnMainObj.CHALANNO = TMain.CHALANNO;
                    }
                    else {
                        alert("Failed to retrieve VoucherNo");
                    }
                });
            }
        }
        catch (ex) {
        }
    };
    MasterNewAdditionalComponent.prototype.onRefBillSelected = function (value) {
        // alert("reached")
        this.masterService.AdditionalPurchaseAcObj = '';
        this.masterService.AdditionalPurchaseCreditAcObj = '';
        this.masterService.mcode = '';
        this.masterService.desca = '';
        this.masterService.batch = '';
        this.masterService.batchid = '';
        this.additionalcostService.GRPcostList = [];
        this.additionalcostService.INDcostList = [];
        this.additionalcostService.costList = [];
        this.masterService.RefObj.Refno = value.VCHRNO;
        this.masterService.RefObj.disable = true;
        this._trnMainService.TrnMainObj.REFBILL = value.VCHRNO;
        this.masterService.RefObj.InvoiceNo = value.REFBILL;
        this.masterService.RefObj.SupplierName = value.ACNAME;
        this._trnMainService.TrnMainObj.PARAC = value.PARAC;
        this._trnMainService.TrnMainObj.COSTCENTER = value.COSTCENTER;
        this.getAdditionalCost(value);
        this.masterService.focusAnyControl("_AdditioanlCostRate" + 0);
        // if(this.masterService.RefObj.PURCHASE_TYPE=="LOCALPURCHASE"){
        //     this.masterService.PIVoucherDetail(value.VCHRNO).subscribe(res => {
        //         if (res.status == "ok") {
        //             if (res.result && res.result.length && res.result.length > 0) {
        //                 this.masterService.pi_costdetaillist=res.result.filter(x=>x.VCHRNO==value.VCHRNO);
        //                 this.masterService.showLoadAllocationbutton=true;
        //                 this.masterService.showCostPopup=true;
        //             }else{
        //                 this.masterService.showLoadAllocationbutton=false;
        //                 this.masterService.showCostPopup=false;
        //             }
        //         }
        //     }, err => {
        //     })
        // }
    };
    MasterNewAdditionalComponent.prototype.loadVoucher = function (selectedItem) {
        this._trnMainService.loadData(selectedItem.VCHRNO, selectedItem.DIVISION, selectedItem.PhiscalID);
        this._trnMainService.showPerformaApproveReject = false;
        if (this._trnMainService.TrnMainObj.gstInfoOfAccount == null) {
            this._trnMainService.TrnMainObj.gstInfoOfAccount = {};
        }
        this._trnMainService.TrnMainObj.gstInfoOfAccount.TRNTYPE = selectedItem.PSTYPE;
        // this.vouchernois = selectedItem.VCHRNO;
        // this.division = selectedItem.DIVISION;
        // this.phiscalid = selectedItem.PhiscalID;
    };
    MasterNewAdditionalComponent.prototype.ImportDetailsClick = function () {
    };
    MasterNewAdditionalComponent.prototype.addRow = function () {
        try {
            var newRow = {};
            newRow.ITEMNAME = '';
            newRow.NETAMOUNT = 0;
            newRow.NONTAXABLE = 0;
            newRow.QUANTITY = 0;
            newRow.TAXABLE = 0;
            newRow.VAT = 0;
            //console.log("add row",newRow);
            this.additionalcostService.IMPORTDETAILS.prodList && this.additionalcostService.IMPORTDETAILS.prodList.push(newRow);
        }
        catch (ex) {
            //console.log(ex);
            alert(ex);
        }
    };
    MasterNewAdditionalComponent.prototype.keyPress = function (event) {
        if (event.key != "Enter" && event.key != "Tab") {
            event.preventDefault();
        }
    };
    MasterNewAdditionalComponent.prototype.EmptyAddCost = function () {
        this.additionalcostService.costList = [];
        this.additionalcostService.costdetail = [];
        this.additionalcostService.addtionalCostList = [];
        this.additionalcostService.IndividualCostList = [];
        this.additionalcostService.addCostTotAmount = 0;
        this.additionalcostService.GRPcostList = [];
        this.additionalcostService.INDcostList = [];
        this.additionalcostService.addINDCostTotAmount = 0;
        this.additionalcostService.addGRPCostTotAmount = 0;
        this.masterService.AdditionalAMOUNT = "";
        this.masterService.AdditionalPurchaseAcObj = '';
        this.masterService.AdditionalPurchaseCreditAcObj = '';
        this.masterService.AdditionalREMARKS = "";
        this.masterService.AdditionalDesc = "";
        this.masterService.AdditionalVAT = 0;
        this.masterService.TDSAmount = 0;
        this.masterService.TDSAccount_ACID = "";
        this.masterService.TDSAccount_Name = "";
        // if (this.masterService.RefObj.PURCHASE_TYPE == 'LOCALPURCHASE') {
        //     this.masterService.DoAccountPosting = 0;
        //     this.masterService.IsTaxableBill = 0;
        // } else {
        // }
        this.masterService.DoAccountPosting = 1;
        this.masterService.IsTaxableBill = 1;
        this.masterService.RefObj.Ref_BILLNO = "";
        this.masterService.RefObj.Ref_TRNDATE = "";
        this.masterService.RefObj.Ref_BSDATE = "";
        this.masterService.RefObj.Ref_SupplierACID = "";
        this.masterService.RefObj.Ref_SupplierName = "";
        this.masterService.RefObj.Ref_SupplierVAT = "";
        this.masterService.showIndividualAmountPopup = false;
        this.additionalcostService.tempIndCostList = [];
        this.masterService.TOTALINDAMOUNT = 0;
        this.masterService.IS_ECA_ITEM = 0;
        this.masterService.AdditionalAMOUNT_2 = "";
        this.masterService.AdditionalPurchaseAcObj_2 = '';
        this.masterService.AdditionalPurchaseCreditAcObj_2 = '';
        this.masterService.AdditionalREMARKS_2 = "";
        this.masterService.AdditionalDesc_2 = "";
        this.masterService.AdditionalVAT_2 = 0;
        this.masterService.TDSAmount_2 = 0;
        this.masterService.TDSAccount_ACID_2 = "";
        this.masterService.TDSAccount_Name_2 = "";
        this.masterService.DoAccountPosting_2 = 1;
        this.masterService.IsTaxableBill_2 = 1;
        this.masterService.RefObj.Ref_BILLNO_2 = "";
        this.masterService.RefObj.Ref_TRNDATE_2 = "";
        this.masterService.RefObj.Ref_BSDATE_2 = "";
        this.masterService.RefObj.Ref_SupplierACID_2 = "";
        this.masterService.RefObj.Ref_SupplierName_2 = "";
        this.masterService.RefObj.Ref_SupplierVAT_2 = "";
        this.masterService.IS_ECA_ITEM_2 = 0;
        this.masterService.AssetsTracking = 0;
        this.masterService.AssetsTracking_2 = 0;
        this.masterService.TDS_SL_ACID = '';
        this.masterService.TDS_SL_ACNAME = '';
        this.masterService.DR_SL_ACID = '';
        this.masterService.DR_SL_ACNAME = '';
        this.masterService.CR_SL_ACID = '';
        this.masterService.CR_SL_ACNAME = '';
        this.masterService.DR_HASSUBLEDGER = 0;
        this.masterService.CR_HASSUBLEDGER = 0;
        this.masterService.TDS_HASSUBLEDGER = 0;
        this.masterService.DR_SL_INDV_ACID = '';
        this.masterService.DR_SL_INDV_ACNAME = '';
        this.masterService.CR_SL_INDV_ACID = '';
        this.masterService.CR_SL_INDV_ACNAME = '';
        this.masterService.TDS_SL_INDV_ACID = '';
        this.masterService.TDS_SL_INDV_ACNAME = '';
        this.masterService.DR_INDV_HASSUBLEDGER = 0;
        this.masterService.CR_INDV_HASSUBLEDGER = 0;
        this.masterService.TDS_INDV_HASSUBLEDGER = 0;
    };
    MasterNewAdditionalComponent.prototype.changePurchaseType = function () {
        this.EmptyAddCost();
        this.masterService.mcode = '';
        this.masterService.desca = '';
        this.masterService.batch = '';
        this.masterService.batchid = '';
        this.masterService.RefObj.Refno = '';
        this._trnMainService.TrnMainObj.REFBILL = '';
        this.masterService.RefObj.InvoiceNo = '';
        this.masterService.RefObj.SupplierName = '';
        this._trnMainService.TrnMainObj.PARAC = '';
        this.masterService.showLoadAllocationbutton = false;
        this.masterService.showCostPopup = false;
        this.masterService.pi_costdetaillist = [];
    };
    return MasterNewAdditionalComponent;
}());
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_5__angular_core__["ViewChild"])("genericGridRefBill"),
    __metadata("design:type", __WEBPACK_IMPORTED_MODULE_8__common_popupLists_generic_grid_generic_popup_grid_component__["c" /* GenericPopUpComponent */])
], MasterNewAdditionalComponent.prototype, "genericGridRefBill", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_5__angular_core__["HostListener"])('dragover', ['$event']),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [DragEvent]),
    __metadata("design:returntype", void 0)
], MasterNewAdditionalComponent.prototype, "onDragOver", null);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_5__angular_core__["HostListener"])('drop', ['$event']),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [DragEvent]),
    __metadata("design:returntype", void 0)
], MasterNewAdditionalComponent.prototype, "onDrop", null);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_5__angular_core__["HostListener"])('dragstart', ['$event']),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [DragEvent]),
    __metadata("design:returntype", void 0)
], MasterNewAdditionalComponent.prototype, "onDragStart", null);
MasterNewAdditionalComponent = __decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_5__angular_core__["Component"])({
        selector: 'newadditional-cost',
        template: __webpack_require__(1345),
        styles: [__webpack_require__(120), __webpack_require__(9), __webpack_require__(554)],
        providers: [__WEBPACK_IMPORTED_MODULE_13__AdditionalCost_addtionalCost_service__["a" /* AdditionalCostService */]]
    })
    // export class MasterNewAdditionalComponent {
    //     modeTitle: string = 'Additional Cost';
    //     TrnMainObj: TrnMain
    //     form: FormGroup;
    //     dialogMessageSubject: BehaviorSubject<string> = new BehaviorSubject<string>('');
    //     dialogMessage$: Observable<string> = this.dialogMessageSubject.asObservable();
    //     items: any[] = [];
    //     activeItem: any;
    //     activeIndexSubject: BehaviorSubject<number> = new BehaviorSubject<number>(0)
    //     activeIndex$: Observable<number> = this.activeIndexSubject.asObservable();
    //     additionalCost: any;
    //     @ViewChild("genericGridRefBill") genericGridRefBill: GenericPopUpComponent;
    //     gridPopupSettingsForRefBill: GenericPopUpSettings = new GenericPopUpSettings();
    //     voucherType: VoucherTypeEnum = VoucherTypeEnum.AdditionalCost;
    //     constructor(public additionalcostService: NewAdditionalCostService, private fb: FormBuilder,
    //         private masterService: MasterRepo, public dialog: MdDialog, public _trnMainService: TransactionService,
    //         private setting: SettingService, private loadingService: SpinnerService, private alertService: AlertService, private route: ActivatedRoute) {
    //         this.TrnMainObj = additionalcostService.TrnMainObj;
    //         this._trnMainService.TrnMainObj.VoucherType = 66;
    //         // this._trnMainService.pageHeading = "Additoinal Cost";
    //         // this._trnMainService.TrnMainObj.VoucherPrefix = "AD";
    //         // this.TrnMainObj.VoucherPrefix = "AD";
    //         // this._trnMainService.initialFormLoad(66);
    //         this.form = fb.group({
    //             VCHRNO: ['', [Validators.required]],
    //             DIVISION: ['', [Validators.required]],
    //             // PIVchr:['',[Validators.required]],
    //             TRNDATE: ['', [Validators.required]],
    //             BSDATE: ['', [Validators.required]],
    //             AdditionalPurchaseAc: [''],
    //             CHALANNO: [''],
    //         });
    //         this.additionalCost = 99;
    //     }
    //     menuItems: MenuItem[];
    //     ngOnInit() {
    //         this.route.queryParams.subscribe(params => {
    //             if (params['mode'] == "DRILL") {
    //                 let VCHR = params['voucher']
    //                 let vparams = []
    //                 vparams = VCHR.split('-');
    //                 let data = {
    //                     VCHRNO: VCHR,
    //                     DIVISION: vparams[1]
    //                 }
    //                 this.loadingService.show("Loading Invoice")
    //                 this.additionalcostService.loadAdditionalCost(data);
    //                 this.additionalcostService.ObservableReturnData.subscribe((x: any) => {
    //                     this._trnMainService.TrnMainObj = this.masterService.loadedTrnmain;
    //                     this._trnMainService.TrnMainObj.Mode = "VIEW";
    //                     //Dbl check if trnmain vchrno missing -- sometimes date will not show on Edit or View
    //                     this.loadVoucher(x.TrnMainObj);
    //                 })
    //                 // this.masterService.LoadTransaction(VCHR, vparams[1], vparams[2]).subscribe((res) => {
    //                 //   if (res.status == "ok") {
    //                 //     this.loadingService.hide()
    //                 //     this._trnMainService.TrnMainObj = res.result;
    //                 //     this._trnMainService.TrnMainObj.VoucherType = 3;
    //                 //     this._trnMainService.pageHeading = "Additional Cost";
    //                 //     this._trnMainService.TrnMainObj.VoucherPrefix = "AD";
    //                 //     this._trnMainService.TrnMainObj.Mode = "VIEW";
    //                 //   }
    //                 // }, err => {
    //                 //   this.loadingService.hide()
    //                 //   this.alertService.error(err)
    //                 // })
    //             } else if (params['mode'] == "fromLatepost") {
    //                 // alert("params['mode']==additional cost")
    //                 this.loadingService.show("Loading Invoice")
    //                 let data = {
    //                     VCHRNO: params.voucher,
    //                     DIVISION: params.DIVISION,
    //                     PHISCALID: params.PHISCALID
    //                 }
    //                 this.additionalcostService.loadAdditionalCost(data);
    //                 this.additionalcostService.ObservableReturnData.subscribe((x: any) => {
    //                     this._trnMainService.TrnMainObj = this.masterService.loadedTrnmain;
    //                     this._trnMainService.TrnMainObj.Mode = "VIEW";
    //                     //Dbl check if trnmain vchrno missing -- sometimes date will not show on Edit or View
    //                     this.loadVoucher(x.TrnMainObj);
    //                 })
    //             }
    //             else {
    //                 this.items = [
    //                     {
    //                         // label: 'Purchase details', icon: 'fa-bar-chart', id: 'purchasedetail', command: (event) => { this.activeItem = event.item }
    //                     },
    //                     { label: 'Additional Cost Details', icon: 'fa-support', id: 'addcost', command: (event) => { this.activeItem = event.item } },
    //                     { label: 'Costing Detail', icon: 'fa-book', id: 'detailcosting', command: (event) => { this.activeItem = event.item } },
    //                 ];
    //                 this.activeItem = this.items[0];
    //                 // ////console.log("ROUTERERERERER", this.activeItem)
    //                 this.menuItems = [
    //                     // { label: 'Purchase Details', menuName: 'purchasedetail', icon: 'fa-bar-chart' },
    //                     { label: 'Additional Cost Details', menuName: 'adddetail' },
    //                     { label: 'Costing Detail', menuName: 'costingdetail' }
    //                 ];
    //                 this.masterService.ShowMore = true;
    //                 this.masterService.focusAnyControl("REFPINO_AD");
    //                 this.additionalcostService.IMPORTDETAILS.prodList = [];
    //             }
    //         });
    //     }
    //     ngAfterViewInit() {
    //         this.addRow();
    //     }
    //     loadVoucher(selectedItem) {
    //         this._trnMainService.loadData(
    //             selectedItem.VCHRNO,
    //             selectedItem.DIVISION,
    //             selectedItem.PhiscalID
    //         );
    //         this._trnMainService.showPerformaApproveReject = false;
    //         if (this._trnMainService.TrnMainObj.gstInfoOfAccount == null) {
    //             this._trnMainService.TrnMainObj.gstInfoOfAccount = <any>{}
    //         }
    //         this._trnMainService.TrnMainObj.gstInfoOfAccount.TRNTYPE = selectedItem.PSTYPE
    //         // this.vouchernois = selectedItem.VCHRNO;
    //         // this.division = selectedItem.DIVISION;
    //         // this.phiscalid = selectedItem.PhiscalID;
    //     }
    //     addRow() {
    //         try {
    //             let newRow = <IMPORT_DETAILS_PROD>{};
    //             newRow.ITEMNAME = '';
    //             newRow.NETAMOUNT = 0;
    //             newRow.NONTAXABLE = 0;
    //             newRow.QUANTITY = 0;
    //             newRow.TAXABLE = 0;
    //             newRow.VAT = 0;
    //             //console.log("add row",newRow);
    //             this.additionalcostService.IMPORTDETAILS.prodList && this.additionalcostService.IMPORTDETAILS.prodList.push(newRow);
    //         } catch (ex) {
    //             //console.log(ex);
    //             alert(ex);
    //         }
    //     }
    // }
    ,
    __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_13__AdditionalCost_addtionalCost_service__["a" /* AdditionalCostService */], __WEBPACK_IMPORTED_MODULE_7__angular_forms__["FormBuilder"],
        __WEBPACK_IMPORTED_MODULE_4__common_repositories_masterRepo_service__["a" /* MasterRepo */], __WEBPACK_IMPORTED_MODULE_3__angular_material__["a" /* MdDialog */], __WEBPACK_IMPORTED_MODULE_0__common_Transaction_Components_transaction_service__["a" /* TransactionService */],
        __WEBPACK_IMPORTED_MODULE_9__common_services__["c" /* SettingService */], __WEBPACK_IMPORTED_MODULE_10__common_services_spinner_spinner_service__["a" /* SpinnerService */], __WEBPACK_IMPORTED_MODULE_11__common_services_alert_alert_service__["a" /* AlertService */], __WEBPACK_IMPORTED_MODULE_12__angular_router__["ActivatedRoute"]])
], MasterNewAdditionalComponent);



/***/ }),

/***/ 1266:
/***/ (function(module, exports) {

module.exports = "\r\nhtml, body {\r\n    max-width: 100%;\r\n    overflow-x: hidden;\r\n}\r\n\r\n.scroll{\r\n    overflow-y: scroll;\r\n    overflow-x: scroll;\r\n}\r\n\r\n.sidenav {\r\n    height: 100%;\r\n    width: 0;\r\n    position: fixed;\r\n    z-index: 1;\r\n    top: 0;\r\n    left: 0;\r\n    background-color: #1A242F;\r\n    overflow-x: hidden;\r\n    transition: 0.5s;\r\n    padding-top: 60px;\r\n}\r\n\r\n\r\n.sidenav a {\r\n    padding: 8px 8px 8px 32px;\r\n    text-decoration: none;\r\n    font-size: 25px;\r\n    color: #818181;\r\n    display: block;\r\n    transition: 0.3s\r\n}\r\n\r\n.sidenav a:hover, .offcanvas a:focus{\r\n    color: #f1f1f1;\r\n}\r\n\r\n.sidenav .closebtn {\r\n    position: absolute;\r\n    top: 0;\r\n    right: 25px;\r\n    font-size: 36px;\r\n    margin-left: 50px;\r\n}\r\n\r\n.content {\r\n    transition: margin-left .5s;\r\n    \r\n}\r\n\r\n.fa-bars{\r\n    font-size:25px; \r\n    cursor:pointer;\r\n    margin-left: 5px;\r\n}\r\n\r\nbutton[disabled]{\r\n    cursor: not-allowed;\r\n    opacity: 0.65;\r\n}\r\n\r\n.modal{\r\n    padding-right: 17px;\r\n    padding-left: 17px;\r\n}\r\n\r\n.modal-dialog{\r\n    margin: 0px;\r\n}\r\n\r\n.modal-content{\r\n    margin-top: 15px;\r\n    margin-bottom: 15px;\r\n}\r\n\r\n.modal-body{\r\n    padding: 0px;\r\n}\r\n\r\n.modal-footer{\r\n    padding-bottom: 15px;\r\n    padding-top: 15px;\r\n    border-top: 0px;\r\n}\r\n\r\n#header-fixed { \r\n    position: fixed; \r\n    top: 0px; display:none;\r\n    background-color:white;\r\n}\r\n\r\ninput[type=number]::-webkit-inner-spin-button, \r\ninput[type=number]::-webkit-outer-spin-button { \r\n  -webkit-appearance: none; \r\n  margin: 0; \r\n}\r\n\r\ninput[type=date]::-webkit-inner-spin-button, \r\ninput[type=date]::-webkit-outer-spin-button { \r\n  -webkit-appearance: none; \r\n  margin: 0; \r\n}\r\n\r\ntr th{\r\n    padding: 5px 2px;\r\n    background-color: #FFFFFF;\r\n    cursor: default;\r\n    font-weight: bold;\r\n}\r\n\r\ntr td{\r\n    padding: 0px 2px;\r\n    border-top: 0px;\r\n    line-height: 31px;\r\n}\r\n\r\ntbody:hover {\r\n    background-color: #e0e0e0;\r\n}\r\n\r\ninput, select, textarea{\r\n    border: 1px solid #cbcbcb;\r\n    border-radius: 3px;\r\n    color: black;\r\n}\r\n\r\ninput, select{\r\n    height: 23px;\r\n}\r\n\r\ninput{\r\n    padding-left: 4px;\r\n}\r\n\r\ninput[type=date]{\r\n    line-height: inherit;\r\n}\r\n\r\n.ledger-bottom-padding{\r\n    padding-bottom: 0px;\r\n}\r\n\r\n.content-top{\r\n    padding-top: 0px;\r\n    padding-bottom: 13px;\r\n}\r\n\r\nbutton{\r\n    margin-top: 4px; \r\n}\r\n\r\ntr td:last-child {\r\n    padding-right: 0px;\r\n}\r\n\r\n@media (min-width: 992px){\r\n    .modal-lg {\r\n        width: 100%;\r\n    }\r\n}\r\n\r\n\r\n@media (max-width: 767px) {\r\n    .fa{\r\n        display: none;\r\n    }\r\n\r\n    #mobile-top{\r\n        margin-top: 80px;\r\n    }\r\n\r\n    #content{\r\n       margin-left: 0px;\r\n   }\r\n}\r\n\r\nfieldset {\r\n  padding: 1em;\r\n  font:80%/1 sans-serif;\r\n  }\r\nlabel {\r\n  float:left;\r\n  width:25%;\r\n  margin-right:0.5em;\r\n  padding-top:0.2em;\r\n  text-align:right;\r\n  font-weight:bold;\r\n  }\r\n\r\n  input:disabled, select:disabled, textarea:disabled {\r\n    cursor: not-allowed !important;\r\n    color: black !important;\r\n    background-color: #EBEBE4 !important;\r\n}\r\n\r\nbutton:disabled{\r\n    cursor: not-allowed !important;\r\n}\r\n\r\n::-webkit-input-placeholder{\r\n  color: rgba(0, 0, 0, 0.5) !important;\r\n  opacity: 1 !important;\r\n}\r\n"

/***/ }),

/***/ 1270:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_http__ = __webpack_require__(10);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__angular_router__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__common_services_permission__ = __webpack_require__(15);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__app_global_state__ = __webpack_require__(14);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_rxjs__ = __webpack_require__(24);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_rxjs___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5_rxjs__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return VehicleCostTrackingService; });






var VehicleCostTrackingService = (function () {
    function VehicleCostTrackingService(http, activatedRoute, authService, state) {
        this.http = http;
        this.activatedRoute = activatedRoute;
        this.authService = authService;
        this.state = state;
        this.activeurlpath = activatedRoute.snapshot.url.join('');
    }
    Object.defineProperty(VehicleCostTrackingService.prototype, "apiUrl", {
        get: function () {
            var url = this.state.getGlobalSetting("apiUrl");
            var apiUrl = "";
            if (!!url && url.length > 0) {
                apiUrl = url[0];
            }
            ;
            return apiUrl;
        },
        enumerable: true,
        configurable: true
    });
    VehicleCostTrackingService.prototype.extractData = function (res) {
        var response = res.json();
        return response || {};
    };
    VehicleCostTrackingService.prototype.handleError = function (error) {
        return __WEBPACK_IMPORTED_MODULE_5_rxjs__["Observable"].throw(error);
    };
    VehicleCostTrackingService.prototype.getRequestOption = function () {
        var headers = new __WEBPACK_IMPORTED_MODULE_0__angular_http__["Headers"]({ 'Content-type': 'application/json', 'Authorization': this.authService.getAuth().token });
        return new __WEBPACK_IMPORTED_MODULE_0__angular_http__["RequestOptions"]({ headers: headers });
    };
    VehicleCostTrackingService.prototype.UntrackedPIVoucherList = function () {
        return this.http.get(this.apiUrl + "/UntrackedPIVoucherList", this.getRequestOption())
            .map(this.extractData)
            .catch(this.handleError);
    };
    VehicleCostTrackingService.prototype.saveVehicleCostTracking = function (data) {
        return this.http.post(this.apiUrl + "/saveVehicleCostTracking", { data: data }, this.getRequestOption())
            .map(this.extractData)
            .catch(this.handleError);
    };
    VehicleCostTrackingService.prototype.PIVoucherDetailInAD = function (voucherno) {
        var _voucherno = voucherno.replace("/", "ZZ");
        return this.http.get(this.apiUrl + "/PIVoucherDetailInAD/" + _voucherno, this.getRequestOption())
            .map(this.extractData)
            .catch(this.handleError);
    };
    return VehicleCostTrackingService;
}());
VehicleCostTrackingService = __decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__angular_core__["Injectable"])(),
    __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_0__angular_http__["Http"], __WEBPACK_IMPORTED_MODULE_2__angular_router__["ActivatedRoute"],
        __WEBPACK_IMPORTED_MODULE_3__common_services_permission__["a" /* AuthService */], __WEBPACK_IMPORTED_MODULE_4__app_global_state__["a" /* GlobalState */]])
], VehicleCostTrackingService);



/***/ }),

/***/ 1272:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__prefix_service__ = __webpack_require__(1273);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__common_interfaces_TrnMain__ = __webpack_require__(25);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_rxjs_BehaviorSubject__ = __webpack_require__(30);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_rxjs_BehaviorSubject___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_rxjs_BehaviorSubject__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__repositories_index__ = __webpack_require__(13);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return PrefixComponent; });





var PrefixComponent = (function () {
    function PrefixComponent(service, masterService) {
        this.service = service;
        this.masterService = masterService;
        this.voucherType = 0;
        this.sendPrefix = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"]();
        this.closepopup = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"]();
        this.prefix = {};
        this.prefixList = [];
        this.prefixes = [];
        this.prefixessubject = new __WEBPACK_IMPORTED_MODULE_3_rxjs_BehaviorSubject__["BehaviorSubject"]([]);
        this.prefixesObservable$ = this.prefixessubject.asObservable();
    }
    PrefixComponent.prototype.ngOnInit = function () {
        var _this = this;
        try {
            this.service.getVoucherType(this.voucherType).subscribe(function (data) {
                _this.prefixessubject.next(data);
            }, function (error) { });
            // var vname = this.masterService.getPrefixVname(this.voucherType);
            var vchr = __WEBPACK_IMPORTED_MODULE_2__common_interfaces_TrnMain__["a" /* VoucherTypeEnum */][this.voucherType];
            this.selectedVT = vchr;
            // this.prefix.VOUCHERNAME = this.selectedVT;
            // this.prefix.VNAME = vname;
            /*
            switch (this.voucherType) {
                case VoucherTypeEnum.Journal:
                    this.selectedVT = "Journal"; this.prefix.VNAME = "JV";
                    break;
                case VoucherTypeEnum.PaymentVoucher:
                    this.selectedVT = "Payment"; this.prefix.VNAME = "PV";
                    break;
                case VoucherTypeEnum.ReceiveVoucher:
                    this.selectedVT = "Receive"; this.prefix.VNAME = "RV";
                    break;
                case VoucherTypeEnum.CreditNote:
                    this.selectedVT="CreditNote";this.prefix.VNAME='CN';
            }
            */
            // this.sendPrefix.emit(this.prefix);
        }
        catch (ex) {
        }
    };
    PrefixComponent.prototype.OK = function () {
        this.ClosePop();
    };
    PrefixComponent.prototype.getCurSequence = function () {
        try {
            this.sendPrefix.emit(this.prefix);
        }
        catch (ex) {
        }
    };
    // voucherTypeChange(selectVoucherType:VoucherTypeEnum, SelectedVoucher: string) {
    //     this.prefixList=this.prefixes.filter(x=>x.voucherType==selectVoucherType)
    //     if (SelectedVoucher != null) {
    //         if (SelectedVoucher == "Journal") {
    //             this.prefixList = this.prefixes.filter(x => x.VOUCHERTYPE == "Journal");
    //         }
    //         else if (SelectedVoucher == "Payment") {
    //             this.prefixList = this.prefixes.filter(x => x.VOUCHERTYPE == "Payment");
    //         }
    //     }
    // }
    PrefixComponent.prototype.prefixChanged = function () {
        try {
            // alert("A"+this.prefix.VNAME)
            this.sendPrefix.emit(this.prefix);
        }
        catch (ex) {
            alert(ex);
        }
    };
    PrefixComponent.prototype.ClosePop = function () {
        this.closepopup.emit();
    };
    return PrefixComponent;
}());
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])(),
    __metadata("design:type", Number)
], PrefixComponent.prototype, "voucherType", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Output"])(),
    __metadata("design:type", Object)
], PrefixComponent.prototype, "sendPrefix", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Output"])(),
    __metadata("design:type", Object)
], PrefixComponent.prototype, "closepopup", void 0);
PrefixComponent = __decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
        selector: 'SeriesDialog',
        template: __webpack_require__(1301),
        styles: ["\n            .modal{\n                padding-top:0px;\n            }\n        "],
        providers: [__WEBPACK_IMPORTED_MODULE_1__prefix_service__["a" /* PrefixService */]],
    }),
    __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1__prefix_service__["a" /* PrefixService */], __WEBPACK_IMPORTED_MODULE_4__repositories_index__["a" /* MasterRepo */]])
], PrefixComponent);



/***/ }),

/***/ 1273:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_http__ = __webpack_require__(10);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__repositories_masterRepo_service__ = __webpack_require__(8);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_rxjs_Observable__ = __webpack_require__(22);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_rxjs_Observable___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_rxjs_Observable__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return PrefixService; });




var PrefixService = (function () {
    function PrefixService(http, masterService) {
        this.http = http;
        this.masterService = masterService;
        this.vlist = [];
    }
    PrefixService.prototype.getVoucherType = function (voucherType) {
        var _this = this;
        if (this.vlist.length > 0) {
            return __WEBPACK_IMPORTED_MODULE_3_rxjs_Observable__["Observable"].of(this.vlist);
        }
        else if (this.vlistObservable) {
            return this.vlistObservable;
        }
        else {
            this.vlistObservable = this.http.post(this.masterService.apiUrl + '/getVoucherTypeList', { voucherType: voucherType }, this.masterService.getRequestOption())
                .flatMap(function (res) {
                return res.json() || [];
            })
                .map(function (data) {
                _this.vlistObservable = null;
                _this.vlist.push(data);
                return _this.vlist;
            }).share();
            return this.vlistObservable;
        }
    };
    return PrefixService;
}());
PrefixService = __decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Injectable"])(),
    __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1__angular_http__["Http"], __WEBPACK_IMPORTED_MODULE_2__repositories_masterRepo_service__["a" /* MasterRepo */]])
], PrefixService);



/***/ }),

/***/ 1274:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return OnlyNumber; });

var OnlyNumber = (function () {
    function OnlyNumber(el) {
        this.el = el;
    }
    OnlyNumber.prototype.onKeyDown = function (event) {
        var e = event;
        if (this.OnlyNumber) {
            if ([46, 8, 9, 27, 13, 110, 190].indexOf(e.keyCode) !== -1 ||
                // Allow: Ctrl+A
                (e.keyCode == 65 && e.ctrlKey === true) ||
                // Allow: Ctrl+C
                (e.keyCode == 67 && e.ctrlKey === true) ||
                // Allow: Ctrl+X
                (e.keyCode == 88 && e.ctrlKey === true) ||
                // Allow: home, end, left, right
                (e.keyCode >= 35 && e.keyCode <= 39)) {
                // let it happen, don't do anything
                return;
            }
            // Ensure that it is a number and stop the keypress
            if ((e.shiftKey || (e.keyCode < 48 || e.keyCode > 57)) && (e.keyCode < 96 || e.keyCode > 105)) {
                e.preventDefault();
            }
        }
    };
    return OnlyNumber;
}());
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])(),
    __metadata("design:type", Boolean)
], OnlyNumber.prototype, "OnlyNumber", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["HostListener"])('keydown', ['$event']),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [Object]),
    __metadata("design:returntype", void 0)
], OnlyNumber.prototype, "onKeyDown", null);
OnlyNumber = __decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Directive"])({
        selector: '[OnlyNumber]'
    }),
    __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_0__angular_core__["ElementRef"]])
], OnlyNumber);



/***/ }),

/***/ 1275:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_router__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__common_services_permission_guard_service__ = __webpack_require__(90);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__Purchases_components_AdditionalCost_masterPageAdditional_component__ = __webpack_require__(1264);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__Purchases_components_NewAdditionalCost_newmasterPageAdditional_component__ = __webpack_require__(1265);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__Purchases_components_purchaseinvoice_AddPurchaseInvoice__ = __webpack_require__(1236);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__accountvoucher_component__ = __webpack_require__(1238);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__components_CashCollection_cashcollection_component__ = __webpack_require__(1240);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__components_CellPayVoucher_CellPay_Voucher_component__ = __webpack_require__(1241);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__components_CreditNote_credit_note_component__ = __webpack_require__(1242);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__components_DebitNote_debit_note_component__ = __webpack_require__(1243);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__components_ExpensesVoucher_expenses_voucher_component__ = __webpack_require__(1244);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__components_IncomeVoucher_income_voucher_component__ = __webpack_require__(1245);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12__components_PaymentCollection_PaymentCollection_component__ = __webpack_require__(1246);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13__components_PostDirectory_postdirectory_component__ = __webpack_require__(1247);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_14__components_ReverseCreditNote_reverse_credit_note_component__ = __webpack_require__(1248);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_15__components_account_headingwise_depreciation_detail_account_headingwise_depreciation_detail_component__ = __webpack_require__(1249);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_16__components_account_opening_balance_account_opening_balance_component__ = __webpack_require__(1250);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_17__components_bank_reconciliation_bank_reconciliation_component__ = __webpack_require__(1251);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_18__components_bill_tracking_amendment_bill_tracking_amendment_component__ = __webpack_require__(1252);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_19__components_capital_voucher_capital_voucher_component__ = __webpack_require__(1253);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_20__components_contra_contra_voucher_component__ = __webpack_require__(1254);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_21__components_depreciation_detail_depreciation_detail_component__ = __webpack_require__(1255);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_22__components_itemwise_depreciation_detail_itemwise_depreciation_detail_component__ = __webpack_require__(1256);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_23__components_journal_journal_voucher_component__ = __webpack_require__(1257);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_24__components_party_balance_confirmation_party_balance_confirmation_component__ = __webpack_require__(1258);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_25__components_party_opening_balance_party_opening_balance_component__ = __webpack_require__(1259);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_26__components_party_reconciliation_party_reconciliation_component__ = __webpack_require__(1260);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_27__components_voucher_posting_voucher_posting_component__ = __webpack_require__(1261);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_28__components_voucher_renumbering_voucher_renumbering_component__ = __webpack_require__(1262);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_29__components_BulkPrint_bulk_print_component__ = __webpack_require__(1239);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return routing; });






























var routes = [
    {
        path: '',
        component: __WEBPACK_IMPORTED_MODULE_5__accountvoucher_component__["a" /* AccountVouchers */],
        children: [
            { path: 'acvouchers/journal-voucher', component: __WEBPACK_IMPORTED_MODULE_23__components_journal_journal_voucher_component__["a" /* JournalVoucherComponent */], canActivate: [__WEBPACK_IMPORTED_MODULE_1__common_services_permission_guard_service__["a" /* CanActivateTeam */]] },
            { path: 'acvouchers/contra-voucher', component: __WEBPACK_IMPORTED_MODULE_20__components_contra_contra_voucher_component__["a" /* ContraVoucherComponent */], canActivate: [__WEBPACK_IMPORTED_MODULE_1__common_services_permission_guard_service__["a" /* CanActivateTeam */]] },
            // { path: 'acvouchers/payment-voucher/payment-single', component: PaymentSingleComponent, canActivate: [CanActivateTeam] },
            { path: 'acvouchers/income-voucher', component: __WEBPACK_IMPORTED_MODULE_11__components_IncomeVoucher_income_voucher_component__["a" /* IncomeVoucherComponent */], canActivate: [__WEBPACK_IMPORTED_MODULE_1__common_services_permission_guard_service__["a" /* CanActivateTeam */]] },
            { path: 'acvouchers/expense-voucher', component: __WEBPACK_IMPORTED_MODULE_10__components_ExpensesVoucher_expenses_voucher_component__["a" /* ExpensesVoucherComponent */], canActivate: [__WEBPACK_IMPORTED_MODULE_1__common_services_permission_guard_service__["a" /* CanActivateTeam */]] },
            { path: 'acvouchers/debit-note', component: __WEBPACK_IMPORTED_MODULE_9__components_DebitNote_debit_note_component__["a" /* DebitNoteComponent */], canActivate: [__WEBPACK_IMPORTED_MODULE_1__common_services_permission_guard_service__["a" /* CanActivateTeam */]] },
            { path: 'acvouchers/credit-note', component: __WEBPACK_IMPORTED_MODULE_8__components_CreditNote_credit_note_component__["a" /* CreditNoteComponent */], canActivate: [__WEBPACK_IMPORTED_MODULE_1__common_services_permission_guard_service__["a" /* CanActivateTeam */]] },
            // { path: 'acvouchers/debit-note-rate-adjustment', component: DebitNoteRateAdjustmentComponent, canActivate: [CanActivateTeam] },
            // { path: 'acvouchers/credit-note-rate-adjustment', component: DebitNoteRateAdjustmentComponent, canActivate: [CanActivateTeam] },
            { path: 'Utilities/bill-tracking', component: __WEBPACK_IMPORTED_MODULE_18__components_bill_tracking_amendment_bill_tracking_amendment_component__["a" /* BillTrackingAmendmentComponent */], canActivate: [__WEBPACK_IMPORTED_MODULE_1__common_services_permission_guard_service__["a" /* CanActivateTeam */]] },
            { path: 'acvouchers/capital-voucher', component: __WEBPACK_IMPORTED_MODULE_19__components_capital_voucher_capital_voucher_component__["a" /* CapitalVoucherComponent */], canActivate: [__WEBPACK_IMPORTED_MODULE_1__common_services_permission_guard_service__["a" /* CanActivateTeam */]] },
            { path: 'acvouchers/additional-cost', component: __WEBPACK_IMPORTED_MODULE_2__Purchases_components_AdditionalCost_masterPageAdditional_component__["a" /* MasterAdditionalComponent */], canActivate: [__WEBPACK_IMPORTED_MODULE_1__common_services_permission_guard_service__["a" /* CanActivateTeam */]] },
            { path: 'acvouchers/newadditional-cost', component: __WEBPACK_IMPORTED_MODULE_3__Purchases_components_NewAdditionalCost_newmasterPageAdditional_component__["a" /* MasterNewAdditionalComponent */], canActivate: [__WEBPACK_IMPORTED_MODULE_1__common_services_permission_guard_service__["a" /* CanActivateTeam */]] },
            { path: "Opening/account-opening-balance", component: __WEBPACK_IMPORTED_MODULE_16__components_account_opening_balance_account_opening_balance_component__["a" /* AccountOpeningBalance */], canActivate: [__WEBPACK_IMPORTED_MODULE_1__common_services_permission_guard_service__["a" /* CanActivateTeam */]] },
            { path: "Opening/party-opening-balance", component: __WEBPACK_IMPORTED_MODULE_25__components_party_opening_balance_party_opening_balance_component__["a" /* PartyOpeningBalance */], canActivate: [__WEBPACK_IMPORTED_MODULE_1__common_services_permission_guard_service__["a" /* CanActivateTeam */]] },
            { path: 'AccountLedger', loadChildren: function() { return __webpack_require__.e/* import() */(11).then(__webpack_require__.bind(null, 1361))  .then( function(module) { return module['AledgerModule']; } ); }, canActivate: [__WEBPACK_IMPORTED_MODULE_1__common_services_permission_guard_service__["a" /* CanActivateTeam */]] },
            { path: 'LatePostCollection', loadChildren: function() { return __webpack_require__.e/* import() */(25).then(__webpack_require__.bind(null, 1349))  .then( function(module) { return module['EnableLatePostModule']; } ); }, canActivate: [__WEBPACK_IMPORTED_MODULE_1__common_services_permission_guard_service__["a" /* CanActivateTeam */]] },
            { path: 'EPaymentStatus', loadChildren: function() { return __webpack_require__.e/* import() */(26).then(__webpack_require__.bind(null, 1348))  .then( function(module) { return module['EPaymentStatusModule']; } ); }, canActivate: [__WEBPACK_IMPORTED_MODULE_1__common_services_permission_guard_service__["a" /* CanActivateTeam */]] },
            { path: 'acvouchers/voucher-posting', component: __WEBPACK_IMPORTED_MODULE_27__components_voucher_posting_voucher_posting_component__["a" /* VoucherPosting */], canActivate: [__WEBPACK_IMPORTED_MODULE_1__common_services_permission_guard_service__["a" /* CanActivateTeam */]] },
            { path: "Utilities/bank-reconciliation", component: __WEBPACK_IMPORTED_MODULE_17__components_bank_reconciliation_bank_reconciliation_component__["a" /* BankReconciliationComponent */], canActivate: [__WEBPACK_IMPORTED_MODULE_1__common_services_permission_guard_service__["a" /* CanActivateTeam */]] },
            { path: "Utilities/party-balance-confirmation", component: __WEBPACK_IMPORTED_MODULE_24__components_party_balance_confirmation_party_balance_confirmation_component__["a" /* PartyBalanceConfirmationComponent */], canActivate: [__WEBPACK_IMPORTED_MODULE_1__common_services_permission_guard_service__["a" /* CanActivateTeam */]] },
            { path: "Utilities/account-headingwise-depreciation-detail", component: __WEBPACK_IMPORTED_MODULE_15__components_account_headingwise_depreciation_detail_account_headingwise_depreciation_detail_component__["a" /* AccountHeadingWiseDepreciationDetailComponent */], canActivate: [__WEBPACK_IMPORTED_MODULE_1__common_services_permission_guard_service__["a" /* CanActivateTeam */]] },
            { path: "Utilities/itemwise-depreciation-detail", component: __WEBPACK_IMPORTED_MODULE_22__components_itemwise_depreciation_detail_itemwise_depreciation_detail_component__["a" /* ItemWiseDepreciationDetailComponent */], canActivate: [__WEBPACK_IMPORTED_MODULE_1__common_services_permission_guard_service__["a" /* CanActivateTeam */]] },
            { path: 'day-book', loadChildren: function() { return __webpack_require__.e/* import() */(21).then(__webpack_require__.bind(null, 1356))  .then( function(module) { return module['DayBookModule']; } ); }, canActivate: [__WEBPACK_IMPORTED_MODULE_1__common_services_permission_guard_service__["a" /* CanActivateTeam */]] },
            { path: 'cash-book', loadChildren: function() { return __webpack_require__.e/* import() */(22).then(__webpack_require__.bind(null, 1355))  .then( function(module) { return module['CashBookModule']; } ); }, canActivate: [__WEBPACK_IMPORTED_MODULE_1__common_services_permission_guard_service__["a" /* CanActivateTeam */]] },
            { path: 'bank-book', loadChildren: function() { return __webpack_require__.e/* import() */(23).then(__webpack_require__.bind(null, 1354))  .then( function(module) { return module['BankBookModule']; } ); }, canActivate: [__WEBPACK_IMPORTED_MODULE_1__common_services_permission_guard_service__["a" /* CanActivateTeam */]] },
            { path: 'trial-balance', loadChildren: function() { return __webpack_require__.e/* import() */(29).then(__webpack_require__.bind(null, 1359))  .then( function(module) { return module['TrialBalanceModule']; } ); }, canActivate: [__WEBPACK_IMPORTED_MODULE_1__common_services_permission_guard_service__["a" /* CanActivateTeam */]] },
            { path: 'profit-loss', loadChildren: function() { return __webpack_require__.e/* import() */(30).then(__webpack_require__.bind(null, 1358))  .then( function(module) { return module['ProfitLossModule']; } ); }, canActivate: [__WEBPACK_IMPORTED_MODULE_1__common_services_permission_guard_service__["a" /* CanActivateTeam */]] },
            { path: 'balance-sheet', loadChildren: function() { return __webpack_require__.e/* import() */(31).then(__webpack_require__.bind(null, 1353))  .then( function(module) { return module['BalanceSheetModule']; } ); }, canActivate: [__WEBPACK_IMPORTED_MODULE_1__common_services_permission_guard_service__["a" /* CanActivateTeam */]] },
            { path: 'ledger-report', loadChildren: function() { return __webpack_require__.e/* import() */(20).then(__webpack_require__.bind(null, 1357))  .then( function(module) { return module['LedgerVoucherModule']; } ); }, canActivate: [__WEBPACK_IMPORTED_MODULE_1__common_services_permission_guard_service__["a" /* CanActivateTeam */]] },
            { path: 'voucher-register', loadChildren: function() { return __webpack_require__.e/* import() */(19).then(__webpack_require__.bind(null, 1360))  .then( function(module) { return module['VoucherRegisterModule']; } ); }, canActivate: [__WEBPACK_IMPORTED_MODULE_1__common_services_permission_guard_service__["a" /* CanActivateTeam */]] },
            // { path: 'vatsalesreport', loadChildren: 'app/pages/financial-report/VAT-Sales-Report/VAT-Sales-Report.module#VATSalesReportModule', canActivate: [CanActivateTeam] },
            { path: 'openingbalance', loadChildren: function() { return __webpack_require__.e/* import() */(24).then(__webpack_require__.bind(null, 1352))  .then( function(module) { return module['OpeningBalancerModule']; } ); }, canActivate: [__WEBPACK_IMPORTED_MODULE_1__common_services_permission_guard_service__["a" /* CanActivateTeam */]] },
            { path: 'renum/VoucherRenumbering', component: __WEBPACK_IMPORTED_MODULE_28__components_voucher_renumbering_voucher_renumbering_component__["a" /* VoucherRenumberingComponent */], canActivate: [__WEBPACK_IMPORTED_MODULE_1__common_services_permission_guard_service__["a" /* CanActivateTeam */]] },
            { path: 'print/bulkprint', component: __WEBPACK_IMPORTED_MODULE_29__components_BulkPrint_bulk_print_component__["a" /* BulkPrintComponent */], canActivate: [__WEBPACK_IMPORTED_MODULE_1__common_services_permission_guard_service__["a" /* CanActivateTeam */]] },
            // {path: 'acvouchers/PaymentCollection', component: PaymentCollection, canActivate:[CanActivateTeam]},
            // {path: 'acvouchers/simpleCollection', component: SimpleCollectionComponent,canActivate:[CanActivateTeam]},
            { path: 'Utilities/PaymentCollection', component: __WEBPACK_IMPORTED_MODULE_12__components_PaymentCollection_PaymentCollection_component__["a" /* PaymentCollection */], canActivate: [__WEBPACK_IMPORTED_MODULE_1__common_services_permission_guard_service__["a" /* CanActivateTeam */]] },
            { path: 'acvouchers/postdirectory', component: __WEBPACK_IMPORTED_MODULE_13__components_PostDirectory_postdirectory_component__["a" /* PostDirectoryComponent */], canActivate: [__WEBPACK_IMPORTED_MODULE_1__common_services_permission_guard_service__["a" /* CanActivateTeam */]] },
            { path: "Utilities/party-reconciliation", component: __WEBPACK_IMPORTED_MODULE_26__components_party_reconciliation_party_reconciliation_component__["a" /* PartyReconciliationComponent */], canActivate: [__WEBPACK_IMPORTED_MODULE_1__common_services_permission_guard_service__["a" /* CanActivateTeam */]] },
            { path: 'acvouchers/cellpay-voucher', component: __WEBPACK_IMPORTED_MODULE_7__components_CellPayVoucher_CellPay_Voucher_component__["a" /* CellPayVoucherComponent */], canActivate: [__WEBPACK_IMPORTED_MODULE_1__common_services_permission_guard_service__["a" /* CanActivateTeam */]] },
            { path: 'acvouchers/reverse-credit-note', component: __WEBPACK_IMPORTED_MODULE_14__components_ReverseCreditNote_reverse_credit_note_component__["a" /* ReverseCreditNoteComponent */], canActivate: [__WEBPACK_IMPORTED_MODULE_1__common_services_permission_guard_service__["a" /* CanActivateTeam */]] },
            { path: 'purchases/add-purchase-invoice', component: __WEBPACK_IMPORTED_MODULE_4__Purchases_components_purchaseinvoice_AddPurchaseInvoice__["a" /* AddPurchaseInvoiceComponent */], canActivate: [__WEBPACK_IMPORTED_MODULE_1__common_services_permission_guard_service__["a" /* CanActivateTeam */]] },
            { path: 'acvouchers/localpurchase-costallocation', loadChildren: function() { return __webpack_require__.e/* import() */(17).then(__webpack_require__.bind(null, 1350))  .then( function(module) { return module['LocalPurchaseCostAllocationModule']; } ); }, canActivate: [__WEBPACK_IMPORTED_MODULE_1__common_services_permission_guard_service__["a" /* CanActivateTeam */]] },
            { path: 'Utilities/cash-collection', component: __WEBPACK_IMPORTED_MODULE_6__components_CashCollection_cashcollection_component__["a" /* CashCollection */], canActivate: [__WEBPACK_IMPORTED_MODULE_1__common_services_permission_guard_service__["a" /* CanActivateTeam */]] },
            { path: "Utilities/depreciation-detail", component: __WEBPACK_IMPORTED_MODULE_21__components_depreciation_detail_depreciation_detail_component__["a" /* DepreciationDetailsComponent */], canActivate: [__WEBPACK_IMPORTED_MODULE_1__common_services_permission_guard_service__["a" /* CanActivateTeam */]] },
        ]
    }
];
var routing = __WEBPACK_IMPORTED_MODULE_0__angular_router__["RouterModule"].forChild(routes);


/***/ }),

/***/ 1276:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__common_Transaction_Components_transaction_service__ = __webpack_require__(7);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__common_interfaces_TrnMain__ = __webpack_require__(25);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__common_repositories_masterRepo_service__ = __webpack_require__(8);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__common_services_setting_service__ = __webpack_require__(72);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return DrCrFooterWithVATIncluded; });





var DrCrFooterWithVATIncluded = (function () {
    function DrCrFooterWithVATIncluded(masterService, _transactionService, setting, changeDetection) {
        this.masterService = masterService;
        this._transactionService = _transactionService;
        this.setting = setting;
        this.changeDetection = changeDetection;
        this.differenceAmount = 0;
        this.diffAmountDrCrType = "";
        this.TrnMainObj = {};
        this.voucherType = __WEBPACK_IMPORTED_MODULE_2__common_interfaces_TrnMain__["a" /* VoucherTypeEnum */].DebitNote;
        this.prefix = {};
        this.applyPipeinTaxable = true;
        this.applyPipeinNonTaxable = true;
        this.TrnMainObj = _transactionService.TrnMainObj;
        // this.differenceAmount = this._transactionService.differenceAmount;
        // this.diffAmountDrCrType = this._transactionService.diffAmountDrCrType;
    }
    DrCrFooterWithVATIncluded.prototype.ngOnInit = function () {
    };
    DrCrFooterWithVATIncluded.prototype.ngAfterContentChecked = function () {
        this.differenceAmount = this._transactionService.diffAmountItemForAccount;
        this.diffAmountDrCrType = this._transactionService.diffAmountDrCrType;
        this.changeDetection.detectChanges();
    };
    DrCrFooterWithVATIncluded.prototype.onChange = function () {
        this.differenceAmount = this._transactionService.differenceAmount;
        this.diffAmountDrCrType = this._transactionService.diffAmountDrCrType;
    };
    DrCrFooterWithVATIncluded.prototype.calculateCrAmount = function () {
        var _this = this;
        this._transactionService.totalCRAmount = 0;
        this._transactionService.creditList.forEach(function (x) { return _this._transactionService.totalCRAmount += x.CRAMNT; });
        this._transactionService.totalCRAmount += this._transactionService.TrnMainObj.DCAMNT;
    };
    DrCrFooterWithVATIncluded.prototype.taxableAmountChange = function (event) {
        this.applyPipeinTaxable = false;
        var TAXABLE = this._transactionService.nullToReturnZero(this._transactionService.TrnMainObj.TAXABLE);
        var Gross = this._transactionService.nullToReturnZero(this._transactionService.TrnMainObj.TOTAMNT);
        if (Gross < TAXABLE) {
            this._transactionService.TrnMainObj.TAXABLE = 0;
        }
        this._transactionService.TrnMainObj.NONTAXABLE =
            this._transactionService.nullToReturnZero(this._transactionService.TrnMainObj.TOTAMNT) -
                this._transactionService.nullToReturnZero(this._transactionService.TrnMainObj.TAXABLE);
        // this._transactionService.TrnMainObj.NONTAXABLE = this.transform(this._transactionService.TrnMainObj.NONTAXABLE);
        this.calculation();
    };
    DrCrFooterWithVATIncluded.prototype.nonTaxableAmountChange = function (event) {
        this.applyPipeinNonTaxable = false;
        ////console.log("call non taxable");
        var NONTAXABLE = this._transactionService.nullToReturnZero(this._transactionService.TrnMainObj.TAXABLE);
        var Gross = this._transactionService.nullToReturnZero(this._transactionService.TrnMainObj.TOTAMNT);
        ////console.log("nontaxable",NONTAXABLE,Gross);
        if (NONTAXABLE > Gross) {
            this._transactionService.TrnMainObj.NONTAXABLE = 0;
        }
        // this._transactionService.TrnMainObj.NONTAXABLE = this._transactionService.nullToZeroConverter(event.target.value);
        // this._transactionService.TrnMainObj.TAXABLE = this._transactionService.TrnMainObj.TOTAMNT - this._transactionService.nullToZeroConverter(this._transactionService.TrnMainObj.DCAMNT) - this._transactionService.nullToZeroConverter(this._transactionService.TrnMainObj.NONTAXABLE);
        this._transactionService.TrnMainObj.TAXABLE = this._transactionService.nullToReturnZero(this._transactionService.TrnMainObj.TOTAMNT) - this._transactionService.nullToReturnZero(this._transactionService.TrnMainObj.NONTAXABLE);
        //this._transactionService.TrnMainObj.TAXABLE = this.transform(this._transactionService.TrnMainObj.TAXABLE);
        this.calculation();
    };
    DrCrFooterWithVATIncluded.prototype.VATAmountChange = function (event) {
        // this._transactionService.TrnMainObj.VATAMNT = this._transactionService.nullToZeroConverter(event.target.value);
        // this.budgetCalculation();
    };
    DrCrFooterWithVATIncluded.prototype.focusOutNonTaxableAmountChange = function ($event) {
        this.applyPipeinNonTaxable = true;
        // this._transactionService.TrnMainObj.NONTAXABLE =
        //  this._transactionService.formatetoTwoDecimal(this._transactionService.TrnMainObj.NONTAXABLE);
    };
    DrCrFooterWithVATIncluded.prototype.focusOutTaxableAmountChange = function ($event) {
        this.applyPipeinTaxable = true;
        // this._transactionService.TrnMainObj.TAXABLE =
        //  this._transactionService.formatetoTwoDecimal(this._transactionService.TrnMainObj.TAXABLE);
        // ////console.log("taxable",this._transactionService.TrnMainObj.TAXABLE)
    };
    DrCrFooterWithVATIncluded.prototype.calculation = function () {
        // this._transactionService.totalDRAmount = 0;
        // if(this._transactionService.TrnMainObj.TAXABLE == 0) return
        ////console.log("agaivat",this._transactionService.TrnMainObj.TAXABLE);
        this._transactionService.TrnMainObj.VATAMNT = this._transactionService.nullToReturnZero(this._transactionService.TrnMainObj.TAXABLE) * 0.13;
        this._transactionService.TrnMainObj.NETAMNT =
            this._transactionService.nullToReturnZero(this._transactionService.TrnMainObj.TAXABLE) +
                this._transactionService.nullToReturnZero(this._transactionService.TrnMainObj.VATAMNT) +
                this._transactionService.nullToReturnZero(this._transactionService.TrnMainObj.NONTAXABLE);
        // this._transactionService.totalDRAmount = this._transactionService.TrnMainObj.NETAMNT + this._transactionService.nullToZeroConverter(this._transactionService.nullToZeroConverter(this._transactionService.TrnMainObj.DCAMNT));
    };
    DrCrFooterWithVATIncluded.prototype.onFocus = function (value) {
        ////console.log("CheckValue",value)
    };
    DrCrFooterWithVATIncluded.prototype.transform = function (input) {
        if (!input) {
            input = 0;
        }
        return input.toFixed(2);
    };
    return DrCrFooterWithVATIncluded;
}());
DrCrFooterWithVATIncluded = __decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
        selector: "DrCrFooter_With_VAT",
        template: __webpack_require__(1308),
        styles: [__webpack_require__(9)]
    }),
    __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_3__common_repositories_masterRepo_service__["a" /* MasterRepo */],
        __WEBPACK_IMPORTED_MODULE_1__common_Transaction_Components_transaction_service__["a" /* TransactionService */],
        __WEBPACK_IMPORTED_MODULE_4__common_services_setting_service__["a" /* SettingService */],
        __WEBPACK_IMPORTED_MODULE_0__angular_core__["ChangeDetectorRef"]])
], DrCrFooterWithVATIncluded);



/***/ }),

/***/ 1277:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__common_Transaction_Components_transaction_service__ = __webpack_require__(7);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__common_repositories_masterRepo_service__ = __webpack_require__(8);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__common_services_index__ = __webpack_require__(21);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return CustomerTrackingComponent; });




var CustomerTrackingComponent = (function () {
    function CustomerTrackingComponent(masterService, _trnMainService, setting) {
        this.masterService = masterService;
        this._trnMainService = _trnMainService;
        this.setting = setting;
        this.TrnMainObj = {};
        this.isActive = false;
    }
    CustomerTrackingComponent.prototype.ngOnInit = function () {
    };
    CustomerTrackingComponent.prototype.show = function () {
        this.isActive = true;
    };
    CustomerTrackingComponent.prototype.hide = function () {
        this.isActive = false;
    };
    return CustomerTrackingComponent;
}());
CustomerTrackingComponent = __decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
        selector: "CustomerTracking",
        template: __webpack_require__(1311),
        providers: [__WEBPACK_IMPORTED_MODULE_1__common_Transaction_Components_transaction_service__["a" /* TransactionService */]],
        styles: [__webpack_require__(120)]
    }),
    __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_2__common_repositories_masterRepo_service__["a" /* MasterRepo */],
        __WEBPACK_IMPORTED_MODULE_1__common_Transaction_Components_transaction_service__["a" /* TransactionService */],
        __WEBPACK_IMPORTED_MODULE_3__common_services_index__["c" /* SettingService */]])
], CustomerTrackingComponent);



/***/ }),

/***/ 1278:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_events__ = __webpack_require__(1300);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_events___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_events__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_ng2_bootstrap__ = __webpack_require__(26);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__common_repositories__ = __webpack_require__(13);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__common_services__ = __webpack_require__(21);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__common_Transaction_Components_transaction_service__ = __webpack_require__(7);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return MultipleSeriesComponent; });






var MultipleSeriesComponent = (function () {
    function MultipleSeriesComponent(_trnMainService, masterService, setting) {
        this._trnMainService = _trnMainService;
        this.masterService = masterService;
        this.setting = setting;
        this.TrnMainObj = {};
        //   voucherType: VoucherTypeEnum;
        this.voucherType = new __WEBPACK_IMPORTED_MODULE_1_events__["EventEmitter"]();
        this.TrnMainObj = _trnMainService.TrnMainObj;
        // this.voucherType === VoucherTypeEnum.Journal
    }
    MultipleSeriesComponent.prototype.ngOnInit = function () {
    };
    MultipleSeriesComponent.prototype.ngAfterViewInit = function () {
        this._trnMainService.prefix = {};
        if (this.masterService.userSetting.ENABLEVOUCHERSERIES == 1) {
            this.childModal.show();
        }
    };
    MultipleSeriesComponent.prototype.prefixChanged = function (pref) {
        var _this = this;
        try {
            this._trnMainService.prefix = pref;
            this._trnMainService.prefix = pref;
            if (this.TrnMainObj.Mode == "NEW") {
                if (this.TrnMainObj.DIVISION == "" ||
                    this.TrnMainObj.DIVISION == null) {
                    this.TrnMainObj.DIVISION = this.setting.appSetting.DefaultDivision;
                }
                this.masterService.getVoucherNo(this.TrnMainObj, this._trnMainService.prefix.VNAME).subscribe(function (res) {
                    if (res.status == "ok") {
                        var TMain = res.result;
                        _this._trnMainService.TrnMainObj.VCHRNO = res.result.VCHRNO;
                        _this._trnMainService.TrnMainObj.VoucherAbbName = _this._trnMainService.prefix.VNAME;
                        _this._trnMainService.TrnMainObj.VoucherPrefix = _this._trnMainService.prefix.VNAME;
                    }
                    else {
                        alert("Failed to retrieve VoucherNo");
                    }
                });
            }
        }
        catch (ex) {
        }
    };
    MultipleSeriesComponent.prototype.ClosePop = function () {
        this.childModal.hide();
    };
    return MultipleSeriesComponent;
}());
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])('childModal'),
    __metadata("design:type", __WEBPACK_IMPORTED_MODULE_2_ng2_bootstrap__["b" /* ModalDirective */])
], MultipleSeriesComponent.prototype, "childModal", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])(),
    __metadata("design:type", Object)
], MultipleSeriesComponent.prototype, "voucherType", void 0);
MultipleSeriesComponent = __decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
        selector: "multiple-series",
        template: __webpack_require__(1313),
        styles: [__webpack_require__(120)]
    }),
    __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_5__common_Transaction_Components_transaction_service__["a" /* TransactionService */],
        __WEBPACK_IMPORTED_MODULE_3__common_repositories__["a" /* MasterRepo */],
        __WEBPACK_IMPORTED_MODULE_4__common_services__["c" /* SettingService */]])
], MultipleSeriesComponent);



/***/ }),

/***/ 1279:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_http__ = __webpack_require__(10);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__angular_router__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__common_services_permission__ = __webpack_require__(15);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_rxjs_subject__ = __webpack_require__(73);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_rxjs_subject___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_rxjs_subject__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__global_state__ = __webpack_require__(14);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__common_services_alert_alert_service__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_rxjs__ = __webpack_require__(24);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_rxjs___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_7_rxjs__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return BankReconciliationService; });








var BankReconciliationService = (function () {
    function BankReconciliationService(http, activatedRoute, authService, state, alertservices) {
        this.http = http;
        this.activatedRoute = activatedRoute;
        this.authService = authService;
        this.state = state;
        this.alertservices = alertservices;
        var Heading = [
            ["FirstName", "Last Name", "Email"],
        ];
    }
    Object.defineProperty(BankReconciliationService.prototype, "apiUrl", {
        get: function () {
            var url = this.state.getGlobalSetting("apiUrl");
            var apiUrl = "";
            if (!!url && url.length > 0) {
                apiUrl = url[0];
            }
            ;
            return apiUrl;
        },
        enumerable: true,
        configurable: true
    });
    BankReconciliationService.prototype.saveBank = function (bid) {
        var bodyData = { data: bid };
        return this.http.post(this.apiUrl + '/saveBankReconciliation', bodyData, this.getRequestOption())
            .map(this.extractData)
            .catch(this.handleError);
    };
    BankReconciliationService.prototype.extractData = function (res) {
        var response = res.json();
        return response || {};
    };
    BankReconciliationService.prototype.handleError = function (error) {
        return __WEBPACK_IMPORTED_MODULE_7_rxjs__["Observable"].throw(error);
    };
    BankReconciliationService.prototype.saveBankReconciliation = function (bid) {
        var _this = this;
        var res = { status: "error", result: "" };
        var returnSubject = new __WEBPACK_IMPORTED_MODULE_4_rxjs_subject__["Subject"]();
        var bodyData = { data: bid };
        this.http.post(this.apiUrl + '/saveBankReconciliation', bodyData, this.getRequestOption())
            .subscribe(function (response) {
            var data = response.json();
            if (data.status == 'ok') {
                returnSubject.next(data);
                returnSubject.unsubscribe();
                _this.alertservices.success(data.result);
            }
            else {
                returnSubject.next(data);
                returnSubject.unsubscribe();
                _this.alertservices.error("Error" + data.result);
            }
        }, function (error) {
            res.status = 'error';
            res.result = error;
            returnSubject.next(res);
            returnSubject.unsubscribe();
        });
        return returnSubject;
    };
    BankReconciliationService.prototype.getBankReconcileList = function (bid) {
        var _this = this;
        var res = { status: "error", result: "" };
        var returnSubject = new __WEBPACK_IMPORTED_MODULE_4_rxjs_subject__["Subject"]();
        this.http.post(this.apiUrl + '/getBankReconciliation', bid, this.getRequestOption())
            .subscribe(function (response) {
            var data = response.json();
            if (data.status == 'ok') {
                returnSubject.next(data);
                returnSubject.unsubscribe();
            }
            else if (data.status == 'error') {
                _this.alertservices.error("Error" + data.result);
            }
            else {
                returnSubject.next(data);
                returnSubject.unsubscribe();
            }
        }, function (error) {
            res.status = 'error';
            res.result = error;
            returnSubject.next(res);
            returnSubject.unsubscribe();
        });
        return returnSubject;
    };
    BankReconciliationService.prototype.getRequestOption = function () {
        var headers = new __WEBPACK_IMPORTED_MODULE_0__angular_http__["Headers"]({ 'Content-type': 'application/json', 'Authorization': this.authService.getAuth().token });
        return new __WEBPACK_IMPORTED_MODULE_0__angular_http__["RequestOptions"]({ headers: headers });
    };
    return BankReconciliationService;
}());
BankReconciliationService = __decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__angular_core__["Injectable"])(),
    __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_0__angular_http__["Http"], __WEBPACK_IMPORTED_MODULE_2__angular_router__["ActivatedRoute"], __WEBPACK_IMPORTED_MODULE_3__common_services_permission__["a" /* AuthService */], __WEBPACK_IMPORTED_MODULE_5__global_state__["a" /* GlobalState */], __WEBPACK_IMPORTED_MODULE_6__common_services_alert_alert_service__["a" /* AlertService */]])
], BankReconciliationService);



/***/ }),

/***/ 1280:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__common_repositories__ = __webpack_require__(13);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__common_popupLists_generic_grid_generic_popup_grid_component__ = __webpack_require__(35);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__common_Transaction_Components_transaction_service__ = __webpack_require__(7);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__common_services_alert_alert_service__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__debit_note_rate_adjustment_service__ = __webpack_require__(1281);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__angular_router__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__common_services_spinner_spinner_service__ = __webpack_require__(20);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__common_Invoice_print_invoice_print_invoice_component__ = __webpack_require__(122);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return DebitNoteRateAdjustmentComponent; });









var DebitNoteRateAdjustmentComponent = (function () {
    function DebitNoteRateAdjustmentComponent(masterService, _trnMainService, alertService, debitNoteComponentServices, arouter, spinnerService, invoicePrint) {
        this.masterService = masterService;
        this._trnMainService = _trnMainService;
        this.alertService = alertService;
        this.debitNoteComponentServices = debitNoteComponentServices;
        this.arouter = arouter;
        this.spinnerService = spinnerService;
        this.invoicePrint = invoicePrint;
        this.gridCustomerSupplierPopupSettings = new __WEBPACK_IMPORTED_MODULE_2__common_popupLists_generic_grid_generic_popup_grid_component__["b" /* GenericPopUpSettings */]();
        this.gridRefBillNoGenericPopupSettings = new __WEBPACK_IMPORTED_MODULE_2__common_popupLists_generic_grid_generic_popup_grid_component__["b" /* GenericPopUpSettings */]();
        this.gridItemGenericPopupSettings = new __WEBPACK_IMPORTED_MODULE_2__common_popupLists_generic_grid_generic_popup_grid_component__["b" /* GenericPopUpSettings */]();
        this.gridVoucherGenericPopupSettings = new __WEBPACK_IMPORTED_MODULE_2__common_popupLists_generic_grid_generic_popup_grid_component__["b" /* GenericPopUpSettings */]();
        this.activerowIndex = 0;
        this.tempProdList = [];
        this.differenceAmount = 0;
        this.totalDifferenceAmount = 0;
        this.totalGST = 0;
        this.rowAdd = false;
        this.totalAmount = 0;
        this.masterService.ShowMore = false;
        this._trnMainService.initialFormLoad(16);
        this.activeurlpath = arouter.snapshot.url.join('');
        if (this.activeurlpath == 'acvouchersdebit-note-rate-adjustment') {
            this._trnMainService.initialFormLoad(16);
            this.pageHeading = 'Debit Note-Rate Adjustment';
            this.VoucherPrefix = 'DN';
            this.gridRefBillNoGenericPopupSettings = {
                title: "Bill Details",
                apiEndpoints: "/getTrnMainPITIPagedList",
                defaultFilterIndex: 0,
                columns: [
                    {
                        key: 'CHALANNO',
                        title: 'BILL NO',
                        hidden: false,
                        noSearch: false
                    },
                    {
                        key: 'TRNDATE',
                        title: 'DATE',
                        hidden: false,
                        noSearch: false
                    },
                    {
                        key: 'TRNMODE',
                        title: 'TYPE',
                        hidden: false,
                        noSearch: false
                    },
                    {
                        key: 'NETAMNT',
                        title: 'AMOUNT',
                        hidden: false,
                        noSearch: false
                    },
                    {
                        key: 'INVOICETYPE',
                        title: 'INVOICE TYPE',
                        hidden: false,
                        noSearch: false
                    },
                ]
            };
        }
        else if (this.activeurlpath == 'acvoucherscredit-note-rate-adjustment') {
            this._trnMainService.initialFormLoad(15);
            this.pageHeading = 'Credit Note-Rate Adjustment';
            this.VoucherPrefix = 'CN';
            this.gridRefBillNoGenericPopupSettings = {
                title: "Bill Details",
                apiEndpoints: "/getTrnMainPITIPagedList",
                defaultFilterIndex: 0,
                columns: [
                    {
                        key: 'VCHRNO',
                        title: 'BILL NO',
                        hidden: false,
                        noSearch: false
                    },
                    {
                        key: 'TRNDATE',
                        title: 'DATE',
                        hidden: false,
                        noSearch: false
                    },
                    {
                        key: 'TRNMODE',
                        title: 'TYPE',
                        hidden: false,
                        noSearch: false
                    },
                    {
                        key: 'NETAMNT',
                        title: 'AMOUNT',
                        hidden: false,
                        noSearch: false
                    },
                    {
                        key: 'INVOICETYPE',
                        title: 'INVOICE TYPE',
                        hidden: false,
                        noSearch: false
                    },
                ]
            };
        }
        this.gridCustomerSupplierPopupSettings = {
            title: "Customer & Supplier ",
            apiEndpoints: "/getAccountPagedListByMapId/Details/PartyOpeningBalance",
            defaultFilterIndex: 0,
            columns: [
                {
                    key: "ACNAME",
                    title: "NAME",
                    hidden: false,
                    noSearch: false
                },
                {
                    key: "ACCODE",
                    title: "CODE",
                    hidden: false,
                    noSearch: false
                },
                {
                    key: "ADDRESS",
                    title: "ADDRESS",
                    hidden: false,
                    noSearch: false
                }
            ]
        };
        this.gridItemGenericPopupSettings = {
            title: "ITEMS",
            apiEndpoints: "/getMenuitemFromProdForReturnPagedList",
            defaultFilterIndex: 0,
            columns: [
                {
                    key: 'DESCA',
                    title: 'DESCRIPTION',
                    hidden: false,
                    noSearch: false
                },
                {
                    key: 'MENUCODE',
                    title: 'ITEM CODE',
                    hidden: false,
                    noSearch: false
                },
                {
                    key: 'STOCK',
                    title: 'STOCK',
                    hidden: false,
                    noSearch: false
                },
                {
                    key: 'MRP',
                    title: 'MRP',
                    hidden: false,
                    noSearch: false
                }
                // ,
                // {
                //     key: 'BARCODE',
                //     title: 'BARCODE',
                //     hidden: true,
                //     noSearch: false
                // }
            ]
        };
        var PID = this.masterService.PhiscalObj.PhiscalID;
        PID = PID.replace("/", "ZZ");
        var division = this.masterService.PhiscalObj.Div;
        this.gridVoucherGenericPopupSettings = {
            title: "Vouchers",
            apiEndpoints: "/getMasterPagedListOfAny/" + PID + "/vtype/" + division,
            defaultFilterIndex: 1,
            columns: [
                {
                    key: 'TDATE',
                    title: 'DATE',
                    hidden: false,
                    noSearch: false
                },
                {
                    key: 'VCHRNO',
                    title: 'VOUCHER NO.',
                    hidden: false,
                    noSearch: false
                },
                {
                    key: 'VOUCHERREMARKS',
                    title: 'TYPE',
                    hidden: false,
                    noSearch: false
                },
            ]
        };
    }
    DebitNoteRateAdjustmentComponent.prototype.ngOninit = function () {
        this._trnMainService.addRow();
        this._trnMainService.TrnMainObj.CNDN_MODE = 2;
    };
    DebitNoteRateAdjustmentComponent.prototype.RowClick = function (index) {
        this.activerowIndex = this.rowIndex = index;
        this.masterService.ShowMore = false;
    };
    DebitNoteRateAdjustmentComponent.prototype.onCustomerSupplierPopUPTab = function () {
        this.customerSupplierGeneric.show();
    };
    DebitNoteRateAdjustmentComponent.prototype.onRefBillNoPopUPTab = function (event) {
        event.preventDefault();
        this.refBillNoGeneric.show(this._trnMainService.TrnMainObj.PARAC);
    };
    DebitNoteRateAdjustmentComponent.prototype.onItemPopUPTab = function () {
        if (this._trnMainService.TrnMainObj.REFBILL == null || this._trnMainService.TrnMainObj.REFBILL == "") {
            this.alertService.info('Please Load the ref bill for return');
            return;
        }
        this.itemGeneric.show(this._trnMainService.TrnMainObj.REFBILL);
    };
    DebitNoteRateAdjustmentComponent.prototype.onItemDoubleClickCustomerSupplier = function (customerSuppleir) {
        this.CustomerSupplier = customerSuppleir.PType;
        this._trnMainService.TrnMainObj.BILLTO = customerSuppleir.ACNAME;
        this._trnMainService.TrnMainObj.PARAC = customerSuppleir.ACID;
        this._trnMainService.TrnMainObj.TRNAC = customerSuppleir.ACID;
        this._trnMainService.TrnMainObj.BILLTOADD = customerSuppleir.ADDRESS;
        this._trnMainService.TrnMainObj.TRNMODE = customerSuppleir.PMODE;
        this._trnMainService.TrnMainObj.PARTY_ORG_TYPE = customerSuppleir.ORG_TYPE;
        this._trnMainService.TrnMainObj.CREDITDAYS = customerSuppleir.CRPERIOD;
    };
    DebitNoteRateAdjustmentComponent.prototype.onItemDoubleClickRefBillNO = function (event) {
        this.CustomerSupplier = event.PType;
        this._trnMainService.TrnMainObj.REFBILL = event.VCHRNO;
        this._trnMainService.TrnMainObj.TRNMODE = event.TRNMODE;
        this._trnMainService.TrnMainObj.BILLTO = event.ACNAME;
        this._trnMainService.TrnMainObj.BILLTOADD = event.ADDRESS;
        this._trnMainService.TrnMainObj.PARAC = event.PARAC;
    };
    DebitNoteRateAdjustmentComponent.prototype.onItemDoubleClick = function (value) {
        var _this = this;
        this._trnMainService.TrnMainObj.ProdList.filter(function (x) { return !isNaN(x.ADJUSTMENTNEWRATE); }).forEach(function (i) { _this.menuCode = i.MENUCODE; });
        if (this.menuCode == value.MCODE) {
            this.alertService.info('Same Item is Selected');
        }
        else {
            this._trnMainService.TrnMainObj.AdditionalObj = {};
            this._trnMainService.TrnMainObj.AdditionalObj.TRNTYPE = value.TRNTYPE;
            this._trnMainService.TrnMainObj.ProdList[this.activerowIndex].MENUCODE = value.MCODE;
            this._trnMainService.TrnMainObj.ProdList[this.activerowIndex].ITEMDESC = value.DESCA;
            this._trnMainService.TrnMainObj.ProdList[this.activerowIndex].BATCH = value.BATCH;
            this._trnMainService.TrnMainObj.ProdList[this.activerowIndex].STOCK = value.STOCK;
            this._trnMainService.TrnMainObj.ProdList[this.activerowIndex].Quantity = value.STOCK;
            this._trnMainService.TrnMainObj.ProdList[this.activerowIndex].UNIT = value.UNIT;
            this._trnMainService.TrnMainObj.ProdList[this.activerowIndex].MRP = value.MRP;
            this._trnMainService.TrnMainObj.ProdList[this.activerowIndex].RATE = value.RATE;
            this._trnMainService.TrnMainObj.ProdList[this.activerowIndex].GSTRATE = value.GST;
            this._trnMainService.TrnMainObj.ProdList[this.activerowIndex].WEIGHT = value.GWEIGHT;
            this._trnMainService.TrnMainObj.ProdList[this.activerowIndex].CONFACTOR = 1;
            this._trnMainService.TrnMainObj.ProdList[this.activerowIndex].SELECTEDITEM = {};
            this._trnMainService.TrnMainObj.ProdList[this.activerowIndex].REMARKS = value.REMARKS;
            this._trnMainService.TrnMainObj.ProdList[this.activerowIndex].INDDISCOUNT = value.INDDISCOUNT;
            this._trnMainService.TrnMainObj.ProdList[this.activerowIndex].PrimaryDiscount = value.PrimaryDiscount;
            this._trnMainService.TrnMainObj.ProdList[this.activerowIndex].SecondaryDiscount = value.SecondaryDiscount;
            this._trnMainService.TrnMainObj.ProdList[this.activerowIndex].LiquiditionDiscount = value.LiquiditionDiscount;
            this._trnMainService.TrnMainObj.ProdList[this.activerowIndex].NETAMOUNT = ((value.STOCK * value.RATE) + (value.GST / 100));
        }
    };
    DebitNoteRateAdjustmentComponent.prototype.onBlurClick = function (index) {
        this.CustomerSupplierValidation(index);
    };
    DebitNoteRateAdjustmentComponent.prototype.CustomerSupplierValidation = function (index) {
        if (this.activeurlpath == 'acvouchersdebit-note-rate-adjustment') {
            if (this.CustomerSupplier == 'C') {
                if (this._trnMainService.nullToZeroConverter(this._trnMainService.TrnMainObj.ProdList[index].RATE) < this._trnMainService.nullToZeroConverter(this._trnMainService.TrnMainObj.ProdList[index].ADJUSTMENTNEWRATE)) {
                    this.DifferenceAmountCalculation();
                    this.rowAdd = true;
                }
                else {
                    this.alertService.info('Adjustment Rate should be grater than Previous Rate');
                }
            }
            else if (this.CustomerSupplier == 'V') {
                if (this._trnMainService.nullToZeroConverter(this._trnMainService.TrnMainObj.ProdList[index].RATE) > this._trnMainService.nullToZeroConverter(this._trnMainService.TrnMainObj.ProdList[index].ADJUSTMENTNEWRATE)) {
                    this.DifferenceAmountCalculation();
                    this.rowAdd = true;
                }
                else {
                    this.alertService.info('Adjustment Rate should be less than Previous Rate');
                }
            }
        }
        else if (this.activeurlpath == 'acvoucherscredit-note-rate-adjustment') {
            if (this.CustomerSupplier == 'C') {
                if (this._trnMainService.nullToZeroConverter(this._trnMainService.TrnMainObj.ProdList[index].RATE) > this._trnMainService.nullToZeroConverter(this._trnMainService.TrnMainObj.ProdList[index].ADJUSTMENTNEWRATE)) {
                    this.DifferenceAmountCalculation();
                    this.rowAdd = true;
                }
                else {
                    this.alertService.info('Adjustment Rate should be less than Previous Rate');
                }
            }
            else if (this.CustomerSupplier == 'V') {
                if (this._trnMainService.nullToZeroConverter(this._trnMainService.TrnMainObj.ProdList[index].RATE) < this._trnMainService.nullToZeroConverter(this._trnMainService.TrnMainObj.ProdList[index].ADJUSTMENTNEWRATE)) {
                    this.DifferenceAmountCalculation();
                    this.rowAdd = true;
                }
                else {
                    this.alertService.info('Adjustment Rate should be greater than Previous Rate');
                }
            }
        }
    };
    DebitNoteRateAdjustmentComponent.prototype.DifferenceAmountCalculation = function () {
        var _this = this;
        this.totalDifferenceAmount = 0;
        this.totalGST = 0;
        this.totalAmount = 0;
        this._trnMainService.TrnMainObj.ProdList.filter(function (x) { return !isNaN(x.ADJUSTMENTNEWRATE); }).forEach(function (i) {
            i.DIFFERENCEAMOUNT = Math.abs(i.STOCK * (i.RATE - i.ADJUSTMENTNEWRATE));
            _this.totalDifferenceAmount += Math.abs(i.STOCK * (i.RATE - i.ADJUSTMENTNEWRATE));
            i.VAT = (i.DIFFERENCEAMOUNT * (i.GSTRATE / 100));
            _this.totalGST += i.VAT;
            i.NETAMOUNT = i.DIFFERENCEAMOUNT + i.VAT;
            _this.totalAmount = _this._trnMainService.nullToZeroConverter(_this.totalAmount) + _this._trnMainService.nullToZeroConverter(i.NETAMOUNT);
        });
    };
    DebitNoteRateAdjustmentComponent.prototype.addNewRow = function (event, index) {
        var i = index + 1;
        event.preventDefault();
        this.CustomerSupplierValidation(index);
        if (this._trnMainService.TrnMainObj.Mode.toUpperCase() == "NEW") {
            if (this.rowAdd == true) {
                this._trnMainService.addRow();
                this.activerowIndex = i + 1;
                setTimeout(function () {
                    document.getElementById("Code" + i).focus();
                }, 10);
            }
        }
    };
    DebitNoteRateAdjustmentComponent.prototype.isTableRowSelected = function (i) {
        return this.activerowIndex == i;
    };
    DebitNoteRateAdjustmentComponent.prototype.deleteRow = function () {
        if (confirm("Are you sure u you want to delete the Row?")) {
            this._trnMainService.TrnMainObj.ProdList.splice(this.activerowIndex, 1);
            if (this._trnMainService.TrnMainObj.ProdList.length == 0) {
                this._trnMainService.addRow();
            }
        }
    };
    DebitNoteRateAdjustmentComponent.prototype.removeRow = function (index) {
        this._trnMainService.TrnMainObj.ProdList[index].MENUCODE = "";
        this._trnMainService.TrnMainObj.ProdList[index].ITEMDESC = "";
        this._trnMainService.TrnMainObj.ProdList[index].BATCH = "";
        this._trnMainService.TrnMainObj.ProdList[index].STOCK = null;
        this._trnMainService.TrnMainObj.ProdList[index].UNIT = null;
        this._trnMainService.TrnMainObj.ProdList[index].MRP = null;
        this._trnMainService.TrnMainObj.ProdList[index].RATE = null;
        this._trnMainService.TrnMainObj.ProdList[index].DIFFERENCEAMOUNT = null;
        this._trnMainService.TrnMainObj.ProdList[index].REMARKS = "";
    };
    DebitNoteRateAdjustmentComponent.prototype.onResetClick = function () {
        if (this.VoucherPrefix == "DN") {
            this._trnMainService.initialFormLoad(16);
            this._trnMainService.TrnMainObj.VoucherType = 16;
        }
        else {
            this._trnMainService.initialFormLoad(15);
            this._trnMainService.TrnMainObj.VoucherType = 15;
        }
        this.totalDifferenceAmount = 0;
        this.totalAmount = 0;
        this.totalGST = 0;
    };
    DebitNoteRateAdjustmentComponent.prototype.onSaveClick = function () {
        var _this = this;
        this._trnMainService.TrnMainObj.CNDN_MODE = 2;
        this._trnMainService.TrnMainObj.ProdList = this._trnMainService.TrnMainObj.ProdList.filter(function (x) { return x.MENUCODE != null && x.MENUCODE != ""; });
        this._trnMainService.TrnMainObj.JournalGstList = [];
        this._trnMainService.TrnMainObj.CNDN_MODE = 2;
        this._trnMainService.TrnMainObj.ProdList.forEach(function (x) {
            _this._trnMainService.TrnMainObj.JournalGstList.push({
                VCHRNO: _this._trnMainService.TrnMainObj.VCHRNO,
                DIVISION: _this._trnMainService.TrnMainObj.DIVISION,
                GSTRATE: x.GSTRATE,
                TAXABLE: x.GSTRATE > 0 ? x.DIFFERENCEAMOUNT : 0,
                NONTAXABLE: x.GSTRATE == 0 ? x.DIFFERENCEAMOUNT : 0,
                GST: x.VAT,
                TOTGST: _this.totalGST,
                NETAMNT: _this.totalAmount,
                ITC_ELIGIBILITY: 'Inputs',
                REFTRNAC: null,
                GSTMODE: 0,
                PARAC: _this._trnMainService.TrnMainObj.PARAC
            });
        });
        this.calculateTotalGstByRate();
        this._trnMainService.TrnMainObj.NETAMNT = this.totalAmount;
        if (this.VoucherPrefix == "DN") {
            this._trnMainService.TrnMainObj.VoucherType = 16;
            this._trnMainService.TrnMainObj.VoucherPrefix = "DN";
        }
        else {
            this._trnMainService.TrnMainObj.VoucherType = 15;
            this._trnMainService.TrnMainObj.VoucherPrefix = "CN";
        }
        this.spinnerService.show("Please wait!Saving Data.");
        this.debitNoteComponentServices.saveDebitNoteRateAdjustment(this._trnMainService.TrnMainObj)
            .subscribe(function (res) {
            if (res.status == 'ok') {
                _this.totalDifferenceAmount = 0;
                _this.totalAmount = 0;
                _this.totalGST = 0;
                _this.spinnerService.hide();
                if (_this.VoucherPrefix == "DN") {
                    _this._trnMainService.initialFormLoad(16);
                    _this._trnMainService.TrnMainObj.VoucherType = 16;
                }
                else {
                    _this._trnMainService.initialFormLoad(15);
                    _this._trnMainService.TrnMainObj.VoucherType = 15;
                }
                _this.alertService.success(res.result);
            }
            else {
                _this.spinnerService.hide();
                _this.alertService.error(res.result);
            }
        }, function (error) {
            _this.spinnerService.hide();
            _this.alertService.error(error);
        });
    };
    DebitNoteRateAdjustmentComponent.prototype.onViewClick = function () {
        if (this.activeurlpath == 'acvouchersdebit-note-rate-adjustment') {
            this.vchrnoView.show(this._trnMainService.TrnMainObj.PARAC, false, "dnlistforview");
        }
        else {
            this.vchrnoView.show(this._trnMainService.TrnMainObj.PARAC, false, "cnlistforview");
        }
    };
    DebitNoteRateAdjustmentComponent.prototype.onEditClick = function () {
        if (this.activeurlpath == 'acvouchersdebit-note-rate-adjustment') {
            this.editVchrno.show(this._trnMainService.TrnMainObj.PARAC, false, "dnlistforview");
        }
        else {
            this.editVchrno.show(this._trnMainService.TrnMainObj.PARAC, false, "cnlistforview");
        }
    };
    DebitNoteRateAdjustmentComponent.prototype.onEditVoucherDoubleClick = function (vouchers) {
        var _this = this;
        if (vouchers.CNDN_MODE == 2) {
            this.spinnerService.show("Loading Data. Please Wait!");
            this.debitNoteComponentServices.LoadRateAdjustment(vouchers.VCHRNO).subscribe(function (res) {
                var tmp = res.result.main[0];
                _this._trnMainService.TrnMainObj = res.result.main[0];
                _this._trnMainService.TrnMainObj.ProdList = res.result.prodList;
                _this.DifferenceAmountCalculation();
                _this._trnMainService.TrnMainObj.Mode = "EDIT";
                _this._trnMainService.TrnMainObj.AdditionalObj = {};
                _this._trnMainService.TrnMainObj.AdditionalObj.TRNTYPE = tmp.TRNTYPE;
                _this.CustomerSupplier = tmp.PTYPE;
                _this.spinnerService.hide();
            }, function (error) {
                _this.alertService.error(error);
                _this.spinnerService.hide();
            });
        }
        else {
            this.alertService.warning("Cannot Load Voucher!! The Voucher is " + vouchers.VOUCHERREMARKS + " based.");
        }
    };
    DebitNoteRateAdjustmentComponent.prototype.onVoucherDoubleClick = function (vouchers) {
        var _this = this;
        if (vouchers.CNDN_MODE == 2) {
            this.spinnerService.show("Loading Data. Please Wait!");
            this.debitNoteComponentServices.LoadRateAdjustment(vouchers.VCHRNO).subscribe(function (res) {
                _this._trnMainService.TrnMainObj = res.result.main[0];
                _this._trnMainService.TrnMainObj.ProdList = res.result.prodList;
                _this._trnMainService.TrnMainObj.Mode = "VIEW";
                _this.spinnerService.hide();
                _this.DifferenceAmountCalculation();
            }, function (error) {
                _this.alertService.error(error);
                _this.spinnerService.hide();
            });
        }
        else {
            this.alertService.warning("Cannot Load Voucher!! The Voucher is " + vouchers.VOUCHERREMARKS + " based.");
            return;
        }
    };
    DebitNoteRateAdjustmentComponent.prototype.calculateTotalGstByRate = function () {
    };
    DebitNoteRateAdjustmentComponent.prototype.onCancelClick = function () {
        var _this = this;
        var prod = this._trnMainService.TrnMainObj.ProdList.filter(function (x) { return x.MENUCODE != "" && x.MENUCODE != null && x.MENUCODE != undefined; });
        if (prod.length == 0) {
            this.alertService.error("Please load Voucher to Cancel");
            return;
        }
        var data = {};
        if (this.activeurlpath == 'acvouchersdebit-note-rate-adjustment') {
            data.VoucherType = 16;
            data.VoucherPrefix = "DN";
        }
        else {
            data.VoucherType = 15;
            data.VoucherPrefix = "CN";
        }
        data.VCHRNO = this._trnMainService.TrnMainObj.VCHRNO;
        data.MODE = "CANCEL";
        if (confirm("Are you sure to cancel this voucher?")) {
            this.spinnerService.show("Cancelling Voucher " + data.VCHRNO + ". Please Wait.");
            this.masterService.cancelAccoutingVoucher(data).subscribe(function (res) {
                _this.spinnerService.hide();
                _this.alertService.success(res.result);
            }, function (error) {
                _this.spinnerService.hide();
                _this.alertService.error(error);
            });
        }
    };
    DebitNoteRateAdjustmentComponent.prototype.onPrintClick = function () {
        var _this = this;
        try {
            this.spinnerService.show("Getting Invoice Data.Please Wait");
            if (this._trnMainService.TrnMainObj.ProdList.length) {
                this.masterService.getInvoiceData(this._trnMainService.TrnMainObj.VCHRNO, this._trnMainService.TrnMainObj.DIVISION, this._trnMainService.TrnMainObj.PhiscalID, this._trnMainService.TrnMainObj.PARAC, this.activeurlpath, this._trnMainService.TrnMainObj.REFBILL).subscribe(function (res) {
                    var invoicedata = res.result;
                    invoicedata.REFBILL = res.result.VCHRNO;
                    invoicedata.VCHRNO = _this._trnMainService.TrnMainObj.VCHRNO;
                    invoicedata.TRNDATE = _this._trnMainService.TrnMainObj.TRNDATE;
                    _this.invoicePrint.printInvoice(invoicedata, res.result2, "RateAdjustment", _this.activeurlpath);
                    _this.spinnerService.hide();
                }, function (error) {
                    _this.spinnerService.hide();
                    _this.alertService.error(error);
                });
            }
            else {
                this.alertService.error("Unable to Print.This voucher doesnot exist or has been cancelled");
            }
        }
        catch (e) {
            this.spinnerService.hide();
            this.alertService.error(e);
        }
    };
    return DebitNoteRateAdjustmentComponent;
}());
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])("customerSupplierGeneric"),
    __metadata("design:type", __WEBPACK_IMPORTED_MODULE_2__common_popupLists_generic_grid_generic_popup_grid_component__["c" /* GenericPopUpComponent */])
], DebitNoteRateAdjustmentComponent.prototype, "customerSupplierGeneric", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])("refBillNoGeneric"),
    __metadata("design:type", __WEBPACK_IMPORTED_MODULE_2__common_popupLists_generic_grid_generic_popup_grid_component__["c" /* GenericPopUpComponent */])
], DebitNoteRateAdjustmentComponent.prototype, "refBillNoGeneric", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])("itemGeneric"),
    __metadata("design:type", __WEBPACK_IMPORTED_MODULE_2__common_popupLists_generic_grid_generic_popup_grid_component__["c" /* GenericPopUpComponent */])
], DebitNoteRateAdjustmentComponent.prototype, "itemGeneric", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])("vchrnoView"),
    __metadata("design:type", __WEBPACK_IMPORTED_MODULE_2__common_popupLists_generic_grid_generic_popup_grid_component__["c" /* GenericPopUpComponent */])
], DebitNoteRateAdjustmentComponent.prototype, "vchrnoView", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])("editVchrno"),
    __metadata("design:type", __WEBPACK_IMPORTED_MODULE_2__common_popupLists_generic_grid_generic_popup_grid_component__["c" /* GenericPopUpComponent */])
], DebitNoteRateAdjustmentComponent.prototype, "editVchrno", void 0);
DebitNoteRateAdjustmentComponent = __decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
        selector: 'debit-note-rate-adjustment',
        template: __webpack_require__(1323),
        providers: [__WEBPACK_IMPORTED_MODULE_5__debit_note_rate_adjustment_service__["a" /* DebitNoteComponentService */], __WEBPACK_IMPORTED_MODULE_8__common_Invoice_print_invoice_print_invoice_component__["a" /* PrintInvoiceComponent */]],
        styles: [__webpack_require__(9)]
    }),
    __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1__common_repositories__["a" /* MasterRepo */],
        __WEBPACK_IMPORTED_MODULE_3__common_Transaction_Components_transaction_service__["a" /* TransactionService */],
        __WEBPACK_IMPORTED_MODULE_4__common_services_alert_alert_service__["a" /* AlertService */],
        __WEBPACK_IMPORTED_MODULE_5__debit_note_rate_adjustment_service__["a" /* DebitNoteComponentService */],
        __WEBPACK_IMPORTED_MODULE_6__angular_router__["ActivatedRoute"],
        __WEBPACK_IMPORTED_MODULE_7__common_services_spinner_spinner_service__["a" /* SpinnerService */],
        __WEBPACK_IMPORTED_MODULE_8__common_Invoice_print_invoice_print_invoice_component__["a" /* PrintInvoiceComponent */]])
], DebitNoteRateAdjustmentComponent);



/***/ }),

/***/ 1281:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_http__ = __webpack_require__(10);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__angular_router__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__common_services_permission__ = __webpack_require__(15);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__app_global_state__ = __webpack_require__(14);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__common_services_alert_alert_service__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_rxjs__ = __webpack_require__(24);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_rxjs___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_6_rxjs__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return DebitNoteComponentService; });







var DebitNoteComponentService = (function () {
    function DebitNoteComponentService(http, activatedRoute, authService, state, alertservices) {
        this.http = http;
        this.activatedRoute = activatedRoute;
        this.authService = authService;
        this.state = state;
        this.alertservices = alertservices;
        this.activeurlpath = activatedRoute.snapshot.url.join('');
    }
    Object.defineProperty(DebitNoteComponentService.prototype, "apiUrl", {
        get: function () {
            var url = this.state.getGlobalSetting("apiUrl");
            var apiUrl = "";
            if (!!url && url.length > 0) {
                apiUrl = url[0];
            }
            ;
            return apiUrl;
        },
        enumerable: true,
        configurable: true
    });
    DebitNoteComponentService.prototype.saveDebitNoteRateAdjustment = function (bid) {
        if (this.activeurlpath == 'acvouchersdebit-note-rate-adjustment') {
            this.bodyData = { type: 'DebitNoteRateAdjustment', data: bid };
        }
        else if (this.activeurlpath == 'acvoucherscredit-note-rate-adjustment') {
            this.bodyData = { type: 'CreditNoteRateAdjustment', data: bid };
        }
        // let bodyData = {mode:'query',data:{BID:Type}};
        return this.http.post(this.apiUrl + '/saveDebitNoteRateAdjustment', this.bodyData, this.getRequestOption())
            .map(this.extractData)
            .catch(this.handleError);
    };
    DebitNoteComponentService.prototype.extractData = function (res) {
        var response = res.json();
        return response || {};
    };
    DebitNoteComponentService.prototype.handleError = function (error) {
        return __WEBPACK_IMPORTED_MODULE_6_rxjs__["Observable"].throw(error);
    };
    DebitNoteComponentService.prototype.LoadRateAdjustment = function (bid) {
        var bodyData = { data: bid };
        return this.http.post(this.apiUrl + '/getLoadNewRateAdjustment', bodyData, this.getRequestOption())
            .map(this.extractData)
            .catch(this.handleError);
    };
    DebitNoteComponentService.prototype.getRequestOption = function () {
        var headers = new __WEBPACK_IMPORTED_MODULE_0__angular_http__["Headers"]({ 'Content-type': 'application/json', 'Authorization': this.authService.getAuth().token });
        return new __WEBPACK_IMPORTED_MODULE_0__angular_http__["RequestOptions"]({ headers: headers });
    };
    return DebitNoteComponentService;
}());
DebitNoteComponentService = __decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__angular_core__["Injectable"])(),
    __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_0__angular_http__["Http"], __WEBPACK_IMPORTED_MODULE_2__angular_router__["ActivatedRoute"], __WEBPACK_IMPORTED_MODULE_3__common_services_permission__["a" /* AuthService */], __WEBPACK_IMPORTED_MODULE_4__app_global_state__["a" /* GlobalState */], __WEBPACK_IMPORTED_MODULE_5__common_services_alert_alert_service__["a" /* AlertService */]])
], DebitNoteComponentService);



/***/ }),

/***/ 1282:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__common_Transaction_Components_transaction_service__ = __webpack_require__(7);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__angular_forms__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__common_services__ = __webpack_require__(21);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__angular_router__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__common_repositories_masterRepo_service__ = __webpack_require__(8);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_rxjs_subject__ = __webpack_require__(73);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_rxjs_subject___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_6_rxjs_subject__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_rxjs_Observable__ = __webpack_require__(22);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_rxjs_Observable___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_7_rxjs_Observable__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__angular_platform_browser__ = __webpack_require__(62);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return testComponent; });









var testComponent = (function () {
    function testComponent(masterService, _transactionService, fb, _activatedRoute, _router, settingService, renderer, _sanitizer) {
        var _this = this;
        this.masterService = masterService;
        this._transactionService = _transactionService;
        this.fb = fb;
        this._activatedRoute = _activatedRoute;
        this._router = _router;
        this.settingService = settingService;
        this.renderer = renderer;
        this._sanitizer = _sanitizer;
        this.trnMain = {};
        this.trnTran = {};
        this.subjectACList = new __WEBPACK_IMPORTED_MODULE_6_rxjs_subject__["Subject"]();
        this.subcriptions = [];
        this.observableAclist = function () {
            //let serv=this._service
            try {
                return _this.masterService.getAccount('journal-ObservableAclist');
            }
            catch (ex) {
                alert(ex);
            }
        };
        this.observableAclistAcname = function (keyword) {
            //let serv=this._service
            try {
                if (keyword) {
                    return _this.masterService.getAccoutFilteredObs(keyword, 1);
                }
                else {
                    return __WEBPACK_IMPORTED_MODULE_7_rxjs_Observable__["Observable"].of([]);
                }
            }
            catch (ex) {
                alert(ex);
            }
        };
        //aclist = this._service.accountList;
        this.observableAclistAcid = function (keyword) {
            //let serv=this._service
            try {
                if (keyword) {
                    return _this.masterService.getAccoutFilteredObs(keyword, 0);
                }
                else {
                    return __WEBPACK_IMPORTED_MODULE_7_rxjs_Observable__["Observable"].of([]);
                }
            }
            catch (ex) {
                alert(ex);
            }
        };
        this.autocompleListFormatter = function (data) {
            try {
                var html = "<span>" + data.ACNAME + "</span>";
                return _this._sanitizer.bypassSecurityTrustHtml(html);
            }
            catch (ex) {
                alert(ex);
            }
        };
        this.autocompleListAcidFormatter = function (data) {
            try {
                var html = "<span>" + data.ACCODE + "</span>";
                return _this._sanitizer.bypassSecurityTrustHtml(html);
            }
            catch (ex) {
                alert(ex);
            }
        };
        try {
            this.trnMain = this._transactionService.TrnMainObj;
            this.masterService.refreshAccountList('Journal-constructor');
        }
        catch (ex) {
            alert(ex);
        }
    }
    testComponent.prototype.AutoSelectAccodeChange = function ($event, index) {
        try {
            var ret = this.masterService.accountList.find(function (x) { return x.ACCODE == $event; });
            if (ret) {
                this.trnMain.TrntranList[index].AccountItem = ret;
                this.trnMain.TrntranList[index].acitem = ret;
            }
        }
        catch (error) {
            this.trnMain.TrntranList[index].AccountItem = undefined;
        }
    };
    testComponent.prototype.AutoSelectAcnameChange = function ($event, index) {
        try {
            if (typeof ($event) == 'object') {
                var ac = $event;
                this.trnMain.TrntranList[index].AccountItem = $event;
                this.trnMain.TrntranList[index].AccountItem.ACCODE = ac.ACCODE;
            }
            else {
                this.trnMain.TrntranList[index].AccountItem.ACCODE = "";
            }
        }
        catch (error) {
            this.trnMain.TrntranList[index].AccountItem.ACCODE = "";
        }
    };
    testComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.trntranForm = this.fb.group({
            journal: this.fb.array([]),
        });
        this.trnTranControl = this.trntranForm.controls['journal'];
        this.trntranForm.controls.journal.valueChanges.subscribe(function (form) {
            _this.trnMain.TrntranList = _this.trntranForm.get('journal').value;
        });
        this.initTrnTranList();
    };
    testComponent.prototype.initTrnTranList = function () {
        this.trnTranControl = this.trntranForm.controls['journal'];
        var journalGroup;
        journalGroup = this.fb.group({
            AccountItem: "",
            TRNDATE: "",
            inputMode: true,
            editMode: false,
        });
        this.trnTranControl.push(journalGroup);
    };
    testComponent.prototype.addRow = function (index) {
        for (var i = 0; i < this.trnTranControl.length; i++) {
            this.trnTranControl.at(i).get('inputMode').patchValue(false);
        }
        this.initTrnTranList();
    };
    testComponent.prototype.editRow = function (index) {
        this.trnTranControl.at(index).get('inputMode').patchValue(true);
    };
    testComponent.prototype.saveRow = function (index) {
        this.trnTranControl.at(index).get('inputMode').patchValue(false);
    };
    return testComponent;
}());
testComponent = __decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
        selector: 'test-entry',
        template: "\n    <form [formGroup]=\"trntranForm\">\n        <div formArrayName=\"journal\">\n            <div *ngFor=\"let tList of trntranForm.controls.journal.controls;let i=index\">\n                <div [formGroupName]=\"i\">\n                    <div *ngIf=\"trnMain.TrntranList[i].inputMode == true\">\n                        <label>{{i+1}}Input</label>\n\n                        <input type=\"text\" ngui-auto-complete [source]=\"observableAclistAcname.bind(this)\" style=\"height:23px;\" max-num-list=\"25\"\n                                list-formatter=\"ACNAME\" formControlName=\"AccountItem\"\n                                (change)=\"AutoSelectAcnameChange($event,i)\"\n                                display-property-name=\"ACNAME\"/>\n                        <input type=\"date\" formControlName=\"TRNDATE\"/>\n                        <button (click)=\"addRow(i)\">Add</button>\n                        <button (click)=\"saveRow(i)\">Save</button>\n                    </div>\n\n                    <div *ngIf=\"trnMain.TrntranList[i].inputMode == false\">\n                        <label>{{i+1}}Input</label>\n                        {{trnMain.TrntranList[i].AccountItem.ACNAME}}\n                        {{trnMain.TrntranList[i].TRNDATE}}\n                        <button (click)=\"editRow(i)\">Edit</button>\n\n                    </div>\n                </div>\n            </div>\n        </div>\n    </form>\n    ",
        styles: [__webpack_require__(1266), __webpack_require__(120)],
    }),
    __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_5__common_repositories_masterRepo_service__["a" /* MasterRepo */], __WEBPACK_IMPORTED_MODULE_1__common_Transaction_Components_transaction_service__["a" /* TransactionService */], __WEBPACK_IMPORTED_MODULE_2__angular_forms__["FormBuilder"], __WEBPACK_IMPORTED_MODULE_4__angular_router__["ActivatedRoute"], __WEBPACK_IMPORTED_MODULE_4__angular_router__["Router"], __WEBPACK_IMPORTED_MODULE_3__common_services__["c" /* SettingService */], __WEBPACK_IMPORTED_MODULE_0__angular_core__["Renderer"], __WEBPACK_IMPORTED_MODULE_8__angular_platform_browser__["DomSanitizer"]])
], testComponent);



/***/ }),

/***/ 1283:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__common_Transaction_Components_transaction_service__ = __webpack_require__(7);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__common_interfaces_TrnMain__ = __webpack_require__(25);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__common_repositories_masterRepo_service__ = __webpack_require__(8);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__angular_forms__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__common_services__ = __webpack_require__(21);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__common_services_permission_authService_service__ = __webpack_require__(17);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return TrnMainJournalEntryComponent; });







var TrnMainJournalEntryComponent = (function () {
    function TrnMainJournalEntryComponent(masterService, _trnMainService, _fb, setting, authservice) {
        this.masterService = masterService;
        this._trnMainService = _trnMainService;
        this._fb = _fb;
        this.setting = setting;
        this.authservice = authservice;
        this.TrnMainObj = {};
        this.mode = "NEW";
        this.modeTitle = '';
        this.divisionList = [];
        this.showOrder = false;
        this.subscriptions = [];
        this.userProfile = {};
        this.TrnMainObj = _trnMainService.TrnMainObj;
        this.AppSettings = this.setting.appSetting;
        this.userProfile = authservice.getUserProfile();
        this.voucherType = this.TrnMainObj.VoucherType;
        this.TrnMainObj.BRANCH = this.userProfile.userBranch;
        this.TrnMainObj.DIVISION = this.userProfile.userDivision;
        this.masterService.refreshTransactionList();
        if (this.TrnMainObj.VoucherType == __WEBPACK_IMPORTED_MODULE_2__common_interfaces_TrnMain__["a" /* VoucherTypeEnum */].CreditNote || this.TrnMainObj.VoucherType == __WEBPACK_IMPORTED_MODULE_2__common_interfaces_TrnMain__["a" /* VoucherTypeEnum */].SalesReturn) {
            this.transactionType = 'creditnote';
        }
    }
    TrnMainJournalEntryComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.TrnMainForm = this._fb.group({
            REMARKS: '',
            DIFFERENCE: '',
        });
        if (this.TrnMainObj.Mode == "VIEW") {
            this.TrnMainForm.get('REMARKS').disable();
        }
        this.TrnMainForm.get('DIFFERENCE').disable();
        this.TrnMainForm.valueChanges.subscribe(function (form) {
            _this.TrnMainObj.REMARKS = form.REMARKS;
        });
        if (this.TrnMainObj.Mode == "EDIT" || this.TrnMainObj.Mode == "VIEW") {
            this._trnMainService.loadDataObservable.subscribe(function (data) {
                try {
                    _this.TrnMainForm.patchValue({
                        REMARKS: data.REMARKS,
                        DIFFERENCE: _this._trnMainService.differenceAmount
                    });
                }
                catch (e) {
                }
            });
        }
    };
    return TrnMainJournalEntryComponent;
}());
TrnMainJournalEntryComponent = __decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
        selector: "trnmain-journal-entry",
        template: __webpack_require__(1328),
        styles: [__webpack_require__(9)],
    }),
    __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_3__common_repositories_masterRepo_service__["a" /* MasterRepo */],
        __WEBPACK_IMPORTED_MODULE_1__common_Transaction_Components_transaction_service__["a" /* TransactionService */],
        __WEBPACK_IMPORTED_MODULE_4__angular_forms__["FormBuilder"],
        __WEBPACK_IMPORTED_MODULE_5__common_services__["c" /* SettingService */],
        __WEBPACK_IMPORTED_MODULE_6__common_services_permission_authService_service__["a" /* AuthService */]])
], TrnMainJournalEntryComponent);



/***/ }),

/***/ 1284:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__common_Transaction_Components_transaction_service__ = __webpack_require__(7);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__common_services__ = __webpack_require__(21);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__angular_router__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__common_repositories_masterRepo_service__ = __webpack_require__(8);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_rxjs_subject__ = __webpack_require__(73);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_rxjs_subject___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5_rxjs_subject__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_rxjs_Observable__ = __webpack_require__(22);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_rxjs_Observable___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_6_rxjs_Observable__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__angular_platform_browser__ = __webpack_require__(62);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__common_popupLists_generic_grid_generic_popup_grid_component__ = __webpack_require__(35);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__common_services_alert_alert_service__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__common_services_spinner_spinner_service__ = __webpack_require__(20);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return TrnTranJournalEntryComponent; });











var TrnTranJournalEntryComponent = (function () {
    function TrnTranJournalEntryComponent(masterService, _trnMainService, _activatedRoute, router, settingService, renderer, _sanitizer, alertService, loadingSerive) {
        var _this = this;
        this.masterService = masterService;
        this._trnMainService = _trnMainService;
        this._activatedRoute = _activatedRoute;
        this.router = router;
        this.settingService = settingService;
        this.renderer = renderer;
        this._sanitizer = _sanitizer;
        this.alertService = alertService;
        this.loadingSerive = loadingSerive;
        this.gridACListPopupSettings = new __WEBPACK_IMPORTED_MODULE_8__common_popupLists_generic_grid_generic_popup_grid_component__["b" /* GenericPopUpSettings */]();
        this.hideSubledgerRowGrid = true;
        this.account = {};
        //public accountList: TAcList[] = [];
        this.subledgerItemList = [];
        this.costCenterList = [];
        this.trnMain = {};
        this.trnTran = {};
        this.subLedgerList = [];
        this.focusDr = false;
        this.focusCr = false;
        this.hasCheque = true;
        this.hasCostCenter = true;
        this.hasAddBtn = false;
        this.hasLedgerAddBtn = false;
        this.showSubLedger = false;
        this.showHelp = true;
        this.showWholeSubledger = true;
        this.acCodeFocused = false;
        this.acNameFocused = false;
        this.subAcCodeFocused = false;
        this.subAcNameFocused = false;
        this.enableACCodeFocus = false;
        this.enableACNameFocus = true;
        this.showSubLedgerList = false;
        this.subjectACList = new __WEBPACK_IMPORTED_MODULE_5_rxjs_subject__["Subject"]();
        this.viewMode = false;
        this.subcriptions = [];
        this.observableAclist = function () {
            //let serv=this._service
            try {
                return _this.masterService.getAccount('journal-ObservableAclist');
            }
            catch (ex) {
                alert(ex);
            }
        };
        this.observableAclistAcname = function (keyword) {
            //let serv=this._service
            try {
                if (keyword) {
                    return _this.masterService.getAccoutFilteredObs(keyword, 1);
                }
                else {
                    return __WEBPACK_IMPORTED_MODULE_6_rxjs_Observable__["Observable"].of([]);
                }
            }
            catch (ex) {
                alert(ex);
            }
        };
        //aclist = this._service.accountList;
        this.observableAclistAcid = function (keyword) {
            //let serv=this._service
            try {
                if (keyword) {
                    return _this.masterService.getAccoutFilteredObs(keyword, 0);
                }
                else {
                    return __WEBPACK_IMPORTED_MODULE_6_rxjs_Observable__["Observable"].of([]);
                }
            }
            catch (ex) {
                alert(ex);
            }
        };
        this.autocompleListFormatter = function (data) {
            try {
                var html = "<span>" + data.ACNAME + "</span>";
                return _this._sanitizer.bypassSecurityTrustHtml(html);
            }
            catch (ex) {
                alert(ex);
            }
        };
        this.autocompleListAcidFormatter = function (data) {
            try {
                var html = "<span>" + data.ACCODE + "</span>";
                return _this._sanitizer.bypassSecurityTrustHtml(html);
            }
            catch (ex) {
                alert(ex);
            }
        };
        this.selectedIndex = 0;
        try {
            this.trnMain = _trnMainService.TrnMainObj;
            this._trnMainService.saveDisable = true;
            this.showWholeSubledger = this.settingService.appSetting.enableSubLedger;
            this.hasCostCenter = this.settingService.appSetting.enableCostCenter;
            this.hasCheque = this.settingService.appSetting.enableChequeInEntry;
            this.enableACCodeFocus = this.settingService.appSetting.enableACCodeFocus;
            this.enableACNameFocus = this.settingService.appSetting.enableACNameFocus;
            this.masterService.refreshAccountList('Journal-constructor');
            this.gridACListPopupSettings = {
                title: "Accounts",
                apiEndpoints: "/getAccountPagedList",
                defaultFilterIndex: 1,
                columns: [
                    {
                        key: 'ACCODE',
                        title: 'A/C CODE',
                        hidden: false,
                        noSearch: false
                    },
                    {
                        key: 'ACNAME',
                        title: 'A/C NAME',
                        hidden: false,
                        noSearch: false
                    }
                ]
            };
        }
        catch (ex) {
            alert(ex);
        }
    }
    TrnTranJournalEntryComponent.prototype.AutoSelectAccodeChange = function ($event, index) {
        try {
            var ret = this.masterService.accountList.find(function (x) { return x.ACCODE == $event; });
            if (ret) {
                this.trnMain.TrntranList[index].AccountItem = ret;
                this.trnMain.TrntranList[index].acitem = ret;
            }
            this.trnMain.TrntranList[index].hasDebit = true;
            this.trnMain.TrntranList[index].hasCredit = true;
            this.trnMain.TrntranList[index].SubledgerTranList = [];
            this.trnMain.TrntranList[index].DRAMNT = null;
            this.trnMain.TrntranList[index].CRAMNT = null;
            this.checkDifference();
            this.hasAddBtn = false;
            this.focusDr = false;
            this.focusCr = false;
            this.acNameIndex = index;
            this.trnMain.TrntranList[index].acType = null;
            this.trnMain.TrntranList[index].drBGColor = "";
            this.trnMain.TrntranList[index].drColor = "";
            this.trnMain.TrntranList[index].crBGColor = "";
            this.trnMain.TrntranList[index].crColor = "";
        }
        catch (error) {
            this.trnMain.TrntranList[index].AccountItem = undefined;
        }
    };
    TrnTranJournalEntryComponent.prototype.AutoSelectAcnameChange = function ($event, index) {
        try {
            if (typeof ($event) == 'object') {
                var ac = $event;
                this.trnMain.TrntranList[index].AccountItem = $event;
                this.trnMain.TrntranList[index].AccountItem.ACCODE = ac.ACCODE;
            }
            else {
                this.trnMain.TrntranList[index].AccountItem.ACCODE = "";
            }
            this.trnMain.TrntranList[index].hasDebit = true;
            this.trnMain.TrntranList[index].hasCredit = true;
            this.trnMain.TrntranList[index].SubledgerTranList = [];
            this.trnMain.TrntranList[index].DRAMNT = null;
            this.trnMain.TrntranList[index].CRAMNT = null;
            this.checkDifference();
            this.hasAddBtn = false;
            this.focusDr = false;
            this.focusCr = false;
            this.acNameIndex = index;
            this.trnMain.TrntranList[index].acType = null;
            this.trnMain.TrntranList[index].drBGColor = "";
            this.trnMain.TrntranList[index].drColor = "";
            this.trnMain.TrntranList[index].crBGColor = "";
            this.trnMain.TrntranList[index].crColor = "";
        }
        catch (error) {
            this.trnMain.TrntranList[index].AccountItem.ACCODE = "";
        }
    };
    TrnTranJournalEntryComponent.prototype.hideDetail = function () {
        this.masterService.ShowMore = false;
    };
    TrnTranJournalEntryComponent.prototype.showAcList = function (i) {
        this.selectedIndex = i;
        this.genericGridACList.show();
    };
    TrnTranJournalEntryComponent.prototype.onAcSelect = function (acItem) {
        try {
            if (typeof (acItem) == 'object') {
                var ac = acItem;
                this.trnMain.TrntranList[this.selectedIndex].AccountItem = acItem;
                this.trnMain.TrntranList[this.selectedIndex].AccountItem.ACCODE = ac.ACCODE;
            }
            else {
                this.trnMain.TrntranList[this.selectedIndex].AccountItem.ACCODE = "";
            }
            this.trnMain.TrntranList[this.selectedIndex].hasDebit = true;
            this.trnMain.TrntranList[this.selectedIndex].hasCredit = true;
            this.trnMain.TrntranList[this.selectedIndex].SubledgerTranList = [];
            this.trnMain.TrntranList[this.selectedIndex].DRAMNT = null;
            this.trnMain.TrntranList[this.selectedIndex].CRAMNT = null;
            this.checkDifference();
            this.hasAddBtn = false;
            this.focusDr = false;
            this.focusCr = false;
            this.acNameIndex = this.selectedIndex;
            this.trnMain.TrntranList[this.selectedIndex].acType = null;
            this.trnMain.TrntranList[this.selectedIndex].drBGColor = "";
            this.trnMain.TrntranList[this.selectedIndex].drColor = "";
            this.trnMain.TrntranList[this.selectedIndex].crBGColor = "";
            this.trnMain.TrntranList[this.selectedIndex].crColor = "";
        }
        catch (error) {
            this.trnMain.TrntranList[this.selectedIndex].AccountItem.ACCODE = "";
        }
        this.trnMain.TrntranList[this.selectedIndex].acitem = acItem;
    };
    TrnTranJournalEntryComponent.prototype.ngOnInit = function () {
        var _this = this;
        try {
            this.trnMain.TrntranList = [];
            this.masterService.refreshTransactionList();
            this.masterService.getSubLedgerList().subscribe(function (res) { _this.subledgerItemList = res; }, function (error) {
                _this.masterService.resolveError(error, "trntran-journal-entry - getSubLedgerList");
            });
            if (this.trnMain.Mode == "VIEW") {
                this.viewMode = true;
            }
            if (this.trnMain.Mode == "EDIT" || this.trnMain.Mode == "VIEW") {
                this._trnMainService.loadDataObservable.subscribe(function (data) {
                    try {
                        _this.trnMain.TrntranList = data.TrntranList;
                        for (var t in _this.trnMain.TrntranList) {
                            _this.trnMain.TrntranList[t].inputMode = false;
                            _this.trnMain.TrntranList[t].editMode = false;
                            _this.trnMain.TrntranList[t].AccountItem = _this.masterService.accountList.filter(function (y) { return y.ACID == _this.trnMain.TrntranList[t].A_ACID; })[0];
                            _this.trnMain.TrntranList[t].acitem = _this.trnMain.TrntranList[t].AccountItem;
                            if (_this.trnMain.TrntranList[t].AccountItem != null && _this.trnMain.TrntranList[t].AccountItem.HASSUBLEDGER == 1) {
                                _this.trnMain.TrntranList[t].SubledgerTranList.forEach(function (z) { z.inputMode = false, z.editMode = false, z.SubledgerItem = _this.subledgerItemList.filter(function (w) { return w.ACID == z.A_ACID; })[0]; });
                                if (_this.viewMode == false) {
                                    var nullsl = {};
                                    nullsl.SubledgerItem = {};
                                    nullsl.inputMode = true;
                                    nullsl.editMode = false;
                                    _this.trnMain.TrntranList[t].SubledgerTranList.push(nullsl);
                                }
                            }
                        }
                        if (_this.viewMode == false) {
                            var nulltt = {};
                            nulltt.AccountItem = {};
                            nulltt.inputMode = true;
                            nulltt.editMode = false;
                            _this.trnMain.TrntranList.push(nulltt);
                        }
                        if ((_this.drTotal == _this.crTotal) && _this.drTotal != 0 && _this.crTotal != 0) {
                            _this._trnMainService.saveDisable = false;
                        }
                        else {
                            _this._trnMainService.saveDisable = true;
                        }
                    }
                    catch (e) {
                    }
                }, function (error) {
                    _this.masterService.resolveError(error, "journal - loadDataObservable");
                });
            }
            else {
                var newRow = {};
                newRow.inputMode = true;
                newRow.editMode = false;
                newRow.AccountItem = {};
                this.trnMain.TrntranList.push(newRow);
                var uuidV1 = __webpack_require__(32);
                this.trnMain.guid = uuidV1();
            }
        }
        catch (ex) {
            alert(ex);
        }
    };
    TrnTranJournalEntryComponent.prototype.preventInput = function ($event) {
        $event.preventDefault();
        return false;
    };
    TrnTranJournalEntryComponent.prototype.addRow = function (index) {
        try {
            var currentObj = this.trnMain.TrntranList[index];
            if (this.trnMain.TrntranList[index + 1]) {
                return;
            }
            if (!currentObj.AccountItem || currentObj.AccountItem.ACCODE == undefined || currentObj.AccountItem.ACCODE == "") {
                this.alertService.info("Please Select A/C");
                return;
            }
            if ((currentObj.DRAMNT == 0 || currentObj.DRAMNT == null) && (currentObj.CRAMNT == 0 || currentObj.CRAMNT == null)) {
                this.alertService.info("Debit Amount or Credit Amount is Required.");
                return;
            }
            var newRow = {};
            var newaclist = {};
            newRow.AccountItem = newaclist;
            newRow.inputMode = true;
            newRow.editMode = true;
            this.trnMain.TrntranList.push(newRow);
        }
        catch (ex) {
            alert(ex);
        }
    };
    TrnTranJournalEntryComponent.prototype.removeRow = function (index) {
        try {
            if (this.trnMain.TrntranList[index].inputMode == true && this.trnMain.TrntranList[index].editMode == false) {
                this.trnMain.TrntranList[index] = {};
                this.trnMain.TrntranList[index].AccountItem = {};
                this.trnMain.TrntranList[index].SubledgerTranList = [];
                this.showSubLedger = false;
                this.showHelp = true;
                this.trnMain.TrntranList[index].inputMode = true;
                this.trnMain.TrntranList[index].editMode = false;
                this.trnMain.TrntranList[index].drBGColor = "";
                this.trnMain.TrntranList[index].drColor = "";
                this.trnMain.TrntranList[index].crBGColor = "";
                this.trnMain.TrntranList[index].crColor = "";
                this.trnMain.TrntranList[index].hasDebit = true;
                this.trnMain.TrntranList[index].hasCredit = true;
                this.changeCredit(null, index);
                this.changeDebit(null, index);
                this.hasAddBtn = false;
            }
            else {
                this.trnMain.TrntranList.splice(index, 1);
                this.hasAddBtn = false;
                this.trnMain.TrntranList[index].DRAMNT = null;
                this.trnMain.TrntranList[index].CRAMNT = null;
                this.showSubLedger = false;
                this.showHelp = true;
                this.changeCredit(null, index);
                this.changeDebit(null, index);
            }
        }
        catch (ex) {
            alert(ex);
        }
    };
    TrnTranJournalEntryComponent.prototype.editRow = function (index) {
        try {
            this.trnMain.TrntranList[index].inputMode = true;
            this.trnMain.TrntranList[index].editMode = true;
            if (this.trnMain.TrntranList[index].DRAMNT != null && this.trnMain.TrntranList[index].DRAMNT != 0) {
                this.trnMain.TrntranList[index].hasDebit = true;
                this.trnMain.TrntranList[index].hasCredit = false;
                if (this.trnMain.TrntranList[index].AccountItem != null && this.trnMain.TrntranList[index].AccountItem.HASSUBLEDGER == 1) {
                    this.trnMain.TrntranList[index].drBGColor = "grey";
                    this.trnMain.TrntranList[index].drColor = "white";
                    this.trnMain.TrntranList[index].hasDebit = false;
                }
            }
            else if (this.trnMain.TrntranList[index].CRAMNT != null && this.trnMain.TrntranList[index].CRAMNT != 0) {
                this.trnMain.TrntranList[index].hasDebit = false;
                this.trnMain.TrntranList[index].hasCredit = true;
                if (this.trnMain.TrntranList[index].AccountItem != null && this.trnMain.TrntranList[index].AccountItem.HASSUBLEDGER == 1) {
                    this.trnMain.TrntranList[index].crBGColor = "grey";
                    this.trnMain.TrntranList[index].crColor = "white";
                    this.trnMain.TrntranList[index].hasCredit = false;
                }
            }
            if (this.trnMain.TrntranList[index].AccountItem != null && this.trnMain.TrntranList[index].AccountItem.HASSUBLEDGER == 1 && this.trnMain.TrntranList[index].DRAMNT != 0 && this.trnMain.TrntranList[index].DRAMNT != null) {
                this.subLedgerList = this.trnMain.TrntranList[index].SubledgerTranList;
                this.showSubLedger = true;
                this.showHelp = false;
                this.trnMain.TrntranList[index].acType = "Cr.";
                this.showSubLedgerList = false;
            }
            else if (this.trnMain.TrntranList[index].AccountItem != null && this.trnMain.TrntranList[index].AccountItem.HASSUBLEDGER == 1 && this.trnMain.TrntranList[index].CRAMNT != 0 && this.trnMain.TrntranList[index].CRAMNT != null) {
                this.subLedgerList = this.trnMain.TrntranList[index].SubledgerTranList;
                this.showSubLedger = true;
                this.showHelp = false;
                this.trnMain.TrntranList[index].acType = "Dr.";
                this.showSubLedgerList = false;
            }
            else {
                this.showSubLedger = false;
                this.showHelp = true;
                this.trnMain.TrntranList[index].acType = null;
                this.showSubLedgerList = false;
            }
            this.showAmount = this.trnMain.TrntranList[index].acType;
        }
        catch (ex) {
            alert(ex);
        }
    };
    TrnTranJournalEntryComponent.prototype.saveRow = function (index) {
        try {
            this.trnMain.TrntranList[index].inputMode = false;
            this.trnMain.TrntranList[index].editMode = false;
            if (this.trnMain.TrntranList[index].AccountItem != null && this.trnMain.TrntranList[index].AccountItem.HASSUBLEDGER == 1) {
                this.showSubLedger = false;
                this.showHelp = false;
                this.showSubLedgerList = true;
            }
        }
        catch (ex) {
            alert(ex);
        }
    };
    TrnTranJournalEntryComponent.prototype.addLedgerRow = function (index) {
        try {
            this.subLedgerList.forEach(function (x) { return x.inputMode = false; });
            var newSubLedger = {};
            newSubLedger.SubledgerItem = {};
            newSubLedger.inputMode = true;
            newSubLedger.editMode = false;
            this.subLedgerList.push(newSubLedger);
            this.hasLedgerAddBtn = false;
            if (this.enableACCodeFocus == true) {
                this.subAcCodeFocused = true;
            }
            else if (this.enableACNameFocus) {
                this.subAcNameFocused = true;
            }
        }
        catch (ex) {
            alert(ex);
        }
    };
    TrnTranJournalEntryComponent.prototype.removeLedgerRow = function (index) {
        try {
            if (this.subLedgerList[index].inputMode == true && this.subLedgerList[index].editMode == false) {
                this.subLedgerList[index].SubledgerItem = {};
                this.subLedgerList[index] = {};
                this.subLedgerList[index].inputMode = true;
                this.subLedgerList[index].editMode = false;
                this.subCreditTotal();
                this.subDebitTotal();
                this.debitTotal();
                this.creditTotal();
                this.checkDifference();
                this.changeSubCredit(null, index);
                this.changeSubDebit(null, index);
                this.hasLedgerAddBtn = false;
            }
            else {
                this.subLedgerList.splice(index, 1);
                this.subCreditTotal();
                this.subDebitTotal();
                this.debitTotal();
                this.creditTotal();
                this.checkDifference();
                this.changeSubCredit(null, index);
                this.changeSubDebit(null, index);
                this.hasLedgerAddBtn = false;
            }
        }
        catch (ex) {
            alert(ex);
        }
    };
    TrnTranJournalEntryComponent.prototype.editLedgerRow = function (index) {
        try {
            this.subLedgerList[index].inputMode = true;
            this.subLedgerList[index].editMode = true;
        }
        catch (ex) {
            alert(ex);
        }
    };
    TrnTranJournalEntryComponent.prototype.saveLedgerRow = function (index) {
        try {
            this.subLedgerList[index].inputMode = false;
            this.subLedgerList[index].editMode = false;
        }
        catch (ex) {
            alert(ex);
        }
    };
    // value="{{(tList.acitem!=null) ? tList.acitem.ACCODE : ''}}"
    TrnTranJournalEntryComponent.prototype.changeDebit = function (value, index) {
        try {
            if (this._trnMainService.TrnMainObj.VoucherType != 12)
                return;
            if (value != null) {
                if (value.length > 0) {
                    this.trnMain.TrntranList[index].hasCredit = false;
                    this.trnMain.TrntranList[index].CRAMNT = 0;
                    if (this.trnMain.TrntranList[index].AccountItem != null && this.trnMain.TrntranList[index].AccountItem.HASSUBLEDGER == 1 && this.showWholeSubledger == true) {
                        this.trnMain.TrntranList[index].hasDebit = false;
                        this.trnMain.TrntranList[index].hasCredit = false;
                        this.trnMain.TrntranList[index].drBGColor = "grey";
                        this.trnMain.TrntranList[index].drColor = "white";
                        this.showSubLedger = true;
                        this.showHelp = false;
                        this.trnMain.TrntranList[index].DRAMNT = 0;
                        this.subLedgerList = this.trnMain.TrntranList[index].SubledgerTranList = [];
                        this.trnMain.TrntranList[index].acType = "Cr.";
                        this.showAmount = this.trnMain.TrntranList[index].acType;
                        var newSubLedger = {};
                        newSubLedger.SubledgerItem = {};
                        newSubLedger.inputMode = true;
                        newSubLedger.editMode = false;
                        this.subLedgerList.push(newSubLedger);
                        this.trnMain.TrntranList[index].CRAMNT = 0;
                        if (this.enableACCodeFocus == true) {
                            this.subAcCodeFocused = true;
                        }
                        else if (this.enableACNameFocus) {
                            this.subAcNameFocused = true;
                        }
                    }
                    this.changeIndex = index;
                    this.focusDr = true;
                }
                else if (value.length == 0) {
                    this.trnMain.TrntranList[index].hasCredit = true;
                    this.trnMain.TrntranList[index].CRAMNT = null;
                }
            }
            this.checkDifference();
            this.debitTotal();
            //if (this.trnMain.TrntranList[index].DRAMNT == 0) {
            //    this.trnMain.TrntranList[index].DRAMNT = null;
            //}
            if ((this.drTotal == this.crTotal) && this.drTotal != 0 && this.crTotal != 0) {
                this._trnMainService.saveDisable = false;
            }
            else {
                this._trnMainService.saveDisable = true;
            }
            this.hasAddBtn = true;
            if (value == null) {
                this.hasAddBtn = true;
            }
            else if (this.trnMain.TrntranList[index].AccountItem == null || this.trnMain.TrntranList[index].AccountItem.ACID == null || this.trnMain.TrntranList[index].DRAMNT <= 0) {
                this.hasAddBtn = false;
            }
        }
        catch (ex) {
            alert(ex);
        }
    };
    TrnTranJournalEntryComponent.prototype.changeCredit = function (value, index) {
        try {
            if (this._trnMainService.TrnMainObj.VoucherType != 12)
                return;
            if (value != null) {
                if (value.length > 0) {
                    this.trnMain.TrntranList[index].hasDebit = false;
                    this.trnMain.TrntranList[index].DRAMNT = 0;
                    if (this.trnMain.TrntranList[index].AccountItem != null && this.trnMain.TrntranList[index].AccountItem.HASSUBLEDGER == 1 && this.showWholeSubledger == true) {
                        this.trnMain.TrntranList[index].hasDebit = false;
                        this.trnMain.TrntranList[index].hasCredit = false;
                        this.trnMain.TrntranList[index].crBGColor = "grey";
                        this.trnMain.TrntranList[index].crColor = "white";
                        this.showSubLedger = true;
                        this.showHelp = false;
                        this.trnMain.TrntranList[index].CRAMNT = 0;
                        this.subLedgerList = this.trnMain.TrntranList[index].SubledgerTranList = [];
                        this.trnMain.TrntranList[index].acType = "Dr.";
                        this.showAmount = this.trnMain.TrntranList[index].acType;
                        var newSubLedger = {};
                        newSubLedger.SubledgerItem = {};
                        newSubLedger.inputMode = true;
                        newSubLedger.editMode = false;
                        this.subLedgerList.push(newSubLedger);
                        this.trnMain.TrntranList[index].DRAMNT = 0;
                        if (this.enableACCodeFocus == true) {
                            this.subAcCodeFocused = true;
                        }
                        else if (this.enableACNameFocus) {
                            this.subAcNameFocused = true;
                        }
                    }
                    this.changeIndex = index;
                    this.focusCr = true;
                }
                else if (value.length == 0) {
                    this.trnMain.TrntranList[index].hasDebit = true;
                    this.trnMain.TrntranList[index].DRAMNT = null;
                }
            }
            this.checkDifference();
            this.creditTotal();
            if ((this.drTotal == this.crTotal) && this.drTotal != 0 && this.crTotal != 0) {
                this._trnMainService.saveDisable = false;
            }
            else {
                this._trnMainService.saveDisable = true;
            }
            //if (this.trnMain.TrntranList[index].CRAMNT == 0) {
            //    this.trnMain.TrntranList[index].CRAMNT = null;
            //}
            this.hasAddBtn = true;
            if (value == null) {
                this.hasAddBtn = true;
            }
            else if (this.trnMain.TrntranList[index].AccountItem == null || this.trnMain.TrntranList[index].AccountItem.ACID == null || this.trnMain.TrntranList[index].CRAMNT <= 0) {
                this.hasAddBtn = false;
            }
        }
        catch (ex) {
            alert(ex);
        }
    };
    TrnTranJournalEntryComponent.prototype.checkDifference = function () {
        try {
            var diffAmount_1 = 0;
            this.trnMain.TrntranList.forEach(function (tran) {
                diffAmount_1 = diffAmount_1 + (((tran.DRAMNT == null) ? 0 : tran.DRAMNT) - ((tran.CRAMNT == null) ? 0 : tran.CRAMNT));
            });
            this._trnMainService.differenceAmount = Math.abs(diffAmount_1);
        }
        catch (ex) {
            alert(ex);
        }
    };
    TrnTranJournalEntryComponent.prototype.debitTotal = function () {
        try {
            var debitAmount_1 = 0;
            this.trnMain.TrntranList.forEach(function (tran) {
                debitAmount_1 = debitAmount_1 + ((tran.DRAMNT == null) ? 0 : tran.DRAMNT);
            });
            this.drTotal = debitAmount_1;
        }
        catch (ex) {
            alert(ex);
        }
    };
    TrnTranJournalEntryComponent.prototype.creditTotal = function () {
        try {
            var creditAmount_1 = 0;
            this.trnMain.TrntranList.forEach(function (tran) {
                creditAmount_1 = creditAmount_1 + ((tran.CRAMNT == null) ? 0 : tran.CRAMNT);
            });
            this.crTotal = creditAmount_1;
        }
        catch (ex) {
            alert(ex);
        }
    };
    TrnTranJournalEntryComponent.prototype.changeSubDebit = function (value, index) {
        try {
            this.subDebitTotal();
            this.creditTotal();
            this.checkDifference();
            this.hasLedgerAddBtn = true;
            if (value == null) {
                this.hasLedgerAddBtn = true;
            }
            else if (this.subLedgerList[index].SubledgerItem == null || this.subLedgerList[index].SubledgerItem.ACID == null || this.subLedgerList[index].DRAMNT <= 0) {
                this.hasLedgerAddBtn = false;
            }
            if ((this.drTotal == this.crTotal) && this.drTotal != 0 && this.crTotal != 0) {
                this._trnMainService.saveDisable = false;
            }
            else {
                this._trnMainService.saveDisable = true;
            }
        }
        catch (ex) {
            alert(ex);
        }
    };
    TrnTranJournalEntryComponent.prototype.changeSubCredit = function (value, index) {
        try {
            this.subCreditTotal();
            this.debitTotal();
            this.checkDifference();
            this.hasLedgerAddBtn = true;
            if (value == null) {
                this.hasLedgerAddBtn = true;
            }
            else if (this.subLedgerList[index].SubledgerItem == null || this.subLedgerList[index].SubledgerItem.ACID == null || this.subLedgerList[index].CRAMNT <= 0) {
                this.hasLedgerAddBtn = false;
            }
            if ((this.drTotal == this.crTotal) && this.drTotal != 0 && this.crTotal != 0) {
                this._trnMainService.saveDisable = false;
            }
            else {
                this._trnMainService.saveDisable = true;
            }
        }
        catch (ex) {
            alert(ex);
        }
    };
    TrnTranJournalEntryComponent.prototype.subDebitTotal = function () {
        try {
            var debitAmount_2 = 0;
            this.trnMain.TrntranList[this.changeIndex].SubledgerTranList.forEach(function (sub) {
                debitAmount_2 = debitAmount_2 + ((sub.DRAMNT == null) ? 0 : sub.DRAMNT);
            });
            this.trnMain.TrntranList[this.changeIndex].CRAMNT = debitAmount_2;
            this.subDrTotal = debitAmount_2;
            if (this.trnMain.TrntranList[this.changeIndex].AccountItem != null && this.trnMain.TrntranList[this.changeIndex].CRAMNT > 0) {
                this.hasAddBtn = true;
            }
            else {
                this.hasAddBtn = false;
            }
        }
        catch (ex) {
            alert(ex);
        }
    };
    TrnTranJournalEntryComponent.prototype.subCreditTotal = function () {
        try {
            var creditAmount_2 = 0;
            this.trnMain.TrntranList[this.changeIndex].SubledgerTranList.forEach(function (sub) {
                creditAmount_2 = creditAmount_2 + ((sub.CRAMNT == null) ? 0 : sub.CRAMNT);
            });
            this.subCrTotal = creditAmount_2;
            this.trnMain.TrntranList[this.changeIndex].DRAMNT = creditAmount_2;
            if (this.trnMain.TrntranList[this.changeIndex].AccountItem != null && this.trnMain.TrntranList[this.changeIndex].DRAMNT > 0) {
                this.hasAddBtn = true;
            }
            else {
                this.hasAddBtn = false;
            }
        }
        catch (ex) {
            alert(ex);
        }
    };
    TrnTranJournalEntryComponent.prototype.clickRow = function (index) {
        try {
            if (this.trnMain.TrntranList[index].AccountItem.HASSUBLEDGER == 1 && this.trnMain.TrntranList[index].SubledgerTranList != null && this.trnMain.TrntranList[index].SubledgerTranList.length > 0 && this.trnMain.TrntranList[index].inputMode == false) {
                this.showSubLedgerList = true;
                this.showSubLedger = false;
                this.showHelp = false;
            }
            else if (this.trnMain.TrntranList[index].inputMode == true && this.trnMain.TrntranList[index].AccountItem.HASSUBLEDGER == 0) {
                this.showSubLedgerList = false;
                this.showSubLedger = false;
                this.showHelp = true;
            }
            else if (this.trnMain.TrntranList[index].inputMode == true && this.trnMain.TrntranList[index].AccountItem.HASSUBLEDGER == 1) {
                this.showSubLedgerList = false;
                this.showSubLedger = true;
                this.showHelp = false;
                this.subLedgerList = this.trnMain.TrntranList[index].SubledgerTranList;
                this.showAmount = this.trnMain.TrntranList[index].acType;
            }
            else {
                this.showSubLedgerList = false;
                this.showSubLedger = false;
                this.showHelp = true;
            }
            this.changeIndex = index;
        }
        catch (ex) {
            alert(ex);
        }
    };
    TrnTranJournalEntryComponent.prototype.acCodeChange = function (index) {
        try {
            this.trnMain.TrntranList[index].hasDebit = true;
            this.trnMain.TrntranList[index].hasCredit = true;
            this.trnMain.TrntranList[index].SubledgerTranList = [];
            this.trnMain.TrntranList[index].DRAMNT = null;
            this.trnMain.TrntranList[index].CRAMNT = null;
            this.checkDifference();
            this.hasAddBtn = false;
            this.focusDr = false;
            this.focusCr = false;
            this.acCodeIndex = index;
            this.trnMain.TrntranList[index].acType = null;
            this.trnMain.TrntranList[index].drBGColor = "";
            this.trnMain.TrntranList[index].drColor = "";
            this.trnMain.TrntranList[index].crBGColor = "";
            this.trnMain.TrntranList[index].crColor = "";
        }
        catch (ex) {
            alert(ex);
        }
    };
    TrnTranJournalEntryComponent.prototype.acidChange = function (index) {
        try {
            this.trnMain.TrntranList[index].hasDebit = true;
            this.trnMain.TrntranList[index].hasCredit = true;
            this.trnMain.TrntranList[index].SubledgerTranList = [];
            this.trnMain.TrntranList[index].DRAMNT = null;
            this.trnMain.TrntranList[index].CRAMNT = null;
            this.checkDifference();
            this.hasAddBtn = false;
            this.focusDr = false;
            this.focusCr = false;
            this.acNameIndex = index;
            this.trnMain.TrntranList[index].acType = null;
            this.trnMain.TrntranList[index].drBGColor = "";
            this.trnMain.TrntranList[index].drColor = "";
            this.trnMain.TrntranList[index].crBGColor = "";
            this.trnMain.TrntranList[index].crColor = "";
        }
        catch (ex) {
            alert(ex);
        }
    };
    TrnTranJournalEntryComponent.prototype.acNameChange = function (index) {
        try {
            this.trnMain.TrntranList[index].hasDebit = true;
            this.trnMain.TrntranList[index].hasCredit = true;
            this.trnMain.TrntranList[index].SubledgerTranList = [];
            this.trnMain.TrntranList[index].DRAMNT = null;
            this.trnMain.TrntranList[index].CRAMNT = null;
            this.checkDifference();
            this.hasAddBtn = false;
            this.focusDr = false;
            this.focusCr = false;
            this.acNameIndex = index;
            this.trnMain.TrntranList[index].acType = null;
            this.trnMain.TrntranList[index].drBGColor = "";
            this.trnMain.TrntranList[index].drColor = "";
            this.trnMain.TrntranList[index].crBGColor = "";
            this.trnMain.TrntranList[index].crColor = "";
        }
        catch (ex) {
            alert(ex);
        }
    };
    TrnTranJournalEntryComponent.prototype.subACCodeChange = function (index) {
        try {
            this.subLedgerList[index].DRAMNT = null;
            this.subLedgerList[index].CRAMNT = null;
        }
        catch (ex) {
            alert(ex);
        }
    };
    TrnTranJournalEntryComponent.prototype.subACNameChange = function (index) {
        try {
            this.subLedgerList[index].DRAMNT = null;
            this.subLedgerList[index].CRAMNT = null;
        }
        catch (ex) {
            alert(ex);
        }
    };
    TrnTranJournalEntryComponent.prototype.changeToArray = function (data) {
        try {
            if (data) {
                var retData = [];
                retData.concat([], data);
                return retData;
            }
            return [];
        }
        catch (ex) {
            alert(ex);
        }
    };
    TrnTranJournalEntryComponent.prototype.ngOnDestroy = function () {
        try {
            this.subcriptions.forEach(function (subs) {
                subs.unsubscribe();
            });
        }
        catch (ex) {
            alert(ex);
        }
    };
    TrnTranJournalEntryComponent.prototype.back = function () {
        try {
            this.router.navigate([this.returnUrl]);
        }
        catch (ex) {
            alert(ex);
        }
    };
    return TrnTranJournalEntryComponent;
}());
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])("genericGridACList"),
    __metadata("design:type", __WEBPACK_IMPORTED_MODULE_8__common_popupLists_generic_grid_generic_popup_grid_component__["c" /* GenericPopUpComponent */])
], TrnTranJournalEntryComponent.prototype, "genericGridACList", void 0);
TrnTranJournalEntryComponent = __decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
        selector: 'trntran-journal-entry',
        template: __webpack_require__(1329),
        styles: [__webpack_require__(1266), __webpack_require__(120)],
    }),
    __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_4__common_repositories_masterRepo_service__["a" /* MasterRepo */],
        __WEBPACK_IMPORTED_MODULE_1__common_Transaction_Components_transaction_service__["a" /* TransactionService */],
        __WEBPACK_IMPORTED_MODULE_3__angular_router__["ActivatedRoute"],
        __WEBPACK_IMPORTED_MODULE_3__angular_router__["Router"],
        __WEBPACK_IMPORTED_MODULE_2__common_services__["c" /* SettingService */],
        __WEBPACK_IMPORTED_MODULE_0__angular_core__["Renderer"],
        __WEBPACK_IMPORTED_MODULE_7__angular_platform_browser__["DomSanitizer"],
        __WEBPACK_IMPORTED_MODULE_9__common_services_alert_alert_service__["a" /* AlertService */],
        __WEBPACK_IMPORTED_MODULE_10__common_services_spinner_spinner_service__["a" /* SpinnerService */]])
], TrnTranJournalEntryComponent);



/***/ }),

/***/ 1285:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_http__ = __webpack_require__(10);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__angular_router__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__common_services_permission__ = __webpack_require__(15);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_rxjs_subject__ = __webpack_require__(73);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_rxjs_subject___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_rxjs_subject__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__global_state__ = __webpack_require__(14);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__common_services_alert_alert_service__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_rxjs__ = __webpack_require__(24);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_rxjs___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_7_rxjs__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return PartyReconciliationService; });








var PartyReconciliationService = (function () {
    function PartyReconciliationService(http, activatedRoute, authService, state, alertservices) {
        this.http = http;
        this.activatedRoute = activatedRoute;
        this.authService = authService;
        this.state = state;
        this.alertservices = alertservices;
    }
    Object.defineProperty(PartyReconciliationService.prototype, "apiUrl", {
        get: function () {
            var url = this.state.getGlobalSetting("apiUrl");
            var apiUrl = "";
            if (!!url && url.length > 0) {
                apiUrl = url[0];
            }
            ;
            return apiUrl;
        },
        enumerable: true,
        configurable: true
    });
    PartyReconciliationService.prototype.saveBank = function (bid) {
        var bodyData = { data: bid };
        return this.http.post(this.apiUrl + '/saveBankReconciliation', bodyData, this.getRequestOption())
            .map(this.extractData)
            .catch(this.handleError);
    };
    PartyReconciliationService.prototype.savePartyReconciliation = function (bid) {
        var bodyData = { data: bid };
        return this.http.post(this.apiUrl + '/savePartyReconciliation', bodyData, this.getRequestOption())
            .map(this.extractData)
            .catch(this.handleError);
    };
    PartyReconciliationService.prototype.extractData = function (res) {
        var response = res.json();
        return response || {};
    };
    PartyReconciliationService.prototype.handleError = function (error) {
        return __WEBPACK_IMPORTED_MODULE_7_rxjs__["Observable"].throw(error);
    };
    PartyReconciliationService.prototype.saveBankReconciliation = function (bid) {
        var _this = this;
        var res = { status: "error", result: "" };
        var returnSubject = new __WEBPACK_IMPORTED_MODULE_4_rxjs_subject__["Subject"]();
        var bodyData = { data: bid };
        this.http.post(this.apiUrl + '/saveBankReconciliation', bodyData, this.getRequestOption())
            .subscribe(function (response) {
            var data = response.json();
            if (data.status == 'ok') {
                returnSubject.next(data);
                returnSubject.unsubscribe();
                _this.alertservices.success(data.result);
            }
            else {
                returnSubject.next(data);
                returnSubject.unsubscribe();
                _this.alertservices.error("Error" + data.result);
            }
        }, function (error) {
            res.status = 'error';
            res.result = error;
            returnSubject.next(res);
            returnSubject.unsubscribe();
        });
        return returnSubject;
    };
    PartyReconciliationService.prototype.getPartyReconcileList = function (bid) {
        var _this = this;
        var res = { status: "error", result: "" };
        var returnSubject = new __WEBPACK_IMPORTED_MODULE_4_rxjs_subject__["Subject"]();
        this.http.post(this.apiUrl + '/getPartyReconciliation', bid, this.getRequestOption())
            .subscribe(function (response) {
            var data = response.json();
            if (data.status == 'ok') {
                returnSubject.next(data);
                returnSubject.unsubscribe();
            }
            else if (data.status == 'error') {
                _this.alertservices.error("Error" + data.result);
            }
            else {
                returnSubject.next(data);
                returnSubject.unsubscribe();
            }
        }, function (error) {
            res.status = 'error';
            res.result = error;
            returnSubject.next(res);
            returnSubject.unsubscribe();
        });
        return returnSubject;
    };
    PartyReconciliationService.prototype.getRequestOption = function () {
        var headers = new __WEBPACK_IMPORTED_MODULE_0__angular_http__["Headers"]({ 'Content-type': 'application/json', 'Authorization': this.authService.getAuth().token });
        return new __WEBPACK_IMPORTED_MODULE_0__angular_http__["RequestOptions"]({ headers: headers });
    };
    return PartyReconciliationService;
}());
PartyReconciliationService = __decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__angular_core__["Injectable"])(),
    __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_0__angular_http__["Http"], __WEBPACK_IMPORTED_MODULE_2__angular_router__["ActivatedRoute"], __WEBPACK_IMPORTED_MODULE_3__common_services_permission__["a" /* AuthService */], __WEBPACK_IMPORTED_MODULE_5__global_state__["a" /* GlobalState */], __WEBPACK_IMPORTED_MODULE_6__common_services_alert_alert_service__["a" /* AlertService */]])
], PartyReconciliationService);



/***/ }),

/***/ 1286:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__common_Transaction_Components_transaction_service__ = __webpack_require__(7);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__common_interfaces_TrnMain__ = __webpack_require__(25);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__common_repositories_masterRepo_service__ = __webpack_require__(8);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__common_services_setting_service__ = __webpack_require__(72);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__common_services_spinner_spinner_service__ = __webpack_require__(20);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__common_services_alert_alert_service__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__angular_router__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__common_Transaction_Components_trntran_voucher_entry_component__ = __webpack_require__(557);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return PaymentSingleComponent; });









var PaymentSingleComponent = (function () {
    function PaymentSingleComponent(masterService, _trnMainService, setting, _loadingSerive, _alertService, _activatedRoute) {
        this.masterService = masterService;
        this._trnMainService = _trnMainService;
        this.setting = setting;
        this._loadingSerive = _loadingSerive;
        this._alertService = _alertService;
        this._activatedRoute = _activatedRoute;
        this.TrnMainObj = {};
        this.voucherType = __WEBPACK_IMPORTED_MODULE_2__common_interfaces_TrnMain__["a" /* VoucherTypeEnum */].SinglePayment;
        this.prefix = {};
        this.TrnMainObj = this._trnMainService.TrnMainObj;
        this._trnMainService.initialFormLoad(65);
    }
    PaymentSingleComponent.prototype.ngOnInit = function () {
        var _this = this;
        if (this._activatedRoute.snapshot.params['from']) {
            var VCHR = this._activatedRoute.snapshot.params['voucherNumber'];
            var params = [];
            params = VCHR.split('-');
            this._loadingSerive.show("Loading Invoice");
            this.masterService.LoadTransaction(VCHR, params[1], params[2]).subscribe(function (res) {
                if (res.status == "ok") {
                    _this._loadingSerive.hide();
                    _this._trnMainService.TrnMainObj = res.result;
                    _this._trnMainService.TrnMainObj.VoucherType = 65;
                    _this._trnMainService.pageHeading = "Single Voucher";
                    _this._trnMainService.TrnMainObj.VoucherPrefix = "SV";
                    _this._trnMainService.TrnMainObj.Mode = "VIEW";
                }
            }, function (err) {
                _this._loadingSerive.hide();
                _this._alertService.error(err);
            });
        }
        else {
            this.TrnMainObj.Mode = "NEW";
            this.masterService.ShowMore = true;
        }
    };
    PaymentSingleComponent.prototype.prefixChanged = function (pref) {
        var _this = this;
        try {
            this._trnMainService.prefix = pref;
            this.prefix = pref;
            if (this.TrnMainObj.Mode == "NEW") {
                if (this.TrnMainObj.DIVISION == "" ||
                    this.TrnMainObj.DIVISION == null) {
                    this.TrnMainObj.DIVISION = this.setting.appSetting.DefaultDivision;
                }
                this.masterService.getVoucherNo(this.TrnMainObj).subscribe(function (res) {
                    if (res.status == "ok") {
                        var TMain = res.result;
                        _this.TrnMainObj.VCHRNO = TMain.VCHRNO.substr(2, TMain.VCHRNO.length - 2);
                        _this.TrnMainObj.CHALANNO = TMain.CHALANNO;
                    }
                    else {
                        alert("Failed to retrieve VoucherNo");
                    }
                });
            }
        }
        catch (ex) {
        }
    };
    PaymentSingleComponent.prototype.BillTrack = function () {
        this.trnmainentry.BillTrack();
    };
    return PaymentSingleComponent;
}());
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])("trnmainentry"),
    __metadata("design:type", __WEBPACK_IMPORTED_MODULE_8__common_Transaction_Components_trntran_voucher_entry_component__["a" /* TrnTranVoucherEntryComponent */])
], PaymentSingleComponent.prototype, "trnmainentry", void 0);
PaymentSingleComponent = __decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
        selector: 'payment-single',
        template: __webpack_require__(1333),
        providers: [__WEBPACK_IMPORTED_MODULE_1__common_Transaction_Components_transaction_service__["a" /* TransactionService */]],
        styles: [__webpack_require__(120)]
    }),
    __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_3__common_repositories_masterRepo_service__["a" /* MasterRepo */],
        __WEBPACK_IMPORTED_MODULE_1__common_Transaction_Components_transaction_service__["a" /* TransactionService */],
        __WEBPACK_IMPORTED_MODULE_4__common_services_setting_service__["a" /* SettingService */],
        __WEBPACK_IMPORTED_MODULE_5__common_services_spinner_spinner_service__["a" /* SpinnerService */],
        __WEBPACK_IMPORTED_MODULE_6__common_services_alert_alert_service__["a" /* AlertService */],
        __WEBPACK_IMPORTED_MODULE_7__angular_router__["ActivatedRoute"]])
], PaymentSingleComponent);



/***/ }),

/***/ 1287:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return SearchPipe; });

var SearchPipe = (function () {
    function SearchPipe() {
    }
    SearchPipe.prototype.transform = function (data, query, option) {
        if (data) {
            if (query) {
                if (option == '') {
                    return data.filter(function (item) {
                        var searchedQuery = query.replace(/[^A-Z0-9]/ig, '').toLowerCase();
                        var oldvchrno = (item.old_vchrno) ? (item.old_vchrno).replace(/[^A-Z0-9]/ig, '').toLowerCase() : '';
                        var name = (item.BUDGET_NAME) ? (item.BUDGET_NAME).replace(/[^A-Z0-9]/ig, '').toLowerCase() : '';
                        var fromdate = (item.FROM_DATE) ? (item.FROM_DATE).replace(/[^A-Z0-9]/ig, '').toLowerCase() : '';
                        var createdon = (item.CREATED_ON) ? (item.CREATED_ON).replace(/[^A-Z0-9]/ig, '').toLowerCase() : '';
                        var updatedon = (item.UPDATED_ON) ? (item.UPDATED_ON).replace(/[^A-Z0-9]/ig, '').toLowerCase() : '';
                        var status = (item.STATUS) ? (item.STATUS).replace(/[^A-Z0-9]/ig, '').toLowerCase() : '';
                        if (oldvchrno.indexOf(searchedQuery) !== -1) {
                            return item;
                        }
                        else if (name.indexOf(searchedQuery) !== -1) {
                            return item;
                        }
                        else if (fromdate.indexOf(searchedQuery) !== -1) {
                            return item;
                        }
                        else if (createdon.indexOf(searchedQuery) !== -1) {
                            return item;
                        }
                        else if (updatedon.indexOf(searchedQuery) !== -1) {
                            return item;
                        }
                        else if (status.indexOf(searchedQuery) !== -1) {
                            return item;
                        }
                    });
                }
                else if (option == 'ACCODE') {
                    return data.filter(function (item) {
                        var searchedQuery = query.replace(/[^A-Z0-9]/ig, '').toLowerCase();
                        var accode = (item.ACCODE) ? (item.ACCODE).replace(/[^A-Z0-9]/ig, '').toLowerCase() : '';
                        if (accode.indexOf(searchedQuery) !== -1) {
                            return item;
                        }
                    });
                }
                else if (option == 'ACNAME') {
                    return data.filter(function (item) {
                        var searchedQuery = query.replace(/[^A-Z0-9]/ig, '').toLowerCase();
                        var acname = (item.ACNAME) ? (item.ACNAME).replace(/[^A-Z0-9]/ig, '').toLowerCase() : '';
                        if (acname.indexOf(searchedQuery) !== -1) {
                            return item;
                        }
                    });
                }
            }
            else {
                return data;
            }
        }
    };
    return SearchPipe;
}());
SearchPipe = __decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Pipe"])({ name: 'searchData', pure: false })
], SearchPipe);



/***/ }),

/***/ 1288:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__common_repositories_masterRepo_service__ = __webpack_require__(8);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__addtionalCost_service__ = __webpack_require__(43);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__angular_forms__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__common_Transaction_Components_transaction_service__ = __webpack_require__(7);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__common_services_alert_alert_service__ = __webpack_require__(12);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ImportDocumentDetailsComponent; });






var ImportDocumentDetailsComponent = (function () {
    function ImportDocumentDetailsComponent(_addionalcostService, fb, masterService, _additionalCostService, _transactionService, alertService) {
        this._addionalcostService = _addionalcostService;
        this.fb = fb;
        this.masterService = masterService;
        this._additionalCostService = _additionalCostService;
        this._transactionService = _transactionService;
        this.alertService = alertService;
        this.header = [];
        this.importrowindex = 0;
    }
    ImportDocumentDetailsComponent.prototype.ngAfterViewInit = function () {
    };
    ImportDocumentDetailsComponent.prototype.addRow = function () {
        try {
            var newRow = {};
            this._addionalcostService.IMPORTDETAILS.prodList.push(newRow);
        }
        catch (ex) {
            //console.log(ex);
            alert(ex);
        }
    };
    ImportDocumentDetailsComponent.prototype.ClickTableRow = function (index) {
        //console.log("ClickRowIndex", index);
        this.activeIndex = index;
    };
    ImportDocumentDetailsComponent.prototype.rowClick = function (index) {
        this.importrowindex = index;
    };
    ImportDocumentDetailsComponent.prototype.onChangeNonTaxable = function () {
        this.onChange();
    };
    ImportDocumentDetailsComponent.prototype.onChangeVAT = function () {
        this.onChange();
    };
    ImportDocumentDetailsComponent.prototype.onChangeTaxable = function () {
        this.onChange();
    };
    ImportDocumentDetailsComponent.prototype.onChange = function () {
        this.RecalculateImportDetails();
        this.RecalculateProdValue();
    };
    ImportDocumentDetailsComponent.prototype.RecalculateProdValue = function () {
        this._addionalcostService.IMPORTDETAILS.prodList[this.activeIndex].NETAMOUNT
            = this._addionalcostService.IMPORTDETAILS.prodList[this.activeIndex].TAXABLE
                + this._addionalcostService.IMPORTDETAILS.prodList[this.activeIndex].NONTAXABLE
                + this._addionalcostService.IMPORTDETAILS.prodList[this.activeIndex].VAT;
    };
    ImportDocumentDetailsComponent.prototype.nextRow = function () {
        this.addRow();
        this.masterService.focusAnyControl('importNetmant' + this.activeIndex + 1);
    };
    ImportDocumentDetailsComponent.prototype.RecalculateImportDetails = function () {
        var _this = this;
        try {
            if (this._addionalcostService.IMPORTDETAILS && this._addionalcostService.IMPORTDETAILS.prodList.length) {
                this._addionalcostService.IMPORTDETAILS.TOTALQTY = 0;
                this._addionalcostService.IMPORTDETAILS.TOTALTAXABLE = 0;
                this._addionalcostService.IMPORTDETAILS.TOTALNONTAXABLE = 0;
                this._addionalcostService.IMPORTDETAILS.TOTALVAT = 0;
                this._addionalcostService.IMPORTDETAILS.NETAMOUNT = 0;
                this._addionalcostService.IMPORTDETAILS.prodList.forEach(function (x) {
                    //   x.NETAMOUNT = this._trnMainService.nullToZeroConverter(x.NONTAXABLE) + this._trnMainService.nullToZeroConverter(x.TAXABLE) + this._trnMainService.nullToZeroConverter(x.VAT);
                    _this._addionalcostService.IMPORTDETAILS.TOTALQTY = _this._transactionService.nullToZeroConverter(_this._addionalcostService.IMPORTDETAILS.TOTALQTY) + _this._transactionService.nullToZeroConverter(x.QUANTITY);
                    _this._addionalcostService.IMPORTDETAILS.TOTALTAXABLE = _this._transactionService.nullToZeroConverter(_this._addionalcostService.IMPORTDETAILS.TOTALTAXABLE) + _this._transactionService.nullToZeroConverter(x.TAXABLE);
                    _this._addionalcostService.IMPORTDETAILS.TOTALNONTAXABLE = _this._transactionService.nullToZeroConverter(_this._addionalcostService.IMPORTDETAILS.TOTALNONTAXABLE) + _this._transactionService.nullToZeroConverter(x.NONTAXABLE);
                    _this._addionalcostService.IMPORTDETAILS.TOTALVAT = _this._transactionService.nullToZeroConverter(_this._addionalcostService.IMPORTDETAILS.TOTALVAT) + _this._transactionService.nullToZeroConverter(x.VAT);
                    _this._addionalcostService.IMPORTDETAILS.NETAMOUNT = _this._transactionService.nullToZeroConverter(_this._addionalcostService.IMPORTDETAILS.NETAMOUNT) + _this._transactionService.nullToZeroConverter(x.NETAMOUNT);
                });
            }
        }
        catch (error) {
            this.alertService.error('Error in import details calculation: ' + error);
        }
    };
    ImportDocumentDetailsComponent.prototype.ChangeDocumentNo = function () {
        this.masterService.importDocumentDetailsObj.PPNO = this._addionalcostService.IMPORTDETAILS.DOCUMENTNO;
    };
    ImportDocumentDetailsComponent.prototype.ChangeLCNo = function () {
        this.masterService.importDocumentDetailsObj.LCNO = this._addionalcostService.IMPORTDETAILS.LCNUM;
    };
    return ImportDocumentDetailsComponent;
}());
ImportDocumentDetailsComponent = __decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__angular_core__["Component"])({
        selector: 'ImportDocumentDetailsComponent',
        template: __webpack_require__(1337),
        styles: [__webpack_require__(120), __webpack_require__(9), __webpack_require__(554)],
        providers: []
    }),
    __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_2__addtionalCost_service__["a" /* AdditionalCostService */],
        __WEBPACK_IMPORTED_MODULE_3__angular_forms__["FormBuilder"], __WEBPACK_IMPORTED_MODULE_0__common_repositories_masterRepo_service__["a" /* MasterRepo */],
        __WEBPACK_IMPORTED_MODULE_2__addtionalCost_service__["a" /* AdditionalCostService */],
        __WEBPACK_IMPORTED_MODULE_4__common_Transaction_Components_transaction_service__["a" /* TransactionService */],
        __WEBPACK_IMPORTED_MODULE_5__common_services_alert_alert_service__["a" /* AlertService */]])
], ImportDocumentDetailsComponent);



/***/ }),

/***/ 1289:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__common_repositories_masterRepo_service__ = __webpack_require__(8);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__addtionalCost_service__ = __webpack_require__(43);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__angular_forms__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__common_Transaction_Components_transaction_service__ = __webpack_require__(7);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__common_popupLists_generic_grid_generic_popup_grid_component__ = __webpack_require__(35);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__common_services_permission__ = __webpack_require__(15);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return additionalCostDetail; });







var additionalCostDetail = (function () {
    function additionalCostDetail(_addionalcostService, fb, masterService, _transactionService, authservice) {
        this._addionalcostService = _addionalcostService;
        this.fb = fb;
        this.masterService = masterService;
        this._transactionService = _transactionService;
        this.authservice = authservice;
        this.majorParentAcList = [];
        this.costdata = [];
        this.allList = [];
        this.allowRowAdd = false;
        this.PI = true;
        this.PIList = [];
        this.PIADD = true;
        this.qty = true;
        this.gridACListPartyPopupSettings = new __WEBPACK_IMPORTED_MODULE_5__common_popupLists_generic_grid_generic_popup_grid_component__["b" /* GenericPopUpSettings */]();
        this.gridCreditACListPartyPopupSettings = new __WEBPACK_IMPORTED_MODULE_5__common_popupLists_generic_grid_generic_popup_grid_component__["b" /* GenericPopUpSettings */]();
        this.gridItemPopupSettings = new __WEBPACK_IMPORTED_MODULE_5__common_popupLists_generic_grid_generic_popup_grid_component__["b" /* GenericPopUpSettings */]();
        this.gridBatchPopupSettings = new __WEBPACK_IMPORTED_MODULE_5__common_popupLists_generic_grid_generic_popup_grid_component__["b" /* GenericPopUpSettings */]();
        this.ItemObj = {};
        this.BatchList = [];
        this._transactionService.initialFormLoad(66);
        this.TrnMainObj = _addionalcostService.TrnMainObj;
        this.form = fb.group({
            CREDITEDAC: ['', __WEBPACK_IMPORTED_MODULE_3__angular_forms__["Validators"].required],
            AdditionalPurchaseAc: ['', __WEBPACK_IMPORTED_MODULE_3__angular_forms__["Validators"].required],
            AMOUNT: ['', __WEBPACK_IMPORTED_MODULE_3__angular_forms__["Validators"].required],
            REMARKS: [''],
            MCODE: [''],
            BYQUANTITY: [''],
            DESCA: [''],
            BATCH: [''],
            BATCHID: [''],
            COSTING: ['']
        });
        // this.masterService.getpartyListTree()
        //     .subscribe(data => {
        //         let l = data
        //         this.majorParentAcList = l;
        //     });
        // this.masterService.getAccount('').subscribe(data => {
        //     this.allList = data;
        // }
        // )
        this.PI = false;
        this.PIADD = false;
        this.qty = false;
        this.IndividualPI(false);
        this.masterService.focusAnyControl("AdditionalCostAc_");
        // this.form.get('MCODE').disable();
        // this._transactionService.TrnMainObj.TrntranList.splice(-1);
        this.byQuantity("Amount");
        this._transactionService.DrillMode = "New";
        this.userSetting = authservice.getSetting();
    }
    Object.defineProperty(additionalCostDetail.prototype, "selectedProd", {
        get: function () {
            return this._selectedProd;
        },
        set: function (value) {
            this._selectedProd = value;
        },
        enumerable: true,
        configurable: true
    });
    additionalCostDetail.prototype.ngOnInit = function () {
        this.PIList = this._addionalcostService.addtionalCostList;
        // ////console.log("PIList", this.PIList)
        //console.log("mode",this._transactionService.TrnMainObj.Mode)
        if (this._transactionService.TrnMainObj.Mode == 'NEW') {
            this.PI = false;
            this.masterService.costType = "GroupCost";
            this.masterService.addcosting = 'COSTING';
            this.masterService.focusAnyControl("AdditionalCostAc_");
        }
    };
    additionalCostDetail.prototype.passValue = function () {
        this.BatchList = [];
        this.ValuePI = 1;
        this.form.patchValue({
            MCODE: this.ItemObj.mcode,
        });
        for (var _i = 0, _a = this._addionalcostService.addtionalCostList; _i < _a.length; _i++) {
            var i = _a[_i];
            if (i.menucode == this.ItemObj.mcode) {
                this.BatchList.push(i);
            }
        }
        //console.log("valueObj1", this.BatchList)
    };
    additionalCostDetail.prototype.onAddClick = function () {
        this.form.patchValue({
            MCODE: this.masterService.mcode,
            DESCA: this.masterService.desca,
            BATCH: this.masterService.batch,
            BATCHID: this.masterService.batchid
        });
        // console.log("Hereby",this.form.value)
        // this._addionalcostService.costdetail = [];
        // this.masterService.addcosting = "true";
        if (this.PI == true && (this.form.controls.MCODE.value == "" || !this.form.controls.MCODE.value)) {
            alert("Enter Item for Individual item cost type !");
            return;
        }
        if (this.PI == true && (this.form.controls.BATCH.value == "" || !this.form.controls.BATCH.value)) {
            alert("Enter batch for Individual item cost type !");
            return;
        }
        if (this.PI == false && (this.GcostMode == '' || !this.GcostMode)) {
            alert("Enter Group cost mode.");
            return;
        }
        if (this.PI == true && (this.form.controls.CREDITEDAC.value == "" || !this.form.controls.CREDITEDAC.value)) {
            alert("Enter Credited Account for Individual item cost type !");
            return;
        }
        if (this.masterService.AdditionalAMOUNT == "" || !this.masterService.AdditionalAMOUNT) {
            alert("Amount is required");
            return;
        }
        var desca = '';
        // console.log('addtionalCostList', this._addionalcostService.addtionalCostList, this._addionalcostService.addtionalCostList)
        for (var _i = 0, _a = this._addionalcostService.addtionalCostList; _i < _a.length; _i++) {
            var i = _a[_i];
            if (i.mcode == this.form.value.MCODE) {
                desca = i.desca;
            }
        }
        // if (this.PI == false) {
        //     for (const iterator of this._addionalcostService.costList) {
        //         if (iterator.amount == "" || iterator.amount == null) {
        //             alert("Amount is required");
        //             return;
        //         }
        //     }
        // }
        if (this.PI == false) {
            for (var _b = 0, _c = this._addionalcostService.costList; _b < _c.length; _b++) {
                var iterator = _c[_b];
                if ((iterator.costAc.ACNAME == this.form.value.AdditionalPurchaseAc.ACNAME && (iterator.CostingNonCosting == 'COSTING' || iterator.CostingNonCosting == 'true'))
                    || (iterator.costAc.ACNAME == this.form.value.AdditionalPurchaseAc.ACNAME && (iterator.CostingNonCosting == 'NONCOSTING' || iterator.CostingNonCosting == 'false') && this.masterService.addcosting == 'COSTING')) {
                    alert("Duplicate Additional Cost A/C !");
                    return;
                }
            }
        }
        else if (this.PI == true) {
            for (var _d = 0, _e = this._addionalcostService.costList; _d < _e.length; _d++) {
                var iterator = _e[_d];
                if (iterator.costAc.ACNAME == this.form.value.AdditionalPurchaseAc.ACNAME
                    && iterator.mcode == this.form.value.MCODE
                    && iterator.batch == this.form.value.BATCH) {
                    alert("Duplicate Additional Cost A/C and Item!");
                    return;
                }
            }
        }
        if (this.masterService.AdditionalPurchaseAcObj == null || this.masterService.AdditionalPurchaseAcObj == "" || this.masterService.AdditionalPurchaseAcObj == undefined) {
            alert("Please enter Additional cost A/C");
            return;
        }
        if (this.masterService.AdditionalPurchaseCreditAcObj == null || this.masterService.AdditionalPurchaseCreditAcObj == "" || this.masterService.AdditionalPurchaseCreditAcObj == undefined) {
            alert("Please enter credited A/C !");
            return;
        }
        //console.log("Hereby1",this.form.value.AdditionalPurchaseAc)
        var res = {};
        res.creditAc = this.form.value.CREDITEDAC;
        res.remarks = this.masterService.AdditionalREMARKS;
        res.costAc = this.form.value.AdditionalPurchaseAc;
        res.amount = this.masterService.AdditionalAMOUNT;
        res.mcode = this.form.value.MCODE;
        res.desca = desca;
        res.batch = this.form.value.BATCH;
        res.batchid = this.form.value.BATCHID;
        res.CostingNonCosting = this.masterService.addcosting;
        if (this.PI == false) {
            res.CostingType = "Group Cost";
        }
        else {
            res.CostingType = "Ind Cost";
        }
        // if (this.PI == false) {
        //     res.CostingNonCosting = 'COSTING';
        // }
        // else {
        //     res.CostingNonCosting ='NONCOSTING';
        // }
        // let checked_costValue = document.querySelector('input[value = "true"]:checked');
        // if (checked_costValue != null) {  //Test if something was checked
        //     res.CostingNonCosting = true;
        // } else {
        //     res.CostingNonCosting = false
        // }
        // ////console.log("checking group cost", this.form.value.BYQUANTITY)
        // if(this.form.value.BYQUANTITY == true){
        //     res.GCOSTMODE = "On Qty";
        // }
        // else if(this.form.value.BYQUANTITY == false){
        //     res.GCOSTMODE = "On Amount";
        // }
        // else{
        //     res.GCOSTMODE = "";
        // }
        if (this.GcostMode == "Qty") {
            res.GCOSTMODE = "On Qty";
            this.byQuantity("Qty");
        }
        else if (this.GcostMode == "Amount") {
            res.GCOSTMODE = "On Amount";
            this.byQuantity("Amount");
        }
        else {
            res.GCOSTMODE = "";
        }
        res.byQuanty = this.form.value.BYQUANTITY;
        //console.log("Hereby2",this.form.value.AdditionalPurchaseAc)
        //console.log("res$$",res,this.form.value.AdditionalPurchaseAc)
        this._addionalcostService.onAddCost(res);
        // this.AddDebit();
        // this.AddCredit();
        this.EmptyAddCost();
        if (this.ValuePI == 1)
            this.PIADD = true;
        //    this.form.patchValue({
        //     AdditionalPurchaseAc:''
        //    })
        //    this.masterService.AdditionalPurchaseAcObj = ''
        //    this.masterService.AdditionalPurchaseCreditAcObj = ''
        this.masterService.mcode = '';
        this.masterService.desca = '';
        this.masterService.batch = '';
        this.masterService.batchid = '';
        if (this.PI == true) {
            this.masterService.focusAnyControl("_item");
        }
        else {
            this.masterService.focusAnyControl("AdditionalCostAc_");
        }
        this.BatchList = [];
        //    this.ItemObj = {};
        // ////console.log("ChecKDATAA", this.masterService.AdditionalCostTrnTran)
    };
    // AddDebit() {
    //     let x: Trntran = <Trntran>{};
    //     x.A_ACID = this.form.value.AdditionalPurchaseAc.ACID;
    //     x.AccountItem = this.form.value.AdditionalPurchaseAc;
    //     x.DRAMNT = this.form.value.AMOUNT;
    //     x.CRAMNT = 0;
    //     x.PartyDetails = [];
    //     x.ROWMODE = "new";
    //     x.inputMode = true;
    //     x.acitem = this.form.value.AdditionalPurchaseAc;
    //     this.masterService.AdditionalCostTrnTran.push(x);
    // }
    // AddCredit() {
    //     let y: Trntran = <Trntran>{};
    //     y.A_ACID = this.form.value.AdditionalPurchaseAc.ACID;
    //     y.AccountItem = this.form.value.CREDITEDAC;
    //     y.DRAMNT = 0;
    //     y.CRAMNT = this.form.value.AMOUNT;
    //     y.PartyDetails = [];
    //     y.ROWMODE = "new";
    //     y.inputMode = true;
    //     y.acitem = this.form.value.CREDITEDAC;
    //     this.masterService.AdditionalCostTrnTran.push(y);
    // }
    additionalCostDetail.prototype.EmptyAddCost = function () {
        this.form.patchValue({
            // CREDITEDAC: "",
            // AdditionalPurchaseAc: "",
            AMOUNT: "",
            // REMARKS: "",
            MCODE: "",
        });
        this.masterService.AdditionalAMOUNT = "";
        if (this.PI == false) {
            this.masterService.AdditionalPurchaseAcObj = '';
            this.masterService.AdditionalPurchaseCreditAcObj = '';
            this.masterService.AdditionalREMARKS = "";
            this.form.patchValue({
                REMARKS: ""
            });
        }
    };
    additionalCostDetail.prototype.checkRow = function (index) {
        // //console.log("ChecKVale",index)
    };
    additionalCostDetail.prototype.TableRowDoubleClickEvent = function (l, index) {
        // //console.log("@data to be removed", l, index);
        if (!l.CostingNonCosting) {
            this.masterService.addcosting = 'COSTING';
        }
        else {
            if (l.CostingNonCosting == 'COSTING') {
                this.masterService.addcosting = 'COSTING';
            }
            else {
                this.masterService.addcosting = 'NONCOSTING';
            }
        }
        this.allowRowAdd = false;
        if (l.CostingType == "Group Cost") {
            this.masterService.costType = "GroupCost";
            this.IndividualPI(false);
        }
        else if (l.CostingType == "Ind Cost") {
            this.masterService.costType = "IndividualCost";
            this.IndividualPI(true);
        }
        if (l.GCOSTMODE == "On Qty") {
            ////console.log("inside on qty");
            this.GcostMode = 'Qty';
            this.byQuantity('Qty');
        }
        else if (l.GCOSTMODE == "On Amount") {
            this.GcostMode = 'Amount';
            this.byQuantity('Amount');
        }
        else {
            this.GcostMode = '';
            this.form.value.BYQUANTITY = null;
        }
        this.form.patchValue({ AdditionalPurchaseAc: l.costAc, CREDITEDAC: l.creditAc, AMOUNT: l.amount, REMARKS: l.remarks, MCODE: l.mcode });
        this.masterService.AdditionalPurchaseAcObj = l.costAc.ACNAME;
        this.masterService.AdditionalPurchaseCreditAcObj = l.creditAc.ACNAME;
        // //console.log("AdditionalPurchaseAcObj",this.masterService.AdditionalPurchaseAcObj)
        // //console.log("AdditionalPurchaseCreditAcObj",this.masterService.AdditionalPurchaseCreditAcObj)
        this._addionalcostService.costList.splice(index, 1);
        // this._addionalcostService.onDeleteCost(l);
        // this._transactionService.TrnMainObj.TrntranList.splice(index,1)
        this._transactionService.TrnMainObj.TrntranList = [];
        this._addionalcostService.addCostTotAmount = this._addionalcostService.addCostTotAmount - l.amount;
        if (this._addionalcostService.header)
            this._addionalcostService.header.splice(this._addionalcostService.header.findIndex(function (x) { return x.MAPPINGNAME == l.costAc.ACNAME; }), 1);
        this._addionalcostService.DeleteDynamicColumn(l.costAc.ACNAME);
    };
    additionalCostDetail.prototype.generateCostDetails = function () {
        this._addionalcostService.generateCostDetails();
    };
    additionalCostDetail.prototype.IndividualPI = function (value) {
        this.PI = value;
        if (this.PI == false) {
            this.form.get('MCODE').disable();
            this.form.get('BATCH').disable();
            this.GcostMode = "Amount";
            this.form.value.BYQUANTITY = true;
            this.masterService.focusAnyControl("AdditionalCostAc_");
        }
        else if (this.PI == true) {
            this.form.get('MCODE').enable();
            this.form.get('BATCH').enable();
            this.form.value.BYQUANTITY = null;
            this.GcostMode = "";
            // document.getElementById("_item").focus();
            this.masterService.focusAnyControl("_item");
        }
        this.form.patchValue({ MCODE: "", BATCH: value.BATCH });
        this.ItemObj = value.desca;
        // this.PIADD=true;
    };
    additionalCostDetail.prototype.byQuantity = function (value) {
        // ////console.log("CheckForm1",value)
        if (value == "Qty") {
            this.form.value.BYQUANTITY = true;
            this.qty = true;
        }
        else if (value == "Amount") {
            this.form.value.BYQUANTITY = false;
            this.qty = false;
        }
        else {
            this.form.value.BYQUANTITY = null;
        }
        // ////console.log("CheckForm",this.form.value.BYQUANTITY)
    };
    additionalCostDetail.prototype.TabAcBox = function (name) {
        //    this.genericGridRefBill.show();
        var passingValue = '';
        if (name == 'CreditAC') {
            passingValue = 'AccountListAndSupplier';
            this.gridCreditACListPartyPopupSettings = this.masterService.getGenericGridPopUpSettings(passingValue);
            this.acTag = 'CreditAC';
            this.genericGridCreditACListParty.show();
        }
        else if (name == 'AC') {
            if (this.PI == true && (this.masterService.desca === undefined || this.masterService.desca === '' || this.masterService.desca === null)) {
                alert("Please select item first!");
                return;
            }
            passingValue = 'AccountLedgerList';
            this.gridACListPartyPopupSettings = this.masterService.getGenericGridPopUpSettings(passingValue);
            this.acTag = 'AC';
            this.genericGridACParty.show();
        }
    };
    additionalCostDetail.prototype.ACNameSelect_Additional = function (value, name) {
        // alert("ree123"+value+'A'+this.acTag)
        //console.log("value",value)
        this.form.patchValue({ AdditionalPurchaseAc: value });
        this.masterService.AdditionalPurchaseAcObj = value.ACNAME;
        this.genericGridACParty.hide();
        this.masterService.focusAnyControl("AmountsAD_");
        //console.log("reds",value,this.form.value.AdditionalPurchaseAc)
    };
    additionalCostDetail.prototype.ACNameSelect_Credit = function (value, name) {
        // alert("ree333"+value+'A'+this.acTag)
        this.form.patchValue({ CREDITEDAC: value });
        this.masterService.AdditionalPurchaseCreditAcObj = value.ACNAME;
        this.genericGridCreditACListParty.hide();
        this.masterService.focusAnyControl("RemarksAD_");
    };
    additionalCostDetail.prototype.updown = function ($event) {
        if ($event.key == "Enter") {
            $event.preventDefault();
            if (this.form.valid && this.allowRowAdd === true) {
                ////console.log("Enter pressed")
                // this.onAddClick();
            }
        }
    };
    additionalCostDetail.prototype.focusTrigger = function () {
        this.allowRowAdd = true;
    };
    additionalCostDetail.prototype.ItemSelect = function () {
        if (this.masterService.RefObj.Refno === undefined || this.masterService.RefObj.Refno === '' || this.masterService.RefObj.Refno === null) {
            alert("Please select ref. PI voucher first.");
            return;
        }
        var _voucherno = this.masterService.RefObj.Refno;
        var vchrno = _voucherno.replace("/", "ZZ");
        this.gridItemPopupSettings = {
            title: "Item List ",
            apiEndpoints: "/getItemPagedListPIWise/" + vchrno + "/mcode",
            defaultFilterIndex: 0,
            columns: [
                {
                    key: 'MCODE',
                    title: 'Code',
                    hidden: false,
                    noSearch: false
                },
                {
                    key: 'DESCRIPTION',
                    title: 'Descritopnm',
                    hidden: false,
                    noSearch: false
                }
            ]
        };
        this.genericGridItem.show();
    };
    additionalCostDetail.prototype.dblClickItemSelection = function (value) {
        var _this = this;
        this.masterService.desca = value.DESCRIPTION;
        this.masterService.mcode = value.MCODE;
        this.masterService.batch = "";
        this.masterService.batchid = "";
        var _voucherno = this.masterService.RefObj.Refno;
        this.masterService.getBatchOfItem(_voucherno, value.MCODE).subscribe(function (res) {
            if (res.status == 'ok') {
                //console.log("res", res.result)
                if (res.result && res.result.length == 1) {
                    _this.masterService.batch = res.result[0].BATCH;
                    _this.masterService.batchid = res.result[0].BATCHID;
                    // if (this.masterService.AdditionalPurchaseAcObj === "" || this.masterService.AdditionalPurchaseAcObj === null || this.masterService.AdditionalPurchaseAcObj === undefined) {
                    _this.masterService.focusAnyControl("AdditionalCostAc_");
                    // } else {
                    //     this.masterService.focusAnyControl("AmountsAD_");
                    // }
                }
                else if (res.result && res.result.length > 1) {
                    _this.masterService.focusAnyControl("_batch");
                }
            }
        });
    };
    additionalCostDetail.prototype.BatchSelect = function () {
        if (this.masterService.batch != "") {
            return;
        }
        if (this.masterService.RefObj.Refno === undefined || this.masterService.RefObj.Refno === '' || this.masterService.RefObj.Refno === null) {
            alert("Please select ref. PI voucher first.");
            return;
        }
        var _voucherno = this.masterService.RefObj.Refno;
        var vchrno = _voucherno.replace("/", "ZZ");
        if (this.masterService.mcode === undefined || this.masterService.mcode === '' || this.masterService.mcode === null) {
            alert("Please select item first.");
            return;
        }
        var mcode = this.masterService.mcode;
        //console.log("@@DISPLAY",this.userSetting.DISPLAY)
        if (this.userSetting.DISPLAY == 1) {
            this.gridBatchPopupSettings = {
                title: "Item List ",
                apiEndpoints: "/getItemPagedListPIWise/" + vchrno + "/" + mcode,
                defaultFilterIndex: 0,
                columns: [
                    {
                        key: 'BATCH',
                        title: 'Batch',
                        hidden: false,
                        noSearch: false
                    },
                    {
                        key: 'MfgDate',
                        title: 'MfgDate',
                        hidden: false,
                        noSearch: false
                    },
                    {
                        key: 'ExpDate',
                        title: 'ExpDate',
                        hidden: false,
                        noSearch: false
                    },
                    {
                        key: 'LANDINGCOST',
                        title: 'Rate',
                        hidden: false,
                        noSearch: false
                    },
                    {
                        key: 'MRP',
                        title: 'Mrp',
                        hidden: false,
                        noSearch: false
                    }
                ]
            };
        }
        else {
            this.gridBatchPopupSettings = {
                title: "Item List ",
                apiEndpoints: "/getItemPagedListPIWise/" + vchrno + "/" + mcode,
                defaultFilterIndex: 0,
                columns: [
                    {
                        key: 'BATCH',
                        title: 'Batch',
                        hidden: false,
                        noSearch: false
                    }
                ]
            };
        }
        this.genericGridBatch.show();
    };
    additionalCostDetail.prototype.dblClickBatchSelection = function (value) {
        this.masterService.batch = value.BATCH;
        this.masterService.batchid = value.BATCHID;
        // if (this.masterService.AdditionalPurchaseAcObj === "" || this.masterService.AdditionalPurchaseAcObj === null || this.masterService.AdditionalPurchaseAcObj === undefined) {
        this.masterService.focusAnyControl("AdditionalCostAc_");
        // } else {
        //     this.masterService.focusAnyControl("AmountsAD_");
        // }
    };
    additionalCostDetail.prototype.remarksEntered = function () {
        if (this.PI == true) {
            this.onAddClick();
        }
    };
    additionalCostDetail.prototype.gcostEntered = function () {
        if (this.PI == false) {
            this.onAddClick();
        }
    };
    return additionalCostDetail;
}());
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__angular_core__["ViewChild"])("genericGridACParty"),
    __metadata("design:type", __WEBPACK_IMPORTED_MODULE_5__common_popupLists_generic_grid_generic_popup_grid_component__["c" /* GenericPopUpComponent */])
], additionalCostDetail.prototype, "genericGridACParty", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__angular_core__["ViewChild"])("genericGridCreditACListParty"),
    __metadata("design:type", __WEBPACK_IMPORTED_MODULE_5__common_popupLists_generic_grid_generic_popup_grid_component__["c" /* GenericPopUpComponent */])
], additionalCostDetail.prototype, "genericGridCreditACListParty", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__angular_core__["ViewChild"])("genericGridItem"),
    __metadata("design:type", __WEBPACK_IMPORTED_MODULE_5__common_popupLists_generic_grid_generic_popup_grid_component__["c" /* GenericPopUpComponent */])
], additionalCostDetail.prototype, "genericGridItem", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__angular_core__["ViewChild"])("genericGridBatch"),
    __metadata("design:type", __WEBPACK_IMPORTED_MODULE_5__common_popupLists_generic_grid_generic_popup_grid_component__["c" /* GenericPopUpComponent */])
], additionalCostDetail.prototype, "genericGridBatch", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__angular_core__["HostListener"])("document: keydown", ["$event"]),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [KeyboardEvent]),
    __metadata("design:returntype", void 0)
], additionalCostDetail.prototype, "updown", null);
additionalCostDetail = __decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__angular_core__["Component"])({
        selector: 'additionalCost',
        template: __webpack_require__(1338),
        styles: [__webpack_require__(120), __webpack_require__(9), __webpack_require__(554)],
        providers: []
    }),
    __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_2__addtionalCost_service__["a" /* AdditionalCostService */],
        __WEBPACK_IMPORTED_MODULE_3__angular_forms__["FormBuilder"],
        __WEBPACK_IMPORTED_MODULE_0__common_repositories_masterRepo_service__["a" /* MasterRepo */],
        __WEBPACK_IMPORTED_MODULE_4__common_Transaction_Components_transaction_service__["a" /* TransactionService */],
        __WEBPACK_IMPORTED_MODULE_6__common_services_permission__["a" /* AuthService */]])
], additionalCostDetail);



/***/ }),

/***/ 1290:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__common_repositories_masterRepo_service__ = __webpack_require__(8);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__addtionalCost_service__ = __webpack_require__(43);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__angular_forms__ = __webpack_require__(3);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return CostingDetailComponent; });




var CostingDetailComponent = (function () {
    function CostingDetailComponent(_addionalcostService, fb, masterService, _additionalCostService) {
        this._addionalcostService = _addionalcostService;
        this.fb = fb;
        this.masterService = masterService;
        this._additionalCostService = _additionalCostService;
        this.header = [];
        this.TrnMainObj = _addionalcostService.TrnMainObj;
        // ////console.log("headers===" + JSON.stringify(_addionalcostService.header));
        // ////console.log("additionalCost", this._addionalcostService.addtionalCostList)
        this.form = fb.group({
            AdditionalPurchaseAc: [''],
        });
        this._additionalCostService.header = [{ TITLE: 'Item Code' }, { TITLE: 'Item Name' }, { TITLE: 'Batch' }, { TITLE: 'Qty' }, { TITLE: 'Amount' }];
        this._additionalCostService.generateCostDetails();
    }
    CostingDetailComponent.prototype.selectAlignment = function (value) {
        ////console.log("#",value)
    };
    return CostingDetailComponent;
}());
CostingDetailComponent = __decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__angular_core__["Component"])({
        selector: 'costingDetail',
        template: __webpack_require__(1339),
        styles: [__webpack_require__(120), __webpack_require__(9), __webpack_require__(554)],
        providers: []
    }),
    __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_2__addtionalCost_service__["a" /* AdditionalCostService */], __WEBPACK_IMPORTED_MODULE_3__angular_forms__["FormBuilder"], __WEBPACK_IMPORTED_MODULE_0__common_repositories_masterRepo_service__["a" /* MasterRepo */], __WEBPACK_IMPORTED_MODULE_2__addtionalCost_service__["a" /* AdditionalCostService */]])
], CostingDetailComponent);



/***/ }),

/***/ 1291:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__common_Transaction_Components_transaction_service__ = __webpack_require__(7);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__common_repositories_masterRepo_service__ = __webpack_require__(8);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__angular_forms__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__addtionalCost_service__ = __webpack_require__(43);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return PurchaseDetailComponent; });





var PurchaseDetailComponent = (function () {
    function PurchaseDetailComponent(transactionService, fb, masterService, _additionalCostService) {
        this.transactionService = transactionService;
        this.fb = fb;
        this.masterService = masterService;
        this._additionalCostService = _additionalCostService;
        // form:FormGroup;
        this.TrnProdlist = [];
        this.TrnMainObj = this._additionalCostService.TrnMainObj;
        this.TrnProdlist = (this.TrnMainObj.ProdList);
    }
    PurchaseDetailComponent.prototype.changeRate = function (value, index) {
        this._additionalCostService.addtionalCostList[index].rate = value;
        this._additionalCostService.addtionalCostList[index].amount = value * this._additionalCostService.addtionalCostList[index].quantity;
        this._additionalCostService.addtionalCostList[index].nAmount = this._additionalCostService.addtionalCostList[index].amount * 1.13;
    };
    PurchaseDetailComponent.prototype.EnterClickOnRate = function (i) {
        this.masterService.focusAnyControl('_AdditioanlCostRate' + (i + 1));
    };
    return PurchaseDetailComponent;
}());
PurchaseDetailComponent = __decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__angular_core__["Component"])({
        selector: 'purchaseDetail',
        template: __webpack_require__(1341),
        styles: [__webpack_require__(120), __webpack_require__(9), __webpack_require__(554)],
        providers: []
    }),
    __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_0__common_Transaction_Components_transaction_service__["a" /* TransactionService */], __WEBPACK_IMPORTED_MODULE_3__angular_forms__["FormBuilder"], __WEBPACK_IMPORTED_MODULE_1__common_repositories_masterRepo_service__["a" /* MasterRepo */], __WEBPACK_IMPORTED_MODULE_4__addtionalCost_service__["a" /* AdditionalCostService */]])
], PurchaseDetailComponent);



/***/ }),

/***/ 1292:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return TabComponent; });

var TabComponent = (function () {
    function TabComponent() {
    }
    return TabComponent;
}());
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])(),
    __metadata("design:type", String)
], TabComponent.prototype, "tabTitle", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])(),
    __metadata("design:type", Boolean)
], TabComponent.prototype, "show", void 0);
TabComponent = __decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
        selector: 'tab',
        template: "\n        <p [hidden]=\"!show\">\n            <ng-content></ng-content>\n        </p>\n    "
    })
], TabComponent);



/***/ }),

/***/ 1293:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__addtionalCost_service__ = __webpack_require__(43);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__tab__ = __webpack_require__(1292);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return TabsComponent; });



var TabsComponent = (function () {
    function TabsComponent(additionalcostService) {
        this.additionalcostService = additionalcostService;
    }
    TabsComponent.prototype.ngAfterContentInit = function () {
        this.select(this.tabs.first);
    };
    TabsComponent.prototype.onSelect = function (tab) {
        this.select(tab);
    };
    TabsComponent.prototype.select = function (tab) {
        this.tabs.forEach(function (item) {
            item.show = false;
        });
        this.selectedTab = tab;
        this.selectedTab.show = true;
        if (tab.tabTitle == "Costing Detail") {
            if (this.additionalcostService.costList == null || this.additionalcostService.costList.length == 0) {
                return;
            }
            else {
                this.additionalcostService.generateCostDetails();
            }
        }
    };
    return TabsComponent;
}());
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__angular_core__["ContentChildren"])(__WEBPACK_IMPORTED_MODULE_2__tab__["a" /* TabComponent */]),
    __metadata("design:type", __WEBPACK_IMPORTED_MODULE_1__angular_core__["QueryList"])
], TabsComponent.prototype, "tabs", void 0);
TabsComponent = __decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__angular_core__["Component"])({
        selector: 'tabs',
        template: "\n       <ul class=\"tab-list\">\n           <li *ngFor=\"let tab of tabs\" [class.active]=\"selectedTab===tab\" (click)=\"onSelect(tab)\">\n               {{tab.tabTitle}}\n           </li>\n       </ul>\n       <ng-content></ng-content>\n    ",
        styles: ["\n        .tab-list{\n            list-style:none;\n            overflow:hidden;\n            padding:0;\n            color: black;\n        }\n\n        .tab-list li{\n            cursor:pointer;\n            float:left;\n            width:170px;\n            height:30px;\n            line-height:30px;\n            text-align:center;\n            margin: 0 .2em 1px 0;\n    border: 1px solid #d6d6d6;\n    background-color: #f6f7f9;\n        border-top-left-radius: 3px;\n    border-top-right-radius: 3px;\n    border-bottom: 0px;\n        }\n\n        .tab-list li:hover{\n            background-color:#d6d6d6;\n        }\n        .tab-list li.active{\n            background-color:white;\n        }\n    "]
    }),
    __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_0__addtionalCost_service__["a" /* AdditionalCostService */]])
], TabsComponent);



/***/ }),

/***/ 1294:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__common_repositories_masterRepo_service__ = __webpack_require__(8);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__angular_forms__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__common_Transaction_Components_transaction_service__ = __webpack_require__(7);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__common_popupLists_generic_grid_generic_popup_grid_component__ = __webpack_require__(35);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__common_services_permission__ = __webpack_require__(15);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__AdditionalCost_addtionalCost_service__ = __webpack_require__(43);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__common_services_spinner_spinner_service__ = __webpack_require__(20);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8_moment__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8_moment___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_8_moment__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return newIndividualCostDetail; });









var newIndividualCostDetail = (function () {
    function newIndividualCostDetail(_addionalcostService, fb, masterService, _transactionService, authservice, loadingService) {
        this._addionalcostService = _addionalcostService;
        this.fb = fb;
        this.masterService = masterService;
        this._transactionService = _transactionService;
        this.authservice = authservice;
        this.loadingService = loadingService;
        this.majorParentAcList = [];
        this.costdata = [];
        this.allList = [];
        this.allowRowAdd = false;
        this.PI = true;
        this.PIList = [];
        this.PIADD = true;
        this.qty = true;
        this.NEWOBJ = {};
        this.NEW_IndCostList = []; // to hold the list of ind amount 
        this.gridACListPartyPopupSettings = new __WEBPACK_IMPORTED_MODULE_4__common_popupLists_generic_grid_generic_popup_grid_component__["b" /* GenericPopUpSettings */]();
        this.gridCreditACListPartyPopupSettings = new __WEBPACK_IMPORTED_MODULE_4__common_popupLists_generic_grid_generic_popup_grid_component__["b" /* GenericPopUpSettings */]();
        this.gridItemPopupSettings = new __WEBPACK_IMPORTED_MODULE_4__common_popupLists_generic_grid_generic_popup_grid_component__["b" /* GenericPopUpSettings */]();
        this.gridBatchPopupSettings = new __WEBPACK_IMPORTED_MODULE_4__common_popupLists_generic_grid_generic_popup_grid_component__["b" /* GenericPopUpSettings */]();
        this.gridACListPopupSettings = new __WEBPACK_IMPORTED_MODULE_4__common_popupLists_generic_grid_generic_popup_grid_component__["b" /* GenericPopUpSettings */]();
        this.gridPopupSettingsForSupplier = new __WEBPACK_IMPORTED_MODULE_4__common_popupLists_generic_grid_generic_popup_grid_component__["b" /* GenericPopUpSettings */]();
        this.gridSubLedgerSettingCr = new __WEBPACK_IMPORTED_MODULE_4__common_popupLists_generic_grid_generic_popup_grid_component__["b" /* GenericPopUpSettings */]();
        this.gridSubLedgerSettingDr = new __WEBPACK_IMPORTED_MODULE_4__common_popupLists_generic_grid_generic_popup_grid_component__["b" /* GenericPopUpSettings */]();
        this.gridSubLedgerSettingAc = new __WEBPACK_IMPORTED_MODULE_4__common_popupLists_generic_grid_generic_popup_grid_component__["b" /* GenericPopUpSettings */]();
        this.genericGridACPartyForReverseJournal = new __WEBPACK_IMPORTED_MODULE_4__common_popupLists_generic_grid_generic_popup_grid_component__["b" /* GenericPopUpSettings */]();
        this.ItemObj = {};
        this.BatchList = [];
        this._transactionService.initialFormLoad(66);
        this.TrnMainObj = _addionalcostService.TrnMainObj;
        this.form = fb.group({
            CREDITEDAC: ['', __WEBPACK_IMPORTED_MODULE_2__angular_forms__["Validators"].required],
            AdditionalPurchaseAc: ['', __WEBPACK_IMPORTED_MODULE_2__angular_forms__["Validators"].required],
            AMOUNT: ['', __WEBPACK_IMPORTED_MODULE_2__angular_forms__["Validators"].required],
            REMARKS: [''],
            MCODE: [''],
            BYQUANTITY: [''],
            DESCA: [''],
            BATCH: [''],
            BATCHID: [''],
            COSTING: [''],
            INDDATA: ['']
        });
        // this.masterService.getpartyListTree()
        //     .subscribe(data => {
        //         let l = data
        //         this.majorParentAcList = l;
        //     });
        // this.masterService.getAccount('').subscribe(data => {
        //     this.allList = data;
        // }
        // )
        this.PI = true;
        this.PIADD = false;
        this.qty = false;
        this.IndividualPI(false);
        this.masterService.focusAnyControl("AdditionalCostAc_");
        // this.form.get('MCODE').disable();
        // this._transactionService.TrnMainObj.TrntranList.splice(-1);
        this.byQuantity("Amount");
        this._transactionService.DrillMode = "New";
        this.userSetting = authservice.getSetting();
    }
    Object.defineProperty(newIndividualCostDetail.prototype, "selectedProd", {
        get: function () {
            return this._selectedProd;
        },
        set: function (value) {
            this._selectedProd = value;
        },
        enumerable: true,
        configurable: true
    });
    newIndividualCostDetail.prototype.ngOnInit = function () {
        this.PIList = this._addionalcostService.addtionalCostList;
        // ////console.log("PIList", this.PIList)
        //console.log("mode",this._transactionService.TrnMainObj.Mode)
        if (this._transactionService.TrnMainObj.Mode == 'NEW') {
            this.PI = true;
            this.masterService.costType = "IndividualCost";
            this.masterService.addcosting = 'COSTING';
            this.masterService.DoAccountPosting_2 = 1;
            this.masterService.IsTaxableBill_2 = 1;
            this.masterService.IS_ECA_ITEM_2 = 0;
            this.GcostMode == "Amount";
            this.masterService.DoReverseJournalEntry_2 = 0;
            this.masterService.focusAnyControl("AdditionalCostAc_");
            this.masterService.ShowMore = false;
        }
    };
    newIndividualCostDetail.prototype.passValue = function () {
        this.BatchList = [];
        this.ValuePI = 1;
        this.form.patchValue({
            MCODE: this.ItemObj.mcode,
        });
        for (var _i = 0, _a = this._addionalcostService.addtionalCostList; _i < _a.length; _i++) {
            var i = _a[_i];
            if (i.menucode == this.ItemObj.mcode) {
                this.BatchList.push(i);
            }
        }
        //console.log("valueObj1", this.BatchList)
    };
    newIndividualCostDetail.prototype.onAddClick = function () {
        this.PI = true; //false for ind costing
        this.masterService.addcosting = 'COSTING'; //always costing for ind cost
        this.form.patchValue({
            MCODE: this.masterService.mcode,
            DESCA: this.masterService.desca,
            BATCH: this.masterService.batch,
            BATCHID: this.masterService.batchid
        });
        // console.log("Hereby",this.form.value)
        // this._addionalcostService.costdetail = [];
        // this.masterService.addcosting = "true";
        // if(this.PI == true && this.form.controls.MCODE.value == ""){
        //     alert("Enter Item for Individual item cost type !");
        //     return;
        // }
        // if(this.PI == true && this.form.controls.BATCH.value == ""){
        //     alert("Enter batch for Individual item cost type !");
        //     return;
        // }
        // if(this.PI == false && this.GcostMode == ''){
        //     alert("Enter Group cost mode.");
        //     return;
        // }
        if (this.PI == true && this.form.controls.CREDITEDAC.value == "") {
            alert("Enter Credited Account for Individual item cost type !");
            return;
        }
        if (this.masterService.AdditionalAMOUNT_2 == "" || this.masterService.AdditionalAMOUNT_2 == null ||
            this.masterService.AdditionalAMOUNT_2 == 0) {
            alert("Amount is required");
            return;
        }
        var desca = '';
        // console.log('addtionalCostList', this._addionalcostService.addtionalCostList, this._addionalcostService.addtionalCostList)
        for (var _i = 0, _a = this._addionalcostService.addtionalCostList; _i < _a.length; _i++) {
            var i = _a[_i];
            if (i.mcode == this.form.value.MCODE) {
                desca = i.desca;
            }
        }
        // if (this.PI == false) {
        //     for (const iterator of this._addionalcostService.costList) {
        //         if (iterator.amount == "" || iterator.amount == null) {
        //             alert("Amount is required");
        //             return;
        //         }
        //     }
        // }
        // if(this.PI == false){
        for (var _b = 0, _c = this._addionalcostService.costList; _b < _c.length; _b++) {
            var iterator = _c[_b];
            if ((iterator.costAc.ACNAME == this.form.value.AdditionalPurchaseAc.ACNAME && (iterator.CostingNonCosting == 'COSTING' || iterator.CostingNonCosting == 'true'))
                || (iterator.costAc.ACNAME == this.form.value.AdditionalPurchaseAc.ACNAME && (iterator.CostingNonCosting == 'NONCOSTING' || iterator.CostingNonCosting == 'false') && this.masterService.addcosting == 'COSTING')) {
                alert("Duplicate Additional Cost A/C !");
                return;
            }
        }
        // }
        // else if(this.PI == true){
        //     for(const iterator of this._addionalcostService.costList){
        //         if(iterator.costAc.ACNAME == this.form.value.AdditionalPurchaseAc.ACNAME 
        //             && iterator.mcode ==  this.form.value.MCODE
        //             && iterator.batch ==  this.form.value.BATCH){
        //             alert("Duplicate Additional Cost A/C and Item!");
        //             return;
        //         }
        //     }
        // }
        if (this.masterService.AdditionalPurchaseAcObj_2 == null || this.masterService.AdditionalPurchaseAcObj_2 == "" || this.masterService.AdditionalPurchaseAcObj_2 == undefined) {
            alert("Please enter Additional cost A/C");
            return;
        }
        if (this.masterService.AdditionalPurchaseCreditAcObj_2 == null || this.masterService.AdditionalPurchaseCreditAcObj_2 == "" || this.masterService.AdditionalPurchaseCreditAcObj_2 == undefined) {
            alert("Please enter credited A/C !");
            return;
        }
        if (this.masterService.RefObj.Ref_SupplierName_2 == null || this.masterService.RefObj.Ref_SupplierName_2 == "" || this.masterService.RefObj.Ref_SupplierName_2 == undefined) {
            this.masterService.RefObj.Ref_SupplierACID_2 = "";
            this.REFSUPPLIERNAME = "";
        }
        if (this.masterService.TDSAccount_Name_2 == null || this.masterService.TDSAccount_Name_2 == "" || this.masterService.TDSAccount_Name_2 == undefined) {
            this.masterService.TDSAccount_ACID_2 = "";
            this.masterService.TDSAmount_2 = 0;
            this.TDSACCOUNTNAME = "";
        }
        else {
            if (this.masterService.TDSAccount_ACID_2 &&
                (this.masterService.TDSAmount_2 == null || this.masterService.TDSAmount_2 == "" || this.masterService.TDSAmount_2 == undefined || this.masterService.TDSAmount_2 == 0)) {
                alert("Please enter TDS Amount !");
                return;
            }
            if (this.masterService.TDSAccount_ACID_2 && this.masterService.TDSAmount_2 > 0) {
                if (this.masterService.RefObj.Ref_SupplierACID_2 == null || this.masterService.RefObj.Ref_SupplierACID_2 == "" || this.masterService.RefObj.Ref_SupplierACID_2 == undefined ||
                    this.masterService.RefObj.Ref_SupplierName_2 == null || this.masterService.RefObj.Ref_SupplierName_2 == "" || this.masterService.RefObj.Ref_SupplierName_2 == undefined) {
                    alert("Please enter Supplier !");
                    return;
                }
            }
        }
        if (this.masterService.IsTaxableBill_2 == 1) {
            if (this.masterService.RefObj.Ref_BILLNO_2 == null || this.masterService.RefObj.Ref_BILLNO_2 == "" || this.masterService.RefObj.Ref_BILLNO_2 == undefined ||
                this.masterService.RefObj.Ref_TRNDATE_2 == null || this.masterService.RefObj.Ref_TRNDATE_2 == "" || this.masterService.RefObj.Ref_TRNDATE_2 == undefined ||
                this.masterService.RefObj.Ref_SupplierName_2 == null || this.masterService.RefObj.Ref_SupplierName_2 == "" || this.masterService.RefObj.Ref_SupplierName_2 == undefined) {
                alert("Ref Bill No, Ref Bill Date, Supplier Name is compulsory for taxable additional bill !");
                return;
            }
        }
        if (this._transactionService.userSetting.ENABLESUBLEDGER == 1) {
            if (this.masterService.DR_INDV_HASSUBLEDGER == 1 && this.masterService.DR_SL_INDV_ACID == "") {
                alert("Please, specify SUB LEDGER FOR A/C '" + this.form.value.AdditionalPurchaseAc.ACNAME + "'");
                return;
            }
            if (this.masterService.CR_INDV_HASSUBLEDGER == 1 && this.masterService.CR_SL_INDV_ACID == "") {
                alert("Please, specify SUB LEDGER FOR A/C '" + this.form.value.CREDITEDAC.ACNAME + "'");
                return;
            }
            if (this.masterService.TDS_INDV_HASSUBLEDGER == 1 && this.masterService.TDS_SL_INDV_ACID == "") {
                alert("Please, specify SUB LEDGER FOR A/C '" + this.TDSACCOUNTNAME + "'");
                return;
            }
        }
        //console.log("Hereby1",this.form.value.AdditionalPurchaseAc)
        var res = {};
        res.creditAc = this.form.value.CREDITEDAC;
        res.remarks = this.masterService.AdditionalREMARKS_2;
        res.costAc = this.form.value.AdditionalPurchaseAc;
        res.amount = this.masterService.AdditionalAMOUNT_2;
        res.mcode = this.form.value.MCODE;
        res.desca = desca;
        res.batch = this.form.value.BATCH;
        res.batchid = this.form.value.BATCHID;
        res.CostingNonCosting = this.masterService.addcosting;
        res.Ref_BILLNO = this.masterService.RefObj.Ref_BILLNO_2;
        res.Ref_TRNDATE = this.masterService.RefObj.Ref_TRNDATE_2;
        res.Ref_SupplierName = this.REFSUPPLIERNAME;
        res.TDSAmount = this.masterService.TDSAmount_2;
        res.TDSAccount_ACID = this.masterService.TDSAccount_ACID_2;
        res.TDSAccount_Name = this.TDSACCOUNTNAME;
        res.AdditionalDesc = this.masterService.AdditionalDesc_2;
        res.IsTaxableBill = this.masterService.IsTaxableBill_2 ? this.masterService.IsTaxableBill_2 : 0;
        res.DoAccountPosting = this.masterService.DoAccountPosting_2 ? this.masterService.DoAccountPosting_2 : 0;
        res.Ref_SupplierVAT = this.masterService.RefObj.Ref_SupplierVAT_2;
        res.Ref_SupplierACID = this.masterService.RefObj.Ref_SupplierACID_2;
        res.Ref_BSDATE = this.masterService.RefObj.Ref_BSDATE_2;
        // res.IND_DATA=this.NEW_IndCostList;
        res.IS_ECA_ITEM = this.masterService.IS_ECA_ITEM_2 ? this.masterService.IS_ECA_ITEM_2 : 0;
        res.DR_SL_ACID = this.masterService.DR_SL_INDV_ACID;
        res.DR_SL_ACNAME = this.masterService.DR_SL_INDV_ACNAME;
        res.CR_SL_ACID = this.masterService.CR_SL_INDV_ACID;
        res.CR_SL_ACNAME = this.masterService.CR_SL_INDV_ACNAME;
        res.TDS_SL_ACID = this.masterService.TDS_SL_INDV_ACID;
        res.TDS_SL_ACNAME = this.masterService.TDS_SL_INDV_ACNAME;
        res.DoReverseJournalEntry = this.masterService.DoReverseJournalEntry_2 ? this.masterService.DoReverseJournalEntry_2 : 0;
        res.ReverseJournalEntryACNAME = this.masterService.ReverseJournalACNAME_2 ? this.masterService.ReverseJournalACNAME_2 : '';
        res.ReverseJournalEntryACID = this.masterService.ReverseJournalACID_2 ? this.masterService.ReverseJournalACID_2 : '';
        // console.log(' res.DR_SL_ACID',  res.DR_SL_ACID, res.DR_SL_ACNAME);
        // console.log('this.masterService.DR_SL_INDV_ACID', this.masterService.DR_SL_INDV_ACID)
        if (res.IsTaxableBill == 0) {
            res.AdditionalVAT = this.masterService.AdditionalVAT_2 = 0;
        }
        else {
            res.AdditionalVAT = this.masterService.AdditionalVAT_2;
        }
        // if(this.PI==false){
        //     res.CostingType = "Group Cost";
        // }
        // else{
        res.CostingType = "Ind Cost";
        // }
        // if (this.PI == false) {
        //     res.CostingNonCosting = 'COSTING';
        // }
        // else {
        //     res.CostingNonCosting ='NONCOSTING';
        // }
        // let checked_costValue = document.querySelector('input[value = "true"]:checked');
        // if (checked_costValue != null) {  //Test if something was checked
        //     res.CostingNonCosting = true;
        // } else {
        //     res.CostingNonCosting = false
        // }
        // ////console.log("checking group cost", this.form.value.BYQUANTITY)
        // if(this.form.value.BYQUANTITY == true){
        //     res.GCOSTMODE = "On Qty";
        // }
        // else if(this.form.value.BYQUANTITY == false){
        //     res.GCOSTMODE = "On Amount";
        // }
        // else{
        //     res.GCOSTMODE = "";
        // }
        if (this.GcostMode == "Qty") {
            res.GCOSTMODE = "On Qty";
            this.byQuantity("Qty");
        }
        else if (this.GcostMode == "Amount") {
            res.GCOSTMODE = "On Amount";
            this.byQuantity("Amount");
        }
        else {
            res.GCOSTMODE = "";
        }
        res.byQuanty = this.form.value.BYQUANTITY;
        //console.log("Hereby2",this.form.value.AdditionalPurchaseAc)
        //console.log("res$$",res,this.form.value.AdditionalPurchaseAc)
        this._addionalcostService.onAddCost(res);
        // this.AddDebit();
        // this.AddCredit();
        this.EmptyAddCost();
        if (this.ValuePI == 1)
            this.PIADD = true;
        //    this.form.patchValue({
        //     AdditionalPurchaseAc:''
        //    })
        //    this.masterService.AdditionalPurchaseAcObj = ''
        //    this.masterService.AdditionalPurchaseCreditAcObj = ''
        this.masterService.mcode = '';
        this.masterService.desca = '';
        this.masterService.batch = '';
        this.masterService.batchid = '';
        if (this.PI == true) {
            this.masterService.focusAnyControl("_item");
        }
        else {
            this.masterService.focusAnyControl("AdditionalCostAc_");
        }
        this.BatchList = [];
        //    this.ItemObj = {};
        // ////console.log("ChecKDATAA", this.masterService.AdditionalCostTrnTran)
        // console.log('check', this.masterService.TDS_SL_INDV_ACNAME ,  this._addionalcostService.INDcostList)
    };
    // AddDebit() {
    //     let x: Trntran = <Trntran>{};
    //     x.A_ACID = this.form.value.AdditionalPurchaseAc.ACID;
    //     x.AccountItem = this.form.value.AdditionalPurchaseAc;
    //     x.DRAMNT = this.form.value.AMOUNT;
    //     x.CRAMNT = 0;
    //     x.PartyDetails = [];
    //     x.ROWMODE = "new";
    //     x.inputMode = true;
    //     x.acitem = this.form.value.AdditionalPurchaseAc;
    //     this.masterService.AdditionalCostTrnTran.push(x);
    // }
    // AddCredit() {
    //     let y: Trntran = <Trntran>{};
    //     y.A_ACID = this.form.value.AdditionalPurchaseAc.ACID;
    //     y.AccountItem = this.form.value.CREDITEDAC;
    //     y.DRAMNT = 0;
    //     y.CRAMNT = this.form.value.AMOUNT;
    //     y.PartyDetails = [];
    //     y.ROWMODE = "new";
    //     y.inputMode = true;
    //     y.acitem = this.form.value.CREDITEDAC;
    //     this.masterService.AdditionalCostTrnTran.push(y);
    // }
    newIndividualCostDetail.prototype.EmptyAddCost = function () {
        this.form.patchValue({
            // CREDITEDAC: "",
            // AdditionalPurchaseAc: "",
            AMOUNT: "",
            // REMARKS: "",
            MCODE: "",
        });
        this.masterService.AdditionalAMOUNT_2 = "";
        // if(this.PI == false){ // empty additionalcost a/c on  groupcost radio button selection
        this.masterService.AdditionalPurchaseAcObj_2 = '';
        this.masterService.AdditionalPurchaseAcObj_2_ACID = '';
        this.masterService.AdditionalPurchaseCreditAcObj_2 = '';
        this.masterService.AdditionalREMARKS_2 = "";
        this.masterService.AdditionalDesc_2 = "";
        this.masterService.AdditionalVAT_2 = 0;
        this.masterService.TDSAmount_2 = 0;
        this.masterService.TDSAccount_ACID_2 = "";
        this.masterService.TDSAccount_Name_2 = "";
        this.masterService.DoAccountPosting_2 = 1;
        this.masterService.IsTaxableBill_2 = 1;
        this.masterService.RefObj.Ref_BILLNO_2 = "";
        this.masterService.RefObj.Ref_TRNDATE_2 = "";
        this.masterService.RefObj.Ref_BSDATE_2 = "";
        this.masterService.RefObj.Ref_SupplierACID_2 = "";
        this.masterService.RefObj.Ref_SupplierName_2 = "";
        this.masterService.RefObj.Ref_SupplierVAT_2 = "";
        this.TDSACCOUNTNAME = "";
        this.REFSUPPLIERNAME = "";
        this.masterService.showIndividualAmountPopup = false;
        this._addionalcostService.tempIndCostList = [];
        this.NEW_IndCostList = [];
        this.masterService.TOTALINDAMOUNT = 0;
        this.masterService.IS_ECA_ITEM_2 = 0;
        this.masterService.DR_SL_INDV_ACID = '';
        this.masterService.DR_SL_INDV_ACNAME = '';
        this.masterService.CR_SL_INDV_ACID = '';
        this.masterService.CR_SL_INDV_ACNAME = '';
        this.masterService.TDS_SL_INDV_ACID = '';
        this.masterService.TDS_SL_INDV_ACNAME = '';
        this.masterService.DoReverseJournalEntry_2 = 0;
        this.masterService.ReverseJournalACID_2 = '';
        this.masterService.ReverseJournalACNAME_2 = '';
        this.form.patchValue({
            REMARKS: "",
            INDDATA: []
        });
        // }
    };
    newIndividualCostDetail.prototype.checkRow = function (index) {
        // //console.log("ChecKVale",index)
    };
    newIndividualCostDetail.prototype.TableRowDoubleClickEvent = function (l) {
        // console.log("@data to be removed", l);
        if (this._transactionService.TrnMainObj.Mode == 'VIEW') {
            return;
        }
        if (l.CostingNonCosting == 'COSTING') {
            this.masterService.addcosting = 'COSTING';
        }
        else {
            this.masterService.addcosting = 'NONCOSTING';
        }
        this.allowRowAdd = false;
        if (l.CostingType == "Group Cost") {
            this.masterService.costType = "GroupCost";
            this.IndividualPI(false);
        }
        else if (l.CostingType == "Ind Cost") {
            this.masterService.costType = "IndividualCost";
            this.IndividualPI(true);
        }
        if (l.GCOSTMODE == "On Qty") {
            ////console.log("inside on qty");
            this.GcostMode = 'Qty';
            this.byQuantity('Qty');
        }
        else if (l.GCOSTMODE == "On Amount") {
            this.GcostMode = 'Amount';
            this.byQuantity('Amount');
        }
        else {
            this.GcostMode = '';
            this.form.value.BYQUANTITY = null;
        }
        if (l.CostingType != "Ind Cost") {
            return;
        }
        this.form.patchValue({ AdditionalPurchaseAc: l.costAc, CREDITEDAC: l.creditAc, AMOUNT: l.amount, REMARKS: l.remarks, MCODE: l.mcode,
            AdditionalDesc: l.AdditionalDesc, AdditionalVAT: l.AdditionalVAT, TDSAmount: l.TDSAmount,
            TDSAccount_Name: l.TDSAccount_Name, DoAccountPosting: l.DoAccountPosting, IsTaxableBill: l.IsTaxableBill });
        this.masterService.AdditionalPurchaseAcObj_2 = l.costAc.ACNAME;
        this.masterService.AdditionalPurchaseAcObj_2_ACID = l.costAc.ACID;
        this.masterService.AdditionalPurchaseCreditAcObj_2 = l.creditAc.ACNAME;
        this.masterService.AdditionalAMOUNT_2 = l.amount;
        this.masterService.AdditionalREMARKS_2 = l.remarks;
        this.masterService.TDSAmount_2 = l.TDSAmount;
        this.masterService.TDSAccount_Name_2 = l.TDSAccount_Name;
        this.masterService.AdditionalDesc_2 = l.AdditionalDesc;
        this.masterService.AdditionalVAT_2 = l.AdditionalVAT;
        this.masterService.IsTaxableBill_2 = l.IsTaxableBill;
        this.masterService.DoAccountPosting_2 = l.DoAccountPosting;
        this.masterService.RefObj.Ref_BILLNO_2 = l.Ref_BILLNO;
        this.masterService.RefObj.Ref_TRNDATE_2 = l.Ref_TRNDATE;
        this.masterService.RefObj.Ref_BSDATE_2 = l.Ref_BSDATE;
        this.masterService.RefObj.Ref_SupplierACID_2 = l.Ref_SupplierACID;
        this.masterService.RefObj.Ref_SupplierName_2 = l.Ref_SupplierName;
        this.masterService.RefObj.Ref_SupplierVAT_2 = l.Ref_SupplierVAT;
        this.masterService.TDSAccount_ACID_2 = l.TDSAccount_ACID;
        this.masterService.IS_ECA_ITEM_2 = l.IS_ECA_ITEM;
        this.TDSACCOUNTNAME = l.TDSAccount_Name;
        this.REFSUPPLIERNAME = l.Ref_SupplierName;
        this._addionalcostService.tempIndCostList = [];
        this.masterService.TOTALINDAMOUNT = 0;
        this._addionalcostService.tempIndCostList = this._addionalcostService.IndividualCostList.filter(function (x) { return x.additionalcostac == l.costAc.ACID; }); //l.IND_DATA;
        this.masterService.DR_SL_INDV_ACID = l.DR_SL_INDV_ACID;
        this.masterService.DR_SL_INDV_ACNAME = l.DR_SL_INDV_ACNAME;
        this.masterService.CR_SL_INDV_ACID = l.CR_SL_INDV_ACID;
        this.masterService.CR_SL_INDV_ACNAME = l.CR_SL_INDV_ACNAME;
        this.masterService.TDS_SL_INDV_ACID = l.TDS_SL_INDV_ACID;
        this.masterService.TDS_SL_INDV_ACNAME = l.TDS_SL_ACNAME;
        this.masterService.DoReverseJournalEntry_2 = l.DoReverseJournalEntry ? l.DoReverseJournalEntry : 0;
        this.masterService.ReverseJournalACID_2 = l.ReverseJournalEntryACID ? l.ReverseJournalEntryACID : '';
        this.masterService.ReverseJournalACNAME_2 = l.ReverseJournalEntryACNAME ? l.ReverseJournalEntryACNAME : '';
        // this._addionalcostService.tempIndCostList.forEach(x => this.masterService.TOTALINDAMOUNT += x.indamount);
        // this.closeIndAmountPopup();
        // //console.log("AdditionalPurchaseAcObj",this.masterService.AdditionalPurchaseAcObj)
        // //console.log("AdditionalPurchaseCreditAcObj",this.masterService.AdditionalPurchaseCreditAcObj)
        var _getIndex = this._addionalcostService.costList.findIndex(function (x) { return x.costAc.ACNAME == l.costAc.ACNAME; });
        this._addionalcostService.costList.splice(_getIndex, 1);
        this._addionalcostService.INDcostList = this._addionalcostService.costList.filter(function (x) { return x.CostingType == "Ind Cost"; });
        this._addionalcostService.GRPcostList = this._addionalcostService.costList.filter(function (x) { return x.CostingType == "Group Cost"; });
        // this._addionalcostService.onDeleteCost(l);
        // this._transactionService.TrnMainObj.TrntranList.splice(index,1)
        this._transactionService.TrnMainObj.TrntranList = [];
        this._addionalcostService.addCostTotAmount = this._addionalcostService.addCostTotAmount - l.amount;
        // this._addionalcostService.addINDCostTotAmount = this._addionalcostService.addINDCostTotAmount - l.amount;
        this._addionalcostService.addINDCostTotalNetAmount = 0;
        if (l.IsTaxableBill == 1) {
            this._addionalcostService.addINDCostTaxableTotalAmount = this._addionalcostService.addINDCostTaxableTotalAmount - l.amount;
            this._addionalcostService.addINDCostTotalVat = this._addionalcostService.addINDCostTotalVat - l.AdditionalVAT;
        }
        else
            this._addionalcostService.addINDCostNonTaxableTotalAmount = this._addionalcostService.addINDCostNonTaxableTotalAmount - l.amount;
        this._addionalcostService.addINDCostTotalNetAmount = this._addionalcostService.addINDCostNonTaxableTotalAmount + this._addionalcostService.addINDCostTaxableTotalAmount + this._addionalcostService.addINDCostTotalVat;
        if (this._addionalcostService.header)
            this._addionalcostService.header.splice(this._addionalcostService.header.findIndex(function (x) { return x.MAPPINGNAME == l.costAc.ACNAME; }), 1);
        this._addionalcostService.DeleteDynamicColumn(l.costAc.ACNAME);
        // let selectedind_Data=this._addionalcostService.IndividualCostList.filter(x=>x.additionalcostac==l.costAc.ACID);
        // for(var i in selectedind_Data){
        //     let getindex=this._addionalcostService.IndividualCostList.findIndex(x=>x.additionalcostac==l.costAc.ACID);
        //     if(getindex>=0){
        //         this._addionalcostService.IndividualCostList.splice(getindex,1);
        //     }
        // }
        this.closeIndAmountPopup();
        this.CalculateVat();
    };
    newIndividualCostDetail.prototype.generateCostDetails = function () {
        this._addionalcostService.generateCostDetails();
    };
    newIndividualCostDetail.prototype.IndividualPI = function (value) {
        this.PI = value;
        if (this.PI == false) {
            this.form.get('MCODE').disable();
            this.form.get('BATCH').disable();
            this.GcostMode = "Amount";
            this.form.value.BYQUANTITY = true;
            this.masterService.focusAnyControl("AdditionalCostAc_");
        }
        else if (this.PI == true) {
            this.form.get('MCODE').enable();
            this.form.get('BATCH').enable();
            this.form.value.BYQUANTITY = null;
            this.GcostMode = "";
            // document.getElementById("_item").focus();
            this.masterService.focusAnyControl("_item");
        }
        this.form.patchValue({ MCODE: "", BATCH: value.BATCH });
        this.ItemObj = value.desca;
        // this.PIADD=true;
    };
    newIndividualCostDetail.prototype.byQuantity = function (value) {
        // ////console.log("CheckForm1",value)
        if (value == "Qty") {
            this.form.value.BYQUANTITY = true;
            this.qty = true;
        }
        else if (value == "Amount") {
            this.form.value.BYQUANTITY = false;
            this.qty = false;
        }
        else {
            this.form.value.BYQUANTITY = null;
        }
        // ////console.log("CheckForm",this.form.value.BYQUANTITY)
    };
    newIndividualCostDetail.prototype.TabAcBox = function (name) {
        //    this.genericGridRefBill.show();
        var passingValue = '';
        if (name == 'CreditAC') {
            passingValue = 'AccountListAndSupplier';
            this.gridCreditACListPartyPopupSettings = this.masterService.getGenericGridPopUpSettings(passingValue);
            this.acTag = 'CreditAC';
            this.genericGridCreditACListParty.show();
        }
        else if (name == 'AC') {
            // if(this.PI == true && (this.masterService.desca === undefined || this.masterService.desca === '' || this.masterService.desca === null)){
            //     alert("Please select item first!");
            //     return;
            // }
            passingValue = 'AccountLedgerList';
            this.gridACListPartyPopupSettings = this.masterService.getGenericGridPopUpSettings(passingValue);
            this.acTag = 'AC';
            this.genericGridACParty.show();
        }
    };
    newIndividualCostDetail.prototype.ACNameSelect_Additional = function (value, name) {
        // alert("ree123"+value+'A'+this.acTag)
        //console.log("value",value)
        var obj = { ACID: value.ACID, ACNAME: value.ACNAME, HASSUBLEDGER: value.HASSUBLEDGER };
        this.form.patchValue({ AdditionalPurchaseAc: obj });
        this.masterService.AdditionalPurchaseAcObj_2 = value.ACNAME;
        this.masterService.AdditionalPurchaseAcObj_2_ACID = value.ACID;
        this.genericGridACParty.hide();
        this.masterService.DR_SL_INDV_ACID = '';
        this.masterService.DR_SL_INDV_ACNAME = '';
        this.masterService.AdditionalAMOUNT_2 = 0;
        this._addionalcostService.tempIndCostList = [];
        //console.log("reds",value,this.form.value.AdditionalPurchaseAc)
        this.masterService.DR_INDV_HASSUBLEDGER = value.HASSUBLEDGER;
        if (value.HASSUBLEDGER == 1 && this._transactionService.userSetting.ENABLESUBLEDGER == 1) {
            this.onsubLedgerTabDr(value);
        }
        else {
            this.masterService.focusAnyControl("AmountsAD_");
        }
    };
    newIndividualCostDetail.prototype.ACNameSelect_Credit = function (value, name) {
        // alert("ree333"+value+'A'+this.acTag)
        var obj = { ACID: value.ACID, ACNAME: value.ACNAME, HASSUBLEDGER: value.HASSUBLEDGER };
        this.form.patchValue({ CREDITEDAC: obj });
        this.masterService.AdditionalPurchaseCreditAcObj_2 = value.ACNAME;
        this.genericGridCreditACListParty.hide();
        this.masterService.CR_SL_INDV_ACID = '';
        this.masterService.CR_SL_INDV_ACNAME = '';
        this.masterService.CR_INDV_HASSUBLEDGER = value.HASSUBLEDGER;
        if (value.HASSUBLEDGER == 1 && this._transactionService.userSetting.ENABLESUBLEDGER == 1) {
            this.onsubLedgerTabCr(value);
        }
        else {
            this.masterService.focusAnyControl("RemarksAD_");
        }
    };
    newIndividualCostDetail.prototype.updown = function ($event) {
        if ($event.key == "Enter") {
            $event.preventDefault();
            if (this.form.valid && this.allowRowAdd === true) {
                ////console.log("Enter pressed")
                // this.onAddClick();
            }
        }
    };
    newIndividualCostDetail.prototype.focusTrigger = function () {
        this.allowRowAdd = true;
    };
    newIndividualCostDetail.prototype.IndAmountSelect = function () {
        var _this = this;
        if (this.masterService.RefObj.Refno === undefined || this.masterService.RefObj.Refno === '' || this.masterService.RefObj.Refno === null) {
            alert("Please select ref. PI voucher first.");
            return;
        }
        if (this.masterService.AdditionalPurchaseAcObj_2 == null || this.masterService.AdditionalPurchaseAcObj_2 == "" || this.masterService.AdditionalPurchaseAcObj_2 == undefined) {
            alert("Please enter Additional cost A/C");
            return;
        }
        if (this._addionalcostService.tempIndCostList.length == 0) {
            this._addionalcostService.tempIndCostList = this._addionalcostService.addtionalCostList;
            this._addionalcostService.tempIndCostList.forEach(function (x) {
                x.additionalcostac = _this.form.value.AdditionalPurchaseAc.ACID,
                    x.indamount = 0;
            });
        }
        this.masterService.TOTALINDAMOUNT = 0;
        this._addionalcostService.tempIndCostList.forEach(function (x) { return _this.masterService.TOTALINDAMOUNT += x.indamount; });
        this.masterService.showIndividualAmountPopup = true;
    };
    newIndividualCostDetail.prototype.dblClickItemSelection = function (value) {
        var _this = this;
        this.masterService.desca = value.DESCRIPTION;
        this.masterService.mcode = value.MCODE;
        this.masterService.batch = "";
        this.masterService.batchid = "";
        var _voucherno = this.masterService.RefObj.Refno;
        this.masterService.getBatchOfItem(_voucherno, value.MCODE).subscribe(function (res) {
            if (res.status == 'ok') {
                //console.log("res", res.result)
                if (res.result && res.result.length == 1) {
                    _this.masterService.batch = res.result[0].BATCH;
                    _this.masterService.batchid = res.result[0].BATCHID;
                    // if (this.masterService.AdditionalPurchaseAcObj === "" || this.masterService.AdditionalPurchaseAcObj === null || this.masterService.AdditionalPurchaseAcObj === undefined) {
                    _this.masterService.focusAnyControl("AdditionalCostAc_");
                    // } else {
                    //     this.masterService.focusAnyControl("AmountsAD_");
                    // }
                }
                else if (res.result && res.result.length > 1) {
                    _this.masterService.focusAnyControl("_batch");
                }
            }
        });
    };
    newIndividualCostDetail.prototype.BatchSelect = function () {
        if (this.masterService.batch != "") {
            return;
        }
        if (this.masterService.RefObj.Refno === undefined || this.masterService.RefObj.Refno === '' || this.masterService.RefObj.Refno === null) {
            alert("Please select ref. PI voucher first.");
            return;
        }
        var _voucherno = this.masterService.RefObj.Refno;
        var vchrno = _voucherno.replace("/", "ZZ");
        if (this.masterService.mcode === undefined || this.masterService.mcode === '' || this.masterService.mcode === null) {
            alert("Please select item first.");
            return;
        }
        var mcode = this.masterService.mcode;
        //console.log("@@DISPLAY",this.userSetting.DISPLAY)
        if (this.userSetting.DISPLAY == 1) {
            this.gridBatchPopupSettings = {
                title: "Item List ",
                apiEndpoints: "/getItemPagedListPIWise/" + vchrno + "/" + mcode,
                defaultFilterIndex: 0,
                columns: [
                    {
                        key: 'BATCH',
                        title: 'Batch',
                        hidden: false,
                        noSearch: false
                    },
                    {
                        key: 'MfgDate',
                        title: 'MfgDate',
                        hidden: false,
                        noSearch: false
                    },
                    {
                        key: 'ExpDate',
                        title: 'ExpDate',
                        hidden: false,
                        noSearch: false
                    },
                    {
                        key: 'LANDINGCOST',
                        title: 'Rate',
                        hidden: false,
                        noSearch: false
                    },
                    {
                        key: 'MRP',
                        title: 'Mrp',
                        hidden: false,
                        noSearch: false
                    }
                ]
            };
        }
        else {
            this.gridBatchPopupSettings = {
                title: "Item List ",
                apiEndpoints: "/getItemPagedListPIWise/" + vchrno + "/" + mcode,
                defaultFilterIndex: 0,
                columns: [
                    {
                        key: 'BATCH',
                        title: 'Batch',
                        hidden: false,
                        noSearch: false
                    }
                ]
            };
        }
        this.genericGridBatch.show();
    };
    newIndividualCostDetail.prototype.dblClickBatchSelection = function (value) {
        this.masterService.batch = value.BATCH;
        this.masterService.batchid = value.BATCHID;
        // if (this.masterService.AdditionalPurchaseAcObj === "" || this.masterService.AdditionalPurchaseAcObj === null || this.masterService.AdditionalPurchaseAcObj === undefined) {
        this.masterService.focusAnyControl("AdditionalCostAc_");
        // } else {
        //     this.masterService.focusAnyControl("AmountsAD_");
        // }
    };
    newIndividualCostDetail.prototype.remarksEntered = function () {
        if (this.PI == true) {
            this.onAddClick();
        }
    };
    newIndividualCostDetail.prototype.gcostEntered = function () {
        if (this.PI == false) {
            this.onAddClick();
        }
    };
    // TabRefBill() {
    //     //console.log("@@PURCHASE_TYPE",this.masterService.RefObj.PURCHASE_TYPE,this._trnMainService.userSetting.ENABLELOCALPURCHASE)
    //     if(this._transactionService.userSetting.ENABLELOCALPURCHASE==0){
    //       this.masterService.RefObj.PURCHASE_TYPE='ALL';
    //     }else{
    //       if(this._transactionService.userSetting.ENABLELOCALPURCHASE==1 && !this.masterService.RefObj.PURCHASE_TYPE){
    //         this.masterService.RefObj.PURCHASE_TYPE='ALL';
    //       }
    //     }
    //     this.gridPopupSettingsForRefBill = this.masterService.getGenericGridPopUpSettingsForAdditionalCost("AdditionalCost",this.masterService.RefObj.PURCHASE_TYPE);
    //     this.genericGridRefBill.show();
    //   }
    //   onRefBillSelected(value) {
    //     // alert("reached")
    //     this.masterService.AdditionalPurchaseAcObj_2 = '';
    //     this.masterService.AdditionalPurchaseCreditAcObj_2 = '';
    //     this.masterService.mcode= '';
    //     this.masterService.desca='';
    //     this.masterService.batch='';
    //     this.masterService.batchid='';
    //     this.masterService.RefObj.Refno = value.VCHRNO;
    //     this.masterService.RefObj.disable = true;
    //     this._transactionService.TrnMainObj.REFBILL = value.VCHRNO;
    //     this.masterService.RefObj.InvoiceNo = value.REFBILL;
    //     this.masterService.RefObj.SupplierName = value.ACNAME;
    //     this._transactionService.TrnMainObj.PARAC=value.PARAC;
    //     this.masterService.RefObj.SupplierVAT = value.BILLTOTEL;
    //     this.masterService.RefObj.Ref_TRNDATE_2 = value.TRNDATE;
    //     this.masterService.RefObj.Ref_BSDATE_2 = value.BSDATE;
    //     this.getAdditionalCost(value)
    //     this.masterService.focusAnyControl("_AdditioanlCostRate"+0)
    //   }
    newIndividualCostDetail.prototype.TabTDSAccount = function () {
        var TRNMODE = "TDS";
        this.gridACListPopupSettings = {
            title: "Accounts",
            apiEndpoints: "/getAccountPagedListByMapId/Details/" + TRNMODE,
            defaultFilterIndex: 1,
            columns: [
                {
                    key: "ACCODE",
                    title: "AC CODE",
                    hidden: false,
                    noSearch: false
                },
                {
                    key: "ACNAME",
                    title: "A/C NAME",
                    hidden: false,
                    noSearch: false
                }
            ]
        };
        this.genericGridACList.show();
    };
    newIndividualCostDetail.prototype.onAcSelect = function (value) {
        this.masterService.TDSAccount_Name_2 = value.ACNAME;
        this.masterService.TDSAccount_ACID_2 = value.ACID;
        this.TDSACCOUNTNAME = value.ACNAME;
        this.masterService.TDS_SL_INDV_ACID = '';
        this.masterService.TDS_SL_INDV_ACNAME = '';
        this.masterService.TDS_INDV_HASSUBLEDGER = value.HASSUBLEDGER;
        if (value.HASSUBLEDGER == 1 && this._transactionService.userSetting.ENABLESUBLEDGER == 1) {
            this.onsubLedgerTabAc(value);
        }
    };
    //   getAdditionalCost(value) {
    //     this.loadingService.show("please wait. Getting purchase invoice data..")
    //     let VCHR = value.VCHRNO
    //     let division = value.DIVISION;
    //     let phiscalid= this.masterService.PhiscalObj.PhiscalID;
    //     this.masterService.LoadTransaction(VCHR, division, phiscalid).subscribe(data => {
    //       if (data) {
    //         try {
    //           ////console.log("additionalCostDataLoaded",data.result)
    //           this._addionalcostService.costList = [];
    //           this._addionalcostService.costdetail = [];
    //           this._addionalcostService.addtionalCostList = [];
    //           this._addionalcostService.addCostTotAmount = 0;
    //           //console.log("@@data.result.ProdList",data.result.ProdList)
    //           var result = data.result.ProdList.filter((elem1, i) => data.result.ProdList.some((elem2, j) => (elem2.MCODE === elem1.MCODE)
    //              && (elem2.BATCHID == elem1.BATCHID) && j !== i));
    //           //console.log("@@PI__result:", result);
    //         let acs1: prodCost = <prodCost>{ mcode: "", menucode: "", desca: "", unit: "",
    //                                         quantity: 0, rate: 0,amount: 0, nAmount: 0, batch:"",batchid:"" }
    //         if(result.length>0){
    //             result.forEach(element => {
    //               acs1.mcode=element.MCODE,
    //               acs1.menucode=element.MENUCODE,
    //               acs1.desca=element.ITEMDESC,
    //               acs1.unit=element.UNIT,
    //               acs1.batch=element.BATCH,
    //               acs1.rate=element.RATE,
    //               acs1.quantity=element.REALQTY_IN+acs1.quantity,
    //               acs1.amount=element.AMOUNT+acs1.amount,
    //               acs1.nAmount=element.NETAMOUNT+acs1.nAmount,
    //               acs1.batchid=element.BATCHID
    //             });
    //             this._addionalcostService.addtionalCostList.push(acs1);
    //             var result2 = data.result.ProdList.filter((elem1, i) => result.some((elem2, j) => (elem2.MCODE != elem1.MCODE || elem2.BATCHID != elem1.BATCHID)  && j !== i));
    //             if(result2.length > 0 ){
    //               //console.log("@@mcodediff_ac2",result2)
    //               for (let i of result2) {
    //                 var acs: prodCost = <prodCost>{
    //                   mcode: i.MCODE, menucode: i.MENUCODE, desca: i.ITEMDESC, unit: i.UNIT,
    //                   quantity: i.REALQTY_IN, 
    //                   rate: i.RATE,
    //                    amount: i.AMOUNT, 
    //                    nAmount: i.NETAMOUNT, batch:i.BATCH, batchid:i.BATCHID
    //                 };
    //                 this._addionalcostService.addtionalCostList.push(acs);
    //               }
    //             }
    //         }
    //           if(this._addionalcostService.addtionalCostList.length==0){
    //             //console.log("@@ac2")
    //           for (let i of data.result.ProdList) {
    //             var acs: prodCost = <prodCost>{
    //               mcode: i.MCODE, menucode: i.MENUCODE, desca: i.ITEMDESC, unit: i.UNIT,
    //               quantity: i.REALQTY_IN, 
    //               rate: i.RATE,
    //                amount: i.AMOUNT, 
    //                nAmount: i.NETAMOUNT, batch:i.BATCH,batchid:i.BATCHID
    //             };
    //             this._addionalcostService.addtionalCostList.push(acs);
    //           }
    //         }
    //           this.masterService.batch = data.result.ProdList && data.result.ProdList.length>0 && data.result.ProdList[0].BATCH;
    //           //total amount
    //           this._addionalcostService.loadedTrnmain = data.result;
    //           this.loadingService.hide();
    //         }
    //         catch (ex) { }
    //       }
    //       else {
    //         alert("Cannot Get Data from Bill no.")
    //       }
    //     })
    //   }
    newIndividualCostDetail.prototype.ChangeIsTaxableBill = function (value) {
        if (value == true) {
            this.masterService.IsTaxableBill_2 = 1;
            this.masterService.IS_ECA_ITEM_2 = 0;
        }
        else {
            this.masterService.IsTaxableBill_2 = 0;
            this.masterService.AdditionalVAT_2 = 0;
            this.masterService.IS_ECA_ITEM_2 = 1;
        }
        this.CalculateVat();
    };
    newIndividualCostDetail.prototype.ChangeECA_ITEM = function (value) {
        if (value == true) {
            this.masterService.IS_ECA_ITEM_2 = 1;
            this.masterService.IsTaxableBill_2 = 0;
            this.masterService.AdditionalVAT_2 = 0;
        }
        else {
            this.masterService.IsTaxableBill_2 = 1;
            this.masterService.IS_ECA_ITEM_2 = 0;
        }
        this.CalculateVat();
    };
    newIndividualCostDetail.prototype.changeToBSDate = function (value, format) {
        var adbs = __webpack_require__(19);
        if (format == "AD") {
            var yearValue = __WEBPACK_IMPORTED_MODULE_8_moment__(value).year();
            if (yearValue.toString().length == 4) {
                var adDate = (value.replace("-", "/")).replace("-", "/");
                var bsDate = adbs.ad2bs(adDate);
                bsDate.en.month = bsDate.en.month <= 9 ? "0" + (bsDate.en.month) : bsDate.en.month;
                this.masterService.RefObj.Ref_BSDATE_2 =
                    this.masterService.toADDate(value);
            }
        }
    };
    newIndividualCostDetail.prototype.SupplierList = function () {
        this.gridPopupSettingsForSupplier = this.masterService.getGenericGridPopUpSettings("Supplier");
        this.genericGridSupplier.show();
    };
    newIndividualCostDetail.prototype.onSupplierSelected = function (value) {
        this.masterService.RefObj.Ref_SupplierACID_2 = value.ACID;
        this.masterService.RefObj.Ref_SupplierName_2 = value.ACNAME;
        this.masterService.RefObj.Ref_SupplierVAT_2 = value.VATNO ? value.VATNO : value.GSTNO;
        this.REFSUPPLIERNAME = value.ACNAME;
    };
    newIndividualCostDetail.prototype.CalculateTotalAmount = function () {
        var _this = this;
        this.masterService.TOTALINDAMOUNT = 0;
        this._addionalcostService.tempIndCostList.forEach(function (x) { return _this.masterService.TOTALINDAMOUNT += x.indamount; });
    };
    newIndividualCostDetail.prototype.closeIndAmountPopup = function () {
        var _this = this;
        this.masterService.showIndividualAmountPopup = false;
        this.NEW_IndCostList = [];
        // console.log("@@BEFORE.IndividualCostList",this._addionalcostService.IndividualCostList)
        var selectedind_Data = this._addionalcostService.IndividualCostList.filter(function (x) { return x.additionalcostac == _this.masterService.AdditionalPurchaseAcObj_2_ACID; });
        for (var i in selectedind_Data) {
            var getindex = this._addionalcostService.IndividualCostList.findIndex(function (x) { return x.additionalcostac == _this.masterService.AdditionalPurchaseAcObj_2_ACID; });
            if (getindex >= 0) {
                this._addionalcostService.IndividualCostList.splice(getindex, 1);
            }
        }
        // console.log("@@AFTER.IndividualCostList",this._addionalcostService.IndividualCostList)
        if (this._addionalcostService.tempIndCostList.length > 0) {
            this._addionalcostService.tempIndCostList.forEach(function (element) {
                _this.NEWOBJ = {
                    mcode: "", menucode: "", desca: "", unit: "",
                    quantity: 0, rate: 0, amount: 0, nAmount: 0, batch: "", batchid: "", indamount: 0
                };
                _this.NEWOBJ.mcode = element.mcode,
                    _this.NEWOBJ.menucode = element.menucode,
                    _this.NEWOBJ.desca = element.desca,
                    _this.NEWOBJ.batch = element.batch,
                    _this.NEWOBJ.rate = element.rate,
                    _this.NEWOBJ.quantity = element.quantity,
                    _this.NEWOBJ.amount = element.amount,
                    _this.NEWOBJ.additionalcostac = element.additionalcostac,
                    _this.NEWOBJ.batchid = element.batchid,
                    _this.NEWOBJ.indamount = element.indamount;
                _this.NEW_IndCostList.push(_this.NEWOBJ);
            });
            this._addionalcostService.IndividualCostList.push.apply(this._addionalcostService.IndividualCostList, this.NEW_IndCostList);
        }
        this.CalculateTotalAmount();
        // if(this._transactionService.TrnMainObj.Mode=="NEW"){
        this.masterService.AdditionalAMOUNT_2 = this.masterService.TOTALINDAMOUNT;
        // }
        this.CalculateVat();
    };
    newIndividualCostDetail.prototype.onsubLedgerTabAc = function (value) {
        // this.selectedIndex = i;
        this.gridSubLedgerSettingAc = {
            title: "SubLedger List",
            apiEndpoints: "/getSubLedgerByACIDPageList/" + value.ACID,
            defaultFilterIndex: 1,
            columns: [
                {
                    key: "SL_ACID",
                    title: "SubLedger ID",
                    hidden: false,
                    noSearch: false
                },
                {
                    key: "SL_ACNAME",
                    title: "SubLedger Name",
                    hidden: false,
                    noSearch: false
                }
            ]
        };
        this.gridSubLedgerSettingListAc.show();
    };
    newIndividualCostDetail.prototype.onsubLedgerTabDr = function (value) {
        // this.selectedIndex = i;
        this.gridSubLedgerSettingDr = {
            title: "SubLedger List",
            apiEndpoints: "/getSubLedgerByACIDPageList/" + value.ACID,
            defaultFilterIndex: 1,
            columns: [
                {
                    key: "SL_ACID",
                    title: "SubLedger ID",
                    hidden: false,
                    noSearch: false
                },
                {
                    key: "SL_ACNAME",
                    title: "SubLedger Name",
                    hidden: false,
                    noSearch: false
                }
            ]
        };
        this.gridSubLedgerSettingListDr.show();
    };
    newIndividualCostDetail.prototype.onsubLedgerTabCr = function (value) {
        // this.selectedIndex = i;
        this.gridSubLedgerSettingCr = {
            title: "SubLedger List",
            apiEndpoints: "/getSubLedgerByACIDPageList/" + value.ACID,
            defaultFilterIndex: 1,
            columns: [
                {
                    key: "SL_ACID",
                    title: "SubLedger ID",
                    hidden: false,
                    noSearch: false
                },
                {
                    key: "SL_ACNAME",
                    title: "SubLedger Name",
                    hidden: false,
                    noSearch: false
                }
            ]
        };
        this.gridSubLedgerSettingListCr.show();
    };
    newIndividualCostDetail.prototype.onSubLedgerSelectCr = function (value) {
        // this.CrsubledgerValue =value.SL_ACNAME;
        this.masterService.CR_SL_INDV_ACID = value.SL_ACID;
        this.masterService.CR_SL_INDV_ACNAME = value.SL_ACNAME;
        this.masterService.focusAnyControl("RemarksAD_");
    };
    newIndividualCostDetail.prototype.onSubLedgerSelectAc = function (value) {
        // this.CrsubledgerValue =value.SL_ACNAME;
        this.masterService.TDS_SL_INDV_ACID = value.SL_ACID;
        this.masterService.TDS_SL_INDV_ACNAME = value.SL_ACNAME;
    };
    newIndividualCostDetail.prototype.onSubLedgerSelectDr = function (value) {
        // console.log('checkselect',value)
        this.masterService.DR_SL_INDV_ACID = value.SL_ACID;
        this.masterService.DR_SL_INDV_ACNAME = value.SL_ACNAME;
        this.masterService.focusAnyControl("AmountsAD_");
    };
    newIndividualCostDetail.prototype.keyPress = function (event) {
        if (event.key != "Enter" && event.key != "Tab") {
            event.preventDefault();
        }
    };
    newIndividualCostDetail.prototype.CalculateVat = function () {
        console.log("Checkvalu7e", this.masterService.TOTALINDAMOUNT);
        if (this.masterService.TOTALINDAMOUNT) {
            if (this.masterService.IsTaxableBill_2 == 1) {
                this.masterService.AdditionalVAT_2 = Number(Number(this.masterService.TOTALINDAMOUNT * 0.13).toFixed(2));
            }
            else {
                this.masterService.AdditionalVAT_2 = 0;
            }
        }
    };
    newIndividualCostDetail.prototype.checkVat = function () {
        if (this.masterService.AdditionalVAT_2 <= 0) {
            this.masterService.IsTaxableBill_2 = 0;
        }
    };
    newIndividualCostDetail.prototype.ChangeReverseJournal = function (event) {
        event.target.checked ? (this.masterService.DoReverseJournalEntry_2 = 1) : (this.masterService.DoReverseJournalEntry_2 = 0);
        if (event.target.checked == true) {
            this.genericGridACPartyForReverseJournal = this.masterService.getGenericGridPopUpSettings("AccountListAndSupplierForReverseJournal");
            this.genericGridACPartyReverseJournal.show();
        }
        else if (!event.target.checked) {
            this.masterService.ReverseJournalACNAME_2 = '';
            this.masterService.ReverseJournalACID_2 = '';
        }
    };
    newIndividualCostDetail.prototype.ACNameSelectForReverseJournal = function (value) {
        this.masterService.ReverseJournalACNAME_2 = value.ACNAME;
        this.masterService.ReverseJournalACID_2 = value.ACID;
        console.log('account values', value, this.masterService.ReverseJournalACNAME);
    };
    newIndividualCostDetail.prototype.resetReverseJournalEntry = function () {
        this.masterService.DoReverseJournalEntry_2 = 0;
    };
    return newIndividualCostDetail;
}());
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__angular_core__["ViewChild"])("genericGridACParty"),
    __metadata("design:type", __WEBPACK_IMPORTED_MODULE_4__common_popupLists_generic_grid_generic_popup_grid_component__["c" /* GenericPopUpComponent */])
], newIndividualCostDetail.prototype, "genericGridACParty", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__angular_core__["ViewChild"])("genericGridCreditACListParty"),
    __metadata("design:type", __WEBPACK_IMPORTED_MODULE_4__common_popupLists_generic_grid_generic_popup_grid_component__["c" /* GenericPopUpComponent */])
], newIndividualCostDetail.prototype, "genericGridCreditACListParty", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__angular_core__["ViewChild"])("genericGridItem"),
    __metadata("design:type", __WEBPACK_IMPORTED_MODULE_4__common_popupLists_generic_grid_generic_popup_grid_component__["c" /* GenericPopUpComponent */])
], newIndividualCostDetail.prototype, "genericGridItem", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__angular_core__["ViewChild"])("genericGridBatch"),
    __metadata("design:type", __WEBPACK_IMPORTED_MODULE_4__common_popupLists_generic_grid_generic_popup_grid_component__["c" /* GenericPopUpComponent */])
], newIndividualCostDetail.prototype, "genericGridBatch", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__angular_core__["ViewChild"])("genericGridACList"),
    __metadata("design:type", __WEBPACK_IMPORTED_MODULE_4__common_popupLists_generic_grid_generic_popup_grid_component__["c" /* GenericPopUpComponent */])
], newIndividualCostDetail.prototype, "genericGridACList", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__angular_core__["ViewChild"])("genericGridSupplier"),
    __metadata("design:type", __WEBPACK_IMPORTED_MODULE_4__common_popupLists_generic_grid_generic_popup_grid_component__["c" /* GenericPopUpComponent */])
], newIndividualCostDetail.prototype, "genericGridSupplier", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__angular_core__["ViewChild"])("gridSubLedgerSettingListCr"),
    __metadata("design:type", __WEBPACK_IMPORTED_MODULE_4__common_popupLists_generic_grid_generic_popup_grid_component__["c" /* GenericPopUpComponent */])
], newIndividualCostDetail.prototype, "gridSubLedgerSettingListCr", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__angular_core__["ViewChild"])("gridSubLedgerSettingListDr"),
    __metadata("design:type", __WEBPACK_IMPORTED_MODULE_4__common_popupLists_generic_grid_generic_popup_grid_component__["c" /* GenericPopUpComponent */])
], newIndividualCostDetail.prototype, "gridSubLedgerSettingListDr", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__angular_core__["ViewChild"])("gridSubLedgerSettingListAc"),
    __metadata("design:type", __WEBPACK_IMPORTED_MODULE_4__common_popupLists_generic_grid_generic_popup_grid_component__["c" /* GenericPopUpComponent */])
], newIndividualCostDetail.prototype, "gridSubLedgerSettingListAc", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__angular_core__["ViewChild"])("genericGridACPartyReverseJournal"),
    __metadata("design:type", __WEBPACK_IMPORTED_MODULE_4__common_popupLists_generic_grid_generic_popup_grid_component__["c" /* GenericPopUpComponent */])
], newIndividualCostDetail.prototype, "genericGridACPartyReverseJournal", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__angular_core__["HostListener"])("document: keydown", ["$event"]),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [KeyboardEvent]),
    __metadata("design:returntype", void 0)
], newIndividualCostDetail.prototype, "updown", null);
newIndividualCostDetail = __decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__angular_core__["Component"])({
        selector: 'newIndividualCost',
        template: __webpack_require__(1342),
        styles: [__webpack_require__(120), __webpack_require__(9), __webpack_require__(554)],
        providers: []
    }),
    __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_6__AdditionalCost_addtionalCost_service__["a" /* AdditionalCostService */],
        __WEBPACK_IMPORTED_MODULE_2__angular_forms__["FormBuilder"],
        __WEBPACK_IMPORTED_MODULE_0__common_repositories_masterRepo_service__["a" /* MasterRepo */],
        __WEBPACK_IMPORTED_MODULE_3__common_Transaction_Components_transaction_service__["a" /* TransactionService */],
        __WEBPACK_IMPORTED_MODULE_5__common_services_permission__["a" /* AuthService */],
        __WEBPACK_IMPORTED_MODULE_7__common_services_spinner_spinner_service__["a" /* SpinnerService */]])
], newIndividualCostDetail);



/***/ }),

/***/ 1295:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__common_repositories_masterRepo_service__ = __webpack_require__(8);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__angular_forms__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__common_Transaction_Components_transaction_service__ = __webpack_require__(7);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__common_popupLists_generic_grid_generic_popup_grid_component__ = __webpack_require__(35);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__common_services_permission__ = __webpack_require__(15);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__AdditionalCost_addtionalCost_service__ = __webpack_require__(43);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__common_services_spinner_spinner_service__ = __webpack_require__(20);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8_moment__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8_moment___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_8_moment__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return newadditionalCostDetail; });








// import { NewAdditionalCostService, Cost } from './newAdditionalCost.service';

var newadditionalCostDetail = (function () {
    function newadditionalCostDetail(_addionalcostService, fb, masterService, _transactionService, authservice, loadingService) {
        this._addionalcostService = _addionalcostService;
        this.fb = fb;
        this.masterService = masterService;
        this._transactionService = _transactionService;
        this.authservice = authservice;
        this.loadingService = loadingService;
        this.majorParentAcList = [];
        this.costdata = [];
        this.allList = [];
        this.allowRowAdd = false;
        this.PI = true;
        this.PIList = [];
        this.PIADD = true;
        this.qty = true;
        this.gridACListPartyPopupSettings = new __WEBPACK_IMPORTED_MODULE_4__common_popupLists_generic_grid_generic_popup_grid_component__["b" /* GenericPopUpSettings */]();
        this.gridCreditACListPartyPopupSettings = new __WEBPACK_IMPORTED_MODULE_4__common_popupLists_generic_grid_generic_popup_grid_component__["b" /* GenericPopUpSettings */]();
        this.gridItemPopupSettings = new __WEBPACK_IMPORTED_MODULE_4__common_popupLists_generic_grid_generic_popup_grid_component__["b" /* GenericPopUpSettings */]();
        this.gridBatchPopupSettings = new __WEBPACK_IMPORTED_MODULE_4__common_popupLists_generic_grid_generic_popup_grid_component__["b" /* GenericPopUpSettings */]();
        this.gridACListPopupSettings = new __WEBPACK_IMPORTED_MODULE_4__common_popupLists_generic_grid_generic_popup_grid_component__["b" /* GenericPopUpSettings */]();
        this.gridPopupSettingsForSupplier = new __WEBPACK_IMPORTED_MODULE_4__common_popupLists_generic_grid_generic_popup_grid_component__["b" /* GenericPopUpSettings */]();
        this.gridSubLedgerSettingCr = new __WEBPACK_IMPORTED_MODULE_4__common_popupLists_generic_grid_generic_popup_grid_component__["b" /* GenericPopUpSettings */]();
        this.gridSubLedgerSettingDr = new __WEBPACK_IMPORTED_MODULE_4__common_popupLists_generic_grid_generic_popup_grid_component__["b" /* GenericPopUpSettings */]();
        this.gridSubLedgerSettingAc = new __WEBPACK_IMPORTED_MODULE_4__common_popupLists_generic_grid_generic_popup_grid_component__["b" /* GenericPopUpSettings */]();
        this.genericGridACPartyForReverseJournal = new __WEBPACK_IMPORTED_MODULE_4__common_popupLists_generic_grid_generic_popup_grid_component__["b" /* GenericPopUpSettings */]();
        this.ItemObj = {};
        this.BatchList = [];
        this._transactionService.initialFormLoad(66);
        this.TrnMainObj = _addionalcostService.TrnMainObj;
        this.form = fb.group({
            CREDITEDAC: ['', __WEBPACK_IMPORTED_MODULE_2__angular_forms__["Validators"].required],
            AdditionalPurchaseAc: ['', __WEBPACK_IMPORTED_MODULE_2__angular_forms__["Validators"].required],
            AMOUNT: ['', __WEBPACK_IMPORTED_MODULE_2__angular_forms__["Validators"].required],
            REMARKS: [''],
            MCODE: [''],
            BYQUANTITY: [''],
            DESCA: [''],
            BATCH: [''],
            BATCHID: [''],
            COSTING: ['']
        });
        // this.masterService.getpartyListTree()
        //     .subscribe(data => {
        //         let l = data
        //         this.majorParentAcList = l;
        //     });
        // this.masterService.getAccount('').subscribe(data => {
        //     this.allList = data;
        // }
        // )
        this.PI = false;
        this.PIADD = false;
        this.qty = false;
        this.IndividualPI(false);
        this.masterService.focusAnyControl("AdditionalCostAc_");
        // this.form.get('MCODE').disable();
        // this._transactionService.TrnMainObj.TrntranList.splice(-1);
        this.byQuantity("Amount");
        this._transactionService.DrillMode = "New";
        this.userSetting = authservice.getSetting();
    }
    Object.defineProperty(newadditionalCostDetail.prototype, "selectedProd", {
        get: function () {
            return this._selectedProd;
        },
        set: function (value) {
            this._selectedProd = value;
        },
        enumerable: true,
        configurable: true
    });
    newadditionalCostDetail.prototype.ngOnInit = function () {
        this.PIList = this._addionalcostService.addtionalCostList;
        // ////console.log("PIList", this.PIList)
        //console.log("mode",this._transactionService.TrnMainObj.Mode)
        if (this._transactionService.TrnMainObj.Mode == 'NEW') {
            this.PI = false;
            this.masterService.costType = "GroupCost";
            this.masterService.addcosting = 'COSTING';
            // if(this.masterService.RefObj.PURCHASE_TYPE=="LOCALPURCHASE"){
            //     this.masterService.IsTaxableBill=0;
            //     this.masterService.DoAccountPosting=0;
            // }else{
            // }
            this.masterService.IsTaxableBill = 1;
            this.masterService.DoAccountPosting = 1;
            this.masterService.IS_ECA_ITEM = 0;
            this.masterService.DoReverseJournalEntry = 0;
            this.masterService.focusAnyControl("AdditionalCostAc_");
            this.masterService.ShowMore = false;
        }
    };
    newadditionalCostDetail.prototype.passValue = function () {
        this.BatchList = [];
        this.ValuePI = 1;
        this.form.patchValue({
            MCODE: this.ItemObj.mcode,
        });
        for (var _i = 0, _a = this._addionalcostService.addtionalCostList; _i < _a.length; _i++) {
            var i = _a[_i];
            if (i.menucode == this.ItemObj.mcode) {
                this.BatchList.push(i);
            }
        }
        //console.log("valueObj1", this.BatchList)
    };
    newadditionalCostDetail.prototype.onAddClick = function () {
        this.PI = false; //false for group costing
        this.form.patchValue({
            MCODE: this.masterService.mcode,
            DESCA: this.masterService.desca,
            BATCH: this.masterService.batch,
            BATCHID: this.masterService.batchid
        });
        // console.log("Hereby",this.form.value)
        // this._addionalcostService.costdetail = [];
        // this.masterService.addcosting = "true";
        // if(this.PI == true && this.form.controls.MCODE.value == ""){
        //     alert("Enter Item for Individual item cost type !");
        //     return;
        // }
        // if(this.PI == true && this.form.controls.BATCH.value == ""){
        //     alert("Enter batch for Individual item cost type !");
        //     return;
        // }
        if (this.PI == false && this.GcostMode == '') {
            alert("Enter Group cost mode.");
            return;
        }
        // if( this.PI == true && this.form.controls.CREDITEDAC.value == ""){
        //     alert("Enter Credited Account for Individual item cost type !");
        //     return;
        // }
        if (this.masterService.AdditionalAMOUNT == "" || this.masterService.AdditionalAMOUNT == null) {
            alert("Amount is required");
            return;
        }
        var desca = '';
        // console.log('addtionalCostList', this._addionalcostService.addtionalCostList, this._addionalcostService.addtionalCostList)
        for (var _i = 0, _a = this._addionalcostService.addtionalCostList; _i < _a.length; _i++) {
            var i = _a[_i];
            if (i.mcode == this.form.value.MCODE) {
                desca = i.desca;
            }
        }
        // if (this.PI == false) {
        //     for (const iterator of this._addionalcostService.costList) {
        //         if (iterator.amount == "" || iterator.amount == null) {
        //             alert("Amount is required");
        //             return;
        //         }
        //     }
        // }
        if (this.PI == false) {
            for (var _b = 0, _c = this._addionalcostService.costList; _b < _c.length; _b++) {
                var iterator = _c[_b];
                if ((iterator.costAc.ACNAME == this.form.value.AdditionalPurchaseAc.ACNAME && (iterator.CostingNonCosting == 'COSTING' || iterator.CostingNonCosting == 'true'))
                    || (iterator.costAc.ACNAME == this.form.value.AdditionalPurchaseAc.ACNAME && (iterator.CostingNonCosting == 'NONCOSTING' || iterator.CostingNonCosting == 'false') && this.masterService.addcosting == 'COSTING')) {
                    alert("Duplicate Additional Cost A/C " + this.form.value.AdditionalPurchaseAc.ACNAME + "!");
                    return;
                }
            }
        }
        else if (this.PI == true) {
            for (var _d = 0, _e = this._addionalcostService.costList; _d < _e.length; _d++) {
                var iterator = _e[_d];
                if (iterator.costAc.ACNAME == this.form.value.AdditionalPurchaseAc.ACNAME
                    && iterator.mcode == this.form.value.MCODE
                    && iterator.batch == this.form.value.BATCH) {
                    alert("Duplicate Additional Cost A/C and Item!");
                    return;
                }
            }
        }
        if (this.masterService.AdditionalPurchaseAcObj == null || this.masterService.AdditionalPurchaseAcObj == "" || this.masterService.AdditionalPurchaseAcObj == undefined) {
            alert("Please enter Additional cost A/C");
            return;
        }
        // if(this.masterService.RefObj.PURCHASE_TYPE!="LOCALPURCHASE"){
        // }
        if (this.masterService.AdditionalPurchaseCreditAcObj == null || this.masterService.AdditionalPurchaseCreditAcObj == "" || this.masterService.AdditionalPurchaseCreditAcObj == undefined) {
            alert("Please enter credited A/C !");
            return;
        }
        if (this.masterService.RefObj.Ref_SupplierName == null || this.masterService.RefObj.Ref_SupplierName == "" || this.masterService.RefObj.Ref_SupplierName == undefined) {
            this.masterService.RefObj.Ref_SupplierACID = "";
            this.REFSUPPLIERNAME = "";
        }
        if (this.masterService.TDSAccount_Name == null || this.masterService.TDSAccount_Name == "" || this.masterService.TDSAccount_Name == undefined) {
            this.masterService.TDSAccount_ACID = "";
            this.masterService.TDSAmount = 0;
            this.TDSACCOUNTNAME = "";
        }
        else {
            if (this.masterService.TDSAccount_ACID &&
                (this.masterService.TDSAmount == null || this.masterService.TDSAmount == "" || this.masterService.TDSAmount == undefined || this.masterService.TDSAmount == 0)) {
                alert("Please enter TDS Amount !");
                return;
            }
            if (this.masterService.TDSAccount_ACID && this.masterService.TDSAmount > 0) {
                if (this.masterService.RefObj.Ref_SupplierACID == null || this.masterService.RefObj.Ref_SupplierACID == "" || this.masterService.RefObj.Ref_SupplierACID == undefined ||
                    this.masterService.RefObj.Ref_SupplierName == null || this.masterService.RefObj.Ref_SupplierName == "" || this.masterService.RefObj.Ref_SupplierName == undefined) {
                    alert("Please enter Supplier !");
                    return;
                }
            }
        }
        // if(this.masterService.RefObj.PURCHASE_TYPE ==  'LOCALPURCHASE'){
        // this.masterService.IsTaxableBill = 0;
        // this.masterService.DoAccountPosting = 0;
        // this.masterService.IS_ECA_ITEM=0;
        // if (this.masterService.IsTaxableBill == 1) {
        //     alert("Is Taxable should be 0 for local purchase!");
        //     return;
        // }
        // if (this.masterService.DoAccountPosting == 1) {
        //     alert("Do Account Posting should be 0 for local purchase!");
        //     return;
        // }
        // }
        if (this.masterService.IsTaxableBill == 1) {
            if (this.masterService.RefObj.Ref_BILLNO == null || this.masterService.RefObj.Ref_BILLNO == "" || this.masterService.RefObj.Ref_BILLNO == undefined ||
                this.masterService.RefObj.Ref_TRNDATE == null || this.masterService.RefObj.Ref_TRNDATE == "" || this.masterService.RefObj.Ref_TRNDATE == undefined ||
                this.masterService.RefObj.Ref_SupplierName == null || this.masterService.RefObj.Ref_SupplierName == "" || this.masterService.RefObj.Ref_SupplierName == undefined) {
                alert("Ref Bill No, Ref Bill Date, Supplier Name is compulsory for taxable additional bill !");
                return;
            }
        }
        if (this._transactionService.userSetting.ENABLESUBLEDGER == 1) {
            if (this.masterService.DR_HASSUBLEDGER == 1 && this.masterService.DR_SL_ACID == "") {
                alert("Please, specify SUB LEDGER FOR A/C '" + this.form.value.AdditionalPurchaseAc.ACNAME + "'");
                return;
            }
            if (this.masterService.CR_HASSUBLEDGER == 1 && this.masterService.CR_SL_ACID == "") {
                alert("Please, specify SUB LEDGER FOR A/C '" + this.form.value.CREDITEDAC.ACNAME + "'");
                return;
            }
            if (this.masterService.TDS_HASSUBLEDGER == 1 && this.masterService.TDS_SL_ACID == "") {
                alert("Please, specify SUB LEDGER FOR A/C '" + this.TDSACCOUNTNAME + "'");
                return;
            }
        }
        //console.log("Hereby1",this.form.value.AdditionalPurchaseAc)
        // console.log("##this.masterService.addcosting",this.masterService.addcosting)
        var res = {};
        res.creditAc = this.form.value.CREDITEDAC;
        res.remarks = this.masterService.AdditionalREMARKS;
        res.costAc = this.form.value.AdditionalPurchaseAc;
        res.amount = this.masterService.AdditionalAMOUNT;
        res.mcode = this.form.value.MCODE;
        res.desca = desca;
        res.batch = this.form.value.BATCH;
        res.batchid = this.form.value.BATCHID;
        res.CostingNonCosting = this.masterService.addcosting;
        res.Ref_BILLNO = this.masterService.RefObj.Ref_BILLNO;
        res.Ref_TRNDATE = this.masterService.RefObj.Ref_TRNDATE;
        res.Ref_SupplierName = this.REFSUPPLIERNAME;
        res.TDSAmount = this.masterService.TDSAmount;
        res.TDSAccount_ACID = this.masterService.TDSAccount_ACID;
        res.TDSAccount_Name = this.TDSACCOUNTNAME;
        res.AdditionalDesc = this.masterService.AdditionalDesc;
        res.IsTaxableBill = this.masterService.IsTaxableBill ? this.masterService.IsTaxableBill : 0;
        res.DoAccountPosting = this.masterService.DoAccountPosting ? this.masterService.DoAccountPosting : 0;
        res.Ref_SupplierVAT = this.masterService.RefObj.Ref_SupplierVAT;
        res.Ref_SupplierACID = this.masterService.RefObj.Ref_SupplierACID;
        res.Ref_BSDATE = this.masterService.RefObj.Ref_BSDATE;
        res.IS_ECA_ITEM = this.masterService.IS_ECA_ITEM ? this.masterService.IS_ECA_ITEM : 0;
        res.DR_SL_ACID = this.masterService.DR_SL_ACID;
        res.DR_SL_ACNAME = this.masterService.DR_SL_ACNAME;
        res.CR_SL_ACID = this.masterService.CR_SL_ACID;
        res.CR_SL_ACNAME = this.masterService.CR_SL_ACNAME;
        res.TDS_SL_ACID = this.masterService.TDS_SL_ACID;
        res.TDS_SL_ACNAME = this.masterService.TDS_SL_ACNAME;
        res.DoReverseJournalEntry = this.masterService.DoReverseJournalEntry ? this.masterService.DoReverseJournalEntry : 0;
        res.ReverseJournalEntryACNAME = this.masterService.ReverseJournalACNAME ? this.masterService.ReverseJournalACNAME : '';
        res.ReverseJournalEntryACID = this.masterService.ReverseJournalACID ? this.masterService.ReverseJournalACID : '';
        if (res.IsTaxableBill == 0) {
            res.AdditionalVAT = this.masterService.AdditionalVAT = 0;
        }
        else {
            res.AdditionalVAT = this.masterService.AdditionalVAT;
        }
        if (this.PI == false) {
            res.CostingType = "Group Cost";
        }
        else {
            res.CostingType = "Ind Cost";
        }
        // if (this.PI == false) {
        //     res.CostingNonCosting = 'COSTING';
        // }
        // else {
        //     res.CostingNonCosting ='NONCOSTING';
        // }
        // let checked_costValue = document.querySelector('input[value = "true"]:checked');
        // if (checked_costValue != null) {  //Test if something was checked
        //     res.CostingNonCosting = true;
        // } else {
        //     res.CostingNonCosting = false
        // }
        // ////console.log("checking group cost", this.form.value.BYQUANTITY)
        // if(this.form.value.BYQUANTITY == true){
        //     res.GCOSTMODE = "On Qty";
        // }
        // else if(this.form.value.BYQUANTITY == false){
        //     res.GCOSTMODE = "On Amount";
        // }
        // else{
        //     res.GCOSTMODE = "";
        // }
        if (this.GcostMode == "Qty") {
            res.GCOSTMODE = "On Qty";
            this.byQuantity("Qty");
        }
        else if (this.GcostMode == "Amount") {
            res.GCOSTMODE = "On Amount";
            this.byQuantity("Amount");
        }
        else {
            res.GCOSTMODE = "";
        }
        res.byQuanty = this.form.value.BYQUANTITY;
        //console.log("Hereby2",this.form.value.AdditionalPurchaseAc)
        //console.log("res$$",res,this.form.value.AdditionalPurchaseAc)
        this._addionalcostService.onAddCost(res);
        // this.AddDebit();
        // this.AddCredit();
        this.EmptyAddCost();
        if (this.ValuePI == 1)
            this.PIADD = true;
        //    this.form.patchValue({
        //     AdditionalPurchaseAc:''
        //    })
        //    this.masterService.AdditionalPurchaseAcObj = ''
        //    this.masterService.AdditionalPurchaseCreditAcObj = ''
        this.masterService.mcode = '';
        this.masterService.desca = '';
        this.masterService.batch = '';
        this.masterService.batchid = '';
        // if(this.PI == true){
        //     this.masterService.focusAnyControl("_item");
        // }else{
        this.masterService.focusAnyControl("AdditionalCostAc_");
        // }
        this.BatchList = [];
        //    this.ItemObj = {};
        // ////console.log("ChecKDATAA", this.masterService.AdditionalCostTrnTran)
    };
    // AddDebit() {
    //     let x: Trntran = <Trntran>{};
    //     x.A_ACID = this.form.value.AdditionalPurchaseAc.ACID;
    //     x.AccountItem = this.form.value.AdditionalPurchaseAc;
    //     x.DRAMNT = this.form.value.AMOUNT;
    //     x.CRAMNT = 0;
    //     x.PartyDetails = [];
    //     x.ROWMODE = "new";
    //     x.inputMode = true;
    //     x.acitem = this.form.value.AdditionalPurchaseAc;
    //     this.masterService.AdditionalCostTrnTran.push(x);
    // }
    // AddCredit() {
    //     let y: Trntran = <Trntran>{};
    //     y.A_ACID = this.form.value.AdditionalPurchaseAc.ACID;
    //     y.AccountItem = this.form.value.CREDITEDAC;
    //     y.DRAMNT = 0;
    //     y.CRAMNT = this.form.value.AMOUNT;
    //     y.PartyDetails = [];
    //     y.ROWMODE = "new";
    //     y.inputMode = true;
    //     y.acitem = this.form.value.CREDITEDAC;
    //     this.masterService.AdditionalCostTrnTran.push(y);
    // }
    newadditionalCostDetail.prototype.EmptyAddCost = function () {
        this.form.patchValue({
            // CREDITEDAC: "",
            // AdditionalPurchaseAc: "",
            AMOUNT: "",
            // REMARKS: "",
            MCODE: "",
        });
        this.masterService.AdditionalAMOUNT = "";
        if (this.PI == false) {
            this.masterService.AdditionalPurchaseAcObj = '';
            this.masterService.AdditionalPurchaseCreditAcObj = '';
            this.masterService.AdditionalREMARKS = "";
            this.masterService.AdditionalDesc = "";
            this.masterService.AdditionalVAT = 0;
            this.masterService.TDSAmount = 0;
            this.masterService.TDSAccount_ACID = "";
            this.masterService.TDSAccount_Name = "";
            this.masterService.DoAccountPosting = 1;
            this.masterService.IsTaxableBill = 1;
            this.masterService.RefObj.Ref_BILLNO = "";
            this.masterService.RefObj.Ref_TRNDATE = "";
            this.masterService.RefObj.Ref_BSDATE = "";
            this.masterService.RefObj.Ref_SupplierACID = "";
            this.masterService.RefObj.Ref_SupplierName = "";
            this.masterService.RefObj.Ref_SupplierVAT = "";
            this.masterService.IS_ECA_ITEM = 0;
            this.TDSACCOUNTNAME = "";
            this.REFSUPPLIERNAME = "";
            this.masterService.DR_SL_ACID = '';
            this.masterService.DR_SL_ACNAME = '';
            this.masterService.CR_SL_ACID = '';
            this.masterService.CR_SL_ACNAME = '';
            this.masterService.TDS_SL_ACID = '';
            this.masterService.TDS_SL_ACNAME = '';
            this.masterService.DR_HASSUBLEDGER = 0;
            this.masterService.CR_HASSUBLEDGER = 0;
            this.masterService.TDS_HASSUBLEDGER = 0;
            this.masterService.DoReverseJournalEntry = 0;
            this.masterService.ReverseJournalACNAME = '';
            this.masterService.ReverseJournalACID = '';
            // this.masterService.disable_DrSubLedger=true;
            // this.masterService.disable_CrSubLedger=true;
            this.form.patchValue({
                REMARKS: ""
            });
        }
    };
    newadditionalCostDetail.prototype.checkRow = function (index) {
        // //console.log("ChecKVale",index)
    };
    newadditionalCostDetail.prototype.TableRowDoubleClickEvent = function (l) {
        console.log('Reverse Journal ledgers', l);
        // console.log("@data to be removed", l);
        if (l.CostingNonCosting == 'COSTING') {
            this.masterService.addcosting = 'COSTING';
        }
        else {
            this.masterService.addcosting = 'NONCOSTING';
        }
        this.allowRowAdd = false;
        if (l.CostingType == "Group Cost") {
            this.masterService.costType = "GroupCost";
            this.IndividualPI(false);
        }
        else if (l.CostingType == "Ind Cost") {
            this.masterService.costType = "IndividualCost";
            this.IndividualPI(true);
        }
        if (l.GCOSTMODE == "On Qty") {
            ////console.log("inside on qty");
            this.GcostMode = 'Qty';
            this.byQuantity('Qty');
        }
        else if (l.GCOSTMODE == "On Amount") {
            this.GcostMode = 'Amount';
            this.byQuantity('Amount');
        }
        else {
            this.GcostMode = '';
            this.form.value.BYQUANTITY = null;
        }
        if (l.CostingType != "Group Cost") {
            return;
        }
        this.form.patchValue({ AdditionalPurchaseAc: l.costAc, CREDITEDAC: l.creditAc, AMOUNT: l.amount, REMARKS: l.remarks, MCODE: l.mcode,
            AdditionalDesc: l.AdditionalDesc, AdditionalVAT: l.AdditionalVAT, TDSAmount: l.TDSAmount,
            TDSAccount_Name: l.TDSAccount_Name, DoAccountPosting: l.DoAccountPosting, IsTaxableBill: l.IsTaxableBill });
        this.masterService.AdditionalPurchaseAcObj = l.costAc.ACNAME;
        this.masterService.AdditionalPurchaseCreditAcObj = l.creditAc.ACNAME;
        this.masterService.AdditionalAMOUNT = l.amount;
        this.masterService.AdditionalREMARKS = l.remarks;
        this.masterService.TDSAmount = l.TDSAmount;
        this.masterService.TDSAccount_Name = l.TDSAccount_Name;
        this.masterService.AdditionalDesc = l.AdditionalDesc;
        this.masterService.AdditionalVAT = l.AdditionalVAT;
        this.masterService.IsTaxableBill = l.IsTaxableBill;
        this.masterService.DoAccountPosting = l.DoAccountPosting;
        this.masterService.RefObj.Ref_BILLNO = l.Ref_BILLNO;
        this.masterService.RefObj.Ref_TRNDATE = l.Ref_TRNDATE;
        this.masterService.RefObj.Ref_BSDATE = l.Ref_BSDATE;
        this.masterService.RefObj.Ref_SupplierACID = l.Ref_SupplierACID;
        this.masterService.RefObj.Ref_SupplierName = l.Ref_SupplierName;
        this.masterService.RefObj.Ref_SupplierVAT = l.Ref_SupplierVAT;
        this.masterService.TDSAccount_ACID = l.TDSAccount_ACID;
        this.TDSACCOUNTNAME = l.TDSAccount_Name;
        this.REFSUPPLIERNAME = l.Ref_SupplierName;
        this.masterService.IS_ECA_ITEM = l.IS_ECA_ITEM;
        this.masterService.DR_SL_ACID = l.DR_SL_ACID;
        this.masterService.DR_SL_ACNAME = l.DR_SL_ACNAME;
        this.masterService.CR_SL_ACID = l.CR_SL_ACID;
        this.masterService.CR_SL_ACNAME = l.CR_SL_ACNAME;
        this.masterService.TDS_SL_ACID = l.TDS_SL_ACID;
        this.masterService.TDS_SL_ACNAME = l.TDS_SL_ACNAME;
        this.masterService.DoReverseJournalEntry = l.DoReverseJournalEntry ? l.DoReverseJournalEntry : 0;
        this.masterService.ReverseJournalACNAME = l.ReverseJournalEntryACNAME ? l.ReverseJournalEntryACNAME : '';
        this.masterService.ReverseJournalACID = l.ReverseJournalEntryACID ? l.ReverseJournalEntryACID : '';
        // if(l.DR_SL_ACID){
        //     this.masterService.disable_DrSubLedger=false;
        // }
        // if(l.CR_SL_ACID){
        //     this.masterService.disable_CrSubLedger=false;
        // }
        // //console.log("AdditionalPurchaseAcObj",this.masterService.AdditionalPurchaseAcObj)
        // //console.log("AdditionalPurchaseCreditAcObj",this.masterService.AdditionalPurchaseCreditAcObj)
        var _getIndex = this._addionalcostService.costList.findIndex(function (x) { return x.costAc.ACNAME == l.costAc.ACNAME; });
        this._addionalcostService.costList.splice(_getIndex, 1);
        this._addionalcostService.INDcostList = this._addionalcostService.costList.filter(function (x) { return x.CostingType == "Ind Cost"; });
        this._addionalcostService.GRPcostList = this._addionalcostService.costList.filter(function (x) { return x.CostingType == "Group Cost"; });
        // this._addionalcostService.onDeleteCost(l);
        // this._transactionService.TrnMainObj.TrntranList.splice(index,1)
        this._transactionService.TrnMainObj.TrntranList = [];
        this._addionalcostService.addCostTotAmount = this._addionalcostService.addCostTotAmount - l.amount;
        this._addionalcostService.addGRPCostTotAmount = this._addionalcostService.addGRPCostTotAmount - l.amount;
        this._addionalcostService.addGRPCostTotalNetAmount = 0;
        if (l.IsTaxableBill == 1) {
            this._addionalcostService.addGRPCostTaxableTotalAmount = this._addionalcostService.addGRPCostTaxableTotalAmount - l.amount;
            this._addionalcostService.addGRPCostTotalVat = this._addionalcostService.addGRPCostTotalVat - l.AdditionalVAT;
        }
        else
            this._addionalcostService.addGRPCostNonTaxableTotalAmount = this._addionalcostService.addGRPCostNonTaxableTotalAmount - l.amount;
        this._addionalcostService.addGRPCostTotalNetAmount = this._addionalcostService.addGRPCostNonTaxableTotalAmount + this._addionalcostService.addGRPCostTaxableTotalAmount + this._addionalcostService.addGRPCostTotalVat;
        if (this._addionalcostService.header)
            this._addionalcostService.header.splice(this._addionalcostService.header.findIndex(function (x) { return x.MAPPINGNAME == l.costAc.ACNAME; }), 1);
        this._addionalcostService.DeleteDynamicColumn(l.costAc.ACNAME);
        this.CalculateVat();
    };
    newadditionalCostDetail.prototype.generateCostDetails = function () {
        this._addionalcostService.generateCostDetails();
    };
    newadditionalCostDetail.prototype.IndividualPI = function (value) {
        this.PI = value;
        if (this.PI == false) {
            this.form.get('MCODE').disable();
            this.form.get('BATCH').disable();
            this.GcostMode = "Amount";
            this.form.value.BYQUANTITY = true;
            this.masterService.focusAnyControl("AdditionalCostAc_");
        }
        else if (this.PI == true) {
            this.form.get('MCODE').enable();
            this.form.get('BATCH').enable();
            this.form.value.BYQUANTITY = null;
            this.GcostMode = "";
            // document.getElementById("_item").focus();
            this.masterService.focusAnyControl("_item");
        }
        this.form.patchValue({ MCODE: "", BATCH: value.BATCH });
        this.ItemObj = value.desca;
        // this.PIADD=true;
    };
    newadditionalCostDetail.prototype.byQuantity = function (value) {
        // ////console.log("CheckForm1",value)
        if (value == "Qty") {
            this.form.value.BYQUANTITY = true;
            this.qty = true;
        }
        else if (value == "Amount") {
            this.form.value.BYQUANTITY = false;
            this.qty = false;
        }
        else {
            this.form.value.BYQUANTITY = null;
        }
        // ////console.log("CheckForm",this.form.value.BYQUANTITY)
    };
    newadditionalCostDetail.prototype.TabAcBox = function (name) {
        //    this.genericGridRefBill.show();
        this.PI = false;
        var passingValue = '';
        if (name == 'CreditAC') {
            passingValue = 'AccountListAndSupplier';
            this.gridCreditACListPartyPopupSettings = this.masterService.getGenericGridPopUpSettings(passingValue);
            this.acTag = 'CreditAC';
            this.genericGridCreditACListParty.show();
        }
        else if (name == 'AC') {
            // if(this.PI == true && (this.masterService.desca === undefined || this.masterService.desca === '' || this.masterService.desca === null)){
            //     alert("Please select item first!");
            //     return;
            // }
            passingValue = 'AccountLedgerList';
            this.gridACListPartyPopupSettings = this.masterService.getGenericGridPopUpSettings(passingValue);
            this.acTag = 'AC';
            this.genericGridACParty.show();
        }
    };
    newadditionalCostDetail.prototype.ACNameSelect_Additional = function (value, name) {
        // alert("ree123"+value+'A'+this.acTag)
        //console.log("value",value)
        this.form.patchValue({ AdditionalPurchaseAc: value });
        this.masterService.AdditionalPurchaseAcObj = value.ACNAME;
        this.genericGridACParty.hide();
        this.masterService.DR_SL_ACID = '';
        this.masterService.DR_SL_ACNAME = '';
        this.masterService.DR_HASSUBLEDGER = value.HASSUBLEDGER;
        if (value.HASSUBLEDGER == 1 && this._transactionService.userSetting.ENABLESUBLEDGER == 1) {
            this.onsubLedgerTabDr(value);
            // this.masterService.disable_DrSubLedger=false;
        }
        else {
            // this.masterService.disable_DrSubLedger=true;
        }
        // this.masterService.focusAnyControl("Dr_Sub_ledger")
        //console.log("reds",value,this.form.value.AdditionalPurchaseAc)
    };
    newadditionalCostDetail.prototype.ACNameSelect_Credit = function (value, name) {
        // alert("ree333"+value+'A'+this.acTag)
        this.form.patchValue({ CREDITEDAC: value });
        this.masterService.AdditionalPurchaseCreditAcObj = value.ACNAME;
        this.genericGridCreditACListParty.hide();
        this.masterService.CR_SL_ACID = '';
        this.masterService.CR_SL_ACNAME = '';
        this.masterService.CR_HASSUBLEDGER = value.HASSUBLEDGER;
        if (value.HASSUBLEDGER == 1 && this._transactionService.userSetting.ENABLESUBLEDGER == 1) {
            // this.masterService.disable_CrSubLedger=false;
            this.onsubLedgerTabCr(value);
        }
        else {
            // this.masterService.disable_CrSubLedger=true;
        }
        // this.masterService.focusAnyControl("Cr_Sub_ledger");
    };
    newadditionalCostDetail.prototype.onsubLedgerTabAc = function (value) {
        // this.selectedIndex = i;
        this.gridSubLedgerSettingAc = {
            title: "SubLedger List",
            apiEndpoints: "/getSubLedgerByACIDPageList/" + value.ACID,
            defaultFilterIndex: 1,
            columns: [
                {
                    key: "SL_ACID",
                    title: "SubLedger ID",
                    hidden: false,
                    noSearch: false
                },
                {
                    key: "SL_ACNAME",
                    title: "SubLedger Name",
                    hidden: false,
                    noSearch: false
                }
            ]
        };
        this.gridSubLedgerSettingListAc.show();
    };
    newadditionalCostDetail.prototype.onsubLedgerTabDr = function (value) {
        // this.selectedIndex = i;
        this.gridSubLedgerSettingDr = {
            title: "SubLedger List",
            apiEndpoints: "/getSubLedgerByACIDPageList/" + value.ACID,
            defaultFilterIndex: 1,
            columns: [
                {
                    key: "SL_ACID",
                    title: "SubLedger ID",
                    hidden: false,
                    noSearch: false
                },
                {
                    key: "SL_ACNAME",
                    title: "SubLedger Name",
                    hidden: false,
                    noSearch: false
                }
            ]
        };
        this.gridSubLedgerSettingListDr.show();
    };
    newadditionalCostDetail.prototype.onsubLedgerTabCr = function (value) {
        // this.selectedIndex = i;
        this.gridSubLedgerSettingCr = {
            title: "SubLedger List",
            apiEndpoints: "/getSubLedgerByACIDPageList/" + value.ACID,
            defaultFilterIndex: 1,
            columns: [
                {
                    key: "SL_ACID",
                    title: "SubLedger ID",
                    hidden: false,
                    noSearch: false
                },
                {
                    key: "SL_ACNAME",
                    title: "SubLedger Name",
                    hidden: false,
                    noSearch: false
                }
            ]
        };
        this.gridSubLedgerSettingListCr.show();
    };
    newadditionalCostDetail.prototype.onSubLedgerSelectCr = function (value) {
        // this.CrsubledgerValue =value.SL_ACNAME;
        this.masterService.CR_SL_ACID = value.SL_ACID;
        this.masterService.CR_SL_ACNAME = value.SL_ACNAME;
    };
    newadditionalCostDetail.prototype.onSubLedgerSelectAc = function (value) {
        // this.CrsubledgerValue =value.SL_ACNAME;
        this.masterService.TDS_SL_ACID = value.SL_ACID;
        this.masterService.TDS_SL_ACNAME = value.SL_ACNAME;
    };
    newadditionalCostDetail.prototype.onSubLedgerSelectDr = function (value) {
        // console.log('checkselect',value)
        // this.DrsubledgerValue =value.SL_ACNAME;
        this.masterService.DR_SL_ACID = value.SL_ACID;
        this.masterService.DR_SL_ACNAME = value.SL_ACNAME;
        // if(this.subLedgerAc==1){
        //   this.masterService.tdsList[0].DESCA =value.SL_ACNAME;
        //   this.masterService.tdsList[0].ACID =value.SL_ACID;
        //   this.subLedgerAc=0
        // }else{
        //   this._transactionService.TrnMainObj.TrntranList[this.selectedIndex].SL_ACID = value.SL_ACID;
        //   this._transactionService.TrnMainObj.TrntranList[this.selectedIndex].SL_ACNAME = value.SL_ACNAME;
        //   this.focusNext(1, this.selectedIndex);
        // }
    };
    newadditionalCostDetail.prototype.onSalesManSelect = function (value) {
        this._transactionService.TrnMainObj.TrntranList[this.selectedIndex].SALESMAN = value.NAME;
        this.masterService.focusAnyControl('narration_' + this.selectedIndex);
    };
    newadditionalCostDetail.prototype.updown = function ($event) {
        if ($event.key == "Enter") {
            $event.preventDefault();
            if (this.form.valid && this.allowRowAdd === true) {
                ////console.log("Enter pressed")
                // this.onAddClick();
            }
        }
    };
    newadditionalCostDetail.prototype.focusTrigger = function () {
        this.allowRowAdd = true;
    };
    newadditionalCostDetail.prototype.ItemSelect = function () {
        if (this.masterService.RefObj.Refno === undefined || this.masterService.RefObj.Refno === '' || this.masterService.RefObj.Refno === null) {
            alert("Please select ref. PI voucher first.");
            return;
        }
        var _voucherno = this.masterService.RefObj.Refno;
        var vchrno = _voucherno.replace("/", "ZZ");
        this.gridItemPopupSettings = {
            title: "Item List ",
            apiEndpoints: "/getItemPagedListPIWise/" + vchrno + "/mcode",
            defaultFilterIndex: 0,
            columns: [
                {
                    key: 'MCODE',
                    title: 'Code',
                    hidden: false,
                    noSearch: false
                },
                {
                    key: 'DESCRIPTION',
                    title: 'Descritopnm',
                    hidden: false,
                    noSearch: false
                }
            ]
        };
        this.genericGridItem.show();
    };
    newadditionalCostDetail.prototype.dblClickItemSelection = function (value) {
        var _this = this;
        this.masterService.desca = value.DESCRIPTION;
        this.masterService.mcode = value.MCODE;
        this.masterService.batch = "";
        this.masterService.batchid = "";
        var _voucherno = this.masterService.RefObj.Refno;
        this.masterService.getBatchOfItem(_voucherno, value.MCODE).subscribe(function (res) {
            if (res.status == 'ok') {
                //console.log("res", res.result)
                if (res.result && res.result.length == 1) {
                    _this.masterService.batch = res.result[0].BATCH;
                    _this.masterService.batchid = res.result[0].BATCHID;
                    // if (this.masterService.AdditionalPurchaseAcObj === "" || this.masterService.AdditionalPurchaseAcObj === null || this.masterService.AdditionalPurchaseAcObj === undefined) {
                    _this.masterService.focusAnyControl("AdditionalCostAc_");
                    // } else {
                    //     this.masterService.focusAnyControl("AmountsAD_");
                    // }
                }
                else if (res.result && res.result.length > 1) {
                    _this.masterService.focusAnyControl("_batch");
                }
            }
        });
    };
    newadditionalCostDetail.prototype.BatchSelect = function () {
        if (this.masterService.batch != "") {
            return;
        }
        if (this.masterService.RefObj.Refno === undefined || this.masterService.RefObj.Refno === '' || this.masterService.RefObj.Refno === null) {
            alert("Please select ref. PI voucher first.");
            return;
        }
        var _voucherno = this.masterService.RefObj.Refno;
        var vchrno = _voucherno.replace("/", "ZZ");
        if (this.masterService.mcode === undefined || this.masterService.mcode === '' || this.masterService.mcode === null) {
            alert("Please select item first.");
            return;
        }
        var mcode = this.masterService.mcode;
        //console.log("@@DISPLAY",this.userSetting.DISPLAY)
        if (this.userSetting.DISPLAY == 1) {
            this.gridBatchPopupSettings = {
                title: "Item List ",
                apiEndpoints: "/getItemPagedListPIWise/" + vchrno + "/" + mcode,
                defaultFilterIndex: 0,
                columns: [
                    {
                        key: 'BATCH',
                        title: 'Batch',
                        hidden: false,
                        noSearch: false
                    },
                    {
                        key: 'MfgDate',
                        title: 'MfgDate',
                        hidden: false,
                        noSearch: false
                    },
                    {
                        key: 'ExpDate',
                        title: 'ExpDate',
                        hidden: false,
                        noSearch: false
                    },
                    {
                        key: 'LANDINGCOST',
                        title: 'Rate',
                        hidden: false,
                        noSearch: false
                    },
                    {
                        key: 'MRP',
                        title: 'Mrp',
                        hidden: false,
                        noSearch: false
                    }
                ]
            };
        }
        else {
            this.gridBatchPopupSettings = {
                title: "Item List ",
                apiEndpoints: "/getItemPagedListPIWise/" + vchrno + "/" + mcode,
                defaultFilterIndex: 0,
                columns: [
                    {
                        key: 'BATCH',
                        title: 'Batch',
                        hidden: false,
                        noSearch: false
                    }
                ]
            };
        }
        this.genericGridBatch.show();
    };
    newadditionalCostDetail.prototype.dblClickBatchSelection = function (value) {
        this.masterService.batch = value.BATCH;
        this.masterService.batchid = value.BATCHID;
        // if (this.masterService.AdditionalPurchaseAcObj === "" || this.masterService.AdditionalPurchaseAcObj === null || this.masterService.AdditionalPurchaseAcObj === undefined) {
        this.masterService.focusAnyControl("AdditionalCostAc_");
        // } else {
        //     this.masterService.focusAnyControl("AmountsAD_");
        // }
    };
    newadditionalCostDetail.prototype.remarksEntered = function () {
        if (this.PI == true) {
            this.onAddClick();
        }
    };
    newadditionalCostDetail.prototype.gcostEntered = function () {
        if (this.PI == false) {
            this.onAddClick();
        }
    };
    // TabRefBill() {
    //     //console.log("@@PURCHASE_TYPE",this.masterService.RefObj.PURCHASE_TYPE,this._trnMainService.userSetting.ENABLELOCALPURCHASE)
    //     if(this._transactionService.userSetting.ENABLELOCALPURCHASE==0){
    //       this.masterService.RefObj.PURCHASE_TYPE='ALL';
    //     }else{
    //       if(this._transactionService.userSetting.ENABLELOCALPURCHASE==1 && !this.masterService.RefObj.PURCHASE_TYPE){
    //         this.masterService.RefObj.PURCHASE_TYPE='ALL';
    //       }
    //     }
    //     this.gridPopupSettingsForRefBill = this.masterService.getGenericGridPopUpSettingsForAdditionalCost("AdditionalCost",this.masterService.RefObj.PURCHASE_TYPE);
    //     this.genericGridRefBill.show();
    //   }
    //   onRefBillSelected(value) {
    //     // alert("reached")
    //     this.masterService.AdditionalPurchaseAcObj = '';
    //     this.masterService.AdditionalPurchaseCreditAcObj = '';
    //     this.masterService.mcode= '';
    //     this.masterService.desca='';
    //     this.masterService.batch='';
    //     this.masterService.batchid='';
    //     this.masterService.RefObj.Refno = value.VCHRNO;
    //     this.masterService.RefObj.disable = true;
    //     this._transactionService.TrnMainObj.REFBILL = value.VCHRNO;
    //     this.masterService.RefObj.InvoiceNo = value.REFBILL;
    //     this.masterService.RefObj.SupplierName = value.ACNAME;
    //     this._transactionService.TrnMainObj.PARAC=value.PARAC;
    //     this.masterService.RefObj.SupplierVAT = value.BILLTOTEL;
    //     this.masterService.RefObj.Ref_TRNDATE = value.TRNDATE;
    //     this.masterService.RefObj.Ref_BSDATE = value.BSDATE;
    //     this.getAdditionalCost(value)
    //     this.masterService.focusAnyControl("_AdditioanlCostRate"+0)
    //   }
    newadditionalCostDetail.prototype.TabTDSAccount = function () {
        var TRNMODE = "TDS";
        this.gridACListPopupSettings = {
            title: "Accounts",
            apiEndpoints: "/getAccountPagedListByMapId/Details/" + TRNMODE,
            defaultFilterIndex: 1,
            columns: [
                {
                    key: "ACCODE",
                    title: "AC CODE",
                    hidden: false,
                    noSearch: false
                },
                {
                    key: "ACNAME",
                    title: "A/C NAME",
                    hidden: false,
                    noSearch: false
                }
            ]
        };
        this.genericGridACList.show();
    };
    newadditionalCostDetail.prototype.onAcSelect = function (value) {
        this.masterService.TDSAccount_Name = value.ACNAME;
        this.masterService.TDSAccount_ACID = value.ACID;
        this.TDSACCOUNTNAME = value.ACNAME;
        this.masterService.TDS_SL_ACID = '';
        this.masterService.TDS_SL_ACNAME = '';
        this.masterService.TDS_HASSUBLEDGER = value.HASSUBLEDGER;
        if (value.HASSUBLEDGER == 1 && this._transactionService.userSetting.ENABLESUBLEDGER == 1) {
            this.onsubLedgerTabAc(value);
        }
        else {
        }
    };
    //   getAdditionalCost(value) {
    //     this.loadingService.show("please wait. Getting purchase invoice data..")
    //     let VCHR = value.VCHRNO
    //     let division = value.DIVISION;
    //     let phiscalid= this.masterService.PhiscalObj.PhiscalID;
    //     this.masterService.LoadTransaction(VCHR, division, phiscalid).subscribe(data => {
    //       if (data) {
    //         try {
    //           ////console.log("additionalCostDataLoaded",data.result)
    //           this._addionalcostService.costList = [];
    //           this._addionalcostService.costdetail = [];
    //           this._addionalcostService.addtionalCostList = [];
    //           this._addionalcostService.addCostTotAmount = 0;
    //           //console.log("@@data.result.ProdList",data.result.ProdList)
    //           var result = data.result.ProdList.filter((elem1, i) => data.result.ProdList.some((elem2, j) => (elem2.MCODE === elem1.MCODE)
    //              && (elem2.BATCHID == elem1.BATCHID) && j !== i));
    //           //console.log("@@PI__result:", result);
    //         let acs1: prodCost = <prodCost>{ mcode: "", menucode: "", desca: "", unit: "",
    //                                         quantity: 0, rate: 0,amount: 0, nAmount: 0, batch:"",batchid:"" }
    //         if(result.length>0){
    //             result.forEach(element => {
    //               acs1.mcode=element.MCODE,
    //               acs1.menucode=element.MENUCODE,
    //               acs1.desca=element.ITEMDESC,
    //               acs1.unit=element.UNIT,
    //               acs1.batch=element.BATCH,
    //               acs1.rate=element.RATE,
    //               acs1.quantity=element.REALQTY_IN+acs1.quantity,
    //               acs1.amount=element.AMOUNT+acs1.amount,
    //               acs1.nAmount=element.NETAMOUNT+acs1.nAmount,
    //               acs1.batchid=element.BATCHID
    //             });
    //             this._addionalcostService.addtionalCostList.push(acs1);
    //             var result2 = data.result.ProdList.filter((elem1, i) => result.some((elem2, j) => (elem2.MCODE != elem1.MCODE || elem2.BATCHID != elem1.BATCHID)  && j !== i));
    //             if(result2.length > 0 ){
    //               //console.log("@@mcodediff_ac2",result2)
    //               for (let i of result2) {
    //                 var acs: prodCost = <prodCost>{
    //                   mcode: i.MCODE, menucode: i.MENUCODE, desca: i.ITEMDESC, unit: i.UNIT,
    //                   quantity: i.REALQTY_IN, 
    //                   rate: i.RATE,
    //                    amount: i.AMOUNT, 
    //                    nAmount: i.NETAMOUNT, batch:i.BATCH, batchid:i.BATCHID
    //                 };
    //                 this._addionalcostService.addtionalCostList.push(acs);
    //               }
    //             }
    //         }
    //           if(this._addionalcostService.addtionalCostList.length==0){
    //             //console.log("@@ac2")
    //           for (let i of data.result.ProdList) {
    //             var acs: prodCost = <prodCost>{
    //               mcode: i.MCODE, menucode: i.MENUCODE, desca: i.ITEMDESC, unit: i.UNIT,
    //               quantity: i.REALQTY_IN, 
    //               rate: i.RATE,
    //                amount: i.AMOUNT, 
    //                nAmount: i.NETAMOUNT, batch:i.BATCH,batchid:i.BATCHID
    //             };
    //             this._addionalcostService.addtionalCostList.push(acs);
    //           }
    //         }
    //           this.masterService.batch = data.result.ProdList && data.result.ProdList.length>0 && data.result.ProdList[0].BATCH;
    //           //total amount
    //           this._addionalcostService.loadedTrnmain = data.result;
    //           this.loadingService.hide();
    //         }
    //         catch (ex) { }
    //       }
    //       else {
    //         alert("Cannot Get Data from Bill no.")
    //       }
    //     })
    //   }
    newadditionalCostDetail.prototype.ChangeIsTaxableBill = function (value) {
        if (value == true) {
            this.masterService.IsTaxableBill = 1;
            this.masterService.IS_ECA_ITEM = 0;
        }
        else {
            this.masterService.IsTaxableBill = 0;
            this.masterService.AdditionalVAT = 0;
            this.masterService.IS_ECA_ITEM = 1;
            if (this._transactionService.userSetting.SHOW_IMPORT_DOC_ITEM == 1) {
            }
        }
        this.CalculateVat();
    };
    newadditionalCostDetail.prototype.ChangeECA_ITEM = function (value) {
        if (value == true) {
            this.masterService.IS_ECA_ITEM = 1;
            this.masterService.IsTaxableBill = 0;
            this.masterService.AdditionalVAT = 0;
        }
        else {
            this.masterService.IsTaxableBill = 1;
            this.masterService.IS_ECA_ITEM = 0;
        }
        this.CalculateVat();
    };
    newadditionalCostDetail.prototype.changeToBSDate = function (value, format) {
        var adbs = __webpack_require__(19);
        if (format == "AD") {
            var yearValue = __WEBPACK_IMPORTED_MODULE_8_moment__(value).year();
            if (yearValue.toString().length == 4) {
                var adDate = (value.replace("-", "/")).replace("-", "/");
                var bsDate = adbs.ad2bs(adDate);
                bsDate.en.month = bsDate.en.month <= 9 ? "0" + (bsDate.en.month) : bsDate.en.month;
                this.masterService.RefObj.Ref_BSDATE =
                    this.masterService.toADDate(value);
            }
        }
    };
    newadditionalCostDetail.prototype.SupplierList = function () {
        this.gridPopupSettingsForSupplier = this.masterService.getGenericGridPopUpSettings("Supplier");
        this.genericGridSupplier.show();
    };
    newadditionalCostDetail.prototype.onSupplierSelected = function (value) {
        this.masterService.RefObj.Ref_SupplierACID = value.ACID;
        this.masterService.RefObj.Ref_SupplierName = value.ACNAME;
        this.masterService.RefObj.Ref_SupplierVAT = value.VATNO ? value.VATNO : value.GSTNO;
        this.REFSUPPLIERNAME = value.ACNAME;
    };
    newadditionalCostDetail.prototype.ok = function () {
        var abc = this.masterService.pi_costdetaillist;
        // if(abc && abc.length==0){
        //     alert("Please select any one row to load!");
        //     return;
        // }
        this.masterService.showCostPopup = false;
        for (var _i = 0, abc_1 = abc; _i < abc_1.length; _i++) {
            var data = abc_1[_i];
            this.form.patchValue({ AdditionalPurchaseAc: data });
            this.masterService.AdditionalPurchaseAcObj = data.ACNAME;
            this.masterService.AdditionalAMOUNT = data.AMOUNT;
            this.masterService.costType = "GroupCost";
            this.masterService.addcosting = 'COSTING';
            this.masterService.DoAccountPosting = 0;
            // this.masterService.DoReverseJournalEntry = 0;
            // this.masterService.ReverseJournalACNAME = '';
            // this.masterService.ReverseJournalACID = '';
            this.masterService.IsTaxableBill = 0;
            this.masterService.IS_ECA_ITEM = 0;
            if (this._transactionService.userSetting.ENABLESUBLEDGER == 1) {
                this.masterService.DR_SL_ACID = data.SL_ACID;
                this.masterService.DR_SL_ACNAME = data.SL_ACNAME;
            }
            this.onAddClick();
        }
    };
    newadditionalCostDetail.prototype.cancel = function () {
        this.masterService.showCostPopup = false;
    };
    newadditionalCostDetail.prototype.selectAllCheckboxes = function () {
        // console.log("@@ALLCHECKBOX",this.ALLCHECKBOX)
        if (this.ALLCHECKBOX == true) {
            this.masterService.pi_costdetaillist.forEach(function (x) { return x.checkbox = true; });
        }
        else {
            this.masterService.pi_costdetaillist.forEach(function (x) { return x.checkbox = false; });
        }
    };
    newadditionalCostDetail.prototype.CalculateVat = function () {
        console.log("CheckCheck", this.masterService.AdditionalAMOUNT);
        if (this.masterService.AdditionalAMOUNT) {
            if (this.masterService.IsTaxableBill == 1) {
                this.masterService.AdditionalVAT = Number(Number(this.masterService.AdditionalAMOUNT * 0.13).toFixed(2));
            }
            else {
                this.masterService.AdditionalVAT = 0;
            }
        }
    };
    newadditionalCostDetail.prototype.checkVat = function () {
        if (this.masterService.AdditionalVAT <= 0) {
            this.masterService.IsTaxableBill = 0;
        }
    };
    newadditionalCostDetail.prototype.ChangeReverseJournal = function (event) {
        event.target.checked ? (this.masterService.DoReverseJournalEntry = 1) : (this.masterService.DoReverseJournalEntry = 0);
        if (event.target.checked == true) {
            this.genericGridACPartyForReverseJournal = this.masterService.getGenericGridPopUpSettings("AccountListAndSupplierForReverseJournal");
            this.genericGridACPartyReverseJournal.show();
        }
        else if (!event.target.checked) {
            this.masterService.ReverseJournalACNAME = '';
            this.masterService.ReverseJournalACID = '';
        }
    };
    newadditionalCostDetail.prototype.ACNameSelectForReverseJournal = function (value) {
        this.masterService.ReverseJournalACNAME = value.ACNAME;
        this.masterService.ReverseJournalACID = value.ACID;
        console.log('account values', value, this.masterService.ReverseJournalACNAME);
    };
    newadditionalCostDetail.prototype.resetReverseJournalEntry = function () {
        this.masterService.DoReverseJournalEntry = 0;
    };
    return newadditionalCostDetail;
}());
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__angular_core__["ViewChild"])("genericGridACParty"),
    __metadata("design:type", __WEBPACK_IMPORTED_MODULE_4__common_popupLists_generic_grid_generic_popup_grid_component__["c" /* GenericPopUpComponent */])
], newadditionalCostDetail.prototype, "genericGridACParty", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__angular_core__["ViewChild"])("genericGridCreditACListParty"),
    __metadata("design:type", __WEBPACK_IMPORTED_MODULE_4__common_popupLists_generic_grid_generic_popup_grid_component__["c" /* GenericPopUpComponent */])
], newadditionalCostDetail.prototype, "genericGridCreditACListParty", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__angular_core__["ViewChild"])("genericGridItem"),
    __metadata("design:type", __WEBPACK_IMPORTED_MODULE_4__common_popupLists_generic_grid_generic_popup_grid_component__["c" /* GenericPopUpComponent */])
], newadditionalCostDetail.prototype, "genericGridItem", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__angular_core__["ViewChild"])("genericGridBatch"),
    __metadata("design:type", __WEBPACK_IMPORTED_MODULE_4__common_popupLists_generic_grid_generic_popup_grid_component__["c" /* GenericPopUpComponent */])
], newadditionalCostDetail.prototype, "genericGridBatch", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__angular_core__["ViewChild"])("genericGridACList"),
    __metadata("design:type", __WEBPACK_IMPORTED_MODULE_4__common_popupLists_generic_grid_generic_popup_grid_component__["c" /* GenericPopUpComponent */])
], newadditionalCostDetail.prototype, "genericGridACList", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__angular_core__["ViewChild"])("genericGridSupplier"),
    __metadata("design:type", __WEBPACK_IMPORTED_MODULE_4__common_popupLists_generic_grid_generic_popup_grid_component__["c" /* GenericPopUpComponent */])
], newadditionalCostDetail.prototype, "genericGridSupplier", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__angular_core__["ViewChild"])("gridSubLedgerSettingListCr"),
    __metadata("design:type", __WEBPACK_IMPORTED_MODULE_4__common_popupLists_generic_grid_generic_popup_grid_component__["c" /* GenericPopUpComponent */])
], newadditionalCostDetail.prototype, "gridSubLedgerSettingListCr", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__angular_core__["ViewChild"])("gridSubLedgerSettingListDr"),
    __metadata("design:type", __WEBPACK_IMPORTED_MODULE_4__common_popupLists_generic_grid_generic_popup_grid_component__["c" /* GenericPopUpComponent */])
], newadditionalCostDetail.prototype, "gridSubLedgerSettingListDr", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__angular_core__["ViewChild"])("gridSubLedgerSettingListAc"),
    __metadata("design:type", __WEBPACK_IMPORTED_MODULE_4__common_popupLists_generic_grid_generic_popup_grid_component__["c" /* GenericPopUpComponent */])
], newadditionalCostDetail.prototype, "gridSubLedgerSettingListAc", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__angular_core__["ViewChild"])("genericGridACPartyReverseJournal"),
    __metadata("design:type", __WEBPACK_IMPORTED_MODULE_4__common_popupLists_generic_grid_generic_popup_grid_component__["c" /* GenericPopUpComponent */])
], newadditionalCostDetail.prototype, "genericGridACPartyReverseJournal", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__angular_core__["HostListener"])("document: keydown", ["$event"]),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [KeyboardEvent]),
    __metadata("design:returntype", void 0)
], newadditionalCostDetail.prototype, "updown", null);
newadditionalCostDetail = __decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__angular_core__["Component"])({
        selector: 'newadditionalCost',
        template: __webpack_require__(1343),
        styles: [__webpack_require__(120), __webpack_require__(9), __webpack_require__(554)],
        providers: []
    }),
    __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_6__AdditionalCost_addtionalCost_service__["a" /* AdditionalCostService */],
        __WEBPACK_IMPORTED_MODULE_2__angular_forms__["FormBuilder"],
        __WEBPACK_IMPORTED_MODULE_0__common_repositories_masterRepo_service__["a" /* MasterRepo */],
        __WEBPACK_IMPORTED_MODULE_3__common_Transaction_Components_transaction_service__["a" /* TransactionService */],
        __WEBPACK_IMPORTED_MODULE_5__common_services_permission__["a" /* AuthService */],
        __WEBPACK_IMPORTED_MODULE_7__common_services_spinner_spinner_service__["a" /* SpinnerService */]])
], newadditionalCostDetail);



/***/ }),

/***/ 1296:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__common_repositories_masterRepo_service__ = __webpack_require__(8);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__angular_forms__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__AdditionalCost_addtionalCost_service__ = __webpack_require__(43);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return NewCostingDetailComponent; });




var NewCostingDetailComponent = (function () {
    function NewCostingDetailComponent(_addionalcostService, fb, masterService, _additionalCostService) {
        this._addionalcostService = _addionalcostService;
        this.fb = fb;
        this.masterService = masterService;
        this._additionalCostService = _additionalCostService;
        this.header = [];
        this.TrnMainObj = _addionalcostService.TrnMainObj;
        // console.log("headers===" + JSON.stringify(_addionalcostService.header));
        // ////console.log("additionalCost", this._addionalcostService.addtionalCostList)
        this.form = fb.group({
            AdditionalPurchaseAc: [''],
        });
        this._additionalCostService.header = [{ TITLE: 'Item Code' }, { TITLE: 'Item Name' }, { TITLE: 'Batch' }, { TITLE: 'Qty' }, { TITLE: 'Amount' }];
        this._additionalCostService.generateCostDetails();
    }
    NewCostingDetailComponent.prototype.selectAlignment = function (value) {
        ////console.log("#",value)
    };
    return NewCostingDetailComponent;
}());
NewCostingDetailComponent = __decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__angular_core__["Component"])({
        selector: 'new-costingDetail',
        template: __webpack_require__(1344),
        styles: [__webpack_require__(120), __webpack_require__(9), __webpack_require__(554)],
        providers: []
    }),
    __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_3__AdditionalCost_addtionalCost_service__["a" /* AdditionalCostService */], __WEBPACK_IMPORTED_MODULE_2__angular_forms__["FormBuilder"], __WEBPACK_IMPORTED_MODULE_0__common_repositories_masterRepo_service__["a" /* MasterRepo */],
        __WEBPACK_IMPORTED_MODULE_3__AdditionalCost_addtionalCost_service__["a" /* AdditionalCostService */]])
], NewCostingDetailComponent);



/***/ }),

/***/ 1297:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__common_Transaction_Components_transaction_service__ = __webpack_require__(7);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__common_repositories_masterRepo_service__ = __webpack_require__(8);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__angular_forms__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__AdditionalCost_addtionalCost_service__ = __webpack_require__(43);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return NewPurchaseDetailComponent; });





// import { NewAdditionalCostService } from './newAdditionalCost.service';
var NewPurchaseDetailComponent = (function () {
    function NewPurchaseDetailComponent(transactionService, fb, masterService, _additionalCostService) {
        this.transactionService = transactionService;
        this.fb = fb;
        this.masterService = masterService;
        this._additionalCostService = _additionalCostService;
        // form:FormGroup;
        this.TrnProdlist = [];
        this.TrnMainObj = this._additionalCostService.TrnMainObj;
        this.TrnProdlist = (this.TrnMainObj.ProdList);
    }
    NewPurchaseDetailComponent.prototype.changeRate = function (value, index) {
        this._additionalCostService.addtionalCostList[index].rate = value;
        this._additionalCostService.addtionalCostList[index].amount = value * this._additionalCostService.addtionalCostList[index].quantity;
        this._additionalCostService.addtionalCostList[index].nAmount = this._additionalCostService.addtionalCostList[index].amount * 1.13;
    };
    NewPurchaseDetailComponent.prototype.EnterClickOnRate = function (i) {
        this.masterService.focusAnyControl('_AdditioanlCostRate' + (i + 1));
    };
    return NewPurchaseDetailComponent;
}());
NewPurchaseDetailComponent = __decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__angular_core__["Component"])({
        selector: 'new-purchaseDetail',
        template: __webpack_require__(1346),
        styles: [__webpack_require__(120), __webpack_require__(9), __webpack_require__(554)],
        providers: []
    }),
    __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_0__common_Transaction_Components_transaction_service__["a" /* TransactionService */], __WEBPACK_IMPORTED_MODULE_3__angular_forms__["FormBuilder"], __WEBPACK_IMPORTED_MODULE_1__common_repositories_masterRepo_service__["a" /* MasterRepo */],
        __WEBPACK_IMPORTED_MODULE_4__AdditionalCost_addtionalCost_service__["a" /* AdditionalCostService */]])
], NewPurchaseDetailComponent);



/***/ }),

/***/ 1300:
/***/ (function(module, exports) {

// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

function EventEmitter() {
  this._events = this._events || {};
  this._maxListeners = this._maxListeners || undefined;
}
module.exports = EventEmitter;

// Backwards-compat with node 0.10.x
EventEmitter.EventEmitter = EventEmitter;

EventEmitter.prototype._events = undefined;
EventEmitter.prototype._maxListeners = undefined;

// By default EventEmitters will print a warning if more than 10 listeners are
// added to it. This is a useful default which helps finding memory leaks.
EventEmitter.defaultMaxListeners = 10;

// Obviously not all Emitters should be limited to 10. This function allows
// that to be increased. Set to zero for unlimited.
EventEmitter.prototype.setMaxListeners = function(n) {
  if (!isNumber(n) || n < 0 || isNaN(n))
    throw TypeError('n must be a positive number');
  this._maxListeners = n;
  return this;
};

EventEmitter.prototype.emit = function(type) {
  var er, handler, len, args, i, listeners;

  if (!this._events)
    this._events = {};

  // If there is no 'error' event listener then throw.
  if (type === 'error') {
    if (!this._events.error ||
        (isObject(this._events.error) && !this._events.error.length)) {
      er = arguments[1];
      if (er instanceof Error) {
        throw er; // Unhandled 'error' event
      } else {
        // At least give some kind of context to the user
        var err = new Error('Uncaught, unspecified "error" event. (' + er + ')');
        err.context = er;
        throw err;
      }
    }
  }

  handler = this._events[type];

  if (isUndefined(handler))
    return false;

  if (isFunction(handler)) {
    switch (arguments.length) {
      // fast cases
      case 1:
        handler.call(this);
        break;
      case 2:
        handler.call(this, arguments[1]);
        break;
      case 3:
        handler.call(this, arguments[1], arguments[2]);
        break;
      // slower
      default:
        args = Array.prototype.slice.call(arguments, 1);
        handler.apply(this, args);
    }
  } else if (isObject(handler)) {
    args = Array.prototype.slice.call(arguments, 1);
    listeners = handler.slice();
    len = listeners.length;
    for (i = 0; i < len; i++)
      listeners[i].apply(this, args);
  }

  return true;
};

EventEmitter.prototype.addListener = function(type, listener) {
  var m;

  if (!isFunction(listener))
    throw TypeError('listener must be a function');

  if (!this._events)
    this._events = {};

  // To avoid recursion in the case that type === "newListener"! Before
  // adding it to the listeners, first emit "newListener".
  if (this._events.newListener)
    this.emit('newListener', type,
              isFunction(listener.listener) ?
              listener.listener : listener);

  if (!this._events[type])
    // Optimize the case of one listener. Don't need the extra array object.
    this._events[type] = listener;
  else if (isObject(this._events[type]))
    // If we've already got an array, just append.
    this._events[type].push(listener);
  else
    // Adding the second element, need to change to array.
    this._events[type] = [this._events[type], listener];

  // Check for listener leak
  if (isObject(this._events[type]) && !this._events[type].warned) {
    if (!isUndefined(this._maxListeners)) {
      m = this._maxListeners;
    } else {
      m = EventEmitter.defaultMaxListeners;
    }

    if (m && m > 0 && this._events[type].length > m) {
      this._events[type].warned = true;
      console.error('(node) warning: possible EventEmitter memory ' +
                    'leak detected. %d listeners added. ' +
                    'Use emitter.setMaxListeners() to increase limit.',
                    this._events[type].length);
      if (typeof console.trace === 'function') {
        // not supported in IE 10
        console.trace();
      }
    }
  }

  return this;
};

EventEmitter.prototype.on = EventEmitter.prototype.addListener;

EventEmitter.prototype.once = function(type, listener) {
  if (!isFunction(listener))
    throw TypeError('listener must be a function');

  var fired = false;

  function g() {
    this.removeListener(type, g);

    if (!fired) {
      fired = true;
      listener.apply(this, arguments);
    }
  }

  g.listener = listener;
  this.on(type, g);

  return this;
};

// emits a 'removeListener' event iff the listener was removed
EventEmitter.prototype.removeListener = function(type, listener) {
  var list, position, length, i;

  if (!isFunction(listener))
    throw TypeError('listener must be a function');

  if (!this._events || !this._events[type])
    return this;

  list = this._events[type];
  length = list.length;
  position = -1;

  if (list === listener ||
      (isFunction(list.listener) && list.listener === listener)) {
    delete this._events[type];
    if (this._events.removeListener)
      this.emit('removeListener', type, listener);

  } else if (isObject(list)) {
    for (i = length; i-- > 0;) {
      if (list[i] === listener ||
          (list[i].listener && list[i].listener === listener)) {
        position = i;
        break;
      }
    }

    if (position < 0)
      return this;

    if (list.length === 1) {
      list.length = 0;
      delete this._events[type];
    } else {
      list.splice(position, 1);
    }

    if (this._events.removeListener)
      this.emit('removeListener', type, listener);
  }

  return this;
};

EventEmitter.prototype.removeAllListeners = function(type) {
  var key, listeners;

  if (!this._events)
    return this;

  // not listening for removeListener, no need to emit
  if (!this._events.removeListener) {
    if (arguments.length === 0)
      this._events = {};
    else if (this._events[type])
      delete this._events[type];
    return this;
  }

  // emit removeListener for all listeners on all events
  if (arguments.length === 0) {
    for (key in this._events) {
      if (key === 'removeListener') continue;
      this.removeAllListeners(key);
    }
    this.removeAllListeners('removeListener');
    this._events = {};
    return this;
  }

  listeners = this._events[type];

  if (isFunction(listeners)) {
    this.removeListener(type, listeners);
  } else if (listeners) {
    // LIFO order
    while (listeners.length)
      this.removeListener(type, listeners[listeners.length - 1]);
  }
  delete this._events[type];

  return this;
};

EventEmitter.prototype.listeners = function(type) {
  var ret;
  if (!this._events || !this._events[type])
    ret = [];
  else if (isFunction(this._events[type]))
    ret = [this._events[type]];
  else
    ret = this._events[type].slice();
  return ret;
};

EventEmitter.prototype.listenerCount = function(type) {
  if (this._events) {
    var evlistener = this._events[type];

    if (isFunction(evlistener))
      return 1;
    else if (evlistener)
      return evlistener.length;
  }
  return 0;
};

EventEmitter.listenerCount = function(emitter, type) {
  return emitter.listenerCount(type);
};

function isFunction(arg) {
  return typeof arg === 'function';
}

function isNumber(arg) {
  return typeof arg === 'number';
}

function isObject(arg) {
  return typeof arg === 'object' && arg !== null;
}

function isUndefined(arg) {
  return arg === void 0;
}


/***/ }),

/***/ 1301:
/***/ (function(module, exports) {

module.exports = "\r\n        <div class=\"col-md-12\" style=\"padding:0px\">\r\n          <div class=\"modal-header\">\r\n            <h4 class=\"modal-title\">Select Prefix</h4>\r\n          </div>\r\n\r\n          <div class=\"form-group row form-horizontal\" style=\"padding-top: 10px;\">\r\n            <label class=\"col-sm-4 form-control-label\">Voucher Type:</label>\r\n            <div class=\"col-sm-8\">\r\n              <select class=\"form-control\" [(ngModel)]=\"selectedVT\" (change)=\"voucherTypeChange($event.target.value)\" style=\"color:black\" disabled>\r\n            <option  *ngIf=\"voucherType==12\" value=\"Journal\">Journal</option>\r\n            <option   *ngIf=\"voucherType==17\" value=\"Payment\">Payment</option>\r\n            <option   *ngIf=\"voucherType==3\" value=\"Purchase\">Purchase</option>\r\n            <option   *ngIf=\"voucherType==5\" value=\"StockIssue\">Stock Issue</option>\r\n            <option   *ngIf=\"voucherType==7\" value=\"BranchTransferIn\">Branch Transfer In</option>\r\n            <option   *ngIf=\"voucherType==8\" value=\"BranchTransferOut\">Branch Transfer Out</option>\r\n            <option   *ngIf=\"voucherType==13\" value=\"BranchTransferOut\">Dispatch</option>\r\n        </select>\r\n\r\n            </div>\r\n          </div>\r\n          <div class=\"form-group row form-horizontal\">\r\n            <label class=\"col-sm-4 form-control-label\">Voucher Name:</label>\r\n            <div class=\"col-sm-8\">\r\n              <select class=\"form-control\" [(ngModel)]=\"prefix.VNAME\" (change)=\"prefixChanged()\">\r\n                         <option *ngFor=\"let un of prefixesObservable$ | async\" [ngValue]=\"un.VNAME\"> {{un.VOUCHERNAME}}</option>\r\n                         </select>\r\n            </div>\r\n          </div>\r\n          <div class=\"form-group row form-horizontal\">\r\n            <label class=\"col-sm-4 form-control-label\">Uname:</label>\r\n            <div class=\"col-sm-8\">\r\n              <select class=\"form-control\" [(ngModel)]=\"prefix.VNAME\"\r\n               (change)=\"prefixChanged()\" >\r\n                         <option *ngFor=\"let un of prefixesObservable$ | async\" [ngValue]=\"un.VNAME\"> {{un.VNAME}}</option>\r\n                         </select>\r\n            </div>\r\n          </div>\r\n          <button title=\"Save\" class=\"btn btn-info\" data-dismiss=\"modal\" (click)=\"OK()\">Ok</button>\r\n\r\n        </div>\r\n"

/***/ }),

/***/ 1302:
/***/ (function(module, exports) {

module.exports = "<style>\r\n  .modal-content {\r\n    padding: 1px;\r\n    margin: 0px;\r\n    float: right;\r\n  }\r\n\r\n  tbody>tr:hover {\r\n    background-color: #f3f5f4;\r\n    cursor: pointer;\r\n  }\r\n\r\n  tr {\r\n    font-size: 11px;\r\n  }\r\n\r\n  .selected-row {\r\n    background-color: #ced6d3 !important;\r\n  }\r\n\r\n  .table>tbody>tr>td {\r\n    line-height: 30px !important;\r\n  }\r\n\r\n  .table>thead>tr>th {\r\n    line-height: 5px !important;\r\n  }\r\n\r\n  .table>tbody>tr>td:first-child {\r\n    text-align: left !important;\r\n    padding: 0px 0px 0px 11px !important;\r\n  }\r\n\r\n\r\n\r\n  .modal-content-main-area {\r\n    max-height: 100%;\r\n    height: 100%;\r\n    overflow: auto;\r\n    overflow-x: hidden;\r\n  }\r\n\r\n  .modal-content-summary-area {\r\n    max-height: 20%;\r\n    height: 20%;\r\n    overflow: auto;\r\n    overflow-x: hidden;\r\n  }\r\n\r\n  .ellipsis {\r\n    /* width: 220px;\r\n    text-overflow: ellipsis;\r\n    overflow: hidden; */\r\n    white-space: nowrap;\r\n  }\r\n\r\n  .checkbox label,\r\n  .radio label {\r\n    cursor: pointer;\r\n  }\r\n\r\n\r\n  .form-control[disabled],\r\n  .form-control[readonly],\r\n  fieldset[disabled] .form-control {\r\n    color: black;\r\n  }\r\n\r\n  .smallBoldLabel {\r\n    font-size: 11px;\r\n    font-weight: bold;\r\n    margin: 0px;\r\n    margin-left: 10px;\r\n  }\r\n  .input-text{\r\n        width : 100%; \r\n        /* height: 30px !important; */\r\n        font-weight: bold;\r\n    }\r\n    .td-class{\r\n        border: none !important;\r\n    }\r\n    .date-input{\r\n        width: 93%;\r\n        font-size: 12px !important;\r\n        height: 30px !important;\r\n    }\r\n</style>\r\n<!-- <div [class.modal-sticky-hide]=\"!isActive\" style=\"display : block; padding: 0px;position: absolute;\r\n                            top: 60px ;\r\n                            right: 55.5%;\r\n                            width: 100%;\r\n                            height: auto;\r\n                            z-index: 9999999;\r\n                            max-height: 500px;\r\n                            overflow-y: auto;\"> -->\r\n<!-- Modal content -->\r\n<!-- <div class=\"modal-content modal-content-main-area\" style=\"width: 42% !important\">\r\n    <div>\r\n      <div class=\"modal-header\" style=\"padding: 0px;background: #8cccfb;\">\r\n\r\n        <h4 class=\"modal-title\" style=\"text-align: center;\">\r\n          Select Filters\r\n        </h4>\r\n      </div>\r\n      <div class=\"modal-body\">\r\n        <div class=\"clearfix\">\r\n          <div class=\"col-md-12\" *ngIf=\"reportType=='Ledger Voucher'\">\r\n            <div class=\"col-md-6 form-group\">\r\n              <label>Ledger Type</label>\r\n              <select class=\"form-control\" (change)=\"onLedgerTypeChange();\" [(ngModel)]=\"_reportFilterService.ReportFilterObj.ledgerType\">\r\n                <option value=\"account\" selected>Account Ledger</option>\r\n                <option value=\"group\">Group Ledger</option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-md-12\">\r\n            <div class=\"col-md-8 form-group\">\r\n              <div class=\"report-filter\" *ngIf=\"reportType!='OpeningBalance'\"> -->\r\n<!-- <label>Date Selection</label>\r\n                <input class=\"form-control\" type=\"text\" ngxDaterangepickerMd [(ngModel)]=\"selectedDate\"\r\n                  [showDropdowns]=\"true\" [showCustomRangeLabel]=\"true\" [alwaysShowCalendars]=\"true\" [locale]=\"locale\"\r\n                  [ranges]=\"ranges\" [showCancel]=\"true\" placeholder=\"Date Range...\"\r\n                  (ngModelChange)=\"dateChanged($event)\" /> -->\r\n\r\n<!-- <date-filters (startDateResponse)=\"startDateResponse($event)\"\r\n                  (endDateResponse)=\"endDateResponse($event)\"></date-filters> -->\r\n\r\n<!-- <fieldset style=\"width: 256px;\">\r\n                    <legend style=\"font-size:11px;font-weight: bold; width:auto\">Date Range Selection :</legend>\r\n                    <table>\r\n                        <tr>\r\n                            <td><label class=\"smallBoldLabel\">From:(AD)</label></td>\r\n                            <td><label class=\"smallBoldLabel\">To:(AD)</label></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>\r\n                                <label class=\"smallBoldLabel\"><input type=\"date\"\r\n                                        style=\"min-width:50%;width: 120px;\" placeholder=\"Year Start Date\"\r\n                                        [(ngModel)]=\"_reportFilterService.ReportFilterObj.DATE1\"\r\n                                        (change)=\"changeEntryDate($event.target.value,'AD')\"></label>\r\n                            </td>\r\n                            <td>\r\n                                <label class=\"smallBoldLabel\"><input type=\"date\"\r\n                                        style=\"min-width:50%;width: 120px;\" placeholder=\"Year Start Date\"\r\n                                        [(ngModel)]=\"_reportFilterService.ReportFilterObj.DATE2\"\r\n                                        (change)=\"changeEndDate($event.target.value,'AD')\"></label>\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>\r\n                                <label class=\"smallBoldLabel\"> <input id=\"nepaliDate\"\r\n                                        style=\"height:25px;text-align:center;min-width:50%;width: 120px;\"\r\n                                        class=\"nepali-calendar ndp-nepali-calendar\"\r\n                                        [(ngModel)]=\"_reportFilterService.ReportFilterObj.BSDATE1\" type=\"text\"\r\n                                        (change)=\"changeEntryDate($event.target.value,'BS')\"\r\n                                        placeholder=\"yyyy-mm-dd\" />\r\n                                </label>\r\n                \r\n                            </td>\r\n                            <td>\r\n                                <label class=\"smallBoldLabel\">\r\n                                    <input id=\"nepaliDate\" style=\"height:25px;text-align:center;min-width:50%;width: 120px;\"\r\n                                        class=\"nepali-calendar ndp-nepali-calendar\"\r\n                                        [(ngModel)]=\"_reportFilterService.ReportFilterObj.BSDATE2\" type=\"text\"\r\n                                        (change)=\"changeEndDate($event.target.value,'BS')\"\r\n                                        placeholder=\"yyyy-mm-dd\" />\r\n                                </label>\r\n                            </td>\r\n                        </tr>\r\n                    </table>\r\n                </fieldset> -->\r\n\r\n<!-- \r\n              </div>\r\n            </div>\r\n            <div class=\"col-md-4 form-group\" style=\"padding-left: 0;padding-right: 0;\"\r\n            *ngIf=\"reportType!='OpeningBalance' && reportType!='Cash Book' && reportType!='Bank Book'\">\r\n            <label>Division Selection</label>\r\n            <select class=\"form-control\" [(ngModel)]=\"_reportFilterService.ReportFilterObj.DIV\" #division\r\n              (change)=\"divisionChanged()\">\r\n              <option value=\"%\" selected>ALL</option>\r\n              <option *ngFor=\"let divs of divisionList;let i=index\" value=\"{{divs.INITIAL}}\">{{divs.NAME}}</option>\r\n            </select>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-md-12\" >\r\n            <fieldset *ngIf=\"(reportType=='Ledger Voucher' && _reportFilterService.ReportFilterObj.ledgerType=='account') || reportType=='Cash Book'||reportType=='Bank Book'\">\r\n              <legend style=\"width: 28%\"> Account</legend>\r\n              <table>\r\n                <tr>\r\n                  <td><label class=\"smallBoldLabel\">ACCODE</label></td>\r\n                  <td><label class=\"smallBoldLabel\">ACNAME</label></td>\r\n                </tr>\r\n                <tr>\r\n                  <td>\r\n                    <label class=\"smallBoldLabel\">\r\n                      <input class=\"form-control\" tabindex=\"2\" type=\"text\" style=\"height:26px;width: 85px !important;\"\r\n                        (keydown.enter)=\"accodeChanged($event.target.value)\"\r\n                        [(ngModel)]=\"_reportFilterService.ReportFilterObj.ACCODE\">\r\n                    </label>\r\n                  </td>\r\n                  <td>\r\n                    <div>\r\n                      <label class=\"smallBoldLabel\">\r\n                        <input autocomplete=\"off\" class=\"form-control\" tabindex=\"2\" ngui-auto-complete [source]=\"dropListItem.bind(this)\"\r\n                          max-num-list=\"25\" [(ngModel)]=\"_reportFilterService.ReportFilterObj.ACCNAME\"\r\n                          list-formatter=\"ACNAME\" style=\"height:26px; width: 300px !important\"\r\n                          (ngModelChange)=\"itemChanged($event)\" name=\"AcName\" display-property-name=\"ACNAME\">\r\n                      </label>\r\n                    </div>\r\n                  </td>\r\n                </tr>\r\n              </table>\r\n            </fieldset> -->\r\n\r\n<!-- <fieldset *ngIf=\"(reportType=='Ledger Voucher' && _reportFilterService.ReportFilterObj.ledgerType=='group')\">\r\n                <legend style=\"width: 15%\"> Group</legend>\r\n                <table>\r\n                  <tr>\r\n                    <td><label class=\"smallBoldLabel\">ACCODE</label></td>\r\n                    <td><label class=\"smallBoldLabel\">ACNAME</label></td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>\r\n                      <label class=\"smallBoldLabel\">\r\n                        <input class=\"form-control\" readonly autocomplete=\"off\" type=\"text\" name=\"accode\" [(ngModel)]=\"_reportFilterService.ReportFilterObj.ACCODE\">\r\n                      </label>\r\n                    </td>\r\n                    <td>\r\n                      <div>\r\n                        <label class=\"smallBoldLabel\">\r\n                          <input (keydown)=\"preventInput($event)\" class=\"form-control\" autocomplete=\"off\" (keydown.enter)=\"onGroupEntered()\"  [(ngModel)]=\"_reportFilterService.ReportFilterObj.ACCNAME\" name=\"AcName\">\r\n                        </label>\r\n                      </div>\r\n                    </td>\r\n                  </tr>\r\n                </table>\r\n            </fieldset> -->\r\n<!-- </div>\r\n          <div *ngIf=\"reportType=='Ledger Voucher'\" class=\"col-md-12\">\r\n            <div class=\"checkbox\">\r\n              <label>\r\n                <input type=\"checkbox\" name=\"tc\" [(ngModel)]=\"_reportFilterService.ReportFilterObj.summaryreport\">\r\n                Is Summary?\r\n              </label>\r\n            </div>\r\n          </div> -->\r\n<!-- <div class=\"col-md-12\" *ngIf=\"reportType=='Voucher Register' || reportType=='Day Book'\">\r\n            <div class=\"col-md-6\">\r\n              <label>VoucherType Selection</label>\r\n              <select class=\"form-control\" #voucherType (change)=\"voucherTypeChanged()\">\r\n                <option value=\"%\" selected>ALL</option>\r\n                <option *ngFor=\"let vch of vouchertypeList;let i=index\" value=\"{{vch.VOUCHER_ID}}\">{{vch.vOUCHER_NAME}}\r\n                </option>\r\n              </select>\r\n            </div>\r\n            <div class=\"col-md-6\">\r\n              <label>Show Narration</label>\r\n              <select #showNarration class=\"form-control\" #voucherType (change)=\"showNarrationChanged()\">\r\n                <option value=1 selected>Yes</option>\r\n                <option value=0>No</option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n          <div *ngIf=\"reportType=='TBL'\" class=\"col-md-12\">\r\n            <div class=\"col-md-7\" style=\"padding-right:0px;padding-left:0px\">\r\n              <div class=\"col-md-12 checkbox\" style=\"padding-top:5px\">\r\n                <label>\r\n                  <input type=\"checkbox\" [(ngModel)]=\"_reportFilterService.ReportFilterObj.showClosingBalance\">Show\r\n                  Closing Balance\r\n                </label>\r\n              </div>\r\n              <div class=\"col-md-12 checkbox\" style=\"padding-top:5px\">\r\n                <label>\r\n                  <input type=\"checkbox\" [(ngModel)]=\"_reportFilterService.ReportFilterObj.showOpeningBalance\">Show\r\n                  Opening Balance\r\n                </label>\r\n              </div>\r\n              <div class=\"col-md-12 checkbox\" style=\"padding-top:5px\">\r\n                <label>\r\n                  <input type=\"checkbox\" [(ngModel)]=\"_reportFilterService.ReportFilterObj.showTransaction\">Show\r\n                  Transaction\r\n                </label>\r\n              </div>\r\n\r\n              <fieldset>\r\n                <legend style=\"font-size:11px;font-weight: bold; width:auto\" >Report Option </legend>\r\n                <div class=\"col-md-12 checkbox\" style=\"padding-top:5px\">\r\n                  <label>\r\n                    <input type=\"checkbox\" [(ngModel)]=\"_reportFilterService.ReportFilterObj.showPartylistInTrialBalance\">Show Party List In Trial Balance \r\n                    \r\n                  </label>\r\n                </div>       \r\n                <div class=\"col-md-12 checkbox\" style=\"padding-top:5px\">\r\n                  <label>\r\n                    <input type=\"checkbox\" [(ngModel)]=\"_reportFilterService.ReportFilterObj.showSubLedgerInTrialBalance\">Show Sub Ledger In Trail Balance\r\n                    \r\n                  </label>\r\n                </div>       \r\n                  <div class=\"col-md-12 checkbox\"  style=\"padding-top:5px\">\r\n                    <label>\r\n                      <input type=\"checkbox\" [(ngModel)]=\"_reportFilterService.ReportFilterObj.showClosingStockValueInTrialBalance\">Show Closing Stock Value On Trail B/L                  \r\n                    </label>\r\n                  </div>\r\n                  <div class=\"col-md-12 checkbox\"  style=\"padding-top:5px\">\r\n                    <label>\r\n                      <input type=\"checkbox\" [(ngModel)]=\"_reportFilterService.ReportFilterObj.showOpeningTrialBalanceOnly\">Show Opening Trail Balance Only                  \r\n                    </label>\r\n                  </div>\r\n  \r\n              </fieldset>\r\n        \r\n                <div class=\"col-md-12 checkbox\" *ngIf=\"reportType=='TBL'\" style=\"padding-top:5px\">\r\n                  <label>\r\n                    <input type=\"checkbox\" [(ngModel)]=\"_reportFilterService.ReportFilterObj.isZeroBalance\">Show\r\n                    Zero B/L A/C in Trial\r\n                  </label>\r\n                </div>\r\n              \r\n            </div>\r\n            <div class=\"col-md-5\" style=\"padding-right:0px;padding-left:0px\">\r\n              <div class=\"col-md-12\" style=\"padding-top:5px;padding-left:0px\">\r\n                <fieldset>\r\n                  <div class=\"radio\">\r\n                    <label><input type=\"radio\" name=\"summary\" [value]=true\r\n                        [(ngModel)]=\"_reportFilterService.ReportFilterObj.isSummary\"\r\n                        [disabled]=\"_reportFilterService.ReportFilterObj.isLedgerWise\"\r\n                        (change)=\"_reportFilterService.ReportFilterObj.showAllLevel=false;queryAndLoadData(_reportFilterService.ReportFilterObj.tblDataStore)\">\r\n                      Summary\r\n                      Report &nbsp;[F2]</label>\r\n                  </div>\r\n                  <div class=\"radio\">\r\n                    <label>\r\n                      <input type=\"radio\" name=\"summary\" [value]=false\r\n                        [(ngModel)]=\"_reportFilterService.ReportFilterObj.isSummary\"\r\n                        [disabled]=\"_reportFilterService.ReportFilterObj.isLedgerWise\"\r\n                        (change)=\"queryAndLoadData(_reportFilterService.ReportFilterObj.tblDataStore)\">\r\n                      Detail Report &nbsp; [F3]\r\n                    </label>\r\n\r\n\r\n                  </div>\r\n\r\n                  <div class=\"checkbox\">\r\n                    <label>\r\n                      <input\r\n                        [disabled]=\"_reportFilterService.ReportFilterObj.isLedgerWise || _reportFilterService.ReportFilterObj.isSummary\"\r\n                        type=\"checkbox\" [(ngModel)]=\"_reportFilterService.ReportFilterObj.showAllLevel \"\r\n                        (change)=\"queryAndLoadData(_reportFilterService.ReportFilterObj.tblDataStore)\">Show all Level\r\n                    </label>\r\n                  </div>\r\n\r\n                </fieldset>\r\n              </div>\r\n\r\n              <div class=\"col-md-12\" style=\"padding-top:5px;padding-left:0px\">\r\n                <fieldset>\r\n                  <div class=\"radio\">\r\n                    <label>\r\n                      <input type=\"radio\" name=\"groupWise\" [value]=false\r\n                        [(ngModel)]=\"_reportFilterService.ReportFilterObj.isLedgerWise\"\r\n                        (change)=\"queryAndLoadData(_reportFilterService.ReportFilterObj.tblDataStore)\">\r\n                      Groupwise &nbsp; [F6]\r\n                    </label>\r\n                  </div>\r\n                  <div class=\"radio\">\r\n                    <label>\r\n                      <input type=\"radio\" name=\"groupWise\" [value]=true\r\n                        [(ngModel)]=\"_reportFilterService.ReportFilterObj.isLedgerWise\"\r\n                        (change)=\"queryAndLoadData(_reportFilterService.ReportFilterObj.tblDataStore)\">\r\n                      LedgerWise &nbsp; [F7]\r\n\r\n                    </label>\r\n                  </div>\r\n                </fieldset>\r\n              </div>\r\n\r\n            </div>\r\n          </div>\r\n\r\n          <div *ngIf=\"reportType=='BS' || reportType=='PL'\" class=\"col-md-12\">\r\n            <div class=\"col-md-12\">\r\n              <fieldset>\r\n                <legend style=\"font-size: 14px !important;width:30% !important;margin-bottom:10px !important\">Stock\r\n                  Evaluation</legend>\r\n                <div class=\"col-md-12\" style=\"margin-top:10px; \">\r\n                  <div class=\"opening\">\r\n                    <div class=\"col-md-3\" style=\"padding: 0px;\">\r\n                      <label style=\"padding-top:5px\">Opening :</label>\r\n                    </div>\r\n                    <div class=\"col-md-9\" style=\"padding: 0px;\">\r\n                      <input type=\"text\" OnlyNumber=true class=\"form-control\"\r\n                        [readonly]=\"_reportFilterService.ReportFilterObj.stockCalcAuto\"\r\n                        [(ngModel)]=_reportFilterService.ReportFilterObj.openingStock>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div class=\"col-md-12\" style=\"margin-top:10px; \">\r\n                  <div class=\"closing\">\r\n                    <div class=\"col-md-3\" style=\"padding: 0px;\">\r\n                      <label style=\"padding-top:5px\">Closing :</label>\r\n                    </div>\r\n                    <div class=\"col-md-9\" style=\"padding: 0px;\">\r\n                      <input type=\"text\" OnlyNumber=true class=\"form-control\"\r\n                        [readonly]=\"_reportFilterService.ReportFilterObj.stockCalcAuto\"\r\n                        [(ngModel)]=_reportFilterService.ReportFilterObj.closingStock>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                [disabled]=\"!_reportFilterService.ReportFilterObj.stockCalcAuto\"\r\n                <!-- <div class=\"col-md-12\" style=\"margin-top:10px; \">\r\n                  <div class=\"pl-action\">\r\n                    <div class=\"cal-btn col-md-4\" style=\"padding: 0px;\">\r\n                      <button  class=\"btn btn-info\"\r\n                        (click)=\"calcStock()\">Calculate</button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </fieldset>\r\n            </div>\r\n          </div> -->\r\n\r\n<!-- <div *ngIf=\"reportType=='BS'\" class=\"col-md-12\">\r\n            <div class=\"col-md-12\">\r\n            <fieldset style=\"margin-top: 20px;\">\r\n              <legend style=\"font-size: 14px !important;width:30% !important;margin-bottom:10px !important\" >Report Option </legend>\r\n              <div class=\"col-md-12 checkbox\" style=\"padding-top:5px\">\r\n                <label>\r\n                  <input type=\"checkbox\" [(ngModel)]=\"_reportFilterService.ReportFilterObj.ShowSubLedgerBS\" (change)=\"\r\n                  $event.target.checked\r\n                    ? (_reportFilterService.ReportFilterObj.ShowSubLedgerBS = 1)\r\n                    : (_reportFilterService.ReportFilterObj.ShowSubLedgerBS = 0)\">&nbsp;&nbsp;Show Sub Ledger \r\n                </label>\r\n              </div>       \r\n              <div class=\"col-md-12 checkbox\" style=\"padding-top:5px\">\r\n                <label>\r\n                  <input type=\"checkbox\" [(ngModel)]=\"_reportFilterService.ReportFilterObj.SHOWDEBTORSCREDITORSBS\" (change)=\"\r\n                  $event.target.checked\r\n                    ? (_reportFilterService.ReportFilterObj.SHOWDEBTORSCREDITORSBS = 1)\r\n                    : (_reportFilterService.ReportFilterObj.SHOWDEBTORSCREDITORSBS = 0)\">&nbsp;&nbsp;Show Debtors / Credtors List\r\n                </label>\r\n              </div>     \r\n            </fieldset>\r\n          </div>\r\n          </div>\r\n\r\n          <div *ngIf=\"reportType=='PL'\" class=\"col-md-12\">\r\n            <div class=\"col-md-12\">\r\n            <fieldset style=\"margin-top: 20px;\">\r\n              <legend style=\"font-size: 14px !important;width:30% !important;margin-bottom:10px !important\" >Report Option </legend>\r\n              <div class=\"col-md-12 checkbox\" style=\"padding-top:5px\">\r\n                <label>\r\n                  <input type=\"checkbox\" [(ngModel)]=\"_reportFilterService.ReportFilterObj.ShowSubLedgerPL\" (change)=\"\r\n                  $event.target.checked\r\n                    ? (_reportFilterService.ReportFilterObj.ShowSubLedgerPL = 1)\r\n                    : (_reportFilterService.ReportFilterObj.ShowSubLedgerPL = 0)\">&nbsp;&nbsp;Show Sub Ledger \r\n                </label>\r\n              </div>          \r\n            </fieldset>\r\n          </div>\r\n          </div> -->\r\n<!-- </div>\r\n      </div>  -->\r\n\r\n<!-- <hr style=\"margin-bottom: 0px !important;margin-top: 5px !important\">\r\n      <div class=\"clearfix\" style=\"padding: 10px;\">\r\n        <button class=\"btn btn-info pull-right\" style=\"margin-left: 10px;\" (click)=\"popupClose()\">Cancel</button>\r\n        <button class=\"btn btn-info pull-right\" (click)=\"applyClicked()\">Apply</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div> -->\r\n\r\n<div *ngIf=\"reportType=='TBL'\" [class.modal-sticky-hide]=\"!isActive\" style=\"display : block; padding: 0px;position: absolute;\r\n                            top: 20% ;\r\n                            right: 15%;\r\n                            height: auto;\r\n                            z-index: 9999999;\r\n                            max-height: 500px;\r\n                            overflow-y: auto;\r\n                            width: 62%;\">\r\n  <!-- Modal content -->\r\n  <div class=\"modal-content modal-content-main-area\">\r\n    <div style=\"background-color : #ffffff; padding :1%; height : auto;  \">\r\n      <div class=\"row\">\r\n        <div class=\"modal-header\" style=\"width : 97%; margin : 0px auto;\">\r\n          <button type=\"button\" class=\"close\" data-dismiss=\"modal\" (click)=\"popupClose()\">&times;</button>\r\n          <h4 class=\"modal-title\">Trial Balance Report</h4>\r\n        </div>\r\n        <div class=\"col-md-12\" style=\"padding-top: 2%;\">\r\n          <!-- Left Column -->\r\n          <div class=\"col-md-6\">\r\n\r\n            <fieldset>\r\n              <legend style=\"font-size:11px;font-weight: bold; width:auto\">Date Range Selection :</legend>\r\n              <table>\r\n                <tr>\r\n                  <td class=\"td-class\"><label class=\"smallBoldLabel\">From:(AD)</label></td>\r\n                  <td class=\"td-class\"><label class=\"smallBoldLabel\">To:(AD)</label></td>\r\n                </tr>\r\n                <tr>\r\n                  <td class=\"td-class\">\r\n                      <input type=\"date\" class=\"date-input form-control\" placeholder=\"Year Start Date\"\r\n                        [(ngModel)]=\"_reportFilterService.ReportFilterObj.DATE1\"\r\n                        (change)=\"changeEntryDate($event.target.value,'AD')\" max=\"{{_masterRepo.date1 | date:'yyyy-MM-dd'}}\" min=\"{{_masterRepo.date2 | date:'yyyy-MM-dd'}}\">\r\n                  </td>\r\n                  <td class=\"td-class\">\r\n                      <input type=\"date\" class=\"date-input form-control\" placeholder=\"Year Start Date\"\r\n                        [(ngModel)]=\"_reportFilterService.ReportFilterObj.DATE2\"\r\n                        (change)=\"changeEndDate($event.target.value,'AD')\" max=\"{{_masterRepo.date1 | date:'yyyy-MM-dd'}}\" min=\"{{_masterRepo.date2 | date:'yyyy-MM-dd'}}\">\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <td>\r\n                       <input id=\"nepaliDate\"\r\n                       style=\"text-align:center;\"\r\n                       class=\"nepali-calendar ndp-nepali-calendar date-input form-control\"\r\n                        type=\"text\" [(ngModel)]=\"_reportFilterService.ReportFilterObj.BSDATE1\"\r\n                        (change)=\"changeEntryDate($event.target.value,'BS')\" placeholder=\"yyyy-mm-dd\" />\r\n\r\n                  </td>\r\n                  <td>\r\n                      <input id=\"nepaliDate\" style=\"text-align:center;\"\r\n                      class=\"nepali-calendar ndp-nepali-calendar date-input form-control\" type=\"text\"\r\n                        [(ngModel)]=\"_reportFilterService.ReportFilterObj.BSDATE2\"\r\n                        (change)=\"changeEndDate($event.target.value,'BS')\" placeholder=\"yyyy-mm-dd\" />\r\n                  </td>\r\n                </tr>\r\n              </table>\r\n            </fieldset>\r\n\r\n            <fieldset>\r\n              <legend style=\"font-size:11px;font-weight: bold; width:auto\">Division Selection :</legend>\r\n              <select  [(ngModel)]=\"_reportFilterService.ReportFilterObj.DIV\" style=\"height: 30px !important;\" \r\n              class=\"form-control input-text\">\r\n              <option value=\"%\" *ngIf=\"_masterRepo.userSetting.userwisedivision==0 ||  _masterRepo.showAll\">ALL</option>\r\n                <option *ngFor=\"let div of divisionList\" value=\"{{ div.INITIAL }}\">\r\n                  {{ div.NAME }}\r\n                </option>\r\n              </select>\r\n            </fieldset>\r\n\r\n            <fieldset>\r\n              <legend style=\"font-size:11px;font-weight: bold; width:auto\">Cost Center :</legend>\r\n              <select [(ngModel)]=\"_reportFilterService.ReportFilterObj.TBL_CostCenter\"\r\n              style=\"height: 30px !important;\" \r\n              class=\"form-control input-text\">\r\n                  <option value=\"%\"> </option>\r\n                  <option *ngFor=\"let i of CostcenterList\" value={{i.CCID}}>{{i.COSTCENTERNAME}}\r\n                  </option>\r\n              </select>\r\n          </fieldset>\r\n\r\n\r\n          </div>\r\n          <!-- Right Column -->\r\n          <div class=\"col-md-6\">\r\n            <div class=\"col-md-12\">\r\n              <div class=\"col-md-5\">\r\n                <fieldset style=\"padding-bottom: 5px; width: 150%; margin-left: -40px;\">\r\n                  <legend style=\"font-size:11px;font-weight: bold; width:auto\">Report Mode :</legend>\r\n                  <label class=\"smallBoldLabel\"><input type=\"radio\" name=\"summary\" [value]=true\r\n                      [(ngModel)]=\"_reportFilterService.ReportFilterObj.isSummary\"\r\n                      [disabled]=\"_reportFilterService.ReportFilterObj.isLedgerWise\"\r\n                      (change)=\"_reportFilterService.ReportFilterObj.showAllLevel=false;  \">&nbsp;Summary\r\n                    Report\r\n                    [F2]</label>\r\n                  <label class=\"smallBoldLabel\"><input type=\"radio\" name=\"summary\" [value]=false\r\n                      [(ngModel)]=\"_reportFilterService.ReportFilterObj.isSummary\"\r\n                      [disabled]=\"_reportFilterService.ReportFilterObj.isLedgerWise\"\r\n                      >&nbsp;Detail Report\r\n                    [F3]\r\n                  </label>\r\n                  <label class=\"smallBoldLabel\" style=\"padding-left: 15px;\"><input\r\n                      [disabled]=\"_reportFilterService.ReportFilterObj.isLedgerWise || _reportFilterService.ReportFilterObj.isSummary\"\r\n                      type=\"checkbox\" [(ngModel)]=\"_reportFilterService.ReportFilterObj.showAllLevel \"\r\n                      >&nbsp;Show\r\n                    All Level [F4]\r\n                  </label>\r\n\r\n                </fieldset>\r\n              </div>\r\n\r\n              <div class=\"col-md-7\">\r\n                <fieldset style=\"padding-bottom: 5px; margin-left: 17px; width: 100%; padding-bottom: 28px;\">\r\n                  <legend style=\"font-size:11px;font-weight: bold; width:auto\">Report Format :</legend>\r\n                  <label class=\"smallBoldLabel\"><input type=\"radio\" name=\"groupWise\" [value]=false\r\n                      [(ngModel)]=\"_reportFilterService.ReportFilterObj.isLedgerWise\"\r\n                      >&nbsp;Group Wise\r\n                    Format\r\n                    [F6]</label>\r\n                  <label class=\"smallBoldLabel\" style=\"clear : both;\"><input type=\"radio\" name=\"groupWise\" [value]=true\r\n                      [(ngModel)]=\"_reportFilterService.ReportFilterObj.isLedgerWise\"\r\n                      >&nbsp;Ledger Wise\r\n                    Format [F7]\r\n                  </label>\r\n\r\n                </fieldset>\r\n              </div>\r\n\r\n            </div>\r\n\r\n            <div class=\"col-md-12\">\r\n              <fieldset style=\"padding-bottom: 5px; width: 107%; margin-left: -26px;margin-bottom: 10px;\">\r\n                <legend style=\"font-size:11px;font-weight: bold; width:auto\">Report Options :</legend>\r\n                <label class=\"smallBoldLabel\"><input type=\"checkbox\"\r\n                    [(ngModel)]=\"_reportFilterService.ReportFilterObj.SHOWOPENINGTRIALONLY\"   >&nbsp;Show Opening Trial\r\n                  Balance Report\r\n                  Only</label>\r\n                <label class=\"smallBoldLabel\"><input type=\"checkbox\"\r\n                    [(ngModel)]=\"_reportFilterService.ReportFilterObj.showPartylistInTrialBalance\"   >&nbsp;Show\r\n                  Debtors/Creditors Party List\r\n                </label>\r\n                <label class=\"smallBoldLabel\"><input type=\"checkbox\"\r\n                    [(ngModel)]=\"_reportFilterService.ReportFilterObj.showSubLedgerInTrialBalance\"   >&nbsp;Show Sub Ledger\r\n                  In Trial Balance\r\n                </label>\r\n                <label class=\"smallBoldLabel\"><input type=\"checkbox\"\r\n                    [(ngModel)]=\"_reportFilterService.ReportFilterObj.showClosingStockValueInTrialBalance\"   >&nbsp;Show\r\n                  Closing Stock Value In Trial\r\n                  Balance\r\n                </label>\r\n                <label class=\"smallBoldLabel\"><input type=\"checkbox\"\r\n                    [(ngModel)]=\"_reportFilterService.ReportFilterObj.isZeroBalance\"   >&nbsp;Show Zero B/L A/C In Report\r\n                </label>\r\n\r\n              </fieldset>\r\n            </div>\r\n\r\n        \r\n\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"modal-footer\" style=\"width : 97%; margin : 0px auto;\">\r\n          <button class=\"btn btn-info confirm-btn\" type=\"button\" (click)=applyClicked()>RUN</button>\r\n          <button type=\"button\" (click)=\"popupClose()\" title=\"Cancel\" class=\"btn btn-info\">Close</button>\r\n        </div>\r\n\r\n      </div>\r\n\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div *ngIf=\"reportType=='PL'\" [class.modal-sticky-hide]=\"!isActive\" style=\"display : block; padding: 0px;position: absolute;\r\n                            top: 20% ;\r\n                            right: 20%;\r\n                            height: auto;\r\n                            z-index: 5;\r\n                            max-height: 500px;\r\n                            overflow-y: auto;\r\n                            width: 58%;\">\r\n  <!-- Modal content -->\r\n  <div class=\"modal-content modal-content-main-area\">\r\n    <div style=\"background-color : #ffffff; padding :1%; height : auto;  \">\r\n      <div class=\"row\">\r\n        <div class=\"modal-header\" style=\"width : 97%; margin : 0px auto;\">\r\n          <button type=\"button\" class=\"close\" data-dismiss=\"modal\" (click)=\"popupClose()\">&times;</button>\r\n          <h4 class=\"modal-title\">Profit & Loss A/C</h4>\r\n        </div>\r\n        <div class=\"col-md-12\" style=\"padding-top: 2%;\">\r\n          <!-- Left Column -->\r\n          <div class=\"col-md-6\">\r\n\r\n            <fieldset>\r\n              <legend style=\"font-size:11px;font-weight: bold; width:auto\">Date Range Selection :</legend>\r\n              <table>\r\n                <tr>\r\n                  <td class=\"td-class\"><label class=\"smallBoldLabel\">From:(AD)</label></td>\r\n                  <td class=\"td-class\"><label class=\"smallBoldLabel\">To:(AD)</label></td>\r\n                </tr>\r\n                <tr>\r\n                  <td class=\"td-class\">\r\n                      <input type=\"date\" class=\"date-input form-control\"\r\n                        placeholder=\"Year Start Date\" [(ngModel)]=\"_reportFilterService.ReportFilterObj.DATE1\"\r\n                        (change)=\"changeEntryDate($event.target.value,'AD')\"  max=\"{{_masterRepo.date1 | date:'yyyy-MM-dd'}}\" min=\"{{_masterRepo.date2 | date:'yyyy-MM-dd'}}\">\r\n                  </td>\r\n                  <td class=\"td-class\">\r\n                      <input type=\"date\" class=\"date-input form-control\"\r\n                        placeholder=\"Year Start Date\" [(ngModel)]=\"_reportFilterService.ReportFilterObj.DATE2\"\r\n                        (change)=\"changeEndDate($event.target.value,'AD')\"  max=\"{{_masterRepo.date1 | date:'yyyy-MM-dd'}}\" min=\"{{_masterRepo.date2 | date:'yyyy-MM-dd'}}\">\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <td class=\"td-class\">\r\n                    <nepali-date-picker name=\"nepaliDateFrom\" [id]=\"'nepaliDatefrom'\"\r\n                    (change)=\"changeEntryDate($event.detail.value,'BS')\"\r\n                    [label]=\"'From'\"\r\n                    [(ngModel)]=\"_reportFilterService.ReportFilterObj.BSDATE1\">\r\n                    </nepali-date-picker>\r\n                      <!-- <input id=\"nepaliDate\"\r\n                      style=\"text-align:center;\"\r\n                      class=\"nepali-calendar ndp-nepali-calendar date-input form-control\" type=\"text\"\r\n                        [(ngModel)]=\"_reportFilterService.ReportFilterObj.BSDATE1\"\r\n                        (change)=\"changeEntryDate($event.target.value,'BS')\" placeholder=\"yyyy-mm-dd\" /> -->\r\n                  </td>\r\n                  <td class=\"td-class\">\r\n                    <nepali-date-picker name=\"nepaliDateFrom\" [id]=\"'nepaliDateTo'\"\r\n                      (change)=\"changeEndDate($event.detail.value,'BS')\"\r\n                      [label]=\"'To'\"\r\n                      [(ngModel)]=\"_reportFilterService.ReportFilterObj.BSDATE2\">\r\n                      </nepali-date-picker>\r\n                      <!-- <input id=\"nepaliDate\" style=\"text-align:center;\"\r\n                      class=\"nepali-calendar ndp-nepali-calendar date-input form-control\" type=\"text\"\r\n                        [(ngModel)]=\"_reportFilterService.ReportFilterObj.BSDATE2\"\r\n                        (change)=\"changeEndDate($event.target.value,'BS')\" placeholder=\"yyyy-mm-dd\" /> -->\r\n                  </td>\r\n                </tr>\r\n              </table>\r\n            </fieldset>\r\n\r\n            <fieldset style=\"margin-top: 10px;\">\r\n              <legend style=\"font-size:11px;font-weight: bold; width:auto\">Stock\r\n                Evaluation :</legend>\r\n              <div class=\"col-md-12\" style=\"margin-top:5px;\">\r\n                <div class=\"opening\">\r\n                  <div class=\"col-md-4\" style=\"padding: 0px;\">\r\n                    <label class=\"smallBoldLabel\" style=\"margin-left: 0px;padding-top:5px;margin-top: -10px;\">Opening Stock:</label>\r\n                  </div>\r\n                  <div class=\"col-md-8\" style=\"padding: 0px;\">\r\n                    <input type=\"text\" OnlyNumber=true class=\"form-control\" style=\"height: 25px;margin-top: -10px;\"\r\n                      [readonly]=\"_reportFilterService.ReportFilterObj.stockCalcAuto\"\r\n                      [(ngModel)]=_reportFilterService.ReportFilterObj.openingStock>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-md-12\" style=\"margin-top:5px;\">\r\n                <div class=\"closing\">\r\n                  <div class=\"col-md-4\" style=\"padding: 0px;\">\r\n                    <label class=\"smallBoldLabel\" style=\"margin-left: 0px; padding-top:5px;\">Closing Stock:</label>\r\n                  </div>\r\n                  <div class=\"col-md-8\" style=\"padding: 0px;\">\r\n                    <input type=\"text\" OnlyNumber=true class=\"form-control\" style=\"height: 25px;\"\r\n                      [readonly]=\"_reportFilterService.ReportFilterObj.stockCalcAuto\"\r\n                      [(ngModel)]=_reportFilterService.ReportFilterObj.closingStock>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-md-12\" style=\"margin-top:10px; \">\r\n                <div class=\"pl-action\">\r\n                  <div class=\"cal-btn col-md-4\" style=\"padding: 0px; float:right;\">\r\n                    <button class=\"btn btn-info\" style=\" float:right;\" (click)=\"calcStock()\">Calculate</button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </fieldset>\r\n\r\n\r\n          </div>\r\n          <!-- Right Column -->\r\n          <div class=\"col-md-6\">\r\n\r\n            <fieldset *ngIf=\"userSetting.IS_NESTLE == 1\">\r\n              <legend style=\"font-size:11px;font-weight: bold; width:auto\">Company Selection :</legend>\r\n              <select [(ngModel)]=\"_reportFilterService.ReportFilterObj.COMPANYTYPE\"\r\n              style=\"height: 30px !important;\" \r\n              class=\"form-control input-text\">\r\n                <option value=\"DMS\">DMS</option>\r\n                <option value=\"NONDMS\">NON DMS</option>\r\n              </select>\r\n            </fieldset>\r\n\r\n            <fieldset>\r\n              <legend style=\"font-size:11px;font-weight: bold; width:auto\">Division Selection :</legend>\r\n              <select [(ngModel)]=\"_reportFilterService.ReportFilterObj.DIV\"\r\n              style=\"height: 30px !important;\" \r\n              class=\"form-control input-text\">\r\n              <option value=\"%\" *ngIf=\"_masterRepo.userSetting.userwisedivision==0 ||  _masterRepo.showAll\">ALL</option>\r\n                <option *ngFor=\"let div of divisionList\" value=\"{{ div.INITIAL }}\">\r\n                  {{ div.NAME }}\r\n                </option>\r\n              </select>\r\n            </fieldset>\r\n\r\n            <div class=\"checkbox\" style=\"padding-top:10px\">\r\n              <label class=\"smallBoldLabel\" style=\"margin-left: 0px;\">\r\n                <input type=\"checkbox\" [(ngModel)]=\"_reportFilterService.ReportFilterObj.ShowSubLedgerPL\" (change)=\"\r\n                $event.target.checked\r\n                  ? (_reportFilterService.ReportFilterObj.ShowSubLedgerPL = 1)\r\n                  : (_reportFilterService.ReportFilterObj.ShowSubLedgerPL = 0)\">&nbsp;&nbsp;Show Sub Ledger In Profit &\r\n                Loss A/C\r\n              </label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"modal-footer\" style=\"width : 97%; margin : 0px auto;\">\r\n          <button class=\"btn btn-info confirm-btn\" type=\"button\" (click)=applyClicked()>RUN</button>\r\n          <button type=\"button\" (click)=\"popupClose()\" title=\"Cancel\" class=\"btn btn-info\">Close</button>\r\n        </div>\r\n\r\n      </div>\r\n\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div *ngIf=\"reportType=='BS'\" [class.modal-sticky-hide]=\"!isActive\" style=\"display : block; padding: 0px;position: absolute;\r\n                            top: 20% ;\r\n                            right: 20%;\r\n                            height: auto;\r\n                            z-index: 5;\r\n                            max-height: 500px;\r\n                            overflow-y: auto;\r\n                            width: 58%;\">\r\n  <!-- Modal content -->\r\n  <div class=\"modal-content modal-content-main-area\">\r\n    <div style=\"background-color : #ffffff; padding :1%; height : auto;  \">\r\n      <div class=\"row\">\r\n        <div class=\"modal-header\" style=\"width : 97%; margin : 0px auto;\">\r\n          <button type=\"button\" class=\"close\" data-dismiss=\"modal\" (click)=\"popupClose()\">&times;</button>\r\n          <h4 class=\"modal-title\">Balance Sheet</h4>\r\n        </div>\r\n        <div class=\"col-md-12\" style=\"padding-top: 2%;\">\r\n          <!-- Left Column -->\r\n          <div class=\"col-md-6\">\r\n\r\n            <fieldset>\r\n              <legend style=\"font-size:11px;font-weight: bold; width:auto\">Date Range Selection :</legend>\r\n              <table>\r\n                <tr>\r\n                  <td class=\"td-class\"><label class=\"smallBoldLabel\">From:(AD)</label></td>\r\n                  <td class=\"td-class\"><label class=\"smallBoldLabel\">To:(AD)</label></td>\r\n                </tr>\r\n                <tr>\r\n                  <td class=\"td-class\">\r\n                      <input type=\"date\" class=\"date-input form-control\"\r\n                        placeholder=\"Year Start Date\" [(ngModel)]=\"_reportFilterService.ReportFilterObj.DATE1\"\r\n                        (change)=\"changeEntryDate($event.target.value,'AD')\" max=\"{{_masterRepo.date1 | date:'yyyy-MM-dd'}}\" min=\"{{_masterRepo.date2 | date:'yyyy-MM-dd'}}\">\r\n                  </td>\r\n                  <td class=\"td-class\">\r\n                      <input type=\"date\" class=\"date-input form-control\"\r\n                        placeholder=\"Year Start Date\" [(ngModel)]=\"_reportFilterService.ReportFilterObj.DATE2\"\r\n                        (change)=\"changeEndDate($event.target.value,'AD')\" max=\"{{_masterRepo.date1 | date:'yyyy-MM-dd'}}\" min=\"{{_masterRepo.date2 | date:'yyyy-MM-dd'}}\">\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <td class=\"td-class\">\r\n                    <nepali-date-picker name=\"nepaliDateFrom\" [id]=\"'nepaliDatefrom'\"\r\n                    (change)=\"changeEntryDate($event.detail.value,'BS')\"\r\n                    [label]=\"'From'\"\r\n                    [(ngModel)]=\"_reportFilterService.ReportFilterObj.BSDATE1\">\r\n                    </nepali-date-picker>\r\n                       <!-- <input id=\"nepaliDate\"\r\n                       style=\"text-align:center;\"\r\n                       class=\"nepali-calendar ndp-nepali-calendar date-input form-control\" type=\"text\"\r\n                        [(ngModel)]=\"_reportFilterService.ReportFilterObj.BSDATE1\"\r\n                        (change)=\"changeEntryDate($event.target.value,'BS')\" placeholder=\"yyyy-mm-dd\" /> -->\r\n                  </td>\r\n                  <td class=\"td-class\">\r\n                    <nepali-date-picker name=\"nepaliDateFrom\" [id]=\"'nepaliDateTo'\"\r\n                    (change)=\"changeEndDate($event.detail.value,'BS')\"\r\n                    [label]=\"'To'\"\r\n                    [(ngModel)]=\"_reportFilterService.ReportFilterObj.BSDATE2\">\r\n                    </nepali-date-picker>\r\n                      <!-- <input id=\"nepaliDate\" style=\"text-align:center;\"\r\n                      class=\"nepali-calendar ndp-nepali-calendar date-input form-control\" type=\"text\"\r\n                        [(ngModel)]=\"_reportFilterService.ReportFilterObj.BSDATE2\"\r\n                        (change)=\"changeEndDate($event.target.value,'BS')\" placeholder=\"yyyy-mm-dd\" /> -->\r\n                  </td>\r\n                </tr>\r\n              </table>\r\n            </fieldset>\r\n\r\n\r\n\r\n            <fieldset style=\"margin-top: 10px;\">\r\n              <legend style=\"font-size:11px;font-weight: bold; width:auto\">Stock\r\n                Evaluation :</legend>\r\n              <div class=\"col-md-12\" style=\"margin-top:5px;\">\r\n                <div class=\"opening\">\r\n                  <div class=\"col-md-4\" style=\"padding: 0px;\">\r\n                    <label class=\"smallBoldLabel\" style=\"margin-left: 0px;padding-top:5px;margin-top: -10px;\">Opening Stock:</label>\r\n                  </div>\r\n                  <div class=\"col-md-8\" style=\"padding: 0px;\">\r\n                    <input type=\"text\" OnlyNumber=true class=\"form-control\" style=\"height: 25px;margin-top: -10px;\"\r\n                      [readonly]=\"_reportFilterService.ReportFilterObj.stockCalcAuto\"\r\n                      [(ngModel)]=_reportFilterService.ReportFilterObj.openingStock>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-md-12\" style=\"margin-top:5px;\">\r\n                <div class=\"closing\">\r\n                  <div class=\"col-md-4\" style=\"padding: 0px;\">\r\n                    <label class=\"smallBoldLabel\" style=\"margin-left: 0px; padding-top:5px;\">Closing Stock:</label>\r\n                  </div>\r\n                  <div class=\"col-md-8\" style=\"padding: 0px;\">\r\n                    <input type=\"text\" OnlyNumber=true class=\"form-control\" style=\"height: 25px;\"\r\n                      [readonly]=\"_reportFilterService.ReportFilterObj.stockCalcAuto\"\r\n                      [(ngModel)]=_reportFilterService.ReportFilterObj.closingStock>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-md-12\" style=\"margin-top:10px; \">\r\n                <div class=\"pl-action\">\r\n                  <div class=\"cal-btn col-md-4\" style=\"padding: 0px; float:right;\">\r\n                    <button class=\"btn btn-info\" style=\" float:right;\" (click)=\"calcStock()\">Calculate</button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </fieldset>\r\n\r\n\r\n          </div>\r\n          <!-- Right Column -->\r\n          <div class=\"col-md-6\">\r\n\r\n            <fieldset *ngIf=\"userSetting.IS_NESTLE == 1\">\r\n              <legend style=\"font-size:11px;font-weight: bold; width:auto\">Company Selection :</legend>\r\n              <select [(ngModel)]=\"_reportFilterService.ReportFilterObj.COMPANYTYPE\"\r\n              style=\"height: 30px !important;\" \r\n              class=\"form-control input-text\">\r\n                <option value=\"DMS\">DMS</option>\r\n                <option value=\"NONDMS\">NON DMS</option>\r\n              </select>\r\n            </fieldset>\r\n            \r\n            <fieldset>\r\n              <legend style=\"font-size:11px;font-weight: bold; width:auto\">Division Selection :</legend>\r\n              <select [(ngModel)]=\"_reportFilterService.ReportFilterObj.DIV\"\r\n              style=\"height: 30px !important;\" \r\n              class=\"form-control input-text\">\r\n              <option value=\"%\" *ngIf=\"_masterRepo.userSetting.userwisedivision==0 ||  _masterRepo.showAll\">ALL</option>\r\n                <option *ngFor=\"let div of divisionList\" value=\"{{ div.INITIAL }}\">\r\n                  {{ div.NAME }}\r\n                </option>\r\n              </select>\r\n            </fieldset>\r\n\r\n            <fieldset style=\"margin-top: 10px;\">\r\n              <legend style=\"font-size:11px;font-weight: bold; width:auto\">Report\r\n                Options :</legend>\r\n              <div class=\"col-md-12 checkbox\" style=\"padding-top:5px\">\r\n                <label class=\"smallBoldLabel\" style=\"margin-left: 0px;\">\r\n                  <input type=\"checkbox\" [(ngModel)]=\"_reportFilterService.ReportFilterObj.ShowSubLedgerBS\" (change)=\"\r\n                  $event.target.checked\r\n                    ? (_reportFilterService.ReportFilterObj.ShowSubLedgerBS = 1)\r\n                    : (_reportFilterService.ReportFilterObj.ShowSubLedgerBS = 0)\">&nbsp;&nbsp;Show Sub Ledger In\r\n                  Balance Sheet\r\n                </label>\r\n              </div>\r\n              <div class=\"col-md-12 checkbox\" style=\"padding-top:5px\">\r\n                <label class=\"smallBoldLabel\" style=\"margin-left: 0px;\">\r\n                  <input type=\"checkbox\" [(ngModel)]=\"_reportFilterService.ReportFilterObj.SHOWDEBTORSCREDITORSBS\"\r\n                    (change)=\"\r\n                  $event.target.checked\r\n                    ? (_reportFilterService.ReportFilterObj.SHOWDEBTORSCREDITORSBS = 1)\r\n                    : (_reportFilterService.ReportFilterObj.SHOWDEBTORSCREDITORSBS = 0)\">&nbsp;&nbsp;Show Debtors /\r\n                  Creditors Party List\r\n                </label>\r\n              </div>\r\n            </fieldset>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"modal-footer\" style=\"width : 97%; margin : 0px auto;\">\r\n          <button class=\"btn btn-info confirm-btn\" type=\"button\" (click)=applyClicked()>RUN</button>\r\n          <button type=\"button\" (click)=\"popupClose()\" title=\"Cancel\" class=\"btn btn-info\">Close</button>\r\n        </div>\r\n\r\n      </div>\r\n\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n\r\n<generic-popup-grid #genericGrid [popupsettings]=\"gridPopupSettings\" (onItemDoubleClick)=\"onItemSelected($event)\">\r\n</generic-popup-grid>"

/***/ }),

/***/ 1303:
/***/ (function(module, exports) {

module.exports = ".table td, .table th{\r\n    padding: 0px !important;\r\n  }\r\n\r\ntbody {\r\n    /* display:block; */\r\n    height:53vh;\r\n    overflow:scroll;\r\n}\r\n\r\nthead, tbody tr {\r\n  display:table;\r\n  width:100%;\r\n  table-layout:fixed;/* even columns width , fix width of table too*/\r\n}\r\n\r\nth{\r\n  font-size: 15px;\r\n  font-weight: bold;\r\n  font-family: Roboto,Arial,sans-serif;\r\n}\r\n\r\ntd{\r\n  font-size: 13px;\r\n  font-family: Roboto,Arial,sans-serif;\r\n\r\n}\r\n\r\n.table tbody tr td{\r\n  line-height: 40px;\r\n}\r\n\r\ninput,select{\r\n    height: 28px;\r\n}\r\n\r\n.form-control{\r\n    font-size: 13px !important;\r\n}\r\n\r\n.date-field{\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n}\r\n\r\n.filter-label{\r\n  width: 100px; \r\n  padding-top: 5px;\r\n}"

/***/ }),

/***/ 1304:
/***/ (function(module, exports) {

module.exports = "<div class=\"sticky-top\">\r\n    <div class=\"clearfix\">\r\n      <div class=\"col-md-4\">\r\n        <!-- <h2 style=\"color: black;\">Bank Reconciliation </h2> -->\r\n        <label style=\"font-family: Segoe UI Light;font-weight: bold;font-size: 20px;padding-left: 5%;padding-top: 1%;width: 100%;\">Multiple Voucher Print (Bulk Print)</label>\r\n      </div>\r\n      <!-- <div class=\"col-md-7\">\r\n        <button style=\"margin: 4px 4px;\" class=\"btn btn-info pull-right\" (click)='SaveRenum()'>\r\n          Update\r\n        </button>\r\n  \r\n      </div> -->\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"main-container\">\r\n      <div class=\"row\" style=\"margin: 0px 15px ; border: 1px solid #e6e6e6; padding: 10px 10px;\">\r\n        <div class=\"col-md-10\">\r\n          <div class=\"row\">\r\n         \r\n            <div class=\"col-md-12\">\r\n                <div class=\"form-group row\">\r\n                    \r\n                  <div class=\"col-md-3\">\r\n                    <div class=\"date-field\">\r\n                      <label class=\"form-control-label filter-label\">Voucher: </label>\r\n                      <select class=\"form-control\" [(ngModel)]=\"voucherPrefix\">\r\n                        <option value=\"\" disabled selected hidden>Select Voucher</option>\r\n                        <option value=\"JV\">Journal Voucher</option>\r\n                        <option value=\"CV\">Contra Voucher</option>\r\n                        <option value=\"PV\">Payment Voucher</option>\r\n                        <option value=\"RV\">Receipt Voucher</option>\r\n        \r\n                    </select>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-md-3\">\r\n                  <div class=\"date-field\">\r\n                    <label class=\"form-control-label filter-label\" style=\"margin-right: 10px;\" for=\"\">From</label>\r\n                    <input class=\"form-control\" type=\"number\" min=\"1\"  [(ngModel)]=\"FROM\" placeholder=\"Enter Voucher No.\">\r\n                  </div>\r\n\r\n                </div>\r\n                <div class=\"col-md-3\">\r\n                  <div class=\"date-field\">\r\n                    <label class=\"form-control-label filter-label\" for=\"\">To</label>\r\n                    <input class=\"form-control\" type=\"number\" min=\"1\" [(ngModel)]=\"TO\" placeholder=\"Enter Voucher No.\">\r\n                  </div>\r\n\r\n                </div>\r\n                <div class=\"col-md-1\">\r\n                  <button [disabled]=\"voucherPrefix == ''\" (click)=\"LoadVoucherWiseList(voucherPrefix)\" class=\"btn btn-info\">LOAD</button>\r\n               </div>\r\n               <div class=\"col-md-1\">\r\n                <button [disabled]=\"masterService.voucherListsForBulkPrint.length==0\" (click)=\"onPrintClicked()\" class=\"btn btn-info\">PRINT</button>\r\n             </div>\r\n             <div class=\"col-md-1\">\r\n              <button (click)=\"onReset()\" class=\"btn btn-info\">RESET</button>\r\n           </div>\r\n                </div>\r\n    \r\n            </div>\r\n    \r\n          </div>\r\n    \r\n          \r\n        </div>\r\n\r\n       <!-- <div class=\"col-md-1\" style=\"margin: 0px 30px;\">\r\n        <button (click)=\"exportTOExcel(voucherLists, 'VoucherList')\" class=\"btn btn-info pull-right\">Export Renumering</button>\r\n     </div> -->\r\n      </div>\r\n\r\n      <div class=\"clearfix\" style=\"margin-top: 5px;\">\r\n        <div class=\"card-header\" style=\"    background: #4472C4;\r\n        color: #ffff;\">\r\n\r\n        <span class=\"col-md-6\">Voucher Lists</span>\r\n\r\n\r\n      </div>\r\n\r\n        <div class=\"row\" style=\"height: 60vh;\">\r\n            <table class=\"table table-striped\" style=\"width: 98%;\">\r\n            <thead>\r\n                <tr style=\"position: sticky; top:0;line-height: 2.4rem; border-bottom: 1px solid #E6E6E6; border-top: 1px solid #E6E6E6;\r\n                background:#C0C0C0;\r\n                color: black;\">\r\n                    <th scope=\"col\" style=\"width: 5%;\" *ngIf=\"masterService.voucherListsForBulkPrint && masterService.voucherListsForBulkPrint.length > 0\"><input (change)=\"onSelectAllClicked()\" class=\"form-check-input\" type=\"checkbox\" [(ngModel)]=\"SelectAll\" style=\"margin-left: 7px;\"> <label for=\"\" style=\" width: 20px; font-size: 16px; font-weight: 600;margin-left: 30px;height: 10px;\">All</label></th>\r\n                    <th scope=\"col\" style=\"width: 5%;\">S.N</th>\r\n                    <th scope=\"col\" style=\"width: 10%;\">TRN DATE</th>\r\n                    <th scope=\"col\" style=\"width: 10%;\">VOUCHER NO</th>\r\n                    <!-- <th scope=\"col\" style=\"width: 10%;\">TRNDATE</th> -->\r\n                    <!-- <th scope=\"col\" style=\"width: 10%;\">TRN_BSDATE</th> -->\r\n                    <th scope=\"col\" style=\"width: 10%;\">AMOUNT</th>\r\n                    <th scope=\"col\" style=\"width: 10%;\">REF NO</th>\r\n                    <!-- <th scope=\"col\" style=\"width: 10%;\">TRNAC</th> -->\r\n                    <th scope=\"col\" style=\"width: 20%;\">REMARKS</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                <ng-container *ngIf=\"masterService.voucherListsForBulkPrint && masterService.voucherListsForBulkPrint.length > 0\">\r\n                <tr *ngFor=\"let voucher of (masterService.voucherListsForBulkPrint|searchData:filter:'' | paginate: { itemsPerPage: itemsPerPage, currentPage: currentPage, totalItems: totalCount }); let i = index\">\r\n                    <td style=\"width: 5%;\"><input type=\"checkbox\" [(ngModel)]=\"voucher.IS_CHECKED\" (change)=\"PrepareVoucherListForPrint(voucher);\" class=\"form-check-input\"></td>\r\n                    <td style=\"width: 5%;\">{{currentPage>1?((currentPage-1)*10)+i+1:i+1}}</td>\r\n                    <!-- <td style=\"width: 10%;\">{{voucher.VCHRNO}}</td> -->\r\n                    <td style=\"width: 10%;\">{{voucher.TRNDATE}}</td>\r\n                    <td style=\"width: 10%;\">{{voucher.VCHRNO}}</td>\r\n                    <!-- <td style=\"width: 10%;\">{{voucher.TRNDATE}}</td> -->\r\n                    <td style=\"width: 10%;\">{{voucher.NETAMNT}}</td>\r\n                    <td style=\"width: 10%;\">{{voucher.PREFIXREMOVECHALANNO}}</td>\r\n                    <!-- <td style=\"width: 10%;\">{{voucher.TRNAC}}</td> -->\r\n                    <td style=\"width: 20%;\">{{voucher.REMARKS}}</td>\r\n\r\n                </tr>\r\n                </ng-container>\r\n                <ng-container *ngIf=\"masterService.voucherListsForBulkPrint && masterService.voucherListsForBulkPrint.length === 0\">\r\n                    <tr>\r\n                      <td colspan=\"7\">\r\n                        <div class=\"font-weight-bold\">Voucher List Information are unavailable.</div>\r\n                      </td>\r\n                    </tr>\r\n                  </ng-container> \r\n            </tbody>\r\n            </table>\r\n            <div class=\"pagination\" style=\"margin-top: 0rem;\" *ngIf=\"masterService.voucherListsForBulkPrint && (masterService.voucherListsForBulkPrint | searchData: filter:'').length > itemsPerPage\">\r\n              <div style=\"margin:auto\">\r\n                  <pagination-controls class=\"my-pagination\" (pageChange)=\"VoucherPagination($event)\"></pagination-controls>\r\n              </div>\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n\r\n  </div>\r\n  <div class=\"reportpopup\" style=\"width: 90%;\">\r\n    <generic-popup-grid #genericGridVoucherList (onItemSelected)=\"PrepareVoucherListForPrint($event,i)\" [popupsettings]=\"gridVoucherListPopupSettings\"></generic-popup-grid>\r\n  </div>"

/***/ }),

/***/ 1305:
/***/ (function(module, exports) {

module.exports = "<style>\r\n  td {\r\n    border: 1px solid #e6e6e6;\r\n    height: 24px;\r\n  }\r\n\r\n  input {\r\n    padding: 8px;\r\n    border: 0px;\r\n    width: 99%;\r\n    margin: 1.5% 2%;\r\n    border: 1px solid #ddd;\r\n    border-radius: 5px;\r\n  }\r\n\r\n  th {\r\n    font-weight: bold;\r\n    font-family: Roboto, Arial, sans-serif;\r\n  }\r\n\r\n  .input_hight {\r\n    height: 24px;\r\n  }\r\n\r\n  select {\r\n    margin: 5px 0;\r\n    margin-left: 2%;\r\n  }\r\n\r\n  select label {\r\n    margin-top: 9px;\r\n  }\r\n\r\n  .totalvalue {\r\n    align-items: center;\r\n  }\r\n\r\n  .totalvalue label {\r\n    white-space: nowrap;\r\n    margin-bottom: 0 !important;\r\n    padding: 0 10px;\r\n\r\n  }\r\n\r\n  .totalvalue input {\r\n    height: 25px;\r\n  }\r\n\r\n  input:disabled,\r\n  select:disabled,\r\n  textarea:disabled {\r\n    cursor: not-allowed !important;\r\n    color: black !important;\r\n    background-color: #EBEBE4 !important;\r\n  }\r\n</style>\r\n\r\n<div class=\"clearfix\">\r\n  <div>\r\n    <div class=\"row\" style=\"margin-top: 10px;\">\r\n      <div class=\"col-md-2\">\r\n\r\n        <label\r\n          style=\"font-family: Segoe UI Light;font-weight: bold;font-size: 20px;padding-left: 5%;padding-top: 3%;width: 100%;\">CASH\r\n          COLLECTION\r\n        </label>\r\n      </div>\r\n      <div class=\"col-md-7\">\r\n        <div class=\"row col-md-12\">\r\n          <div class=\"col-md-3\" style=\"margin-top: 1%;\">\r\n            <label>Voucher No :</label>\r\n            <b>{{CashCollectionObj.CC_VCHRNO}}</b>\r\n          </div>\r\n          <div class=\"col-md-6 entryDate\" style=\"display: flex; align-items: center;\">\r\n            <label style=\"flex: 0 0 15%; margin-bottom: 0; white-space: nowrap;\">Entry Date:</label>\r\n            <input style=\"flex: 0 0 30%; height: 24px;\r\n          font-size: 12px;\" placeholder=\"Year Start Date\" type=\"date\" [(ngModel)]=\"CashCollectionObj.ENTRYDATE\"\r\n              (change)=\"changeEntryDate($event.target.value,'AD')\" [disabled]=\"CashCollectionObj.MODE=='VIEW'\"> <span\r\n              style=\"margin-right: 10px;\">A.D</span>\r\n\r\n            <div style=\"flex: 0 0 30%; height: 24px;\r\n          font-size: 12px; display: flex;\r\n      align-items: center;\">\r\n              <nepali-date-picker name=\"nepaliDateEntry\" [id]=\"'nepaliDateEntry'\"\r\n                (change)=\"changeEntryDate($event.detail.value,'BS')\" [(ngModel)]=\"CashCollectionObj.ENTRY_BSDATE\"\r\n                [label]=\"'dd/mm/yyyy'\" [disabled]=\"CashCollectionObj.MODE=='VIEW'\">\r\n              </nepali-date-picker> <span>B.S</span>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-md-3\" *ngIf=\"CashCollectionObj.MODE=='VIEW'\" style=\"margin-top: 1%;\">\r\n            <label>RV No :</label>\r\n            <b>{{CashCollectionObj.RV_VCHRNO}}</b>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-md-3\" style=\"margin-top:10px\">\r\n        <button style=\"margin: 0px 4px;\" (click)=\"back()\" class=\"btn btn-info pull-right\">\r\n          F10 BACK\r\n        </button>\r\n        <button style=\"margin: 0px 4px;\" class=\"btn btn-info pull-right\" (click)=\"saveClick()\"\r\n          [disabled]=\"CashCollectionObj.MODE=='VIEW'\">\r\n          F6 Save\r\n        </button>\r\n        <button style=\"margin: 0px 4px;\" class=\"btn btn-info pull-right\" (click)=\"onViewClicked()\">\r\n          F6 View\r\n        </button>\r\n        <button style=\"margin: 0px 4px;\" (click)=\"reset()\" class=\"btn btn-info pull-right\">\r\n          F3 Reset\r\n        </button>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"col-md-12\" style=\"border-bottom: 1px solid #828080;\r\n        margin-top:10px;\r\n        margin-bottom: 5px;\r\n        padding-bottom: 10px;\r\n        background: #e2eaea; padding-top: 9px;\r\n        width: 100%;\r\n       \">\r\n      <div style=\"display: flex;\">\r\n      </div>\r\n      <div class=\"col-md-4\">\r\n        <div class=\"d-flex\" style=\"display: flex;\">\r\n          <label style=\"flex: 0 0 50%;    flex: 0 0 33%;\r\n        margin-left: 13%;\">In (A.D)</label>\r\n          <label style=\"flex: 0 0 50%;\">In (B.S)</label>\r\n        </div>\r\n\r\n        <div class=\"fromdate\" style=\"display: flex; align-items: center;\">\r\n          <label style=\"flex: 0 0 10%;\">From:</label>\r\n          <input style=\"flex: 0 0 30%; height: 24px;\r\n      font-size: 12px;\" placeholder=\"Year Start Date\" type=\"date\" [(ngModel)]=\"CashCollectionObj.DATE1\"\r\n            (change)=\"changeDate1($event.target.value,'AD')\" [disabled]=\"CashCollectionObj.MODE=='VIEW'\">\r\n\r\n          <div style=\"flex: 0 0 30%; height: 24px;\r\n      font-size: 12px;\">\r\n            <nepali-date-picker name=\"nepaliDateFrom\" [id]=\"'nepaliDatefrom'\"\r\n              (change)=\"changeDate1($event.detail.value,'BS')\" [label]=\"'dd/mm/yyyy'\" [(ngModel)]=\"CashCollectionObj.BSDATE1\"\r\n              [disabled]=\"CashCollectionObj.MODE=='VIEW'\">\r\n            </nepali-date-picker>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"fromdate\" style=\"display: flex; align-items: center;\">\r\n          <label style=\"flex: 0 0 10%;\">To:</label>\r\n          <input style=\"flex: 0 0 30%; height: 24px;\r\n      font-size: 12px;\" placeholder=\"Year Start Date\" type=\"date\" [(ngModel)]=\"CashCollectionObj.DATE2\"\r\n            (change)=\"changeDate2($event.target.value,'AD')\" [disabled]=\"CashCollectionObj.MODE=='VIEW'\">\r\n\r\n          <div style=\"flex: 0 0 30%; height: 24px;\r\n      font-size: 12px;\">\r\n            <nepali-date-picker name=\"nepaliDateTo\" [id]=\"'nepaliDateTo'\"\r\n              (change)=\"changeDate2($event.detail.value,'BS')\" [label]=\"'dd/mm/yyyy'\"[(ngModel)]=\"CashCollectionObj.BSDATE2\"\r\n              [disabled]=\"CashCollectionObj.MODE=='VIEW'\">\r\n            </nepali-date-picker>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"col-md-3\" style=\"margin-top: 8px;\">\r\n        <!-- <div class=\"areaWrapper\" style=\"display: flex;\">\r\n          <label style=\"flex: 0 0 30%; margin-top: 9px;\">Area :</label>\r\n          <select style=\"flex: 0 0 65%\" class=\"form-select form-control\"   [(ngModel)]=\"CashCollectionObj.AREA_NAME\">\r\n            <option >katmhandu</option>\r\n            <option value=\"bkt\">Bhaktapur</option>\r\n          </select>\r\n        </div> -->\r\n        <div class=\"SalesmanWrapper\" style=\"display: flex;\">\r\n\r\n          <label style=\"flex: 0 0 30%; margin-top: 9px;\">Salesman :</label>\r\n          <input type=\"text\" style=\"height:24px;width: 95% !important;\" (keydown.Enter)=\"EnterClick()\"\r\n            [(ngModel)]=\"CashCollectionObj.SALESMAN_NAME\" placeholder=\"Press Enter to Select Salesman\"\r\n            autocomplete=\"off\" (keydown)=\"preventInput($event)\" [disabled]=\"CashCollectionObj.MODE=='VIEW'\">\r\n        </div>\r\n        <div class=\"ReceiptMode\" style=\"display: flex;\">\r\n          <label style=\"flex: 0 0 30%; margin-top: 9px;\">Receipt Mode :</label>\r\n          <select style=\"flex: 0 0 65%\" class=\"form-select form-control\" [(ngModel)]=\"CashCollectionObj.RECEIPT_MODE\"\r\n            [disabled]=\"CashCollectionObj.MODE=='VIEW'\">\r\n            <option value=\"cash\">Cash</option>\r\n          </select>\r\n        </div>\r\n        <div class=\"daybasis\" style=\"display: flex;\">\r\n          <label style=\"flex: 0 0 30%; margin-top: 9px;\">Days Basis :</label>\r\n          <select style=\"flex: 0 0 65%\" class=\"form-select form-control\" [(ngModel)]=\"CashCollectionObj.DAYS_BASIS\"\r\n            [disabled]=\"CashCollectionObj.MODE=='VIEW'\">\r\n            <option value=\"BILLDATE_WISE\">Bill Date Wise</option>\r\n            <!-- <option value=\"DUEDATE_WISE\">Due Date Wise</option> -->\r\n          </select>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-md-4\" style=\"margin-top: 9px;\">\r\n        <div style=\"display: flex;\">\r\n          <label style=\"flex: 0 0 35%; margin-top: 9px;\">Cash and Bank A/C: </label>\r\n          <input type=\"text\" style=\"height:24px;width: 95% !important;\" (keydown.Enter)=\"CashBankList()\"\r\n            [(ngModel)]=\"CashCollectionObj.CASHBANK_ACNAME\" placeholder=\"Press Enter to Select Cash/Bank\"\r\n            autocomplete=\"off\" (keydown)=\"preventInput($event)\" [disabled]=\"CashCollectionObj.MODE=='VIEW'\">\r\n        </div>\r\n        <div style=\"display: flex;\">\r\n          <label style=\"flex: 0 0 35%; margin-top: 9px;\">Customer Name :</label>\r\n          <input type=\"text\" style=\"height:24px;width: 95% !important;\" (keydown.Enter)=\"showAcList(); \"\r\n            [(ngModel)]=\"CashCollectionObj.CUS_ACNAME\" placeholder=\"Press Enter to Select A/C\" autocomplete=\"off\"\r\n            (keydown)=\"preventInput($event)\" [disabled]=\"CashCollectionObj.MODE=='VIEW'\">\r\n        </div>\r\n        <!-- <div class=\"costCenter\" style=\"display: flex;\">\r\n          <label style=\"flex: 0 0 35%; margin-top: 9px;\">Cost Center :</label>\r\n          <input type=\"text\" style=\"height:24px;width: 95% !important;\" (keydown.Enter)=\"showCostCenterList(); \"\r\n            [(ngModel)]=\"CashCollectionObj.COSTCENTER_NAME\" placeholder=\"Press Enter to Select Costcenter\"\r\n            autocomplete=\"off\" (keydown)=\"preventInput($event)\">\r\n\r\n        </div> -->\r\n        <div style=\"display: flex;\">\r\n          <label style=\"flex: 0 0 35%; margin-top: 9px;\">Remarks :</label>\r\n          <input type=\"text\" [(ngModel)]=\"CashCollectionObj.REMARKS\" style=\"flex: 0 0 61%;\r\n          color: #000000;\r\n          border: 1px solid #cbcbcb;\r\n          border-radius: 5px;\r\n          background-color: #ffffff;\r\n          box-shadow: none;\r\n          font-size: 14px;\r\n          margin: 0;\r\n          height: 25px !important;\r\n          margin-left: 1.95%;\" [disabled]=\"CashCollectionObj.MODE=='VIEW'\">\r\n          <button style=\"margin: 0px 4px; margin-left: 35px;\" (click)=\"loadsalesdata()\" class=\"btn btn-info pull-right\"\r\n            [disabled]=\"CashCollectionObj.MODE=='VIEW'\">\r\n            Load Data\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-lg-12\">\r\n    <div style=\"padding-right: 0px !important; padding-left: 0px !important;\">\r\n      <div style=\"height:56vh; overflow-y: scroll\">\r\n        <table style=\"margin-bottom: 5px;font-size: 13px;width: 100%;\">\r\n          <thead>\r\n            <tr style=\" border-bottom: 2px solid #E6E6E6;\r\n                              border-top: 2px solid #E6E6E6;\r\n                              height: 30px;\r\n                              background: silver;\r\n                              color: black;\">\r\n              <th style=\"width: 2%;\">SNo.</th>\r\n              <th style=\"width:19%;padding-left: 1%;\">Customer Name</th>\r\n              <th style=\"width: 11%;padding-left: 1%;\">\r\n                Bill No\r\n              </th>\r\n              <th style=\"width: 11%;padding-left: 1%;\">\r\n                Bill Date\r\n              </th>\r\n              <th style=\"width: 11%;padding-left: 1%;\">\r\n                Due Date\r\n              </th>\r\n              <th style=\"width:7%;padding-left: 1%;\">\r\n                Bill Amount\r\n              </th>\r\n              <th style=\"width:7%;padding-left: 1%;\">\r\n                Due Amount\r\n              </th>\r\n              <th style=\"width:7%;padding-left: 1%;\">\r\n                Balance\r\n              </th>\r\n              <th style=\"width:3%;\">\r\n                <div class=\"form-check\" style=\"margin-bottom: 0;\">\r\n                  <input class=\"form-check-input\" type=\"checkbox\" (change)=\"handleChange($event)\" id=\"selectAll\"\r\n                    [disabled]=\"CashCollectionObj.MODE=='VIEW'\">\r\n                </div>\r\n              </th>\r\n              <th style=\"width:7%;padding-left: 1%;\">\r\n                Cash Collection\r\n              </th>\r\n              <th style=\"width:7%;padding-left: 1%;\">\r\n                Receipt No.\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <ng-container *ngFor=\"let i of DetailList;let x = index\">\r\n              <tr style=\"border: 1px solid #e6e6e6;max-height:25px;\">\r\n                <td style=\"line-height:21px; text-align:center\">\r\n                  {{x+1}}\r\n                </td>\r\n                <td style=\"line-height:21px; text-align:center\">\r\n                  <input type=\"text\" [(ngModel)]=\"i.CUSTOMER_ACNAME\" style=\"height:24px;width: 95% !important;\"\r\n                    placeholder=\"Press Enter to select\" disabled>\r\n                </td>\r\n                <td style=\"line-height:21px; text-align:center\">\r\n                  <input type=\"text\" [(ngModel)]=\"i.BILL_NO\" class=\"input_hight\"\r\n                    style=\"height:24px;width: 94% !important;\" placeholder=\"Press Enter to select\" disabled>\r\n                </td>\r\n                <td style=\"line-height:21px; text-align:center\">\r\n                  <input type=\"date\" class=\"input_hight billDate\" [(ngModel)]=\"i.BILL_DATE\" disabled>\r\n                </td>\r\n\r\n                <td style=\"line-height:21px; text-align:center\">\r\n                  <input type=\"date\" class=\"input_hight dueDate\" [(ngModel)]=\"i.DUE_DATE\" disabled>\r\n                </td>\r\n                <td style=\"line-height:21px; text-align:center\">\r\n                  <input type=\"number\" [(ngModel)]=\"i.BILL_AMOUNT\" class=\"input_hight\"\r\n                    style=\"height:24px;float: right;width: 93% !important;padding-right: 0px;text-align: right;\"\r\n                    disabled>\r\n                </td>\r\n                <td style=\"line-height:21px; text-align:center\">\r\n                  <input type=\"number\" [(ngModel)]=\"i.DUE_AMOUNT\" class=\"input_hight\"\r\n                    style=\"height:24px;float: right;width: 93% !important;padding-right: 0px;text-align: right;\"\r\n                    disabled>\r\n                </td>\r\n                <td style=\"line-height:21px; text-align:center\">\r\n                  <input type=\"text\" [(ngModel)]=\"i.BALANCE\" class=\"input_hight\"\r\n                    style=\"height:24px;width: 90% !important\" disabled>\r\n                </td>\r\n                <td style=\"line-height:21px; text-align:center\">\r\n                  <div class=\"form-check\">\r\n                    <input class=\"form-check-input\" type=\"checkbox\" (change)=\"ChooseCashCollection($event, x)\"\r\n                      [(ngModel)]=\"i.IS_CHECKED\" [disabled]=\"CashCollectionObj.MODE=='VIEW'\">\r\n\r\n                  </div>\r\n                </td>\r\n                <td style=\"line-height:21px; text-align:center\">\r\n                  <input type=\"number\" [(ngModel)]=\"i.CASH_COLLECTION\" style=\"height: 24px;width: 94% !important;\"\r\n                    (keydown.Enter)=\"CalculateBal(x)\" (keydown.Tab)=\"CalculateBal(x)\" autocomplete=\"off\"\r\n                    [disabled]=\"i.IS_CHECKED==true || CashCollectionObj.MODE=='VIEW'\">\r\n                </td>\r\n                <td style=\"line-height:21px; text-align:center\">\r\n                  <input type=\"text\" class=\"input_hight receiptNo\" [(ngModel)]=\"i.RECEIPT_NO\"\r\n                    [disabled]=\"CashCollectionObj.MODE=='VIEW'\">\r\n                </td>\r\n              </tr>\r\n            </ng-container>\r\n          </tbody>\r\n\r\n\r\n        </table>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<div class=\"row\" style=\"position: fixed;\r\nbottom: 20px; background-color: #fff;\">\r\n\r\n  <tr>\r\n    <td style=\"width: 5%;\"></td>\r\n    <td style=\"width: 19%;\">\r\n      <h5 style=\"font-weight: bold; margin: 0 ;padding-left:10px;\">Total:</h5>\r\n    </td>\r\n    <td>\r\n      <div class=\"totalvalue \" style=\"display: flex;\">\r\n        <label for=\"\" style=\"flex:0 0 10% ;\">Total Bill : </label>\r\n        <input type=\"text\" [(ngModel)]=\"this.TotalBillCount\" disabled>\r\n\r\n      </div>\r\n    </td>\r\n\r\n    <td>\r\n      <div class=\"totalvalue \" style=\"display: flex;\">\r\n        <label for=\"\" style=\"flex:0 0 30% ;\">Total Bill AMT : </label>\r\n        <input type=\"text\" [(ngModel)]=\"this.CashCollectionBillAmount\" disabled>\r\n\r\n      </div>\r\n    </td>\r\n\r\n    <td>\r\n      <div class=\"totalvalue\" style=\"display: flex;\">\r\n        <label for=\"\" style=\"flex:0 0 30% ;\">Total Due AMT : </label>\r\n\r\n        <input type=\"text\" [(ngModel)]=\"this.CashCollectionDueAmount\" disabled>\r\n      </div>\r\n    </td>\r\n    <td>\r\n      <div class=\"totalvalue \" style=\"display: flex;\">\r\n        <label for=\"\" style=\"flex:0 0 30% ;\">Total Balance : </label>\r\n        <input type=\"text\" [(ngModel)]=\"this.CashCollectionTotalBalance\" disabled>\r\n      </div>\r\n    </td>\r\n\r\n    <td>\r\n      <div class=\"totalvalue \" style=\"display: flex;\">\r\n        <label for=\"\" style=\"flex:0 0 30% ;\">Total Cash Collection : </label>\r\n        <input type=\"text\" [(ngModel)]=\"CashCollectionObj.TOTAL_CASHCOLLECTION\" disabled>\r\n      </div>\r\n    </td>\r\n    <td style=\"width: 7%;\">\r\n    </td>\r\n\r\n  </tr>\r\n\r\n</div>\r\n\r\n\r\n\r\n<generic-popup-grid #genericGridACList [popupsettings]=\"gridACListPopupSettings\"\r\n  (onItemDoubleClick)=\"onAcSelect($event)\"></generic-popup-grid>\r\n\r\n<generic-popup-grid #genericeSalesManList [popupsettings]=\"gridCostSalesManPopupSetting\"\r\n  (onItemDoubleClick)=\"onSalesManSelect($event)\"></generic-popup-grid>\r\n\r\n<generic-popup-grid #genericGridCashBankList [popupsettings]=\"gridCashBankListPopupSettings\"\r\n  (onItemDoubleClick)=\"onCashBankSelect($event)\"></generic-popup-grid>\r\n\r\n<generic-popup-grid #genericGridCostCenterList [popupsettings]=\"gridCostCenterListPopupSettings\"\r\n  (onItemDoubleClick)=\"onCostcenterSelect($event)\"></generic-popup-grid>\r\n\r\n<generic-popup-grid #genericGridCCvoucherList [popupsettings]=\"gridCCvoucherListPopupSettings\"\r\n  (onItemDoubleClick)=\"onVoucherDoubleClick($event)\">\r\n</generic-popup-grid>"

/***/ }),

/***/ 1306:
/***/ (function(module, exports) {

module.exports = "<style>\r\n    .sectionWrapper{\r\n      display: flex;\r\n      flex-direction: column;\r\n      height: 94vh;\r\n    }\r\n\r\n .midTableWrapper{\r\n  flex: 1; \r\n  overflow: auto;\r\n  overflow-x:hidden;\r\n}\r\n.footer-wrapper {\r\n  background: lightgreen;\r\n  min-height: 87px;\r\n}\r\n\r\n\r\n  </style>\r\n<!-- <div class=\"sectionWrapper\"> -->\r\n   <!-- <div class=\"topWwrapper\"> -->\r\n    <div class=\"sticky-top\">\r\n  <div class=\"clearfix\">\r\n    <div class=\"col-md-1\">\r\n      <a href=\"https://cellpay.com.np/\" target=\"blank\">\r\n        <img src=\"../../../assets/img/CellPayLogo.jpg\" alt=\"Group\" height=\"50\"\r\n        width=\"120\" style=\"margin-top:-11px\">\r\n        </a>\r\n    </div>\r\n    <div class=\"col-md-4\">\r\n      <label style=\"font-family: Segoe UI Light;font-weight: bold;font-size: 20px;padding-left: 5%;padding-top: 1%;\">CELLPAY VOUCHER</label>\r\n      <label style=\"font-size: 14px;\">&nbsp;>> {{ _trnMainService.TrnMainObj?.Mode | titlecase}} Voucher</label>\r\n    </div>\r\n    <div class=\"col-md-7\">\r\n      <account-master-action (onBillTrackEmit)=\"BillTrack()\"></account-master-action>\r\n    </div>\r\n  </div>\r\n</div>\r\n<div class=\"main-container\" style=\"margin-bottom: 0;\">\r\n  <div class=\"clearfix\">\r\n    <trnmain-voucher-entry></trnmain-voucher-entry>\r\n  </div>\r\n \r\n\r\n\r\n   <!-- </div> -->\r\n    <!-- <div class=\"midTableWrapper\"> -->\r\n       <div class=\"clearfix\" style=\"margin-top: 5px\">\r\n        <trntran-voucher-entry #trnmainentry></trntran-voucher-entry>\r\n      </div>\r\n\r\n    <!-- </div> -->\r\n  </div>\r\n    <div class=\"sticky-bottom\" style=\"background: gray;\">\r\n      <account-voucher-summary></account-voucher-summary>\r\n    </div>\r\n\r\n<!-- </div> -->\r\n\r\n\r\n<multiple-series [voucherType]=\"voucherType\"></multiple-series>"

/***/ }),

/***/ 1307:
/***/ (function(module, exports) {

module.exports = "<style>\r\n    .sectionWrapper{\r\n      display: flex;\r\n      flex-direction: column;\r\n      height: 94vh;\r\n    }\r\n\r\n .midTableWrapper{\r\n  flex: 1; \r\n  overflow: auto;\r\n  overflow-x:hidden;\r\n}\r\n.footer-wrapper {\r\n  background: lightgreen;\r\n  min-height: 87px;\r\n}\r\n\r\n\r\n  </style>\r\n\r\n<div class=\"sectionWrapper\">\r\n   <div class=\"topWrapper\">\r\n    <div class=\"sticky-top\">\r\n  <div class=\"clearfix\">\r\n    <div class=\"col-md-1\">\r\n      <voucher-master-toggler></voucher-master-toggler>\r\n    </div>\r\n    <div class=\"col-md-4\">\r\n      <label style=\"font-family: Segoe UI Light;font-weight: bold;font-size: 20px;padding-left: 5%;padding-top: 1%;\">{{\r\n        _trnMainService.pageHeading }}</label>\r\n      <label style=\"font-size: 14px;\">&nbsp;>> {{ _trnMainService.TrnMainObj?.Mode | titlecase}} Voucher</label>\r\n    </div>\r\n    <div class=\"col-md-7\">\r\n      <account-master-action></account-master-action>\r\n    </div>\r\n  </div>\r\n</div>\r\n<!-- <div class=\"main-container\" style=\"margin-bottom: 0  !important;\"> -->\r\n  <div class=\"clearfix\" style=\"margin-top: 29px;\">\r\n    <trnmain-voucher-entry></trnmain-voucher-entry>\r\n  </div>\r\n \r\n<!-- </div> -->\r\n\r\n   </div>\r\n    <div class=\"midTableWrapper\">\r\n       <div class=\"clearfix\" style=\"margin-top: 5px\">\r\n        <trntran-voucher-entry></trntran-voucher-entry>\r\n  </div>\r\n\r\n        <!-- </div> -->\r\n      </div>\r\n      <div class=\"sticky-bottom\">\r\n          <div class=\"\" *ngIf='_trnMainService.TrnMainObj.VATBILL == 1' style=\"background: gray;\">\r\n              <account-voucher-summary></account-voucher-summary>\r\n            </div>\r\n            <div class=\"\" *ngIf='_trnMainService.TrnMainObj.VATBILL == 0' style=\"background: gray;\">\r\n              <DrCrFooter_With_VAT></DrCrFooter_With_VAT>\r\n            </div>\r\n\r\n      </div>\r\n\r\n\r\n\r\n\r\n<multiple-series [voucherType]=\"voucherType\"></multiple-series>"

/***/ }),

/***/ 1308:
/***/ (function(module, exports) {

module.exports = "<style>\r\n    .table tr th {\r\n      text-align: center;\r\n      vertical-align: middle;\r\n      line-height: 15px;\r\n    }\r\n  \r\n    tr {\r\n      /* border: 1px solid #e6e6e6; */\r\n      max-height: 25px;\r\n    }\r\n  \r\n    td {\r\n      height: 20px;\r\n      /* border: 1px solid #e6e6e6; */\r\n     \r\n  \r\n    }\r\n  \r\n    .bottom {\r\n      position: fixed;\r\n      bottom: 20px;\r\n      left: 0px;\r\n      width: 100%;\r\n      height: 120px;\r\n      z-index: 1;\r\n      /* background: #e2eaea !important; */\r\n    }\r\n\r\n  .colorLabel{\r\n    width: 120px !important;\r\n    font-size: 21px !important;\r\n    font-weight: bold;\r\n    color: #2dacd1;\r\n  }\r\n\r\n  .diffAmountItemForAccount{\r\n    font-size: 21px;\r\n    width: 160px;\r\n    color: #2dacd1;\r\n    text-align: right;\r\n    border: 1px solid #cbcbcb;\r\n    font-weight: bold;\r\n  }\r\n  \r\n  </style>\r\n\r\n<div class=\"bottom\" style=\"text-align:right; background:#C0C0C0;\">\r\n    \r\n    <div class=\"col-md-4\" >\r\n        <div class=\"row\" style=\"margin-top: 70px;    float: left;\">\r\n          \r\n                    <!-- <label class=\"account-balance-title colorLabel\">A/C B/L :\r\n                    </label><label class=\"diffAmountItemForAccount colorLabel\" style=\"    border: 1px solid #cbcbcb;\">{{ _transactionService.diffAmountItemForAccount | number }}</label>&nbsp; -->\r\n                    <!-- <label class=\"colorLabel\" style=\"width:30px !important;font-size:18px;color: #2dacd1;\" *ngIf=\"_transactionService.diffAmountDrCrType == 'Dr'\">Dr.</label>\r\n                    <label class=\"colorLabel\" style=\"width:30px !important;font-size:18px;color: #2dacd1;\" *ngIf=\"_transactionService.diffAmountDrCrType == 'Cr'\">Cr.</label> -->\r\n           \r\n           \r\n        </div>\r\n    </div>\r\n    <div class=\"col-md-4\" style=\"margin-top: 75px;\" >     \r\n            <label class=\"colorLabel\">A/C B/L :\r\n            </label><label class=\"diffAmountItemForAccount\">{{ this.differenceAmount | number }}</label>&nbsp;\r\n            <label style=\"width:30px !important;font-size:18px;color: #2dacd1;font-weight: bold;\" *ngIf=\"diffAmountDrCrType == 'Dr'\">Dr.</label>\r\n            <label style=\"width:30px !important;font-size:18px;color: #2dacd1;font-weight: bold;\" *ngIf=\"diffAmountDrCrType == 'Cr'\">Cr.</label>    \r\n    </div>\r\n\r\n    <div class=\"col-md-4\" style=\"margin-top: 10px;\">\r\n      \r\n\r\n        <table class=\"table\" style=\"height: 100px; \">\r\n           <tbody>\r\n               <tr>\r\n                   <td style=\"line-height: 12px;text-align:left;font-size: 12px; font-weight: bold;\">Gross Amount </td>\r\n                   <td style=\"line-height: 12px;\">\r\n                       <input\r\n                      \r\n                       id=\"Gross Amount\"\r\n                       type=\"number\"\r\n\r\n                       style=\"width:100%; height: 19px;text-align:right; \"\r\n                       [ngModel]=\"_transactionService.TrnMainObj.TOTAMNT | twoDigitNumber \"\r\n                       (ngModelChange)=\"_transactionService.TrnMainObj.TOTAMNT = $event\" \r\n                       disabled\r\n                       />\r\n\r\n                        \r\n                   </td>\r\n               </tr>\r\n          \r\n              \r\n               \r\n                <tr>\r\n                    <td style=\"line-height: 12px;text-align:left; font-size: 12px; font-weight: bold; \" >Taxable Amount </td>\r\n                    <td style=\"line-height: 12px;text-align:right;\" >\r\n                        <input                           \r\n                        id=\"TaxableAmount\"\r\n                        type=\"number\"\r\n                   \r\n                        style=\"width:100%; height: 19px;text-align:right;\"                 \r\n                        [ngModel]=\"applyPipeinTaxable? (_transactionService.TrnMainObj.TAXABLE |twoDigitNumber ) :_transactionService.TrnMainObj.TAXABLE \"                        \r\n                        (ngModelChange)=\"_transactionService.TrnMainObj.TAXABLE =$event\"\r\n                        (focusout)=\"focusOutTaxableAmountChange($event)\"\r\n                        (keyup)=\"taxableAmountChange($event)\"\r\n                        />\r\n                    \r\n                        <!-- <input\r\n                           \r\n                        id=\"Discount\"\r\n                        type=\"number\"\r\n                        style=\"width:100%;height: 19px;text-align:right;\"\r\n                        [(ngModel)]=\"_transactionService.TrnMainObj.DCAMNT \"\r\n                        [disabled]=\"_transactionService.TrnMainObj.Mode =='VIEW'\"\r\n                        (keyup)=\"discountChange($event)\"\r\n                        (focusout)=\"discountFocusOut($event)\"\r\n                        /> -->\r\n\r\n\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <td style=\"line-height: 12px;text-align:left;font-size: 12px; font-weight: bold; \" >Non Taxable Amount </td>\r\n                    <td style=\"line-height: 12px;text-align:right;\" >\r\n                        <input\r\n                      \r\n                        id=\"NonTaxableAmount\"\r\n                        type=\"number\"\r\n                        style=\"width:100%; height: 19px;text-align:right;\"\r\n                      \r\n                        [ngModel]=\"applyPipeinNonTaxable?(_transactionService.TrnMainObj.NONTAXABLE |twoDigitNumber):_transactionService.TrnMainObj.NONTAXABLE\"\r\n                        (ngModelChange)= \"_transactionService.TrnMainObj.NONTAXABLE = $event\"        \r\n                        (keyup)=\"nonTaxableAmountChange($event)\"\r\n                        (focusout)=\"focusOutNonTaxableAmountChange($event)\"\r\n                        [disabled]=\"_transactionService.TrnMainObj.TAXABLE !=0\"\r\n                        />\r\n                  \r\n                    </td>\r\n               </tr>\r\n               <tr>\r\n                    <td style=\"line-height: 12px;text-align:left;font-size: 12px; font-weight: bold; \" >VAT Amount </td>\r\n                    <td style=\"line-height: 12px;text-align:right;\" >\r\n                        <input\r\n                       \r\n                        id=\"VATAmount\"\r\n                        type=\"number\"\r\n                        style=\"width:100%; height: 19px;text-align:right;\"\r\n                        [ngModel]=\"_transactionService.TrnMainObj.VATAMNT | twoDigitNumber\"   \r\n                        (ngModelChange)=\"_transactionService.TrnMainObj.VATAMNT=$event\"\r\n                        (keyup) = \"VATAmountChange($event)\"                       \r\n                        (change)=\"VATAmountChange($event)\"\r\n                        disabled\r\n                        />\r\n                       \r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <td style=\"line-height: 12px;text-align:left;font-size: 12px; font-weight: bold; \" >Net Amount </td>\r\n                    <td style=\"line-height: 12px;text-align:right;\" >\r\n                        <input\r\n                     \r\n                        id=\"NetAmount\"\r\n                        type=\"number\"\r\n                        style=\"width:100%; height: 19px;text-align:right;\"\r\n                        [ngModel]=\"_transactionService.TrnMainObj.NETAMNT | twoDigitNumber\"\r\n                        (ngModelChange) = \"_transactionService.TrnMainObj.NETAMNT = $event \"\r\n                        disabled\r\n                        />\r\n                  \r\n                    </td>\r\n                </tr>\r\n                \r\n           </tbody>\r\n        </table>\r\n    </div>\r\n</div>    "

/***/ }),

/***/ 1309:
/***/ (function(module, exports) {

module.exports = "<style>\r\n  .sectionWrapper{\r\n      display: flex;\r\n      flex-direction: column;\r\n      height: 94vh;\r\n    }\r\n .midTableWrapper{\r\n  flex: 1; \r\n  overflow: auto;\r\n  overflow-x:hidden;\r\n}\r\n.footer-wrapper {\r\n  background: lightgreen;\r\n  min-height: 87px;\r\n}\r\n\r\n\r\n  </style>\r\n\r\n<div class=\"sectionWrapper\">\r\n   <div class=\"topWrapper\">\r\n    <div class=\"sticky-top\">\r\n  <div class=\"clearfix\">\r\n    <div class=\"col-md-1\">\r\n      <voucher-master-toggler></voucher-master-toggler>\r\n    </div>\r\n    <div class=\"col-md-4\">\r\n      <label style=\"font-family: Segoe UI Light;font-weight: bold;font-size: 20px;padding-left: 5%;padding-top: 1%;\">{{\r\n        _trnMainService.pageHeading }}</label>\r\n      <label style=\"font-size: 14px;\">&nbsp;>> {{ _trnMainService.TrnMainObj?.Mode | titlecase}} Voucher</label>\r\n    </div>\r\n    <div class=\"col-md-7\">\r\n      <account-master-action></account-master-action>\r\n    </div>\r\n  </div>\r\n</div>\r\n<!-- <div class=\"main-container\" style=\"margin-bottom: 0  !important;z-index: 9;\"> -->\r\n  <div class=\"clearfix\" style=\"margin-top: 29px;\">\r\n    <trnmain-voucher-entry></trnmain-voucher-entry>\r\n  </div>\r\n \r\n<!-- </div> -->\r\n\r\n   </div>\r\n    <div class=\"midTableWrapper\">\r\n       <div class=\"clearfix\" style=\"margin-top: 5px\">\r\n        <trntran-voucher-entry></trntran-voucher-entry>\r\n  </div>\r\n\r\n        <!-- </div> -->\r\n      </div>\r\n        <div class=\"sticky-bottom\">\r\n           <div class=\"\" *ngIf='_trnMainService.TrnMainObj.VATBILL ==1' style=\"background: gray;\">\r\n          <account-voucher-summary></account-voucher-summary>\r\n        </div>\r\n        <div class=\"\" *ngIf='_trnMainService.TrnMainObj.VATBILL !=1' style=\"background: gray;\">\r\n          <DrCrFooter_With_VAT></DrCrFooter_With_VAT>\r\n        </div>\r\n\r\n        </div>\r\n\r\n\r\n\r\n\r\n<multiple-series [voucherType]=\"voucherType\"></multiple-series>"

/***/ }),

/***/ 1310:
/***/ (function(module, exports) {

module.exports = "\r\n<style>\r\n  .clearfix.trn-main-voucher-entry{\r\n    margin-top: 27px;\r\n\r\n  }\r\n    \r\n    .sectionWrapper{\r\n      display: flex;\r\n      flex-direction: column;\r\n      height: 94vh;\r\n    }\r\n\r\n .midTableWrapper{\r\n  flex: 1; \r\n  overflow: auto;\r\n  overflow-x:hidden;\r\n}\r\n.footer-wrapper {\r\n  background: lightgreen;\r\n  min-height: 87px;\r\n}\r\n  </style>\r\n\r\n    <div class=\"sectionWrapper\">\r\n      <div class=\"topWwrapper\">\r\n          <div class=\"sticky-top\">\r\n  <div class=\"clearfix\">\r\n    <div class=\"col-md-1\">\r\n      <voucher-master-toggler></voucher-master-toggler>\r\n    </div>\r\n    <div class=\"col-md-4\">\r\n      <label style=\"font-family: Segoe UI Light;font-weight: bold;font-size: 20px;padding-left: 5%;padding-top: 1%;\">{{\r\n        _trnMainService.pageHeading }}</label>\r\n      <label style=\"font-size: 14px;\">&nbsp;>> {{ _trnMainService.TrnMainObj?.Mode | titlecase}} Voucher</label>\r\n    </div>\r\n    <div class=\"col-md-7\">\r\n      <account-master-action (onBillTrackEmit)=\"BillTrack()\"></account-master-action>\r\n    </div>\r\n  </div>\r\n         </div>\r\n        <!-- <div class=\"main-container\"> -->\r\n          <div class=\"clearfix\" style=\"margin-top: 29px;\">\r\n            <trnmain-voucher-entry></trnmain-voucher-entry>\r\n          </div>\r\n         \r\n        \r\n        <!-- </div> -->\r\n        \r\n        \r\n        \r\n      </div>\r\n       <div class=\"midTableWrapper\">\r\n           <div class=\"clearfix\" style=\"margin-top: 5px\">\r\n    <trntran-voucher-entry #trnmainentry></trntran-voucher-entry>\r\n  </div>\r\n\r\n        </div>\r\n        <div class=\"footer-wrapper\" style=\"background: gray;\">\r\n  <account-voucher-summary></account-voucher-summary>\r\n</div>\r\n    </div>\r\n\r\n\r\n\r\n<multiple-series [voucherType]=\"voucherType\"></multiple-series>"

/***/ }),

/***/ 1311:
/***/ (function(module, exports) {

module.exports = "<voucherTracking></voucherTracking>>"

/***/ }),

/***/ 1312:
/***/ (function(module, exports) {

module.exports = "\r\n<style>\r\n    .table tr th {\r\n      text-align: center;\r\n      vertical-align: middle;\r\n    }\r\n    .sectionWrapper{\r\n      display: flex;\r\n      flex-direction: column;\r\n      height: 94vh;\r\n    }\r\n\r\n .midTableWrapper{\r\n  flex: 1; \r\n  overflow: auto;\r\n  overflow-x:hidden;\r\n}\r\n.footer-wrapper {\r\n  background: lightgreen;\r\n  min-height: 87px;\r\n}\r\n  </style>\r\n\r\n    <div class=\"sectionWrapper\">\r\n        <div class=\"topWwrapper\">\r\n          <div class=\"sticky-top\">\r\n  <div class=\"clearfix\">\r\n    <div class=\"col-md-1\">\r\n      <voucher-master-toggler></voucher-master-toggler>\r\n    </div>\r\n    <div class=\"col-md-4\">\r\n      <label style=\"font-family: Segoe UI Light;font-weight: bold;font-size: 20px;padding-left: 5%;padding-top: 1%;\">{{\r\n        _trnMainService.pageHeading }}</label>\r\n      <label style=\"font-size: 14px;\">&nbsp;>> {{ _trnMainService.TrnMainObj?.Mode | titlecase}} Voucher</label>\r\n    </div>\r\n    <div class=\"col-md-7\">\r\n      <account-master-action (onBillTrackEmit)=\"BillTrack()\"></account-master-action>\r\n    </div>\r\n  </div>\r\n          </div>\r\n<!-- <div class=\"main-container\" style=\"margin-bottom: 0;\"> -->\r\n  <div class=\"clearfix\" style=\"margin-top: 29px;\">\r\n    <trnmain-voucher-entry></trnmain-voucher-entry>\r\n  <!-- </div> -->\r\n \r\n\r\n\r\n        </div>\r\n        \r\n        </div>\r\n        <div class=\"midTableWrapper\">\r\n           <div class=\"clearfix\" style=\"margin-top: 5px\">\r\n    <trntran-voucher-entry #trnmainentry></trntran-voucher-entry>\r\n  </div>\r\n       </div>\r\n\r\n        <div class=\"footer-wrapper\" style=\"background: gray;\">\r\n        <account-voucher-summary></account-voucher-summary>\r\n      </div>\r\n\r\n    </div>\r\n\r\n\r\n<multiple-series [voucherType]=\"voucherType\"></multiple-series>"

/***/ }),

/***/ 1313:
/***/ (function(module, exports) {

module.exports = "<div class=\"modal fade\" bsModal #childModal=\"bs-modal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"orderModalLabel\">\r\n\r\n    <div class=\"modal-dialog modal-lg\" role=\"document\" style=\"padding: 0px 100px; padding-left: 300px; top: 25%;margin-top: -200px;\r\n    margin-right: 400px;\">\r\n        <div class=\"modal-content\" style=\"width:500px; height:300px\">\r\n            <div class=\"modal-body\">\r\n                <div class=\"col-md-12\">\r\n                    <SeriesDialog #seriesDialog [voucherType]=\"voucherType\" (sendPrefix)=\"prefixChanged($event)\"\r\n                        (closepopup)=\"ClosePop()\"></SeriesDialog>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>"

/***/ }),

/***/ 1314:
/***/ (function(module, exports) {

module.exports = "<style>\r\n  td {\r\n    border: 1px solid #e6e6e6;\r\n    height: 24px;\r\n  }\r\n\r\n  input {\r\n    padding: 8px;\r\n    border: 0px;\r\n    width: 100%;\r\n    /* padding: 2%; */\r\n    margin: 2%;\r\n  }\r\n\r\n  th {\r\n    font-weight: bold;\r\n    font-family: Roboto, Arial, sans-serif;\r\n  }\r\n\r\n  input_hight {\r\n    height: 24px;\r\n  }\r\n</style>\r\n\r\n<div class=\"clearfix\">\r\n  <div>\r\n    <div class=\"clearfix\">\r\n      <!-- <div class=\"col-md-4\">\r\n        <label\r\n          style=\"font-family: Segoe UI Light;font-weight: bold;font-size: 20px;padding-left: 5%;padding-top: 1%;width: 100%;\">Payment\r\n          Collection</label>\r\n      </div> -->\r\n      <div class=\"row col-md-7\">\r\n        <label\r\n          style=\"font-family: Segoe UI Light;font-weight: bold;font-size: 20px;padding-left: 3%;padding-top: 1%;\">Payment\r\n          Collection</label>\r\n        <label style=\"font-size: 14px;\">&nbsp;>> {{mode}}</label>\r\n\r\n        <!-- <div style=\"padding: 0px;\" class=\"col\" > -->\r\n        <label class=\"smallBoldLabel\" style=\"padding-left: 3%\">Entry Date :</label>\r\n        <input type=\"date\" id=\"PE_date\" style=\"width:145px;height: 25px;\" placeholder=\"Year Start Date\"\r\n          [disabled]=\"isViewMode\" [(ngModel)]=\"EntryDate.RECEIVEDATEIS\"\r\n          (change)=\"changeEntryDate($event.target.value,'AD')\"> &nbsp;A.D&nbsp;\r\n\r\n        <div style=\" width: 134px; margin-left: 67%; margin-top: -44px; margin-bottom: 8px;\">\r\n          <nepali-date-picker name=\"nepaliDateFrom\" [id]=\"'nepaliDatefrom'\"\r\n            (change)=\"changeEntryDate($event.detail.value,'BS')\" [label]=\"'dd/mm/yyyy'\" [(ngModel)]=\"EntryDate.BSDATE\"\r\n            [disabled]=\"isViewMode\">\r\n          </nepali-date-picker>\r\n        </div>\r\n        <!-- <label class=\"smallBoldLabel\">BS Date :</label>\r\n          <input style=\"width:100px;height: 25px;\" type=\"text\" [(ngModel)]=\"EntryDate.BSDATE\"\r\n              [disabled]=\"isViewMode\"  (keydown.Enter)=\"focusCustomer()\" (keydown.Tab)=\"focusCustomer()\"\r\n              (change)=\"changeEntryDate1($event.target.value,'BS')\"\r\n              /> -->\r\n        <!-- </div> -->\r\n      </div>\r\n\r\n      <!-- <div style=\"padding: 0px;;\" class=\"col-md-5\" >\r\n        <label class=\"smallBoldLabel\">Entry Date :</label>\r\n        <input \r\n        type=\"date\"\r\n        id=\"PE_date\" style=\"width:145px;height: 25px;\" \r\n        placeholder=\"Year Start Date\" \r\n        [disabled] = \"isViewMode\"\r\n        [(ngModel)]=\"EntryDate.RECEIVEDATEIS\"\r\n        (change)=\"changeEntryDate($event.target.value,'AD')\"\r\n        > &nbsp;A.D&nbsp;\r\n        \r\n\r\n        <label class=\"smallBoldLabel\">BS Date :</label>\r\n        <input style=\"width:26%;height: 25px;\" type=\"text\" [(ngModel)]=\"EntryDate.BSDATE\"\r\n            [disabled]=\"isViewMode\"  (keydown.Enter)=\"focusCustomer()\" (keydown.Tab)=\"focusCustomer()\"\r\n            (change)=\"changeEntryDate1($event.target.value,'BS')\"\r\n            />\r\n      </div> -->\r\n\r\n      <div class=\"col-md-5\" style=\"margin-top:10px\">\r\n\r\n\r\n        <!-- <button style=\"margin: 0px 4px;\" (click)=\"SelectDate()\" class=\"btn btn-info pull-right\">\r\n        Show Date\r\n        </button> -->\r\n\r\n\r\n\r\n\r\n\r\n\r\n        <button style=\"margin: 0px 4px;\" (click)=\"back()\" class=\"btn btn-info pull-right\">\r\n          F10 BACK\r\n        </button>\r\n        <button style=\"margin: 0px 4px;\" (click)=\"delete()\" class=\"btn btn-info pull-right\" [disabled]=\"!isViewMode\">\r\n          Delete\r\n        </button>\r\n        <button style=\"margin: 0px 4px;\" class=\"btn btn-info pull-right\" (click)=\"saveClick()\" [disabled]=\"isViewMode\">\r\n          F6 Save\r\n        </button>\r\n        <button style=\"margin: 0px 4px;\" (click)=\"view()\" class=\"btn btn-info pull-right\">\r\n          F4 View\r\n        </button>\r\n        <button style=\"margin: 0px 4px;\" (click)=\"edit()\" class=\"btn btn-info pull-right\">\r\n          F5 Edit\r\n        </button>\r\n        <button style=\"margin: 0px 4px;\" (click)=\"reset()\" class=\"btn btn-info pull-right\">\r\n          F3 Reset\r\n        </button>\r\n     \r\n\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div style=\"padding-right: 0px !important; padding-left: 0px !important;\">\r\n    <div style=\"height:480px; overflow-y: scroll\">\r\n      <table style=\"margin-bottom: 5px;font-size: 13px;width: 100%;\">\r\n        <thead>\r\n          <tr style=\" border-bottom: 2px solid #E6E6E6;\r\n                            border-top: 2px solid #E6E6E6;\r\n                            height: 30px;\r\n                            background: silver;\r\n                            color: black;\">\r\n            <th style=\"width: 2%;\">SNo.</th>\r\n\r\n            <th style=\"width:19%;padding-left: 1%;\">Customer Name</th>\r\n            <th style=\"width: 11%;padding-left: 1%;\">\r\n              Bill No\r\n            </th>\r\n            <th style=\"width:7%;padding-left: 1%;\">\r\n              Amount\r\n            </th>\r\n\r\n            <th style=\"width:11%;padding-left: 1%;\">\r\n              Payment Mode\r\n            </th>\r\n            <th style=\"width:17%;padding-left: 1%;\">\r\n              Cheque No\r\n            </th>\r\n\r\n            <th style=\"width:7%;padding-left: 1%;\">\r\n              Cheque Date\r\n            </th>\r\n\r\n            <th style=\"width:17%;padding-left: 1%;\">\r\n              Salesman\r\n            </th>\r\n          </tr>\r\n        </thead>\r\n        <tbody *ngFor=\"let i of DetailList;let x = index\" (click)=\"rowClick(x)\">\r\n          <tr style=\"border: 1px solid #e6e6e6;max-height:25px;\">\r\n            <td style=\"line-height:21px; text-align:center\">\r\n              {{x+1}}\r\n            </td>\r\n\r\n            <td style=\"line-height:21px; text-align:center\">\r\n              <input #customerInput id=\"ACCODEInput_Cust{{x}}\" type=\"text\" [(ngModel)]=\"i.customerName\"\r\n                style=\"height:24px;width: 95% !important;\" (keydown.Enter)=\"showAcList(i); customerInput.blur();\"\r\n                (keydown.Shift.Delete)=\"clearRow($event)\" placeholder=\"Press Enter to select\"\r\n                [disabled]=\"isViewMode || i.IsStatusOne == true\" autocomplete=\"off\">\r\n            </td>\r\n            <td style=\"line-height:21px; text-align:center\">\r\n              <input #Bill_Input id=\"BillInput{{x}}\" type=\"text\" [(ngModel)]=\"i.BillNo\" class=\"input_hight\"\r\n                style=\"height:24px;width: 94% !important;\" (keydown.Enter)=\"onBillShow(i); Bill_Input.blur();\"\r\n                (keydown.Shift.Delete)=\"clearRow($event)\" placeholder=\"Press Enter to select\"\r\n                [disabled]=\"isViewMode || i.IsStatusOne == true\" autocomplete=\"off\">\r\n            </td>\r\n            <td style=\"line-height:21px; text-align:center\">\r\n              <input id=\"amountInput{{x}}\" type=\"number\" [(ngModel)]=\"i.Amount\" class=\"input_hight\"\r\n                style=\"height:24px;float: right;width: 93% !important;padding-right: 0px;text-align: right;\"\r\n                (keydown.Enter)=\"focusPmode(i)\" (keydown.Shift.Delete)=\"clearRow($event)\"\r\n                [disabled]=\"isViewMode || i.IsStatusOne == true\" autocomplete=\"off\">\r\n            </td>\r\n            <td style=\"line-height:21px; text-align:center\">\r\n              <select id=\"PmodeInput{{x}}\" (keydown.Shift.Delete)=\"clearRow($event)\" [(ngModel)]=\"i.PaymentMode\"\r\n                class=\"input_hight\" style=\"height:24px\" (keydown.Shift.Delete)=\"clearRow($event)\" style=\"width: 100%;\r\n              height: 24px;\r\n              border: 0px;\r\n              margin: 2%;width: 93% !important\" [disabled]=\"isViewMode || i.IsStatusOne == true\"\r\n                (change)=\"ChangePMode($event)\" (keydown.Enter)=\"focusChequeNo(i)\">\r\n                <option>Cash</option>\r\n                <option>Cheque</option>\r\n                <option>Demand Draft</option>\r\n                <option>E-Payment</option>\r\n              </select>\r\n\r\n            </td>\r\n            <td style=\"line-height:21px; text-align:center\">\r\n              <input #chequeNo_Pay id=\"chequeNo_Pay{{x}}\" type=\"text\" [(ngModel)]=\"i.ChequeNo\" class=\"input_hight\"\r\n                style=\"height:24px;width: 90% !important\" (keydown.Shift.Delete)=\"clearRow($event)\"\r\n                (keydown.Enter)=\"focusChequeDate(i)\" (keydown.Tab)=\"focusChequeDate(i)\"\r\n                [disabled]=\"isViewMode || !i.isChequeMode || i.IsStatusOne == true\" autocomplete=\"off\">\r\n            </td>\r\n            <td style=\"line-height:21px; text-align:center\">\r\n              <input #chequeDate id=\"chequeDate{{x}}\" type=\"date\" [(ngModel)]=\"i.ChequeDate\" class=\"input_hight\"\r\n                style=\"height:24px;width: auto !important;\" (keydown.Enter)=\"focusSalesman(i)\"\r\n                (keydown.Tab)=\"focusSalesman(i)\" (keydown.Shift.Delete)=\"clearRow($event)\"\r\n                [disabled]=\"isViewMode || !i.isChequeMode || i.IsStatusOne == true\" autocomplete=\"off\">\r\n            </td>\r\n            <td style=\"line-height:21px; text-align:center\">\r\n              <input #sm_Pay id=\"sm_Pay{{x}}\" type=\"text\" [(ngModel)]=\"i.CostCenter\" (keydown.Tab)=\"checkValidation(i)\"\r\n                (focusin)=\"Focus_Salesman()\" (keydown.Enter)=\"EnterClick()\" style=\"height: 24px;width: 94% !important;\"\r\n                (keydown.Shift.Delete)=\"clearRow($event)\" placeholder=\"Press Enter to select\" autocomplete=\"off\"\r\n                [disabled]=\"isViewMode || i.IsStatusOne == true\">\r\n            </td>\r\n          </tr>\r\n\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"modal fade\" bsModal #ShowDate=\"bs-modal\" [config]=\"{backdrop: 'static'}\" tabindex=\"-1\" role=\"dialog\"\r\n  aria-labelledby=\"mySmallModalLabel\" aria-hidden=\"true\" style=\"margin:-100px;height:460px\">\r\n  <div class=\"modal-dialog modal-sm\">\r\n    <div class=\"modal-content\" style=\"width: 420px;\">\r\n      <div class=\"modal-header\">\r\n        <button class=\"close\" aria-label=\"Close\" (click)=\"ShoWdateClose()\">\r\n          <span aria-hidden=\"true\">&times;</span>\r\n\r\n        </button>\r\n        <h4 class=\"modal-title\">Date Info:</h4>\r\n      </div>\r\n      <div class=\"modal-body\">\r\n        <div class=\"row\">\r\n          <div class=\"col-md-12\" style=\"margin-top: -25px;margin-bottom: 12px;\">\r\n            <label class=\"col\">Please select Date:</label>\r\n\r\n            <input class=\"col\" style=\"width:43% !important;padding:0px !important;\" type=\"date\"\r\n              [(ngModel)]=\"SelectedPopupDate\">\r\n          </div>\r\n          <div class=\"col-md-12\">\r\n            <button (click)=\"ShowDateOk()\" style=\"margin-right: 4px;\" class=\"btn btn-danger \">Yes</button>\r\n            <button (click)=\"ShoWdateClose()\" type=\"button \" class=\"btn btn-warning\">No</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n\r\n<generic-popup-grid #genericGridACList [popupsettings]=\"gridACListPopupSettings\"\r\n  (onItemDoubleClick)=\"onAcSelect($event)\"></generic-popup-grid>\r\n\r\n<generic-popup-grid #genericVchrnoList [popupsettings]=\"gridvchrnoListPopupSettings\"\r\n  (onItemDoubleClick)=\"onVchrnoSelect($event)\"></generic-popup-grid>\r\n\r\n<generic-popup-grid #genericeSalesManList [popupsettings]=\"gridCostSalesManPopupSetting\"\r\n  (onItemDoubleClick)=\"onSalesManSelect($event)\"></generic-popup-grid>\r\n\r\n<generic-popup-grid #genericGrid [popupsettings]=\"gridPopupSettings\" (onItemDoubleClick)=\"onItemDoubleClick($event)\">\r\n</generic-popup-grid>"

/***/ }),

/***/ 1315:
/***/ (function(module, exports) {

module.exports = "<style>\r\n    .sectionWrapper{\r\n      display: flex;\r\n      flex-direction: column;\r\n      height: 94vh;\r\n    }\r\n\r\n .midTableWrapper{\r\n  flex: 1; \r\n  overflow: auto;\r\n  overflow-x:hidden;\r\n}\r\n.footer-wrapper {\r\n  background: lightgreen;\r\n  min-height: 87px;\r\n}\r\n\r\n\r\n  </style>\r\n<div class=\"sectionWrapper\">\r\n\r\n  <div class=\"topWwrapper\">\r\n    <div class=\"sticky-top\">\r\n  <div class=\"clearfix\">\r\n    <div class=\"col-md-1\">\r\n      <voucher-master-toggler></voucher-master-toggler>\r\n    </div>\r\n    <div class=\"col-md-4\">\r\n      <label style=\"font-family: Segoe UI Light;font-weight: bold;font-size: 20px;padding-left: 5%;padding-top: 1%;\">{{\r\n        _trnMainService.pageHeading }}</label>\r\n      <label style=\"font-size: 14px;\">&nbsp;>> {{ _trnMainService.TrnMainObj?.Mode | titlecase}} Voucher</label>\r\n    </div>\r\n    <div class=\"col-md-7\">\r\n      <account-master-action (onBillTrackEmit)=\"BillTrack()\"></account-master-action>\r\n    </div>\r\n  </div>\r\n</div>\r\n<!-- <div class=\"main-container\" style=\"margin-bottom: 0;\"> -->\r\n  <div class=\"clearfix\"  style=\"margin-top: 29px;\">\r\n    <trnmain-voucher-entry></trnmain-voucher-entry>\r\n  </div>\r\n\r\n\r\n\r\n  <!-- </div> -->\r\n  \r\n  </div>\r\n   <div class=\"midTableWrapper\">\r\n\r\n      <div class=\"clearfix\" style=\"margin-top: 5px\">\r\n    <trntran-voucher-entry #trnmainentry></trntran-voucher-entry>\r\n  </div>\r\n\r\n   </div>\r\n<div class=\"footer-wrapper\" style=\"background: gray;\">\r\n  <account-voucher-summary></account-voucher-summary>\r\n</div>\r\n\r\n</div>\r\n\r\n<multiple-series [voucherType]=\"voucherType\"></multiple-series>"

/***/ }),

/***/ 1316:
/***/ (function(module, exports) {

module.exports = "<div class=\"sticky-top\">\r\n  <div class=\"clearfix\">\r\n    <div class=\"col-md-1\">\r\n      <voucher-master-toggler></voucher-master-toggler>\r\n    </div>\r\n    <div class=\"col-md-4\">\r\n      <label style=\"font-family: Segoe UI Light;font-weight: bold;font-size: 20px;padding-left: 5%;padding-top: 1%;\">{{\r\n        _trnMainService.pageHeading }}</label>\r\n      <label style=\"font-size: 14px;\">&nbsp;>> {{ _trnMainService.TrnMainObj?.Mode | titlecase}} Voucher</label>\r\n    </div>\r\n    <div class=\"col-md-7\">\r\n      <account-master-action></account-master-action>\r\n    </div>\r\n  </div>\r\n</div>\r\n<div class=\"main-container\">\r\n  <div class=\"clearfix\">\r\n    <trnmain-voucher-entry></trnmain-voucher-entry>\r\n  </div>\r\n  <div class=\"clearfix\" style=\"margin-top: 5px\">\r\n    <trntran-voucher-entry></trntran-voucher-entry>\r\n  </div>\r\n</div>\r\n<div class=\"sticky-bottom\" *ngIf='_trnMainService.TrnMainObj.VATBILL == 1' style=\"background: gray;\">\r\n  <account-voucher-summary></account-voucher-summary>\r\n</div>\r\n<div class=\"sticky-bottom\" *ngIf='_trnMainService.TrnMainObj.VATBILL == 0' style=\"background: gray;\">\r\n  <DrCrFooter_With_VAT></DrCrFooter_With_VAT>\r\n</div>\r\n<multiple-series [voucherType]=\"voucherType\"></multiple-series>"

/***/ }),

/***/ 1317:
/***/ (function(module, exports) {

module.exports = "<!-- <div style=\"background: #e2eaea !important; height: 40px;\"  class=\"clearfix\" >\r\n  <label\r\n    style=\"\r\n    font-family: Segoe UI Light;\r\n    font-weight: bold;\r\n    font-size: 20px;\r\n    padding-left: 5%;\r\n    padding-top: 1%;\r\n    \"\r\n    >PARTY BALANCE CONFIRMATION</label>\r\n    <button style=\"margin-top: 9px; margin-right: 59px;\" class=\"btn btn-info pull-right\" (click)='reSet()'> Reset</button>\r\n\r\n</div> -->\r\n\r\n<div class=\"clearfix\" style=\"background: #e2eaea !important; height: 40px;\">\r\n  <div>\r\n    <div class=\"col-md-4\">\r\n      <!-- <h2 style=\"color: black;\">Bank Reconciliation </h2> -->\r\n      <label\r\n        style=\"font-family: Segoe UI Light;font-weight: bold;font-size: 20px;padding-left: 5%;padding-top: 3%;width: 100%;\">Account\r\n        HeadingWise Depreciation Detail\r\n      </label>\r\n    </div>\r\n    <div class=\"col-md-4\">\r\n\r\n    </div>\r\n    <div class=\"col-md-4\" style=\"margin-top:8px;\">\r\n      <button style=\"margin: 0px 4px;\" class=\"btn btn-info pull-right\" (click)=\"reSet()\">\r\n        Reset\r\n      </button>\r\n      <button class=\"btn btn-info pull-right\" (click)=\"onPrintClicked()\"> Print</button>\r\n      <!-- <button class=\"btn btn-info pull-right\" (click)=\"SelectDate()\">\r\n      View\r\n    </button> -->\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n\r\n<style>\r\n  input {\r\n    height: 25px;\r\n    vertical-align: middle;\r\n    font-size: 13px;\r\n    border: 1px solid #cbcbcb;\r\n    border-radius: 3px;\r\n    color: black;\r\n    padding-left: 4px;\r\n  }\r\n\r\n  label {\r\n    font-family: Roboto, Arial, sans-serif;\r\n    font-size: 14px;\r\n  }\r\n\r\n  legend {\r\n    font-family: Roboto, Arial, sans-serif;\r\n    font-size: 14px;\r\n    width: 0;\r\n\r\n  }\r\n\r\n  .date {\r\n    margin-left: 8px;\r\n  }\r\n</style>\r\n\r\n<div class=\"col-md-12\" style=\"border-bottom: 1px solid #828080;\r\n        margin-top:10px;\r\n        margin-bottom: 5px;\r\n        padding-bottom: 10px;\r\n        background: #e2eaea; padding-top: 9px;\r\n        width: 100%;\r\n       \">\r\n\r\n  <div style=\"display: flex;\">\r\n    <div class=\"col-md-3\">\r\n      <label>From:</label>\r\n      <input placeholder=\"Year Start Date\" style=\"width:128px; height:24px;\" type=\"date\"\r\n        [(ngModel)]=\"PartyBalanceData.DATE1\" (change)=\"changeEntryDate($event.target.value,'AD')\">&nbsp;A.D &nbsp;\r\n\r\n      <div style=\" width: 134px;margin-left: 202px; margin-top: -29px;\">\r\n        <nepali-date-picker name=\"nepaliDateFrom\" [id]=\"'nepaliDatefrom'\"\r\n          (change)=\"changeEntryDate($event.detail.value,'BS')\" [label]=\"'dd/mm/yyyy'\"\r\n          [(ngModel)]=\"PartyBalanceData.BSDATE1\">\r\n        </nepali-date-picker>\r\n      </div>\r\n      <!-- <input  autocomplete=\"off\" id=\"nepaliDate\" placeholder=\"yyyy-mm-dd\"type=\"text\"\r\n        [(ngModel)]=\"PartyBalanceData.BSDATE1\" style=\"width: 90px;\" type=\"text\"\r\n        (change)=\"changeEntryDate($event.target.value,'BS')\">&nbsp;B.S\r\n        &nbsp; -->\r\n    </div>\r\n    <div class=\"col-md-3\" style=\"margin-top: 8px;\">\r\n      <label><input type=\"radio\" name=\"partytype\" [(ngModel)]=\"PartyBalanceData.PARTYTYPE\" value=C\r\n          (change)=\"parttypeChange()\">&nbsp;Customer</label>\r\n      <label><input type=\"radio\" name=\"partytype\" [(ngModel)]=\"PartyBalanceData.PARTYTYPE\" value=V\r\n          (change)=\"parttypeChange()\">&nbsp;Supplier</label>\r\n    </div>\r\n    <div class=\"col-md-5\" style=\"margin-top: 8px;\">\r\n      <label class=\"smallBoldLabel\"><input type=\"checkbox\" name=\"transaction\"\r\n          [(ngModel)]=\"PartyBalanceData.INCLUDECASHTRANSACTION\" (change)=\"$event.target.checked\r\n          ? (PartyBalanceData.INCLUDECASHTRANSACTION = 1)\r\n          : (PartyBalanceData.INCLUDECASHTRANSACTION = 0)\">&nbsp;Including Cash Transaction</label>\r\n    </div>\r\n  </div>\r\n  <div class=\"col-md-3\" style=\"margin-top: 4px;\">\r\n    <label>To :</label>\r\n    <input placeholder=\"Year Start Date\" type=\"date\" style=\"width: 128px; height: 24px; margin-left: 13px;\"\r\n      [(ngModel)]=\"PartyBalanceData.DATE2\" (change)=\"changeEndDate($event.target.value,'AD')\">&nbsp;A.D &nbsp;\r\n\r\n    <div style=\" width: 134px;margin-left: 202px; margin-top: -29px;\">\r\n      <nepali-date-picker name=\"nepaliDateFrom\" [id]=\"'nepaliDateto'\" (change)=\"changeEndDate($event.detail.value,'BS')\"\r\n        [label]=\"'dd/mm/yyyy'\" [(ngModel)]=\"PartyBalanceData.BSDATE2\">\r\n      </nepali-date-picker>\r\n    </div>\r\n    <!-- <input class=\"date\" autocomplete=\"off\" id=\"nepaliDate\" placeholder=\"yyyy-mm-dd\" type=\"text\"\r\n        [(ngModel)]=\"PartyBalanceData.BSDATE2\" type=\"text\" style=\"width: 90px;\"\r\n        (change)=\"changeEndDate($event.target.value,'BS')\">&nbsp;B.S -->\r\n    &nbsp;\r\n  </div>\r\n  <div class=\"col-md-3\" style=\"margin-top: 8px;\">\r\n    <label>Cost Center :</label>\r\n    <select id=\"costcenter\" [(ngModel)]=\"PartyBalanceData.COSTCENTER\" style=\"width: 60%;height: 21px;\r\n          padding-left: 14px;\">\r\n      <option [ngValue]=\"\"></option>\r\n      <option *ngFor=\"let c of costlists\" [ngValue]=\"c.CCID\">\r\n        {{ c.COSTCENTERNAME }}</option>\r\n    </select>\r\n  </div>\r\n  <div class=\"col-md-4\" style=\"margin-top: 9px;\">\r\n    <div>\r\n      <label style=\"margin-right:1%;\">Party Account:</label>\r\n      <input style=\"height: 25px; margin-left: 1%; width: 74%;\" (keydown.Enter)=\"showAcList(i);\" name=\"customerName\"\r\n        [(ngModel)]=\"PartyBalanceData.CUSTOMERNAME\" type=\"text\" placeholder=\"Press Enter to select\" autocomplete=\"off\">\r\n    </div>\r\n  </div>\r\n  <div class=\"col-md-1\" style=\"margin-top: 6px;\">\r\n    <button class=\"btn btn-info pull-left\" (click)='onLoad()'> Load</button>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"col-md-12\">\r\n  <!-- <div class=\"col-md-8\" style=\"margin-top: 5px;\">\r\n      <div>\r\n      <label>Prepared By:</label>\r\n      <label style=\"margin-left: 15px;\">Name:</label>\r\n      <input  [(ngModel)]=\"Name\" id=\"Name0\" type=\"text\">\r\n\r\n      <label style=\"margin-left:30px;\">Designation:</label>\r\n        <input [(ngModel)]=\"Designation\" id=\"destination\" type=\"text\">\r\n      </div>\r\n    </div> -->\r\n  <!-- <fieldset style=\"height: 89px; width:113%\">\r\n      <legend>Prepared By:</legend>\r\n      <div >\r\n        <label>Name:</label>\r\n        <input style=\"width: 79%; margin-left:9.3%\"  type=\"text\">\r\n      </div>\r\n      <div>\r\n        <label>Designation:</label>\r\n        <input style=\"width:79%; margin-left: 1%;\"  type=\"text\">\r\n      </div>\r\n  </fieldset>\r\n</div> -->\r\n  <div class=\"col-md-3\"></div>\r\n\r\n\r\n  <div class=\"col-md-1\">\r\n    <!-- <button\r\n      *ngIf=\"_trnMainService.TrnMainObj.Mode == 'VIEW'  &&\r\n    !showSecondaryButtons && _trnMainService.TrnMainObj.VoucherType==12 && _trnMainService.TrnMainObj.VoucherType==15|| _trnMainService.TrnMainObj.VoucherType==16 || _trnMainService.TrnMainObj.VoucherType!=3 \"\r\n      [ngClass]=\"changeCursor==true?'PrintPending':'PrintDone'\" (click)=\"onPrintClicked()\" class=\"btn btn-info pull-right\" [disabled]=\"_trnMainService.TrnMainObj.Mode == 'NEW' || _trnMainService.TrnMainObj.Mode == 'EDIT'\" >\r\n      F8 PRINT\r\n    </button> -->\r\n    <!-- <button class=\"btn btn-info pull-left\" (click)=\"onPrintClicked()\"> Print</button> -->\r\n  </div>\r\n</div>\r\n\r\n\r\n<style>\r\n  table {\r\n    border-collapse: collapse;\r\n  }\r\n\r\n  td {\r\n    /* border: 2px solid #000000; */\r\n    height: 24px;\r\n  }\r\n\r\n  th {\r\n    font-weight: bold;\r\n    font-family: Roboto, Arial, sans-serif;\r\n    text-align: center;\r\n  }\r\n</style>\r\n\r\n\r\n<!-- **************table****************** -->\r\n\r\n<div style=\"margin-top: 100px\">\r\n  <div style=\"height: 480px;\">\r\n    <table style=\"margin-bottom: 5px; font-size: 13px; width: 100%\">\r\n      <thead>\r\n        <tr style=\"\r\n            border-bottom: 2px solid #e6e6e6;\r\n            border-top: 2px solid #e6e6e6;\r\n            height: 30px;\r\n            background: silver;\r\n            color: black;\">\r\n\r\n          <th style=\"width: 1%\">SNo.</th>\r\n          <th style=\"width: 19%; padding-left: 1%\">Account Heading</th>\r\n          <th style=\"width: 7%; padding-left: 1%\">Depreciation Rate (%)</th>\r\n          <th style=\"width: 7%; padding-left: 1%\">Cost Value</th>\r\n          <th style=\"width: 7%; padding-left: 1%\">Current Book Value</th>\r\n          <th style=\"width: 7%; padding-left: 1%\">Depreciation</th>\r\n          <th style=\"width: 7%; padding-left: 1%\">Net Book Value</th>\r\n\r\n        </tr>\r\n      </thead>\r\n      <tbody *ngFor=\"let i of PartyInfo\">\r\n\r\n        <tr style=\"border: 1px solid #e6e6e6;max-height:25px;\">\r\n\r\n          <td style=\"line-height: 21px; text-align: center; border: 1px solid #e6e6e6; \">\r\n            {{i.SNO}}\r\n          </td>\r\n\r\n          <td style=\"line-height: 21px; text-align: center; border: 1px solid #e6e6e6;\">\r\n            <input style=\"height: 25px; width: 100%\" [(ngModel)]=\"i.PARTICULAR\" readonly />\r\n          </td>\r\n          <td style=\"line-height: 21px; text-align: center; border: 1px solid #e6e6e6;\">\r\n            <input style=\"height: 25px; width: 100%\" [(ngModel)]=\"i.OPERATION\" readonly />\r\n          </td>\r\n          <td style=\"line-height: 21px; text-align: center; border: 1px solid #e6e6e6;\">\r\n            <input style=\"height: 25px; text-align: right; width: 100% \" [(ngModel)]=\"i.AMOUNT\" readonly />\r\n          </td>\r\n\r\n        </tr>\r\n      </tbody>\r\n      <!-- <ng-container *ngIf=\"PartyInfo.length == 0\">\r\n        <tbody style=\"background:#e2eaea;\">\r\n          <tr>\r\n            <td colspan=\"4\">\r\n              Party Info is Empty.\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </ng-container> -->\r\n    </table>\r\n  </div>\r\n</div>\r\n\r\n\r\n<generic-popup-grid #genericGridACList [popupsettings]=\"gridACListPopupSettings\"\r\n  (onItemDoubleClick)=\"onAcSelect($event)\"></generic-popup-grid>"

/***/ }),

/***/ 1318:
/***/ (function(module, exports) {

module.exports = "<style>\r\n    .sectionWrapper{\r\n      display: flex;\r\n      flex-direction: column;\r\n      height: 94vh;\r\n    }\r\n\r\n .midTableWrapper{\r\n  flex: 1; \r\n  overflow: auto;\r\n  overflow-x:hidden;\r\n}\r\n.footer-wrapper {\r\n  background: lightgreen;\r\n  min-height: 87px;\r\n}\r\n.main-container{\r\n  margin-bottom: 0 !important;\r\n}\r\n\r\n</style>\r\n\r\n<div class=\"sectionWrapper\">\r\n    <div class=\"topWwrapper\">\r\n      <div class=\"sticky-top\">\r\n    <div class=\"clearfix\">\r\n      <div class=\"col-md-1\">\r\n        <voucher-master-toggler></voucher-master-toggler>\r\n      </div>\r\n      <div class=\"col-md-4\">\r\n        <!-- <h2 style=\"color: black;font-size: 18px;  \">{{ _trnMainService.pageHeading}}[{{this._trnMainService.TrnMainObj?.Mode}}]</h2> -->\r\n        <label style=\"font-family: Segoe UI Light;font-weight: bold;font-size: 20px;padding-left: 5%;padding-top: 1%;\">{{ _trnMainService.pageHeading }}</label>\r\n        <label style=\"font-size: 14px;\">&nbsp;>> {{ _trnMainService.TrnMainObj?.Mode | titlecase}} Voucher</label>\r\n      </div>\r\n      <div class=\"col-md-7\">\r\n        <opening-balance-action></opening-balance-action>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"main-container\">\r\n    <div class=\"clearfix\"> \r\n      <trnmain-voucher-entry></trnmain-voucher-entry> \r\n    </div>\r\n    \r\n  </div>\r\n\r\n    </div>\r\n    <div class=\"midTableWrapper\">\r\n      <div class=\"clearfix\" style=\"margin-top: 5px\">\r\n      <trntran-voucher-entry></trntran-voucher-entry>\r\n    </div>\r\n    </div>\r\n    <div class=\"footer-wrapper\" style=\"background: gray;\">\r\n      <account-voucher-summary></account-voucher-summary>\r\n  </div>\r\n</div>\r\n\r\n\r\n\r\n  \r\n  "

/***/ }),

/***/ 1319:
/***/ (function(module, exports) {

module.exports = "<style>\r\n  .table tr th {\r\n    text-align: center;\r\n    vertical-align: middle;\r\n  }\r\n\r\n  tr {\r\n    border: 1px solid #e6e6e6;\r\n    max-height: 25px;\r\n  }\r\n\r\n  td {\r\n    height: 23px;\r\n    border: 1px solid #e6e6e6;\r\n\r\n  }\r\n\r\n  .bottom {\r\n    position: fixed;\r\n    bottom: 20px;\r\n    left: 0px;\r\n    width: 100%;\r\n    height: 135px;\r\n    z-index: 999997;\r\n    /* background: #e2eaea !important; */\r\n  }\r\n\r\n</style>\r\n\r\n\r\n<div class=\"sticky-top\">\r\n  <div class=\"clearfix\">\r\n    <div class=\"col-md-1\">\r\n      <voucher-master-toggler></voucher-master-toggler>\r\n    </div>\r\n    <div class=\"col-md-4\">\r\n      <!-- <h2 style=\"color: black;\">Bank Reconciliation </h2> -->\r\n      <label style=\"font-family: Segoe UI Light;font-weight: bold;font-size: 20px;padding-left: 5%;padding-top: 1%;width: 100%;\">BANK RECONCILIATION</label>\r\n    </div>\r\n    <div class=\"col-md-7\">\r\n      <button (click)=\"onBackClicked()\" style=\"margin: 0px 4px;\" class=\"btn btn-info pull-right\">\r\n        BACK\r\n    </button>\r\n      <button (click)=\"onLoadClick()\" style=\"margin: 0px 4px;\" class=\"btn btn-info pull-right\">\r\n        LOAD\r\n      </button>\r\n      <button (click)=\"onSaveClick()\" style=\"margin: 0px 4px;\" class=\"btn btn-info pull-right\">\r\n        SAVE\r\n      </button>\r\n\r\n      <button (click)=\"onExportClick()\" style=\"margin: 0px 4px;\" class=\"btn btn-info pull-right\">\r\n        EXPORT\r\n      </button>\r\n\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"main-container\">\r\n  <div [hidden]=\"!masterService.ShowMore\" class=\"clearfix\">\r\n\r\n    <div class=\"row col-md-12\" style=\"margin: 8px 15px ; border: 1px solid #e6e6e6; \">\r\n\r\n      <!-- <div class=\"col-md-4\">\r\n        <div class=\"row\">\r\n          <label style=\"width:30%\">Date </label>\r\n          <input style=\"width:60%\" type=\"text\" ngxDaterangepickerMd [(ngModel)]=\"selectedDate\" [showDropdowns]=\"true\"\r\n            [showCustomRangeLabel]=\"true\" [alwaysShowCalendars]=\"true\" [locale]=\"locale\" [ranges]=\"ranges\"\r\n            [linkedCalendars]=\"true\" [showCancel]=\"true\" placeholder=\"Date Range...\"\r\n            (ngModelChange)=\"dateChanged($event)\" />\r\n        </div>\r\n      </div> -->\r\n\r\n      <div class=\"col-md-4\">\r\n        <label>From:</label>\r\n        <input  placeholder=\"Year Start Date\" style=\"width:128px; height: 30px;\" type=\"date\"\r\n        (change)=\"changeEntryDate($event.target.value,'AD')\" [(ngModel)]=\"bankReconciliationObj.DATE1\">&nbsp;&nbsp;\r\n\r\n        <div style=\" width: 134px;margin-left: 260px; margin-top: -29px;\">\r\n          <nepali-date-picker name=\"nepaliDateFrom\" [id]=\"'nepaliDatefrom'\"\r\n            (change)=\"changeEntryDate($event.detail.value,'BS')\"\r\n            [label]=\"'dd/mm/yyyy'\"  [(ngModel)]=\"bankReconciliationObj.BSDATE1\">\r\n            </nepali-date-picker>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-md-4\">\r\n        <div class=\"row\">\r\n          <label style=\"width:30%\">Bank Account </label>\r\n          <input type=\"text\" style=\"width:60%\" id=\"BankAccount\" name=\"Bank_Acccount\"\r\n            (keydown.tab)=\"onBankReconciliationPopUPTab()\" (keydown.enter)=\"onBankReconciliationPopUPTab()\"\r\n            [(ngModel)]=\"bankReconciliationObj.ACNAME\" placeholder=\"Press ENTER or TAB to Account Name\" autocomplete=\"off\"/>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"col-md-4\">\r\n        <div class=\"checkbox\">\r\n          <label style=\"width:95%\"><input type=\"checkbox\" [(ngModel)]=\"bankReconciliationObj.SHOWRECONSILLED\"\r\n              name=\"ReconciledRecord\">Show Reconciled Record Also </label>\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n    <div class=\"row col-md-12\">\r\n      <!-- <div class=\"col-md-4\">\r\n        <div class=\"row\">\r\n          <div class=\"col-sm-5\"><label>Division:</label></div>\r\n          <div class=\"col-sm-7\">\r\n            <select class=\"form-control input-text\" [(ngModel)]=\"bankReconciliationObj.DIV\"\r\n            (change)=\"onDivisionChanged()\">\r\n            <option value=\"%\"></option>\r\n            <option *ngFor=\"let div of division\" value=\"{{ div.INITIAL }}\">\r\n              {{ div.NAME }}\r\n            </option>\r\n          </select> \r\n          </div>\r\n       </div>\r\n      </div> -->\r\n\r\n      <div class=\"col-md-4\" style=\"margin-left:30px;\">\r\n        <label>To :</label>\r\n        <input   placeholder=\"Year End Date\" type=\"date\" style=\"width: 128px; height: 30px;\"\r\n        (change)=\"changeEndDate($event.target.value,'AD')\"  [(ngModel)]=\"bankReconciliationObj.DATE2\">&nbsp;&nbsp;\r\n\r\n        <div style=\" width: 134px;margin-left: 260px; margin-top: -29px;\">\r\n          <nepali-date-picker name=\"nepaliDateTo\" [id]=\"'nepaliDateto'\"\r\n            (change)=\"changeEndDate($event.detail.value,'BS')\"\r\n            [label]=\"'dd/mm/yyyy'\"  [(ngModel)]=\"bankReconciliationObj.BSDATE2\">\r\n            </nepali-date-picker>\r\n        </div>\r\n        &nbsp;\r\n      </div>\r\n\r\n      \r\n\r\n    </div>\r\n  </div>\r\n  <div class=\"clearfix\" style=\"margin-top: 5px\">\r\n    <div class=\"col-md-12\" style=\"height:325px;overflow-y:scroll\">\r\n      <div class=\"header\" style=\"position: sticky;top:0\">\r\n        <table style=\"width: 100%;table-layout: fixed\">\r\n          <thead>\r\n            <tr style=\"border-bottom: 1px solid #E6E6E6; border-top: 1px solid #E6E6E6;    height: 25px;\r\n                            background:#C0C0C0;\r\n                            color: black;\">\r\n              <!-- <th style=\"width:55px\"></th> -->\r\n              <th style=\"width:108px\">Date </th>\r\n              <th style=\"width:195px\">Particular </th>\r\n              <th style=\"width:190px\">Voucher Number </th>\r\n              <th style=\"width:192px\">Voucher Type </th>\r\n              <th style=\"width:120px\">Cheque No </th>\r\n              <th style=\"width:100px\">Cheque Date </th>\r\n              <th style=\"width:130px\">Bank Date </th>\r\n              <th style=\"width:115px\">Debit</th>\r\n              <th style=\"width:110px\">Credit </th>\r\n            </tr>\r\n          </thead>\r\n        </table>\r\n      </div>\r\n      <table style=\"width: 100%;\">\r\n\r\n        <tbody style=\"border: 1px;\">\r\n          <tr *ngFor=\"let item of reconcileList; let in=index\">\r\n            <!-- <td style=\"width: 55px;\">\r\n              <input type=\"checkbox\" #check id=\"checkBox{{in}}\" (change)=\"itemChecked($event,in)\">\r\n            </td> -->\r\n\r\n            <td style=\"width: 110px;\">\r\n              {{item?.TRNDATE|date:'dd/MM/yyyy' }}\r\n            </td>\r\n\r\n\r\n\r\n            <td style=\"width: 195px;\">\r\n              {{item?.PARTICULARS }}\r\n            </td>\r\n\r\n            <td style=\"width: 195px;\">\r\n              {{item?.VNO }}\r\n            </td>\r\n\r\n            <td style=\"width: 195px;\">\r\n              {{item?.VCHRTYPE }}\r\n            </td>\r\n\r\n            <td style=\"width:120px;\">\r\n              {{item?.CHEQUENO  }}\r\n            </td>\r\n\r\n            <td style=\"width:100px;\">\r\n              {{item?.CHEQUEDATE|date:'dd/MM/yyyy' }}\r\n            </td>\r\n\r\n            <td style=\"width:115px;\">\r\n\r\n                <ims-date-picker (keyup.enter)=\"KeyUpMethod(in)\"   (onDateChange)=\"setBankDate($event,in)\" [index]=\"'bankDate'+in\"\r\n                  [date]=\"getBankDate(in)\" [ID]=\"in\"></ims-date-picker>\r\n            </td>\r\n\r\n\r\n            <td style=\"width:115px;text-align: right\">\r\n              {{item?.DRAMNT | twoDigitNumber}}\r\n            </td>\r\n\r\n            <td style=\"width:115px;text-align: right;\">\r\n              {{item?.CRAMNT | twoDigitNumber}}\r\n            </td>\r\n\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n\r\n    </div>\r\n\r\n  </div>\r\n</div>\r\n<div class=\"bottom\">\r\n  <div class=\"col-md-12\">\r\n\r\n    <table class=\"table\" style=\"height: 100px; text-align:right; background:#C0C0C0;\">\r\n      <thead style=\"border: 1px solid #e6e6e6; \">\r\n        <ng-container *ngIf=\"showCompanybook == true;\">\r\n          <tr *ngFor=\"let item of balanceAsPerCompanyBook;\">\r\n            <td style=\"padding: 5px 0px; text-align: right; font-size: 12px; font-weight: bold; padding-right: 10px;\">\r\n              Balance As per Company Book </td>\r\n            <td style=\"padding: 5px 0px; text-align: right; padding-right: 10px;font-weight: 600;font-size:12px; \">\r\n              {{ !this.reconcileList  ?'0.00':(item.DRAMNT | twoDigitNumber) }}</td>\r\n            <td style=\"padding: 5px 0px; text-align: right; padding-right: 10px;font-weight: 600;font-size:12px; \">\r\n              {{ !this.reconcileList  ?'0.00':(item.CRAMNT | twoDigitNumber) }}</td>\r\n          </tr>\r\n        </ng-container>\r\n        <ng-container *ngIf=\"showCompanybook == false;\">\r\n          <tr>\r\n            <td style=\"padding: 5px 0px; text-align: right; font-size: 12px; font-weight: bold; padding-right: 10px;\">\r\n              Balance As per Company Book </td>\r\n            <td style=\"padding: 5px 0px; text-align: right; padding-right: 10px;font-size:12px; font-weight: 600;\">0.00\r\n            </td>\r\n            <td style=\"padding: 5px 0px; text-align: right; padding-right: 10px;font-size:12px; font-weight: 600;\">0.00\r\n            </td>\r\n          </tr>\r\n        </ng-container>\r\n\r\n\r\n      </thead>\r\n      <tbody style=\"border: 1px;\">\r\n\r\n        <ng-container *ngIf=\"reflectedBank == true;\">\r\n          <tr *ngFor=\"let item of amountNotReflectedOnBank;\" style=\"font-size: 11px;\">\r\n            <td style=\"line-height: 15px;padding: 5px 0px;text-align: right; font-size:12x;font-weight: bold; \">Amount\r\n              Not\r\n              Reflected on Bank(opening) </td>\r\n            <td style=\"line-height: 15px;padding: 5px 10px;text-align: right;font-size:12x;font-weight: bold; \">\r\n              {{ parseFloat(item.DRAMNT)  | twoDigitNumber }}\r\n            </td>\r\n            <td style=\"line-height: 15px;padding: 5px 10px;text-align: right;font-size:12x;font-weight: bold; \">\r\n              {{ parseFloat(item.CRAMNT)  | twoDigitNumber}}\r\n            </td>\r\n          </tr>\r\n        </ng-container>\r\n        <ng-container *ngIf=\"reflectedBank == false;\">\r\n          <tr style=\"font-size: 12px;\">\r\n            <td style=\"line-height: 15px;padding: 5px 10px;text-align: right; font-size:12x;font-weight: bold; \">Amount\r\n              Not\r\n              Reflected on Bank(opening) </td>\r\n            <td style=\"line-height: 15px;padding: 5px 10px;text-align: right;font-size:12x;font-weight: bold; \">0.00\r\n            </td>\r\n            <td style=\"line-height: 15px;padding: 5px 10px;text-align: right;font-size:12x;font-weight: bold; \">0.00\r\n            </td>\r\n          </tr>\r\n        </ng-container>\r\n\r\n\r\n\r\n        <tr style=\"font-size: 12px;\">\r\n          <td style=\"line-height: 15px;padding: 5px 10px; text-align: right;font-size:12x;font-weight: bold; \">Amount\r\n            Not\r\n            Reflected on Bank (Periodic) </td>\r\n          <td style=\"line-height: 15px;padding: 5px 10px; text-align: right;font-size:12x;font-weight: bold; \">\r\n            {{!this.reconcileList ?'0.00':(notReflectedonBankDebit | twoDigitNumber) }} </td>\r\n          <td style=\"line-height: 15px;padding: 5px 10px; text-align: right;font-size:12x;font-weight: bold; \">\r\n            {{!this.reconcileList ?'0.00':(notReflectedonBankCredit | twoDigitNumber)}} </td>\r\n        </tr>\r\n\r\n        <tr style=\"font-size: 12px;\">\r\n          <td style=\"line-height: 15px;padding: 5px 10px; text-align: right;font-size:12x;font-weight: bold; \">Balance\r\n            As Per\r\n            Bank Book </td>\r\n          <td style=\"line-height: 15px;padding: 5px 10px; text-align: right;font-size:12x;font-weight: bold; \">\r\n            {{!this.reconcileList ?'0.00': (balanceAsPerBankDebit | twoDigitNumber)}} </td>\r\n          <td style=\"line-height: 15px;padding: 5px 10px; text-align: right;font-size:12x;font-weight: bold; \">\r\n            {{!this.reconcileList ?'0.00': (balanceAsperBankCredit | twoDigitNumber) }}</td>\r\n        </tr>\r\n\r\n        <tr style=\"font-size: 12px;\">\r\n          <td style=\"line-height: 15px;padding: 5px 10px; text-align: right;font-size:12x;font-weight: bold; \">\r\n            Difference</td>\r\n          <td style=\"line-height: 15px;padding: 5px 10px; text-align: right;font-size:12x;font-weight: bold; \">\r\n            {{!this.reconcileList?'0.00': (differenceDebit | twoDigitNumber)}}</td>\r\n          <td style=\"line-height: 15px;padding: 5px 10px; text-align: right;font-size:12x;font-weight: bold; \">\r\n            {{!this.reconcileList?'0.00': (differenceCredit | twoDigitNumber) }}</td>\r\n        </tr>\r\n\r\n      </tbody>\r\n\r\n    </table>\r\n  </div>\r\n\r\n</div>\r\n\r\n<generic-popup-grid #bankReconciliationGeneric [popupsettings]=\"gridbankReconciliationPopupSettings\"\r\n  (onItemDoubleClick)=\"onItemDoubleClick($event)\">\r\n</generic-popup-grid>\r\n"

/***/ }),

/***/ 1320:
/***/ (function(module, exports) {

module.exports = "<style>\r\n  td {\r\n    border: 1px solid #e3e3e3;\r\n  }\r\n.radioLabel{\r\n  height: 28px;\r\n    font-weight: normal;\r\n    /* width: 90px; */\r\n    margin: 2px;\r\n    vertical-align: middle;\r\n    font-size: 13px;\r\n    padding-top: 4px;\r\n}\r\n</style>\r\n\r\n<div class=\"clearfix action-bar\" style=\"background-color: #E2EAEA;padding: 5px;\">\r\n  <div class=\"col-md-1\" style=\"padding-left: 0px;\">\r\n    <button class=\"btn btn-info\"\r\n      (click)=\"BillTrack.SHOWMORE=!BillTrack.SHOWMORE\">{{BillTrack.SHOWMORE?\"Hide Details\":\"Show Details\"}}[F1]</button>\r\n  </div>\r\n  <div class=\"col-md-3\">\r\n    <h3>Bill Tracking Amendment</h3>\r\n  </div>\r\n  <div class=\"col-md-8\">\r\n    <button class=\"btn btn-info pull-right\" (click)=\"saveBillTrack()\">Save</button>\r\n    <button class=\"btn btn-info pull-right\" style=\"margin-right: 5px;\" (click)=\"initialFormLoad()\">Reset</button>\r\n    <!-- <button class=\"btn btn-info pull-right\" style=\"margin-right: 5px;\" (click)=\"DeleteExeedTrack()\">Delete Exceed Tracking Entry</button> -->\r\n    <!-- <button class=\"btn btn-info pull-right\" style=\"margin-right: 5px;\" (click)=\"DoBillTrackFromBeg()\">Do Bill Tracking From The Beginning</button> -->\r\n  \r\n  </div>\r\n</div>\r\n\r\n\r\n<div class=\"clearfix\" *ngIf=\"BillTrack.SHOWMORE \">\r\n  <div style=\"margin:5px 0px 0px 0px ; border: 1px solid #e6e6e6; \">\r\n    <div class=\"col-md-8\">\r\n      <div class=\"col-md-12\" style=\"padding-left: 0px;\">\r\n        <!-- <div class=\"col-md-6\"> -->\r\n          <div class=\"row\">\r\n            <label style=\"width: 8.6%;margin-left: 2%;\">Party Type:</label>\r\n           \r\n              <input type=\"radio\" [(ngModel)]=\"BillTrack.PARTYTYPE\"  value=\"Customer\" name=\"Receipt\" (click)=\"OnPartyChange($event.target.value)\">  <a class=\"radioLabel\">Customer</a>\r\n              <a class=\"radioLabel\"><input type=\"radio\" [(ngModel)]=\"BillTrack.PARTYTYPE\"  value=\"Supplier\" name=\"Payment\" (click)=\"OnPartyChange($event.target.value)\" style=\"margin-left:12px\"> Supplier</a>\r\n              <label style=\"width: 47%; margin-left: 14%;\">\r\n                <input type=\"checkbox\" name=\"zero\" [(ngModel)]=\"BillTrack.trackBill\" (change)=\"OnTrackChange($event)\"> Track Bills From The Beginning\r\n              </label>\r\n              \r\n\r\n            \r\n          </div>\r\n        <!-- </div> -->\r\n        </div>\r\n        <!-- <div class=\"col-md-12\" style=\"padding-left: 0px;\"> -->\r\n        <!-- <div class=\"col-md-6\"> -->\r\n          <!-- <div class=\"row\">\r\n            <label style=\"width: 10%;margin-left: 2%\">Party Name:</label>\r\n            <input type=\"text\" style=\"width:34.5%\" id=\"partyname\" name=\"partyname\" (keydown)=\"onKeydownPrevent($event)\"\r\n              placeholder=\"Press Tab or Enter to select Party\" (keydown.enter)=\"selectParty()\" (keydown.tab)=\"selectParty()\"\r\n              [(ngModel)]=\"BillTrack.ACNAME\" />\r\n              \r\n              <button class=\"btn btn-info pull-right\" style=\"float: right;width: 9%;margin-right: 43%\" (click)=\"autoAdjust()\">Auto Adjust</button>\r\n              <button class=\"btn btn-info pull-right\" style=\"float: left;width: 9%;margin-right: 43%\" (click)=\"loadData()\">Load</button>\r\n          </div> -->\r\n<!-- \r\n        </div> -->\r\n        \r\n       \r\n      <!-- </div> -->\r\n\r\n      <div class=\"col-md-12\" style=\"padding-left: 0px;background: #f0f3f4;\">\r\n          <div class=\"col-md-4\"style=\"\r\n          margin-left: 4%;\">\r\n            <div class=\"row\">\r\n              <label style=\"width: 26%;margin-left: -12%;\">Party Name: </label>\r\n              <!-- <input type=\"text\" style=\"width:50%\" id=\"ledgerbl\" decimalPlacesRestriction=\"2\" name=\"ledgerbl\"\r\n                [(ngModel)]=\"BillTrack.LEDGERBALANCE\" readonly /> -->\r\n                <input type=\"text\" style=\"width: 80%;margin-left: 2%;\" id=\"partyname\" name=\"partyname\" (keydown)=\"onKeydownPrevent($event)\"\r\n                placeholder=\"Press Tab or Enter to select Party\" (keydown.enter)=\"selectParty()\" (keydown.tab)=\"selectParty()\"\r\n                [(ngModel)]=\"BillTrack.ACNAME\" autocomplete=\"off\"/>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-md-3\">\r\n            <div class=\"row\">\r\n              <button class=\"btn btn-info pull-right\" style=\"float: left;width: 38%;margin-right: 43%;\" (click)=\"loadData()\">Load</button>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-md-3\">\r\n            <div class=\"row\">\r\n              <button class=\"btn btn-info pull-right\" style=\"float: right;width: 45%;\" (click)=\"autoAdjust()\"[disabled]=\"this.autoAdjustValue==true\">Auto Adjust</button>\r\n\r\n            </div>\r\n          </div>\r\n        </div>\r\n \r\n      \r\n    </div>\r\n    <div class=\"col-md-4\" style=\"border-left: 1px solid silver;\">\r\n      <div class=\"col-md-12\" style=\"margin-top: 10%;\">\r\n        <div class=\"row\">\r\n          <label style=\"width:31%\">Tracking Amount</label>\r\n          <input type=\"text\" style=\"width:32%\" id=\"ledgerbl\" decimalPlacesRestriction=\"2\" name=\"ledgerbl\"\r\n            [(ngModel)]=\"BillTrack.LEDGERBALANCE\" readonly />\r\n            <!-- <input type=\"radio\" [(ngModel)]=\"BillTrack.isBulkTracking\"  value=\"1\" name=\"2\" (click)=\"BullTracking()\" style=\"margin-left: 4%;\">  <a class=\"radioLabel\">Bulk Tracking</a> -->\r\n        </div>\r\n      </div>\r\n    </div>\r\n \r\n  </div>\r\n</div>\r\n<div class=\"col-md-8\">\r\n<div class=\"clearfix\" style=\"margin-top: 5px;height: 400px;overflow-y: scroll;    /* border: 1px solid silver; */\r\nbackground-color: white;\">\r\n  <div class=\"header\" style=\"position: sticky;top:0\">\r\n    <div class=\"col-md-12\" style=\"padding-left: 0px;background: #f0f3f4;\">\r\n    <label style=\"background: #f0f3f4;padding-top: 0p;margin-top: 0px;margin-bottom: 0px;float: left;font-size: larger;\r\n    font-weight: bold;\r\n    width: auto;\">DUE BILL LISTS:</label>\r\n      <!-- <div class=\"col-md-3\"style=\"\r\n      margin-left: 4%;\">\r\n        <div class=\"row\">\r\n          <label style=\"width:37%\">Ledger B/L: </label>\r\n          <input type=\"text\" style=\"width:50%\" id=\"ledgerbl\" decimalPlacesRestriction=\"2\" name=\"ledgerbl\"\r\n            [(ngModel)]=\"BillTrack.LEDGERBALANCE\" readonly />\r\n        </div>\r\n      </div>\r\n      <div class=\"col-md-3\">\r\n        <div class=\"row\">\r\n          <label style=\"width:33%\">Due B/L: </label>\r\n          <input type=\"text\" style=\"width:50%\" name=\"duebl\" decimalPlacesRestriction=\"2\"\r\n            [(ngModel)]=\"BillTrack.DUEBALANCE\" readonly />\r\n        </div>\r\n      </div>\r\n      <div class=\"col-md-3\">\r\n        <div class=\"row\">\r\n          <label style=\"width:39%\">B/L Tracked: </label>\r\n          <input type=\"text\" style=\"width:50%\" name=\"balance\" decimalPlacesRestriction=\"2\" [(ngModel)]=\"BillTrack.BALANCE\"\r\n            readonly />\r\n        </div>\r\n      </div> -->\r\n\r\n      <div class=\"col-md-5\"style=\"\r\n      margin-left: 4%;\">\r\n        <div class=\"row\">\r\n          <label style=\"width:37%\">Total Adjusted B/L: </label>\r\n          <input type=\"text\" style=\"width:31%\" id=\"ledgerbl\" decimalPlacesRestriction=\"2\" name=\"ledgerbl\"\r\n            [(ngModel)]=\"BillTrack.TOTALADJAMOUNT\" readonly />\r\n        </div>\r\n      </div>\r\n      <div class=\"col-md-3\">\r\n        \r\n      </div>\r\n    </div>\r\n    <table style=\"width: 100%;table-layout: fixed\">\r\n      <thead>\r\n        <tr style=\"background-color: #2dacd1;height:25px;\">\r\n          <th style=\"width:40px;\">Sno</th>\r\n          <th style=\"width: 12.5%;\">Bill Date</th>\r\n          <th style=\"width: 7%;\">Division</th>\r\n          <th style=\"width: 12.5%;\">Voucher No</th>\r\n          <th style=\"width: 13%;\">Ref Bill No</th>\r\n          <th style=\"width: 12%;\">Bill Amount</th>\r\n          <th>Clear Amount</th>\r\n          <th>DUE Amount</th>\r\n          <th>Adjusting Amount</th>\r\n        </tr>\r\n      </thead>\r\n    </table>\r\n  </div>\r\n  <table style=\"width:100%;table-layout: fixed;\">\r\n    <tbody *ngIf=\" BillTrack.BILL.length\">\r\n      <tr *ngFor=\"let bill of BillTrack.BILL;let i= index\">\r\n        <td style=\"width: 40px;\">{{i+1}}</td>\r\n        <td>{{bill?.BILLDATE | date: 'dd-MM-yyyy'}}</td>\r\n        <td style=\"width: 7%;\">MMX</td>\r\n        <td>{{bill?.BILLNO}}</td>\r\n        <td>{{bill?.REFNO}}</td>\r\n        <td>{{bill?.BILLAMOUNT |number:'1.2-2'}}</td>\r\n        <td>{{bill?.CLEARAMOUNT |number:'1.2-2'}}</td>\r\n        <td>{{bill?.DUEAMOUNT |number:'1.2-2' }}</td>\r\n        <td>\r\n          <input style=\"width: 100%;\r\n                  height: 25px;\r\n                  padding-top: 0px;\r\n                  padding-bottom: 0px;text-align: right\" id=\"adj{{i}}\" type=\"text\" [(ngModel)]=\"bill.TAdjustingAmt\"\r\n            (change)=\"onADjustmentChange(i)\" (keydown.enter)=\"IndividualAdjustment(i)\" [disabled]=\"this.autoAdjustValue==true\" autocomplete=\"off\">\r\n        </td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>\r\n</div>\r\n<div class=\"col-md-4\" style=\"border-left: 1px solid silver;\">\r\n\r\n  <div class=\"clearfix\" style=\"margin-top: 5px;height: 400px;overflow-y: scroll;    /* border: 1px solid silver; */\r\n  background-color: white;\">\r\n    <div class=\"header\" style=\"position: sticky;top:0\">\r\n      <label style=\"width: 100%;background: #f0f3f4;padding-top: 0p;margin-top: 0px;margin-bottom: 0px;font-size: larger;font-weight: bold;\">NON TRACK VOUCHER LIST:</label><br />\r\n      <table style=\"width: 100%;table-layout: fixed\">\r\n        <thead>\r\n          <tr style=\"background-color:#2dacd1;height:25px;\">\r\n            <th style=\"width:5%\"><input type=\"checkbox\" (change)=\"selectAllIndex($event.target.checked)\" [checked]=\"selectedAll == true\"></th>\r\n            <th style=\"width: 19%;\">Date</th>\r\n            <th style=\"width: 23%;\">Voucher No</th>\r\n           <th> Amount</th>\r\n            <th>Tracked AMOUNT</th>\r\n            <th>Non-Tracked AMOUNT</th>\r\n       \r\n          </tr>\r\n        </thead>\r\n      </table>\r\n    </div>\r\n    <table style=\"width:100%;table-layout: fixed;\">\r\n      <tbody *ngIf=\" BillTrack.NonTracking\">\r\n        <tr *ngFor=\"let bill of BillTrack.NonTracking;let i= index\">\r\n        <td style=\"width:5%\"><input type=\"checkbox\" (change)=\"selectAll(bill,i,$event.target.checked)\" [checked]=\"selectedAll == true\"></td>\r\n         <td style=\"width: 19%;height: 28px;\">{{bill?.INVOICEDATE | date: 'dd-MM-yyyy'}}</td>\r\n          <td style=\"width: 23%;\">{{bill?.INVOICENO}}</td>\r\n          <td>{{bill?.INVOICEAMOUNT}}</td>\r\n          <td>{{bill?.TRACKAMOUNT |number:'1.2-2'}}</td>\r\n          <td>{{bill?.NONTRACKAMOUNT |number:'1.2-2'}}</td>\r\n        \r\n          \r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n</div>\r\n\r\n\r\n\r\n<generic-popup-grid #genericGrid [popupsettings]=\"gridPopupSettings\" (onItemDoubleClick)=\"dblClickPartyItem($event)\">\r\n</generic-popup-grid>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n<style>\r\n  .modal-content {\r\n    padding: 1px;\r\n    margin: 0px;\r\n    float: right;\r\n  }\r\n\r\n  tbody>tr:hover {\r\n    background-color: #f3f5f4;\r\n    cursor: pointer;\r\n  }\r\n\r\n  tr {\r\n    font-size: 11px;\r\n  }\r\n\r\n  .selected-row {\r\n    background-color: #ced6d3 !important;\r\n  }\r\n\r\n  .table>tbody>tr>td {\r\n    line-height: 30px !important;\r\n  }\r\n\r\n  .table>thead>tr>th {\r\n    line-height: 5px !important;\r\n  }\r\n\r\n  .table>tbody>tr>td:first-child {\r\n    text-align: left !important;\r\n    padding: 0px 0px 0px 11px !important;\r\n  }\r\n\r\n  .modal-content {\r\n    box-shadow: -10px 0px 10px 1px #aaaaaa;\r\n  }\r\n\r\n  .modal-content-main-area {\r\n    max-height: 100%;\r\n    height: 100%;\r\n    overflow: auto;\r\n    overflow-x: hidden;\r\n  }\r\n\r\n  .modal-content-summary-area {\r\n    max-height: 20%;\r\n    height: 20%;\r\n    overflow: auto;\r\n    overflow-x: hidden;\r\n  }\r\n\r\n  .ellipsis {\r\n    /* width: 220px;\r\n    text-overflow: ellipsis;\r\n    overflow: hidden; */\r\n    white-space: nowrap;\r\n  }\r\n\r\n</style>\r\n<div class=\"modal-sticky\" *ngIf=\"isActive\" style=\"display : block; padding: 0px;  margin-bottom: 25px;\">\r\n  <!-- Modal content -->\r\n  <div class=\"modal-content modal-content-main-area\">\r\n\r\n    <div class=\"modal-header\" style=\"padding: 0px;background: #8cccfb;\">\r\n      <button class=\"close\" aria-label=\"Close\" (click)=\"isActive=!isActive\">\r\n        <span aria-hidden=\"true\">&times;</span>\r\n      </button>\r\n      <h4 class=\"modal-title\" style=\"text-align: center;\">\r\n        {{ gridDuePopupSettings.title }}\r\n      </h4>\r\n    </div>\r\n    <div class=\"col-md-12 table-scroll\" style=\"padding: 0;\">\r\n      <table class=\"table\">\r\n        <thead>\r\n          <tr style=\"background: #8cccfb;\">\r\n            <th>VCHRNO</th>\r\n            <th>AMOUNT</th>\r\n            <th>TRACKED AMOUNT</th>\r\n            <th>PENDING AMOUNT</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody *ngIf=\"pendingVoucherList.length\">\r\n          <tr class=\"highlight\" [class.selected-row]=\"selectVoucherIndex == i\"\r\n            *ngFor=\"let itemObj of pendingVoucherList;let i = index\" (dblclick)=\"dblClickDueItem(itemObj)\"\r\n            (click)=\"selectVoucherIndex=i\" title=\"double click for detail view\">\r\n            <td style=\"border: none;\">\r\n              {{itemObj?.VCHRNO}}\r\n            </td>\r\n            <td style=\"border: none;\">\r\n              {{itemObj?.AMOUNT}}\r\n            </td>\r\n            <td style=\"border: none;\">\r\n              {{itemObj?.TRACKED_AMOUNT==null?'0.00':itemObj?.TRACKED_AMOUNT}}\r\n            </td>\r\n            <td style=\"border: none;\">\r\n              {{itemObj?.AMOUNT-(itemObj?.TRACKED_AMOUNT==null?0:itemObj?.TRACKED_AMOUNT)}}\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  </div>\r\n</div>\r\n"

/***/ }),

/***/ 1321:
/***/ (function(module, exports) {

module.exports = "<style>\r\n    .table tr th {\r\n      text-align: center;\r\n      vertical-align: middle;\r\n      line-height: 15px;\r\n    }\r\n  \r\n    tr {\r\n      /* border: 1px solid #e6e6e6; */\r\n      max-height: 25px;\r\n    }\r\n  \r\n    td {\r\n      height: 20px;\r\n      /* border: 1px solid #e6e6e6; */\r\n     \r\n  \r\n    }\r\n  \r\n    .bottom {\r\n      position: fixed;\r\n      bottom: 20px;\r\n      left: 0px;\r\n      width: 100%;\r\n      height: 140px;\r\n      z-index: 999997;\r\n      /* background: #e2eaea !important; */\r\n    }\r\n    .colorLabel{\r\n    width: 120px !important;\r\n    font-size: 21px !important;\r\n    font-weight: bold;\r\n    color: #2dacd1;\r\n  }\r\n  .diffAmountItemForAccount{\r\n    font-size: 21px;\r\n    width: 160px;\r\n    color: #2dacd1;\r\n    text-align: right;\r\n    border: 1px solid #cbcbcb;\r\n    font-weight: bold;\r\n  }\r\n  .sectionWrapper{\r\n      display: flex;\r\n      flex-direction: column;\r\n      height: 94vh;\r\n    }\r\n\r\n .midTableWrapper{\r\n  flex: 1; \r\n  overflow: auto;\r\n  overflow-x:hidden;\r\n}\r\n.footer-wrapper {\r\n  background: lightgreen;\r\n  min-height: 185px;\r\n}\r\n\r\n  \r\n  \r\n  </style>\r\n\r\n    <div class=\"sectionWrapper\">\r\n      <div class=\"topWwrapper\">\r\n          \r\n<div class=\"sticky-top\">\r\n    <div class=\"row clearfix\">\r\n        <div class=\"col-md-1\">\r\n            <voucher-master-toggler></voucher-master-toggler>\r\n        </div>\r\n        <div class=\"col-md-5\">\r\n            <!-- <h2 style=\"color: black; font-size: 15px; font-weight: 400\">{{_transactionService.pageHeading}}[{{this._transactionService.TrnMainObj.Mode}}] </h2> -->\r\n            <label style=\"font-family: Segoe UI Light;font-weight: bold;font-size: 20px;padding-left: 5%;padding-top: 1%;width:50%;\">{{ _transactionService.pageHeading }}</label>\r\n            <label style=\"font-size: 14px;width: 150px;padding-top: 9px;\">&nbsp;>> {{ _transactionService.TrnMainObj?.Mode | titlecase}} Voucher</label>\r\n        </div>\r\n        <div class=\"col-md-6\">\r\n            <account-master-action  \r\n            ></account-master-action> \r\n        </div>\r\n    </div>\r\n</div>\r\n<div class=\"main-container\" style=\"margin-bottom: 0;\">\r\n    <div [hidden]=\"masterService.ShowMore\" class=\"row clearfix\" style=\"margin: 2px;\">\r\n        <div class=\"col-md-12\" style=\"margin: 2px 15px ; padding-left: 5px; padding-right: 5px; border: 1px solid #e6e6e6; \">\r\n         <div class=\"col-md-8\" style=\" padding-left: 0px; padding-right: 2px; height: 135px; overflow-y: auto; overflow-x: hidden; \" >\r\n            <!-- <div class=\"row\" >\r\n                <div class=\"col-md-3\">\r\n                    <label class=\" form-control-label\">Account Name\r\n                    </label>\r\n                      <input \r\n                         type=\"number\"\r\n                         class=\"form-control\"\r\n                         placeholder=\"Account Name\"/>\r\n                </div>\r\n                <div class=\"col-md-3\">\r\n                    <label class=\" form-control-label\">Amount \r\n                    </label>\r\n                      <input \r\n                        type=\"number\"\r\n                        class=\"form-control\"\r\n                        placeholder=\"Amount\"\r\n                       />\r\n                </div>\r\n                <div class=\"col-md-4\">\r\n                    <label class=\" form-control-label\">Naration\r\n                    </label>\r\n                    <textarea style=\"height: 25px; width: 100%; \" >\r\n                    </textarea>\r\n                </div>\r\n                <div class=\"col-md-2\">\r\n                    <button (click)=\"onAddClick()\" style=\"margin: 0px 4px;\" class=\"btn btn-info pull-right\">\r\n                        ADD\r\n                    </button>\r\n                </div>\r\n            </div> -->\r\n            <div class=\"row\">   \r\n                <div class=\"col-md-2\" >\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-10\" style=\"font-size: 12px;\">\r\n                            Cr A/c Selection :\r\n                        </div>\r\n                        <div class=\"col-md-2\" style=\"padding: 0px;\">\r\n                            <div style=\"border-top : 1px solid #a7c7d4;margin-top: 5px;padding-left: 0px; width: 100%; \"></div>\r\n                        </div>\r\n                    </div>                      \r\n                </div>       \r\n                <div class=\"col-md-10\" style=\"padding-left: 0px;\">                \r\n                    <div style=\"border-top : 1px solid #a7c7d4;margin-top: 5px;padding-left: 0px; width: 100%; \"></div>\r\n                </div>\r\n            </div>\r\n            <div class=\"row\" style=\"margin-left: 0px;\">\r\n                <!-- <fieldset> -->\r\n                    <!-- <legend>Cr A/c Selection </legend> -->\r\n                    <table style=\"width: 98%;\" >\r\n                        <thead>\r\n                            <tr style=\"border-bottom: 1px solid #E6E6E6; border-top: 1px solid #E6E6E6;    height: 25px;\r\n                            background:#C0C0C0;\r\n                            color: black;\" >\r\n    \r\n                            <th style=\"width: 3%;font-weight: normal;font-size: 13px;\">Sn</th>\r\n                            <!-- <th style=\"width: 24%;font-weight: normal;font-size: 13px;\">Ledger A/C</th> -->\r\n                            <th style=\"width: 24%;font-weight: normal;font-size: 13px;\">Ledger A/C</th>\r\n                            <th *ngIf=\"_transactionService.userSetting.ENABLESUBLEDGER==1\" style=\"width: 23%;font-weight: normal;font-size: 13px;\">\r\n                                Sub Ledger A/C\r\n                              </th>\r\n                              <!-- <th style=\"width: 15%;font-weight: normal;font-size: 13px;\">Amount Without VAT</th> -->\r\n                            <th style=\"width: 9%;font-weight: normal;font-size: 13px;\">Amount</th>\r\n                            <th *ngIf=\"_transactionService.userSetting.enableCostCenter==2\" style=\"width: 15%;font-weight: normal;font-size: 13px;\">Cost Center</th>\r\n                            <th style=\"width: 50%;font-weight: normal;font-size: 13px;\">Narration </th>\r\n    \r\n                            </tr>\r\n                          \r\n                        </thead>\r\n                        <tbody *ngFor=\"let t of _transactionService.creditList; let i = index\"  >\r\n                            <tr>\r\n                                <td style=\"width: 3%;\">\r\n                                    {{i+1}}\r\n                                </td>\r\n                                <td style=\"width: 24%;\" class=\"cell-with-comment\" >\r\n                                   <input\r\n                                   #ACCODEInput_\r\n                                   style=\"width: 100%;\"\r\n                                   autocomplete=\"off\"\r\n                                   id = \"AccountName_{{i}}\"\r\n                                   type=\"text\"\r\n                                   placeholder=\"press ENTER to Select\"\r\n                                   [disabled]=\"_transactionService.TrnMainObj.Mode=='VIEW'\"\r\n                                   [(ngModel)]=\"t.ACNAME\" \r\n                                   (keydown.Enter)=\"showAcList(i); \"\r\n                                   (keydown.Tab)=\"focusNextValidation('Ledger',t)\"\r\n                                   (keydown)=\"preventInput($event)\" \r\n                                   (keydown.Shift.Delete)=\"clearRow($event, i);\"\r\n                                   (focus)=\"onFocusCreditSelection($event,i)\"\r\n                                   />\r\n    \r\n                                   <!-- <span class=\"cell-comment\">\r\n                                    press ENTER or TAB to Select\r\n                                    {{ _transactionService.TableAcHeader }}\r\n                                  </span> -->\r\n                                   \r\n                                </td>\r\n                                <td  *ngIf=\"_transactionService.userSetting.ENABLESUBLEDGER==1\" class=\"cell-with-comment\">\r\n             \r\n       \r\n                                    <div *ngIf=\"(_transactionService.TrnMainObj.Mode == 'NEW' || _transactionService.TrnMainObj.Mode == 'EDIT')\" style=\"width: 100%;\">\r\n                                      <input #SubLedgerInput id=\"SubLedgerInputCr_{{i}}\" autocomplete=\"off\" [(ngModel)]=\"t.SL_ACNAME\"\r\n                                        style=\"height:23px;width: 100%;\" (keyup.Enter)=\"onsubLedgerTab(i,t.A_ACID); SubLedgerInput.blur()\"\r\n                                        (keydown.Tab)=\"focusNextValidation('SubLedger',t)\"\r\n                                        (keydown.Shift.Delete)=\"clearRow($event, i,t);\" (keydown)=\"preventInput($event)\" (focusout)=\"changedSubLedger($event,t)\"\r\n                                        placeholder=\"press ENTER to Select\" [disabled]=\"t.disableSubLedger == true\"/>\r\n                                      <!-- <span class=\"cell-comment\">\r\n                                        press ENTER or TAB to Select Sub-Ledger\r\n                                      </span> -->\r\n                                    </div>\r\n                                \r\n                                    <div *ngIf=\"_transactionService.TrnMainObj.Mode != 'NEW' && _transactionService.TrnMainObj.Mode != 'EDIT'\" style=\"width: 100%;\">\r\n                                      <div style=\"width:100%;line-height:21px;\">\r\n                                        {{ t.SL_ACNAME }}\r\n                                      </div>\r\n                                    </div>\r\n                                  </td>\r\n\r\n                                  <!-- <td style=\"width: 15%;\">\r\n                                    <input\r\n                                    style=\"width: 100%; text-align: right; \"\r\n                                    id = \"Amount_withoutvat_{{i}}\"\r\n                                    type=\"number\"\r\n                                    [disabled] = \"t.ACNAME == null || _transactionService.TrnMainObj.Mode== 'VIEW'\"\r\n                                    [(ngModel)]=\"t.CRAMNT_WITHOUTVAT\" decimalPlacesRestriction=\"2\"\r\n                                    (change)=\"ChangeCRAMNT_WithoutVAT(i)\"\r\n                                    (keydown.Enter)=\"CRAMNT_WithoutVAT_RowOk(i,t)\"\r\n                                    (keydown.Tab)=\"CRAMNT_WithoutVAT_RowOk(i,t)\" \r\n                                    (focusout)=\"CRAMNT_WithoutVAT_RowOk(i,t)\" \r\n                                    (keydown.Shift.Delete)=\"clearRow($event, i);\"\r\n                                    />\r\n                                </td> -->\r\n                                \r\n                                <td style=\"width: 15%;\">\r\n                                    <input\r\n                                    style=\"width: 100%; text-align: right; \"\r\n                                    id = \"Amount_{{i}}\"\r\n                                    type=\"number\"\r\n                                    [disabled] = \"t.ACNAME == null || _transactionService.TrnMainObj.Mode== 'VIEW'\"\r\n                                    [(ngModel)]=\"t.CRAMNT\" decimalPlacesRestriction=\"2\"\r\n                                    (change)=\"onChagneCRAmount(i)\"\r\n                                    (keydown.Enter)=\"CRAMNTRowOk(i,t)\"\r\n                                    (keydown.Tab)=\"CRAMNTRowOk(i,t)\" \r\n                                    (focusout)=\"CRAMNTRowOk(i,t)\" \r\n                                    (keydown.Shift.Delete)=\"clearRow($event, i);\"\r\n                                    />\r\n                                </td>\r\n                                <td *ngIf=\"_transactionService.userSetting.enableCostCenter==2\" style=\"width: 15%;\">\r\n                                  <input\r\n                                  style=\"width: 100%; text-align: right; \"\r\n                                  id = \"costcenter_{{i}}\"\r\n                                  type=\"text\" placeholder=\"press ENTER to Select\"\r\n                                  [disabled] = \"t.ACNAME == null || _transactionService.TrnMainObj.Mode== 'VIEW'\"\r\n                                  [(ngModel)]=\"t.CostCenter\" \r\n                                  (keydown.Enter)=\"showCostCenterList(i)\"\r\n                                  (keydown.Shift.Delete)=\"clearRow($event, i);\"\r\n                                  />\r\n                              </td>\r\n                                <td style=\"width: 66%;\">\r\n                                    <input\r\n                                    style=\"width: 100%;\"\r\n                                    id = \"NarrationCr_{{i}}\"\r\n                                    [(ngModel)]=\"t.NARATION\"\r\n                                    type=\"text\"\r\n                                    [disabled]=\"_transactionService.TrnMainObj.Mode=='VIEW'\"\r\n                                    (keydown.Enter)=\"addCreditnewRow($event, i)\"\r\n                                    (keydown.Tab)=\"addCreditnewRow($event, i)\" \r\n                                    (keydown.Shift.Delete)=\"clearRow($event, i);\"\r\n                                    />\r\n                                </td>\r\n                            </tr>\r\n    \r\n                        </tbody>\r\n                    </table>\r\n                <!-- </fieldset> -->\r\n               \r\n            </div>\r\n  \r\n         </div>\r\n         <div class=\"col-md-4\">\r\n            <table\r\n              class=\"table table-summary\"\r\n              style=\"text-align: left; white-space: nowrap;\"\r\n            >\r\n              <tr>\r\n                <td style=\"line-height: 16px;font-size: 13px; text-align: left;\"  >Voucher No :</td>\r\n                <td style=\"line-height: 16px;font-size: 13px;\"   ><b>{{ _transactionService.TrnMainObj.VCHRNO }}</b></td>\r\n              </tr>\r\n              <tr >\r\n                <td style=\"line-height: 16px; font-size: 13px; text-align: left;\"  >Entry Date :</td>\r\n                <td style=\"line-height: 16px; font-size: 13px; display: flex; margin-bottom: 15px;\" >\r\n                  <!-- {{ _transactionService.TrnMainObj.TRNDATE | date: \"dd-MM-yyyy\" }} -->\r\n                  <input \r\n                  type=\"date\"\r\n                  #adEntryDate\r\n                  id=\"date\" \r\n                  style=\"width:41%; height: 30px;\"  \r\n                  placeholder=\"Year Start Date\" \r\n                  [disabled]=\"_transactionService.TrnMainObj.Mode == 'VIEW'\" \r\n                  [(ngModel)]=\"EntryDate.DATE3\"\r\n                  (change)=\"changeEntryDate1($event.target.value,'AD')\" \r\n                  (focusout)=\"focusOutEntryDate($event)\"\r\n                  max=\"{{date1 | date:'yyyy-MM-dd'}}\" min=\"{{date2 | date:'yyyy-MM-dd'}}\"> &nbsp;A.D&nbsp;\r\n                  <div style=\"width: 128px;\">\r\n                    <nepali-date-picker name=\"nepaliDateFrom\" [id]=\"'nepaliDatefrom'\"\r\n                    (change)=\"changeEntryDate1($event.detail.value,'BS')\"\r\n                    [label]=\"'From'\"\r\n                    [disabled]=\"_transactionService.TrnMainObj.Mode == 'VIEW'\" [(ngModel)]=\"EntryDate.BSDATE1\">\r\n                    </nepali-date-picker>\r\n                  </div>\r\n                 \r\n                  <!-- <input\r\n                   #bsEntryDate\r\n                   id=\"nepaliDate\" \r\n                   style=\"width:90px;height:25px;text-align:left\"\r\n                   class=\"nepali-calendar ndp-nepali-calendar\"\r\n                   [disabled]=\"_transactionService.TrnMainObj.Mode == 'VIEW'\" \r\n                   [(ngModel)]=\"EntryDate.BSDATE1\" type=\"text\"\r\n                   (change)=\"changeEntryDate1($event.target.value,'BS')\"\r\n                   placeholder=\"yyyy-mm-dd\"> &nbsp;B.S -->\r\n                </td>\r\n              </tr>\r\n              <tr >\r\n                <td style=\"line-height: 16px;text-align: left;font-size: 13px;\" >Trn Date :</td>\r\n                <td class=\"trndatepicker\"style=\"line-height: 16px;font-size: 13px; display:flex; margin-bottom: 15px;\"  >\r\n                  <!-- <ims-date-picker (onDateChange)=\"setTrnDate($event,i)\" [index]=\"'TRN'\" [date]=\"getTrnDate()\" [ID]=\"'trndate'\"></ims-date-picker> -->\r\n                  <input\r\n                    type=\"date\" \r\n                    #adTrnDate\r\n                    style=\"width:41%; height: 30px;\" \r\n                    placeholder=\"Year Start Date\"\r\n                    [disabled]=\"_transactionService.TrnMainObj.Mode == 'VIEW'\" \r\n                    (change)=\"changeEntryDate($event.target.value,'AD')\"  \r\n                    [(ngModel)]=\"VoucherEntry.DATE1\" max=\"{{date1 | date:'yyyy-MM-dd'}}\"\r\n                    max=\"{{date1 | date:'yyyy-MM-dd'}}\" min=\"{{date2 | date:'yyyy-MM-dd'}}\"> &nbsp;A.D&nbsp;\r\n                  <div style=\"width: 128px;\">\r\n                    <nepali-date-picker name=\"nepaliDateFrom\" [id]=\"'nepaliDateto'\"\r\n                    (change)=\"changeEntryDate($event.detail.value,'BS')\"\r\n                    [label]=\"'From'\"\r\n                    [disabled]=\"_transactionService.TrnMainObj.Mode == 'VIEW'\" [(ngModel)]=\"VoucherEntry.BSDATE1\">\r\n                    </nepali-date-picker>\r\n                  </div>\r\n                  <!-- <input \r\n                    #bsTrnDate\r\n                    id=\"nepaliDate\"\r\n                    style=\"width:90px;height:25px;text-align:left\" \r\n                    class=\"nepali-calendar ndp-nepali-calendar\"\r\n                    [disabled]=\"_transactionService.TrnMainObj.Mode == 'VIEW'\" \r\n                    [(ngModel)]=\"VoucherEntry.BSDATE1\" type=\"text\" \r\n                    (change)=\"changeEntryDate($event.target.value,'BS')\"\r\n                    placeholder=\"yyyy-mm-dd\" /> &nbsp;B.S -->\r\n      \r\n                </td>\r\n              </tr>\r\n              <tr >\r\n                <!-- <td  style=\"line-height: 16px;\"  >Ref No:</td>\r\n                <td  style=\"line-height: 16px;\" >\r\n                  <input\r\n                    type=\"text\"\r\n                    class=\"form-control\"\r\n                    [(ngModel)]=\"_transactionService.TrnMainObj.REFBILL\"\r\n                  />\r\n                </td> -->       \r\n                <!-- <td style=\"line-height: 16px; font-size: 13px; text-align: left;\"  >\r\n                   CP Type :\r\n                </td>          -->\r\n                <!-- <td>\r\n                    <select \r\n                    [disabled]=\"_transactionService.TrnMainObj.Mode == 'VIEW'\"\r\n                    [(ngModel)]=\"_transactionService.TrnMainObj.CNDN_MODE\" \r\n                    style=\"width: 91%;\"\r\n                  >\r\n                     \r\n                      <option [ngValue]=0>Capitalize Purchase Voucher</option>\r\n                      <option [ngValue]=10>Non-Capitalize Purchase Voucher</option>\r\n                    </select>\r\n                   \r\n                </td> -->\r\n              </tr>\r\n              <tr  *ngIf=\"userSetting.enableCostCenter == 1\">\r\n                <!-- <td  style=\"line-height: 16px;\"  >Ref No:</td>\r\n                <td  style=\"line-height: 16px;\" >\r\n                  <input\r\n                    type=\"text\"\r\n                    class=\"form-control\"\r\n                    [(ngModel)]=\"_transactionService.TrnMainObj.REFBILL\"\r\n                  />\r\n                </td> -->       \r\n                <td style=\"line-height: 16px; font-size: 13px; text-align: left;\"  >\r\n                   Cost Center :\r\n                </td>         \r\n                <td>\r\n                   \r\n                   \r\n                    <select \r\n                    [disabled]=\"_transactionService.TrnMainObj.Mode == 'VIEW'\"\r\n                    [(ngModel)]=\"_transactionService.TrnMainObj.COSTCENTER\" \r\n                    style=\"width: 91%;\"\r\n                  >\r\n                      <option [ngValue]=\"\"></option>\r\n                      <option *ngFor=\"let c of costlists\" [ngValue]=\"c.CCID\">\r\n                        {{ c.COSTCENTERNAME }}</option>\r\n                    </select>\r\n                </td>\r\n              </tr>\r\n              <tr>          \r\n                <td style=\"line-height: 16px; font-size: 13px; text-align: left;\">\r\n                    Refno. :\r\n                </td>\r\n                <td *ngIf = \"userSetting.PrefixForRefNoInvEntry ==1\"  >\r\n                    <select\r\n                      name=\"prefix\" \r\n                      id=\"prefix\"\r\n                      [disabled]=\"_transactionService.TrnMainObj.Mode == 'VIEW'\"\r\n                      [(ngModel)]=\"_transactionService.TrnMainObj.CHALANNOPREFIX\"\r\n                      style=\"width: 41%;\"\r\n                    >\r\n                      <option value=\"\" selected=\"selected\">Choose Prefix</option>\r\n                      <option value=\"{{chalan.series}}\" *ngFor=\"let chalan of chalanSeries;\">{{chalan.series}}</option>\r\n                    </select>\r\n                    <input\r\n                        type=\"text\"\r\n                        style=\"width: 41%;\"\r\n                        [disabled]=\"_transactionService.TrnMainObj.Mode == 'VIEW'\"\r\n                        [(ngModel)]=\"_transactionService.TrnMainObj.CHALANNO\"                      \r\n                    />\r\n                </td>\r\n                <td  *ngIf = \"userSetting.PrefixForRefNoInvEntry ==0 \">\r\n                    <input \r\n                        type=\"text\" \r\n                        style=\"width: 91%;\"\r\n                        [disabled]=\"_transactionService.TrnMainObj.Mode == 'VIEW'\"\r\n                        [(ngModel)]=\"_transactionService.TrnMainObj.CHALANNO\"\r\n                    />\r\n                </td>                         \r\n          </tr>\r\n            </table>\r\n          </div>\r\n          \r\n        </div>\r\n    </div>\r\n  \r\n        \r\n</div> \r\n\r\n      </div>\r\n       <div class=\"midTableWrapper\">\r\n\r\n           <div class=\"clearfix\" style=\"margin-top: 5px\">\r\n        <div class=\"row\">   \r\n            <div class=\"col-md-2\" >\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-7\" style=\"font-size: 12px;\">\r\n                        Dr A/c Selection :\r\n                    </div>\r\n                    <div class=\"col-md-5\" style=\"padding: 0px;\">\r\n                        <div style=\"border-top : 1px solid #a7c7d4;margin-top: 5px;padding-left: 0px; width: 100%; \"></div>\r\n                    </div>\r\n                </div>                      \r\n            </div>       \r\n            <div class=\"col-md-10\" style=\"padding-left: 0px;\">                \r\n                <div style=\"border-top : 1px solid #a7c7d4;margin-top: 5px;padding-left: 0px; width: 100%; \"></div>\r\n            </div>\r\n        </div>\r\n                 \r\n        <trntran-voucher-entry></trntran-voucher-entry> \r\n    </div>\r\n\r\n       </div>\r\n\r\n       <div class=\" footer-wrapper\" style=\"text-align:right; background:#C0C0C0;\">\r\n        <div class=\"col-md-4\" >\r\n            <fieldset style=\"border: 1px solid #e6e6e6; padding:0px 2px 4px 2px; \">\r\n                <legend style=\"font-size:11px;font-weight: bold; width:auto; text-align: left;\" >Supplier Information </legend>\r\n                <div class=\"row\" >\r\n                    <div class= \"col-md-3\">\r\n                        <label style=\"text-align: left;height: 15px; \">Name :</label>\r\n                        <label style=\"text-align: left;height: 15px;\" >Address :</label>\r\n                        <label style=\"text-align: left;height: 15px;\" >VAT NO :</label>\r\n                    </div> \r\n                    <div class= \"col-md-9\">\r\n                        <input id=\"Name\" \r\n                        style=\"width: 100%;\" \r\n                        type=\"text\"\r\n                        autocomplete=\"off\"\r\n                        placeholder=\"Press ENTER or TAB to select Supplier\"\r\n                        [disabled]=\"_transactionService.TrnMainObj.Mode == 'VIEW'\"\r\n                        (keydown.enter)=\"SupplierEnterCommand($event)\"\r\n                        (keydown.tab)=\"SupplierEnterCommand($event)\"\r\n                        [(ngModel)]=\"_transactionService.TrnMainObj.BILLTO\"\r\n                        (keydown)=\"preventInput($event)\" \r\n                        />\r\n                        <input                \r\n                        id=\"Address\"\r\n                        type=\"text\"\r\n                        autocomplete=\"off\"\r\n                        [disabled]=\"_transactionService.TrnMainObj.Mode == 'VIEW'\"\r\n                        style=\"width: 100%;\"\r\n                        [(ngModel)]=\"_transactionService.TrnMainObj.BILLTOADD\" \r\n                         (keydown)=\"preventInput($event)\"                  \r\n                          />\r\n                        <input \r\n                        id=\"VATNO\" \r\n                        type=\"text\"\r\n                        autocomplete=\"off\"\r\n                        [disabled]=\"_transactionService.TrnMainObj.Mode == 'VIEW'\"\r\n                        style=\"width: 100%;\" \r\n                        [(ngModel)]=\"_transactionService.TrnMainObj.BILLTOTEL\"\r\n                        (keydown)=\"preventInput($event)\" \r\n                        />\r\n                    </div> \r\n                </div>\r\n            </fieldset>\r\n            <!-- <fieldset style=\"border: 1px solid black; padding:0px 2px 0px 1px; \"> -->\r\n                <!-- <legend style=\"font-size:11px;font-weight: bold; width:auto; text-align: left;\" >Remarks </legend> -->\r\n                <div class=\"row\" style=\"margin-top: 7px;\" >\r\n                    <div class=\"col-md-3\">\r\n                        <label style=\"text-align: left;height: 15px; \">Remarks :</label>\r\n                    </div>\r\n                    <div class= \"col-md-9\">\r\n                        <input\r\n                         id=\"Remarks\" \r\n                         type=\"text\"\r\n                         [disabled]=\"_transactionService.TrnMainObj.Mode == 'VIEW'\"\r\n                         [(ngModel)]=\"_transactionService.TrnMainObj.REMARKS\"\r\n                         style=\"width: 100%;\"\r\n                          />                       \r\n                    </div> \r\n                </div>\r\n            <!-- </fieldset> -->\r\n        </div>\r\n        <div class=\"col-md-4\" >\r\n            <div class=\"row\" style=\"margin-top: 55px;\">\r\n               \r\n                    <label class=\"colorLabel\">A/C B/L :\r\n                    </label><label class=\"diffAmountItemForAccount\">{{ differenceAmount | number }}</label>&nbsp;\r\n                    <label style=\"width:30px !important;font-size:18px;color: #2dacd1;font-weight: bold;\" *ngIf=\"diffAmountDrCrType == 'Dr'\">Dr.</label>\r\n                    <label style=\"width:30px !important;font-size:18px;color: #2dacd1;font-weight: bold;\" *ngIf=\"diffAmountDrCrType == 'Cr'\">Cr.</label>    \r\n        \r\n            </div>\r\n            <div class=\"row\" style=\"margin-top: 8px;\">\r\n                <!-- <div class=\"col-md-2\" >\r\n                   Total\r\n                </div> -->\r\n                <div class=\"col-md-6\" style=\"border: 1px solid #e6e6e6;\">\r\n                    <label *ngIf = \"_transactionService.nullToZeroConverter(_transactionService.totalDRAmount) != 0 \" > {{_transactionService.totalDRAmount | twoDigitNumber }} Dr.  </label>\r\n                    <label *ngIf = \"_transactionService.nullToZeroConverter(_transactionService.totalDRAmount) == 0 \" >0Dr.</label>\r\n                </div>\r\n                <div class=\"col-md-6\" style=\"border: 1px solid #e6e6e6;\"  >\r\n                    <label *ngIf =\"_transactionService.nullToZeroConverter(this._transactionService.totalCRAmount) !=0 \" > {{this._transactionService.totalCRAmount | twoDigitNumber }} Cr.</label>\r\n                    <label *ngIf =\"_transactionService.nullToZeroConverter(this._transactionService.totalCRAmount) ==0 \" >0Cr.</label>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"col-md-4\">\r\n            <!-- <div class=\"row\" >\r\n                <div class=\"col-md-6\">\r\n                    <label style=\"text-align: left;height: 15px; \">Gross Amount</label>\r\n                        <label style=\"width:100%;height: 15px;\" >Discount</label>\r\n                        <label style=\"width:100%;height: 15px;\" >Taxable Amount</label>\r\n                        <label style=\"width:100%;height: 15px; \">Non Taxable Amount</label>\r\n                        <label style=\"width:100%;height: 15px;\" >VAT Amount</label>\r\n                        <label style=\"width:100%;height: 15px;\" >Net Amount</label>\r\n                        <label style=\"width:100%;height: 15px;\" >Rounding</label>\r\n                </div>\r\n                <div class=\"col-md-6\">\r\n                    <input id=\"Name\" style=\"width: 100%;\" />\r\n                    <input id=\"Address\" style=\"width: 100%;\" />\r\n                    <input id=\"VATNO\" style=\"width: 100%;\" />\r\n                    <input id=\"Name\" style=\"width: 100%;\" />\r\n                    <input id=\"Address\" style=\"width: 100%;\" />\r\n                    <input id=\"VATNO\" style=\"width: 100%;\" />\r\n                    <input id=\"VATNO\" style=\"width: 100%;\" />\r\n                </div>\r\n            </div> -->\r\n            <table class=\"table\" style=\"height: 100px; \">\r\n               <tbody>\r\n                   <tr>\r\n                       <td style=\"line-height: 12px;text-align:left;font-size: 12px; font-weight: bold;\">Gross Amount </td>\r\n                       <td style=\"line-height: 12px;\">\r\n                           <input                          \r\n                           id=\"Gross Amount\"\r\n                           type=\"number\"\r\n                           [disabled]=\"_transactionService.TrnMainObj.Mode == 'VIEW'\"\r\n                           style=\"width:100%; height: 19px;text-align:right; \"\r\n                           [ngModel]=\"_transactionService.TrnMainObj.TOTAMNT | twoDigitNumber \"\r\n                           (ngModelChange)=\"_transactionService.TrnMainObj.TOTAMNT = $event\" \r\n                           (keydown)=\"preventInput($event)\" \r\n                           />\r\n                               \r\n                       </td>\r\n                   </tr>\r\n              \r\n                   <tr>\r\n                        <td style=\"line-height: 12px;text-align:left; font-size: 12px; font-weight: bold; \" >Discount </td>\r\n                        <td style=\"line-height: 12px;text-align:right;\" >\r\n                            <input\r\n                           \r\n                            id=\"Discount\"\r\n                            type=\"number\"\r\n                            style=\"width:100%;height: 19px;text-align:right;\"\r\n                            [ngModel]=\"applyPipeinDiscount?(_transactionService.TrnMainObj.DCAMNT |twoDigitNumber):_transactionService.TrnMainObj.DCAMNT\"\r\n                            (ngModelChange)=\"_transactionService.TrnMainObj.DCAMNT =$event\"\r\n                            [disabled]=\"_transactionService.TrnMainObj.Mode =='VIEW'\"                    \r\n                            (keyup)=\"discountChange($event)\"\r\n                            (focusout)=\"discountFocusOut($event)\"\r\n                            />\r\n                            <!-- <input\r\n                            *ngIf = \"_transactionService.nullToZeroConverter(_transactionService.TrnMainObj.TOTALDISCOUNT) ==0\"\r\n                            id=\"Discount\"\r\n                            type=\"number\"\r\n                            style=\"width:100%;height: 19px;text-align:right;\"\r\n                            [(ngModel)]=\"discount\"\r\n                            (change)=\"budgetCalculation()\"\r\n                            /> -->\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td style=\"line-height: 12px;text-align:left; font-size: 12px; font-weight: bold; \" >Taxable Amount </td>\r\n                        <td style=\"line-height: 12px;text-align:right;\" >\r\n                            <input                           \r\n                            id=\"TaxableAmount\"\r\n                            type=\"number\"\r\n                         \r\n                            style=\"width:100%; height: 19px;text-align:right;\"\r\n                            [ngModel]=\"applyPipeinTaxableAmount?(_transactionService.TrnMainObj.TAXABLE |twoDigitNumber):_transactionService.TrnMainObj.TAXABLE\"\r\n                            [disabled]=\"_transactionService.TrnMainObj.Mode =='VIEW'\"\r\n                            (ngModelChange)=\"_transactionService.TrnMainObj.TAXABLE = $event\"\r\n                            (keyup) = \"taxableAmountChange($event)\"\r\n        \r\n                            (focusout)=\"foucsOutTaxableAmount($event)\"\r\n                            />\r\n                        \r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td style=\"line-height: 12px;text-align:left;font-size: 12px; font-weight: bold; \" >Non Taxable Amount </td>\r\n                        <td style=\"line-height: 12px;text-align:right;\" >\r\n                            <input                         \r\n                            id=\"NonTaxableAmount\"\r\n                            type=\"number\"\r\n                            [disabled]=\"_transactionService.TrnMainObj.Mode =='VIEW'\"\r\n                            style=\"width:100%; height: 19px;text-align:right;\"\r\n                            [ngModel]=\"applyPipeinNonTaxableAmount? (_transactionService.TrnMainObj.NONTAXABLE |twoDigitNumber):_transactionService.TrnMainObj.NONTAXABLE\"\r\n                            (ngModelChange)= \"_transactionService.TrnMainObj.NONTAXABLE = $event\"\r\n                            (keyup) = \"nonTaxableAmountChange($event)\"\r\n                            (change)=\"nonTaxableAmountChange($event)\"\r\n                            (focusout)=\"foucsOutNonTaxableAmount($event)\"\r\n                            />\r\n                      \r\n                        </td>\r\n                   </tr>\r\n                   <tr>\r\n                        <td style=\"line-height: 12px;text-align:left;font-size: 12px; font-weight: bold; \" >VAT Amount </td>\r\n                        <td style=\"line-height: 12px;text-align:right;\" >\r\n                            <input                           \r\n                            id=\"VATAmount\"\r\n                            type=\"number\"\r\n                            [disabled]=\"_transactionService.TrnMainObj.Mode =='VIEW'\"\r\n                            style=\"width:100%; height: 19px;text-align:right;\"\r\n                            [ngModel]=\"applyPipeinVatAmount?(_transactionService.TrnMainObj.VATAMNT |twoDigitNumber):_transactionService.TrnMainObj.VATAMNT\"   \r\n                            (ngModelChange)=\"_transactionService.TrnMainObj.VATAMNT=$event\"\r\n                            (keyup) = \"VATAmountChange($event)\"                       \r\n                            (change)=\"VATAmountChange($event)\"\r\n                            (focusout)=\"foucsOutVATAmount($event)\"\r\n                            />\r\n                           \r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td style=\"line-height: 12px;text-align:left;font-size: 12px; font-weight: bold; \" >Net Amount </td>\r\n                        <td style=\"line-height: 12px;text-align:right;\" >\r\n                            <input                         \r\n                            id=\"NetAmount\"\r\n                            type=\"number\"\r\n                            [disabled]=\"_transactionService.TrnMainObj.Mode =='VIEW'\"\r\n                            style=\"width:100%; height: 19px;text-align:right;\"\r\n                            [ngModel]=\"_transactionService.TrnMainObj.NETAMNT | twoDigitNumber\"\r\n                            (ngModelChange) = \"_transactionService.TrnMainObj.NETAMNT = $event \"\r\n                            (keydown)=\"preventInput($event)\" \r\n                            />\r\n                      \r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td style=\"line-height: 12px;text-align:left;font-size: 12px; font-weight: bold; \" >Rounding </td>\r\n                        <td style=\"line-height: 12px;text-align:left;\" >\r\n                            <input\r\n                            id=\"Rounding\"\r\n                            type=\"number\"\r\n                            autocomplete=\"off\"\r\n                            [disabled]=\"_transactionService.TrnMainObj.Mode =='VIEW'\"\r\n                            style=\"width:100%; height: 19px;text-align:right;\"\r\n                            [ngModel]=\"applyPipeinRoundingAmount?(_transactionService.TrnMainObj.ROUNDOFF | twoDigitNumber):_transactionService.TrnMainObj.ROUNDOFF\"\r\n                            (ngModelChange)=\"_transactionService.TrnMainObj.ROUNDOFF =$event\"\r\n                            (keyup) = \"RoundedAmountChange($event)\" \r\n                           \r\n                            (focusout)=\"roundOffFocusOut($event)\"  \r\n                            />\r\n                        </td>\r\n                    </tr>\r\n               </tbody>\r\n            </table>\r\n        </div>\r\n    </div>\r\n    </div>\r\n \r\n\r\n\r\n<generic-popup-grid #genericGridACList [popupsettings]=\"gridACListPopupSettings\"\r\n  (onItemDoubleClick)=\"onAcSelect($event)\"></generic-popup-grid>\r\n  <generic-popup-grid #genericGridSupplier [popupsettings]=\"gridPopupSettingsForSupplier\"\r\n  (onItemDoubleClick)=\"onSupplierSelected($event)\">\r\n</generic-popup-grid>\r\n<generic-popup-grid #gridSubLedgerSettingList [popupsettings]=\"gridSubLedgerSetting\"\r\n  (onItemDoubleClick)=\"onSubLedgerSelect($event)\"></generic-popup-grid>\r\n  \r\n  <!--TDS Popup-->\r\n  <div *ngIf=\"showTDSDetailPopup\" style=\"display : block; padding: 0px;  margin-bottom: 25px;height: auto;\r\n  position: absolute;right: 31%;top: 22%;width: 44%;z-index: 9999999\">\r\n\r\n  <div class=\"modal-content modal-content-main-area\">\r\n    <div class=\"modal-header\">\r\n      <h4 class=\"modal-title\" id=\"myModalLabel\">Please Select TDS AC</h4>\r\n     \r\n      <!-- <div style=\"float:right;    margin-right: -1%;\">\r\n        <label style=\"width: 49% !important\">\r\n          TDS Receivable :\r\n        </label>\r\n        <label><b style=\"font-size: 20px;\">Rs. {{FinalCrTDSObj.DRAMNT}}</b></label>\r\n      </div>\r\n      <div style=\"float:right;    margin-right: -1%;\">\r\n        <label>\r\n          TDS Payable :\r\n        </label>\r\n        <label><b style=\"font-size: 20px;\">Rs. {{FinalDrTDSObj.CRAMNT}}</b></label>\r\n      </div> -->\r\n    </div>\r\n    <div class=\"modal-body\">\r\n      <div class=\"main-container\" style=\"padding-top : 10px; margin-bottom: 0px; margin-top: 0px !important;\">\r\n        <div class=\"row\">\r\n          <div class=\"col-md-12\">\r\n              <table>\r\n                    <tr>\r\n                     \r\n                      <th style=\"border-bottom: 1px solid;width: 10%;\">Sno</th>\r\n                      <th style=\"width: 50%;border-bottom: 1px solid;\">Ledger A/C</th>\r\n                      <th style=\"width: 15%;border-bottom: 1px solid;\">Base Amnt</th>\r\n                      <th style=\"width: 15%;border-bottom: 1px solid;\">TDS</th>\r\n\r\n                    </tr>\r\n                    \r\n                      <tbody *ngFor=\"let x of this.PartyListFilter;let i=index\" (click)=\"TdsPopupClick(i)\">\r\n                        <tr (click)=\"TdsPopupClick(i)\" style=\"height: 38px;\">\r\n                     \r\n                        <td>{{i+1}}</td>\r\n                        <td><input type=\"text\" list=\"product\" [(ngModel)]=\"x.DESCA\"  (change)=\"ChangeDesca($event)\"\r\n                          style=\"width: 90%;\"\r\n                         autocomplete=\"off\" >\r\n                      <datalist id=\"product\" >\r\n                          <option *ngFor=\"let t of FilterList\"  [value]=\"t.ACNAME\" >\r\n                      </datalist>\r\n                    </td>\r\n                        \r\n                        <td><input type=\"number\" [(ngModel)]=\"x.AMNT\" style=\"width: 90%;\" (change)=\"BaseAmntChange()\"></td>\r\n                        <td>{{x.TDS}}</td>\r\n                      </tr>\r\n                      </tbody>\r\n\r\n                  \r\n\r\n\r\n                  </table>\r\n\r\n                </div>\r\n               \r\n\r\n     \r\n\r\n    \r\n       \r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"modal-footer\">\r\n      <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\"\r\n        (click)=\"cancelTDSDetailPopup()\">Cancel</button>\r\n      \r\n      <button type=\"button\" class=\"btn btn-primary\" (click)=\"TdsPopupOK()\">Ok</button>\r\n    </div>\r\n  </div>\r\n\r\n</div>\r\n\r\n<generic-popup-grid #genericGridCostCenterGroupList [popupsettings]=\"gridCostCenterGroupListPopupSettings\"\r\n  (onItemDoubleClick)=\"onCostCenterGroupSelect($event)\"></generic-popup-grid>\r\n  <generic-popup-grid #genericGridCostCenterList [popupsettings]=\"gridCostCenterListPopupSettings\"\r\n  (onItemDoubleClick)=\"onCostCenterSelect($event)\"></generic-popup-grid>"

/***/ }),

/***/ 1322:
/***/ (function(module, exports) {

module.exports = "<style>\r\n   .sectionWrapper{\r\n      display: flex;\r\n      flex-direction: column;\r\n      height: 94vh;\r\n    }\r\n\r\n    /* .topWwrapper {\r\n  background: tomato;\r\n} */\r\n .midTableWrapper{\r\n  flex: 1; /* or flex-grow: 1  */;\r\n  overflow: auto;\r\n  /* background: gold; */\r\n  overflow-x:hidden;\r\n}\r\n.footer-wrapper {\r\n  background: lightgreen;\r\n  min-height: 87px;\r\n}\r\n\r\n</style>\r\n <div class=\"sectionWrapper\">\r\n    <div class=\"topWwrapper\">\r\n      <div class=\"sticky-top\">\r\n  <div class=\"clearfix\">\r\n    <div class=\"col-md-1\">\r\n      <voucher-master-toggler></voucher-master-toggler>\r\n    </div>\r\n    <div class=\"col-md-4\">\r\n      <label style=\"font-family: Segoe UI Light;font-weight: bold;font-size: 20px;padding-left: 5%;padding-top: 1%;\">{{\r\n        _trnMainService.pageHeading }}</label>\r\n      <label style=\"font-size: 14px;\">&nbsp;>> {{ _trnMainService.TrnMainObj?.Mode | titlecase}} Voucher</label>\r\n    </div>\r\n    <div class=\"col-md-7\">\r\n      <account-master-action></account-master-action>\r\n    </div>\r\n  </div>\r\n</div>\r\n<div class=\"main-container\" style=\"margin-bottom: 0 !important;\">\r\n  <div class=\"clearfix\">\r\n    <trnmain-voucher-entry></trnmain-voucher-entry>\r\n  </div>\r\n\r\n</div>\r\n\r\n    </div>\r\n    <div class=\"midTableWrapper\">\r\n        <div class=\"clearfix\" style=\"margin-top: 5px\">\r\n    <trntran-voucher-entry></trntran-voucher-entry>\r\n  </div>\r\n\r\n    </div>\r\n\r\n    <div class=\"footer-wrapper\" style=\"background: gray;\">\r\n  <account-voucher-summary></account-voucher-summary>\r\n</div>\r\n\r\n </div>\r\n\r\n\r\n<multiple-series [voucherType]=\"voucherType\"></multiple-series>"

/***/ }),

/***/ 1323:
/***/ (function(module, exports) {

module.exports = "<style>\r\n    .table tr th {\r\n        text-align: center;\r\n        vertical-align: middle;\r\n    }\r\n\r\n    tr {\r\n        border: 1px solid #e6e6e6;\r\n        max-height: 25px;\r\n    }\r\n\r\n    td {\r\n        height: 23px;\r\n        border: 1px solid #e6e6e6;\r\n\r\n    }\r\n\r\n    .bottom {\r\n        position: fixed;\r\n        padding: 9px;\r\n        bottom: 20px;\r\n        left: 0px;\r\n        width: 100%;\r\n        height: 40px;\r\n        z-index: 999997;\r\n         background: #E2EAEA !important; \r\n    }\r\n</style>\r\n\r\n\r\n<div class=\"sticky-top\">\r\n    <div class=\"row clearfix\">\r\n        <div class=\"col-md-2\">\r\n            <voucher-master-toggler></voucher-master-toggler>\r\n        </div>\r\n        <div class=\"col-md-2\">\r\n            <h2 style=\"color: black; font-size: 15px; font-weight: 400\">{{pageHeading}} </h2>\r\n        </div>\r\n        <div class=\"col-md-8\">\r\n            <button (click)=\"onResetClick()\" style=\"margin: 0px 4px;\" class=\"btn btn-info pull-right\">\r\n                RESET\r\n            </button>\r\n            <button *ngIf=\"_trnMainService.TrnMainObj.Mode=='NEW' || _trnMainService.TrnMainObj.Mode=='EDIT'\"  (click)=\"onSaveClick()\" style=\"margin: 0px 4px;\" class=\"btn btn-info pull-right\">\r\n                SAVE\r\n            </button>\r\n            <button (click)=\"onViewClick()\" style=\"margin: 0px 4px;\" class=\"btn btn-info pull-right\">\r\n                VIEW\r\n            </button>\r\n            <button (click)=\"onPrintClick()\" style=\"margin: 0px 4px;\" class=\"btn btn-info pull-right\">\r\n                PRINT\r\n            </button>\r\n            <button (click)=\"onEditClick()\" style=\"margin: 0px 4px;\" class=\"btn btn-info pull-right\">\r\n                EDIT\r\n            </button>\r\n            <button (click)=\"onCancelClick()\" style=\"margin: 0px 4px;\" class=\"btn btn-info pull-right\">\r\n                CANCEL\r\n            </button>\r\n        </div>\r\n    </div>\r\n</div>\r\n<div class=\"main-container\">\r\n    <div [hidden]=\"!masterService.ShowMore\" class=\"row clearfix\" style=\"margin: 10px;\">\r\n        <div class=\"col-md-12\" style=\"margin: 8px 15px ; border: 1px solid #e6e6e6; \">\r\n            <div class=\"col-md-6\">\r\n                <div class=\"row\">\r\n                    <label style=\"width:30%\">Customer/Supplier: </label>\r\n                    <input\r\n                     type=\"text\" \r\n                     style=\"width:60%\"\r\n                     id=\"CustomerSupplier\"\r\n                     name=\"CustomerSupplier\"\r\n                     [(ngModel)]=\"this._trnMainService.TrnMainObj.BILLTO\"\r\n                     (keydown.tab)=\"onCustomerSupplierPopUPTab()\"\r\n                     (keydown.enter)=\"onCustomerSupplierPopUPTab()\"\r\n                     placeholder=\"Press ENTER or TAB to Customer & Supplier\" \r\n                     [disabled]=\"_trnMainService.TrnMainObj.Mode=='VIEW'\"\r\n                     />\r\n                </div>\r\n                <div class=\"row\">\r\n                    <label style=\"width:30%\">Address: </label>\r\n                    <input \r\n                    type=\"text\"\r\n                    style=\"width:60%\"\r\n                    [(ngModel)]=\"this._trnMainService.TrnMainObj.BILLTOADD\"\r\n                    id=\"Address\" \r\n                    name=\"Address\" \r\n                    placeholder=\"Address\"\r\n                    [disabled]=\"_trnMainService.TrnMainObj.Mode=='VIEW'\" />\r\n                </div>\r\n\r\n                <div class=\"row\">\r\n                    <label style=\"width:30%\">Remarks: </label>\r\n                    <input \r\n                    type=\"text\" \r\n                    style=\"width:60%\" \r\n                    [(ngModel)]=\"this._trnMainService.TrnMainObj.REMARKS\"\r\n                    id=\"Remarks\" \r\n                    name=\"Remarks\" \r\n                    placeholder=\"Remarks\"\r\n                    [disabled]=\"_trnMainService.TrnMainObj.Mode=='VIEW'\" />\r\n                </div>\r\n\r\n            </div>\r\n            <div class=\"col-md-6\">\r\n                <div class=\"row\">\r\n                    <label style=\"width:30%\">Ref Bill NO: </label>\r\n                    <input \r\n                    type=\"text\" \r\n                    style=\"width:60%\" \r\n                    id=\"RefBillNo\" \r\n                    name=\"RefBillNO\"\r\n                    [(ngModel)]=\"this._trnMainService.TrnMainObj.REFBILL\"\r\n                    (keydown.enter)=\"onRefBillNoPopUPTab($event)\"\r\n                    placeholder=\"Press ENTER  to Ref Bill NO\"\r\n                    [disabled]=\"_trnMainService.TrnMainObj.Mode=='VIEW'\" />\r\n                </div>\r\n                <!-- <div class=\"row\">\r\n                    <label style=\"width:30%\">Return Mode: </label>\r\n                    <select \r\n                    style=\"width: 60%\" \r\n                    [(ngModel)]=\"this._trnMainService.TrnMainObj.TRNMODE\"\r\n                    >\r\n                        <option></option>\r\n                        <option value=\"credit\">CREDIT</option>\r\n                    </select>\r\n                </div> -->\r\n\r\n                <!-- <div class=\"row\">\r\n                    <label style=\"width:30%\">Sales Type: </label>\r\n                    <select style=\"width: 60%\">\r\n                        <option></option>\r\n                    </select>\r\n                </div> -->\r\n\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"col-md-12\" style=\"height: 550px;\">\r\n        <table class=\"table\" style=\"margin-bottom: 5px; font-size: 12.5px;\">\r\n            <thead>\r\n                <tr style=\"border-bottom: 2px solid #E6E6E6; border-top: 2px solid #E6E6E6;    height: 30px;\r\n                                    background:#C0C0C0;\r\n                                    color: black;\">\r\n                    <th><span class=\"texttitle\" style=\"color: black\">S NO </span></th>\r\n                    <th><span class=\"texttitle\" style=\"color: black\">Code </span></th>\r\n                    <th><span class=\"texttitle\" style=\"color: black\">Description </span></th>\r\n                    <th><span class=\"texttitle\" style=\"color: black\">BatchNo </span></th>\r\n                    <th><span class=\"texttitle\" style=\"color: black\">Qty </span></th>\r\n                    <th><span class=\"texttitle\" style=\"color: black\">Packing </span></th>\r\n                    <th><span class=\"texttitle\" style=\"color: black\">MRP </span></th>\r\n                    <th><span class=\"texttitle\" style=\"color: black\">RATE </span></th>\r\n                    <th><span class=\"texttitle\" style=\"color: black\">New Rate </span></th>\r\n                    <th><span class=\"texttitle\" style=\"color: black\">Difference Amount </span></th>\r\n                    <th><span class=\"texttitle\" style=\"color: black\">GST(%) </span></th>     \r\n                    <th><span class=\"texttitle\" style=\"color: black\">GST AMT </span></th>                                   \r\n                    <th><span class=\"texttitle\" style=\"color: black\">Total Amount </span></th>  \r\n                    \r\n                </tr>\r\n            </thead>\r\n            <tbody style=\"border: 1px;\" *ngFor=\"let tList of _trnMainService.TrnMainObj.ProdList;let i=index\" >\r\n                \r\n                <tr (click)=\"RowClick(i)\"  [class.selected]=\"isTableRowSelected(i)\" [class.highlighted]=\"i==activerowIndex\" (keydown.delete)=\"deleteRow()\" >\r\n                    <td style=\"width: 55px;\">\r\n                        {{i+1}}\r\n                    </td>\r\n\r\n                    <td style=\"width: 95px;\">\r\n                        <input *ngIf=\"_trnMainService.TrnMainObj.Mode=='NEW' \" \r\n                        type=\"text\" \r\n                        id=\"Code{{i}}\" \r\n                        name=\"Code\" \r\n                        style=\"width: 120px;\"\r\n                        placeholder=\"Code\"\r\n                        [(ngModel)]=\"tList.MENUCODE\"\r\n                        (keydown.tab)=\"onItemPopUPTab()\"\r\n                        (keydown.enter)=\"onItemPopUPTab()\"\r\n                        (focus)=\"activerowIndex=i\"\r\n\r\n                    />\r\n                    <span *ngIf=\"_trnMainService.TrnMainObj.Mode=='VIEW' || _trnMainService.TrnMainObj.Mode=='EDIT'\" >{{tList.MENUCODE}}</span>\r\n                    </td>\r\n                    <td style=\"width: 300px;\">\r\n                            {{tList.DESCA}}\r\n                    </td>\r\n\r\n                    <td style=\"width: 110px;\">\r\n                            {{tList.BATCH}}\r\n                    </td>\r\n\r\n                    <td style=\"width: 85px;\">\r\n                            {{tList.STOCK}}\r\n                    </td>\r\n\r\n                    <td style=\"width: 85px;\">\r\n                            {{tList.UNIT}}\r\n                    </td>\r\n\r\n                    <td style=\"width: 80px;\">\r\n                            {{tList.MRP}}\r\n                    </td>\r\n                    <td style=\"width: 100px;\">\r\n                            {{tList.RATE | number : '1.2-2' }}\r\n                    </td>\r\n\r\n\r\n                    <td style=\"width:120px;\">\r\n                            <input \r\n                            *ngIf=\"_trnMainService.TrnMainObj.Mode=='NEW' || _trnMainService.TrnMainObj.Mode=='EDIT'\"\r\n                            type=\"text\"  \r\n                            style=\"width: 120px;\"\r\n                            id=\"NewRate\" \r\n                            name=\"NewRate\" \r\n                            [(ngModel)]=\"tList.ADJUSTMENTNEWRATE\" \r\n                            (keyup.enter)=\"addNewRow($event,i)\"\r\n                            (keydown.Delete)=\"removeRow(i)\"\r\n                            (blur)=\"onBlurClick(i)\"      \r\n                            placeholder=\"NewAmount\" />\r\n                            <span  *ngIf=\"_trnMainService.TrnMainObj.Mode=='VIEW'\">{{tList.ADJUSTMENTNEWRATE}}</span>\r\n                    </td>\r\n\r\n                    <td style=\"width:100px;\">\r\n                        {{ !tList.DIFFERENCEAMOUNT?'0.00':tList.DIFFERENCEAMOUNT | number : '1.2-2' }}\r\n                    </td>\r\n                    <td style=\"width:60px;\">\r\n                        {{tList.GSTRATE}}\r\n                    </td>\r\n                    <td style=\"width:100px;\">\r\n                        {{tList.VAT  | number : '1.2-2'}}\r\n                    </td>\r\n                    <td style=\"width:100px;\">\r\n                        {{tList.NETAMOUNT | number : '1.2-2' }}\r\n                    </td>\r\n                  \r\n                </tr>\r\n           \r\n            </tbody>\r\n\r\n        </table>\r\n\r\n    </div>\r\n\r\n\r\n</div>\r\n\r\n<div class=\"bottom\">\r\n    <table style=\"width: 1400px; border: 0px;\">\r\n        <td style=\"width: 900px;text-align: right ;border: 0px;\">\r\n            <h4>Total </h4>\r\n        </td>\r\n        <td style=\"text-align: center;width: 223px; border: 0px;\">\r\n            {{totalDifferenceAmount | number : '1.2-2'}}\r\n        </td>\r\n        <td style=\"text-align: right;width: 40px; border: 0px;\">\r\n            \r\n        </td>\r\n        <td style=\"text-align: center;border: 0px;\" >\r\n            {{totalGST | number : '1.2-2' }}\r\n        </td>\r\n        <td style=\"text-align: center;width: 162px;border: 0px;\">\r\n            {{totalAmount | number : '1.2-2' }}\r\n        </td>\r\n    </table>\r\n\r\n\r\n</div>\r\n\r\n<generic-popup-grid #customerSupplierGeneric [popupsettings]=\"gridCustomerSupplierPopupSettings\"\r\n    (onItemDoubleClick)=\"onItemDoubleClickCustomerSupplier($event)\">\r\n</generic-popup-grid>\r\n\r\n<generic-popup-grid #refBillNoGeneric [popupsettings]=\"gridRefBillNoGenericPopupSettings\"\r\n    (onItemDoubleClick)=\"onItemDoubleClickRefBillNO($event)\">\r\n</generic-popup-grid>\r\n\r\n<generic-popup-grid #itemGeneric [popupsettings]=\"gridItemGenericPopupSettings\"\r\n    (onItemDoubleClick)=\"onItemDoubleClick($event)\">\r\n</generic-popup-grid>\r\n\r\n<generic-popup-grid #vchrnoView [popupsettings]=\"gridVoucherGenericPopupSettings\"\r\n    (onItemDoubleClick)=\"onVoucherDoubleClick($event)\">\r\n</generic-popup-grid>\r\n<generic-popup-grid #editVchrno [popupsettings]=\"gridVoucherGenericPopupSettings\"\r\n    (onItemDoubleClick)=\"onEditVoucherDoubleClick($event)\">\r\n</generic-popup-grid>\r\n\r\n"

/***/ }),

/***/ 1324:
/***/ (function(module, exports) {

module.exports = ".clearfix {\r\n    background: #e2eaea;\r\n    height: 40px;\r\n}\r\n\r\n.clearfix .btn {\r\n    margin-top: 10px;\r\n    margin-left: 800px;\r\n}\r\n.col-md-4 label {\r\n    font-family: Segoe UI Light;\r\n    font-weight: bold;\r\n    font-size: 20px;\r\n    padding-left: 5%;\r\n    padding-top: 3%;\r\n    width: 100%;\r\n}\r\n\r\n\r\n.col-md-12 {\r\n    border-bottom: 1px solid #828080;\r\n    margin-top: 10px;\r\n    margin-bottom: 5px;\r\n    padding-bottom: 10px;\r\n    background: #e2eaea;\r\n    padding-top: 9px;\r\n    width: 100%;\r\n}\r\n\r\n.col-md-3 label {\r\n    font-size: 16px;\r\n    margin-bottom: 5px;\r\n}\r\n\r\n.col-md-3 select {\r\n    height: 25px;\r\n    font-size: 14px;\r\n    border: 1px solid #ccc;\r\n    border-radius: 3px;\r\n    color: black;\r\n    padding: 4px;\r\n    width: 180px;\r\n    margin-left: 5px;\r\n}\r\n\r\n\r\n/* Buttons */\r\n.col-md-3 .btn {\r\n    margin: 0px 4px;\r\n    height: 25px;\r\n}\r\n\r\n/* Tab Styles */\r\n.tab-container {\r\n    display: flex;\r\n    align-items: center;\r\n    background-color: #f3f3f1;\r\n    padding: 10px;\r\n    height: auto;\r\n}\r\n\r\n.tab {\r\n    padding: 5px 10px;\r\n    cursor: pointer;\r\n    border: 1px solid #ccc;\r\n    background-color: #fff;\r\n    transition: background-color 0.2s ease-in-out;\r\n}\r\n\r\n.tab.active {\r\n    background-color: #336799;\r\n    color: #fff;\r\n}\r\n\r\n.table-container {\r\n    overflow: auto;\r\n    height: 65vh;\r\n}\r\n\r\ntable {\r\n    width: 100%;\r\n    border-collapse: collapse;\r\n}\r\n\r\nthead th {\r\n    font-weight: bold;\r\n}\r\n\r\nthead tr,\r\ntfoot tr {\r\n    position: sticky;\r\n    top: 0;\r\n    border-bottom: 2px solid #e6e6e6;\r\n    border-top: 2px solid #e6e6e6;\r\n    height: 30px;\r\n    background: silver;\r\n    color: black;\r\n}\r\ntfoot tr {\r\n    position: sticky;\r\n    bottom: 0;\r\n}\r\n\r\ntbody tr{\r\n    height: 30px;\r\n}\r\n\r\ntfoot th {\r\n    height: 30px;\r\n    font-weight: bold;\r\n}\r\n\r\nth {\r\n    font-weight: bold;\r\n    text-align: center;\r\n    white-space: nowrap;\r\n}\r\n\r\nth.sno {\r\n    width: 1%;\r\n}\r\n\r\nth.account-heading {\r\n    width: 10%;\r\n}\r\n\r\ntbody tr:nth-child(even) {\r\n    background-color: #f0f0f0;\r\n}\r\n\r\ntbody tr:nth-child(odd) {\r\n    background-color: #ffffff;\r\n}\r\n\r\n.text-left {\r\n    text-align: left;\r\n}\r\n\r\n.text-right {\r\n    text-align: right;\r\n}\r\n\r\n\r\n\r\n"

/***/ }),

/***/ 1325:
/***/ (function(module, exports) {

module.exports = "<div class=\"clearfix\">\r\n    <div class=\"col-md-4\">\r\n        <label>Depreciation\r\n            Month Selection\r\n        </label>\r\n    </div>\r\n    <button class=\"btn btn-info\" (click)=\"Reset()\">Reset</button>\r\n</div>\r\n\r\n<div class=\"col-md-12\">\r\n    <div style=\"display: flex;\">\r\n        <div class=\"col-md-3\">\r\n            <label>Month Name:</label>\r\n            <select [(ngModel)]=\"selectedMonth\" (change)=\"onMonthSelected()\">\r\n                <option *ngFor=\"let month of months\" [value]=\"month.monthName\">{{ month.monthName }}</option>\r\n            </select>\r\n\r\n        </div>\r\n        <div class=\"col-md-8\">\r\n            <button class=\"btn btn-info\" (click)=\"calculate()\" [disabled]=\"!isMonthSelected\">Calculate</button>\r\n            <button class=\"btn btn-info\" (click)=\"saveToExcel()\" [disabled]=\"!calculationDone\">Save To Excel</button>\r\n            <button class=\"btn btn-info\" (click)=\"Save()\" [disabled]=\"!calculationDone || isViewed\">Save</button>\r\n            <button class=\"btn btn-info\" (click)=\"View()\" [disabled]=\"!isMonthSelected\">View</button>\r\n            <button class=\"btn btn-info\" (click)=\"Cancel()\" [disabled]=\"isDeleteEnable\">Delete</button>\r\n        </div>\r\n    </div>\r\n\r\n</div>\r\n\r\n<!-- **************table****************** -->\r\n\r\n<div class=\"tab-container\">\r\n    <div class=\"tab\" [class.active]=\"currentTab === 'account-wise'\" (click)=\"showTab('account-wise')\">Depreciation\r\n        Detail - Account Head Wise</div>\r\n    <div class=\"tab\" [class.active]=\"currentTab === 'item-wise'\" (click)=\"showTab('item-wise')\">Depreciation Detail\r\n        - Item Wise</div>\r\n    <div class=\"tab\" [class.active]=\"currentTab === 'asset-code-wise'\" (click)=\"showTab('asset-code-wise')\">\r\n        Depreciation Detail - Item Asset ID Wise</div>\r\n</div>\r\n\r\n<div class=\"table-container\" *ngIf=\"currentTab === 'account-wise'\">\r\n    <table>\r\n        <thead>\r\n            <tr>\r\n                <th class=\"text-left\">SNo.</th>\r\n                <th class=\"text-left\">Account Heading</th>\r\n                <th class=\"text-right\">Depreciation Rate</th>\r\n                <th class=\"text-right\">Cost Value</th>\r\n                <th class=\"text-right\">Current Book Value</th>\r\n                <th class=\"text-right\">Depreciation Value</th>\r\n                <th class=\"text-right\">Net Book Value</th>\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n            <tr *ngFor=\"let item of accountWiseData; let i = index\">\r\n                <td class=\"text-left\">{{ i + 1 }}</td>\r\n                <td class=\"text-left\">{{ item['Account_Heading'] }}</td>\r\n                <td class=\"text-right\">{{ item['Depreciation_Rate'] | number:'1.2-2'}}</td>\r\n                <td class=\"text-right\">{{ item['Cost_Value'] | number:'1.2-2'}}</td>\r\n                <td class=\"text-right\">{{ item['Current_Book_Value'] | number:'1.2-2' }}</td>\r\n                <td class=\"text-right\">{{ item['Depreciation'] | number:'1.2-2' }}</td>\r\n                <td class=\"text-right\">{{ item['Net_Book_Value'] | number:'1.2-2' }}</td>\r\n            </tr>\r\n        </tbody>\r\n        <tfoot>\r\n            <tr>\r\n                <th></th>\r\n                <th>Total</th>\r\n                <th></th>\r\n                <th class=\"text-right\">{{ totalCostValueAccountWise | number:'1.2-2' }}</th>\r\n                <th class=\"text-right\">{{ totalBookValueAccountWise | number:'1.2-2' }}</th>\r\n                <th class=\"text-right\">{{ totalDepreciationAccountWise | number:'1.2-2' }}</th>\r\n                <th class=\"text-right\">{{ totalNetBookValueAccountWise | number:'1.2-2' }}</th>\r\n            </tr>\r\n        </tfoot>\r\n    </table>\r\n</div>\r\n\r\n\r\n\r\n<!-- Item Wise Table -->\r\n<div class=\"table-container\" *ngIf=\"currentTab === 'item-wise'\">\r\n    <table>\r\n        <thead>\r\n            <tr>\r\n                <th class=\"text-left\">SNo.</th>\r\n                <th class=\"text-left\">Account Heading</th>\r\n                <th class=\"text-left\">Item Code</th>\r\n                <th class=\"text-left\">Item Name</th>\r\n                <th class=\"text-right\">Depreciation Rate</th>\r\n                <th class=\"text-right\">Cost Price</th>\r\n                <th class=\"text-right\">Quantity</th>\r\n                <!-- <th class=\"text-right\">Total Cost</th> -->\r\n                <th class=\"text-right\">Current Book Value</th>\r\n                <th class=\"text-right\">Depreciation Value</th>\r\n                <th class=\"text-right\">Net Book Value</th>\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n            <tr *ngFor=\"let item of itemWiseData; let i = index\">\r\n                <td class=\"text-left\">{{ i + 1 }}</td>\r\n                <td class=\"text-left\">{{ item['Account_Heading'] }}</td>\r\n                <td class=\"text-left\">{{ item['MENUCODE'] }}</td>\r\n                <td class=\"text-left\">{{ item['ITEMNAME'] }}</td>\r\n                <td class=\"text-right\">{{ item['Depreciation_Rate'] | number:'1.2-2' }}</td>\r\n                <td class=\"text-right\">{{ item['Cost_Value'] | number:'1.2-2'}}</td>\r\n                <td class=\"text-right\">{{ item['Quantity'] | number:'1.2-2'}}</td>\r\n                <!-- <td class=\"text-right\">{{ item['TotalCost'] | number:'1.2-2'}}</td> -->\r\n                <td class=\"text-right\">{{ item['Current_Book_Value'] | number:'1.2-2'}}</td>\r\n                <td class=\"text-right\">{{ item['Depreciation'] | number:'1.2-2'}}</td>\r\n                <td class=\"text-right\">{{ item['Net_Book_Value'] | number:'1.2-2'}}</td>\r\n            </tr>\r\n        </tbody>\r\n        <tfoot>\r\n            <tr>\r\n                <th></th>\r\n                <th>Total</th>\r\n                <th></th>\r\n                <th></th>\r\n                <th></th>\r\n                <th class=\"text-right\">{{ totalCostValueItemWise | number:'1.2-2' }}</th>\r\n                <th class=\"text-right\">{{ totalQuantityItemWise | number:'1.2-2' }}</th>\r\n                <!-- <th class=\"text-right\">{{ totalCostItemWise | number:'1.2-2' }}</th> -->\r\n                <th class=\"text-right\">{{ totalBookValueItemWise | number:'1.2-2' }}</th>\r\n                <th class=\"text-right\">{{ totalDepreciationItemWise | number:'1.2-2' }}</th>\r\n                <th class=\"text-right\">{{ totalNetBookValueItemWise | number:'1.2-2' }}</th>\r\n            </tr>\r\n        </tfoot>\r\n    </table>\r\n</div>\r\n\r\n\r\n<!-- Item Asset Code Wise Table -->\r\n<div class=\"table-container\" *ngIf=\"currentTab === 'asset-code-wise'\">\r\n    <table>\r\n        <thead>\r\n            <tr>\r\n                <th class=\"text-left\">SNo.</th>\r\n                <th class=\"text-left\">Account Heading</th>\r\n                <th class=\"text-left\">Item Code</th>\r\n                <th class=\"text-left\">Item Name</th>\r\n                <th class=\"text-left\">Asset Code</th>\r\n                <th class=\"text-right\">Depreciation Rate</th>\r\n                <th class=\"text-right\">Cost Value</th>\r\n                <th class=\"text-right\">Current Book Value</th>\r\n                <th class=\"text-right\">Depreciation</th>\r\n                <th class=\"text-right\">Net Book Value</th>\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n            <tr *ngFor=\"let item of assetCodeWiseData; let i = index\">\r\n                <td class=\"text-left\">{{ i + 1 }}</td>\r\n                <td class=\"text-left\">{{ item['Account_Heading'] }}</td>\r\n                <td class=\"text-left\">{{ item['MENUCODE'] }}</td>\r\n                <td class=\"text-left\">{{ item['ITEMNAME'] }}</td>\r\n                <td class=\"text-left\">{{ item['ASSETCODE'] }}</td>\r\n                <td class=\"text-right\">{{ item['Depreciation_Rate'] | number:'1.2-2'}}</td>\r\n                <td class=\"text-right\">{{ item['Cost_Value'] | number:'1.2-2'}}</td>\r\n                <td class=\"text-right\">{{ item['Current_Book_Value'] | number:'1.2-2'}}</td>\r\n                <td class=\"text-right\">{{ item['Depreciation'] | number:'1.2-2'}}</td>\r\n                <td class=\"text-right\">{{ item['Net_Book_Value'] | number:'1.2-2'}}</td>\r\n            </tr>\r\n        </tbody>\r\n        <tfoot>\r\n            <tr>\r\n                <th></th>\r\n                <th>Total</th>\r\n                <th></th>\r\n                <th></th>\r\n                <th></th>\r\n                <th></th>\r\n                <th class=\"text-right\">{{ totalCostValueAssetCodeWise | number:'1.2-2' }}</th>\r\n                <th class=\"text-right\">{{ totalBookValueAssetCodeWise | number:'1.2-2' }}</th>\r\n                <th class=\"text-right\">{{ totalDepreciationAssetCodeWise | number:'1.2-2' }}</th>\r\n                <th class=\"text-right\">{{ totalNetBookValueAssetCodeWise | number:'1.2-2' }}</th>\r\n            </tr>\r\n        </tfoot>\r\n    </table>\r\n</div>"

/***/ }),

/***/ 1326:
/***/ (function(module, exports) {

module.exports = "\r\n<!-- <div style=\"background: #e2eaea !important; height: 40px;\"  class=\"clearfix\" >\r\n  <label\r\n    style=\"\r\n    font-family: Segoe UI Light;\r\n    font-weight: bold;\r\n    font-size: 20px;\r\n    padding-left: 5%;\r\n    padding-top: 1%;\r\n    \"\r\n    >PARTY BALANCE CONFIRMATION</label>\r\n    <button style=\"margin-top: 9px; margin-right: 59px;\" class=\"btn btn-info pull-right\" (click)='reSet()'> Reset</button>\r\n\r\n</div> -->\r\n\r\n<div class=\"clearfix\"  style=\"background: #e2eaea !important; height: 40px;\" >\r\n  <div>\r\n  <div class=\"col-md-4\">\r\n    <!-- <h2 style=\"color: black;\">Bank Reconciliation </h2> -->\r\n    <label\r\n      style=\"font-family: Segoe UI Light;font-weight: bold;font-size: 20px;padding-left: 5%;padding-top: 3%;width: 100%;\">ItemWise Depreciation Detail\r\n      </label>\r\n  </div>\r\n  <div class=\"col-md-4\">\r\n\r\n  </div>\r\n  <div class=\"col-md-4\" style=\"margin-top:8px;\">\r\n    <button style=\"margin: 0px 4px;\" class=\"btn btn-info pull-right\" (click)=\"reSet()\">\r\n      Reset\r\n    </button>\r\n    <button class=\"btn btn-info pull-right\" (click)=\"onPrintClicked()\"> Print</button>\r\n    <!-- <button class=\"btn btn-info pull-right\" (click)=\"SelectDate()\">\r\n      View\r\n    </button> -->\r\n  </div>\r\n  </div>\r\n</div>\r\n\r\n\r\n<style>\r\n  input{\r\n    height: 25px;\r\n    vertical-align: middle;\r\n    font-size: 13px;\r\n    border: 1px solid #cbcbcb;\r\n    border-radius: 3px;\r\n    color: black;\r\n    padding-left: 4px;\r\n  }\r\n  label{\r\n    font-family: Roboto, Arial, sans-serif;\r\n    font-size: 14px;\r\n  }\r\n  legend{\r\n    font-family: Roboto, Arial, sans-serif;\r\n    font-size: 14px;\r\n    width:0;\r\n\r\n  }\r\n  .date{\r\n    margin-left: 8px;\r\n  }\r\n</style>\r\n\r\n<div  class=\"col-md-12\" style=\"border-bottom: 1px solid #828080;\r\n        margin-top:10px;\r\n        margin-bottom: 5px;\r\n        padding-bottom: 10px;\r\n        background: #e2eaea; padding-top: 9px;\r\n        width: 100%;\r\n       \">\r\n\r\n      <div style=\"display: flex;\">\r\n      <div class=\"col-md-3\">\r\n        <label>From:</label>\r\n        <input  placeholder=\"Year Start Date\" style=\"width:128px; height:24px;\" type=\"date\"\r\n        [(ngModel)]=\"PartyBalanceData.DATE1\"\r\n        (change)=\"changeEntryDate($event.target.value,'AD')\">&nbsp;A.D &nbsp;\r\n\r\n        <div style=\" width: 134px;margin-left: 202px; margin-top: -29px;\">\r\n          <nepali-date-picker name=\"nepaliDateFrom\" [id]=\"'nepaliDatefrom'\"\r\n            (change)=\"changeEntryDate($event.detail.value,'BS')\"\r\n            [label]=\"'dd/mm/yyyy'\"\r\n            [(ngModel)]=\"PartyBalanceData.BSDATE1\">\r\n            </nepali-date-picker>\r\n        </div>\r\n        <!-- <input  autocomplete=\"off\" id=\"nepaliDate\" placeholder=\"yyyy-mm-dd\"type=\"text\"\r\n        [(ngModel)]=\"PartyBalanceData.BSDATE1\" style=\"width: 90px;\" type=\"text\"\r\n        (change)=\"changeEntryDate($event.target.value,'BS')\">&nbsp;B.S\r\n        &nbsp; -->\r\n      </div>\r\n      <div class=\"col-md-3\" style=\"margin-top: 8px;\">\r\n        <label><input type=\"radio\" name=\"partytype\" [(ngModel)]=\"PartyBalanceData.PARTYTYPE\" value=C (change)=\"parttypeChange()\">&nbsp;Customer</label>\r\n        <label><input type=\"radio\" name=\"partytype\" [(ngModel)]=\"PartyBalanceData.PARTYTYPE\" value=V (change)=\"parttypeChange()\">&nbsp;Supplier</label>\r\n      </div>\r\n      <div class=\"col-md-5\" style=\"margin-top: 8px;\">\r\n        <label  class=\"smallBoldLabel\"><input type=\"checkbox\" name=\"transaction\" [(ngModel)]=\"PartyBalanceData.INCLUDECASHTRANSACTION\" (change)=\"$event.target.checked\r\n          ? (PartyBalanceData.INCLUDECASHTRANSACTION = 1)\r\n          : (PartyBalanceData.INCLUDECASHTRANSACTION = 0)\">&nbsp;Including Cash Transaction</label>\r\n      </div>\r\n    </div>\r\n      <div class=\"col-md-3\" style=\"margin-top: 4px;\">\r\n        <label>To :</label>\r\n        <input   placeholder=\"Year Start Date\" type=\"date\" style=\"width: 128px; height: 24px; margin-left: 13px;\"\r\n        [(ngModel)]=\"PartyBalanceData.DATE2\"\r\n        (change)=\"changeEndDate($event.target.value,'AD')\">&nbsp;A.D &nbsp;\r\n\r\n        <div style=\" width: 134px;margin-left: 202px; margin-top: -29px;\">\r\n          <nepali-date-picker name=\"nepaliDateFrom\" [id]=\"'nepaliDateto'\"\r\n            (change)=\"changeEndDate($event.detail.value,'BS')\"\r\n            [label]=\"'dd/mm/yyyy'\"\r\n            [(ngModel)]=\"PartyBalanceData.BSDATE2\">\r\n            </nepali-date-picker>\r\n        </div>\r\n        <!-- <input class=\"date\" autocomplete=\"off\" id=\"nepaliDate\" placeholder=\"yyyy-mm-dd\" type=\"text\"\r\n        [(ngModel)]=\"PartyBalanceData.BSDATE2\" type=\"text\" style=\"width: 90px;\"\r\n        (change)=\"changeEndDate($event.target.value,'BS')\">&nbsp;B.S -->\r\n        &nbsp;\r\n      </div>\r\n      <div class=\"col-md-3\" style=\"margin-top: 8px;\">\r\n        <label>Cost Center :</label>\r\n        <select id=\"costcenter\"\r\n          [(ngModel)]=\"PartyBalanceData.COSTCENTER\" style=\"width: 60%;height: 21px;\r\n          padding-left: 14px;\">\r\n          <option [ngValue]=\"\"></option>\r\n          <option *ngFor=\"let c of costlists\" [ngValue]=\"c.CCID\">\r\n            {{ c.COSTCENTERNAME }}</option>\r\n        </select>\r\n      </div>\r\n      <div class=\"col-md-4\" style=\"margin-top: 9px;\">\r\n        <div>\r\n          <label  style=\"margin-right:1%;\" >Party Account:</label>\r\n          <input style=\"height: 25px; margin-left: 1%; width: 74%;\"\r\n          (keydown.Enter)=\"showAcList(i);\" name=\"customerName\" [(ngModel)]=\"PartyBalanceData.CUSTOMERNAME\" type= \"text\" placeholder=\"Press Enter to select\" autocomplete=\"off\">\r\n        </div>\r\n      </div>\r\n      <div class=\"col-md-1\" style=\"margin-top: 6px;\">\r\n        <button class=\"btn btn-info pull-left\" (click)='onLoad()'> Load</button>\r\n      </div>\r\n</div>\r\n\r\n<div class=\"col-md-12\">\r\n    <!-- <div class=\"col-md-8\" style=\"margin-top: 5px;\">\r\n      <div>\r\n      <label>Prepared By:</label>\r\n      <label style=\"margin-left: 15px;\">Name:</label>\r\n      <input  [(ngModel)]=\"Name\" id=\"Name0\" type=\"text\">\r\n\r\n      <label style=\"margin-left:30px;\">Designation:</label>\r\n        <input [(ngModel)]=\"Designation\" id=\"destination\" type=\"text\">\r\n      </div>\r\n    </div> -->\r\n  <!-- <fieldset style=\"height: 89px; width:113%\">\r\n      <legend>Prepared By:</legend>\r\n      <div >\r\n        <label>Name:</label>\r\n        <input style=\"width: 79%; margin-left:9.3%\"  type=\"text\">\r\n      </div>\r\n      <div>\r\n        <label>Designation:</label>\r\n        <input style=\"width:79%; margin-left: 1%;\"  type=\"text\">\r\n      </div>\r\n  </fieldset>\r\n</div> -->\r\n    <div class=\"col-md-3\"></div>\r\n\r\n\r\n    <div class=\"col-md-1\">\r\n      <!-- <button\r\n      *ngIf=\"_trnMainService.TrnMainObj.Mode == 'VIEW'  &&\r\n    !showSecondaryButtons && _trnMainService.TrnMainObj.VoucherType==12 && _trnMainService.TrnMainObj.VoucherType==15|| _trnMainService.TrnMainObj.VoucherType==16 || _trnMainService.TrnMainObj.VoucherType!=3 \"\r\n      [ngClass]=\"changeCursor==true?'PrintPending':'PrintDone'\" (click)=\"onPrintClicked()\" class=\"btn btn-info pull-right\" [disabled]=\"_trnMainService.TrnMainObj.Mode == 'NEW' || _trnMainService.TrnMainObj.Mode == 'EDIT'\" >\r\n      F8 PRINT\r\n    </button> -->\r\n      <!-- <button class=\"btn btn-info pull-left\" (click)=\"onPrintClicked()\"> Print</button> -->\r\n    </div>\r\n</div>\r\n\r\n\r\n<style>\r\n  table {\r\n  border-collapse: collapse;\r\n}\r\n  td {\r\n    /* border: 2px solid #000000; */\r\n    height: 24px;\r\n  }\r\n\r\n  th {\r\n    font-weight: bold;\r\n    font-family: Roboto, Arial, sans-serif;\r\n    text-align: center;\r\n  }\r\n\r\n</style>\r\n\r\n\r\n<!-- **************table****************** -->\r\n\r\n<div style=\"margin-top: 100px\">\r\n  <div style=\"height: 480px;\">\r\n    <table style=\"margin-bottom: 5px; font-size: 13px; width: 100%\">\r\n      <thead>\r\n        <tr\r\n          style=\"\r\n            border-bottom: 2px solid #e6e6e6;\r\n            border-top: 2px solid #e6e6e6;\r\n            height: 30px;\r\n            background: silver;\r\n            color: black;\">\r\n\r\n          <th style=\"width: 1%\">SNo.</th>\r\n          <th style=\"width: 19%; padding-left: 1%\">Account Heading</th>\r\n          <th style=\"width: 7%; padding-left: 1%\">Asset Code</th>\r\n          <th style=\"width: 7%; padding-left: 1%\">Item Name</th>\r\n          <th style=\"width: 7%; padding-left: 1%\">Depreciation Rate (%)</th>\r\n          <th style=\"width: 7%; padding-left: 1%\">Cost Price</th>\r\n          <th style=\"width: 7%; padding-left: 1%\">Book Value</th>\r\n          <th style=\"width: 7%; padding-left: 1%\">Depreciation</th>\r\n          <th style=\"width: 7%; padding-left: 1%\">Net Book Value</th>\r\n\r\n        </tr>\r\n      </thead>\r\n      <tbody *ngFor=\"let i of PartyInfo\" >\r\n\r\n        <tr style=\"border: 1px solid #e6e6e6;max-height:25px;\">\r\n\r\n          <td style=\"line-height: 21px; text-align: center; border: 1px solid #e6e6e6; \">\r\n           {{i.SNO}}\r\n          </td>\r\n\r\n          <td style=\"line-height: 21px; text-align: center; border: 1px solid #e6e6e6;\">\r\n            <input\r\n              style=\"height: 25px; width: 100%\" [(ngModel)]=\"i.PARTICULAR\" readonly/>\r\n          </td>\r\n          <td style=\"line-height: 21px; text-align: center; border: 1px solid #e6e6e6;\">\r\n            <input\r\n              style=\"height: 25px; width: 100%\" [(ngModel)]=\"i.OPERATION\" readonly/>\r\n          </td>\r\n          <td style=\"line-height: 21px; text-align: center; border: 1px solid #e6e6e6;\">\r\n            <input\r\n              style=\"height: 25px; text-align: right; width: 100% \" [(ngModel)]=\"i.AMOUNT\" readonly/>\r\n          </td>\r\n\r\n        </tr>\r\n      </tbody>\r\n      <!-- <ng-container *ngIf=\"PartyInfo.length == 0\">\r\n        <tbody style=\"background:#e2eaea;\">\r\n          <tr>\r\n            <td colspan=\"4\">\r\n              Party Info is Empty.\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </ng-container> -->\r\n    </table> \r\n  </div>\r\n</div>\r\n\r\n\r\n<generic-popup-grid #genericGridACList [popupsettings]=\"gridACListPopupSettings\"\r\n  (onItemDoubleClick)=\"onAcSelect($event)\"></generic-popup-grid>\r\n"

/***/ }),

/***/ 1327:
/***/ (function(module, exports) {

module.exports = "<style>\r\n  .sectionWrapper{\r\n      display: flex;\r\n      flex-direction: column;\r\n      height: 94vh;\r\n    }\r\n .midTableWrapper{\r\n  flex: 1; \r\n  overflow: auto;\r\n  overflow-x:hidden;\r\n}\r\n.footer-wrapper {\r\n  background: lightgreen;\r\n  min-height: 87px;\r\n}\r\n</style>\r\n\r\n<div class=\"sectionWrapper\">\r\n   <div class=\"topWrapper\">\r\n    <div class=\"sticky-top\">\r\n  <div class=\"clearfix\">\r\n    <div class=\"col-md-1\">\r\n      <voucher-master-toggler></voucher-master-toggler>\r\n    </div>\r\n    <div class=\"col-md-4\">\r\n      <label style=\"font-family: Segoe UI Light;font-weight: bold;font-size: 20px;padding-left: 5%;padding-top: 1%;\">{{\r\n        _trnMainService.pageHeading }}</label>\r\n      <label style=\"font-size: 14px;\">&nbsp;>> {{ _trnMainService.TrnMainObj?.Mode | titlecase}} Voucher</label>\r\n    </div>\r\n    <div class=\"col-md-7\">\r\n      <!-- <account-master-action (onBillTrackEmit)=\"BillTrack()\"></account-master-action> -->\r\n      <account-master-action></account-master-action>\r\n    </div>\r\n  </div>\r\n</div>\r\n<div class=\"main-container\" style=\"margin-bottom: 0  !important;\">\r\n  <div class=\"clearfix\">\r\n    <trnmain-voucher-entry></trnmain-voucher-entry>\r\n  </div>\r\n \r\n</div>\r\n\r\n   </div>\r\n    <div class=\"midTableWrapper\">\r\n       <div class=\"clearfix\" style=\"margin-top: 5px\">\r\n        <!-- <trntran-voucher-entry #trnmainentry></trntran-voucher-entry> -->\r\n        <trntran-voucher-entry></trntran-voucher-entry>\r\n  </div>\r\n\r\n    </div>\r\n    \r\n<div class=\"footer-wrapper\" style=\"background: gray;\">\r\n  <account-voucher-summary></account-voucher-summary>\r\n</div>\r\n\r\n</div>\r\n\r\n\r\n\r\n\r\n<multiple-series [voucherType]=\"voucherType\"></multiple-series>"

/***/ }),

/***/ 1328:
/***/ (function(module, exports) {

module.exports = "<form [formGroup]=\"TrnMainForm\">\r\n  <div class=\"row\">\r\n    <div class=\"col-md-12\" style=\"padding:5px\">\r\n      <div style=\"margin:5px; margin-bottom:0px\">\r\n        <div class=\"row\">\r\n          <div class=\"col-md-12\">\r\n            <div class=\"col-md-6\">\r\n              <div class=\"col-md-12\">\r\n                  <div class=\"col-md-4\">\r\n                      <label style=\"width:auto\">Difference Amount: </label>\r\n                    </div>\r\n                    <div class=\"col-md-8\">\r\n                      <input\r\n                        formControlName=\"DIFFERENCE\"\r\n                        style=\"width:100%\"\r\n                        value=\"{{ _trnMainService.differenceAmount }}\"\r\n                      />\r\n                    </div>\r\n              </div>\r\n              <div class=\"col-md-12\">\r\n                  <div class=\"col-md-4\">\r\n                      <label>Narration: </label>\r\n                    </div>\r\n                    <div class=\"col-md-8\">\r\n                      <textarea\r\n                        formControlName=\"REMARKS\"\r\n                        rows=\"2\"\r\n                        style=\"padding-left:4px; vertical-align: top;width: 100%\"\r\n                      ></textarea>\r\n                    </div>\r\n              </div> \r\n            </div>\r\n            <div class=\"col-md-6\"></div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</form>\r\n"

/***/ }),

/***/ 1329:
/***/ (function(module, exports) {

module.exports = " \r\n<div class=row style=\"margin: 5px 0px\">\r\n    <form [ngClass]=\"showWholeSubledger ? 'col-md-8' : 'col-md-12'\" style=\"padding-left: 0px;padding-right: 5px;\">\r\n        <!-- <label style=\"text-align:center; display: block; font-size: 18px; float:none; margin-left:auto; margin-right:auto;\">Journal Entry</label> -->\r\n        <div style=\"display: block; max-height: 320px; min-height: 250px; overflow-y: auto\" class=\"scroll\">\r\n            <table class=\"table\" style=\"margin-bottom: 5px; font-size: 12.5px;\" (click)=\"hideDetail()\">\r\n                <thead>\r\n                    <tr style=\"border-bottom: 2px solid #E6E6E6; border-top: 2px solid #E6E6E6\">\r\n                        <th>S.No.</th>\r\n                        <th>A/C Code</th>\r\n                        <th>A/C Name</th>\r\n                        <th>Debit Amount</th>\r\n                        <th>Credit Amount</th>\r\n                        <th [hidden]=\"hasCheque == false\">Cheque No.</th>\r\n                        <th [hidden]=\"hasCheque == false\">Cheque Date</th>\r\n                        <th [hidden]=\"hasCostCenter == false\">Cost Center</th>\r\n                        <th>Narration</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody *ngFor=\"let tList of trnMain.TrntranList;let i=index\" style=\"border: 0px\">\r\n                    <tr (click)=\"clickRow(i)\">\r\n                        <td>{{i+1}}.</td>\r\n                        <td class=\"cell-with-comment\">\r\n                            <input  \r\n                                #ACCODEInput\r\n                                type=\"text\" \r\n                                autocomplete=\"false\" \r\n                                [focus]=\"acNameFocused\" \r\n                                style=\"height:23px;width: 100%;\"  \r\n                                (keyup.Enter)=\"showAcList(i);ACCODEInput.blur()\" \r\n                                (keydown.Tab)=\"showAcList(i); $event.preventDefault();ACCODEInput.blur()\" \r\n                                (keydown)=\"preventInput($event);\"\r\n                                name=\"acCode{{i}}\" \r\n                                value=\"{{(tList.acitem!=null) ? tList.acitem.ACCODE : ''}}\" /> \r\n                                <span class=\"cell-comment\">\r\n                                    press ENTER or TAB to Select Account\r\n                                </span>\r\n                        </td>\r\n                        <td>\r\n                            <input  \r\n                            style=\"height:23px;width: 100%\" list-formatter=\"ACNAME\" value=\"{{(tList.acitem!=null) ? tList.acitem.ACNAME : ''}}\" \r\n                            name=\"acName{{i}}\" disabled /> \r\n                        </td>\r\n                        <td>\r\n                            <input decimalPlacesRestriction=\"2\" [disabled]=\"tList.hasDebit == false\" [style.background-color]=\"tList.drBGColor\" [style.color]=\"tList.drColor\" type=\"number\"\r\n                                style=\"width: 100%; height:23px\" name=\"debit{{i}}\" id=\"debit{{i}}\" [(ngModel)]=\"tList.DRAMNT\"\r\n                                (keyup)=\"changeDebit($event.target.value,i)\">\r\n                        </td>\r\n                        <td>\r\n                            <input decimalPlacesRestriction=\"2\"  [disabled]=\"tList.hasCredit == false\" [style.background-color]=\"tList.crBGColor\" [style.color]=\"tList.crColor\" type=\"number\"\r\n                                style=\"width: 100%; height:23px\" name=\"credit{{i}}\" id=\"credit{{i}}\" [(ngModel)]=\"tList.CRAMNT\"\r\n                                (keyup)=\"changeCredit($event.target.value, i)\">\r\n                        </td>\r\n                        <td [hidden]=\"hasCheque == false\"><input type=\"text\" name=\"chequeNo{{i}}\" [(ngModel)]=\"tList.ChequeNo\" style=\"width: 100%; height:23px\"></td>\r\n                        <td [hidden]=\"hasCheque == false\"><input type=\"date\" style=\"width: 100%; height:23px\" name=\"chequeDate{{i}}\" [(ngModel)]=\"tList.ChequeDate\"></td>\r\n                        <td [hidden]=\"hasCostCenter == false\">\r\n                            <select name=\"costCenter{{i}}\" [(ngModel)]=\"tList.CostCenter\" style=\"width: 100%;height: 23px;\">\r\n                                <option hidden></option>\r\n                                <option *ngFor=\"let c of masterService.costCenterList$ | async\">{{c.CostCenterName}}</option>\r\n                            </select>\r\n                        </td>\r\n                        <td>\r\n                            <input  \r\n                            (keydown.Tab)=\"addRow(i)\"\r\n                            (keydown.Enter)=\"addRow(i)\"\r\n                            (keydown.Delete)=\"removeRow(i)\"\r\n                            style=\"width: 100%\"\r\n                            type=\"text\" name=\"narration{{i}}\" [(ngModel)]=\"tList.NARATION\" placeholder=\"Narration\">\r\n                        </td>\r\n                    </tr>\r\n                    <!-- <tr *ngIf=\"tList.inputMode == true\" (click)=\"clickRow(i)\">\r\n                        <td></td>\r\n                        <td colspan=\"8\"> \r\n                            <button *ngIf=\"tList.inputMode == true && tList.editMode == false\" (click)=\"addRow(i)\" style=\"margin-left:3px\" [disabled]=\"hasAddBtn == false\"\r\n                                class=\"glyphicon glyphicon-plus\"></button>\r\n                            <button *ngIf=\"tList.editMode == true && tList.inputMode == true\" (click)=\"saveRow(i)\" style=\"margin-left:3px\" class=\"glyphicon glyphicon-floppy-disk\"></button>\r\n                            <button *ngIf=\"tList.inputMode == true\" (click)=\"removeRow(i);\" style=\"margin-left:2px\" class=\"glyphicon glyphicon-remove\"></button>\r\n                        </td>\r\n                    </tr> -->\r\n                    <tr *ngIf=\"tList.inputMode == false\" (click)=\"clickRow(i)\">\r\n                        <td style=\"line-height:21px\">\r\n                            <div *ngIf=\"tList.AccountItem.HASSUBLEDGER == 1\" style=\"display:inline-block\">*</div>{{i+1}}.</td>\r\n                        <td style=\"line-height:21px\">{{tList.AccountItem.ACCODE}}</td>\r\n                        <td style=\"line-height:21px\">{{tList.AccountItem.ACNAME}}</td>\r\n                        <td style=\"line-height:21px\">{{tList.DRAMNT}}</td>\r\n                        <td style=\"line-height:21px\">{{tList.CRAMNT}}</td>\r\n                        <td [hidden]=\"hasCheque == false\" style=\"line-height:21px\">{{tList.ChequeNo}}</td>\r\n                        <td [hidden]=\"hasCheque == false\" style=\"line-height:21px\">{{tList.ChequeDate}}</td>\r\n                        <td [hidden]=\"hasCostCenter == false\" style=\"line-height:21px\">{{tList.CostCenter}}</td>\r\n                        <!-- <td style=\"display:flex;\">\r\n                            <button id=\"editBtn{{i}}\" (click)=\"editRow(i)\" style=\"margin-top:0px\" class=\"glyphicon glyphicon-edit\"></button>\r\n                            <button (click)=\"removeRow(i)\" style=\"margin-left:5px; margin-top:0px\" class=\"glyphicon glyphicon-remove\"></button>\r\n                        </td> -->\r\n                        <td>\r\n                           {{tList.NARATION}} \r\n                        </td>\r\n                    </tr>  \r\n\r\n                    <!-- <tr *ngIf=\"tList.NARATION != null && tList.inputMode == false\" (click)=\"clickRow(i)\">\r\n                        <td style=\"padding-top: 0px; line-height:21px\"></td>\r\n                        <td colspan=\"8\" style=\"padding-top: 0px; line-height:21px\">\r\n                            ( {{tList.NARATION}} ) \r\n                        </td>\r\n                    </tr> -->\r\n                </tbody>\r\n            </table>\r\n        </div> \r\n    </form>\r\n    <div *ngIf=\"showWholeSubledger==true\">\r\n        <form *ngIf=\"showSubLedger==true\" class=\"col-md-4\" style=\"padding-left: 5px;padding-right: 0px;\" id=\"sub-ledger\">\r\n            <label style=\"text-align:center; display: block; font-size: 18px; float:none; margin-left:auto; margin-right:auto; width:auto\">Sub-Ledger Entry</label>\r\n            <div style=\"display: block; max-height: 400px;min-height: 292px;\" class=\"scroll\">\r\n                <table class=\"table\" style=\"margin-bottom: 5px; font-size: 12.5px;\">\r\n                    <thead>\r\n                        <tr style=\"border-bottom: 2px solid #E6E6E6; border-top: 2px solid #E6E6E6\">\r\n                            <th>S.No.</th>\r\n                            <th>A/C Code</th>\r\n                            <th>A/C Name</th>\r\n                            <th>{{showAmount}} Amount</th>\r\n                            <th></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody *ngFor=\"let tList of subLedgerList;let i=index\" style=\"border: 0px;\">\r\n                        <tr *ngIf=\"tList.inputMode == true\">\r\n                            <td>{{i+1}}.</td>\r\n                            <td>\r\n                                <select name=\"acCode{{i}}\" *ngIf=\"enableACCodeFocus==true\" [subFocus]=\"subAcCodeFocused\" style=\"height: 23px;\" [(ngModel)]=\"tList.SubledgerItem\" (change)=\"subACCodeChange(i)\">\r\n                                    <option *ngFor=\"let subItemList of subledgerItemList\" [ngValue]=\"subItemList\">{{subItemList.ACCODE}}</option>\r\n                                </select>\r\n                                <select name=\"acCode{{i}}\" *ngIf=\"enableACCodeFocus==false\" style=\"height: 23px;\" [(ngModel)]=\"tList.SubledgerItem\" (change)=\"subACCodeChange(i)\">\r\n                                    <option *ngFor=\"let subItemList of subledgerItemList\" [ngValue]=\"subItemList\">{{subItemList.ACCODE}}</option>\r\n                                </select>\r\n                            </td>\r\n                            <td>\r\n                                <select name=\"acName{{i}}\" *ngIf=\"enableACNameFocus==true\" [subFocus]=\"subAcNameFocused\" style=\"height: 23px; max-width: 140px\" [(ngModel)]=\"tList.SubledgerItem\" (change)=\"subACNameChange(i)\">\r\n                                    <option *ngFor=\"let subItemList of subledgerItemList\" [ngValue]=\"subItemList\">{{subItemList.ACNAME}}</option>\r\n                                </select>\r\n                                <select name=\"acName{{i}}\" *ngIf=\"enableACNameFocus==false\" style=\"height: 23px; max-width: 140px\" [(ngModel)]=\"tList.SubledgerItem\" (change)=\"subACNameChange(i)\">\r\n                                    <option *ngFor=\"let subItemList of subledgerItemList\" [ngValue]=\"subItemList\">{{subItemList.ACNAME}}</option>\r\n                                </select>\r\n                            </td>\r\n                            <td>\r\n                                <input type=\"number\" *ngIf=\"showAmount=='Dr.'\" style=\"height: 23px;max-width: 90px\" name=\"subDebit{{i}}\" id=\"subDebit\"\r\n                                    [(ngModel)]=\"tList.DRAMNT\" (keyup)=\"changeSubDebit($event.target.value,i)\">\r\n                                <input type=\"number\" *ngIf=\"showAmount=='Cr.'\" style=\"height: 23px;max-width: 90px\" name=\"subCredit{{i}}\" id=\"subCredit\"\r\n                                    [(ngModel)]=\"tList.CRAMNT\" (keyup)=\"changeSubCredit($event.target.value,i)\">\r\n                            </td>\r\n                            <td></td>\r\n                        </tr>\r\n                        <tr *ngIf=\"tList.inputMode == true\">\r\n                            <td>\r\n                                <td colspan=\"5\">\r\n                                    <input style=\"min-width: 70.5%;height: 23px;\" type=\"text\" name=\"narration{{i}}\" [(ngModel)]=\"tList.NARATION\" placeholder=\"Narration\">\r\n                                    <button *ngIf=\"tList.inputMode == true && tList.editMode == false\" (click)=\"addLedgerRow(i)\" style=\"margin-left:3px;\" [disabled]=\"hasLedgerAddBtn == false\"\r\n                                        class=\"glyphicon glyphicon-plus\"></button>\r\n                                    <button *ngIf=\"tList.editMode == true && tList.inputMode == true\" (click)=\"saveLedgerRow(i)\" style=\"margin-left:3px;\" class=\"glyphicon glyphicon-floppy-disk\"></button>\r\n                                    <button *ngIf=\"tList.inputMode == true\" (click)=\"removeLedgerRow(i);\" style=\"margin-left:1px\" class=\"glyphicon glyphicon-remove\"></button>\r\n                                </td>\r\n                        </tr>\r\n\r\n                        <tr *ngIf=\"tList.inputMode == false\">\r\n                            <td>{{i+1}}.</td>\r\n                            <td>{{tList.SubledgerItem.ACCODE}}</td>\r\n                            <td>{{tList.SubledgerItem.ACNAME}}</td>\r\n                            <td>\r\n                                <div *ngIf=\"tList.DRAMNT != 0\">{{tList.DRAMNT}}</div>\r\n                                <div *ngIf=\"tList.CRAMNT != 0\">{{tList.CRAMNT}}</div>\r\n                            </td>\r\n                            <td style=\"display:flex;\">\r\n                                <button id=\"editLedgerBtn{{i}}\" (click)=\"editLedgerRow(i)\" class=\"glyphicon glyphicon-edit\"></button>\r\n                                <button (click)=\"removeLedgerRow(i)\" style=\"margin-left:5px\" class=\"glyphicon glyphicon-remove\"></button>\r\n                            </td>\r\n                        </tr>\r\n\r\n                        <tr *ngIf=\"tList.NARATION != null && tList.inputMode == false\">\r\n                            <td></td>\r\n                            <td colspan=\"4\" style=\"padding-top:0px;\">\r\n                               ( {{tList.NARATION}} )\r\n                            </td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </form>\r\n\r\n        <div *ngIf=\"showSubLedgerList == true\" class=\"col-md-4\" style=\"padding-left: 5px;padding-right: 0px;\" id=\"sub-ledger\">\r\n            <label style=\"text-align:center; display: block; font-size: 18px; float:none; margin-left:auto; margin-right:auto; width:auto\">Sub-Ledger List</label>\r\n            <div style=\"display: block; max-height: 400px;\" class=\"scroll\">\r\n                <table class=\"table\" style=\"margin-bottom: 5px; font-size: 12.5px;\">\r\n                    <thead>\r\n                        <tr style=\"border-bottom: 2px solid #E6E6E6; border-top: 2px solid #E6E6E6\">\r\n                            <th>S.No.</th>\r\n                            <th>A/C Code</th>\r\n                            <th>A/C Name</th>\r\n                            <th>Dr. Amnt</th>\r\n                            <th>Cr. Amnt</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody *ngFor=\"let tList of trnMain.TrntranList;let i=index\" style=\"border: 0px;\">\r\n                        <tr *ngIf=\"tList.AccountItem.HASSUBLEDGER == 1\">\r\n                            <td *ngIf=\"tList.AccountItem.ACCODE != null || tList.AccountItem.ACNAME != null\"><strong></strong></td>\r\n                            <td style=\"border-bottom: 2px solid #E6E6E6;line-height:20px;\" *ngIf=\"tList.AccountItem.ACCODE != null || tList.AccountItem.ACNAME != null\"><strong>{{tList.AccountItem.ACCODE}}</strong></td>\r\n                            <td style=\"border-bottom: 2px solid #E6E6E6;line-height:20px;\" *ngIf=\"tList.AccountItem.ACCODE != null || tList.AccountItem.ACNAME != null\"><strong>{{tList.AccountItem.ACNAME}}:</strong></td>\r\n                            <td style=\"border-bottom: 2px solid #E6E6E6;line-height:20px;\"></td>\r\n                            <td style=\"border-bottom: 2px solid #E6E6E6;line-height:20px;\"></td>\r\n                        </tr>\r\n                        <tr *ngFor=\"let sList of trnMain.TrntranList[i].SubledgerTranList;let j=index\">\r\n                            <td *ngIf=\"sList.SubledgerItem != null && sList.SubledgerItem.ACNAME != null\" style=\"line-height:20px;\">{{j+1}}.</td>\r\n                            <td style=\"line-height:20px;\" *ngIf=\"sList.SubledgerItem != null && sList.SubledgerItem.ACNAME != null\">{{sList.SubledgerItem.ACCODE}}</td>\r\n                            <td style=\"line-height:20px;\" *ngIf=\"sList.SubledgerItem != null && sList.SubledgerItem.ACNAME != null\">{{sList.SubledgerItem.ACNAME}}</td>\r\n                            <td style=\"line-height:20px;\" *ngIf=\"sList.SubledgerItem != null && sList.SubledgerItem.ACNAME != null\">{{sList.DRAMNT}}</td>\r\n                            <td style=\"line-height:20px;\" *ngIf=\"sList.SubledgerItem != null && sList.SubledgerItem.ACNAME != null\">{{sList.CRAMNT}}</td>\r\n                        </tr>\r\n\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n\r\n        <form *ngIf=\"showHelp == true\" class=\"col-md-4\" style=\"padding-left: 5px;padding-right: 0px;\" id=\"help\">\r\n            <label style=\"text-align:center; display: block; font-size: 18px; float:none; margin-left:auto; margin-right:auto; width:auto\">Help</label>\r\n            <table class=\"table\" style=\"margin-bottom: 5px;\">\r\n                <h5><strong>What is Lorem Ipsum?</strong></h5>\r\n                <p>\r\n                    <strong>Lorem Ipsum</strong> is simply dummy text of the printing and typesetting industry. Lorem Ipsum\r\n                    has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley\r\n                    of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also\r\n                    the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s\r\n                    with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing\r\n                    software like Aldus PageMaker including versions of Lorem Ipsum\r\n                </p>\r\n            </table>\r\n        </form>\r\n    </div> \r\n</div> \r\n\r\n<generic-popup-grid  \r\n  #genericGridACList \r\n  [popupsettings]=\"gridACListPopupSettings\"\r\n  (onItemDoubleClick) = \"onAcSelect($event)\"\r\n  ></generic-popup-grid> "

/***/ }),

/***/ 1330:
/***/ (function(module, exports) {

module.exports = "<!-- <div style=\"background: #e2eaea !important; height: 40px;\"  class=\"clearfix\" >\r\n  <label\r\n    style=\"\r\n    font-family: Segoe UI Light;\r\n    font-weight: bold;\r\n    font-size: 20px;\r\n    padding-left: 5%;\r\n    padding-top: 1%;\r\n    \"\r\n    >PARTY BALANCE CONFIRMATION</label>\r\n    <button style=\"margin-top: 9px; margin-right: 59px;\" class=\"btn btn-info pull-right\" (click)='reSet()'> Reset</button>\r\n\r\n</div> -->\r\n\r\n<div class=\"clearfix\" style=\"background: #e2eaea !important; height: 40px;\">\r\n  <div>\r\n    <div class=\"col-md-4\">\r\n      <!-- <h2 style=\"color: black;\">Bank Reconciliation </h2> -->\r\n      <label\r\n        style=\"font-family: Segoe UI Light;font-weight: bold;font-size: 20px;padding-left: 5%;padding-top: 3%;width: 100%;\">PARTY\r\n        BALANCE CONFIRMATION\r\n      </label>\r\n    </div>\r\n    <div class=\"col-md-4\">\r\n\r\n    </div>\r\n    <div class=\"col-md-4\" style=\"margin-top:8px;\">\r\n      <button style=\"margin: 0px 4px;\" class=\"btn btn-info pull-right\" (click)=\"reSet()\">\r\n        Reset\r\n      </button>\r\n      <button class=\"btn btn-info pull-right\" (click)=\"onPrintClicked()\"> Print</button>\r\n      <!-- <button class=\"btn btn-info pull-right\" (click)=\"SelectDate()\">\r\n      View\r\n    </button> -->\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n\r\n<style>\r\n  input {\r\n    height: 25px;\r\n    vertical-align: middle;\r\n    font-size: 13px;\r\n    border: 1px solid #cbcbcb;\r\n    border-radius: 3px;\r\n    color: black;\r\n    padding-left: 4px;\r\n  }\r\n\r\n  label {\r\n    font-family: Roboto, Arial, sans-serif;\r\n    font-size: 14px;\r\n  }\r\n\r\n  legend {\r\n    font-family: Roboto, Arial, sans-serif;\r\n    font-size: 14px;\r\n    width: 0;\r\n\r\n  }\r\n\r\n  .date {\r\n    margin-left: 8px;\r\n  }\r\n</style>\r\n\r\n<div class=\"col-md-12\" style=\"border-bottom: 1px solid #828080;\r\n        margin-top:10px;\r\n        margin-bottom: 5px;\r\n        padding-bottom: 10px;\r\n        background: #e2eaea; padding-top: 9px;\r\n        width: 100%;\r\n      \">\r\n\r\n  <div style=\"display: flex;\">\r\n    <div class=\"col-md-3\">\r\n      <label>From:</label>\r\n      <input placeholder=\"Year Start Date\" style=\"width:128px; height:24px;\" type=\"date\"\r\n        [(ngModel)]=\"PartyBalanceData.DATE1\" (change)=\"changeEntryDate($event.target.value,'AD')\">&nbsp;A.D &nbsp;\r\n\r\n      <div style=\" width: 134px;margin-left: 202px; margin-top: -29px;\">\r\n        <nepali-date-picker name=\"nepaliDateFrom\" [id]=\"'nepaliDatefrom'\"\r\n          (change)=\"changeEntryDate($event.detail.value,'BS')\" [label]=\"'dd/mm/yyyy'\"\r\n          [(ngModel)]=\"PartyBalanceData.BSDATE1\">\r\n        </nepali-date-picker>\r\n      </div>\r\n      <!-- <input  autocomplete=\"off\" id=\"nepaliDate\" placeholder=\"yyyy-mm-dd\"type=\"text\"\r\n        [(ngModel)]=\"PartyBalanceData.BSDATE1\" style=\"width: 90px;\" type=\"text\"\r\n        (change)=\"changeEntryDate($event.target.value,'BS')\">&nbsp;B.S\r\n        &nbsp; -->\r\n    </div>\r\n    <div class=\"col-md-3\" style=\"margin-top: 8px;\">\r\n      <label><input type=\"radio\" name=\"partytype\" [(ngModel)]=\"PartyBalanceData.PARTYTYPE\" value=C\r\n          (change)=\"parttypeChange()\">&nbsp;Customer</label>\r\n      <label><input type=\"radio\" name=\"partytype\" [(ngModel)]=\"PartyBalanceData.PARTYTYPE\" value=V\r\n          (change)=\"parttypeChange()\">&nbsp;Supplier</label>\r\n    </div>\r\n    <div class=\"col-md-3\" style=\"margin-top: 8px;\">\r\n      <label class=\"smallBoldLabel\"><input type=\"checkbox\" name=\"transaction\"\r\n          [(ngModel)]=\"PartyBalanceData.INCLUDECASHTRANSACTION\" (change)=\"$event.target.checked\r\n          ? (PartyBalanceData.INCLUDECASHTRANSACTION = 1)\r\n          : (PartyBalanceData.INCLUDECASHTRANSACTION = 0)\">&nbsp;Including Cash Transaction</label>\r\n    </div>\r\n    <div class=\"col-md-5\" style=\"margin-top: 8px;\">\r\n      <label class=\"smallBoldLabel\"><input type=\"checkbox\" name=\"transaction\"\r\n          [(ngModel)]=\"PartyBalanceData.INCLUDEACBASECNDN\" (change)=\"$event.target.checked\r\n          ? (PartyBalanceData.INCLUDEACBASECNDN = 1)\r\n          : (PartyBalanceData.INCLUDEACBASECNDN = 0)\">&nbsp;Including Ac Base Transactionn</label>\r\n    </div>\r\n  </div>\r\n  <div class=\"col-md-3\" style=\"margin-top: 4px;\">\r\n    <label>To :</label>\r\n    <input placeholder=\"Year Start Date\" type=\"date\" style=\"width: 128px; height: 24px; margin-left: 13px;\"\r\n      [(ngModel)]=\"PartyBalanceData.DATE2\" (change)=\"changeEndDate($event.target.value,'AD')\">&nbsp;A.D &nbsp;\r\n\r\n    <div style=\" width: 134px;margin-left: 202px; margin-top: -29px;\">\r\n      <nepali-date-picker name=\"nepaliDateFrom\" [id]=\"'nepaliDateto'\" (change)=\"changeEndDate($event.detail.value,'BS')\"\r\n        [label]=\"'dd/mm/yyyy'\" [(ngModel)]=\"PartyBalanceData.BSDATE2\">\r\n      </nepali-date-picker>\r\n    </div>\r\n    <!-- <input class=\"date\" autocomplete=\"off\" id=\"nepaliDate\" placeholder=\"yyyy-mm-dd\" type=\"text\"\r\n        [(ngModel)]=\"PartyBalanceData.BSDATE2\" type=\"text\" style=\"width: 90px;\"\r\n        (change)=\"changeEndDate($event.target.value,'BS')\">&nbsp;B.S -->\r\n    &nbsp;\r\n  </div>\r\n  <div class=\"col-md-3\" style=\"margin-top: 8px;\">\r\n    <label>Cost Center :</label>\r\n    <select id=\"costcenter\" [(ngModel)]=\"PartyBalanceData.COSTCENTER\" style=\"width: 60%;height: 21px;\r\n          padding-left: 14px;\">\r\n      <option [ngValue]=\"\"></option>\r\n      <option *ngFor=\"let c of costlists\" [ngValue]=\"c.CCID\">\r\n        {{ c.COSTCENTERNAME }}</option>\r\n    </select>\r\n  </div>\r\n  <div class=\"col-md-4\" style=\"margin-top: 9px;\">\r\n    <div>\r\n      <label style=\"margin-right:1%;\">Party Account:</label>\r\n      <input style=\"height: 25px; margin-left: 1%; width: 74%;\" (keydown.Enter)=\"showAcList(i);\" name=\"customerName\"\r\n        [(ngModel)]=\"PartyBalanceData.CUSTOMERNAME\" type=\"text\" placeholder=\"Press Enter to select\" autocomplete=\"off\">\r\n    </div>\r\n  </div>\r\n  <div class=\"col-md-1\" style=\"margin-top: 6px;\">\r\n    <button class=\"btn btn-info pull-left\" (click)='onLoad()'> Load</button>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"col-md-12\">\r\n  <!-- <div class=\"col-md-8\" style=\"margin-top: 5px;\">\r\n      <div>\r\n      <label>Prepared By:</label>\r\n      <label style=\"margin-left: 15px;\">Name:</label>\r\n      <input  [(ngModel)]=\"Name\" id=\"Name0\" type=\"text\">\r\n\r\n      <label style=\"margin-left:30px;\">Designation:</label>\r\n        <input [(ngModel)]=\"Designation\" id=\"destination\" type=\"text\">\r\n      </div>\r\n    </div> -->\r\n  <!-- <fieldset style=\"height: 89px; width:113%\">\r\n      <legend>Prepared By:</legend>\r\n      <div >\r\n        <label>Name:</label>\r\n        <input style=\"width: 79%; margin-left:9.3%\"  type=\"text\">\r\n      </div>\r\n      <div>\r\n        <label>Designation:</label>\r\n        <input style=\"width:79%; margin-left: 1%;\"  type=\"text\">\r\n      </div>\r\n  </fieldset>\r\n</div> -->\r\n  <div class=\"col-md-3\"></div>\r\n\r\n\r\n  <div class=\"col-md-1\">\r\n    <!-- <button\r\n      *ngIf=\"_trnMainService.TrnMainObj.Mode == 'VIEW'  &&\r\n    !showSecondaryButtons && _trnMainService.TrnMainObj.VoucherType==12 && _trnMainService.TrnMainObj.VoucherType==15|| _trnMainService.TrnMainObj.VoucherType==16 || _trnMainService.TrnMainObj.VoucherType!=3 \"\r\n      [ngClass]=\"changeCursor==true?'PrintPending':'PrintDone'\" (click)=\"onPrintClicked()\" class=\"btn btn-info pull-right\" [disabled]=\"_trnMainService.TrnMainObj.Mode == 'NEW' || _trnMainService.TrnMainObj.Mode == 'EDIT'\" >\r\n      F8 PRINT\r\n    </button> -->\r\n    <!-- <button class=\"btn btn-info pull-left\" (click)=\"onPrintClicked()\"> Print</button> -->\r\n  </div>\r\n</div>\r\n\r\n\r\n<style>\r\n  table {\r\n    border-collapse: collapse;\r\n  }\r\n\r\n  td {\r\n    /* border: 2px solid #000000; */\r\n    height: 24px;\r\n  }\r\n\r\n  th {\r\n    font-weight: bold;\r\n    font-family: Roboto, Arial, sans-serif;\r\n    text-align: center;\r\n  }\r\n</style>\r\n\r\n\r\n<!-- **************table****************** -->\r\n\r\n<div style=\"margin-top: 100px\">\r\n  <div style=\"height: 480px;\">\r\n    <table style=\"margin-bottom: 5px; font-size: 13px; width: 100%\">\r\n      <thead>\r\n        <tr style=\"\r\n            border-bottom: 2px solid #e6e6e6;\r\n            border-top: 2px solid #e6e6e6;\r\n            height: 30px;\r\n            background: silver;\r\n            color: black;\">\r\n\r\n          <th style=\"width: 1%\">SNo.</th>\r\n          <th style=\"width: 19%; padding-left: 1%\">Particular</th>\r\n          <th style=\"width: 11%; padding-left: 1%\">Operation</th>\r\n          <th style=\"width: 7%; padding-left: 1%\">Amount</th>\r\n\r\n        </tr>\r\n      </thead>\r\n      <tbody *ngFor=\"let i of PartyInfo\">\r\n\r\n        <tr style=\"border: 1px solid #e6e6e6;max-height:25px;\">\r\n\r\n          <td style=\"line-height: 21px; text-align: center; border: 1px solid #e6e6e6; \">\r\n            {{i.SNO}}\r\n          </td>\r\n\r\n          <td style=\"line-height: 21px; text-align: center; border: 1px solid #e6e6e6;\">\r\n            <input style=\"height: 25px; width: 100%\" [(ngModel)]=\"i.PARTICULAR\" readonly />\r\n          </td>\r\n          <td style=\"line-height: 21px; text-align: center; border: 1px solid #e6e6e6;\">\r\n            <input style=\"height: 25px; width: 100%\" [(ngModel)]=\"i.OPERATION\" readonly />\r\n          </td>\r\n          <td style=\"line-height: 21px; text-align: center; border: 1px solid #e6e6e6;\">\r\n            <input style=\"height: 25px; text-align: right; width: 100% \" [(ngModel)]=\"i.AMOUNT\" readonly />\r\n          </td>\r\n\r\n        </tr>\r\n      </tbody>\r\n      <!-- <ng-container *ngIf=\"PartyInfo.length == 0\">\r\n        <tbody style=\"background:#e2eaea;\">\r\n          <tr>\r\n            <td colspan=\"4\">\r\n              Party Info is Empty.\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </ng-container> -->\r\n    </table>\r\n  </div>\r\n</div>\r\n\r\n\r\n<generic-popup-grid #genericGridACList [popupsettings]=\"gridACListPopupSettings\"\r\n  (onItemDoubleClick)=\"onAcSelect($event)\"></generic-popup-grid>"

/***/ }),

/***/ 1331:
/***/ (function(module, exports) {

module.exports = "<style>\r\n    .sectionWrapper{\r\n      display: flex;\r\n      flex-direction: column;\r\n      height: 94vh;\r\n    }\r\n\r\n .midTableWrapper{\r\n  flex: 1; \r\n  overflow: auto;\r\n  overflow-x:hidden;\r\n}\r\n.footer-wrapper {\r\n  background: lightgreen;\r\n  min-height: 87px;\r\n}\r\n.main-container{\r\n  margin-bottom: 0 !important;\r\n}\r\n::-webkit-input-placeholder {\r\n    color: inherit;\r\n    opacity: 1 !important;\r\n}\r\n\r\n\r\n  </style>\r\n  <div class=\"sectionWrapper\">\r\n    <div class=\"topWwrapper\">\r\n      <div class=\"sticky-top\">\r\n    <div class=\"clearfix\">\r\n      <div class=\"col-md-1\">\r\n        <voucher-master-toggler></voucher-master-toggler>\r\n      </div>\r\n      <div class=\"col-md-4\">\r\n        <!-- <h2 style=\"color: black;font-size: 18px;\">{{ _trnMainService.pageHeading}}[{{this._trnMainService.TrnMainObj?.Mode}}]</h2> -->\r\n        <label style=\"font-family: Segoe UI Light;font-weight: bold;font-size: 20px;padding-left: 5%;padding-top: 1%;\">{{ _trnMainService.pageHeading }}</label>\r\n        <label style=\"font-size: 14px;\">&nbsp;>> {{ _trnMainService.TrnMainObj?.Mode | titlecase}} Voucher</label>\r\n      </div>\r\n      <div class=\"col-md-7\">\r\n        <opening-balance-action></opening-balance-action>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"main-container\">\r\n    <div  class=\"clearfix\"> \r\n      <trnmain-voucher-entry></trnmain-voucher-entry> \r\n    </div>\r\n   \r\n  </div>\r\n\r\n    </div>\r\n    <div class=\"midTableWrapper\">\r\n       <div class=\"clearfix\" style=\"margin-top: 5px\">\r\n      <trntran-voucher-entry ></trntran-voucher-entry>\r\n    </div>\r\n\r\n    </div>\r\n      <div class=\"footer-wrapper\" style=\"background: gray;\">\r\n    <account-voucher-summary></account-voucher-summary>\r\n  </div> \r\n  </div>\r\n\r\n\r\n\r\n  "

/***/ }),

/***/ 1332:
/***/ (function(module, exports) {

module.exports = "<style>\r\n  .table tr th {\r\n    text-align: center;\r\n    vertical-align: middle;\r\n  }\r\n\r\n  tr {\r\n    border: 1px solid #e6e6e6;\r\n    max-height: 25px;\r\n  }\r\n\r\n  td {\r\n    height: 23px;\r\n    border: 1px solid #e6e6e6;\r\n\r\n  }\r\n\r\n  .bottom {\r\n    position: fixed;\r\n    bottom: 20px;\r\n    left: 0px;\r\n    width: 100%;\r\n    height: 135px;\r\n    z-index: 999997;\r\n    /* background: #e2eaea !important; */\r\n  }\r\n\r\n</style>\r\n\r\n\r\n<div class=\"sticky-top\">\r\n  <div class=\"clearfix\">\r\n    <div class=\"col-md-1\">\r\n      <voucher-master-toggler></voucher-master-toggler>\r\n    </div>\r\n    <div class=\"col-md-4\">\r\n      <!-- <h2 style=\"color: black;\">Bank Reconciliation </h2> -->\r\n      <label style=\"font-family: Segoe UI Light;font-weight: bold;font-size: 20px;padding-left: 5%;padding-top: 1%;width: 100%;\">PARTY RECONCILIATION</label>\r\n    </div>\r\n    <div class=\"col-md-7\">\r\n      <button (click)=\"onLoadClick()\" style=\"margin: 0px 4px;\" class=\"btn btn-info pull-right\">\r\n        LOAD\r\n      </button>\r\n      <button (click)=\"onSaveClick()\" style=\"margin: 0px 4px;\" class=\"btn btn-info pull-right\">\r\n        SAVE\r\n      </button>\r\n\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"main-container\">\r\n  <div [hidden]=\"!masterService.ShowMore\" class=\"clearfix\">\r\n\r\n    <div class=\"col-md-12\" style=\"margin: 8px 15px ; border: 1px solid #e6e6e6; \">\r\n\r\n      <!-- <div class=\"col-md-4\">\r\n        <div class=\"row\">\r\n          <label style=\"width:30%\">Date </label>\r\n          <input style=\"width:60%\" type=\"text\" ngxDaterangepickerMd [(ngModel)]=\"selectedDate\" [showDropdowns]=\"true\"\r\n            [showCustomRangeLabel]=\"true\" [alwaysShowCalendars]=\"true\" [locale]=\"locale\" [ranges]=\"ranges\"\r\n            [linkedCalendars]=\"true\" [showCancel]=\"true\" placeholder=\"Date Range...\"\r\n            (ngModelChange)=\"dateChanged($event)\" />\r\n        </div>\r\n      </div> -->\r\n\r\n      <div class=\"col-md-4\">\r\n        <label>From:</label>\r\n        <input  placeholder=\"Year Start Date\" style=\"width:128px; height: 30px;\" type=\"date\"\r\n        (change)=\"changeEntryDate($event.target.value,'AD')\" [(ngModel)]=\"PartyReconciliationObj.DATE1\">&nbsp;&nbsp;\r\n\r\n        <div style=\" width: 134px;margin-left: 260px; margin-top: -29px;\">\r\n          <nepali-date-picker name=\"nepaliDateFrom\" [id]=\"'nepaliDatefrom'\"\r\n            (change)=\"changeEntryDate($event.detail.value,'BS')\"\r\n            [label]=\"'dd/mm/yyyy'\"  [(ngModel)]=\"PartyReconciliationObj.BSDATE1\">\r\n            </nepali-date-picker>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-md-4\" style=\"margin-top: 8px;\">\r\n        <label><input type=\"radio\" name=\"partytype\" [(ngModel)]=\"PartyReconciliationObj.PARTYTYPE\" value=C (change)=\"parttypeChange()\">&nbsp;Customer</label>\r\n        <label><input type=\"radio\" name=\"partytype\" [(ngModel)]=\"PartyReconciliationObj.PARTYTYPE\" value=V (change)=\"parttypeChange()\">&nbsp;Supplier</label>\r\n      </div>\r\n     \r\n\r\n      <div class=\"col-md-4\">\r\n        <div class=\"checkbox\">\r\n          <label style=\"width:95%\"><input type=\"checkbox\" [(ngModel)]=\"PartyReconciliationObj.SHOWRECONSILLED\"\r\n              name=\"ReconciledRecord\">Show Reconciled Record Also </label>\r\n        </div>\r\n\r\n      </div>\r\n\r\n    </div>\r\n\r\n    <div class=\"row col-md-12\">\r\n      <div class=\"col-md-4\" style=\"margin-left:30px;\">\r\n        <label>To :</label>\r\n        <input   placeholder=\"Year End Date\" type=\"date\" style=\"width: 128px; height: 30px;\"\r\n        (change)=\"changeEndDate($event.target.value,'AD')\"  [(ngModel)]=\"PartyReconciliationObj.DATE2\">&nbsp;&nbsp;\r\n\r\n        <div style=\" width: 134px;margin-left: 260px; margin-top: -29px;\">\r\n          <nepali-date-picker name=\"nepaliDateTo\" [id]=\"'nepaliDateto'\"\r\n            (change)=\"changeEndDate($event.detail.value,'BS')\"\r\n            [label]=\"'dd/mm/yyyy'\"  [(ngModel)]=\"PartyReconciliationObj.BSDATE2\">\r\n            </nepali-date-picker>\r\n        </div>\r\n        &nbsp;\r\n      </div>\r\n\r\n      <div class=\"col-md-4\">\r\n        <div class=\"row\">\r\n          <label style=\"width:30%\">Party Name </label>\r\n          <input type=\"text\" style=\"width:60%\" id=\"BankAccount\" name=\"Bank_Acccount\"\r\n            (keydown.tab)=\"onBankReconciliationPopUPTab()\" (keydown.enter)=\"onBankReconciliationPopUPTab()\"\r\n            [(ngModel)]=\"PartyReconciliationObj.ACNAME\" placeholder=\"Press ENTER or TAB to Account Name\" autocomplete=\"off\" />\r\n        </div>\r\n      </div>\r\n\r\n      \r\n\r\n    </div>\r\n  </div>\r\n  <div class=\"clearfix\" style=\"margin-top: 5px\">\r\n    <div class=\"col-md-12\" style=\"height:325px;overflow-y:scroll\">\r\n      <div class=\"header\" style=\"position: sticky;top:0\">\r\n        <table style=\"width: 100%;table-layout: fixed\">\r\n          <thead>\r\n            <tr style=\"border-bottom: 1px solid #E6E6E6; border-top: 1px solid #E6E6E6;    height: 25px;\r\n                            background:#C0C0C0;\r\n                            color: black;\">\r\n              <th style=\"width:55px\"></th>\r\n              <th style=\"width:108px\">Date </th>\r\n              <th style=\"width:195px\">Particular </th>\r\n              <th style=\"width:190px\">Voucher Number </th>\r\n              <th style=\"width:192px\">Voucher Type </th>\r\n              <th style=\"width:120px\">REF No. </th>\r\n              \r\n              <th style=\"width:115px\">Debit</th>\r\n              <th style=\"width:110px\">Credit </th>\r\n            </tr>\r\n          </thead>\r\n        </table>\r\n      </div>\r\n      <table style=\"width: 100%;\">\r\n\r\n        <tbody style=\"border: 1px;\">\r\n          <tr *ngFor=\"let item of reconcileList; let in=index\">\r\n            <td style=\"width: 55px;\">\r\n              <input type=\"checkbox\" #check id=\"checkBox{{in}}\" (change)=\"itemChecked($event,in)\">\r\n            </td>\r\n\r\n            <td style=\"width: 110px;\">\r\n              {{item?.TRNDATE|date:'dd/MM/yyyy' }}\r\n            </td>\r\n\r\n\r\n\r\n            <td style=\"width: 195px;\">\r\n              {{item?.PARTICULARS }}\r\n            </td>\r\n\r\n            <td style=\"width: 195px;\">\r\n              {{item?.VNO }}\r\n            </td>\r\n\r\n            <td style=\"width: 195px;\">\r\n              {{item?.VOUCHER_TYPE }}\r\n            </td>\r\n\r\n            <td style=\"width:120px;\">\r\n              {{item?.REFNO  }}\r\n            </td>\r\n\r\n \r\n\r\n            <td style=\"width:115px;text-align: right\">\r\n              {{item?.DRAMNT | twoDigitNumber}}\r\n            </td>\r\n\r\n            <td style=\"width:115px;text-align: right;\">\r\n              {{item?.CRAMNT  | twoDigitNumber}}\r\n            </td>\r\n\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n\r\n    </div>\r\n\r\n  </div>\r\n</div>\r\n<div class=\"bottom\">\r\n  <div class=\"col-md-12\">\r\n\r\n    <table class=\"table\" style=\"height: 100px; text-align:right; background:#C0C0C0;\">\r\n      <thead style=\"border: 1px solid #e6e6e6; \">\r\n        <ng-container *ngIf=\"showCompanybook == true;\">\r\n          <tr *ngFor=\"let item of balanceAsPerCompanyBook;\">\r\n            <td style=\"padding: 5px 0px; text-align: right; font-size: 12px; font-weight: bold; padding-right: 10px;\">\r\n              Balance As per Company Book </td>\r\n            <td style=\"padding: 5px 0px; text-align: right; padding-right: 10px;font-weight: 600;font-size:12px; \">\r\n              {{ !this.reconcileList  ?'0.00':(item.DRAMNT | twoDigitNumber)}}</td>\r\n            <td style=\"padding: 5px 0px; text-align: right; padding-right: 10px;font-weight: 600;font-size:12px; \">\r\n              {{ !this.reconcileList  ?'0.00':(item.CRAMNT | twoDigitNumber)}}</td>\r\n          </tr>\r\n        </ng-container>\r\n        <ng-container *ngIf=\"showCompanybook == false;\">\r\n          <tr>\r\n            <td style=\"padding: 5px 0px; text-align: right; font-size: 12px; font-weight: bold; padding-right: 10px;\">\r\n              Balance As per Company Book </td>\r\n            <td style=\"padding: 5px 0px; text-align: right; padding-right: 10px;font-size:12px; font-weight: 600;\">0.00\r\n            </td>\r\n            <td style=\"padding: 5px 0px; text-align: right; padding-right: 10px;font-size:12px; font-weight: 600;\">0.00\r\n            </td>\r\n          </tr>\r\n        </ng-container>\r\n\r\n\r\n      </thead>\r\n      <tbody style=\"border: 1px;\">\r\n\r\n        <ng-container *ngIf=\"reflectedBank == true;\">\r\n          <tr *ngFor=\"let item of amountNotReflectedOnBank;\" style=\"font-size: 11px;\">\r\n            <td style=\"line-height: 15px;padding: 5px 0px;text-align: right; font-size:12x;font-weight: bold; \">Amount\r\n              Not\r\n              Reflected on Bank(opening) </td>\r\n            <td style=\"line-height: 15px;padding: 5px 10px;text-align: right;font-size:12x;font-weight: bold; \">\r\n              {{ parseFloat(item.DRAMNT) | twoDigitNumber  }}\r\n            </td>\r\n            <td style=\"line-height: 15px;padding: 5px 10px;text-align: right;font-size:12x;font-weight: bold; \">\r\n              {{ parseFloat(item.CRAMNT) | twoDigitNumber  }}\r\n            </td>\r\n          </tr>\r\n        </ng-container>\r\n        <ng-container *ngIf=\"reflectedBank == false;\">\r\n          <tr style=\"font-size: 12px;\">\r\n            <td style=\"line-height: 15px;padding: 5px 10px;text-align: right; font-size:12x;font-weight: bold; \">Amount\r\n              Not\r\n              Reflected on Bank(opening) </td>\r\n            <td style=\"line-height: 15px;padding: 5px 10px;text-align: right;font-size:12x;font-weight: bold; \">0.00\r\n            </td>\r\n            <td style=\"line-height: 15px;padding: 5px 10px;text-align: right;font-size:12x;font-weight: bold; \">0.00\r\n            </td>\r\n          </tr>\r\n        </ng-container>\r\n\r\n\r\n\r\n        <tr style=\"font-size: 12px;\">\r\n          <td style=\"line-height: 15px;padding: 5px 10px; text-align: right;font-size:12x;font-weight: bold; \">Amount\r\n            Not\r\n            Reflected on Bank (Periodic) </td>\r\n          <td style=\"line-height: 15px;padding: 5px 10px; text-align: right;font-size:12x;font-weight: bold; \">\r\n            {{!this.reconcileList ?'0.00':(notReflectedonBankDebit | twoDigitNumber)}} </td>\r\n          <td style=\"line-height: 15px;padding: 5px 10px; text-align: right;font-size:12x;font-weight: bold; \">\r\n            {{!this.reconcileList ?'0.00':(notReflectedonBankCredit | twoDigitNumber)}} </td>\r\n        </tr>\r\n\r\n        <tr style=\"font-size: 12px;\">\r\n          <td style=\"line-height: 15px;padding: 5px 10px; text-align: right;font-size:12x;font-weight: bold; \">Balance\r\n            As Per\r\n            Bank Book </td>\r\n          <td style=\"line-height: 15px;padding: 5px 10px; text-align: right;font-size:12x;font-weight: bold; \">\r\n            {{!this.reconcileList ?'0.00': (balanceAsPerBankDebit | twoDigitNumber)}} </td>\r\n          <td style=\"line-height: 15px;padding: 5px 10px; text-align: right;font-size:12x;font-weight: bold; \">\r\n            {{!this.reconcileList ?'0.00': (balanceAsperBankCredit | twoDigitNumber)}}</td>\r\n        </tr>\r\n\r\n        <tr style=\"font-size: 12px;\">\r\n          <td style=\"line-height: 15px;padding: 5px 10px; text-align: right;font-size:12x;font-weight: bold; \">\r\n            Difference</td>\r\n          <td style=\"line-height: 15px;padding: 5px 10px; text-align: right;font-size:12x;font-weight: bold; \">\r\n            {{!this.reconcileList?'0.00': (differenceDebit | twoDigitNumber)}}</td>\r\n          <td style=\"line-height: 15px;padding: 5px 10px; text-align: right;font-size:12x;font-weight: bold; \">\r\n            {{!this.reconcileList?'0.00': (differenceCredit | twoDigitNumber)}}</td>\r\n        </tr>\r\n\r\n      </tbody>\r\n\r\n    </table>\r\n  </div>\r\n\r\n</div>\r\n\r\n<generic-popup-grid #bankReconciliationGeneric [popupsettings]=\"gridbankReconciliationPopupSettings\"\r\n  (onItemDoubleClick)=\"onItemDoubleClick($event)\">\r\n</generic-popup-grid>\r\n"

/***/ }),

/***/ 1333:
/***/ (function(module, exports) {

module.exports = "<div class=\"sticky-top\">\r\n    <div class=\"clearfix\">\r\n      <div class=\"col-md-2\">\r\n        <voucher-master-toggler></voucher-master-toggler>\r\n      </div>\r\n      <div class=\"col-md-3\">\r\n        <h3 style=\"color: black;\">Single Payment</h3>\r\n      </div>\r\n      <div class=\"col-md-7\">\r\n        <account-master-action (onBillTrackEmit)=\"BillTrack()\"></account-master-action>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"main-container\">\r\n    <div [hidden]=\"!masterService.ShowMore\" class=\"clearfix\">\r\n      <!-- <voucher-date-entry style=\"margin-top:-15px;\"></voucher-date-entry> -->\r\n      <trnmain-voucher-entry></trnmain-voucher-entry>\r\n      <SeriesDialog\r\n        [voucherType]=\"voucherType\"\r\n        (sendPrefix)=\"prefixChanged($event)\"\r\n      ></SeriesDialog>\r\n    </div>\r\n    <div class=\"clearfix\" style=\"margin-top: 5px\">\r\n      <trntran-voucher-entry #trnmainentry></trntran-voucher-entry>\r\n    </div>\r\n  </div>\r\n  <div class=\"sticky-bottom\" style=\"background: gray;\">\r\n      <account-voucher-summary></account-voucher-summary>\r\n  </div>\r\n  "

/***/ }),

/***/ 1334:
/***/ (function(module, exports) {

module.exports = "<style>\r\n  .mr {\r\n    margin-left: 0px;\r\n    padding-left: 0px;\r\n  }\r\n\r\n</style>\r\n\r\n\r\n<div class=\"clearfix\">\r\n  <div class=\"col-md-12 mr\">\r\n    <div class=\"col-md-8 mr\">\r\n      <div class=\"col-md-4 mr\">\r\n        <div class=\"date-filters mr\">\r\n\r\n          <div class=\"form-group\">\r\n            <label>Voucher Date</label>\r\n            <input class=\"form-control\" type=\"text\" ngxDaterangepickerMd [(ngModel)]=\"selectedDate\"\r\n              [showDropdowns]=\"true\" [showCustomRangeLabel]=\"true\" [alwaysShowCalendars]=\"true\" [locale]=\"locale\"\r\n              [ranges]=\"ranges\" [linkedCalendars]=\"true\" [showCancel]=\"true\" placeholder=\"Date Range...\"\r\n              (ngModelChange)=\"dateChanged($event)\" />\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n      <div class=\"col-md-4\">\r\n\r\n        <div class=\"form-group\">\r\n          <label>Division Selection</label>\r\n          <select class=\"form-control\" [(ngModel)]=\"_transactionService.voucherPostingObj.division\">\r\n            <option *ngFor=\"let div of divisionList;let i=index\" value=\"{{div.INITIAL}}\">{{div.NAME}}</option>\r\n\r\n          </select>\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n    <div class=\"col-md-4\">\r\n      <button class=\"btn btn-info\" style=\"float: right;\" (click)=\"loadVoucher()\">Load</button>\r\n      <button class=\"btn btn-info\" style=\"float: right;\" (click)=\"postInvoice()\">Save</button>\r\n    </div>\r\n  </div>\r\n  <div class=\"col-md-12 mr\">\r\n    <div class=\"col-md-8 mr\">\r\n      <div class=\"col-md-4 mr\">\r\n        <div class=\"voucher-type-filters mr\">\r\n\r\n          <div class=\"form-group\">\r\n            <select class=\"form-control\" [(ngModel)]=\"_transactionService.voucherPostingObj.voucherPrefix\">\r\n              <option value=\"JV\">Journal Voucher</option>\r\n              <option value=\"CE\">Contra</option>\r\n              <option value=\"PV\">Expense Voucher</option>\r\n              <option value=\"RV\">Income Voucher</option>\r\n              <option value=\"DN\">Debit Note</option>\r\n              <option value=\"CN\">Credit Note</option>\r\n            </select>\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n      <div class=\"col-md-6\">\r\n\r\n      </div>\r\n    </div>\r\n    <div class=\"col-md-4\"></div>\r\n  </div>\r\n</div>\r\n\r\n\r\n<invoice-list #invoiceList [listSetting]=\"listSetting\" [source]=\"itemList\" (pageChange)=\"pageValueChanged($event)\">\r\n</invoice-list>\r\n"

/***/ }),

/***/ 1335:
/***/ (function(module, exports) {

module.exports = ".table td, .table th{\r\n    padding: 0px !important;\r\n  }\r\n\r\ntbody {\r\n    /* display:block; */\r\n    height:53vh;\r\n    overflow:scroll;\r\n}\r\n\r\nthead, tbody tr {\r\n  display:table;\r\n  width:100%;\r\n  table-layout:fixed;/* even columns width , fix width of table too*/\r\n}\r\n\r\nth{\r\n  font-size: 15px;\r\n  font-weight: bold;\r\n  font-family: Roboto,Arial,sans-serif;\r\n}\r\n\r\ntd{\r\n  font-size: 13px;\r\n  font-family: Roboto,Arial,sans-serif;\r\n\r\n}\r\n\r\n.table tbody tr td{\r\n  line-height: 24px;\r\n}\r\n\r\ninput,select{\r\n    height: 28px;\r\n}\r\n\r\n.form-control{\r\n    font-size: 13px !important;\r\n}"

/***/ }),

/***/ 1336:
/***/ (function(module, exports) {

module.exports = "<div class=\"sticky-top\">\r\n    <div class=\"clearfix\">\r\n      <div class=\"col-md-4\">\r\n        <!-- <h2 style=\"color: black;\">Bank Reconciliation </h2> -->\r\n        <label style=\"font-family: Segoe UI Light;font-weight: bold;font-size: 20px;padding-left: 5%;padding-top: 1%;width: 100%;\">VOUCHER RENUMBERING</label>\r\n      </div>\r\n      <!-- <div class=\"col-md-7\">\r\n        <button style=\"margin: 4px 4px;\" class=\"btn btn-info pull-right\" (click)='SaveRenum()'>\r\n          Update\r\n        </button>\r\n  \r\n      </div> -->\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"main-container\">\r\n      <div class=\"row\" style=\"margin: 0px 15px ; border: 1px solid #e6e6e6; padding: 10px 10px;\">\r\n        <div class=\"col-md-8\">\r\n          <form [formGroup]=\"form\" (ngSubmit)=\"onSearch()\">\r\n          <div class=\"row\">\r\n          <div class=\"col-md-4\">\r\n              <div class=\" form-group row\">\r\n  \r\n                  <label class=\"form-control-label col-md-2\" style=\"width: 100px;\">Fiscal Year:</label>\r\n  \r\n                  <div class=\"col-md-6\">\r\n                  <!-- <input type=\"date\" class=\"form-control\" formControlName=\"FROMDATE\"> -->\r\n                  <select formControlName=\"PHISCALID\" class=\"form-control\">\r\n                    <option value=\"77/78\">2077/78</option>\r\n                    <option value=\"77/78\">2078/79</option>\r\n                    <option value=\"77/78\">2079/80</option>\r\n                    <option value=\"{{PhiscalObj.PhiscalID}}\">{{PhiscalObj.PhiscalName}}</option>\r\n                  </select>\r\n                  </div>\r\n              </div>\r\n          </div>\r\n          <div class=\"col-md-8\">\r\n              <div class=\"form-group row\">\r\n                  \r\n              <label class=\"form-control-label col-md-3\" style=\"width: 120px;\">Voucher: </label>\r\n              <div class=\"col-md-5\">\r\n                <select class=\"form-control\" formControlName=\"VOUCHERPREFIX\">\r\n                  <option value=\"\" disabled selected hidden>Select Voucher</option>\r\n                  <option value=\"JV\">Journal Voucher</option>\r\n                  <option value=\"CV\">Contra Voucher</option>\r\n                  <option value=\"PV\">Payment Voucher</option>\r\n                  <option value=\"RV\">Receipt Voucher</option>\r\n  \r\n              </select>\r\n              </div>\r\n              <div class=\"col-md-2\">\r\n                <button type=\"submit\" class=\"btn btn-info\">Search</button>\r\n             </div>\r\n              </div>\r\n  \r\n          </div>\r\n  \r\n        </div>\r\n  \r\n        <!-- <div class=\"row\">\r\n            <div class=\"col-md-4\">\r\n                <div class=\"form-group row\">\r\n                    <label class=\"form-control-label col-md-2\" style=\"width:20%\">Form: </label>\r\n                \r\n                      <div class=\"col-md-4\">\r\n                          <select class=\"form-control\" formControlName=\"FORM\" style=\"width:222%\">\r\n                              <option value=\"JV%\">Journal Voucher</option>\r\n                              <option value=\"CV%\">Contra Voucher</option>\r\n                              <option value=\"PV%\">Payment Voucher</option>\r\n                              <option value=\"RV%\">Receipt Voucher</option>\r\n                              <option value=\"CP%\">Capital Purchase Voucher</option>\r\n                              <option value=\"AD%\">Additional Cost</option>\r\n  \r\n                          </select>\r\n                          <select (change)=\"FormName($event)\">\r\n                            <option></option>\r\n                            <option *ngFor=\"let a of accoutMenus\" values=\"a\">{{a.path}}</option>\r\n                          </select>\r\n                      </div>\r\n                </div>\r\n  \r\n            </div>\r\n            <div class=\"col-md-4\">\r\n                <button type=\"submit\" class=\"btn btn-info\">Search</button>\r\n            </div>\r\n  \r\n        </div> -->\r\n          </form>\r\n          \r\n        </div>\r\n        <div class=\"col-md-2\">\r\n          <button (click)='SaveRenum()' class=\"btn btn-info pull-right\">Confirm Renumber All</button>\r\n       </div>\r\n       <div class=\"col-md-1\" style=\"margin: 0px 30px;\">\r\n        <button (click)=\"exportTOExcel(voucherLists, 'VoucherList')\" class=\"btn btn-info pull-right\">Export Renumering</button>\r\n     </div>\r\n     <div class=\"col-md-6\" *ngIf=\"userSetting.ENABLEVOUCHERSERIES == 1\">\r\n      <div class=\" form-group row\">\r\n\r\n          <label class=\"form-control-label col-md-2\" style=\"width: 124px;\">Voucher Series:</label>\r\n\r\n          <div class=\"col-md-5\" style=\"padding-left: 0px;\">\r\n          <input type=\"text\" class=\"form-control\" style=\"height: 25px;\" [(ngModel)]=\"voucherType\" placeholder=\"Press Enter to Select Voucher Series\" (keydown.Tab)=\"showVoucherSeriesList()\" (keydown.enter)=\"showVoucherSeriesList()\">\r\n          </div>\r\n      </div>\r\n      </div>\r\n      </div>\r\n\r\n      <div class=\"clearfix\" style=\"margin-top: 5px;\">\r\n        <div class=\"card-header\" style=\"    background: #4472C4;\r\n        color: #ffff;\">\r\n\r\n        <span class=\"col-md-6\">Voucher Lists</span>\r\n        <div style=\"margin-left: 62rem; margin-top: -6px;\">\r\n          <input type=\"text\" name=\"search\" class=\"form-control\" [(ngModel)]=\"filter\" #searchFilter=\"ngModel\"\r\n            placeholder=\"Search By Old Voucher NO.\" style=\"width: 15rem; height: 1.7rem; padding: 0px 6px;\">\r\n        </div>\r\n\r\n\r\n      </div>\r\n\r\n        <div class=\"row\" style=\"margin-left: 15px;\">\r\n            <table class=\"table table-striped\" style=\"width: 98%;\">\r\n            <thead>\r\n                <tr style=\"position: sticky; top:0;line-height: 2.4rem; border-bottom: 1px solid #E6E6E6; border-top: 1px solid #E6E6E6;\r\n                background:#C0C0C0;\r\n                color: black;\">\r\n                    <th scope=\"col\" style=\"width: 5%;\">S.N</th>\r\n                    <th scope=\"col\" style=\"width: 10%;\">OLD VOUCHER NO</th>\r\n                    <th scope=\"col\" style=\"width: 10%;\">NEW VOUCHER NO</th>\r\n                    <!-- <th scope=\"col\" style=\"width: 10%;\">TRNDATE</th> -->\r\n                    <!-- <th scope=\"col\" style=\"width: 10%;\">TRN_BSDATE</th> -->\r\n                    <th scope=\"col\" style=\"width: 10%;\">ENTRY DATE(A.D.)</th>\r\n                    <th scope=\"col\" style=\"width: 10%;\">ENTRY DATE(B.S.)</th>\r\n                    <!-- <th scope=\"col\" style=\"width: 10%;\">TRNAC</th> -->\r\n                    <th scope=\"col\" style=\"width: 10%;\">NETAMNT</th>\r\n                    <th scope=\"col\" style=\"width: 10%;\">TRNMODE</th>\r\n                    <th scope=\"col\" style=\"width: 10%;\">FISCALYEAR</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                <ng-container *ngIf=\"voucherLists && voucherLists.length > 0\">\r\n                <tr *ngFor=\"let voucher of (voucherLists|searchData:filter:'' | paginate: { itemsPerPage: itemsPerPage, currentPage: currentPage, totalItems: totalCount }); let i = index\">\r\n                    <td style=\"width: 5%;\">{{i+1}}</td>\r\n                    <!-- <td style=\"width: 10%;\">{{voucher.VCHRNO}}</td> -->\r\n                    <td style=\"width: 10%;\">{{voucher.old_vchrno}}</td>\r\n                    <td style=\"width: 10%;\">{{voucher.new_vchrno}}</td>\r\n                    <!-- <td style=\"width: 10%;\">{{voucher.TRNDATE}}</td> -->\r\n                    <td style=\"width: 10%;\">{{voucher.TRNDATE}}</td>\r\n                    <td style=\"width: 10%;\">{{voucher.BSDATE}}</td>\r\n                    <!-- <td style=\"width: 10%;\">{{voucher.TRNAC}}</td> -->\r\n                    <td style=\"width: 10%;\">{{voucher.NETAMNT}}</td>\r\n                    <td style=\"width: 10%;\">{{voucher.TRNMODE}}</td>\r\n                    <td style=\"width: 10%;\">{{voucher.PhiscalID}}</td>\r\n                </tr>\r\n                </ng-container>\r\n                <ng-container *ngIf=\"voucherLists && voucherLists.length === 0\">\r\n                    <tr>\r\n                      <td colspan=\"7\">\r\n                        <div class=\"font-weight-bold\">Voucher List Information are unavailable.</div>\r\n                      </td>\r\n                    </tr>\r\n                  </ng-container> \r\n            </tbody>\r\n            </table>\r\n        </div>\r\n        <div class=\"pagination\" style=\"margin-top: 0rem;\" *ngIf=\"voucherLists && (voucherLists | searchData: filter:'').length > itemsPerPage\">\r\n          <div style=\"margin:auto\">\r\n              <pagination-controls class=\"my-pagination\" (pageChange)=\"VoucherPagination($event)\"></pagination-controls>\r\n          </div>\r\n      </div>\r\n\r\n      </div>\r\n\r\n  </div>\r\n  <div class=\"reportpopup\" style=\"width: 90%;\">\r\n    <generic-popup-grid #genericGridVoucherSeriesList [popupsettings]=\"gridVoucherSeriesListPopupSettings\" (onItemDoubleClick)=\"onSelectVoucherSeries($event)\"></generic-popup-grid>\r\n  </div>"

/***/ }),

/***/ 1337:
/***/ (function(module, exports) {

module.exports = "<!-- <div class=\"col-md-12\">\r\n<div class=\"col-md-12\">\r\n    <label style=\"width: 17% !important\">Import Document No :</label>\r\n    <input type=\"text\" class=\"form-control\" [(ngModel)]=\"masterService.importDocumentDetailsObj.PPNO\">\r\n</div>\r\n<div class=\"col-md-12\">\r\n    <label style=\"width: 17% !important\">L/C No. :</label>\r\n    <input type=\"text\" class=\"form-control\" [(ngModel)]=\"masterService.importDocumentDetailsObj.LCNO\">\r\n</div>\r\n<div class=\"col-md-12\">\r\n    <label style=\"width: 17% !important;font-weight: bold;\r\n    border-bottom: 1px solid #e2e2e2;\">Import Declared Value </label>\r\n    </div>\r\n<div class=\"col-md-12\">\r\n    <label style=\"width: 17% !important\" >Tax Value :</label>\r\n    <input type=\"text\" class=\"form-control\" [(ngModel)]=\"masterService.importDocumentDetailsObj.TAXABLEVALUE\">\r\n</div>\r\n<div class=\"col-md-12\">\r\n    <label style=\"width: 17% !important\">Non Taxable value:</label>\r\n    <input type=\"text\" class=\"form-control\" [(ngModel)]=\"masterService.importDocumentDetailsObj.NTAXABLEVALUE\">\r\n</div>\r\n<div class=\"col-md-12\">\r\n    <label style=\"width: 17% !important\">VAT Amount :</label>\r\n    <input type=\"text\" class=\"form-control\" [(ngModel)]=\"masterService.importDocumentDetailsObj.VATVALUE\">\r\n</div>\r\n<div class=\"col-md-12\">\r\n    <label style=\"width: 17% !important\">Net Value :</label>\r\n    <input type=\"text\" class=\"form-control\" [(ngModel)]=\"masterService.importDocumentDetailsObj.NETVALUE\">\r\n</div>\r\n\r\n\r\n</div> -->\r\n<style>\r\n    label {\r\n        width: 150px;\r\n        text-align: right;\r\n    }\r\n\r\n    input {\r\n        height: 26px;\r\n        font-size: 13px;\r\n    }\r\n</style>\r\n\r\n\r\n<div class=\"row\">\r\n    <div class=\"form-group row\">\r\n        <div class=\"col-md-2\">\r\n            <label class=\"form-control-label\">Import Document No:</label>\r\n        </div>\r\n        <div class=\"col-md-4\">\r\n            <input type=\"text\" class=\"form-control\" [disabled]=\"_transactionService.TrnMainObj.Mode=='VIEW'\"\r\n                [(ngModel)]=\"_addionalcostService.IMPORTDETAILS.DOCUMENTNO\" (change)=\"ChangeDocumentNo()\">\r\n        </div>\r\n        <div class=\"col-md-2\">\r\n            <label class=\"form-control-label\">L/C No.:</label>\r\n        </div>\r\n        <div class=\"col-md-4\">\r\n            <input type=\"text\" class=\"form-control\" [disabled]=\"_transactionService.TrnMainObj.Mode=='VIEW'\"\r\n            [(ngModel)]=\"_addionalcostService.IMPORTDETAILS.LCNUM\" (change)=\"ChangeLCNo()\">\r\n\r\n        </div>\r\n    </div>\r\n\r\n\r\n    \r\n    <div class=\"row\">\r\n        <div class=\"col-md-12 pd0\" style=\"height: 40vh; margin-bottom: 1rem; overflow-y: scroll;overflow-x: hidden;    margin-left: 2%;\r\n        margin-top: -1%;\r\n        width: 98.5%;\">\r\n            <table class=\"table\">\r\n                <thead>\r\n                    <tr style=\"border-bottom: 2px solid #e6e6e6; height: 25px; background: #9ccae4 ;\">\r\n                        <th scope=\"col\" style=\"width: 1%;\">Sn.</th>\r\n                        <th scope=\"col\" style=\"width: 10%;\">Item Name</th>\r\n                        <th scope=\"col\" style=\"width: 5%;\">Qty</th>\r\n                        <th scope=\"col\" style=\"width: 5%;\">Taxable</th>\r\n                        <th scope=\"col\" style=\"width: 5%;\">Non-Taxable</th>\r\n                        <th scope=\"col\" style=\"width: 5%;\">VAT</th>\r\n                        <th scope=\"col\" style=\"width: 5%;\">Net amount</th>\r\n\r\n                    </tr>\r\n                </thead>\r\n                <tbody style=\"background-color: aliceblue;\">\r\n                    <tr *ngFor = \"let item of _addionalcostService.IMPORTDETAILS.prodList; let i=index\" style=\"height: 28px;\" (click)=\"ClickTableRow(i)\">\r\n                        <td style=\"width: 1%;\">{{i+1}}</td>\r\n                        <td style=\"width: 10%;\">\r\n                            <input id=\"importItemname{{i}}\" type=\"text\" list=\"product\" [(ngModel)]=\"item.ITEMNAME\"\r\n                                (keydown.Enter)=\"masterservice.focusAnyControl('importQty'+i)\" (focus)=\"rowClick(i)\"\r\n                               autocomplete=\"off\" [disabled]=\"_transactionService.TrnMainObj.Mode=='VIEW'\">\r\n                            <datalist id=\"product\">\r\n                                <option *ngFor=\"let i of _additionalCostService.addtionalCostList\" [value]=\"i.desca\">\r\n                            </datalist>\r\n                        </td>\r\n                        <td style=\"width: 5%;\" id=\"importQty{{i}}\"  ><input (keydown.Enter)=\"masterService.focusAnyControl('importQty'+i)\" \r\n                             [(ngModel)]=\"item.QUANTITY\" (change)=\"onChange()\" type=\"number\" [disabled]=\"_transactionService.TrnMainObj.Mode=='VIEW'\"></td>\r\n                        <td style=\"width: 5%;\" id=\"importTaxable{{i}}\" ><input (keydown.Enter)=\"masterService.focusAnyControl('importTaxable'+i)\"  \r\n                            type=\"number\" (change)=\"onChangeTaxable()\" [(ngModel)]=\"item.TAXABLE\" [disabled]=\"_transactionService.TrnMainObj.Mode=='VIEW'\"></td>\r\n                        <td style=\"width: 5%;\" id=\"importNonTaxable{{i}}\" ><input (keydown.Enter)=\"masterService.focusAnyControl('importNonTaxable'+i)\"  \r\n                            type=\"number\" (change)=\"onChangeNonTaxable()\" [(ngModel)]=\"item.NONTAXABLE\" [disabled]=\"_transactionService.TrnMainObj.Mode=='VIEW'\"></td>\r\n                        <td style=\"width: 5%;\" id=\"importVAT{{i}}\" ><input (keydown.Enter)=\"masterService.focusAnyControl('importVAT'+i)\"  type=\"number\" \r\n                            (change)=\"onChangeVAT()\" [(ngModel)]=\"item.VAT\" [disabled]=\"_transactionService.TrnMainObj.Mode=='VIEW'\"></td>\r\n                        <td style=\"width: 5%;\" id=\"importNetmant{{i}}\"><input type=\"number\" (keydown.Enter)=\"nextRow()\" \r\n                             (keydown.Tab)=\"nextRow()\"(change)=\"nextRow()\" [(ngModel)]=\"item.NETAMOUNT\" [disabled]=\"_transactionService.TrnMainObj.Mode=='VIEW'\"></td>\r\n\r\n                    </tr>\r\n                </tbody>\r\n\r\n            </table>\r\n        </div>\r\n    </div>\r\n    <div class=\"row\" style=\"margin-left: 2%;\r\n    width: 98.5%;\">\r\n        <table class=\"table\">\r\n          <tr style=\"line-height: 1.2rem;\">\r\n            <th style=\"background: rgb(172 172 172); border: 2px white solid;\" width=\"11%\" style=\"width: 6.5%;\">TOTAL</th>\r\n    <th style=\"background: rgb(172 172 172); border: 2px white solid;\" width=\"5%\">\r\n      {{ _addionalcostService.IMPORTDETAILS.TOTALQTY}} </th>\r\n      <th style=\"background: rgb(172 172 172); border: 2px white solid;\" width=\"5%\">\r\n        {{ _addionalcostService.IMPORTDETAILS.TOTALTAXABLE}} </th>\r\n    <th style=\"background: rgb(172 172 172); border: 2px white solid;\" width=\"5%\">\r\n      {{ _addionalcostService.IMPORTDETAILS.TOTALNONTAXABLE}}</th>\r\n    <th style=\"background: rgb(172 172 172); border: 2px white solid;\" width=\"5%\">\r\n      {{ _addionalcostService.IMPORTDETAILS.TOTALVAT}}</th>\r\n    <th style=\"background: rgb(172 172 172); border: 2px white solid;\" width=\"5%\">\r\n      {{ _addionalcostService.IMPORTDETAILS.NETAMOUNT}}</th>\r\n          </tr>\r\n        </table>\r\n        <!-- <div class=\"col-md-2\">\r\n          <h6>TOTAL QTY: {{_trnMainService.TrnMainObj.IMPORTDETAILS.TOTALQTY}} </h6>\r\n        </div>\r\n        <div class=\"col-md-2\">\r\n          <h6>TAXABLE: {{_trnMainService.TrnMainObj.IMPORTDETAILS.TOTALTAXABLE}} </h6>\r\n        </div>\r\n        <div class=\"col-md-3\">\r\n          <h6>NON-TAXABLE: {{_trnMainService.TrnMainObj.IMPORTDETAILS.TOTALNONTAXABLE}} </h6>\r\n        </div>\r\n        <div class=\"col-md-2\">\r\n          <h6>VAT: {{_trnMainService.TrnMainObj.IMPORTDETAILS.TOTALVAT}} </h6>\r\n        </div>\r\n        <div class=\"col-md-2\">\r\n          <h6>NET AMNT: {{_trnMainService.TrnMainObj.IMPORTDETAILS.NETAMOUNT}} </h6>\r\n        </div> -->\r\n      </div>\r\n</div>"

/***/ }),

/***/ 1338:
/***/ (function(module, exports) {

module.exports = "<style>\r\n    th {\r\n        padding: 0px 5px;\r\n        font-family: Roboto, Arial, sans-serif;\r\n        font-size: 13px;\r\n    }\r\n\r\n    td {\r\n        font-size: 12px;\r\n    }\r\n\r\n    tbody {\r\n        display: block;\r\n        height: 33vh;\r\n        overflow: auto;\r\n    }\r\n\r\n    thead,\r\n    tbody tr {\r\n        display: table;\r\n        width: 100%;\r\n        table-layout: fixed;\r\n        /* even columns width , fix width of table too*/\r\n    }\r\n    .costingMethodWrapper {\r\nborder:1px solid #ddd;\r\nmargin-top:-83px;\r\n    padding: 0px 10px 5px 10px;\r\n}\r\n.costingMethodWrapper label{\r\n\r\n width: 100px;\r\n    background: #F1F1F1;\r\n    margin-top: -11px;\r\n    padding-left: 6px;\r\n}\r\n.costingMethodWrapper a{\r\nfont-size:12px;\r\n}\r\n</style>\r\n\r\n<form disabled [formGroup]=\"form\">\r\n    <div class=\"row\">\r\n\r\n        <div class=\"col-md-12 plainBackGround\">\r\n            <div class=\"row\">\r\n                <div class=\"col-md-1\"><label>Cost Type: </label></div>\r\n                <div class=\"col-md-4\">\r\n                    <a style=\"margin-left: 2.5rem;\"><input type=\"radio\" name=\"grouping\" value=\"GroupCost\"\r\n                            (change)=\"IndividualPI(false)\" [disabled]=\"_transactionService.TrnMainObj.Mode=='VIEW'\"\r\n                            [(ngModel)]=\"masterService.costType\" [ngModelOptions]=\"{standalone:true}\" checked> Group\r\n                        Cost</a>\r\n                    <a style=\"margin-left: 1rem;\"><input type=\"radio\" name=\"grouping\" value=\"IndividualCost\"\r\n                            (change)=\"IndividualPI(true)\" [disabled]=\"_transactionService.TrnMainObj.Mode=='VIEW'\"\r\n                            [(ngModel)]=\"masterService.costType\" [ngModelOptions]=\"{standalone:true}\"> Individual Item\r\n                        Cost </a>\r\n                </div>\r\n                <div class=\"col-md-3\">\r\n                    <label style=\"float: left;\">Item :</label>\r\n                    <!-- <select class=\"form-control col-md-4\" name=\"menucode\" id=\"_item\" [(ngModel)] = \"ItemObj\" [ngModelOptions]=\"{standalone: true}\"\r\n                        (change)=\"passValue()\" [disabled]=\"PI == false\"\r\n                        style=\"padding: 0px !important;width: 68%;margin-top:0px; margin-left: -18px;\">\r\n                        <option style=\"color: black;\" *ngFor=\"let d of _addionalcostService.addtionalCostList\"\r\n                            [ngValue]=\"d\">\r\n                            {{d.desca}}</option>\r\n                    </select> -->\r\n                    <input id=\"_item\" type=\"text\" [(ngModel)]=\"masterService.desca\" [ngModelOptions]=\"{standalone:true}\"\r\n                        style=\"height:23px;width: 70%;margin-left: -18px; margin-bottom: 8px;\" (keydown.Enter)=\"ItemSelect()\"\r\n                        autocomplete=\"off\" placeholder=\"press Enter to select Item\" [disabled]=\"PI == false || _transactionService.TrnMainObj.Mode=='VIEW'\">\r\n                </div>\r\n                <div class=\"col-md-3\">\r\n                    <label style=\"float: left;margin-left:-8%;\">Batch :</label>\r\n                    <!-- <select class=\"form-control col-md-4\" name=\"batch\" formControlName=\"BATCH\"\r\n                        (change)=\"passValue()\"\r\n                        style=\"padding: 0px !important;width: 68%;margin-top:0px; margin-left: 0%;\">\r\n                        <option style=\"color: black;\" *ngFor=\"let d of BatchList\"\r\n                            [ngValue]=\"d.batch\">\r\n                            {{d.batch}}</option>\r\n                    </select> -->\r\n                    <input id=\"_batch\" type=\"text\" [(ngModel)]=\"masterService.batch\" [ngModelOptions]=\"{standalone:true}\"\r\n                        style=\"height:23px;width: 60%;margin-left: -20px; margin-bottom: 8px;\" (keydown.Enter)=\"BatchSelect()\"\r\n                        autocomplete=\"off\" placeholder=\"press Enter to select Batch\" [disabled]=\"PI == false || _transactionService.TrnMainObj.Mode=='VIEW'\">\r\n                </div>\r\n                <!-- <div class=\"col-md-1\">\r\n                    <input id=\"_batchid\" type=\"text\" [(ngModel)]=\"masterService.batchid\"  [ngModelOptions]=\"{standalone:true}\"> \r\n                </div> -->\r\n                <!-- <div> <a><input type=\"radio\" value=\"IndividualCost\" name=\"grouping\" (change)=\"IndividualPI(true)\" [(ngModel)]=\"masterService.costType\" [ngModelOptions]=\"{standalone: true}\"> Individual -->\r\n            </div>\r\n\r\n            <div class=\"row\">\r\n\r\n                <div class=\"col-md-5\">\r\n                    <label style=\"width: initial;\">Additional Cost A/C :</label>\r\n                    <!-- <select class=\"form-control col-md-2\" name=\"ACNAME\" formControlName=\"AdditionalPurchaseAc\" style=\"height:23px;padding:0px !important;width: 70%;float: right;\">\r\n        <option *ngFor=\"let d of allList\" [ngValue]=\"d\">{{d.ACNAME}}</option>\r\n       </select> -->\r\n                    <input id=\"AdditionalCostAc_\" type=\"text\" [(ngModel)]=\"masterService.AdditionalPurchaseAcObj\"\r\n                        [ngModelOptions]=\"{standalone: true}\"\r\n                        style=\"height:23px;width: 70%;margin-left: 20px; margin-bottom: 8px;\"\r\n                        (keydown.Enter)=\"TabAcBox('AC')\" autocomplete=\"off\" placeholder=\"press Enter to select\"\r\n                        [disabled]=\"_transactionService.TrnMainObj.Mode=='VIEW'\">\r\n                </div>\r\n                <div class=\"col-md-5\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-4\">\r\n                            <label style=\"float: left;\">Amounts :</label>\r\n                             \r\n                            <input *ngIf=\"_transactionService.TrnMainObj.Mode!='VIEW'\" id=\"AmountsAD_\"\r\n                                class=\"form-control col-md-2\" type=\"number\" \r\n                                [(ngModel)]=\"masterService.AdditionalAMOUNT\" [ngModelOptions]=\"{standalone: true}\"\r\n                                 style=\"width: 50%; margin-left: -18px;\">\r\n                            <input *ngIf=\"_transactionService.TrnMainObj.Mode=='VIEW'\" id=\"AmountsAD_\"\r\n                                class=\"form-control col-md-2\" type=\"number\" \r\n                                [(ngModel)]=\"masterService.AdditionalAMOUNT\" [ngModelOptions]=\"{standalone: true}\"\r\n                                style=\"width: 50%; margin-left: -18px;\"\r\n                                disabled=\"_transactionService.TrnMainObj.Mode=='VIEW'\">\r\n                                <!-- <div class=\"invalid-feedback d-block\"\r\n                                *ngIf=\"form.controls['AMOUNT'].invalid && (form.controls['AMOUNT'].dirty || form.controls['AMOUNT'].touched)\">\r\n                                <span *ngIf=\"form.controls['AMOUNT'].errors.required\" style=\"color:red; font-size:12px;float: left;\r\n    margin-left: -15px;\"> required.</span>\r\n                            </div> -->\r\n                             \r\n\r\n                        </div>\r\n                          \r\n                       \r\n                      \r\n<!-- \r\n                        <div class=\"col-md-7\">\r\n                            <label style=\"float: left;\">Item :</label>\r\n                            <select class=\"form-control col-md-6\" name=\"menucode\" [(ngModel)] = \"ItemObj\" [ngModelOptions]=\"{standalone: true}\"\r\n                                (change)=\"passValue()\" [disabled]=\"PI == false\"\r\n                                style=\"padding: 0px !important;width: 75%;margin-top:-33px; margin-left: 39px;\">\r\n                                <option style=\"color: black;\" *ngFor=\"let d of _addionalcostService.addtionalCostList\"\r\n                                    [ngValue]=\"d\">\r\n                                    {{d.desca}}</option>\r\n                            </select>\r\n                        </div> -->\r\n\r\n                    </div>\r\n                </div>\r\n                <!-- <div class=\"col-md-3\" style=\"    margin-left: -3%;\"> -->\r\n                <!-- <label>Costing Type</label>\r\n                     <select class=\"form-control col-md-2\" name=\"ACNAME\" style=\"height:23px;padding:0px !important;width: 37%; float: right;\"\r\n                      (change)=\"byQuantity($event.target.value)\">\r\n                        <option value=\"Amount\">Amount</option>\r\n                        <option value=\"Qty\">Qty</option>\r\n                    </select> -->\r\n                <!-- <div class=\"row\">\r\n                    <label style=\"float: left;\">Item :</label> -->\r\n\r\n                <!-- <input type=\"text\" placeholder=\"Press Enter or Tab\"\r\n                    formControlName=\"MCODE\" style=\"height:23px;padding:0px !important;    width: 75%;\r\n                        /* float: right; */\r\n                        margin-left: 6%;\" (keydown.Enter)=\"TabAcBox('AC')\" (keydown.Tab)=\"TabAcBox('AC')\" [disabled]=\"PI == false\"> -->\r\n                <!-- <select class=\"form-control col-md-6\" name=\"menucode\" formControlName=\"MCODE\"\r\n                        (change)=\"passValue()\" style=\"padding: 0px !important;width: 75%;float: right;\" >\r\n                        <option *ngFor=\"let d of _addionalcostService.addtionalCostList\" [ngValue]=\"d.mcode\" >\r\n                            {{d.desca}}</option>\r\n                    </select>\r\n                    </div>\r\n                    </div> -->\r\n                <div class=\"col-md-2\">\r\n                    <!-- <div class=\"col-md-7\">\r\n                        <label style=\"float: left;margin-left: -82%;\">Batch :</label>\r\n                        <select class=\"form-control col-md-6\" name=\"menucode\" formControlName=\"BATCH\"\r\n                            (change)=\"passValue()\"\r\n                            style=\"padding: 0px !important;width: 135%;margin-top:-33px; margin-left: -30%;\">\r\n                            <option style=\"color: black;\" *ngFor=\"let d of BatchList\"\r\n                                [ngValue]=\"d.batch\">\r\n                                {{d.batch}}</option>\r\n                        </select>\r\n                    </div> -->\r\n                    <!-- <label class=\"col-md-4\">Individuals :</label>\r\n\r\n                    <input class=\"col-md-2\" type=\"checkbox\" style=\"margin-left:18px; margin-top:5px; height:15px\"\r\n                        (change)=\"IndividualPI($event.target.checked)\">\r\n                    <div *ngIf=\"PI==true\">\r\n                        <select class=\"form-control col-md-6\" name=\"menucode\" formControlName=\"MCODE\"\r\n                            (change)=\"passValue()\" style=\"height:23px;padding:0px !important;width: 56%;\">\r\n                            <option *ngFor=\"let d of _addionalcostService.addtionalCostList\" [ngValue]=\"d.mcode\">\r\n                                {{d.desca}}</option>\r\n                        </select>\r\n\r\n                    </div> -->\r\n                  \r\n\r\n                    <!-- <input class=\"col-md-2\" type=\"checkbox\" style=\"margin-left:18px; margin-top:5px; height:15px\"\r\n                        (change)=\"IndividualPI($event.target.checked)\">\r\n                    <div *ngIf=\"PI==true\">\r\n                        <select class=\"form-control col-md-6\" name=\"menucode\" formControlName=\"MCODE\"\r\n                            (change)=\"passValue()\" style=\"height:23px;padding:0px !important;width: 56%;\">\r\n                            <option *ngFor=\"let d of _addionalcostService.addtionalCostList\" [ngValue]=\"d.mcode\">\r\n                                {{d.desca}}</option>\r\n                        </select>\r\n\r\n                    </div> -->\r\n                </div>\r\n            </div>\r\n            <div class=\"row\">\r\n\r\n\r\n                <div class=\"col-md-5\">\r\n                    <label style=\"margin-left: 44px;\">Credited A/C :</label>\r\n                    <!-- <select class=\"form-control col-md-2\" name=\"ACNAME\" formControlName=\"CREDITEDAC\" style=\"height:23px; padding:0px !important;width: 70%;float: right;\">\r\n                <option *ngFor=\"let d of allList\" [ngValue]=\"d\">{{d.ACNAME}}</option>\r\n               </select> -->\r\n                    <input type=\"text\" placeholder=\"Press Enter to select\"\r\n                        [(ngModel)]=\"masterService.AdditionalPurchaseCreditAcObj\" [ngModelOptions]=\"{standalone: true}\"\r\n                        style=\"height:23px;width: 70%;margin-left: 7px; margin-bottom: 8px;\"\r\n                        (keydown.Enter)=\"TabAcBox('CreditAC')\" [disabled]=\"_transactionService.TrnMainObj.Mode=='VIEW'\">\r\n                </div>\r\n                <div class=\"col-md-5\">\r\n                    <div class=\"col-md-7\" style=\"margin-left: -15px;\">\r\n                    <label style=\"float: left;\">Remarks :</label>\r\n                    <input id=\"RemarksAD_\" type=\"text\" class=\"form-control col-md-9\" \r\n                    [(ngModel)]=\"masterService.AdditionalREMARKS\" [ngModelOptions]=\"{standalone: true}\"\r\n                        style=\"width: 66%; margin-left: -18px;\"\r\n                        [disabled]=\"_transactionService.TrnMainObj.Mode=='VIEW'\" (keydown.Enter)=\"remarksEntered()\" autocomplete=\"off\">\r\n                    </div>\r\n                    <div class=\"col-md-5\">   <label style=\"width: 100%;\">Group Cost Mode :</label></div>\r\n                     \r\n                </div>\r\n                <div>\r\n                   \r\n                    <select class=\"form-control col-md-1\" name=\"ACNAME\" style=\"height: 23px;\r\n                padding: 0px !important;\r\n                width: 11%;\r\n                margin-left: -110px;\" [(ngModel)]=\"GcostMode\" [ngModelOptions]=\"{standalone:true}\"\r\n                        (change)=\"byQuantity($event.target.value)\" [disabled]=\"PI == true\"\r\n                        [disabled]=\"_transactionService.TrnMainObj.Mode=='VIEW'\" (keydown.Enter)=\"gcostEntered()\">\r\n                        <option value=\"\"></option>\r\n                        <option value=\"Qty\">ON QTY</option>\r\n                        <option value=\"Amount\">ON AMOUNT</option>\r\n\r\n                    </select>\r\n                </div>\r\n                  <div class=\"col-md-2\">\r\n                    <div class=\"costingMethodWrapper\" style=\"margin-top: -83px; margin-left:70px;\">\r\n                         <label style=\"width: 100px;\"> Costing Mode: </label>\r\n                            <div class=\"wrapper\" style=\"display: flex; flex-direction:column;border-bottom: 0;\">\r\n\r\n                                <!-- <a style=\"margin-left: 2.5rem;\"><input type=\"radio\" name=\"grouping\" value=\"GroupCost\"\r\n                                        (change)=\"IndividualPI(false)\" [disabled]=\"_transactionService.TrnMainObj.Mode=='VIEW'\"\r\n                                        [(ngModel)]=\"masterService.costType\" [ngModelOptions]=\"{standalone:true}\" checked> Group\r\n                                    Costing</a> -->\r\n                                \r\n            <!-- \r\n                            <a style=\"margin-left: 2.5rem;\">\r\n                                <input type=\"radio\" checked id=\"costing\"  name=\"addcosting\"   value = \"true\" [(ngModel)]=\"masterService.addcosting\"   [ngModelOptions]=\"{standalone:true}\"\r\n                                    \r\n                                    > <label for=\"costing\">Costing</label> \r\n                                    </a>\r\n                                <a style=\"margin-left: 1rem;\">\r\n                                    <input type=\"radio\" id=\"non-costing\" name=\"addcosting\"  value= \"false\" [(ngModel)]=\"masterService.addcosting\" [ngModelOptions]=\"{standalone:true}\"  \r\n                                    \r\n                                    >  <label for=\"non-costing\">Non-Costing</label> \r\n                                    </a> -->\r\n                                    <a ><input type=\"radio\" name=\"addcosting\" value=\"COSTING\"\r\n                                        [disabled]=\"_transactionService.TrnMainObj.Mode=='VIEW'\"\r\n                                        [(ngModel)]=\"masterService.addcosting\" [ngModelOptions]=\"{standalone:true}\" checked> Costing\r\n                                    </a>\r\n                                <a ><input type=\"radio\" name=\"addcosting\" value=\"NONCOSTING\"\r\n                                    [disabled]=\"_transactionService.TrnMainObj.Mode=='VIEW'\"\r\n                                        [(ngModel)]=\"masterService.addcosting\" [ngModelOptions]=\"{standalone:true}\">  Non-Costing\r\n                                    </a>\r\n\r\n\r\n                                \r\n                            </div>\r\n\r\n                    </div>\r\n                    </div>\r\n                   \r\n\r\n                <div class=\"col-md-1\">\r\n                    <!-- <button class=\"btn btn-info btn-add-focus\" (click)=\"onAddClick()\" \r\n                        style=\" width:100%; height: 1.4rem;\"\r\n                        *ngIf=\"_transactionService.TrnMainObj.Mode!='VIEW'\" disabled=\"!form.validate\">Add</button> -->\r\n\r\n                               <button class=\"btn btn-info btn-add-focus\" (click)=\"onAddClick()\" \r\n                        style=\" width:100%; height: 1.4rem;margin-left: 70px;\"\r\n                        *ngIf=\"_transactionService.TrnMainObj.Mode!='VIEW'\">Add</button>\r\n\r\n                </div>\r\n\r\n\r\n\r\n            </div>\r\n\r\n        </div>\r\n\r\n    </div>\r\n    <div class=\"row\" style=\"width: 105%;\">\r\n\r\n        <div class=\"wrapper\">\r\n            <div style=\"margin-left:0px; margin-right:0px;\">\r\n\r\n\r\n                <div #prodlistTable style=\"background-color: #FFFFFF;\">\r\n                    <table id=\"fix\" class=\"table\">\r\n                        <thead>\r\n                            <tr style=\"border-bottom: 10px solid #c0c0c0;\r\n                            border-top: 2px solid #c0c0c0;\r\n                            height: 30px;\r\n                            background: silver;\r\n                            color: black;\r\n                            position: sticky;\">\r\n                                <th style=\"width:30px;\">S.N\r\n\r\n                                </th>\r\n                                <th style=\"width:250px;margin-left:5px;padding-left: 10px;\">Additional Cost A/C\r\n\r\n                                </th>\r\n\r\n                                <th style=\"width:100px\">Amount\r\n\r\n                                </th>\r\n                                <th style=\"width:250px\">Credited A/C\r\n\r\n                                </th>\r\n                                <th style=\"width:150px\">Remarks\r\n\r\n                                </th>\r\n                                <th style=\"width:100px\">Cost Type\r\n\r\n                                </th>\r\n                                <th style=\"width:100px\">G-Cost Mode\r\n\r\n                                </th>\r\n                                <!-- <th *ngIf=\"PIADD==true\" style=\"width:300px\">Individual\r\n\r\n                                </th> -->\r\n                                <th style=\"width:200px\">Item Description\r\n\r\n                                </th>\r\n                                   <th style=\"width:150px\">Costing/Non-Costing\r\n\r\n                                </th>\r\n                                <th style=\"width:250px\">Batch\r\n\r\n                                </th>\r\n\r\n\r\n\r\n                            </tr>\r\n                        </thead>\r\n\r\n                        <tbody style=\"background-color: #e9e9e9;\">\r\n                            <tr *ngFor=\"let l of _addionalcostService.costList;let i=index\"\r\n                                (dblclick)=\"TableRowDoubleClickEvent(l,i)\" (click)=\"checkRow(i)\">\r\n                                <td class=\"tableBorder\" style=\"width:30px\">{{i+1}}</td>\r\n                                <td class=\"tableBorder\" style=\"width:250px\">{{l.costAc.ACNAME}}</td>\r\n                                <td class=\"tableBorder\" style=\"width:100px; text-align: right;\">{{l.amount}}</td>\r\n                                <td class=\"tableBorder\" style=\"width:250px\">{{l.creditAc.ACNAME}}</td>\r\n                                <td class=\"tableBorder\" style=\"width:150px\">{{l.remarks}}</td>\r\n                                <td class=\"tableBorder\" style=\"width:100px\">{{l.CostingType}}</td>\r\n                                <td class=\"tableBorder\" style=\"width:100px\">{{l.GCOSTMODE}}</td>\r\n                                <!-- <td class=\"tableBorder\" style=\"width:250px\">{{l.mcode}}</td> -->\r\n                                <td class=\"tableBorder\" style=\"width:200px\">{{l.desca}}</td>\r\n                                 <td class=\"tableBorder\" style=\"width:150px\">{{l.CostingNonCostingValue}}</td>\r\n                                <td class=\"tableBorder\" style=\"width:250px\">{{l.batch}}</td>\r\n                                <!-- <td *ngIf=\"PIADD==true\" style=\"width:300px\">{{l.mcode}}</td> -->\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</form>\r\n\r\n<div class=\"sticky-bottom\" style=\"background: gray;\">\r\n    <div class=\"row\">\r\n        <div class=\"col-md-6\">\r\n            &nbsp;\r\n        </div>\r\n        <div class=\"col-md-4\" style=\"text-align: end;\">\r\n            <label style=\"font-weight: bold;font-size: 16px; width: 125px;\">Total Amount:</label>\r\n        </div>\r\n        <div class=\"col-md-2\" style=\"text-align: end;\">\r\n            <label\r\n                style=\"font-size: 15px; font-weight: bold; margin-right: 2rem; \">{{this._addionalcostService.addCostTotAmount|\r\n                number}} </label>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<generic-popup-grid #genericGridACParty [popupsettings]=\"gridACListPartyPopupSettings\"\r\n    (onItemDoubleClick)=\"ACNameSelect_Additional($event)\"></generic-popup-grid>\r\n\r\n<generic-popup-grid #genericGridCreditACListParty [popupsettings]=\"gridCreditACListPartyPopupSettings\"\r\n    (onItemDoubleClick)=\"ACNameSelect_Credit($event)\"></generic-popup-grid>\r\n\r\n<generic-popup-grid #genericGridItem [popupsettings]=\"gridItemPopupSettings\"\r\n    (onItemDoubleClick)=\"dblClickItemSelection($event)\"></generic-popup-grid>\r\n\r\n<generic-popup-grid #genericGridBatch [popupsettings]=\"gridBatchPopupSettings\"\r\n    (onItemDoubleClick)=\"dblClickBatchSelection($event)\"></generic-popup-grid>"

/***/ }),

/***/ 1339:
/***/ (function(module, exports) {

module.exports = "<style>\r\nth{\r\n        padding: 0px 5px;\r\n        font-family:  Roboto, Arial, sans-serif;\r\n        font-size: 13px;\r\n    }\r\n\r\n    td{\r\n        font-size: 12px;\r\n    }\r\n  \r\n</style>\r\n\r\n<form>\r\n    <div class=\"row\">\r\n\r\n        <!--<div class=\"content \">\r\n            <div class=\"col col-md-9 left\">-->\r\n\r\n        <div class=\"wrapper\">\r\n            <div style=\"margin-left:0px; margin-right:0px;\">\r\n                <!--<div class=\"col-md-9 plainBackGround \" style=\"min-height: 300px;height:300px\">-->\r\n                    <!-- style=\"background-color: #FFFFFF; overflow-x:scroll;overflow-x: scroll; display: block; position: relative;height: 54vh;\"> -->\r\n                <div #prodlistTable id=\"prodlistTable\" \r\n                style=\"overflow-x:scroll; overflow-y: scroll; display: block; position: relative; height: 59vh;\">\r\n                    <table id=\"fix\" class=\"table\" style=\"width:1500px;\">\r\n                        <thead>\r\n                            <tr style=\"border-bottom: 10px solid #c0c0c0;\r\n                            border-top: 2px solid #c0c0c0;\r\n                            height: 30px;\r\n                            background: silver;\r\n                            color: black;\r\n                            position: sticky;\">\r\n                                <th *ngFor=\"let head of _addionalcostService.header\" [style.text-align]=\"head['Alignment']\">{{head.TITLE}}\r\n                                  \r\n                                </th>\r\n                                <!--<th>Total\r\n                                  \r\n                                </th>\r\n                                <th>Cost Per Unit\r\n\r\n                                </th>\r\n                                <th *ngFor=\"let head of _additionalCostService.addtionalCostList\" style=\"width:5%\"></th> -->\r\n\r\n                            </tr>\r\n                        </thead>\r\n                        <!-- <tfoot>\r\n                            <tr>\r\n                                <td *ngFor=\"let head of source.footer\">\r\n\r\n                                </td>\r\n                               \r\n                            </tr>\r\n                        </tfoot> -->\r\n                        <tbody style=\"background-color: #e9e9e9;\">\r\n                            <!-- <ng-container *ngFor=\"let l of _addionalcostService.costList;let i=index\" > -->\r\n                                <!-- <ng-container *ngFor=\"let l of _addionalcostService.addtionalCostList;let i=index\">  -->\r\n                                    <tr *ngFor=\"let tbody of _additionalCostService.costdetail\" >\r\n                                <td *ngFor=\"let head of _addionalcostService.header\" [style.text-align]=\"head['Alignment']\" class=\"tableBorder\">\r\n                                    {{tbody[head.MAPPINGNAME]}}\r\n                                </td>\r\n                    \r\n                            </tr>\r\n\r\n                                 <!-- </ng-container> -->\r\n                            <!-- </ng-container> -->\r\n                            \r\n\r\n                        </tbody>\r\n                        <!-- <ng-container *ngFor=\"let l of _addionalcostService.addtionalCostList;let i=index\">\r\n                                <tbody style=\"background-color: #e9e9e9;\">\r\n                            <tr *ngFor=\"let tbody of _additionalCostService.costdetail\" >\r\n                                 <td *ngFor=\"let head of _addionalcostService.header\" [style.text-align]=\"head['Alignment']\" class=\"tableBorder\">\r\n                                    {{tbody[head.MAPPINGNAME]}}\r\n                                </td>\r\n                                \r\n                            </tr>\r\n                        </tbody>\r\n                        </ng-container> -->\r\n                     \r\n                    </table>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <!--   </div>\r\n            </div>\r\n        </div>-->\r\n\r\n    </div>\r\n\r\n</form>"

/***/ }),

/***/ 1340:
/***/ (function(module, exports) {

module.exports = "<div class=\"sticky-top\">\r\n  <div class=\"clearfix\">\r\n    <div class=\"col-md-1\">\r\n      <voucher-master-toggler></voucher-master-toggler>\r\n    </div>\r\n    <div class=\"col-md-4\">\r\n      <label\r\n        style=\"font-family: Segoe UI Light;font-weight: bold;font-size: 20px;padding-left: 5%;padding-top: 1%;width:auto\">{{ _trnMainService.pageHeading }}</label>\r\n      <label style=\"font-size: 14px;width: 34%;margin-top: 10px;\">&nbsp;>> {{ _trnMainService.TrnMainObj?.Mode | titlecase}}\r\n        Voucher</label>\r\n    </div>\r\n    <div class=\"col-md-7\">\r\n      <account-master-action></account-master-action>\r\n    </div>\r\n  </div>\r\n</div>\r\n<div class=\"main-container\" style=\"top:10px !important\">\r\n  <div class=\"clearfix\">\r\n    <!-- <voucher-date-entry style=\"margin-top:-15px;\"></voucher-date-entry> -->\r\n    <trnmain-voucher-entry></trnmain-voucher-entry>\r\n    <div style=\"padding-bottom: 29px;\r\n    margin-top: -20px;\">\r\n  \r\n     <div class=\"col-md-3\" style=\"padding-left: 1px;\">\r\n      <label style=\"margin-left: 20px;\">Ref PI NO : </label>\r\n      <input id =\"REFPINO_AD\" type=\"test\" width=\"200px\" style=\"width: 60%;\" placeholder=\"Press Enter or Tab\"\r\n        (keydown.Tab)=\"TabRefBill()\" (keydown.Enter)=\"TabRefBill()\" [(ngModel)]='masterService.RefObj.Refno' \r\n        (keydown)=\"keyPress($event)\" autocomplete=\"off\"\r\n        [disabled]=\"_trnMainService.TrnMainObj.Mode=='EDIT' || _trnMainService.TrnMainObj.Mode=='VIEW'\">\r\n      </div>\r\n   \r\n      <div class=\"col-md-3\" style=\"padding-left: 0px;\">\r\n        <label style=\"margin-left: 11px;\">Invoice No : </label>\r\n      <input type=\"test\" width=\"200px\" style=\"width: 57%;\" \r\n        (keydown.Tab)=\"TabRefBill()\" (keydown.Enter)=\"TabRefBill()\" [(ngModel)]='masterService.RefObj.InvoiceNo'\r\n        readonly disabled>\r\n      </div>\r\n\r\n      <div class=\"col-md-3\" style=\"padding-left: 0px;\">\r\n        <label style=\"margin-left: -30px;\">Supplier Name:</label>\r\n      <input type=\"test\" width=\"200px\" style=\"margin-left: 25px;width: 53%;\" \r\n        (keydown.Tab)=\"TabRefBill()\" (keydown.Enter)=\"TabRefBill()\" [(ngModel)]='masterService.RefObj.SupplierName' readonly disabled>\r\n      </div>\r\n      </div>\r\n    \r\n       \r\n    \r\n  </div>\r\n  <div class=\"clearfix\" style=\"margin-top: 5px\">\r\n    <ul class=\"nav nav-tabs\" style=\"background-color: #e9e9e9 !important\">\r\n      <li class=\"nav-item\">\r\n        <a class=\"nav-link active\" href=\"#Purchase\" data-toggle=\"tab\" style=\"color:black\">Purchase Detail</a>\r\n      </li>\r\n      <li class=\"nav-item\">\r\n        <a class=\"nav-link\" href=\"#AdditionalCost\" data-toggle=\"tab\" style=\"color:black\">Additional Cost</a>\r\n      </li>\r\n      <li class=\"nav-item\">\r\n        <a class=\"nav-link\" href=\"#CostingDetails\" data-toggle=\"tab\" style=\"color:black\">Costing Details</a>\r\n      </li>\r\n      <!-- <li class=\"nav-item\" *ngIf = \"_trnMainService.userSetting.EnableRateEditInAddCosting == 1\">\r\n        <a class=\"nav-link\" href=\"#ImportDocumentDetails\" data-toggle=\"tab\" style=\"color:black\" (click)=\"ImportDetailsClick()\">Import Document Details</a>\r\n      </li> -->\r\n    </ul>\r\n    <form [formGroup]=\"form\">\r\n      <div class=\"tab-content\">\r\n        <div class=\"tab-pane active\" id=\"Purchase\">\r\n          \r\n            <div class=\"col-md-12 row\" style=\"width: 100%;\">\r\n              <purchaseDetail></purchaseDetail>\r\n            </div>\r\n          \r\n        </div>\r\n        <div class=\"tab-pane\" id=\"AdditionalCost\">\r\n          <!-- Contact Details -->\r\n          <div class=\"col-md-12 row\">\r\n            <additionalCost></additionalCost>\r\n          </div>\r\n        </div>\r\n        <div class=\"tab-pane\" id=\"CostingDetails\">\r\n          <!-- Contact Details -->\r\n          <div class=\"col-md-12 row\">\r\n            <costingDetail></costingDetail>\r\n          </div>\r\n        </div>\r\n        <div *ngIf = \"_trnMainService.userSetting.EnableRateEditInAddCosting == 1\"   class=\"tab-pane\" id=\"ImportDocumentDetails\">\r\n          <ba-card>\r\n            <div class=\"col-md-12 row\" style=\"width: 100%; height: 23rem;\">\r\n              <ImportDocumentDetailsComponent></ImportDocumentDetailsComponent>\r\n            </div>\r\n          </ba-card>\r\n          \r\n        </div>\r\n\r\n      </div>\r\n    </form>\r\n  </div>\r\n</div>\r\n<!-- <div class=\"sticky-bottom\" style=\"background: gray;\">\r\n  <div class=\"row\" >\r\n    <div class=\"col-md-6\">\r\n      &nbsp;\r\n    </div>\r\n    <div class=\"col-md-5\" style=\"text-align: end;\">\r\n      <label style=\"font-weight: bold;font-size: 16px; width: 125px;\">Total Balance</label>\r\n      <label style=\"font-size: 15px;\">{{additionalcostService.loadedTrnmain.TOTAMNT|twoDigitNumber}}</label>\r\n    </div>\r\n  </div>\r\n</div> -->\r\n\r\n\r\n<generic-popup-grid #genericGridRefBill [popupsettings]=\"gridPopupSettingsForRefBill\"\r\n  (onItemDoubleClick)=\"onRefBillSelected($event)\"></generic-popup-grid>\r\n\r\n  <!-- <table style=\"font-size: 13px;width: 100%;\">\r\n    <thead>\r\n      <tr style=\"height: 30px;\">\r\n        <th style=\"width: 15%;\"></th>\r\n        <th style=\"width: 10%;\"><h4>Total Balance</h4></th>\r\n        <th style=\"width: 5%;\">{{_additionalCostService.loadedTrnmain.TOTAMNT|twoDigitNumber}}</th>\r\n\r\n      </tr>\r\n    </thead>\r\n\r\n  </table> -->"

/***/ }),

/***/ 1341:
/***/ (function(module, exports) {

module.exports = "<style>\r\n    th{\r\n        padding: 0px 5px;\r\n        font-family:  Roboto, Arial, sans-serif;\r\n        font-size: 13px;\r\n    }\r\n\r\n    td{\r\n        font-size: 12px;\r\n    }\r\n\r\n    tbody {\r\n    display:block;\r\n    height:52vh;\r\n    overflow:auto;\r\n}\r\n\r\nthead, tbody tr {\r\n  display:table;\r\n  width:100%;\r\n  table-layout:fixed;/* even columns width , fix width of table too*/\r\n}\r\n</style>\r\n<form>\r\n    <div class=\"row\" style=\"margin-left: -10px; width:104%;\">\r\n\r\n        <!--<div class=\"content \">\r\n            <div class=\"col col-md-9 left\">-->\r\n\r\n        <div class=\"wrapper\">\r\n            <div style=\"margin-left:0px; margin-right:0px;\">\r\n                <!--<div class=\"col-md-9 plainBackGround \" style=\"min-height: 300px;height:300px\">-->\r\n\r\n                <div #prodlistTable id=\"prodlistTable\" style=\"background-color: #FFFFFF;\" style=\"width: 100%;\">\r\n                    <table id=\"fix\" class=\"table\">\r\n                        <thead>\r\n                            <tr style=\"border-bottom: 6px solid #c0c0c0;\r\n                            border-top: 2px solid #c0c0c0;\r\n                            height: 30px;\r\n                            background: silver;\r\n                            color: black;\r\n                            position: sticky;\">\r\n                                <th style=\"width:3%\">S.N\r\n                                   \r\n                                </th>\r\n                                <th style=\"width:6%\">Item Code\r\n                                 \r\n                                </th>\r\n                                <th style=\"width:30%\">Item Description\r\n                                   \r\n                                </th>\r\n\r\n                                <th style=\"width:5%\">Unit\r\n                                  </th>\r\n\r\n                                <th style=\"width:8%\">Batch\r\n                                   \r\n                                </th>\r\n\r\n                                <th style=\"width:8%\">Rate\r\n                                  \r\n                                </th>\r\n                                <th style=\"width:5%\">Qty\r\n                                  \r\n                                </th>\r\n                               \r\n                                <th style=\"width:12%\">Amount\r\n                                  \r\n                                </th>\r\n                                \r\n                                <!-- <th style=\"width:10%\">Net Amount\r\n                                  \r\n                                </th> -->\r\n\r\n                            </tr>\r\n                        </thead>\r\n                       \r\n                        <tbody style=\"background-color: #e9e9e9;\">\r\n                            <tr *ngFor=\"let c of _additionalCostService.addtionalCostList; let i=index\">\r\n                                <td  style=\"width:3%\" class=\"tableBorder\">{{i+1}}</td>\r\n                                <td style=\"width:6%\" class=\"tableBorder\">{{c.menucode}}</td>\r\n                                <td style=\"width:30%\" class=\"tableBorder\">{{c.desca}}</td>\r\n                                <td style=\"width:5%\" class=\"tableBorder\">{{c.unit}}</td>\r\n                                <td style=\"width:8%\" class=\"tableBorder\">{{c.batch}}</td>\r\n                              \r\n                                <td class=\"tableBorder\" style=\"text-align: right; width: 8%;\">\r\n                                  {{c.rate}}</td>\r\n                                <!-- <td class=\"tableBorder\">{{c.rate|twoDigitNumber}}</td> -->\r\n                                <td class=\"tableBorder\" style=\"text-align: right; width: 5%;\">{{c.quantity}}</td>\r\n                              \r\n                                <td class=\"tableBorder\" style=\"text-align: right; width: 12%;\">{{c.amount|twoDigitNumber}}</td>\r\n                                <!-- <td class=\"tableBorder\">{{c.nAmount|twoDigitNumber}}</td> -->\r\n                            </tr>\r\n\r\n                        </tbody>\r\n                        <!-- <tfoot>\r\n                            <tr>\r\n                                <td colspan=\"5\">\r\n\r\n                                </td>\r\n                                <td>\r\n                                    <div class=\"c3\">\r\n                                        Total Balance :\r\n                                    </div>\r\n                                </td>\r\n                               \r\n                                <td>\r\n                                    <div class=\"c3\" style=\"margin-left:1px\">\r\n                                        {{_additionalCostService.loadedTrnmain.TOTAMNT|twoDigitNumber}}\r\n                                    </div>\r\n                                </td>\r\n                                \r\n                                <td>\r\n                                    <div class=\"c3\" style=\"margin-left:1px\">\r\n                                        {{_additionalCostService.loadedTrnmain.NETWITHOUTROUNDOFF|twoDigitNumber}}\r\n                                    </div>\r\n                                </td>\r\n                            </tr>\r\n                        </tfoot> -->\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <!--   </div>\r\n            </div>\r\n        </div>-->\r\n\r\n    </div>\r\n\r\n</form>\r\n\r\n<div class=\"sticky-bottom\" style=\"background: gray;\">\r\n    <div class=\"row\" >\r\n      <div class=\"col-md-6\">\r\n        &nbsp;\r\n      </div>\r\n      <div class=\"col-md-4\" style=\"text-align: end;\">\r\n        <label style=\"font-weight: bold;font-size: 16px; width: 125px;\">Total Balance</label>\r\n      </div>\r\n      <div class=\"col-md-2\" style=\"text-align: end;\">\r\n        <label style=\"font-size: 15px; font-weight: bold; margin-right: 2rem; \">{{_additionalCostService.loadedTrnmain.TOTAMNT|twoDigitNumber}}</label>\r\n      </div>\r\n    </div>\r\n  </div>\r\n"

/***/ }),

/***/ 1342:
/***/ (function(module, exports) {

module.exports = "<style>\r\n    th {\r\n        padding: 0px 5px;\r\n        font-family: Roboto, Arial, sans-serif;\r\n        font-size: 13px;\r\n    }\r\n\r\n    td {\r\n        font-size: 12px;\r\n    }\r\n\r\n    tbody {\r\n        display: block;\r\n        height: 25vh;\r\n        overflow: auto;\r\n    }\r\n\r\n    .ExpandTable{\r\n        height: 45vh;\r\n    }\r\n\r\n    thead,\r\n    tbody tr {\r\n        display: table;\r\n        width: 100%;\r\n        table-layout: fixed;\r\n        /* even columns width , fix width of table too*/\r\n    }\r\n\r\n    .costingMethodWrapper {\r\n        border: 1px solid #ddd;\r\n        margin-top: -83px;\r\n        padding: 0px 10px 5px 10px;\r\n    }\r\n\r\n    .costingMethodWrapper label {\r\n\r\n        width: 100px;\r\n        background: #F1F1F1;\r\n        margin-top: -11px;\r\n        padding-left: 6px;\r\n    }\r\n\r\n    .costingMethodWrapper a {\r\n        font-size: 12px;\r\n    }\r\n\r\n    .title-wrapper {\r\n        width: 128px;\r\n        background: #F1F1F1;\r\n        margin-top: -29px;\r\n        margin-bottom: 10px;\r\n        padding-left: 13px;\r\n\r\n        \r\n    }\r\n    .tableBorder{\r\n        position: relative  !important;\r\n    }\r\n\r\n    .tooltips{\r\n        opacity: 0;\r\n        visibility: hidden;\r\n       \r\n\r\n    transition: 0.3s ease-in-out;\r\n    position: absolute;\r\n    top: 23px;\r\n    background: #000;\r\n    padding: 0 5px;\r\n    border-radius: 5px;\r\n    font-size: 12px !important;\r\n    z-index: 999999;\r\n    /* right: -60%; */\r\n    \r\n    \r\n    }\r\n    .tooltips p{\r\n        color: #fff !important;\r\n        margin-bottom: 0;\r\n        font-size: 11px;\r\n        line-height: 1.8;\r\n    }\r\n    .showTooltips:hover .tooltips{\r\n        opacity: 1;\r\n        visibility: visible;\r\n\r\n    }\r\n    .showTooltips:hover .tooltips:after{\r\n        display: block;\r\n\r\n    }\r\n\r\n    td:hover .tooltips{\r\n        opacity: 1;\r\n        visibility: visible;\r\n\r\n\r\n    }\r\n\r\n    .button-class{\r\n        width: 85px;\r\n        margin-top: 0px;\r\n        float: right;\r\n    }\r\n</style>\r\n\r\n<form disabled [formGroup]=\"form\" style=\"padding: 10px; border:1.5px solid #ddd;\" *ngIf=\"!masterService.ShowMore\">\r\n\r\n    <div class=\"row\" style=\"margin-bottom: 10px;\">\r\n        <div class=\"col-lg-2\">\r\n            <div class=\"form-wrapper\" style=\"display: flex;\"> <label style=\"flex:0 0 40%\">Ref Bill No : </label>\r\n                <input id=\"REFPINO_AD\" type=\"text\" style=\"width: 100%;\" [(ngModel)]='masterService.RefObj.Ref_BILLNO_2'\r\n                    [disabled]=\"_transactionService.TrnMainObj.Mode=='VIEW'\" [ngModelOptions]=\"{standalone: true}\">\r\n            </div>\r\n\r\n        </div>\r\n        <div class=\"col-lg-3\">\r\n            <div class=\"form-wrapper\" style=\"display: flex;margin-left: -15px;\"> <label style=\"flex:0 0 30%\">Ref Bill\r\n                    Date : </label>\r\n                <input type=\"date\" style=\"width: 100%;\" [(ngModel)]='masterService.RefObj.Ref_TRNDATE_2'\r\n                    (change)=\"changeToBSDate($event.target.value,'AD')\" [ngModelOptions]=\"{standalone: true}\"\r\n                    [disabled]=\"_transactionService.TrnMainObj.Mode=='VIEW'\">\r\n                <input  type=\"text\"style=\"width: 100%;\" [(ngModel)]='masterService.RefObj.Ref_BSDATE_2'\r\n                    [ngModelOptions]=\"{standalone: true}\" readonly disabled>\r\n            </div>\r\n        </div>\r\n\r\n\r\n        <div class=\"col-lg-3\">\r\n            <div class=\"form-wrapper\" style=\"display: flex;margin-left: -25px;\"> <label style=\"flex:0 0 30%\">Supplier\r\n                    Name:</label>\r\n                <input type=\"text\" style=\"width: 100%;\" placeholder=\"Press Enter or Tab\" (keydown.Tab)=\"SupplierList()\"\r\n                    (keydown.Enter)=\"SupplierList()\" [(ngModel)]='masterService.RefObj.Ref_SupplierName_2'\r\n                    [ngModelOptions]=\"{standalone: true}\" [disabled]=\"_transactionService.TrnMainObj.Mode=='VIEW'\">\r\n            </div>\r\n\r\n        </div>\r\n        <div class=\"col-lg-2\">\r\n            <div class=\"form-wrapper\" style=\"display: flex;margin-left: -15px;\"> <label style=\"flex:0 0 30%\">PAN No :\r\n                </label>\r\n                <input type=\"text\" style=\"width: 50%;\" [(ngModel)]='masterService.RefObj.Ref_SupplierVAT_2'\r\n                    [ngModelOptions]=\"{standalone: true}\" readonly disabled>\r\n            </div>\r\n\r\n        </div>\r\n        <div lass=\"col-lg-2\">\r\n            <!-- <div class=\"form-wrapper\" style=\"display: flex;margin-left: -15px;\">\r\n                <label style=\"flex:0 0 60%;margin-left: -40px;\">Group Costing Mode</label>\r\n                <div class=\"row\">\r\n                    <div class=\"col-lg-12\">\r\n\r\n                        <select class=\"form-control\" style=\"height: 25px;font-size: 12px;\" name=\"ACNAME\"\r\n                            [(ngModel)]=\"GcostMode\" [ngModelOptions]=\"{standalone:true}\"\r\n                            (change)=\"byQuantity($event.target.value)\"\r\n                            [disabled]=\"_transactionService.TrnMainObj.Mode=='VIEW' || PI == true\"\r\n                            (keydown.Enter)=\"gcostEntered()\">\r\n                            <option value=\"\"></option>\r\n                            <option value=\"Qty\">ON QTY</option>\r\n                            <option value=\"Amount\">ON AMOUNT</option>\r\n\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n            </div> -->\r\n        </div>\r\n    </div>\r\n    <div class=\"row\">\r\n        <div class=\"col-lg-7\">\r\n\r\n            <div style=\"border: 1px solid #ddd; padding: 20px 10px 10px 10px;\">\r\n\r\n                <div class=\"title-wrapper\">\r\n                    <span class=\"form-title\">Bill-Details</span>\r\n                </div>\r\n\r\n                <div class=\"row\" style=\"margin-top: -10px;\">\r\n                    <div class=\"col-lg-5 showTooltips\">\r\n                        <div class=\"form-wrapper\" style=\"display: flex;\"> <label style=\"flex:0 0 25%\">Dr Account \r\n                            </label>\r\n                            <input id=\"AdditionalCostAc_\" type=\"text\"\r\n                                [(ngModel)]=\"masterService.AdditionalPurchaseAcObj_2\"\r\n                                [ngModelOptions]=\"{standalone: true}\" style=\"width: 100%;\"\r\n                                (keydown.Enter)=\"TabAcBox('AC')\" autocomplete=\"off\" placeholder=\"Press Enter to Select\"\r\n                                [disabled]=\"_transactionService.TrnMainObj.Mode=='VIEW'\" (keydown)=\"keyPress($event)\">\r\n                        </div>\r\n                        <ng-container *ngIf=\"_transactionService.userSetting.ENABLESUBLEDGER==1\">\r\n                            <div style=\"display: flex;\" >\r\n                             \r\n                                 <div class=\"tooltips\">\r\n                                  <p *ngIf=\" masterService.DR_SL_INDV_ACNAME \">Sub Ledger :</p>\r\n                                  <p class=\"subledgerSelected\">{{masterService.DR_SL_INDV_ACNAME}}</p>\r\n                                 </div>\r\n                              </div>\r\n\r\n                        </ng-container>\r\n                    </div>\r\n                    <div class=\"col-lg-3\">\r\n                        <div class=\"form-wrapper\" style=\"display: flex;\"> <label style=\"flex:0 0 35%\">Amount  </label>\r\n                            <input *ngIf=\"_transactionService.TrnMainObj.Mode!='VIEW'\" id=\"AmountsAD_\"\r\n                                class=\"form-control col-md-2\" type=\"number\" [(ngModel)]=\"masterService.AdditionalAMOUNT_2\"\r\n                                [ngModelOptions]=\"{standalone: true}\" style=\"width: 100%;\" \r\n                                placeholder=\"Press Enter to Change Individual Amount\" (keydown.Enter)=\"IndAmountSelect()\" \r\n                                (keydown.Tab)=\"IndAmountSelect()\"  (keydown)=\"keyPress($event)\"> \r\n                            <input *ngIf=\"_transactionService.TrnMainObj.Mode=='VIEW'\" id=\"AmountsAD_\"\r\n                                class=\"form-control col-md-2\" type=\"number\" [(ngModel)]=\"masterService.AdditionalAMOUNT_2\"\r\n                                [ngModelOptions]=\"{standalone: true}\" style=\"width: 100%;\" \r\n                                disabled=\"_transactionService.TrnMainObj.Mode=='VIEW'\">\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-lg-4\">\r\n                        <div class=\"form-wrapper\" style=\"display: flex;\"> <label style=\"flex:0 0 35%\">Remarks : </label>\r\n                            <input id=\"RemarksAD_\" type=\"text\" class=\"form-control col-md-9\"\r\n                                [(ngModel)]=\"masterService.AdditionalREMARKS_2\" [ngModelOptions]=\"{standalone: true}\"\r\n                                style=\"width: 100%;\" [disabled]=\"_transactionService.TrnMainObj.Mode=='VIEW'\"\r\n                                (keydown.Enter)=\"remarksEntered()\" autocomplete=\"off\">\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"row\">\r\n                    <div class=\"col-lg-5\">\r\n                        <div class=\"form-wrapper\" style=\"display: flex;\"> <label style=\"flex:0 0 25%\">Description \r\n                            </label>\r\n                            <input type=\"text\" style=\"width: 100%;\" [(ngModel)]='masterService.AdditionalDesc_2'\r\n                                [ngModelOptions]=\"{standalone: true}\"\r\n                                [disabled]=\"_transactionService.TrnMainObj.Mode=='VIEW'\">\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-lg-3\">\r\n                        <div class=\"form-wrapper\" style=\"display: flex;\"> <label style=\"flex:0 0 35%\">VAT : </label>\r\n                            <input type=\"number\" style=\"width: 100%;\" [(ngModel)]='masterService.AdditionalVAT_2'\r\n                                [ngModelOptions]=\"{standalone: true}\" (focusout)=\"checkVat()\"\r\n                                [disabled]=\"_transactionService.TrnMainObj.Mode=='VIEW' || masterService.IsTaxableBill_2==0\">\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-lg-4 showTooltips\">\r\n                        <div class=\"form-wrapper\" style=\"display: flex;\"> <label style=\"flex:0 0 35%\">Cr. Account \r\n                            </label>\r\n                            <input type=\"text\" placeholder=\"Press Enter to Select\"\r\n                                [(ngModel)]=\"masterService.AdditionalPurchaseCreditAcObj_2\"\r\n                                [ngModelOptions]=\"{standalone: true}\" style=\"width: 100%;\"\r\n                                (keydown.Enter)=\"TabAcBox('CreditAC')\"\r\n                                [disabled]=\"_transactionService.TrnMainObj.Mode=='VIEW'\" (keydown)=\"keyPress($event)\">\r\n                        </div>\r\n\r\n                        <ng-container *ngIf=\"_transactionService.userSetting.ENABLESUBLEDGER==1\">\r\n                            <div style=\"display: flex;\" >\r\n                             \r\n                                 <div class=\"tooltips\">\r\n                                  <p *ngIf=\" masterService.CR_SL_INDV_ACNAME \">Sub Ledger :</p>\r\n                                  <p class=\"subledgerSelected\">{{masterService.CR_SL_INDV_ACNAME}}</p>\r\n                                 </div>\r\n                              </div>\r\n\r\n                        </ng-container>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n        <div class=\"col-lg-2\">\r\n            <div class=\"row\">\r\n                <div style=\"border: 1px solid #ddd; padding: 20px 10px 10px 10px;\">\r\n\r\n                    <div class=\"title-wrapper\">\r\n                        <span class=\"form-title\">TDS Adjustment</span>\r\n                    </div>\r\n\r\n                    <div class=\"row\">\r\n                        <div class=\"col-lg-12 showTooltips\">\r\n                            <div class=\"form-wrapper\" style=\"display: flex;\"> <label style=\"flex:0 0 20%\">A/C : </label>\r\n                                <input id=\"AdditionalCostAc_\" type=\"text\" [(ngModel)]=\"masterService.TDSAccount_Name_2\"\r\n                                    [ngModelOptions]=\"{standalone: true}\" style=\"width: 100%;flex:0 0 80%;\"\r\n                                    (keydown.Enter)=\"TabTDSAccount()\" autocomplete=\"off\"\r\n                                    placeholder=\"press Enter to select\"\r\n                                    [disabled]=\"_transactionService.TrnMainObj.Mode=='VIEW'\">\r\n                            </div>\r\n\r\n                            <ng-container *ngIf=\"_transactionService.userSetting.ENABLESUBLEDGER==1\">\r\n                                <div style=\"position: absolute; white-space: nowrap;top: -64px;\" >\r\n                                 \r\n                                     <div class=\"tooltips\">\r\n                                      <p *ngIf=\" masterService.TDS_SL_INDV_ACNAME \">Sub Ledger :</p>\r\n                                      <p class=\"subledgerSelected\">{{masterService.TDS_SL_INDV_ACNAME}}</p>\r\n                                     </div>\r\n                                  </div>\r\n    \r\n                            </ng-container>\r\n                            \r\n                        </div>\r\n                        <div class=\"col-lg-12\">\r\n                            <div class=\"form-wrapper\" style=\"display: flex;\"> <label\r\n                                style=\"flex:0 0 27%;margin-left: -5px;\">Amount :\r\n                            </label>\r\n                            <input type=\"number\" style=\"flex:0 0 55%; width: 100%;\"\r\n                                [(ngModel)]=\"masterService.TDSAmount_2\" [ngModelOptions]=\"{standalone: true}\"\r\n                                [disabled]=\"_transactionService.TrnMainObj.Mode=='VIEW' || !masterService.TDSAccount_ACID_2\">\r\n                        </div>\r\n\r\n                        </div>\r\n                        <!-- <div class=\"col-lg-5\">\r\n                        </div> -->\r\n\r\n\r\n                    </div>\r\n\r\n\r\n                </div>\r\n                \r\n\r\n\r\n\r\n\r\n            </div>\r\n        </div>\r\n        <div class=\"col-lg-1\">\r\n            <div class=\"row\">\r\n                <div class=\"checkboxWrapper\" style=\"padding-left: 10px; margin-top: 0px;\">\r\n                    <div class=\"check-box\" style=\"margin-right: 7px;\">\r\n                        <input type=\"checkbox\" id=\"taxable\" name=\"taxable\"\r\n                            (change)=\"ChangeIsTaxableBill($event.target.checked)\"\r\n                            [checked]=\"masterService.IsTaxableBill_2== 1\"\r\n                            [disabled]=\"_transactionService.TrnMainObj.Mode=='VIEW'\">\r\n                        <label for=\"taxable\" style=\"width: 70%; white-space: nowrap;\"> Is Taxable Additional\r\n                            Bill</label><br>\r\n                    </div>\r\n                    <div class=\"check-box\">\r\n                        <input type=\"checkbox\" id=\"accountposting\" name=\"acposting\"\r\n                            (change)=\"$event.target.checked?(masterService.DoAccountPosting_2=1):(masterService.DoAccountPosting_2=0)\"\r\n                            [checked]=\"masterService.DoAccountPosting_2== 1\"\r\n                            [disabled]=\"_transactionService.TrnMainObj.Mode=='VIEW'\">\r\n                        <label for=\"accountposting\" style=\"width: 70%; white-space: nowrap;\"> Do Account\r\n                            Posting</label><br>\r\n\r\n                    </div>\r\n                    <div *ngIf=\"_transactionService.userSetting.DoReverseJournalEntry==1\" class=\"check-box\">\r\n                        <input type=\"checkbox\" id=\"accountposting\" name=\"acposting\"\r\n                            (change)=\"ChangeReverseJournal($event)\"\r\n                            [checked]=\"masterService.DoReverseJournalEntry_2== 1\"\r\n                            [disabled]=\"_transactionService.TrnMainObj.Mode=='VIEW'\">\r\n                        <label for=\"accountposting\" style=\"width: 70%; white-space: nowrap;\" [title]=\"masterService.DoReverseJournalEntry_2== 1?masterService.ReverseJournalACNAME_2:''\"> Do Reverse Journal Entry</label><br>\r\n\r\n                    </div>\r\n                    <ng-container >\r\n                        <div class=\"check-box\">\r\n                            <input type=\"checkbox\" id=\"isecaitem\" name=\"acposting\"\r\n                                (change)=\"ChangeECA_ITEM($event.target.checked)\"\r\n                                [checked]=\"masterService.IS_ECA_ITEM_2== 1\"\r\n                                [disabled]=\"_transactionService.TrnMainObj.Mode=='VIEW'\">\r\n                            <label for=\"isecaitem\" style=\"width: 70%; white-space: nowrap;\">Is Import Document Item</label>\r\n                        </div>\r\n                    </ng-container>\r\n\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"col-lg-2\" style=\"margin-top: -10px;\">\r\n            <div class=\"row\">\r\n             <!-- <div  style=\"border: 1px solid #ddd; padding: 20px 10px 10px 10px;     margin: 0px 10px;\">\r\n               \r\n                     <div class=\"title-wrapper\" style=\"width: 158px;\">\r\n                  <span class=\"form-title\">Group Costing Mode</span>\r\n             </div>\r\n                \r\n                <div class=\"row\">\r\n                    <div class=\"col-lg-12\">\r\n                     \r\n                        <select class=\"form-control col-md-1\" name=\"ACNAME\"  [(ngModel)]=\"GcostMode\" [ngModelOptions]=\"{standalone:true}\"\r\n                        (change)=\"byQuantity($event.target.value)\"\r\n                        [disabled]=\"_transactionService.TrnMainObj.Mode=='VIEW' || PI == true\" (keydown.Enter)=\"gcostEntered()\">\r\n                        <option value=\"\"></option>\r\n                        <option value=\"Qty\">ON QTY</option>\r\n                        <option value=\"Amount\">ON AMOUNT</option>\r\n\r\n                    </select>\r\n                        </div>\r\n                    </div>\r\n                   \r\n                    \r\n                </div>  -->\r\n                \r\n            \r\n            </div>\r\n\r\n            <div class=\"row\">\r\n            <!-- <fieldset style=\"margin-right: 15px !important;\">\r\n                <legend style=\"font-size: 14px;\">Costing Mode:</legend>\r\n                <div style=\"display: flex;\">\r\n                    <label class=\"smallBoldLabel\"><input type=\"radio\" name=\"addcosting\" value=\"COSTING\"\r\n                            [disabled]=\"_transactionService.TrnMainObj.Mode=='VIEW'\" [(ngModel)]=\"masterService.addcosting\"\r\n                            [ngModelOptions]=\"{standalone:true}\" checked>&nbsp;Costing</label>\r\n                    <label class=\"smallBoldLabel\" style=\"width: 100px;margin-left: -20px;\"><input type=\"radio\" name=\"addcosting\"\r\n                            value=\"NONCOSTING\" [disabled]=\"_transactionService.TrnMainObj.Mode=='VIEW'\"\r\n                            [(ngModel)]=\"masterService.addcosting\"\r\n                            [ngModelOptions]=\"{standalone:true}\">&nbsp;Non-Costing</label>\r\n    \r\n                </div>\r\n            </fieldset> -->\r\n           \r\n        </div>\r\n\r\n            <div style=\"margin: 110px 0px;\"> \r\n                <button  class=\"btn btn-info btn-add-focus button-class\"\r\n                    (click)=\"onAddClick()\" *ngIf=\"_transactionService.TrnMainObj.Mode!='VIEW'\"\r\n                    >Add</button>\r\n            </div>\r\n\r\n\r\n\r\n\r\n        </div>\r\n    </div>\r\n\r\n</form>\r\n\r\n<div class=\"tableCOntent\" style=\"margin-top: 7px;\">\r\n    <div class=\"row\" style=\"width: 105%;\">\r\n\r\n        <div class=\"wrapper\">\r\n            <div style=\"margin-left:0px; margin-right:0px;\">\r\n\r\n\r\n                <div #prodlistTable style=\"background-color: #FFFFFF;\">\r\n                    <table id=\"fix\" class=\"table\"style=\"width:99% !important\">\r\n                        <thead>\r\n                            <tr style=\"border-bottom: 10px solid #c0c0c0;\r\n                                                                                                    border-top: 2px solid #c0c0c0;\r\n                                                                                                    height: 30px;\r\n                                                                                                    background: silver;\r\n                                                                                                    color: black;\r\n                                                                                                    position: sticky;\">\r\n                                    <th style=\"width: 2%;text-align: center;\">S.N\r\n                                    </th>\r\n                                    <th  style=\"width: 5%;\">Ref Bill No\r\n                                    </th>\r\n                                    <th  style=\"width: 6%;text-align: center;\">Date\r\n                                    </th>\r\n                                    <th  style=\"width: 10%;text-align: center;\">Dr Account\r\n                                    </th>\r\n                                    <th  style=\"width: 7%;\">Description\r\n                                    </th>\r\n                                    <th  style=\"width: 5%;text-align: center;\">Amount\r\n                                    </th>\r\n                                    <th  style=\"width: 6%;\">VAT\r\n                                    </th>\r\n                                    <th  style=\"width: 6%;\">Remarks\r\n                                    </th>\r\n                                    <th  style=\"width: 8%;\">Cr Account\r\n                                    </th>\r\n                                    <th  style=\"width: 6%;\">TDS Amount\r\n                                    </th>\r\n                                    <th  style=\"width: 6%;\">TDS A/C\r\n                                    </th>\r\n                                    <th  style=\"width:9%;\">Supplier Name\r\n                                    </th>\r\n                                    <th  style=\"width: 6%;\">AC Posting\r\n                                    </th>\r\n                                    <th  style=\"width: 8%;\">Taxable Add Bill\r\n                                    </th>\r\n                                    <!-- <th  style=\"width: 6%;\">Cost Mode\r\n                                    </th> -->\r\n                                    <th  style=\"width: 4%;\">Costing\r\n                                    </th>\r\n                                    <th  style=\"width: 7%;\">Imp Doc Item\r\n                                    </th>\r\n                            </tr>\r\n                        </thead>\r\n\r\n                        <tbody style=\"background-color: #e9e9e9;\" [ngClass]=\"masterService.ShowMore?'ExpandTable':''\">\r\n                            <tr *ngFor=\"let l of _addionalcostService.INDcostList;let i=index\"\r\n                                (dblclick)=\"TableRowDoubleClickEvent(l)\" (click)=\"checkRow(i)\">\r\n                                <td class=\"tableBorder\" style=\"width: 2%;text-align: center;\">{{i+1}}</td>\r\n                                <td class=\"tableBorder\" style=\"width: 5%;\">{{l.Ref_BILLNO}}</td>\r\n                                <td class=\"tableBorder\" style=\"width:6%\">{{l.Ref_TRNDATE}}</td>\r\n                                <td class=\"tableBorder\" style=\"width:10%\">{{l.costAc.ACNAME}}\r\n                                \r\n                                    <div class=\"tooltips\">\r\n                                        <p *ngIf=\"l.DR_SL_ACNAME\">Sub Ledger :</p>\r\n                                        <p>{{l.DR_SL_ACNAME}}</p>\r\n                                     </div>\r\n                                </td>\r\n                                <td class=\"tableBorder\"style=\"width: 7%;\">{{l.AdditionalDesc}}</td>\r\n                                <td class=\"tableBorder\" style=\"width: 5%\">{{l.amount | twoDigitNumber}}</td>\r\n                                <td class=\"tableBorder\" style=\"width: 6%;\">{{l.AdditionalVAT | twoDigitNumber}}</td>\r\n                                <td class=\"tableBorder\" style=\"width: 6%;\">{{l.remarks}}</td>\r\n                                <td class=\"tableBorder\" style=\"width: 8%;\">{{l.creditAc.ACNAME}}\r\n                                    <div class=\"tooltips\">\r\n                                        <p *ngIf=\"l.CR_SL_ACNAME\">Sub Ledger :</p>\r\n                                        <p>{{l.CR_SL_ACNAME}}</p>\r\n                                     </div>\r\n                                </td>\r\n                                <td class=\"tableBorder\" style=\"width: 6%;text-align: right;\">{{l.TDSAmount}}</td>\r\n                                <td class=\"tableBorder\" style=\"width: 6%;\">{{l.TDSAccount_Name}}\r\n                                    <div class=\"tooltips\">\r\n                                        <p *ngIf=\"l.TDS_SL_ACNAME\">Sub Ledger :</p>\r\n                                        <p>{{l.TDS_SL_ACNAME}}</p>\r\n                                     </div>\r\n                                </td>\r\n                                <td class=\"tableBorder\" style=\"width: 9%;\">{{l.Ref_SupplierName}}</td>\r\n                                <td class=\"tableBorder\" style=\"width: 6%;\">{{l.DoAccountPosting}}</td>\r\n                                <td class=\"tableBorder\" style=\"width: 8%;\">{{l.IsTaxableBill}}</td>\r\n                                <!-- <td class=\"tableBorder\" style=\"width:50px\">{{l.CostingType}}</td> -->\r\n                                <!-- <td class=\"tableBorder\" style=\"width: 6%;\">{{l.GCOSTMODE}}</td> -->\r\n                                <!-- <td class=\"tableBorder\" style=\"width:50px\">{{l.desca}}</td> -->\r\n                                <td class=\"tableBorder\" style=\"width: 5%;\">{{l.CostingNonCostingValue}}</td>\r\n                                <!-- <td class=\"tableBorder\" style=\"width:50px\">{{l.batch}}</td> -->\r\n                                <td class=\"tableBorder\" style=\"width: 6%;\">{{l.IS_ECA_ITEM}}</td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n\r\n<div class=\"sticky-bottom\" style=\"background: gray; width: 98%;\">\r\n    <div class=\"row\">\r\n        <div class=\"col-md-3\" style=\"text-align: end;\">\r\n            <label style=\"font-weight: bold;font-size: 14px; width: 100%;\">Non Taxable: {{this._addionalcostService.addINDCostNonTaxableTotalAmount|\r\n                number}}</label>            \r\n        </div>\r\n        <div class=\"col-md-3\" style=\"text-align: end;\">\r\n            <label style=\"font-weight: bold;font-size: 14px; width: 100%\">Taxable: {{this._addionalcostService.addINDCostTaxableTotalAmount|\r\n                number}}</label>\r\n        </div>\r\n        <div class=\"col-md-3\" style=\"text-align: end;\">\r\n            <label style=\"font-weight: bold;font-size: 14px; width: 100%\">VAT: {{this._addionalcostService.addINDCostTotalVat|\r\n                number}} </label>\r\n        </div>\r\n        <div class=\"col-md-3\" style=\"text-align: end;\">\r\n            <label\r\n                style=\"font-size: 14px; font-weight: bold; width: 90%\">Net Amount: {{this._addionalcostService.addINDCostTotalNetAmount|\r\n                number}} </label>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div *ngIf=\"masterService.showIndividualAmountPopup\">\r\n    <div class=\"modal-sticky\" style=\"display : block; padding: 0px;  margin-bottom: 1rem;margin-right: 75rem;\">\r\n        <div class=\"modal-content modal-content-main-area\" style=\"width: 120%; height: auto;padding-bottom: 0px;padding-top: 0px;margin-top: 12pc !important;\">\r\n            <div #prodlistTable id=\"prodlistTable\" style=\"background-color: #FFFFFF;\" style=\"width: 109%;\">\r\n                <table id=\"fix\" class=\"table\" style=\"margin-left: -19px !important;width: 96% !important;\">\r\n                    <thead>\r\n                        <tr style=\"border-bottom: 6px solid #c0c0c0;\r\n                        border-top: 2px solid #c0c0c0;\r\n                        height: 30px;\r\n                        background: silver;\r\n                        color: black;\r\n                        position: sticky;\">\r\n                            <th style=\"width:3%\">S.N\r\n\r\n                            </th>\r\n                            <th style=\"width:10%\">Item Code\r\n\r\n                            </th>\r\n                            <th style=\"width:25%\">Item Description\r\n\r\n                            </th>\r\n\r\n                            <!-- <th style=\"width:5%\">Unit\r\n                            </th> -->\r\n\r\n                            <th style=\"width:12%\">Batch\r\n\r\n                            </th>\r\n\r\n                            <th style=\"width:8%\">Rate\r\n\r\n                            </th>\r\n                            <!-- <th style=\"width:5%\">Qty\r\n\r\n                            </th> -->\r\n\r\n                            <th style=\"width:12%\">Amount\r\n\r\n                            </th>\r\n                            <!-- <th>acid</th> -->\r\n                            <th style=\"width:12%\">Ind Amount\r\n\r\n                            </th>\r\n\r\n                        </tr>\r\n                    </thead>\r\n\r\n                    <tbody style=\"background-color: #e9e9e9;\">\r\n                        <tr *ngFor=\"let c of _addionalcostService.tempIndCostList; let i=index\">\r\n                            <td style=\"width:3%\" class=\"tableBorder\">{{i+1}}</td>\r\n                            <td style=\"width:10%\" class=\"tableBorder\">{{c.menucode}}</td>\r\n                            <td style=\"width:25%\" class=\"tableBorder\">{{c.desca}}</td>\r\n                            <!-- <td style=\"width:5%\" class=\"tableBorder\">{{c.unit}}</td> -->\r\n                            <td style=\"width:12%\" class=\"tableBorder\">{{c.batch}}</td>\r\n                            <td class=\"tableBorder\" style=\"text-align: right; width: 8%;\">\r\n                                {{_transactionService.nullToZeroConverter(c.rate) |twoDigitNumber}}</td>\r\n                            <!-- <td class=\"tableBorder\" style=\"text-align: right; width: 5%;\">{{c.quantity}}</td> -->\r\n\r\n                            <td class=\"tableBorder\" style=\"text-align: right; width: 12%;\">{{_transactionService.nullToZeroConverter(c.amount)|twoDigitNumber}}\r\n                            </td>\r\n                            <!-- <td>{{c.additionalcostac}}</td> -->\r\n                            <td class=\"tableBorder\" style=\"text-align: right; width: 12%;\"><input type=\"number\" style=\"width: 100px;\"\r\n                                    [(ngModel)]=\"c.indamount\" (keydown)=\"CalculateTotalAmount()\" (ngModelChange)=\"CalculateTotalAmount()\"></td>\r\n                                    \r\n                        </tr>\r\n\r\n                    </tbody>\r\n                    <tfoot>\r\n                        <tr style=\"background: #d9d9d9;\">\r\n                            <td colspan=\"6\">\r\n                                <label style=\"float:right;font-size: 16px;font-weight: bold;width: 225px !important;\">Total Amount: {{this.masterService.TOTALINDAMOUNT|twoDigitNumber}}</label>\r\n                            </td>\r\n                        </tr>\r\n                    </tfoot>\r\n                </table>\r\n            </div>\r\n            <div class=\"modal-footer\">\r\n                <button type=\"submit\" class=\"btn btn-sm btn-info\" style=\"font-size: 12px;\"\r\n                    (click)=\"closeIndAmountPopup()\">OK</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<generic-popup-grid #genericGridACParty [popupsettings]=\"gridACListPartyPopupSettings\"\r\n    (onItemDoubleClick)=\"ACNameSelect_Additional($event)\"></generic-popup-grid>\r\n\r\n<generic-popup-grid #genericGridCreditACListParty [popupsettings]=\"gridCreditACListPartyPopupSettings\"\r\n    (onItemDoubleClick)=\"ACNameSelect_Credit($event)\"></generic-popup-grid>\r\n\r\n<generic-popup-grid #genericGridItem [popupsettings]=\"gridItemPopupSettings\"\r\n    (onItemDoubleClick)=\"dblClickItemSelection($event)\"></generic-popup-grid>\r\n\r\n<generic-popup-grid #genericGridBatch [popupsettings]=\"gridBatchPopupSettings\"\r\n    (onItemDoubleClick)=\"dblClickBatchSelection($event)\"></generic-popup-grid>\r\n\r\n<generic-popup-grid #genericGridACList [popupsettings]=\"gridACListPopupSettings\"\r\n    (onItemDoubleClick)=\"onAcSelect($event)\"></generic-popup-grid>\r\n\r\n<generic-popup-grid #genericGridSupplier [popupsettings]=\"gridPopupSettingsForSupplier\"\r\n    (onItemDoubleClick)=\"onSupplierSelected($event)\"></generic-popup-grid>\r\n    \r\n\r\n    <generic-popup-grid #gridSubLedgerSettingListCr [popupsettings]=\"gridSubLedgerSettingCr\"\r\n    (onItemDoubleClick)=\"onSubLedgerSelectCr($event)\"></generic-popup-grid>\r\n    <generic-popup-grid #gridSubLedgerSettingListDr [popupsettings]=\"gridSubLedgerSettingDr\"\r\n    (onItemDoubleClick)=\"onSubLedgerSelectDr($event)\"></generic-popup-grid>\r\n    <generic-popup-grid #gridSubLedgerSettingListAc [popupsettings]=\"gridSubLedgerSettingAc\"\r\n    (onItemDoubleClick)=\"onSubLedgerSelectAc($event)\"></generic-popup-grid>\r\n    <generic-popup-grid #genericGridACPartyReverseJournal [popupsettings]=\"genericGridACPartyForReverseJournal\"\r\n    (onItemDoubleClick)=\"ACNameSelectForReverseJournal($event)\" (onPopUpClose)=\"resetReverseJournalEntry()\"></generic-popup-grid>"

/***/ }),

/***/ 1343:
/***/ (function(module, exports) {

module.exports = "<style>\r\n    th {\r\n        padding: 0px 5px;\r\n        font-family: Roboto, Arial, sans-serif;\r\n        font-size: 13px;\r\n    }\r\n\r\n    td {\r\n        font-size: 12px;\r\n    }\r\n\r\n    tbody {\r\n        display: block;\r\n        height: 25vh;\r\n        overflow: auto;\r\n    }\r\n\r\n    .ExpandTable{\r\n        height: 45vh;\r\n    }\r\n\r\n    thead,\r\n    tbody tr {\r\n        display: table;\r\n        width: 100%;\r\n        table-layout: fixed;\r\n        /* even columns width , fix width of table too*/\r\n    }\r\n\r\n    .costingMethodWrapper {\r\n        border: 1px solid #ddd;\r\n        margin-top: -83px;\r\n        padding: 0px 10px 5px 10px;\r\n    }\r\n\r\n    .costingMethodWrapper label {\r\n\r\n        width: 100px;\r\n        background: #F1F1F1;\r\n        margin-top: -11px;\r\n        padding-left: 6px;\r\n    }\r\n\r\n    .costingMethodWrapper a {\r\n        font-size: 12px;\r\n    }\r\n\r\n    .title-wrapper {\r\n        width: 128px;\r\n        background: #F1F1F1;\r\n        margin-top: -29px;\r\n        margin-bottom: 10px;\r\n        padding-left: 13px;\r\n\r\n    }\r\n    .tablebody td{\r\n        border: 1px solid black !important;\r\n        /* position: relative;  */\r\n    }\r\n    td:hover .tooltips{\r\n        opacity: 1;\r\n        visibility: visible;\r\n\r\n\r\n    }\r\n    .tableBorder{\r\n        position: relative  !important;\r\n    }\r\n    .tooltips{\r\n        opacity: 0;\r\n        visibility: hidden;      \r\n        transition: 0.3s ease-in-out;\r\n        position: absolute;\r\n        top: 23px;\r\n        background: #000;\r\n        padding: 0 5px;\r\n        border-radius: 5px;\r\n        font-size: 12px !important;\r\n        z-index: 999999;\r\n        \r\n        /* right: -60%; */\r\n    \r\n    \r\n    }\r\n    .tooltips p{\r\n        color: #fff !important;\r\n        margin-bottom: 0;\r\n        font-size: 11px;\r\n        line-height: 1.8;\r\n    }\r\n    .showTooltips:hover .tooltips{\r\n        opacity: 1;\r\n        visibility: visible;\r\n\r\n    }\r\n    .showTooltips:hover .tooltips:after{\r\n        display: block;\r\n\r\n    }\r\n\r\n    .tablebody th{\r\n        border: 1px solid black;\r\n    }\r\n\r\n    /* .tooltips:after {\r\n        content: \"\";\r\n    position: absolute;\r\n    left: 5px;\r\n    margin-left: -5px;\r\n    top: -54%;\r\n    transform: translateY(-57%);\r\n    border: 10px solid #000;\r\n    border-color: transparent black transparent transparent;\r\n    transform: rotate(90deg);\r\n    display: none;\r\n \r\n} */\r\n\r\n\r\n</style>\r\n\r\n<form disabled [formGroup]=\"form\" style=\"padding: 10px; border:1.5px solid #ddd;\" *ngIf=\"!masterService.ShowMore\">\r\n\r\n    <div class=\"row\" style=\"margin-bottom: 10px;\" *ngIf=\"masterService.RefObj.PURCHASE_TYPE!==  'LOCALPURCHASE'\">\r\n        <div class=\"col-lg-2\">\r\n            <div class=\"form-wrapper\" style=\"display: flex;\"> <label style=\"flex:0 0 40%\">Ref Bill No : </label>\r\n                <input id=\"REFPINO_AD\" type=\"text\" style=\"width: 100%;\" [(ngModel)]='masterService.RefObj.Ref_BILLNO'\r\n                    [disabled]=\"_transactionService.TrnMainObj.Mode=='VIEW'\" [ngModelOptions]=\"{standalone: true}\">\r\n            </div>\r\n\r\n        </div>\r\n        <div class=\"col-lg-3\">\r\n            <div class=\"form-wrapper\" style=\"display: flex;margin-left: -15px;\"> <label style=\"flex:0 0 30%\">Ref Bill\r\n                    Date : </label>\r\n                <input type=\"date\" style=\"width: 100%;\" [(ngModel)]='masterService.RefObj.Ref_TRNDATE'\r\n                    (change)=\"changeToBSDate($event.target.value,'AD')\" [ngModelOptions]=\"{standalone: true}\"\r\n                    [disabled]=\"_transactionService.TrnMainObj.Mode=='VIEW'\">\r\n                <input type=\"text\" style=\"width: 100%;\" [(ngModel)]='masterService.RefObj.Ref_BSDATE'\r\n                    [ngModelOptions]=\"{standalone: true}\" readonly disabled>\r\n            </div>\r\n        </div>\r\n\r\n\r\n        <div class=\"col-lg-3\">\r\n            <div class=\"form-wrapper\" style=\"display: flex;margin-left: -25px;\"> <label style=\"flex:0 0 30%\">Supplier\r\n                    Name:</label>\r\n                <input type=\"text\" style=\"width: 100%;\" placeholder=\"Press Enter or Tab\" (keydown.Tab)=\"SupplierList()\"\r\n                    (keydown.Enter)=\"SupplierList()\" [(ngModel)]='masterService.RefObj.Ref_SupplierName'\r\n                    [ngModelOptions]=\"{standalone: true}\" [disabled]=\"_transactionService.TrnMainObj.Mode=='VIEW'\">\r\n            </div>\r\n\r\n        </div>\r\n        <div class=\"col-lg-2\">\r\n            <div class=\"form-wrapper\" style=\"display: flex;margin-left: -15px;\"> <label style=\"flex:0 0 30%\">PAN No :\r\n                </label>\r\n                <input type=\"text\" style=\"width: 50%;\" [(ngModel)]='masterService.RefObj.Ref_SupplierVAT'\r\n                    [ngModelOptions]=\"{standalone: true}\" readonly disabled>\r\n            </div>\r\n\r\n        </div>\r\n        <div lass=\"col-lg-2\">\r\n            <div class=\"form-wrapper\" style=\"display: flex;margin-left: -15px;\">\r\n                <label style=\"flex:0 0 60%;margin-left: -40px;\">Group Costing Mode</label>\r\n                <div class=\"row\">\r\n                    <div class=\"col-lg-12\">\r\n                        <select class=\"form-control\" style=\"height: 25px;font-size: 12px;\" name=\"ACNAME\"\r\n                            [(ngModel)]=\"GcostMode\" [ngModelOptions]=\"{standalone:true}\"\r\n                            (change)=\"byQuantity($event.target.value)\"\r\n                            [disabled]=\"_transactionService.TrnMainObj.Mode=='VIEW' || PI == true\"\r\n                            (keydown.Enter)=\"gcostEntered()\">\r\n                            <option value=\"\"></option>\r\n                            <option value=\"Qty\">ON QTY</option>\r\n                            <option value=\"Amount\">ON AMOUNT</option>\r\n\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n                <!-- </div> -->\r\n                <!-- <div  > -->\r\n\r\n                <!-- <div class=\"title-wrapper\" style=\"width: 158px;\">\r\n         <span class=\"form-title\">Group Costing Mode</span>\r\n    </div> -->\r\n\r\n\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"row\">\r\n        <div class=\"col-lg-7\">\r\n\r\n            <div style=\"border: 1px solid #ddd; padding: 20px 10px 10px 0px;\">\r\n\r\n                <div class=\"title-wrapper\">\r\n                    <span class=\"form-title\">Bill-Details</span>\r\n                </div>\r\n\r\n                <div class=\"row\" style=\"margin-top: -10px;\">\r\n                    <div class=\"col-lg-5 showTooltips\">\r\n                        <div class=\"form-wrapper \" style=\"display: flex;\"> <label style=\"flex:0 0 25%\">Dr Account \r\n                            </label>\r\n                            <input id=\"AdditionalCostAc_\" type=\"text\"\r\n                                [(ngModel)]=\"masterService.AdditionalPurchaseAcObj\"\r\n                                [ngModelOptions]=\"{standalone: true}\" style=\"width: 100%;\"\r\n                                (keydown.Enter)=\"TabAcBox('AC')\" autocomplete=\"off\" placeholder=\"press Enter to select\"\r\n                                [disabled]=\"_transactionService.TrnMainObj.Mode=='VIEW'\">\r\n                        </div>\r\n                        <ng-container *ngIf=\"_transactionService.userSetting.ENABLESUBLEDGER==1\">\r\n                            <div style=\"display: flex;\"  >\r\n                                <!-- <label style=\"flex:0 0 35%\">Sub-ledger \r\n                                </label> -->\r\n                                <!-- <input  autocomplete=\"off\" id=\"Dr_Sub_ledger\"\r\n                                  style=\"height:23px;width: 100%; display: none;\" (keyup.Enter)=\"onsubLedgerTabDr(i)\" \r\n                                  [(ngModel)]=\"masterService.DR_SL_ACNAME\" [ngModelOptions]=\"{standalone: true}\"\r\n                                  placeholder=\"press ENTER to Select\"  [disabled]=\"masterService.disable_DrSubLedger==true || _transactionService.TrnMainObj.Mode=='VIEW'\"\r\n                                 \r\n                                   /> -->\r\n                                   <div class=\"tooltips\">\r\n                                    <p *ngIf=\"masterService.AdditionalPurchaseAcObj && masterService.DR_SL_ACNAME\">Sub Ledger :</p>\r\n                                    <p class=\"subledgerSelected\">{{masterService.DR_SL_ACNAME}}</p>\r\n                                   </div>\r\n                                  \r\n                               \r\n                              </div>\r\n\r\n                        </ng-container>\r\n                    </div>\r\n                    <div class=\"col-lg-3\">\r\n                        <div class=\"form-wrapper\" style=\"display: flex;\"> <label style=\"flex:0 0 35%\">Amount  </label>\r\n                            <input *ngIf=\"_transactionService.TrnMainObj.Mode!='VIEW'\" id=\"AmountsAD_\"\r\n                                class=\"form-control col-md-2\" type=\"number\" [(ngModel)]=\"masterService.AdditionalAMOUNT\" (ngModelChange)=\"CalculateVat()\"\r\n                                [ngModelOptions]=\"{standalone: true}\" style=\"width: 100%;\">\r\n                            <input *ngIf=\"_transactionService.TrnMainObj.Mode=='VIEW'\" id=\"AmountsAD_\"\r\n                                class=\"form-control col-md-2\" type=\"number\" [(ngModel)]=\"masterService.AdditionalAMOUNT\"\r\n                                [ngModelOptions]=\"{standalone: true}\" style=\"width: 100%;\" \r\n                                disabled=\"_transactionService.TrnMainObj.Mode=='VIEW'\">\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-lg-4\">\r\n                        <div *ngIf=\"masterService.RefObj.PURCHASE_TYPE!==  'LOCALPURCHASE'\" \r\n                        class=\"form-wrapper\" style=\"display: flex;\"> <label style=\"flex:0 0 35%\">Remarks : </label>\r\n                            <input id=\"RemarksAD_\" type=\"text\" class=\"form-control col-md-9\"\r\n                                [(ngModel)]=\"masterService.AdditionalREMARKS\" [ngModelOptions]=\"{standalone: true}\"\r\n                                style=\"width: 100%;\" [disabled]=\"_transactionService.TrnMainObj.Mode=='VIEW'\"\r\n                                (keydown.Enter)=\"remarksEntered()\" autocomplete=\"off\">\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"row\">\r\n                    <div class=\"col-lg-5\">\r\n                        <div *ngIf=\"masterService.RefObj.PURCHASE_TYPE!==  'LOCALPURCHASE'\" class=\"form-wrapper\" style=\"display: flex;\"> <label style=\"flex:0 0 25%\">Description \r\n                            </label>\r\n                            <input type=\"text\" style=\"width: 100%;\" [(ngModel)]='masterService.AdditionalDesc'\r\n                                [ngModelOptions]=\"{standalone: true}\"\r\n                                [disabled]=\"_transactionService.TrnMainObj.Mode=='VIEW'\">\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-lg-3\">\r\n                        <div *ngIf=\"masterService.RefObj.PURCHASE_TYPE!==  'LOCALPURCHASE'\"  class=\"form-wrapper\" style=\"display: flex;\"> <label style=\"flex:0 0 35%\">VAT : </label>\r\n                            <input type=\"number\" style=\"width: 100%;\" [(ngModel)]='masterService.AdditionalVAT'\r\n                                [ngModelOptions]=\"{standalone: true}\" (focusout)=\"checkVat()\"\r\n                                [disabled]=\"_transactionService.TrnMainObj.Mode=='VIEW' || masterService.IsTaxableBill==0\">\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-lg-4 showTooltips\">\r\n                        <div *ngIf=\"masterService.RefObj.PURCHASE_TYPE!==  'LOCALPURCHASE'\" class=\"form-wrapper\" style=\"display: flex;\"> <label style=\"flex:0 0 35%\">Cr. Account \r\n                            </label>\r\n                            <input type=\"text\" placeholder=\"Press Enter to select\"\r\n                                [(ngModel)]=\"masterService.AdditionalPurchaseCreditAcObj\"\r\n                                [ngModelOptions]=\"{standalone: true}\" style=\"width: 100%;\"\r\n                                (keydown.Enter)=\"TabAcBox('CreditAC')\"\r\n                                [disabled]=\"_transactionService.TrnMainObj.Mode=='VIEW'\">\r\n                        </div>\r\n\r\n                        <ng-container *ngIf=\"_transactionService.userSetting.ENABLESUBLEDGER==1 && masterService.RefObj.PURCHASE_TYPE!==  'LOCALPURCHASE'\">\r\n                            <div style=\"display: flex;\" >\r\n                                <!-- <label style=\"flex:0 0 35%\">Sub-ledger \r\n                                </label> -->\r\n\r\n                                <!-- <input  autocomplete=\"off\" id=\"Cr_Sub_ledger\" \r\n                                style=\"height:23px;width: 100%;display:none\" (keyup.Enter)=\"onsubLedgerTabCr(i)\" \r\n                                [(ngModel)]=\"masterService.CR_SL_ACNAME\" [ngModelOptions]=\"{standalone: true}\"\r\n                                placeholder=\"press ENTER to Select\"  [disabled]=\"masterService.disable_CrSubLedger==true || _transactionService.TrnMainObj.Mode=='VIEW' \"\r\n                               \r\n                                 /> -->\r\n                                 <div class=\"tooltips\">\r\n                                  <p *ngIf=\"masterService.AdditionalPurchaseCreditAcObj && masterService.CR_SL_ACNAME \">Sub Ledger :</p>\r\n                                  <p class=\"subledgerSelected\">{{masterService.CR_SL_ACNAME}}</p>\r\n                                 </div>\r\n\r\n                                \r\n\r\n                                \r\n                               \r\n                              </div>\r\n\r\n                        </ng-container>\r\n                       \r\n                      \r\n                       \r\n                    </div>\r\n                 \r\n                </div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n        <div class=\"col-lg-2\" >\r\n            <div class=\"row\">\r\n                <div style=\"border: 1px solid #ddd; padding: 20px 10px 10px 10px;\" *ngIf=\"masterService.RefObj.PURCHASE_TYPE!==  'LOCALPURCHASE'\" >\r\n\r\n                    <div class=\"title-wrapper\">\r\n                        <span class=\"form-title\">TDS Adjustment</span>\r\n                    </div>\r\n\r\n                    <div class=\"row\">\r\n                        <div class=\"col-lg-12 showTooltips\">\r\n                            <div class=\"form-wrapper\" style=\"display: flex;\"> <label style=\"flex:0 0 25%\">A/C : </label>\r\n                                <input id=\"AdditionalCostAc_\" type=\"text\" [(ngModel)]=\"masterService.TDSAccount_Name\"\r\n                                    [ngModelOptions]=\"{standalone: true}\" style=\"width: 100%;flex:0 0 75%;\"\r\n                                    (keydown.Enter)=\"TabTDSAccount()\" autocomplete=\"off\"\r\n                                    placeholder=\"press Enter to select\"\r\n                                    [disabled]=\"_transactionService.TrnMainObj.Mode=='VIEW'\">\r\n                            </div>\r\n\r\n                            <ng-container *ngIf=\"_transactionService.userSetting.ENABLESUBLEDGER==1 && masterService.RefObj.PURCHASE_TYPE!==  'LOCALPURCHASE'\">\r\n                                <div style=\"position: absolute; white-space: nowrap;top: -64px;\">\r\n                                    <!-- <label style=\"flex:0 0 35%\">Sub-ledger \r\n                                    </label> -->\r\n    \r\n                                    <!-- <input  autocomplete=\"off\" id=\"Ac_Sub_ledger\" \r\n                                    style=\"height:23px;width: 100%;display:none;\" (keyup.Enter)=\"onsubLedgerTabAc(i)\" \r\n                                    [(ngModel)]=\"masterService.TDS_SL_ACNAME\" [ngModelOptions]=\"{standalone: true}\"\r\n                                    placeholder=\"press ENTER to Select\"  \r\n                                   \r\n                                     /> -->\r\n                                     <div class=\"tooltips\">\r\n                                        \r\n                                      <p *ngIf=\"masterService.TDSAccount_Name && masterService.TDS_SL_ACNAME\">Sub Ledger :</p>\r\n                                      <p class=\"subledgerSelected\">{{masterService.TDS_SL_ACNAME}}</p>\r\n                                     </div>\r\n                                  </div>\r\n    \r\n                            </ng-container>\r\n                        </div>\r\n                        <div class=\"col-lg-12\">\r\n                            <div class=\"form-wrapper\" style=\"display: flex;\"> <label style=\"flex:0 0 27%;margin-left: 0px;\">Amount :\r\n                                </label>\r\n                                <input type=\"number\" style=\"flex:0 0 55%; width: 100%;\"\r\n                                    [(ngModel)]=\"masterService.TDSAmount\" [ngModelOptions]=\"{standalone: true}\"\r\n                                    [disabled]=\"_transactionService.TrnMainObj.Mode=='VIEW' || !masterService.TDSAccount_ACID\">\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                    </div>\r\n\r\n\r\n                </div>\r\n\r\n                                    <div *ngIf=\"masterService.RefObj.PURCHASE_TYPE==  'LOCALPURCHASE'\">\r\n                                        <div class=\"row\">\r\n                                            <div class=\"col-lg-12\">\r\n                                                <div class=\"col-lg-4\">\r\n                                                    <label style=\"flex:0 0 60%;margin-left: 0px;width: 130px !important;\">Group Costing Mode</label>\r\n                                                </div>\r\n                                                <div class=\"col-lg-8\">\r\n                                                    <select class=\"form-control\" style=\"height: 25px;font-size: 12px;\" name=\"ACNAME\" [(ngModel)]=\"GcostMode\"\r\n                                                    [ngModelOptions]=\"{standalone:true}\" (change)=\"byQuantity($event.target.value)\"\r\n                                                    [disabled]=\"_transactionService.TrnMainObj.Mode=='VIEW' || PI == true\" (keydown.Enter)=\"gcostEntered()\">\r\n                                                    <option value=\"\"></option>\r\n                                                    <option value=\"Qty\">ON QTY</option>\r\n                                                    <option value=\"Amount\">ON AMOUNT</option>\r\n                                                </select>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                \r\n\r\n\r\n\r\n\r\n            </div>\r\n        </div>\r\n        <div class=\"col-lg-1\" style=\"margin-top: -10px;width: 10%;\">\r\n            <!-- <div class=\"row\">\r\n             <div  style=\"border: 1px solid #ddd; padding: 20px 10px 10px 10px;     margin: 0px 10px;\">\r\n               \r\n                     <div class=\"title-wrapper\" style=\"width: 158px;\">\r\n                  <span class=\"form-title\">Group Costing Mode</span>\r\n             </div>\r\n                \r\n                <div class=\"row\">\r\n                    <div class=\"col-lg-12\">\r\n                     \r\n                        <select class=\"form-control col-md-1\" name=\"ACNAME\"  [(ngModel)]=\"GcostMode\" [ngModelOptions]=\"{standalone:true}\"\r\n                        (change)=\"byQuantity($event.target.value)\"\r\n                        [disabled]=\"_transactionService.TrnMainObj.Mode=='VIEW' || PI == true\" (keydown.Enter)=\"gcostEntered()\">\r\n                        <option value=\"\"></option>\r\n                        <option value=\"Qty\">ON QTY</option>\r\n                        <option value=\"Amount\">ON AMOUNT</option>\r\n\r\n                    </select>\r\n                        </div>\r\n                    </div>\r\n                   \r\n                    \r\n                </div> \r\n                \r\n            \r\n            </div> -->\r\n\r\n            <div class=\"row\">\r\n                    <fieldset style=\"margin-right: 15px !important;\">\r\n                        <legend style=\"font-size: 14px;\">Costing Mode:</legend>\r\n                        <div class=\"row\">\r\n                            <div class=\"col-lg-12\">\r\n                                <label class=\"smallBoldLabel\"><input type=\"radio\" name=\"addcosting\" value=\"COSTING\"\r\n                                        [disabled]=\"_transactionService.TrnMainObj.Mode=='VIEW'\" [(ngModel)]=\"masterService.addcosting\"\r\n                                        [ngModelOptions]=\"{standalone:true}\" checked>&nbsp;Costing</label>\r\n                                <label class=\"smallBoldLabel\" style=\"width: 100px;\"><input type=\"radio\" name=\"addcosting\"\r\n                                        value=\"NONCOSTING\" [disabled]=\"_transactionService.TrnMainObj.Mode=='VIEW'\"\r\n                                        [(ngModel)]=\"masterService.addcosting\"\r\n                                        [ngModelOptions]=\"{standalone:true}\">&nbsp;Non-Costing</label>\r\n\r\n                            </div>\r\n                            </div>\r\n\r\n                    </fieldset>\r\n                    <ng-container>\r\n                        <div class=\"check-box\" *ngIf=\"masterService.RefObj.PURCHASE_TYPE!==  'LOCALPURCHASE'\">\r\n                            <input type=\"checkbox\" id=\"isecaitem\" name=\"acposting\"\r\n                                (change)=\"ChangeECA_ITEM($event.target.checked)\"\r\n                                [checked]=\"masterService.IS_ECA_ITEM== 1\"\r\n                                [disabled]=\"_transactionService.TrnMainObj.Mode=='VIEW'\">\r\n                            <label for=\"isecaitem\" style=\"width: 70%; white-space: nowrap;\">Is Import Document Item</label>\r\n                        </div>\r\n                    </ng-container>\r\n        </div>\r\n\r\n          \r\n\r\n\r\n\r\n        </div>\r\n\r\n        <div class=\"col-lg-1\">\r\n            <div class=\"row\">\r\n                <div  class=\"checkboxWrapper\" style=\" margin-top: 0px;\" *ngIf=\"masterService.RefObj.PURCHASE_TYPE!==  'LOCALPURCHASE'\">\r\n                    <div class=\"check-box\">\r\n                        <input type=\"checkbox\" id=\"taxable\" name=\"taxable\"\r\n                            (change)=\"ChangeIsTaxableBill($event.target.checked)\"\r\n                            [checked]=\"masterService.IsTaxableBill== 1\"\r\n                            [disabled]=\"_transactionService.TrnMainObj.Mode=='VIEW'\">\r\n                        <label for=\"taxable\" style=\"width: 70%; white-space: nowrap;\"> Is Taxable Additional\r\n                            Bill</label><br>\r\n                    </div>\r\n                    <div class=\"check-box\">\r\n                        <input type=\"checkbox\" id=\"accountposting\" name=\"acposting\"\r\n                            (change)=\"$event.target.checked?(masterService.DoAccountPosting=1):(masterService.DoAccountPosting=0)\"\r\n                            [checked]=\"masterService.DoAccountPosting== 1\"\r\n                            [disabled]=\"_transactionService.TrnMainObj.Mode=='VIEW'\">\r\n                        <label for=\"accountposting\" style=\"width: 70%; white-space: nowrap;\"> Do Account\r\n                            Posting</label><br>\r\n\r\n                    </div>\r\n                    <div *ngIf=\"_transactionService.userSetting.DoReverseJournalEntry==1\"  class=\"check-box\">\r\n                        <input type=\"checkbox\" id=\"DoReverseJournalEntry\" name=\"assetstrack\"\r\n                            (change)=\"ChangeReverseJournal($event)\"\r\n                            [checked]=\"masterService.DoReverseJournalEntry== 1\"\r\n                            [disabled]=\"_transactionService.TrnMainObj.Mode=='VIEW'\">\r\n                        <label for=\"assetstrack\" style=\"width: 70%; white-space: nowrap;\" [title]=\"masterService.DoReverseJournalEntry== 1?masterService.ReverseJournalACNAME:''\"> Do Reverse Journal Entry</label><br>\r\n\r\n                    </div>\r\n\r\n\r\n                </div>\r\n                <div>\r\n                    <button style=\"width: 65px;margin-top: 2px;float: right;\" class=\"btn btn-info btn-add-focus\"\r\n                        (click)=\"onAddClick()\" *ngIf=\"_transactionService.TrnMainObj.Mode!='VIEW'\">Add</button>\r\n                </div>\r\n    \r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n</form>\r\n\r\n<div class=\"tableCOntent\" style=\"margin-top: 7px;\">\r\n    <div class=\"row\" style=\"width: 105%;\">\r\n\r\n        <div class=\"wrapper\">\r\n            <div style=\"margin-left:0px; margin-right:0px;\">\r\n\r\n\r\n                <div #prodlistTable >\r\n                    <table id=\"fix\" class=\"table\" style=\"width:99% !important\">\r\n                        <thead>\r\n                            <tr style=\"border-bottom: 10px solid #c0c0c0;\r\n                                                                                                    border-top: 2px solid #c0c0c0;\r\n                                                                                                    height: 30px;\r\n                                                                                                    background: silver;\r\n                                                                                                    color: black;\r\n                                                                                                    position: sticky;\">\r\n                                 <th style=\"width: 2%;text-align: center;\">S.N\r\n                                </th>\r\n                                <th  style=\"width: 5%;\" *ngIf=\"masterService.RefObj.PURCHASE_TYPE!==  'LOCALPURCHASE'\">Ref Bill No\r\n                                </th>\r\n                                <th *ngIf=\"masterService.RefObj.PURCHASE_TYPE!==  'LOCALPURCHASE'\" style=\"width: 6%;text-align: center;\">Date\r\n                                </th>\r\n                               \r\n                                <th  style=\"width: 10%;text-align: center;\">Dr Account\r\n                                </th>\r\n                                <th *ngIf=\"masterService.RefObj.PURCHASE_TYPE!==  'LOCALPURCHASE'\" style=\"width: 7%;\">Description\r\n                                </th>\r\n                                <th  style=\"width: 5%;text-align: center;\">Amount\r\n                                </th>\r\n                                <th  style=\"width: 6%;\" *ngIf=\"masterService.RefObj.PURCHASE_TYPE!==  'LOCALPURCHASE'\">VAT\r\n                                </th>\r\n                                <th *ngIf=\"masterService.RefObj.PURCHASE_TYPE!==  'LOCALPURCHASE'\" style=\"width: 6%;\">Remarks\r\n                                </th>\r\n                                <th *ngIf=\"masterService.RefObj.PURCHASE_TYPE!==  'LOCALPURCHASE'\" style=\"width: 8%;\">Cr Account\r\n                                </th>\r\n                                <th  style=\"width: 6%;\" *ngIf=\"masterService.RefObj.PURCHASE_TYPE!==  'LOCALPURCHASE'\">TDS Amount\r\n                                </th>\r\n                                <th *ngIf=\"masterService.RefObj.PURCHASE_TYPE!==  'LOCALPURCHASE'\" style=\"width: 6%;\">TDS A/C\r\n                                </th>\r\n                                <th *ngIf=\"masterService.RefObj.PURCHASE_TYPE!==  'LOCALPURCHASE'\" style=\"width:9%;\">Supplier Name\r\n                                </th>\r\n                                <th  *ngIf=\"masterService.RefObj.PURCHASE_TYPE!==  'LOCALPURCHASE'\" style=\"width: 6%;\">AC Posting\r\n                                </th>\r\n                                <th *ngIf=\"masterService.RefObj.PURCHASE_TYPE!==  'LOCALPURCHASE'\" style=\"width: 8%;\">Taxable Add Bill\r\n                                </th>\r\n                                <th  style=\"width: 6%;\">Cost Mode\r\n                                </th>\r\n                                <th  style=\"width: 4%;\">Costing\r\n                                </th>\r\n                                <th style=\"width: 7%;\">Imp Doc Item\r\n                            </th>\r\n                            </tr>\r\n                        </thead>\r\n\r\n                        <tbody style=\"background-color: #e9e9e9;\"  [ngClass]=\"masterService.ShowMore?'ExpandTable':''\">\r\n                            <tr *ngFor=\"let l of _addionalcostService.GRPcostList;let i=index\"\r\n                                (dblclick)=\"TableRowDoubleClickEvent(l)\" (click)=\"checkRow(i)\">\r\n                                <td class=\"tableBorder\" style=\"width: 2%;text-align: center;\">{{i+1}}</td>\r\n                                <td class=\"tableBorder\" style=\"width: 5%;\" *ngIf=\"masterService.RefObj.PURCHASE_TYPE!==  'LOCALPURCHASE'\">{{l.Ref_BILLNO}}</td>\r\n                                <td *ngIf=\"masterService.RefObj.PURCHASE_TYPE!==  'LOCALPURCHASE'\"  class=\"tableBorder\" style=\"width:6%\">{{l.Ref_TRNDATE}}</td>\r\n\r\n                               \r\n                                <td class=\"tableBorder\" style=\"width:10%\">{{l.costAc.ACNAME}}\r\n                                    <div class=\"tooltips\">\r\n                                        <p *ngIf=\"l.DR_SL_ACNAME\">Sub Ledger :</p>\r\n                                        <p>{{l.DR_SL_ACNAME}}</p>\r\n                                     </div>\r\n                                </td>\r\n                                <td *ngIf=\"masterService.RefObj.PURCHASE_TYPE!==  'LOCALPURCHASE'\" class=\"tableBorder\"style=\"width: 7%;\">{{l.AdditionalDesc}}</td>\r\n                                <td class=\"tableBorder\" style=\"width: 5%;text-align: right;\">{{l.amount}}</td>\r\n                                <td class=\"tableBorder\" style=\"width: 6%;text-align: right;\" *ngIf=\"masterService.RefObj.PURCHASE_TYPE!==  'LOCALPURCHASE'\">{{l.AdditionalVAT}}</td>\r\n                                <td *ngIf=\"masterService.RefObj.PURCHASE_TYPE!==  'LOCALPURCHASE'\"  class=\"tableBorder\" style=\"width: 6%;\">{{l.remarks}}</td>\r\n                                <td *ngIf=\"masterService.RefObj.PURCHASE_TYPE!==  'LOCALPURCHASE'\"  class=\"tableBorder\" style=\"width: 8%;\">{{l.creditAc.ACNAME}}\r\n                                    <div class=\"tooltips\">\r\n                                        <p *ngIf=\"l.CR_SL_ACNAME\">Sub Ledger :</p>\r\n                                        <p>{{l.CR_SL_ACNAME}}</p>\r\n                                     </div>\r\n                                </td>\r\n                                <td *ngIf=\"masterService.RefObj.PURCHASE_TYPE!==  'LOCALPURCHASE'\"  class=\"tableBorder\" style=\"width: 6%;text-align: right;\">{{l.TDSAmount | twoDigitNumber}}</td>\r\n                                <td *ngIf=\"masterService.RefObj.PURCHASE_TYPE!==  'LOCALPURCHASE'\" class=\"tableBorder\" style=\"width: 6%;\">{{l.TDSAccount_Name}}\r\n                                    <div class=\"tooltips\">\r\n                                        <p *ngIf=\"l.TDS_SL_ACNAME\">Sub Ledger :</p>\r\n                                        <p>{{l.TDS_SL_ACNAME}}</p>\r\n                                     </div>\r\n                                </td>\r\n                                <td *ngIf=\"masterService.RefObj.PURCHASE_TYPE!==  'LOCALPURCHASE'\"  class=\"tableBorder\" style=\"width: 9%;\">{{l.Ref_SupplierName}}</td>\r\n                                <td *ngIf=\"masterService.RefObj.PURCHASE_TYPE!==  'LOCALPURCHASE'\" class=\"tableBorder\" style=\"width: 6%;\">{{l.DoAccountPosting}}</td>\r\n                                <td *ngIf=\"masterService.RefObj.PURCHASE_TYPE!==  'LOCALPURCHASE'\" class=\"tableBorder\" style=\"width: 8%;\">{{l.IsTaxableBill}}</td>\r\n                                <!-- <td class=\"tableBorder\" style=\"width:50px\">{{l.CostingType}}</td> -->\r\n                                <td class=\"tableBorder\" style=\"width: 6%;\">{{l.GCOSTMODE}}</td>\r\n                                <!-- <td class=\"tableBorder\" style=\"width:50px\">{{l.desca}}</td> -->\r\n                                <td class=\"tableBorder\" style=\"width: 5%;\">{{l.CostingNonCosting}}</td>\r\n                                <!-- <td class=\"tableBorder\" style=\"width:50px\">{{l.batch}}</td> -->\r\n                                <td class=\"tableBorder\" style=\"width: 6%;\">{{l.IS_ECA_ITEM}}</td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n\r\n<div class=\"sticky-bottom\" style=\"background: gray;width: 98%\">\r\n    <div class=\"row\">\r\n        <div class=\"col-md-3\" style=\"text-align: end;\">\r\n            <label style=\"font-weight: bold;font-size: 14px; width: 100%;\">Non Taxable: {{this._addionalcostService.addGRPCostNonTaxableTotalAmount|\r\n                number}}</label>            \r\n        </div>\r\n        <div class=\"col-md-3\" style=\"text-align: end;\">\r\n            <label style=\"font-weight: bold;font-size: 14px; width: 100%\">Taxable: {{this._addionalcostService.addGRPCostTaxableTotalAmount|\r\n                number}}</label>\r\n        </div>\r\n        <div class=\"col-md-3\" style=\"text-align: end;\">\r\n            <label style=\"font-weight: bold;font-size: 14px; width: 100%\">VAT: {{this._addionalcostService.addGRPCostTotalVat|\r\n                number}} </label>\r\n        </div>\r\n        <div class=\"col-md-3\" style=\"text-align: end;\">\r\n            <label\r\n                style=\"font-size: 14px; font-weight: bold; width: 90%\">Net Amount: {{this._addionalcostService.addGRPCostTotalNetAmount|\r\n                number}} </label>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"modal-sticky\" *ngIf=\"masterService.showCostPopup\" style=\"display : block; padding: 0px;  margin-bottom: 25px;\r\nposition: absolute;right: 30%;top: 5px;width: 700px;z-index: 9999999;background-color: white;height: 290px;\">\r\n    <div style=\"padding: 0px;background: #f1f1f1;\">\r\n        <h4 style=\"text-align: center;background-color: #8cccfb; padding: 3px 0;\">\r\n            Local Purchase Cost Allocation Details\r\n        </h4>\r\n    </div>\r\n    <table style=\"width:98%;height:0px;margin-left: 7px;overflow-y: scroll;\">\r\n        <thead>\r\n            <tr\r\n            style=\"background-color:#8cccfb;    font-size: 13px; position: sticky;top: -1px;font-weight: bolder;height: 25px;\">\r\n            <!-- <th style=\"width: 3%\"></th> -->\r\n            <th style=\"width: 20%;text-align: center;\">Ref No</th>\r\n            <th style=\"width: 52%;text-align: center;\">ACNAME</th>\r\n            <th style=\"width: 15%;text-align: center;\">Amount</th>\r\n            <th style=\"width: 20%;text-align: center;\">PI Voucherno</th>\r\n        </tr>\r\n        </thead>\r\n\r\n        <tbody class=\"tablebody\">\r\n            <!-- <tr>\r\n                    <td style=\"text-align: center;width: 3%\"><input type=\"checkbox\" [(ngModel)]=\"ALLCHECKBOX\" \r\n                        (change)=\"selectAllCheckboxes()\">\r\n                    </td>\r\n                    <td colspan=\"4\">Select All</td>\r\n            </tr> -->\r\n            <tr style=\"font-size: 12px;\" *ngFor=\"let i of masterService.pi_costdetaillist; let index = index\" >\r\n                <!-- <td style=\"text-align: center;width: 3%\"><input type=\"checkbox\" [(ngModel)]=\"i.checkbox\">\r\n                </td> -->\r\n                <td style=\"width: 20%;padding-left: 3px;\">{{i.CAPITALPURCHASE_VCHRNO}}</td>\r\n                <td style=\"width: 52%;padding-left: 3px;\">{{i.ACNAME}}</td>\r\n                <td style=\"width: 15%;text-align: right;padding-right: 3px;\">{{i.AMOUNT| twoDigitNumber}}</td>\r\n                <td style=\"width: 20%;padding-left: 3px;\">{{i.VCHRNO}}</td>\r\n            </tr>\r\n        </tbody>\r\n    </table>\r\n    <div style=\"margin-top: 1%;\">\r\n        <!-- <button class=\"btn btn-sm btn-info pull-right\" style=\"margin-left: 1%;margin-right: 1%;\"(click)=\"cancel()\">Cancel</button> -->\r\n        <button class=\"btn btn-sm btn-info pull-right\" style=\"margin-right: 1%;\" (click)=\"ok()\">Load</button>\r\n    </div>\r\n</div>\r\n\r\n<generic-popup-grid #gridSubLedgerSettingListCr [popupsettings]=\"gridSubLedgerSettingCr\"\r\n  (onItemDoubleClick)=\"onSubLedgerSelectCr($event)\"></generic-popup-grid>\r\n  <generic-popup-grid #gridSubLedgerSettingListDr [popupsettings]=\"gridSubLedgerSettingDr\"\r\n  (onItemDoubleClick)=\"onSubLedgerSelectDr($event)\"></generic-popup-grid>\r\n  <generic-popup-grid #gridSubLedgerSettingListAc [popupsettings]=\"gridSubLedgerSettingAc\"\r\n  (onItemDoubleClick)=\"onSubLedgerSelectAc($event)\"></generic-popup-grid>\r\n\r\n\r\n<generic-popup-grid #genericGridACParty [popupsettings]=\"gridACListPartyPopupSettings\"\r\n    (onItemDoubleClick)=\"ACNameSelect_Additional($event)\"></generic-popup-grid>\r\n\r\n<generic-popup-grid #genericGridCreditACListParty [popupsettings]=\"gridCreditACListPartyPopupSettings\"\r\n    (onItemDoubleClick)=\"ACNameSelect_Credit($event)\"></generic-popup-grid>\r\n\r\n<generic-popup-grid #genericGridItem [popupsettings]=\"gridItemPopupSettings\"\r\n    (onItemDoubleClick)=\"dblClickItemSelection($event)\"></generic-popup-grid>\r\n\r\n<generic-popup-grid #genericGridBatch [popupsettings]=\"gridBatchPopupSettings\"\r\n    (onItemDoubleClick)=\"dblClickBatchSelection($event)\"></generic-popup-grid>\r\n\r\n<!-- <generic-popup-grid #genericGridRefBill [popupsettings]=\"gridPopupSettingsForRefBill\"\r\n  (onItemDoubleClick)=\"onRefBillSelected($event)\"></generic-popup-grid> -->\r\n\r\n<generic-popup-grid #genericGridACList [popupsettings]=\"gridACListPopupSettings\"\r\n    (onItemDoubleClick)=\"onAcSelect($event)\"></generic-popup-grid>\r\n\r\n<generic-popup-grid #genericGridSupplier [popupsettings]=\"gridPopupSettingsForSupplier\"\r\n    (onItemDoubleClick)=\"onSupplierSelected($event)\"></generic-popup-grid>\r\n\r\n    <generic-popup-grid #genericGridACPartyReverseJournal [popupsettings]=\"genericGridACPartyForReverseJournal\"\r\n    (onItemDoubleClick)=\"ACNameSelectForReverseJournal($event)\" (onPopUpClose)=\"resetReverseJournalEntry()\"></generic-popup-grid>"

/***/ }),

/***/ 1344:
/***/ (function(module, exports) {

module.exports = "<style>\r\nth{\r\n        padding: 0px 5px;\r\n        font-family:  Roboto, Arial, sans-serif;\r\n        font-size: 13px;\r\n    }\r\n\r\n    td{\r\n        font-size: 12px;\r\n    }\r\n  \r\n</style>\r\n\r\n<form>\r\n    <div class=\"row\">\r\n\r\n        <!--<div class=\"content \">\r\n            <div class=\"col col-md-9 left\">-->\r\n\r\n        <div class=\"wrapper\">\r\n            <div style=\"margin-left:0px; margin-right:0px;\">\r\n                <!--<div class=\"col-md-9 plainBackGround \" style=\"min-height: 300px;height:300px\">-->\r\n                    <!-- style=\"background-color: #FFFFFF; overflow-x:scroll;overflow-x: scroll; display: block; position: relative;height: 54vh;\"> -->\r\n                <div #prodlistTable id=\"prodlistTable\" \r\n                style=\"overflow-x:scroll; overflow-y: scroll; display: block; position: relative; height: 59vh;\">\r\n                    <table id=\"fix\" class=\"table\" style=\"width:1500px;\">\r\n                        <thead>\r\n                            <tr style=\"border-bottom: 10px solid #c0c0c0;\r\n                            border-top: 2px solid #c0c0c0;\r\n                            height: 30px;\r\n                            background: silver;\r\n                            color: black;\r\n                            position: sticky;\">\r\n                                <th *ngFor=\"let head of _addionalcostService.header\" [style.text-align]=\"head['Alignment']\">{{head.TITLE}}\r\n                                  \r\n                                </th>\r\n                                <!--<th>Total\r\n                                  \r\n                                </th>\r\n                                <th>Cost Per Unit\r\n\r\n                                </th>\r\n                                <th *ngFor=\"let head of _additionalCostService.addtionalCostList\" style=\"width:5%\"></th> -->\r\n\r\n                            </tr>\r\n                        </thead>\r\n                        <!-- <tfoot>\r\n                            <tr>\r\n                                <td *ngFor=\"let head of source.footer\">\r\n\r\n                                </td>\r\n                               \r\n                            </tr>\r\n                        </tfoot> -->\r\n                        <tbody style=\"background-color: #e9e9e9;\">\r\n                            <!-- <ng-container *ngFor=\"let l of _addionalcostService.costList;let i=index\" > -->\r\n                                <!-- <ng-container *ngFor=\"let l of _addionalcostService.addtionalCostList;let i=index\">  -->\r\n                                    <tr *ngFor=\"let tbody of _additionalCostService.costdetail\" >\r\n                                <td *ngFor=\"let head of _addionalcostService.header\" [style.text-align]=\"head['Alignment']\" class=\"tableBorder\">\r\n                                    <!-- {{tbody[head.MAPPINGNAME]}} -->\r\n                                    <ng-container *ngIf=\"['prate', 'quantity', 'amount', 'grossAmnt'].includes(head.MAPPINGNAME)\">\r\n                                        <!-- Apply currency pipe -->\r\n                                        {{ tbody[head.MAPPINGNAME] | twoDigitNumber }}\r\n                                    </ng-container>\r\n                                    <!-- If not, display the value without formatting -->\r\n                                    <ng-container *ngIf=\"!['prate', 'quantity', 'amount', 'grossAmnt'].includes(head.MAPPINGNAME)\">\r\n                                        {{ tbody[head.MAPPINGNAME] }}\r\n                                    </ng-container>\r\n                                </td>\r\n                    \r\n                            </tr>\r\n\r\n                                 <!-- </ng-container> -->\r\n                            <!-- </ng-container> -->\r\n                            \r\n\r\n                        </tbody>\r\n                        <!-- <ng-container *ngFor=\"let l of _addionalcostService.addtionalCostList;let i=index\">\r\n                                <tbody style=\"background-color: #e9e9e9;\">\r\n                            <tr *ngFor=\"let tbody of _additionalCostService.costdetail\" >\r\n                                 <td *ngFor=\"let head of _addionalcostService.header\" [style.text-align]=\"head['Alignment']\" class=\"tableBorder\">\r\n                                    {{tbody[head.MAPPINGNAME]}}\r\n                                </td>\r\n                                \r\n                            </tr>\r\n                        </tbody>\r\n                        </ng-container> -->\r\n                     \r\n                    </table>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <!--   </div>\r\n            </div>\r\n        </div>-->\r\n\r\n    </div>\r\n\r\n</form>"

/***/ }),

/***/ 1345:
/***/ (function(module, exports) {

module.exports = "<div class=\"sticky-top\">\r\n  <div class=\"clearfix\">\r\n    <div class=\"col-md-1\">\r\n      <voucher-master-toggler></voucher-master-toggler>\r\n    </div>\r\n    <div class=\"col-md-4\">\r\n      <label\r\n        style=\"font-family: Segoe UI Light;font-weight: bold;font-size: 20px;padding-left: 5%;padding-top: 1%;width:auto\">{{ _trnMainService.pageHeading }}</label>\r\n      <label style=\"font-size: 14px;width: 34%;margin-top: 10px;\">&nbsp;>> {{ _trnMainService.TrnMainObj?.Mode | titlecase}}\r\n        Voucher</label>\r\n    </div>\r\n    <div class=\"col-md-7\">\r\n      <account-master-action></account-master-action>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"main-container\" style=\"top:10px !important\">\r\n  <div class=\"clearfix\">\r\n    <!-- <voucher-date-entry style=\"margin-top:-15px;\"></voucher-date-entry> -->\r\n    <trnmain-voucher-entry></trnmain-voucher-entry>\r\n    <div style=\"padding-bottom: 29px;\r\n    margin-top: -20px;\">\r\n    <!-- <div *ngIf = \"_trnMainService.userSetting.ENABLELOCALPURCHASE == 1\" class=\"col-md-3\" style=\"padding-left: 1px;\">\r\n      <label style=\"margin-left: 20px;width: 100px;\">Purchase Type : </label>\r\n      <select style=\"padding: 0px !important;width: 50%;margin-top:0px; margin-left: 0%;\" [(ngModel)]=\"masterService.RefObj.PURCHASE_TYPE\" [disabled]=\"_trnMainService.TrnMainObj.Mode=='EDIT' || _trnMainService.TrnMainObj.Mode=='VIEW'\"\r\n        (change)=\"changePurchaseType()\">\r\n        <option value=\"IMPORTPURCHASE\">Import Purchase</option>\r\n        <option value=\"LOCALPURCHASE\">Local Purchase</option>\r\n      </select>\r\n    </div> -->\r\n     <div class=\"col-md-3\" style=\"padding-left: 1px;\">\r\n      <label style=\"margin-left: 20px;\">Ref PI NO : </label>\r\n      <input id =\"REFPINO_AD\" type=\"test\" width=\"200px\" style=\"width: 60%;\" placeholder=\"Press Enter or Tab\"\r\n        (keydown.Tab)=\"TabRefBill()\" (keydown.Enter)=\"TabRefBill()\" [(ngModel)]='masterService.RefObj.Refno' \r\n        (keydown)=\"keyPress($event)\" autocomplete=\"off\"\r\n        [disabled]=\"_trnMainService.TrnMainObj.Mode=='EDIT' || _trnMainService.TrnMainObj.Mode=='VIEW' || isDragging\" >\r\n      </div>\r\n   \r\n      <div class=\"col-md-3\" style=\"padding-left: 0px;\">\r\n        <label style=\"margin-left: 11px;\">Invoice No : </label>\r\n      <input type=\"test\" width=\"200px\" style=\"width: 57%;\" \r\n        (keydown.Tab)=\"TabRefBill()\" (keydown.Enter)=\"TabRefBill()\" [(ngModel)]='masterService.RefObj.InvoiceNo'\r\n        readonly disabled>\r\n      </div>\r\n\r\n       <div class=\"col-md-3\" style=\"padding-left: 0px;\">\r\n        <label style=\"margin-left: -30px;\">Supplier Name:</label>\r\n      <input type=\"test\" width=\"200px\" style=\"margin-left: 25px;width: 53%;\" \r\n        (keydown.Tab)=\"TabRefBill()\" (keydown.Enter)=\"TabRefBill()\" [(ngModel)]='masterService.RefObj.SupplierName' readonly disabled>\r\n      </div>\r\n     <div class=\"col-md-3\" style=\"padding-left: 0px;\">\r\n        <label style=\"margin-left: -30px; width: auto !important;\">{{masterService.voucherNature}}</label>\r\n     \r\n      </div>\r\n      </div>\r\n    \r\n       \r\n    \r\n  </div>\r\n  <div class=\"clearfix\" style=\"margin-top: 5px\">\r\n    <ul class=\"nav nav-tabs\" style=\"background-color: #e9e9e9 !important\">\r\n      <li class=\"nav-item\">\r\n        <a class=\"nav-link active\" href=\"#Purchase\" data-toggle=\"tab\" style=\"color:black\">Purchase Detail</a>\r\n      </li>\r\n      <li class=\"nav-item\">\r\n        <a class=\"nav-link\" href=\"#AdditionalCost\" data-toggle=\"tab\" style=\"color:black\">Group Cost</a>\r\n      </li>\r\n      <li class=\"nav-item\">\r\n        <a class=\"nav-link\" href=\"#AdditionalIndividualCost\" data-toggle=\"tab\" style=\"color:black\">Individual Costing</a>\r\n      </li>\r\n      <li class=\"nav-item\">\r\n        <a class=\"nav-link\" href=\"#CostingDetails\" data-toggle=\"tab\" style=\"color:black\">Costing Details</a>\r\n      </li>\r\n\r\n      <!-- <li class=\"nav-item\" *ngIf = \"_trnMainService.userSetting.EnableRateEditInAddCosting == 1\">\r\n        <a class=\"nav-link\" href=\"#ImportDocumentDetails\" data-toggle=\"tab\" style=\"color:black\" (click)=\"ImportDetailsClick()\">Import Document Details</a>\r\n      </li> -->\r\n    </ul>\r\n    <form [formGroup]=\"form\">\r\n      <div class=\"tab-content\">\r\n        <div class=\"tab-pane active\" id=\"Purchase\">\r\n          \r\n            <div class=\"col-md-12 row\" style=\"width: 100%;\">\r\n              <new-purchaseDetail></new-purchaseDetail>\r\n            </div>\r\n          \r\n        </div>\r\n        <div class=\"tab-pane\" id=\"AdditionalCost\">\r\n          <!-- Contact Details -->\r\n          <div class=\"col-md-12 row\" >\r\n            <newadditionalCost></newadditionalCost>\r\n          </div>\r\n        </div>\r\n        <div class=\"tab-pane\" id=\"CostingDetails\">\r\n          <!-- Contact Details -->\r\n          <div class=\"col-md-12 row\">\r\n            <new-costingDetail></new-costingDetail>\r\n          </div>\r\n        </div>\r\n        <div class=\"tab-pane\" id=\"AdditionalIndividualCost\">\r\n          <!-- Contact Details -->\r\n          <div class=\"col-md-12 row\" >\r\n            <newIndividualCost></newIndividualCost>\r\n          </div>\r\n        </div>\r\n        <!-- <div *ngIf = \"_trnMainService.userSetting.EnableRateEditInAddCosting == 1\"   class=\"tab-pane\" id=\"ImportDocumentDetails\">\r\n          <ba-card>\r\n            <div class=\"col-md-12 row\" style=\"width: 100%; height: 23rem;\">\r\n              <ImportDocumentDetailsComponent></ImportDocumentDetailsComponent>\r\n            </div>\r\n          </ba-card>\r\n          \r\n        </div> -->\r\n\r\n      </div>\r\n    </form>\r\n  </div>\r\n</div>\r\n\r\n<generic-popup-grid #genericGridRefBill [popupsettings]=\"gridPopupSettingsForRefBill\"\r\n  (onItemDoubleClick)=\"onRefBillSelected($event)\"></generic-popup-grid>\r\n\r\n"

/***/ }),

/***/ 1346:
/***/ (function(module, exports) {

module.exports = "<style>\r\n    th{\r\n        padding: 0px 5px;\r\n        font-family:  Roboto, Arial, sans-serif;\r\n        font-size: 13px;\r\n    }\r\n\r\n    td{\r\n        font-size: 12px;\r\n    }\r\n\r\n    tbody {\r\n    display:block;\r\n    height:48vh;\r\n    overflow:auto;\r\n}\r\n\r\nthead, tbody tr {\r\n  display:table;\r\n  width:100%;\r\n  table-layout:fixed;/* even columns width , fix width of table too*/\r\n}\r\n</style>\r\n<form>\r\n    <div class=\"row\" style=\"margin-left: -10px; width:104%;\">\r\n\r\n        <!--<div class=\"content \">\r\n            <div class=\"col col-md-9 left\">-->\r\n\r\n        <div class=\"wrapper\">\r\n            <div style=\"margin-left:0px; margin-right:0px;\">\r\n                <!--<div class=\"col-md-9 plainBackGround \" style=\"min-height: 300px;height:300px\">-->\r\n\r\n                <div #prodlistTable id=\"prodlistTable\" style=\"background-color: #FFFFFF;\" style=\"width: 100%;\">\r\n                    <table id=\"fix\" class=\"table\">\r\n                        <thead>\r\n                            <tr style=\"border-bottom: 6px solid #c0c0c0;\r\n                            border-top: 2px solid #c0c0c0;\r\n                            height: 30px;\r\n                            background: silver;\r\n                            color: black;\r\n                            position: sticky;\">\r\n                                <th style=\"width:3%\">S.N\r\n                                   \r\n                                </th>\r\n                                <th style=\"width:6%\">Item Code\r\n                                 \r\n                                </th>\r\n                                <th style=\"width:30%\">Item Description\r\n                                   \r\n                                </th>\r\n\r\n                                <th style=\"width:5%\">Unit\r\n                                  </th>\r\n\r\n                                <th style=\"width:8%\">Batch\r\n                                   \r\n                                </th>\r\n\r\n                                <th style=\"width:8%\">Rate\r\n                                  \r\n                                </th>\r\n                                <th style=\"width:5%\">Qty\r\n                                  \r\n                                </th>\r\n                               \r\n                                <th style=\"width:12%\">Amount\r\n                                  \r\n                                </th>\r\n                                \r\n                                <!-- <th style=\"width:10%\">Net Amount\r\n                                  \r\n                                </th> -->\r\n\r\n                            </tr>\r\n                        </thead>\r\n                       \r\n                        <tbody style=\"background-color: #e9e9e9;\">\r\n                            <tr *ngFor=\"let c of _additionalCostService.addtionalCostList; let i=index\">\r\n                                <td  style=\"width:3%\" class=\"tableBorder\">{{i+1}}</td>\r\n                                <td style=\"width:6%\" class=\"tableBorder\">{{c.menucode}}</td>\r\n                                <td style=\"width:30%\" class=\"tableBorder\">{{c.desca}}</td>\r\n                                <td style=\"width:5%\" class=\"tableBorder\">{{c.unit}}</td>\r\n                                <td style=\"width:8%\" class=\"tableBorder\">{{c.batch}}</td>\r\n                                \r\n                                <td  class=\"tableBorder\" style=\"text-align: right; width: 8%;\">\r\n                                  {{c.prate|twoDigitNumber}}</td>\r\n                                <!-- <td class=\"tableBorder\">{{c.rate|twoDigitNumber}}</td> -->\r\n                                <td class=\"tableBorder\" style=\"text-align: right; width: 5%;\">{{c.quantity}}</td>\r\n                              \r\n                                <td class=\"tableBorder\" style=\"text-align: right; width: 12%;\">{{c.amount|twoDigitNumber}}</td>\r\n                                <!-- <td class=\"tableBorder\">{{c.nAmount|twoDigitNumber}}</td> -->\r\n                            </tr>\r\n\r\n                        </tbody>\r\n                        <!-- <tfoot>\r\n                            <tr>\r\n                                <td colspan=\"5\">\r\n\r\n                                </td>\r\n                                <td>\r\n                                    <div class=\"c3\">\r\n                                        Total Balance :\r\n                                    </div>\r\n                                </td>\r\n                               \r\n                                <td>\r\n                                    <div class=\"c3\" style=\"margin-left:1px\">\r\n                                        {{_additionalCostService.loadedTrnmain.TOTAMNT|twoDigitNumber}}\r\n                                    </div>\r\n                                </td>\r\n                                \r\n                                <td>\r\n                                    <div class=\"c3\" style=\"margin-left:1px\">\r\n                                        {{_additionalCostService.loadedTrnmain.NETWITHOUTROUNDOFF|twoDigitNumber}}\r\n                                    </div>\r\n                                </td>\r\n                            </tr>\r\n                        </tfoot> -->\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <!--   </div>\r\n            </div>\r\n        </div>-->\r\n\r\n    </div>\r\n\r\n</form>\r\n\r\n<div class=\"sticky-bottom\" style=\"background: gray;\">\r\n    <div class=\"row\" >\r\n      <div class=\"col-md-6\">\r\n        &nbsp;\r\n      </div>\r\n      <div class=\"col-md-4\" style=\"text-align: end;\">\r\n        <label style=\"font-weight: bold;font-size: 16px; width: 125px;\">Total Balance</label>\r\n      </div>\r\n      <div class=\"col-md-2\" style=\"text-align: end;\">\r\n        <label style=\"font-size: 15px; font-weight: bold; margin-right: 2rem; \">{{_additionalCostService.loadedTrnmain.TOTAMNT|twoDigitNumber}}</label>\r\n      </div>\r\n    </div>\r\n  </div>\r\n"

/***/ }),

/***/ 1347:
/***/ (function(module, exports) {

module.exports = "<style>\r\n  .table tr th {\r\n    text-align: center;\r\n    vertical-align: middle;\r\n  }\r\n</style>\r\n\r\n<div class=\"sticky-top\" *ngIf=\"!_trnMainService.TrnMainObj.hasShipName\">\r\n  <div class=\"row clearfix\">\r\n    <div class=\"col-md-2\">\r\n      <voucher-master-toggler></voucher-master-toggler>\r\n    </div>\r\n    <div class=\"col-md-2\">\r\n      <h2 style=\"color: black;\">{{ _trnMainService.pageHeading }}</h2>\r\n    </div>\r\n    <div class=\"col-md-8\">\r\n      <voucher-master-action \r\n      (onLoadFromHoTaxInvoiceClickEmit)=\"showSupplierSalesInvoiceFromHOPopup($event)\"\r\n      (onLoadFromSAPFTPClickEmit)=\"showSAPPurchaseInvoice($event)\"\r\n      (onPInvoieFileUploadPopupEmit)=\"showPurchaseInvoicePopup($event)\"\r\n      >\r\n    </voucher-master-action>\r\n      <generic-popup-grid #genericHOSalesInvoiceGridTI [popupsettings]=\"gridHoSalesInvoicePopupSettings\"\r\n        (onItemDoubleClick)=\"onHoSalesInvoiceSelect($event)\"></generic-popup-grid>\r\n\r\n      <generic-popup-grid #genericsGridSAPPI [popupsettings]=\"gridSAPPIPopupSettings\"\r\n        (onItemDoubleClick)=\"onSAPPurchaseInvoiceSelect($event)\">\r\n      </generic-popup-grid>\r\n    </div>\r\n  </div>\r\n</div>\r\n<div class=\"main-container row clearfix\" *ngIf=\"!_trnMainService.TrnMainObj.hasShipName\">\r\n  <trnmain-purchase-entry></trnmain-purchase-entry>\r\n  <!-- <div *ngIf=\"masterService.ShowMore == false\" class=\"row clearfix\">\r\n  </div> -->\r\n  <div class=\"row\" style=\"margin-top: 5px\">\r\n    <div class=\"col-md-12\">\r\n      <productentry></productentry>\r\n    </div>\r\n  </div>\r\n</div>\r\n<div class=\"sticky-bottom\" *ngIf=\"!_trnMainService.TrnMainObj.hasShipName\">\r\n  <voucher-total-area></voucher-total-area>\r\n</div>\r\n\r\n\r\n\r\n\r\n<div *ngIf=\"_trnMainService.TrnMainObj.hasShipName\">\r\n\r\n  <div style=\"display : block; padding: 0px;left: 10px;\r\n  padding: 0px;\r\n  top: 101px;\r\n  width: 99%;\">\r\n    <!-- Modal content -->\r\n    <div>\r\n      <div>\r\n        <div>\r\n          <div style=\"padding: 0px;background: #ecad79;\">\r\n            <div class=\"col-md-3\">\r\n              <h3>Sales Invoice</h3>\r\n            </div>\r\n            <div class=\"col-md-3\">\r\n              <h3>\r\n                Ship To:-{{_trnMainService.TrnMainObj.AdditionalObj.SHIPNAMEVIEW}}\r\n              </h3>\r\n            </div>\r\n            <div class=\"col-md-3\">\r\n              <button class=\"btn btn-info\" (click)=\"saveTaxInvoice()\">Save</button>\r\n              <button class=\"btn btn-info\" (click)=\"popupClose()\">Cancel</button>\r\n            </div>\r\n\r\n\r\n\r\n\r\n          </div>\r\n          <div>\r\n\r\n            <div style=\"background-color: #FFFFFF;height:450px;overflow-x: scroll;width: 100%\">\r\n              <table class=\"table\" style=\"margin-bottom: 5px; font-size: 12.5px;width: 2000px;overflow: scroll\">\r\n                <tr style=\"border-bottom: 2px solid #E6E6E6; border-top: 2px solid #E6E6E6;    height: 30px;\r\n                                      background: silver;\r\n                                      color: black;\">\r\n                  <th>S.No.</th>\r\n                  <th>Code</th>\r\n                  <th>Description</th>\r\n                  <th>BatchNo\r\n                  </th>\r\n                  <th>Mfg Dt\r\n                  </th>\r\n                  <th>Exp Dt\r\n                  </th>\r\n                  <th>Qty</th>\r\n                  <th>Packing</th>\r\n                  <th>MRP</th>\r\n                  <th>Cost Price</th>\r\n                  <th>Selling Price</th>\r\n                  <th>Disc %</th>\r\n                  <th>Disc Amt</th>\r\n                  <th>GST%</th>\r\n                  <th>GST TaxAmt</th>\r\n                  <th>P Dis.</th>\r\n                  <th>S Dis.</th>\r\n                  <th>L Dis.</th>\r\n                  <th>OS Dis.</th>\r\n\r\n                  <th>Net Amnt</th>\r\n                  <th>Remarks</th>\r\n                </tr>\r\n                <tbody *ngFor=\"let tList of _trnMainService.TrnMainObj.ProdList;let i=index\" style=\"border: 1px\">\r\n                  <tr style=\"border: 1px solid #e6e6e6;max-height:25px;\">\r\n                    <td id=\"sno{{i}}\" style=\"border: 1px solid #e6e6e6;width:20px;\">{{i+1}}</td>\r\n\r\n                    <td style=\"height:23px;border: 1px solid #e6e6e6;width:80px\">\r\n                      {{tList.MENUCODE}}\r\n                    </td>\r\n\r\n                    <td style=\"border: 1px solid #e6e6e6;width:300px;background-color: #f9f9f9;\">\r\n                      {{tList.ITEMDESC}}\r\n                    </td>\r\n                    <td style=\"border: 1px solid #e6e6e6;width:300px;background-color: #f9f9f9;\">\r\n                      {{tList.BATCH}}\r\n                    </td>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                    <td style=\"height:23px;border: 1px solid #e6e6e6;width:150px\">{{tList.MFGDATE | date: 'dd-MM-yyyy'}}\r\n                    </td>\r\n\r\n                    <td style=\"height:23px;border: 1px solid #e6e6e6;width:150px\">{{tList.EXPDATE | date: 'dd-MM-yyyy'}}\r\n                    </td>\r\n                    <td style=\"border: 1px solid #e6e6e6;width:300px;background-color: #f9f9f9;\">\r\n                      {{_trnMainService.TrnMainObj.TOTALQTY}}\r\n                    </td>\r\n\r\n                    <td style=\"height:23px;border: 1px solid #e6e6e6;width:100px\">\r\n                      {{tList.ALTUNIT}}\r\n                    </td>\r\n\r\n                    <td style=\"height:23px;border: 1px solid #e6e6e6;width:100px;background-color: #f9f9f9;\">\r\n                      {{tList.MRP | twoDigitNumber}}</td>\r\n\r\n\r\n\r\n                    <td style=\"height:23px;border: 1px solid #e6e6e6;width:100px\"> {{tList.ALTRATE2 | twoDigitNumber}}\r\n                    </td>\r\n                    <td style=\"height:23px;border: 1px solid #e6e6e6;width:100px\"> {{tList.ALTRATE | twoDigitNumber}}\r\n\r\n                    </td>\r\n                    <td style=\"height:23px;border: 1px solid #e6e6e6;width:100px\"> {{tList.INDDISCOUNTRATE}}\r\n\r\n                    </td>\r\n\r\n                    <td style=\"height:23px;border: 1px solid #e6e6e6;width:100px\">{{tList.INDDISCOUNT}}\r\n\r\n\r\n\r\n                    <td style=\"height:23px;border: 1px solid #e6e6e6;width:100px;\">\r\n\r\n                      {{tList.GSTRATE_ONLYFORSHOWING}}</td>\r\n                    <td style=\"height:23px;border: 1px solid #e6e6e6;width:100px;\">\r\n                      {{_trnMainService.nullToZeroConverter(tList.VAT) |twoDigitNumber}}</td>\r\n                    <td style=\"height:23px;border: 1px solid #e6e6e6;width:100px;\">\r\n                      {{ _trnMainService.nullToZeroConverter(tList.PrimaryDiscount)|twoDigitNumber}}</td>\r\n                    <td style=\"height:23px;border: 1px solid #e6e6e6;width:100px;\">\r\n                      {{_trnMainService.nullToZeroConverter(tList.SecondaryDiscount)|twoDigitNumber}}</td>\r\n                    <td style=\"height:23px;border: 1px solid #e6e6e6;width:100px;\">\r\n                      {{_trnMainService.nullToZeroConverter(tList.LiquiditionDiscount) |twoDigitNumber}}</td>\r\n                    <td style=\"height:23px;border: 1px solid #e6e6e6;width:100px;\">\r\n                    </td>\r\n\r\n\r\n\r\n\r\n                    <td style=\"height:23px;border: 1px solid #e6e6e6;width:100px\">\r\n                      {{_trnMainService.nullToZeroConverter(tList.NETAMOUNT)|twoDigitNumber}}</td>\r\n\r\n\r\n\r\n                    <td style=\"height:23px;border: 1px solid #e6e6e6;width:150px\">{{tList.REMARKS}}\r\n                    </td>\r\n\r\n                  </tr>\r\n\r\n                </tbody>\r\n\r\n              </table>\r\n\r\n\r\n\r\n\r\n\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<!-- <file-uploader-popup\r\n    #fileUploadPopup \r\n    [popupsettings]=\"fileUploadPopupSettings\"\r\n    (onUploaded) = \"fileUploadSuccess($event)\"\r\n> \r\n</file-uploader-popup> -->\r\n"

/***/ }),

/***/ 1379:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__common_Transaction_Components_transaction_service__ = __webpack_require__(7);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__common_repositories_masterRepo_service__ = __webpack_require__(8);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__angular_router__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__common_services_spinner_spinner_service__ = __webpack_require__(20);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__common_services_alert_alert_service__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_moment__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_moment___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_6_moment__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return CreditNoteItemBaseComponent; });







var CreditNoteItemBaseComponent = (function () {
    function CreditNoteItemBaseComponent(masterService, _trnMainService, _activatedRoute, _loadingSerive, _alertService) {
        this.masterService = masterService;
        this._trnMainService = _trnMainService;
        this._activatedRoute = _activatedRoute;
        this._loadingSerive = _loadingSerive;
        this._alertService = _alertService;
        this._trnMainService.initialFormLoad(15);
        this._trnMainService.pageHeading = "Sales Return";
        this._trnMainService.DrillMode = "New";
    }
    CreditNoteItemBaseComponent.prototype.ngOnInit = function () {
        var _this = this;
        this._activatedRoute.queryParams.subscribe(function (params) {
            if (params['mode'] == "DRILL") {
                var VCHR = params['voucher'];
                var vparams = [];
                vparams = VCHR.split('-');
                var pcl = params['pcl'];
                _this.masterService.PCL_VALUE = pcl;
                _this._loadingSerive.show("Loading Invoice");
                _this.masterService.LoadTransaction(VCHR, vparams[1], vparams[2]).subscribe(function (res) {
                    if (res.status == "ok") {
                        _this._loadingSerive.hide();
                        _this._trnMainService.TrnMainObj = res.result;
                        _this._trnMainService.TrnMainObj.VoucherType = 15;
                        if (_this._trnMainService.TrnMainObj.VoucherAbbName == 'CN') {
                            _this._trnMainService.pageHeading = "Sales Return";
                        }
                        else if (_this._trnMainService.TrnMainObj.VoucherAbbName == 'RR') {
                            _this._trnMainService.pageHeading = "Reverse Sales Return";
                            _this.masterService.PCL_VALUE = 2;
                        }
                        _this._trnMainService.TrnMainObj.VoucherPrefix = "CN";
                        _this._trnMainService.TrnMainObj.Mode = "VIEW";
                        _this._trnMainService.TrnMainObj.TRNDATE = (_this._trnMainService.TrnMainObj.TRNDATE == null || _this._trnMainService.TrnMainObj.TRNDATE == "" || _this._trnMainService.TrnMainObj.TRNDATE === undefined) ? _this._trnMainService.TrnMainObj.TRNDATE : __WEBPACK_IMPORTED_MODULE_6_moment__(_this._trnMainService.TrnMainObj.TRNDATE).format("YYYY-MM-DD");
                        _this._trnMainService.TrnMainObj.TRN_DATE = (_this._trnMainService.TrnMainObj.TRN_DATE == null || _this._trnMainService.TrnMainObj.TRN_DATE == "" || _this._trnMainService.TrnMainObj.TRN_DATE === undefined) ? _this._trnMainService.TrnMainObj.TRN_DATE : __WEBPACK_IMPORTED_MODULE_6_moment__(_this._trnMainService.TrnMainObj.TRN_DATE).format("YYYY-MM-DD");
                        _this._trnMainService.TrnMainObj.TOTALQTY = 0;
                        _this._trnMainService.TrnMainObj.GROSSAMNT = 0;
                        _this._trnMainService.TrnMainObj.ProdList.forEach(function (x) {
                            // x.ALTERNATEQUANTIY == 0 ?x.ALTERNATEQUANTIY=x.AltQty:x.ALTERNATEQUANTIY,
                            _this._trnMainService.TrnMainObj.TOTALQTY += _this._trnMainService.nullToZeroConverter(x.ALTERNATEQUANTIY);
                            _this._trnMainService.TrnMainObj.GROSSAMNT += _this._trnMainService.nullToZeroConverter(x.AMOUNT);
                        });
                        _this._trnMainService.TrnMainObj.NETWITHOUTROUNDOFF = _this._trnMainService.TrnMainObj.NETWITHOUTROUNDOFF == 0 ? _this._trnMainService.TrnMainObj.NETAMNT : _this._trnMainService.TrnMainObj.NETWITHOUTROUNDOFF;
                        if (_this._trnMainService.TrnMainObj.AdditionalObj == null) {
                            _this._trnMainService.TrnMainObj.AdditionalObj = {};
                        }
                    }
                }, function (err) {
                    _this._loadingSerive.hide();
                    _this._alertService.error(err);
                });
            }
        });
    };
    return CreditNoteItemBaseComponent;
}());
CreditNoteItemBaseComponent = __decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
        selector: "creditnote-itembase",
        template: __webpack_require__(1787),
        providers: [__WEBPACK_IMPORTED_MODULE_1__common_Transaction_Components_transaction_service__["a" /* TransactionService */]],
        styles: ["\n   .table-summary > tbody > tr > td { \n    font-size: 10px;\n }\n\n .table-summary > tbody > tr > td:first-child{\n    text-align: left !important; \n }\n "]
    }),
    __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_2__common_repositories_masterRepo_service__["a" /* MasterRepo */], __WEBPACK_IMPORTED_MODULE_1__common_Transaction_Components_transaction_service__["a" /* TransactionService */],
        __WEBPACK_IMPORTED_MODULE_3__angular_router__["ActivatedRoute"],
        __WEBPACK_IMPORTED_MODULE_4__common_services_spinner_spinner_service__["a" /* SpinnerService */],
        __WEBPACK_IMPORTED_MODULE_5__common_services_alert_alert_service__["a" /* AlertService */]])
], CreditNoteItemBaseComponent);



/***/ }),

/***/ 1380:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__common_Transaction_Components_transaction_service__ = __webpack_require__(7);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__common_repositories_masterRepo_service__ = __webpack_require__(8);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__common_popupLists_generic_grid_generic_popup_grid_component__ = __webpack_require__(35);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__angular_router__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__common_services_alert_alert_service__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__common_services_spinner_spinner_service__ = __webpack_require__(20);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__common_services_permission_authService_service__ = __webpack_require__(17);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8_moment__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8_moment___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_8_moment__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return AddSalesInvoiceComponent; });









var AddSalesInvoiceComponent = (function () {
    function AddSalesInvoiceComponent(masterService, _trnMainService, route, alertService, loadingSerive, authService) {
        var _this = this;
        this.masterService = masterService;
        this._trnMainService = _trnMainService;
        this.route = route;
        this.alertService = alertService;
        this.loadingSerive = loadingSerive;
        this.authService = authService;
        this.TrnMainObj = {};
        this.VoucherLatePostList = [];
        this.hideShow = false;
        this.gridPopupSettings = new __WEBPACK_IMPORTED_MODULE_3__common_popupLists_generic_grid_generic_popup_grid_component__["b" /* GenericPopUpSettings */]();
        this.gridPerformaInvoicePopupSettings = new __WEBPACK_IMPORTED_MODULE_3__common_popupLists_generic_grid_generic_popup_grid_component__["b" /* GenericPopUpSettings */]();
        this.gridcancelSalesPopupSettings = new __WEBPACK_IMPORTED_MODULE_3__common_popupLists_generic_grid_generic_popup_grid_component__["b" /* GenericPopUpSettings */]();
        this.PhiscalObj = {};
        this._trnMainService.initialFormLoad(14);
        this.PhiscalObj = authService.getPhiscalInfo();
        var PID = this.PhiscalObj.PhiscalID;
        PID = PID.replace("/", "ZZ");
        this.gridPopupSettings = {
            title: "Sales Vouchers",
            apiEndpoints: "/getTrnMainPagedList/SO/" + PID,
            defaultFilterIndex: 0,
            columns: [
                {
                    key: "VCHRNO",
                    title: "Voucher No.",
                    hidden: false,
                    noSearch: false
                },
                {
                    key: "DIVISION",
                    title: "Division",
                    hidden: false,
                    noSearch: false
                },
                {
                    key: "TRNAC",
                    title: "Trn. A/c",
                    hidden: false,
                    noSearch: false
                },
                {
                    key: "PhiscalId",
                    title: "Fiscal Year",
                    hidden: false,
                    noSearch: false
                }
            ]
        };
        this.gridPerformaInvoicePopupSettings = {
            title: "Approved Performa Vouchers",
            apiEndpoints: "/getApprovedHOPerformaInvoicePagedList",
            defaultFilterIndex: 0,
            columns: [
                {
                    key: "VCHRNO",
                    title: "Voucher No.",
                    hidden: false,
                    noSearch: false
                },
                {
                    key: "DIVISION",
                    title: "Division",
                    hidden: false,
                    noSearch: false
                },
                {
                    key: "TRNAC",
                    title: "Trn. A/c",
                    hidden: false,
                    noSearch: false
                },
                {
                    key: "PhiscalId",
                    title: "Fiscal Year",
                    hidden: false,
                    noSearch: false
                }
            ]
        };
        this.gridcancelSalesPopupSettings = {
            title: "Sales Invoice ",
            apiEndpoints: "/getTrnMainDateWisePagedList/TI",
            defaultFilterIndex: 0,
            columns: [
                {
                    key: 'CHALANNO',
                    title: 'BILL NO',
                    hidden: false,
                    noSearch: false
                },
                {
                    key: 'TRNDATE',
                    title: 'DATE',
                    hidden: false,
                    noSearch: false
                },
                {
                    key: 'TRNMODE',
                    title: 'TYPE',
                    hidden: false,
                    noSearch: false
                },
                {
                    key: 'NETAMNT',
                    title: 'AMOUNT',
                    hidden: false,
                    noSearch: false
                }
            ]
        };
        this.route.queryParams.subscribe(function (params) {
            if (params['mode'] == "DRILL") {
            }
            else {
                if (params.voucher) {
                    var voucherNo = params.voucher;
                    _this.getSelectedPerformaInvoice(voucherNo);
                }
                if (params.status) {
                    var status_1 = params.status;
                }
                if (params.downloaded) {
                    var downloadedState = params.downloaded;
                    if (downloadedState == 1) {
                    } // this._trnMainService.showPerformaApproveReject = false;
                }
            }
        });
        this.route.queryParams
            .subscribe(function (params) {
            if (params.from == "Ledger") {
                if (params.voucherNumber) {
                    var VCHR = params.voucherNumber;
                    var divphiscal = [];
                    divphiscal = VCHR.split('-');
                    _this.loadingSerive.show("Loading Invoice");
                    _this.masterService.LoadTransaction(VCHR, divphiscal[1], divphiscal[2]).subscribe(function (res) {
                        if (res.status == "ok") {
                            _this.loadingSerive.hide();
                            _this._trnMainService.TrnMainObj = res.result;
                            _this._trnMainService.TrnMainObj.VoucherType = 14;
                            _this._trnMainService.pageHeading = "Tax Invoice";
                            _this._trnMainService.TrnMainObj.VoucherPrefix = "TI";
                            _this._trnMainService.TrnMainObj.Mode = "VIEW";
                        }
                    }, function (err) {
                        _this.loadingSerive.hide();
                        _this.alertService.error(err);
                    });
                }
            }
        });
    }
    AddSalesInvoiceComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.route.queryParams.subscribe(function (params) {
            if (params['mode'] == "DRILL") {
                var VCHR = params['voucher'];
                var vparams = [];
                vparams = VCHR.split('-');
                var pcl = params['pcl'];
                _this.masterService.PCL_VALUE = pcl;
                _this.loadingSerive.show("Loading Invoice");
                _this.masterService.LoadTransaction(VCHR, vparams[1], vparams[2]).subscribe(function (res) {
                    if (res.status == "ok") {
                        _this.loadingSerive.hide();
                        _this._trnMainService.TrnMainObj = res.result;
                        _this._trnMainService.TrnMainObj.VoucherType = 14;
                        if (_this._trnMainService.TrnMainObj.VoucherAbbName == 'TI') {
                            _this._trnMainService.pageHeading = "Tax Invoice";
                        }
                        else if (_this._trnMainService.TrnMainObj.VoucherAbbName == 'SI') {
                            _this._trnMainService.pageHeading = "ABBREVIATED TAX INVOICE";
                            _this.masterService.PCL_VALUE = 2;
                        }
                        _this._trnMainService.TrnMainObj.VoucherPrefix = "TI";
                        _this._trnMainService.TrnMainObj.Mode = "VIEW";
                        _this._trnMainService.TrnMainObj.TRNDATE = (_this._trnMainService.TrnMainObj.TRNDATE == null || _this._trnMainService.TrnMainObj.TRNDATE == "" || _this._trnMainService.TrnMainObj.TRNDATE === undefined) ? _this._trnMainService.TrnMainObj.TRNDATE : __WEBPACK_IMPORTED_MODULE_8_moment__(_this._trnMainService.TrnMainObj.TRNDATE).format("YYYY-MM-DD");
                        _this._trnMainService.TrnMainObj.TRN_DATE = (_this._trnMainService.TrnMainObj.TRN_DATE == null || _this._trnMainService.TrnMainObj.TRN_DATE == "" || _this._trnMainService.TrnMainObj.TRN_DATE === undefined) ? _this._trnMainService.TrnMainObj.TRN_DATE : __WEBPACK_IMPORTED_MODULE_8_moment__(_this._trnMainService.TrnMainObj.TRN_DATE).format("YYYY-MM-DD");
                        _this._trnMainService.TrnMainObj.TOTALQTY = 0;
                        _this._trnMainService.TrnMainObj.GROSSAMNT = 0;
                        _this._trnMainService.TrnMainObj.ProdList.forEach(function (x) {
                            x.ALTERNATEQUANTIY == 0 ? x.ALTERNATEQUANTIY = x.AltQty : x.ALTERNATEQUANTIY,
                                _this._trnMainService.TrnMainObj.TOTALQTY += _this._trnMainService.nullToZeroConverter(x.ALTERNATEQUANTIY);
                            _this._trnMainService.TrnMainObj.GROSSAMNT += _this._trnMainService.nullToZeroConverter(x.AMOUNT);
                        });
                        _this._trnMainService.TrnMainObj.NETWITHOUTROUNDOFF = _this._trnMainService.TrnMainObj.NETWITHOUTROUNDOFF == 0 ? _this._trnMainService.TrnMainObj.NETAMNT : _this._trnMainService.TrnMainObj.NETWITHOUTROUNDOFF;
                        if (_this._trnMainService.TrnMainObj.AdditionalObj == null) {
                            _this._trnMainService.TrnMainObj.AdditionalObj = {};
                        }
                    }
                }, function (err) {
                    _this.loadingSerive.hide();
                    _this.alertService.error(err);
                });
            }
            else {
                _this.TrnMainObj.Mode = "NEW";
                _this.masterService.ShowMore = false;
                _this.masterService.getEnableLatePost().subscribe(function (res) {
                    if (res.status == "ok") {
                        _this.VoucherLatePostList = res.result;
                        for (var _i = 0, _a = _this.VoucherLatePostList; _i < _a.length; _i++) {
                            var i = _a[_i];
                            if (i.VoucherName == 'TaxInvoice') {
                                if (i.Status == 1) {
                                    _this._trnMainService.TrnMainObj.isVoucherLatePostEnable = 1;
                                }
                            }
                        }
                    }
                });
            }
        });
    };
    AddSalesInvoiceComponent.prototype.showLoadFromSOPopup = function ($event) {
        this.genericGridSO.show();
    };
    AddSalesInvoiceComponent.prototype.showApprovedPreformaInvoicePopup = function ($event) {
        this.genericPerformaInvoiceGridSO.show();
    };
    AddSalesInvoiceComponent.prototype.showSalesDayWise = function ($event) {
        this.genericCancelSales.show();
    };
    AddSalesInvoiceComponent.prototype.onPerformaInvoiceSelect = function (performaInvoice) {
        this.getSelectedPerformaInvoice(performaInvoice.VCHRNO);
    };
    AddSalesInvoiceComponent.prototype.oncancelSalesSelect = function (salesCancel) {
        //console.log(salesCancel)
    };
    AddSalesInvoiceComponent.prototype.getSelectedPerformaInvoice = function (voucherNo) {
        var _this = this;
        this.loadingSerive.show("Getting data, Please wait...");
        this.masterService.loadHoPerformaInvoice(voucherNo).subscribe(function (result) {
            _this.loadingSerive.hide();
            if (result.status == "ok") {
                _this._trnMainService.TrnMainObj = JSON.parse(result.result); //Object.assign({}, this._trnMainService.TrnMainObj, result.result );
                _this._trnMainService.TrnMainObj.Mode = "NEW";
                for (var i = 0; i < _this._trnMainService.TrnMainObj.ProdList.length; i++) {
                    _this._trnMainService.TrnMainObj.ProdList[i].inputMode = false;
                    // this._trnMainService.TrnMainObj.ProdList[i].Quantity = result.result.ProdList[i].Quantity;
                }
                _this._trnMainService.TrnMainObj.VoucherPrefix = "TI";
                _this._trnMainService.TrnMainObj.VoucherType = 14;
                _this._trnMainService.pageHeading = "Tax Invoice";
                _this._trnMainService.getVoucherNumber();
                _this._trnMainService.getCurrentDate();
                _this._trnMainService.ReCalculateBill();
            }
        }, function (error) {
            _this.loadingSerive.hide();
        });
    };
    AddSalesInvoiceComponent.prototype.onSalesOrderSelect = function (item) {
        var _this = this;
        this.masterService.loadSalesInvoiceFromSalesOrder(item.VCHRNO).subscribe(function (result) {
            if (result.status == "ok") {
                _this._trnMainService.TrnMainObj = JSON.parse(result.result); //Object.assign({}, this._trnMainService.TrnMainObj, result.result );
                _this._trnMainService.TrnMainObj.Mode = "NEW";
                if (!_this._trnMainService.TrnMainObj ||
                    !_this._trnMainService.TrnMainObj.ProdList ||
                    _this._trnMainService.TrnMainObj.ProdList == undefined)
                    return;
                _this._trnMainService.TrnMainObj.REFBILL = item.VCHRNO;
                _this._trnMainService.TrnMainObj.VoucherType = 14;
                _this._trnMainService.TrnMainObj.VoucherPrefix = "TI";
                _this._trnMainService.TrnMainObj.TransporterEway = {};
                _this._trnMainService.getVoucherNumber();
                _this._trnMainService.getCurrentDate();
                for (var i in _this._trnMainService.TrnMainObj.ProdList) {
                    _this._trnMainService.setAltunitDropDownForView(i);
                    _this._trnMainService.AssignSellingPriceAndDiscounts(_this._trnMainService.TrnMainObj.ProdList[i].PClist, i, "");
                    var cofactorObj = _this._trnMainService.TrnMainObj.ProdList[i].ALTUNITObj;
                    _this._trnMainService.RealQuantitySet(i, cofactorObj == null ? 1 : cofactorObj.CONFACTOR);
                    _this._trnMainService.TrnMainObj.ProdList[i].MFGDATE = ((_this._trnMainService.TrnMainObj.ProdList[i].MFGDATE == null) ? "" : _this._trnMainService.TrnMainObj.ProdList[i].MFGDATE.toString().substring(0, 10));
                    _this._trnMainService.TrnMainObj.ProdList[i].EXPDATE = ((_this._trnMainService.TrnMainObj.ProdList[i].EXPDATE == null) ? "" : _this._trnMainService.TrnMainObj.ProdList[i].EXPDATE.toString().substring(0, 10));
                    _this._trnMainService.TrnMainObj.ProdList[i].inputMode = true;
                    _this._trnMainService.TrnMainObj.ProdList[i].VCHRNO = _this._trnMainService.TrnMainObj.VCHRNO;
                    var rate1 = _this._trnMainService.TrnMainObj.ProdList[i].RATE;
                    var rate2 = 0;
                    _this._trnMainService.TrnMainObj.ProdList[i].inputMode = true;
                    rate2 = _this._trnMainService.TrnMainObj.ProdList[i].PRATE;
                    _this._trnMainService.setunit(rate1, rate2, i, _this._trnMainService.TrnMainObj.ProdList[i].ALTUNITObj);
                    _this._trnMainService.CalculateNormalNew(i);
                }
                var ZeroStockedProduct = _this._trnMainService.TrnMainObj.ProdList.filter(function (x) { return x.SELECTEDITEM.STOCK <= 0; });
                _this._trnMainService.TrnMainObj.ProdList = _this._trnMainService.TrnMainObj.ProdList.filter(function (x) { return x.SELECTEDITEM.STOCK > 0; });
                _this._trnMainService.ReCalculateBill();
                if (ZeroStockedProduct != null && ZeroStockedProduct.length > 0) {
                    _this.alertService.error("Some Of the item have been excluded because of unavailable Stock");
                }
            }
        }, function (error) { });
    };
    AddSalesInvoiceComponent.prototype.onItemDoubleClick = function (event) {
        this._trnMainService.TrnMainObj.REFORDBILL = event.VCHRNO;
        this._trnMainService.loadSODataToSales(event.VCHRNO);
    };
    AddSalesInvoiceComponent.prototype.onSalesCancelSelect = function (selectedItem) {
        this.loadTaxInvoiceForCancel(selectedItem.VCHRNO, selectedItem.DIVISION, selectedItem.PhiscalId);
    };
    AddSalesInvoiceComponent.prototype.loadTaxInvoiceForCancel = function (VCHR, division, phiscalid) {
        var _this = this;
        this.loadingSerive.show("Getting data, Please wait...");
        this.masterService.LoadTransaction(VCHR, division, phiscalid).subscribe(function (result) {
            //console.log(result)
            _this.loadingSerive.hide();
            if (result.status == "ok") {
                _this._trnMainService.TrnMainObj = result.result;
                _this._trnMainService.TrnMainObj.REFBILL = VCHR;
                _this._trnMainService.TrnMainObj.VoucherType = 61;
                _this._trnMainService.pageHeading = "Tax Invoice [Cancel]";
                _this._trnMainService.TrnMainObj.VoucherPrefix = "SC";
                _this._trnMainService.TrnMainObj.Mode = "VIEW";
                _this._trnMainService.ReCalculateBill();
                _this._trnMainService.getVoucherNumber();
                _this._trnMainService.getCurrentDate();
                for (var i in _this._trnMainService.TrnMainObj.ProdList) {
                    _this._trnMainService.setAltunitDropDownForViewStock(i);
                    _this._trnMainService.getPricingOfItem(i, "", true);
                    _this._trnMainService.TrnMainObj.ProdList[i].inputMode = false;
                }
            }
        }, function (error) {
            _this.loadingSerive.hide();
        });
    };
    return AddSalesInvoiceComponent;
}());
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])("genericGridSO"),
    __metadata("design:type", __WEBPACK_IMPORTED_MODULE_3__common_popupLists_generic_grid_generic_popup_grid_component__["c" /* GenericPopUpComponent */])
], AddSalesInvoiceComponent.prototype, "genericGridSO", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])("genericPerformaInvoiceGridSO"),
    __metadata("design:type", __WEBPACK_IMPORTED_MODULE_3__common_popupLists_generic_grid_generic_popup_grid_component__["c" /* GenericPopUpComponent */])
], AddSalesInvoiceComponent.prototype, "genericPerformaInvoiceGridSO", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])("genericCancelSales"),
    __metadata("design:type", __WEBPACK_IMPORTED_MODULE_3__common_popupLists_generic_grid_generic_popup_grid_component__["c" /* GenericPopUpComponent */])
], AddSalesInvoiceComponent.prototype, "genericCancelSales", void 0);
AddSalesInvoiceComponent = __decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
        selector: "addsales-invoice",
        template: __webpack_require__(1788),
        providers: [__WEBPACK_IMPORTED_MODULE_1__common_Transaction_Components_transaction_service__["a" /* TransactionService */]],
        styles: [
            "\n      .GRNPopUp tbody tr:hover {\n        background-color: #e0e0e0;\n      }\n      .GRNPopUp tr.active td {\n        background-color: #123456 !important;\n        color: white;\n      }\n      .modal-dialog.modal-md {\n        top: 45%;\n        margin-top: 0px;\n      }\n\n      .modal-dialog.modal-sm {\n        top: 45%;\n        margin-top: 0px;\n      } \n    "
        ]
    }),
    __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_2__common_repositories_masterRepo_service__["a" /* MasterRepo */],
        __WEBPACK_IMPORTED_MODULE_1__common_Transaction_Components_transaction_service__["a" /* TransactionService */],
        __WEBPACK_IMPORTED_MODULE_4__angular_router__["ActivatedRoute"],
        __WEBPACK_IMPORTED_MODULE_5__common_services_alert_alert_service__["a" /* AlertService */],
        __WEBPACK_IMPORTED_MODULE_6__common_services_spinner_spinner_service__["a" /* SpinnerService */],
        __WEBPACK_IMPORTED_MODULE_7__common_services_permission_authService_service__["a" /* AuthService */]])
], AddSalesInvoiceComponent);



/***/ }),

/***/ 1381:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return Sales; });

var Sales = (function () {
    function Sales() {
    }
    ;
    return Sales;
}());
Sales = __decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
        selector: 'sales',
        template: '<router-outlet></router-outlet>'
    }),
    __metadata("design:paramtypes", [])
], Sales);



/***/ }),

/***/ 1553:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_router__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__sales_component__ = __webpack_require__(1381);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__common_services_permission_guard_service__ = __webpack_require__(90);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__components_CreditNoteItemWise_creditnote_itembase_component__ = __webpack_require__(1379);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__components_salesinvoice_AddSalesInvoices__ = __webpack_require__(1380);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__common_services_guard_can_navigate_guard__ = __webpack_require__(579);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return routing; });






var routes = [
    {
        path: '',
        component: __WEBPACK_IMPORTED_MODULE_1__sales_component__["a" /* Sales */],
        children: [
            { path: 'add-creditnote-itembase', component: __WEBPACK_IMPORTED_MODULE_3__components_CreditNoteItemWise_creditnote_itembase_component__["a" /* CreditNoteItemBaseComponent */], canDeactivate: [__WEBPACK_IMPORTED_MODULE_5__common_services_guard_can_navigate_guard__["a" /* PendingChangesGuard */]], },
            { path: 'addsientry', component: __WEBPACK_IMPORTED_MODULE_4__components_salesinvoice_AddSalesInvoices__["a" /* AddSalesInvoiceComponent */], canActivate: [__WEBPACK_IMPORTED_MODULE_2__common_services_permission_guard_service__["a" /* CanActivateTeam */]], canDeactivate: [__WEBPACK_IMPORTED_MODULE_5__common_services_guard_can_navigate_guard__["a" /* PendingChangesGuard */]], },
        ]
    }
];
var routing = __WEBPACK_IMPORTED_MODULE_0__angular_router__["RouterModule"].forChild(routes);


/***/ }),

/***/ 1787:
/***/ (function(module, exports) {

module.exports = "<div class=\"sticky-top\">\r\n    <div class=\"row clearfix\">\r\n        <div class=\"col-md-2\">\r\n            <voucher-master-toggler></voucher-master-toggler>\r\n        </div>\r\n        <div class=\"col-md-2\">\r\n            <h2 style=\"color: black;\">{{_trnMainService.pageHeading}}</h2>\r\n        </div>\r\n        <div class=\"col-md-8\">\r\n            <voucher-master-action></voucher-master-action>\r\n        </div>\r\n    </div>\r\n</div>\r\n<div class=\"main-container\">\r\n    <div class=\"col-md-12\" style=\"margin-right: 280px\">\r\n        <div *ngIf=\"masterService.ShowMore\" class=\"row clearfix\" style=\"margin: 10px;\">\r\n            <trnmain-parameters-master></trnmain-parameters-master>\r\n        </div>\r\n        <div class=\"row\">\r\n            <productentry></productentry>\r\n        </div>\r\n    </div>\r\n     <!-- SIDE NAV -->\r\n  <voucher-sidebar-billdetail></voucher-sidebar-billdetail>\r\n  \r\n    <!-- <div class=\"col-md-2 plainBackGround\"\r\n        style=\"height:440px;width:20%;overflow: scroll; margin : 0px; border: 1px solid #f1ebeb;\">\r\n        <table class=\"table table-summary\" style=\"text-align: left\">\r\n            <tr>\r\n                <td>Return No:</td>\r\n                <td>{{_trnMainService.TrnMainObj.VCHRNO }}</td>\r\n            </tr>\r\n            <tr>\r\n                <td> Date:</td>\r\n                <td>{{_trnMainService.TrnMainObj.TRN_DATE | date: 'dd-MM-yyyy' }}</td>\r\n            </tr>\r\n\r\n            <tr>\r\n                <td>Disc%</td>\r\n                <td>\r\n                    <input style=\"height: 25px;\" type=\"number\" [(ngModel)]=\"_trnMainService.TrnMainObj.DCRATE\"\r\n                        (change)=\"_trnMainService.FlatDiscountPercentChange()\"> \r\n                </td>\r\n            </tr>\r\n            <tr>\r\n                <td>Disc Amt</td>\r\n                <td> <input style=\"height: 25px;\" type=\"number\"\r\n                        [(ngModel)]=\"_trnMainService.TrnMainObj.TOTALFLATDISCOUNT\"\r\n                        (change)=\"_trnMainService.FlatDiscountAmountChange()\"></td>\r\n            </tr>\r\n            <tr>\r\n                <td>Total Disc</td>\r\n                <td>{{ _trnMainService.TrnMainObj.TOTALDISCOUNT| twoDigitNumber  }}</td>\r\n            </tr>\r\n            <tr>\r\n                <td>Round off Amount</td>\r\n                <td></td>\r\n            </tr>\r\n            <tr>\r\n                <td>Taxable Amt:</td>\r\n                <td>{{ _trnMainService.TrnMainObj.TAXABLE | twoDigitNumber }}</td>\r\n            </tr>\r\n            <tr>\r\n                <td>Non-Taxable:</td>\r\n                <td>{{ _trnMainService.TrnMainObj.NONTAXABLE | twoDigitNumber }}</td>\r\n            </tr>\r\n            <tr>\r\n                <td>Rounding Adj:</td>\r\n                <td>{{ _trnMainService.TrnMainObj.ROUNDOFF | twoDigitNumber }}</td>\r\n            </tr>\r\n            <tr>\r\n                <td>Net Amt</td>\r\n                <td>{{ _trnMainService.TrnMainObj.NETAMNT | twoDigitNumber }}</td>\r\n            </tr>\r\n        </table>\r\n    </div> -->\r\n \r\n\r\n</div>\r\n\r\n\r\n<div class=\"sticky-bottom\">\r\n    <voucher-total-area></voucher-total-area>\r\n</div>"

/***/ }),

/***/ 1788:
/***/ (function(module, exports) {

module.exports = " \r\n<div class=\"sticky-top\">\r\n  <div class=\"row clearfix\">\r\n    <div class=\"col-md-2\">\r\n      <voucher-master-toggler></voucher-master-toggler>\r\n    </div>\r\n    <div class=\"col-md-3\">\r\n      <h2 style=\"color: black;\">{{ _trnMainService.pageHeading }}</h2>\r\n    </div>\r\n    <div class=\"col-md-7\">\r\n      <voucher-master-action\r\n        (onLoadFromSOClickEmit)=\"showLoadFromSOPopup($event)\"\r\n        (onLoadFromPerformaInvoiceClickEmit)=\"\r\n          showApprovedPreformaInvoicePopup($event)\r\n        \"\r\n        (onLoadCancelSalesEmit)=\"showSalesDayWise($event)\"\r\n      ></voucher-master-action>\r\n      <generic-popup-grid\r\n        #genericGridSO\r\n        [popupsettings]=\"gridPopupSettings\"\r\n        (onItemDoubleClick)=\"onSalesOrderSelect($event)\"\r\n      >\r\n      </generic-popup-grid>\r\n      <generic-popup-grid\r\n        #genericPerformaInvoiceGridSO\r\n        [popupsettings]=\"gridPerformaInvoicePopupSettings\"\r\n        (onItemDoubleClick)=\"onPerformaInvoiceSelect($event)\"\r\n      >\r\n      </generic-popup-grid>\r\n\r\n      <generic-popup-grid\r\n        #genericCancelSales\r\n        [popupsettings]=\"gridcancelSalesPopupSettings\"\r\n        (onItemDoubleClick)=\"onSalesCancelSelect($event)\"\r\n      >\r\n      </generic-popup-grid>\r\n    </div>\r\n  </div>\r\n</div>\r\n<div class=\"main-container\" style=\"    margin-right: -35px;\">\r\n  <div class=\"col-md-12\" style=\"margin-right:280px;\">\r\n    <div\r\n      *ngIf=\"masterService.ShowMore\"\r\n      class=\"row clearfix\"\r\n      style=\"margin: 10px;\"\r\n    >\r\n      <trnmain-parameters-master></trnmain-parameters-master>\r\n    </div>\r\n    <div class=\"row\">\r\n      <productentry></productentry>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- SIDE NAV -->\r\n  <voucher-sidebar-billdetail></voucher-sidebar-billdetail>\r\n  \r\n</div>\r\n\r\n<div class=\"sticky-bottom\">\r\n  <voucher-total-area></voucher-total-area>\r\n</div>\r\n\r\n<!-- <div class=\"modal fade\" bsModal #TrnMainListchildModal=\"bs-modal\" style=\"top:0;padding-top:10px\" [config]=\"{backdrop: 'static'}\" tabindex=\"-1\"\r\n      role=\"dialog\" aria-labelledby=\"mySmallModalLabel\" aria-hidden=\"true\">\r\n      <div class=\"modal-dialog modal-lg\">\r\n          <div class=\"modal-content\">\r\n              <div class=\"modal-header\">\r\n                  <button class=\"close\" aria-label=\"Close\" (click)=\"TrnMainListchildModal.hide()\">\r\n              <span aria-hidden=\"true\">&times;</span>\r\n              \r\n            </button>\r\n                  <h4 class=\"modal-title\">Dispatch List</h4>\r\n              </div>\r\n              <div class=\"modal-body\">\r\n                  <div style=\"background:#d4c8c8; height:2px;width:100%\"></div>\r\n                  <table  style=\"margin:10px;width:100%\" class=\"GRNPopUp\">\r\n                      <div style=\"height:30px;width:100%;font-weight: bold;\">\r\n                          <tr>\r\n                              <th style=\"width:100px\">Voucher No.</th>\r\n                              <th style=\"width:200px\">Division</th>\r\n                             \r\n                              <th style=\"width:100px\">Date</th>\r\n                              <th style=\"width:100px\">Miti</th>\r\n                              <th style=\"width:150px\">Trn. A/C</th>\r\n                             \r\n                          </tr>\r\n                      </div>\r\n                      <div style=\"height:400px;width:100%;overflow:auto;scrollbar-3dlight-color:#FFFFFF;scrollbar-arrow-color:#000000;scrollbar-base-color:#FF9999;scrollbar-darkshadow-color:#000000;scrollbar-face-color:#000000;scrollbar-highlight-color:#000000;scrollbar-shadow-color:#0033CC;\">\r\n                          <tr *ngFor=\"let t of WTMList;let i=index\" style=\"height:28px;\" (click)=\"WTMrowClick(t,i)\" [class.active]=\"i == selectedWTMRowIndex\">\r\n      \r\n                            \r\n                              <td style=\"width:100px\"> {{t.VCHRNO}} </td>\r\n                              <td style=\"width:200px\">{{t.DIVISIONNAME}}</td>\r\n                              <td style=\"width:100px\">{{t.TRNDATE}}</td>\r\n                              <td style=\"width:100px\">{{t.BSDATE}}</td>\r\n                              <td style=\"width:150px\">{{t.TRNNAME}}</td>\r\n                          </tr>\r\n      \r\n      \r\n                      </div>\r\n                  </table>\r\n              </div>\r\n          </div>\r\n          <div class=\"modal-footer\">\r\n      \r\n              <button class=\"btn btn-info confirm-btn\" type=\"button\" (click)=onLoadWTMItemDetail()>Load</button>\r\n          </div>\r\n      \r\n      \r\n      </div>\r\n      </div> -->\r\n<!-- <div class=\"modal fade\" bsModal #ItemDetailchildModal=\"bs-modal\" style=\"top:0;padding-top:10px\" [config]=\"{backdrop: 'static'}\" tabindex=\"-1\"\r\n      role=\"dialog\" aria-labelledby=\"mySmallModalLabel\" aria-hidden=\"true\">\r\n      <div class=\"modal-dialog modal-lg\">\r\n          <div class=\"modal-content\">\r\n              <div class=\"modal-header\">\r\n                  <button class=\"close\" aria-label=\"Close\" (click)=\"ItemDetailchildModal.hide()\">\r\n              <span aria-hidden=\"true\">&times;</span>\r\n              \r\n            </button>\r\n                  <h4 class=\"modal-title\">Information</h4>\r\n              </div>\r\n              <div class=\"modal-body\">\r\n                  <div style=\"background:#d4c8c8; height:2px;width:100%\"></div>\r\n                  <table  style=\"margin:10px;width:100%\" class=\"GRNPopUp\">\r\n                      <div style=\"height:30px;width:100%;font-weight: bold;\">\r\n                          <tr>\r\n                              <th style=\"width:40px\">SNo</th>\r\n                             \r\n                              <th style=\"width:150px\">ItemCode</th>\r\n                              <th style=\"width:300px\">ItemName</th>\r\n                              <th style=\"width:60px\">Unit</th>\r\n                              <th style=\"width:100px\">Rate</th>\r\n                              <th style=\"width:60px\">Quantity</th>\r\n                              <th style=\"width:50px\">Include</th>\r\n                          </tr>\r\n                      </div>\r\n                      <div style=\"height:400px;width:100%;overflow:auto;scrollbar-3dlight-color:#FFFFFF;scrollbar-arrow-color:#000000;scrollbar-base-color:#FF9999;scrollbar-darkshadow-color:#000000;scrollbar-face-color:#000000;scrollbar-highlight-color:#000000;scrollbar-shadow-color:#0033CC;\">\r\n                          <tr *ngFor=\"let t of WTMItemDetails;let i=index\" style=\"height:28px;\" >\r\n                              <td style=\"width:40px\"> {{i+1}}</td>\r\n                             \r\n                              <td style=\"width:150px\">{{t.MENUCODE}}</td>\r\n                              <td style=\"width:300px\">{{t.ITEMDESC}}</td>\r\n                              <td style=\"width:60px\">{{t.UNIT}}</td>\r\n                              <td style=\"width:100px\">{{t.RATE}}</td>\r\n                              <td style=\"width:60px\">{{t.Quantity}}</td>\r\n                              <td style=\"width:50px\"><input type=\"checkbox\" [(ngModel)]=\"t.isCheckForImport\"></td>\r\n                          </tr>\r\n      \r\n      \r\n                      </div>\r\n                  </table>\r\n              </div>\r\n          </div>\r\n              <div class=\"modal-footer\">\r\n                            \r\n                            <button class=\"btn btn-info confirm-btn\" type=\"button\" (click)=onsubmitItemDetail()>OK</button>\r\n                        </div>\r\n      \r\n         \r\n      </div>\r\n      </div> -->\r\n\r\n<!-- <div class=\"modal fade\" bsModal #WarentyVoucherchildModal=\"bs-modal\" style=\"top:0;padding-top:10px\" [config]=\"{backdrop: 'static'}\" tabindex=\"-1\"\r\n      role=\"dialog\" aria-labelledby=\"mySmallModalLabel\" aria-hidden=\"true\">\r\n      <div class=\"modal-dialog modal-lg\">\r\n          <div class=\"modal-content\">\r\n              <div class=\"modal-header\">\r\n                  <button class=\"close\" aria-label=\"Close\" (click)=\"WarentyVoucherchildModal.hide()\">\r\n              <span aria-hidden=\"true\">&times;</span>\r\n              \r\n            </button>\r\n                  <h4 class=\"modal-title\">Information</h4>\r\n              </div>\r\n              <div class=\"modal-body\">\r\n                  <div style=\"background:#d4c8c8; height:2px;width:100%\"></div>\r\n                  <table  style=\"margin:10px;width:100%\" class=\"GRNPopUp\">\r\n                      <div style=\"height:30px;width:100%;font-weight: bold;\">\r\n                          <tr>\r\n                              <th style=\"width:40px\">SNo</th>\r\n                              <th style=\"width:100px\">VoucherNo.</th>\r\n                              <th style=\"width:200px\">Division</th>\r\n                              <th style=\"width:150px\">TrnAc</th>\r\n                              <th style=\"width:50px\">Include</th>\r\n                          </tr>\r\n                      </div>\r\n                      <div style=\"height:400px;width:100%;overflow:auto;scrollbar-3dlight-color:#FFFFFF;scrollbar-arrow-color:#000000;scrollbar-base-color:#FF9999;scrollbar-darkshadow-color:#000000;scrollbar-face-color:#000000;scrollbar-highlight-color:#000000;scrollbar-shadow-color:#0033CC;\">\r\n                          <tr *ngFor=\"let t of WarrentyVList;let i=index\" style=\"height:28px;\" >\r\n                              <td style=\"width:40px\"> {{i+1}}</td>\r\n                              <td style=\"width:100px\">{{t.VCHRNO}}</td>\r\n                              <td style=\"width:200px\">{{t.DIVISIONNAME}}</td>\r\n                              <td style=\"width:150px\">{{t.ACNAME}}</td>\r\n                            \r\n                              <td style=\"width:50px\"><input type=\"checkbox\" [(ngModel)]=\"t.isCheckForImport\"></td>\r\n                          </tr>\r\n      \r\n      \r\n                      </div>\r\n                  </table>\r\n              </div>\r\n          </div>\r\n              <div class=\"modal-footer\">\r\n                            \r\n                            <button class=\"btn btn-info confirm-btn\" type=\"button\" (click)=onsubmitWarrentyVoucher()>OK</button>\r\n                        </div>\r\n      \r\n         \r\n      </div>\r\n      </div> -->\r\n"

/***/ }),

/***/ 572:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_common__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__angular_forms__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__ngui_auto_complete__ = __webpack_require__(564);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__ngui_auto_complete___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3__ngui_auto_complete__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_ng2_bootstrap__ = __webpack_require__(26);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_ngx_daterangepicker_material__ = __webpack_require__(567);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_ngx_pagination__ = __webpack_require__(52);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__common_Invoice_print_invoice_print_invoice_component__ = __webpack_require__(122);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__common_Transaction_Components_transaction_module__ = __webpack_require__(565);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__common_Transaction_Components_transaction_service__ = __webpack_require__(7);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__common_date_picker_date_picker_module__ = __webpack_require__(571);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__common_directives_limit_decimal_module__ = __webpack_require__(569);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12__common_popupLists_generic_grid_generic_popup_grid_module__ = __webpack_require__(212);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13__common_popupLists_report_filter_report_filter_module__ = __webpack_require__(1176);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_14__common_services_permission_guard_service__ = __webpack_require__(90);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_15__node_modules_ng2_smart_table_src_ng2_smart_table_module__ = __webpack_require__(1171);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_16__theme_nga_module__ = __webpack_require__(44);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_17__Purchases_components_AdditionalCost_additionalCost_component__ = __webpack_require__(1289);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_18__login_index__ = __webpack_require__(217);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_19__common_Prefix_prefix_component__ = __webpack_require__(1272);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_20__accountvoucher_component__ = __webpack_require__(1238);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_21__accountvoucher_routing__ = __webpack_require__(1275);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_22__components_CreditNote_credit_note_component__ = __webpack_require__(1242);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_23__components_DebitNote_debit_note_component__ = __webpack_require__(1243);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_24__components_ExpensesVoucher_expenses_voucher_component__ = __webpack_require__(1244);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_25__components_IncomeVoucher_CustomerTracking_customerTracking_component__ = __webpack_require__(1277);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_26__components_IncomeVoucher_income_voucher_component__ = __webpack_require__(1245);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_27__components_VoucherTracking_VoucherTracking_module__ = __webpack_require__(573);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_28__components_account_opening_balance_account_opening_balance_component__ = __webpack_require__(1250);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_29__components_bank_reconciliation_bank_reconciliation_component__ = __webpack_require__(1251);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_30__components_bill_tracking_amendment_bill_tracking_amendment_component__ = __webpack_require__(1252);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_31__components_bill_tracking_amendment_bill_tracking_amendment_service__ = __webpack_require__(570);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_32__components_capital_voucher_capital_voucher_component__ = __webpack_require__(1253);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_33__components_contra_contra_voucher_component__ = __webpack_require__(1254);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_34__components_debit_note_rate_adjustment_debit_note_rate_adjustment_component__ = __webpack_require__(1280);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_35__components_journal_journal_voucher_component__ = __webpack_require__(1257);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_36__components_journal_test__ = __webpack_require__(1282);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_37__components_journal_trnmain_journal_entry_component__ = __webpack_require__(1283);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_38__components_journal_trntran_journal_entry_component__ = __webpack_require__(1284);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_39__components_party_balance_confirmation_party_balance_confirmation_component__ = __webpack_require__(1258);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_40__components_party_opening_balance_party_opening_balance_component__ = __webpack_require__(1259);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_41__components_voucher_posting_voucher_posting_component__ = __webpack_require__(1261);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_42__common_nepali_date_picker_nepali_date_picker_module__ = __webpack_require__(558);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_43__common_popupLists_file_uploader_file_uploader_popup_module__ = __webpack_require__(566);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_44__common_popupLists_reverse_entry_popup_reverse_entry_module__ = __webpack_require__(577);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_45__node_modules_ng2_search_filter__ = __webpack_require__(216);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_46__Purchases_components_AdditionalCost_ImportDocumentDetails_component__ = __webpack_require__(1288);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_47__Purchases_components_AdditionalCost_costingDetail_component__ = __webpack_require__(1290);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_48__Purchases_components_AdditionalCost_masterPageAdditional_component__ = __webpack_require__(1264);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_49__Purchases_components_AdditionalCost_purchaseDetail_component__ = __webpack_require__(1291);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_50__Purchases_components_AdditionalCost_tabs__ = __webpack_require__(1293);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_51__Purchases_components_NewAdditionalCost_newIndividualCost_component___ = __webpack_require__(1294);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_52__Purchases_components_NewAdditionalCost_newadditionalCost_component__ = __webpack_require__(1295);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_53__Purchases_components_NewAdditionalCost_newcostingDetail_component__ = __webpack_require__(1296);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_54__Purchases_components_NewAdditionalCost_newmasterPageAdditional_component__ = __webpack_require__(1265);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_55__Purchases_components_NewAdditionalCost_newpurchaseDetail_component__ = __webpack_require__(1297);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_56__Purchases_components_purchaseinvoice_AddPurchaseInvoice__ = __webpack_require__(1236);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_57__components_CashCollection_cashcollection_component__ = __webpack_require__(1240);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_58__components_CellPayVoucher_CellPay_Voucher_component__ = __webpack_require__(1241);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_59__components_DebitNote_FooterwithIncludedVAT_component__ = __webpack_require__(1276);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_60__components_MultipleSeries_MultipleSeries_component__ = __webpack_require__(1278);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_61__components_PaymentCollection_PaymentCollection_component__ = __webpack_require__(1246);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_62__components_PostDirectory_postdirectory_component__ = __webpack_require__(1247);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_63__components_ReverseCreditNote_reverse_credit_note_component__ = __webpack_require__(1248);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_64__components_account_headingwise_depreciation_detail_account_headingwise_depreciation_detail_component__ = __webpack_require__(1249);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_65__components_depreciation_detail_depreciation_detail_component__ = __webpack_require__(1255);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_66__components_itemwise_depreciation_detail_itemwise_depreciation_detail_component__ = __webpack_require__(1256);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_67__components_party_reconciliation_party_reconciliation_component__ = __webpack_require__(1260);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_68__components_payment_single_payment_single_component__ = __webpack_require__(1286);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_69__components_vehicle_cost_tracking_vehicle_cost_tracking_service__ = __webpack_require__(1270);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_70__components_voucher_renumbering_search_pipe__ = __webpack_require__(1287);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_71__components_voucher_renumbering_voucher_renumbering_component__ = __webpack_require__(1262);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_72__components_BulkPrint_bulk_print_component__ = __webpack_require__(1239);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AccountVouchersModule", function() { return AccountVouchersModule; });









































































var AccountVouchersModule = (function () {
    function AccountVouchersModule() {
    }
    return AccountVouchersModule;
}());
AccountVouchersModule = __decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__angular_core__["NgModule"])({
        imports: [
            __WEBPACK_IMPORTED_MODULE_0__angular_common__["CommonModule"],
            __WEBPACK_IMPORTED_MODULE_2__angular_forms__["FormsModule"],
            __WEBPACK_IMPORTED_MODULE_2__angular_forms__["ReactiveFormsModule"],
            __WEBPACK_IMPORTED_MODULE_3__ngui_auto_complete__["NguiAutoCompleteModule"],
            __WEBPACK_IMPORTED_MODULE_16__theme_nga_module__["a" /* NgaModule */],
            __WEBPACK_IMPORTED_MODULE_45__node_modules_ng2_search_filter__["a" /* Ng2SearchPipeModule */],
            __WEBPACK_IMPORTED_MODULE_21__accountvoucher_routing__["a" /* routing */],
            __WEBPACK_IMPORTED_MODULE_15__node_modules_ng2_smart_table_src_ng2_smart_table_module__["Ng2SmartTableModule"],
            __WEBPACK_IMPORTED_MODULE_4_ng2_bootstrap__["a" /* ModalModule */].forRoot(),
            __WEBPACK_IMPORTED_MODULE_18__login_index__["b" /* LoginModule */],
            __WEBPACK_IMPORTED_MODULE_8__common_Transaction_Components_transaction_module__["a" /* TransactionModule */],
            __WEBPACK_IMPORTED_MODULE_12__common_popupLists_generic_grid_generic_popup_grid_module__["a" /* GenericPopupGridModule */].forRoot(),
            __WEBPACK_IMPORTED_MODULE_11__common_directives_limit_decimal_module__["a" /* LimitDecimalPlacesModule */].forRoot(),
            __WEBPACK_IMPORTED_MODULE_27__components_VoucherTracking_VoucherTracking_module__["a" /* VoucherTrackingPopupModule */].forRoot(),
            __WEBPACK_IMPORTED_MODULE_5_ngx_daterangepicker_material__["a" /* NgxDaterangepickerMd */].forRoot(),
            __WEBPACK_IMPORTED_MODULE_6_ngx_pagination__["a" /* NgxPaginationModule */],
            __WEBPACK_IMPORTED_MODULE_13__common_popupLists_report_filter_report_filter_module__["a" /* ReportFilterModule */].forRoot(),
            __WEBPACK_IMPORTED_MODULE_10__common_date_picker_date_picker_module__["a" /* IMSDatePickerModule */].forRoot(),
            __WEBPACK_IMPORTED_MODULE_42__common_nepali_date_picker_nepali_date_picker_module__["a" /* NepaliDatePickerModule */],
            __WEBPACK_IMPORTED_MODULE_44__common_popupLists_reverse_entry_popup_reverse_entry_module__["a" /* ReverseEntryModule */].forRoot(),
            __WEBPACK_IMPORTED_MODULE_43__common_popupLists_file_uploader_file_uploader_popup_module__["a" /* FileUploaderPopupModule */].forRoot()
        ],
        declarations: [
            __WEBPACK_IMPORTED_MODULE_20__accountvoucher_component__["a" /* AccountVouchers */],
            __WEBPACK_IMPORTED_MODULE_19__common_Prefix_prefix_component__["a" /* PrefixComponent */],
            __WEBPACK_IMPORTED_MODULE_38__components_journal_trntran_journal_entry_component__["a" /* TrnTranJournalEntryComponent */],
            __WEBPACK_IMPORTED_MODULE_37__components_journal_trnmain_journal_entry_component__["a" /* TrnMainJournalEntryComponent */],
            __WEBPACK_IMPORTED_MODULE_23__components_DebitNote_debit_note_component__["a" /* DebitNoteComponent */],
            __WEBPACK_IMPORTED_MODULE_36__components_journal_test__["a" /* testComponent */],
            __WEBPACK_IMPORTED_MODULE_26__components_IncomeVoucher_income_voucher_component__["a" /* IncomeVoucherComponent */],
            __WEBPACK_IMPORTED_MODULE_24__components_ExpensesVoucher_expenses_voucher_component__["a" /* ExpensesVoucherComponent */],
            __WEBPACK_IMPORTED_MODULE_22__components_CreditNote_credit_note_component__["a" /* CreditNoteComponent */],
            __WEBPACK_IMPORTED_MODULE_35__components_journal_journal_voucher_component__["a" /* JournalVoucherComponent */],
            __WEBPACK_IMPORTED_MODULE_33__components_contra_contra_voucher_component__["a" /* ContraVoucherComponent */],
            __WEBPACK_IMPORTED_MODULE_28__components_account_opening_balance_account_opening_balance_component__["a" /* AccountOpeningBalance */],
            __WEBPACK_IMPORTED_MODULE_40__components_party_opening_balance_party_opening_balance_component__["a" /* PartyOpeningBalance */],
            __WEBPACK_IMPORTED_MODULE_25__components_IncomeVoucher_CustomerTracking_customerTracking_component__["a" /* CustomerTrackingComponent */],
            __WEBPACK_IMPORTED_MODULE_29__components_bank_reconciliation_bank_reconciliation_component__["a" /* BankReconciliationComponent */],
            __WEBPACK_IMPORTED_MODULE_41__components_voucher_posting_voucher_posting_component__["a" /* VoucherPosting */],
            __WEBPACK_IMPORTED_MODULE_34__components_debit_note_rate_adjustment_debit_note_rate_adjustment_component__["a" /* DebitNoteRateAdjustmentComponent */],
            __WEBPACK_IMPORTED_MODULE_68__components_payment_single_payment_single_component__["a" /* PaymentSingleComponent */],
            __WEBPACK_IMPORTED_MODULE_30__components_bill_tracking_amendment_bill_tracking_amendment_component__["a" /* BillTrackingAmendmentComponent */],
            __WEBPACK_IMPORTED_MODULE_32__components_capital_voucher_capital_voucher_component__["a" /* CapitalVoucherComponent */],
            __WEBPACK_IMPORTED_MODULE_17__Purchases_components_AdditionalCost_additionalCost_component__["a" /* additionalCostDetail */],
            __WEBPACK_IMPORTED_MODULE_48__Purchases_components_AdditionalCost_masterPageAdditional_component__["a" /* MasterAdditionalComponent */],
            __WEBPACK_IMPORTED_MODULE_54__Purchases_components_NewAdditionalCost_newmasterPageAdditional_component__["a" /* MasterNewAdditionalComponent */],
            __WEBPACK_IMPORTED_MODULE_47__Purchases_components_AdditionalCost_costingDetail_component__["a" /* CostingDetailComponent */], __WEBPACK_IMPORTED_MODULE_49__Purchases_components_AdditionalCost_purchaseDetail_component__["a" /* PurchaseDetailComponent */],
            __WEBPACK_IMPORTED_MODULE_52__Purchases_components_NewAdditionalCost_newadditionalCost_component__["a" /* newadditionalCostDetail */],
            __WEBPACK_IMPORTED_MODULE_59__components_DebitNote_FooterwithIncludedVAT_component__["a" /* DrCrFooterWithVATIncluded */],
            __WEBPACK_IMPORTED_MODULE_50__Purchases_components_AdditionalCost_tabs__["a" /* TabsComponent */],
            __WEBPACK_IMPORTED_MODULE_46__Purchases_components_AdditionalCost_ImportDocumentDetails_component__["a" /* ImportDocumentDetailsComponent */],
            __WEBPACK_IMPORTED_MODULE_71__components_voucher_renumbering_voucher_renumbering_component__["a" /* VoucherRenumberingComponent */], __WEBPACK_IMPORTED_MODULE_61__components_PaymentCollection_PaymentCollection_component__["a" /* PaymentCollection */], __WEBPACK_IMPORTED_MODULE_60__components_MultipleSeries_MultipleSeries_component__["a" /* MultipleSeriesComponent */], __WEBPACK_IMPORTED_MODULE_26__components_IncomeVoucher_income_voucher_component__["a" /* IncomeVoucherComponent */], __WEBPACK_IMPORTED_MODULE_62__components_PostDirectory_postdirectory_component__["a" /* PostDirectoryComponent */],
            __WEBPACK_IMPORTED_MODULE_61__components_PaymentCollection_PaymentCollection_component__["a" /* PaymentCollection */],
            __WEBPACK_IMPORTED_MODULE_39__components_party_balance_confirmation_party_balance_confirmation_component__["a" /* PartyBalanceConfirmationComponent */],
            __WEBPACK_IMPORTED_MODULE_67__components_party_reconciliation_party_reconciliation_component__["a" /* PartyReconciliationComponent */],
            __WEBPACK_IMPORTED_MODULE_58__components_CellPayVoucher_CellPay_Voucher_component__["a" /* CellPayVoucherComponent */],
            __WEBPACK_IMPORTED_MODULE_63__components_ReverseCreditNote_reverse_credit_note_component__["a" /* ReverseCreditNoteComponent */],
            __WEBPACK_IMPORTED_MODULE_53__Purchases_components_NewAdditionalCost_newcostingDetail_component__["a" /* NewCostingDetailComponent */],
            __WEBPACK_IMPORTED_MODULE_55__Purchases_components_NewAdditionalCost_newpurchaseDetail_component__["a" /* NewPurchaseDetailComponent */],
            __WEBPACK_IMPORTED_MODULE_51__Purchases_components_NewAdditionalCost_newIndividualCost_component___["a" /* newIndividualCostDetail */],
            __WEBPACK_IMPORTED_MODULE_56__Purchases_components_purchaseinvoice_AddPurchaseInvoice__["a" /* AddPurchaseInvoiceComponent */],
            __WEBPACK_IMPORTED_MODULE_57__components_CashCollection_cashcollection_component__["a" /* CashCollection */],
            __WEBPACK_IMPORTED_MODULE_64__components_account_headingwise_depreciation_detail_account_headingwise_depreciation_detail_component__["a" /* AccountHeadingWiseDepreciationDetailComponent */],
            __WEBPACK_IMPORTED_MODULE_66__components_itemwise_depreciation_detail_itemwise_depreciation_detail_component__["a" /* ItemWiseDepreciationDetailComponent */],
            __WEBPACK_IMPORTED_MODULE_65__components_depreciation_detail_depreciation_detail_component__["a" /* DepreciationDetailsComponent */],
            __WEBPACK_IMPORTED_MODULE_70__components_voucher_renumbering_search_pipe__["a" /* SearchPipe */],
            __WEBPACK_IMPORTED_MODULE_72__components_BulkPrint_bulk_print_component__["a" /* BulkPrintComponent */]
        ],
        providers: [__WEBPACK_IMPORTED_MODULE_14__common_services_permission_guard_service__["a" /* CanActivateTeam */], __WEBPACK_IMPORTED_MODULE_9__common_Transaction_Components_transaction_service__["a" /* TransactionService */], __WEBPACK_IMPORTED_MODULE_7__common_Invoice_print_invoice_print_invoice_component__["a" /* PrintInvoiceComponent */], __WEBPACK_IMPORTED_MODULE_31__components_bill_tracking_amendment_bill_tracking_amendment_service__["a" /* BillTrackingAmendmentService */], __WEBPACK_IMPORTED_MODULE_69__components_vehicle_cost_tracking_vehicle_cost_tracking_service__["a" /* VehicleCostTrackingService */]],
    })
], AccountVouchersModule);



/***/ })

});
//# sourceMappingURL=3.chunk.js.map