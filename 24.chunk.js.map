{"version":3,"file":"24.chunk.js","sources":["webpack:///./src/app/pages/financial-report/report-body.component.ts?75de****","webpack:///./src/app/pages/financial-report/report-body.module.ts?a4c7****","webpack:///./src/app/pages/financial-report/report-body.component.html?c0c7****","webpack:///./src/app/pages/financial-report/Opening_Balance/openingBalance.module.ts","webpack:///./src/app/pages/financial-report/Opening_Balance/openingBalance.component.ts","webpack:///./src/app/pages/financial-report/Opening_Balance/openingBalance.service.ts","webpack:///./src/app/pages/financial-report/Opening_Balance/openingBalance.routing.module.ts","webpack:///./src/app/pages/financial-report/Opening_Balance/openingBalance.component.html"],"sourcesContent":["import { Component, Input, OnChanges, HostListener, Inject, ViewChild, ElementRef } from \"@angular/core\";\r\nimport { Router } from \"@angular/router\";\r\nimport { DOCUMENT } from '@angular/platform-browser';\r\n\r\n@Component({\r\n    selector: \"report-body\",\r\n    template: require('./report-body.component.html'),\r\n})\r\nexport class ReportBodyComponent implements OnChanges {\r\n\r\n    public tabindex: string = \"list\"\r\n    @Input() particularsRow: any\r\n    @Input() ACNAME: string\r\n    @Input() DATE1: string\r\n    @Input() DATE2: string\r\n    @Input() totalRow: any\r\n    @Input() listSetting: GenericReportListSettings;\r\n    @Input() reportType: string\r\n    @Input() voucherName: string\r\n    public dataList: any\r\n    public dataListTotal: any\r\n    public selectedRowIndex = 0\r\n    @ViewChild('dataTable') dataTable: ElementRef\r\n\r\n    constructor(private router: Router, @Inject(DOCUMENT) private document: any, ) {\r\n\r\n    }\r\n    ngOnChanges(changes: any) {\r\n\r\n        if (changes.reportType) {\r\n            this.reportType = changes.reportType.currentValue\r\n        }\r\n\r\n        if (changes.listSetting) {\r\n            this.listSetting = changes.listSetting.currentValue;\r\n        }\r\n        if (changes.particularsRow) {\r\n            this.dataList = changes.particularsRow.currentValue\r\n        }\r\n        if (changes.totalRow) {\r\n            this.dataListTotal = changes.totalRow.currentValue\r\n        }\r\n        if (changes.ACNAME) {\r\n            this.ACNAME = changes.ACNAME.currentValue\r\n        }\r\n        if (changes.DATE1) {\r\n            this.DATE1 = changes.DATE1.currentValue\r\n        }\r\n        if (changes.DATE2) {\r\n            this.DATE2 = changes.DATE2.currentValue\r\n        }\r\n        if (changes.voucherName) {\r\n            this.voucherName = changes.voucherName.currentValue\r\n        }\r\n\r\n    }\r\n\r\n\r\n    @HostListener(\"document : keydown\", [\"$event\"])\r\n    updown($event: KeyboardEvent) {\r\n        if ($event.code == \"ArrowDown\") {\r\n            this.dataTable.nativeElement.scrollTop = this.dataTable.nativeElement.scrollTop + 26\r\n\r\n            $event.preventDefault();\r\n            this.selectedRowIndex++;\r\n            if (this.selectedRowIndex == this.dataList.length) {\r\n                this.selectedRowIndex = this.dataList.length - 1;\r\n            }\r\n        } else if ($event.code == \"ArrowUp\") {\r\n            $event.preventDefault();\r\n            if (this.dataTable.nativeElement.scrollTop > 0) {\r\n                this.dataTable.nativeElement.scrollTop = this.dataTable.nativeElement.scrollTop - 26\r\n            }\r\n            this.selectedRowIndex--;\r\n            if (this.selectedRowIndex == -1) {\r\n                this.selectedRowIndex = 0;\r\n            }\r\n        } \r\n        else if (\r\n            $event.ctrlKey && $event.code == \"Enter\" &&\r\n            this.selectedRowIndex >= 0 &&\r\n            this.selectedRowIndex < this.dataList.length\r\n        ) {\r\n            $event.preventDefault();\r\n        }\r\n         else if ($event.code == \"Enter\" && this.selectedRowIndex >= 0 && this.selectedRowIndex < this.dataList.length) {\r\n            $event.preventDefault()\r\n            if (this.reportType == 'Ledger Voucher') {\r\n                let invoicePrefix = this.dataList[this.selectedRowIndex]['VCH TYPE']\r\n                if (this.isDrillableVoucher(invoicePrefix)) {\r\n                    {\r\n                        this.loadInvoiceFromVoucherType(invoicePrefix, this.dataList[this.selectedRowIndex])\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    doubleClicked(index) {\r\n        this.selectedRowIndex = index\r\n        if (this.reportType == 'Ledger Voucher') {\r\n            let invoicePrefix = this.dataList[this.selectedRowIndex]['VCH TYPE']\r\n            if (this.isDrillableVoucher(invoicePrefix)) {\r\n                this.loadInvoiceFromVoucherType(invoicePrefix, this.dataList[this.selectedRowIndex])\r\n\r\n            }\r\n        }\r\n    }\r\n    isDrillableVoucher(invoicePrefix: any) {\r\n        switch (invoicePrefix) {\r\n            case 'SALES':\r\n                return true\r\n            case 'INCOME':\r\n                return true\r\n            case 'EXPENSE':\r\n                return true\r\n            case 'PURCHASE':\r\n                return true\r\n            case 'JOURNAL':\r\n                return false\r\n            case 'DEBITNOTE':\r\n                return false\r\n            case 'CREDITNOTE':\r\n                return false\r\n            case 'CONTRA':\r\n                return false\r\n            default:\r\n                return false;\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    loadInvoiceFromVoucherType(invoicePrefix: string, invoiceDataObj: any) {\r\n        window.open(window.location.origin + this.resolveRouteUrl(invoicePrefix)\r\n            + \"?voucherNumber=\"+invoiceDataObj['VCH NO']+\"&from=Ledger\",\"_self\");\r\n    }\r\n\r\n\r\n\r\n\r\n    resolveRouteUrl(prefix: string) {\r\n        switch (prefix) {\r\n            case 'SALES':\r\n                return \"/#/pages/transaction/sales/addsientry\"\r\n            case 'INCOME':\r\n                return \"/account/#/pages/account/acvouchers/income-voucher\"\r\n            case 'EXPENSE':\r\n                return \"/account/#/pages/account/acvouchers/expense-voucher\"\r\n            case 'PURCHASE':\r\n                return \"/#/pages/transaction/purchases/add-purchase-invoice\"\r\n            case 'JOURNAL':\r\n                return \"/account/#/pages/account/acvouchers/journal-voucher\"\r\n            case 'DEBITNOTE':\r\n                return\r\n            case 'CREDITNOTE':\r\n                return\r\n            case 'CONTRA':\r\n                return \"/account/#/pages/account/acvouchers/contra-voucher\"\r\n\r\n\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class GenericReportListSettings {\r\n    title: string;\r\n    columns: ColumnSettings[] = [];\r\n}\r\n\r\nexport class ColumnSettings {\r\n    key: string;\r\n    title: string;\r\n}\r\n\r\nexport interface ReportData {\r\n    particularsRow: any,\r\n    totalRow: any\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/pages/financial-report/report-body.component.ts","import { ModuleWithProviders, NgModule } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { ReportBodyComponent } from \"./report-body.component\";\r\nimport { HttpModule } from \"@angular/http\";\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    HttpModule\r\n  ],\r\n  declarations: [ReportBodyComponent],\r\n  exports: [ReportBodyComponent]\r\n})\r\nexport class ReportBodyModule {\r\n  static forRoot(): ModuleWithProviders {\r\n    return {\r\n      ngModule: ReportBodyModule,\r\n    };\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/pages/financial-report/report-body.module.ts","module.exports = \"<style>\\r\\n  .table tr th {\\r\\n    text-align: center !important;\\r\\n    vertical-align: middle;\\r\\n\\r\\n  }\\r\\n\\r\\n  tr {\\r\\n    font-size: 12px;\\r\\n  }\\r\\n\\r\\n  .page-header-space {\\r\\n    height: 100px;\\r\\n  }\\r\\n\\r\\n  .text-justify {\\r\\n    text-align: justify;\\r\\n  }\\r\\n\\r\\n  table {\\r\\n    width: 100%;\\r\\n  }\\r\\n\\r\\n\\r\\n  th {\\r\\n    font-size: 12px;\\r\\n    font-weight: bold;\\r\\n  }\\r\\n\\r\\n  .custom-td {\\r\\n    border: 1px solid #e6e6e6;\\r\\n    width: 20px;\\r\\n    text-align: center !important;\\r\\n  }\\r\\n\\r\\n  .row-even {\\r\\n    background-color: #E6E6E6\\r\\n  }\\r\\n\\r\\n  .row-odd {\\r\\n    background-color: rgb(197, 197, 196)\\r\\n  }\\r\\n\\r\\n  .thead-padding {\\r\\n    padding: 10px;\\r\\n  }\\r\\n\\r\\n  .selected-row {\\r\\n    background-color: #787878 !important;\\r\\n    color: white;\\r\\n    font-size: 14px;\\r\\n  }\\r\\n\\r\\n  td {\\r\\n    padding: 5px !important;\\r\\n  }\\r\\n\\r\\n  .border {\\r\\n    border-top: 1px solid #e6e6e6 !important;\\r\\n  }\\r\\n\\r\\n  .header{\\r\\n    min-height: 62px !important\\r\\n  }\\r\\n\\r\\n</style>\\r\\n<ng-container *ngIf=\\\"dataList.length\\\">\\r\\n  <div id=\\\"reportTable\\\" #dataTable *ngIf=\\\"listSetting\\\" class=\\\"row\\\"\\r\\n    style=\\\"height: 470px !important;overflow-y:scroll;overflow-x: hidden;width: 100%;background:#ffffff;margin: 0\\\">\\r\\n    <div class=\\\"header\\\" style=\\\"padding: 0px;position: sticky;top: 0\\\">\\r\\n      <table id=\\\"report-header\\\">\\r\\n        <thead>\\r\\n          <tr style=\\\"border-bottom: 1px solid;height: 30px;\\r\\n            background: #c5e3ed; \\r\\n            color: black;\\\">\\r\\n            <ng-container *ngIf=\\\"reportType=='Ledger Voucher'\\\">\\r\\n              <td class=\\\"thead-padding\\\"><b>Ledger</b></td>\\r\\n              <td class=\\\"thead-padding\\\">{{ACNAME}}</td>\\r\\n            </ng-container>\\r\\n            <ng-container *ngIf=\\\"reportType=='Voucher Register'\\\">\\r\\n              <td colspan=\\\"2\\\" class=\\\"thead-padding\\\"><b>List of All {{voucherName}}</b></td>\\r\\n            </ng-container>\\r\\n            <ng-container *ngIf=\\\"reportType=='Day Book'\\\">\\r\\n              <td colspan=\\\"2\\\" class=\\\"thead-padding\\\"><b>Day Book of {{voucherName}}</b></td>\\r\\n            </ng-container>\\r\\n            <td class=\\\"thead-padding\\\"></td>\\r\\n            <td class=\\\"thead-padding\\\"></td>\\r\\n            <td class=\\\"thead-padding text-right\\\" colspan=\\\"3\\\"> <strong>{{DATE1 |date}} to {{DATE2 |date}}</strong></td>\\r\\n          </tr>\\r\\n          <tr style=\\\"border-bottom: 1px solid;height: 30px;\\r\\n            background: #c5e3ed; \\r\\n            color: black;\\\">\\r\\n            <ng-container *ngFor=\\\"let col of listSetting.columns;let i=index\\\">\\r\\n              <th *ngIf=\\\"col.key=='GROUP NAME'\\\" style=\\\"width: 7% !important\\\" class=\\\"text-left\\\">{{col.title}}</th>\\r\\n              <th *ngIf=\\\"col.key=='MAIN GROUP NAME'\\\" style=\\\"width: 7% !important\\\" class=\\\"text-left\\\">{{col.title}}</th>\\r\\n              <th *ngIf=\\\"col.key=='LEDGER NAME'\\\" style=\\\"width: 7% !important\\\" class=\\\"text-left\\\">{{col.title}}</th>\\r\\n              <th *ngIf=\\\"col.key=='TRNDATE'\\\" style=\\\"width: 7% !important\\\" class=\\\"text-left\\\">{{col.title}}</th>\\r\\n              <th *ngIf=\\\"col.key=='DATE'\\\" style=\\\"width: 7% !important\\\" class=\\\"text-left\\\">{{col.title}}</th>\\r\\n              <th *ngIf=\\\"col.key=='PARTICULARS'\\\" style=\\\"width: 30% !important\\\" class=\\\"text-left\\\">{{col.title}}</th>\\r\\n              <th *ngIf=\\\"col.key=='VCH TYPE'\\\" style=\\\"width: 10% !important\\\" class=\\\"text-left\\\">{{col.title}}</th>\\r\\n              <th *ngIf=\\\"col.key=='VCH NO'\\\" style=\\\"width: 10% !important\\\" class=\\\"text-left\\\">{{col.title}}</th>\\r\\n              <th *ngIf=\\\"col.key=='DEBIT' || col.key=='DRAMNT'\\\" style=\\\"width: 7% !important\\\" class=\\\"text-right\\\">\\r\\n                {{col.title}}</th>\\r\\n              <th *ngIf=\\\"col.key=='CREDIT' || col.key=='CRAMNT'\\\" style=\\\"width: 7% !important\\\" class=\\\"text-right\\\">\\r\\n                {{col.title}}</th>\\r\\n              <th *ngIf=\\\"col.key=='BALANCE'\\\" style=\\\"width: 10% !important\\\" class=\\\"text-right\\\">\\r\\n                {{col.title}}</th>\\r\\n            </ng-container>\\r\\n          </tr>\\r\\n\\r\\n        </thead>\\r\\n      </table>\\r\\n    </div>\\r\\n\\r\\n    <table id=\\\"report-body\\\">\\r\\n      <tbody>\\r\\n        <ng-container *ngFor=\\\"let itm of dataList;let i = index;\\\">\\r\\n          <tr class=\\\"highlight\\\" [class.selected-row]=\\\"selectedRowIndex == i\\\" (dblclick)=\\\"doubleClicked(i)\\\"\\r\\n            style=\\\"max-height:25px;\\\" [class.border]=\\\"itm['DATE']!=null && itm['FLG']!='B'\\\">\\r\\n\\r\\n            <ng-container *ngFor=\\\"let col of listSetting.columns\\\">\\r\\n              <td *ngIf=\\\"col.key=='DATE'\\\" class=\\\"text-left\\\" style=\\\"width:7% !important\\\">\\r\\n                {{itm[col.key] | date:'shortDate'}}\\r\\n              </td>\\r\\n              <td *ngIf=\\\"col.key=='PARTICULARS'\\\" class=\\\"text-left\\\" style=\\\"width:30% !important;white-space: pre\\\"\\r\\n                [innerHtml]=\\\"itm[col.key]\\\">\\r\\n              </td>\\r\\n              <td *ngIf=\\\"col.key=='VCH TYPE'\\\" class=\\\"text-left\\\" style=\\\"width:10% !important\\\">\\r\\n                {{itm[col.key]}}\\r\\n              </td>\\r\\n              <td *ngIf=\\\"col.key=='VCH NO'\\\" class=\\\"text-left\\\" style=\\\"width:10% !important\\\">\\r\\n                {{itm[col.key]}}\\r\\n              </td>\\r\\n              <td *ngIf=\\\"col.key=='GROUP NAME'\\\" class=\\\"text-left\\\" style=\\\"width:10% !important\\\">\\r\\n                {{itm[col.key]}}\\r\\n              </td>\\r\\n              <td *ngIf=\\\"col.key=='MAIN GROUP NAME'\\\" class=\\\"text-left\\\" style=\\\"width:10% !important\\\">\\r\\n                {{itm[col.key]}}\\r\\n              </td>\\r\\n              <td *ngIf=\\\"col.key=='LEDGER NAME'\\\" class=\\\"text-left\\\" style=\\\"width:10% !important\\\">\\r\\n                {{itm[col.key]}}\\r\\n              </td>\\r\\n              <td *ngIf=\\\"col.key=='TRNDATE'\\\" class=\\\"text-left\\\" style=\\\"width:10% !important\\\">\\r\\n                {{itm[col.key]}}\\r\\n              </td>\\r\\n\\r\\n              <td *ngIf=\\\"col.key=='DEBIT' || col.key=='DRAMNT'\\\" style=\\\"width:7% !important\\\" class=\\\"text-right\\\">\\r\\n                {{itm[col.key] | number:'1.2-2'}}\\r\\n              </td>\\r\\n              <td *ngIf=\\\"col.key== 'CREDIT' || col.key=='CRAMNT'\\\" style=\\\"width:7% !important\\\" class=\\\"text-right\\\">\\r\\n                {{itm[col.key] | number:'1.2-2'}}\\r\\n              </td>\\r\\n              <td *ngIf=\\\"col.key== 'BALANCE'\\\" style=\\\"width:10% !important\\\" class=\\\"text-right\\\">\\r\\n                {{itm[col.key] | number:'1.2-2'}}\\r\\n              </td>\\r\\n            </ng-container>\\r\\n\\r\\n          </tr>\\r\\n          <tr *ngIf=\\\"selectedRowIndex == i\\\">\\r\\n            <td [attr.colspan]=\\\"listSetting.columns.length+1\\\">\\r\\n              <div id=\\\"row{{i}}\\\"></div>\\r\\n            </td>\\r\\n          </tr>\\r\\n        </ng-container>\\r\\n\\r\\n      </tbody>\\r\\n    </table>\\r\\n\\r\\n  </div>\\r\\n</ng-container>\\r\\n\\r\\n\\r\\n\\r\\n<div class=\\\"clearfix\\\" *ngIf=\\\"dataList.length\\\" style=\\\"width: 100% !important\\\">\\r\\n  <div class=\\\"col-md-12\\\" style=\\\"position: sticky;bottom:0;padding: 0px;background: #c5e3ed; \\r\\n  color: black;\\\">\\r\\n    <table id=\\\"report-footer\\\" style=\\\"table-layout:fixed;\\\">\\r\\n      <tfoot>\\r\\n        <ng-container>\\r\\n          <tr *ngFor=\\\"let total of dataListTotal\\\">\\r\\n            <td  style=\\\"width:7%\\\" >\\r\\n              &nbsp;\\r\\n            </td>\\r\\n            <td  style=\\\"width:30%\\\"></td>\\r\\n            <td style=\\\"width:10%\\\"></td>\\r\\n            <td class=\\\"text-left\\\"  style=\\\"width:10%\\\"><b>{{total.PARTICULARS}}</b></td>\\r\\n            <td style=\\\"width: 7% !important\\\" class=\\\"text-right\\\">\\r\\n              <b>{{total.DRAMNT |number:'1.2-2' }}</b></td>\\r\\n            <td style=\\\"width: 7% !important\\\" class=\\\"text-right\\\">\\r\\n              <b>{{total.CRAMNT |number:'1.2-2' }}</b>\\r\\n            </td>\\r\\n            <td style=\\\"width:10%\\\"></td>\\r\\n          </tr>\\r\\n        </ng-container>\\r\\n\\r\\n      </tfoot>\\r\\n    </table>\\r\\n  </div>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/financial-report/report-body.component.html\n// module id = 1234\n// module chunks = 19 20 21 22 23 24","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { ReportFilterModule } from '../../../common/popupLists/report-filter/report-filter.module';\r\nimport { CanActivateTeam } from '../../../common/services/permission/guard.service';\r\nimport { ReportBodyModule } from '../report-body.module';\r\nimport { OpeningBalanceComponent } from './openingBalance.component';\r\nimport { OpeningBalanceRoutingModule } from './openingBalance.routing.module';\r\nimport {OpeningBalanceService } from './openingBalance.service';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    OpeningBalanceRoutingModule,\r\n    ReportFilterModule.forRoot(),\r\n    ReportBodyModule.forRoot()\r\n\r\n\r\n\r\n  ],\r\n  declarations: [\r\n    OpeningBalanceComponent,\r\n  ],\r\n  providers: [\r\n    CanActivateTeam,\r\n    OpeningBalanceService,\r\n  ]\r\n})\r\nexport class OpeningBalancerModule {\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/pages/financial-report/Opening_Balance/openingBalance.module.ts","import { Component, ViewChild, OnInit } from '@angular/core';\r\nimport { ReportFilterComponent } from '../../../common/popupLists/report-filter/report-filter.component';\r\nimport { SpinnerService } from '../../../common/services/spinner/spinner.service';\r\nimport { AlertService } from '../../../common/services/alert/alert.service';\r\nimport { GenericReportListSettings, ReportData } from '../report-body.component';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ReportFilterService } from '../../../common/popupLists/report-filter/report-filter.service';\r\nimport { EventListenerService } from '../event-listener.service';\r\nimport { Location } from '@angular/common';\r\nimport { OpeningBalanceService } from './openingBalance.service';\r\n\r\n\r\n\r\n\r\n@Component({\r\n    selector: '\"openingbalance',\r\n    template: require('./openingBalance.component.html'),\r\n})\r\n\r\nexport class OpeningBalanceComponent implements OnInit {\r\n    private isActive: boolean = false\r\n    listSetting: GenericReportListSettings = new GenericReportListSettings()\r\n    public reportType: string = \"OpeningBalance\"\r\n    public returnUrl:string;\r\n    public _reportFilterData: any;\r\n    @ViewChild('reportFilter') reportFilter: ReportFilterComponent\r\n    ReportDataObj: ReportData = <ReportData>{}\r\n    public filterObj: any\r\n    private reportHeaders: any[] = [];\r\n    public reportData: any[] = [];\r\n   \r\n    constructor(private _location: Location,public eventListener:EventListenerService,public _reportFilterService:ReportFilterService,\r\n        private router:Router,private activatedRoute: ActivatedRoute, private _alertService: AlertService, private _openingService: OpeningBalanceService, private _spinnerService: SpinnerService) {\r\n            this.listSetting = {\r\n                title: \"Opening Balance\",\r\n                columns: [\r\n                   \r\n                    {\r\n                        key: \"MAIN GROUP NAME\",\r\n                        title: \"Main Group\"\r\n                    },\r\n                    {\r\n                        key: \"GROUP NAME\"                        ,\r\n                        title: \"Group Name\"\r\n                    },\r\n                    {\r\n                        key: \"LEDGER NAME\",\r\n                        title: \"Ledger Name\"\r\n                    },\r\n                    {\r\n                        key: \"TRNDATE\",\r\n                        title: \"Date\"\r\n                    },\r\n                    {\r\n                        key: \"DEBIT\",\r\n                        title: \"Debit\"\r\n                    },\r\n                    {\r\n                        key: \"CREDIT\",\r\n                        title: \"Credit\"\r\n                    }\r\n                  \r\n                   \r\n                   \r\n                ]\r\n    \r\n            }\r\n       \r\n    }\r\n    ngOnInit() {\r\n        this.eventListener.onreportObjectChange.subscribe((data:any)=>{\r\n            this._reportFilterService.ReportFilterObj =data\r\n        })\r\n        \r\n        const mode = this.activatedRoute.snapshot.params['mode']\r\n        if (mode==\"D\") {\r\n            this.queryAndLoad(this.activatedRoute.snapshot.params)\r\n            \r\n        }else{\r\n            this.reportFilter.show()\r\n        }\r\n\r\n    }\r\n\r\n    loadFilter() {\r\n        this.reportFilter.show()\r\n    }\r\n    \r\n  show() {\r\n    this.isActive = false\r\n  }\r\n\r\n  popupClose() {\r\n    this.isActive = false;\r\n  }\r\n\r\n\r\n    applyFilter(filterObj) {\r\n        try {\r\n            this.queryAndLoad(filterObj)\r\n        } catch (ex) {\r\n            this._alertService.error(ex)\r\n        }\r\n    }\r\n\r\n\r\n    \r\nqueryAndLoad(filterObj) {\r\n    this.returnUrl = filterObj.returnUrl\r\n    this.filterObj = filterObj\r\n    this.reportFilter.popupClose()\r\n    this._spinnerService.show(' Please Wait! Getting Report Data.')\r\n    this._openingService.getOpeningBalanceData().subscribe((res) => {\r\n        if(res.status =='ok'){\r\n            this.ReportDataObj.particularsRow = res.result.data\r\n            this.ReportDataObj.totalRow = res.result2 == null ? [] : res.result2\r\n            this._spinnerService.hide()\r\n          \r\n        }\r\n        else{  this._spinnerService.hide();\r\n            this._alertService.warning(\"No Result Found\")}\r\n        \r\n      \r\n    }, error => {\r\n        this._alertService.error(error)\r\n    })\r\n}\r\n\r\n    return(){\r\n        this.eventListener.updateReportObject(this._reportFilterService.ReportFilterObj)\r\n        this._location.back()\r\n\r\n    }\r\n\r\n  \r\n    getFormattedValue(value) {\r\n        if (value != null) {\r\n          if (typeof value === 'number') { return value.toLocaleString('en-us', { minimumFractionDigits: 2 }) }\r\n    \r\n          else if (new Date(value).toString() != 'Invalid Date') {\r\n            //return new Date(value).toJSON().split('T')[0];\r\n            return value.split('T')[0];\r\n          }\r\n        }\r\n        return value;\r\n    \r\n      }\r\n\r\n       ExportReportInExcel() {\r\n        this._reportFilterService.exportTableToExcel(\"reportTable\", \"OpeningBalance\")\r\n  }\r\n\r\n\r\n  excelDownloadFromHtml_manualTable() {\r\n    try {\r\n     \r\n      let table = '<table>  <thead>   <tr>';\r\n      for (let column1 of this.reportHeaders) {\r\n        table += '<th>' + column1.colHeader + '</th>';\r\n      };\r\n      table += '</tr> </thead>';\r\n      table += '<tbody>';\r\n\r\n      for (let row of this.reportData) {\r\n        table += '<tr>';\r\n        for (let column1 of this.reportHeaders) {\r\n          var v = row[column1.mappingName];\r\n          if (v == null) v = \"\";\r\n          table += '<td>' + v + '</td>';\r\n        };\r\n\r\n        '</tr>';\r\n      };\r\n\r\n      table += '</tbody></table>';\r\n      // var Ht = header + param + table;\r\n      var Ht =  table;\r\n\r\n      var blob = new Blob([Ht], { type: \"application/vnd.ms-excel\" });\r\n      var blobUrl = URL.createObjectURL(blob);\r\n\r\n      var downloadLink = document.createElement(\"a\");\r\n      downloadLink.href = blobUrl;\r\n      downloadLink.download = \"OpeningBalance.xls\";\r\n      document.body.appendChild(downloadLink);\r\n      downloadLink.click();\r\n      document.body.removeChild(downloadLink);\r\n    } catch (ex) { alert(ex) };\r\n  }\r\n}\r\n\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/pages/financial-report/Opening_Balance/openingBalance.component.ts","import { Http, Response, RequestOptions, Headers } from '@angular/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { AuthService } from '../../../common/services/permission';\r\nimport { GlobalState } from '../../../global.state';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable()\r\n\r\nexport class OpeningBalanceService {\r\n\r\n    constructor(private http: Http, private activatedRoute: ActivatedRoute, private authService: AuthService, private state: GlobalState) {\r\n    }\r\n    private get apiUrl(): string {\r\n        let url = this.state.getGlobalSetting(\"apiUrl\");\r\n        let apiUrl = \"\";\r\n\r\n        if (!!url && url.length > 0) { apiUrl = url[0] };\r\n        return apiUrl\r\n    }\r\n\r\n    public getOpeningBalanceData() {\r\n        \r\n        return this.http.post(`${this.apiUrl}/loadReports`,{reportname:\"OpeningBalance\"}, this.getRequestOption())\r\n            .map(this.extractData)\r\n            .catch(this.handleError)\r\n    }\r\n\r\n\r\n    public extractData(res: Response) {\r\n        let response = res.json();\r\n        return response || {};\r\n    }\r\n\r\n    public handleError(error: Response | any) {\r\n        return Observable.throw(error);\r\n    }\r\n    private getRequestOption() {\r\n        let headers: Headers = new Headers({ 'Content-type': 'application/json', 'Authorization': this.authService.getAuth().token })\r\n        return new RequestOptions({ headers: headers });\r\n    }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/pages/financial-report/Opening_Balance/openingBalance.service.ts","import { Routes, RouterModule } from '@angular/router';\r\nimport { NgModule } from '@angular/core';\r\nimport { CanActivateTeam } from '../../../common/services/permission/guard.service';\r\nimport {OpeningBalanceComponent} from './openingBalance.component';\r\n\r\nconst routes: Routes = [\r\n    { path: '', component: OpeningBalanceComponent,canActivate: [CanActivateTeam]},\r\n   \r\n\r\n\r\n\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class OpeningBalanceRoutingModule { }\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/pages/financial-report/Opening_Balance/openingBalance.routing.module.ts","module.exports = \"<div class=\\\"clearfix\\\">\\r\\n    <button class=\\\"btn btn-info pull-right\\\" *ngIf=\\\"returnUrl\\\" (click)=\\\"return()\\\">\\r\\n      Back\\r\\n    </button>\\r\\n  </div>\\r\\n  \\r\\n  <div class=\\\"clearfix\\\">\\r\\n    <div class=\\\"col-md-12\\\" style=\\\"padding-left: 0;padding-right: 0px\\\">\\r\\n      <div class=\\\"col-md-1\\\" style=\\\"padding: 0;width: 30px !important\\\">\\r\\n        <table>\\r\\n          <tr style=\\\"height:30px;width:30px\\\">\\r\\n            <td style=\\\"border: 1pt solid black;\\\">\\r\\n              <i (click)=\\\"loadFilter()\\\" tooltip-placement=\\\"right\\\" tooltip=\\\"Main filters\\\" style=\\\"margin:5px\\\"><span\\r\\n                  class=\\\"glyphicon glyphicon-filter\\\" tooltip=\\\"Main filters\\\"></span></i>\\r\\n            </td>\\r\\n          </tr>\\r\\n          <tr>\\r\\n            <td style=\\\"border: 1pt solid black;\\\">\\r\\n              <i (click)=\\\"ExportReportInExcel()\\\" style=\\\"margin:5px\\\"> <span\\r\\n                      class=\\\"glyphicon glyphicon-export\\\"></span></i>\\r\\n          </td>\\r\\n          </tr>\\r\\n        </table>\\r\\n      </div>\\r\\n      <div style=\\\"float:left;width:95%\\\">\\r\\n\\r\\n        <!-- </aside> -->\\r\\n\\r\\n        <!-- <div class=\\\"widgets\\\">\\r\\n            <div class=\\\"row table-container\\\" >\\r\\n\\r\\n\\r\\n               \\r\\n                    \\r\\n                <table id=\\\"BlueHeaderResizableTable\\\" #reportHtmlTable  style=\\\"font-size:12px; width: 98%; overflow-x :auto;\\\" class=\\\"reportTabel\\\">\\r\\n                        <thead>\\r\\n                          \\r\\n                            <tr>\\r\\n                                <th *ngFor=\\\"let column1 of reportHeaders\\\" width=\\\"{{column1.width}}\\\">\\r\\n                                    {{column1.colHeader}}\\r\\n                                </th>\\r\\n                            </tr>\\r\\n                        </thead>\\r\\n                        <tbody style=\\\"width: fit-content;\\\">\\r\\n                            <tr *ngFor=\\\" let data of reportData\\\"\\r\\n                                (click)=\\\"RowClick(i)\\\">\\r\\n\\r\\n                                <td style=\\\"white-space: pre;overflow: auto;padding-left:3px;padding-right:3px\\\"\\r\\n                                    *ngFor=\\\"let column of reportHeaders\\\" width=\\\"{{column.width}}\\\"\\r\\n                                    [style.text-align]=\\\"column.alignment==0?'inherit':'end'\\\">{{getFormattedValue(data[column.mappingName])}}</td>\\r\\n                            </tr>\\r\\n                        </tbody>\\r\\n                        \\r\\n                      \\r\\n                    </table>\\r\\n\\r\\n             \\r\\n            </div>\\r\\n        </div> -->\\r\\n    </div>\\r\\n    <div class=\\\"col-md-11\\\" style=\\\"padding: 0;width:96.66% !important\\\">\\r\\n      <report-body *ngIf=\\\"ReportDataObj.particularsRow\\\" [listSetting]=\\\"listSetting\\\" [reportType]=\\\"reportType\\\"\\r\\n        [particularsRow]=\\\"ReportDataObj.particularsRow\\\" [totalRow]=\\\"ReportDataObj.totalRow\\\" [ACNAME]=\\\"filterObj.ACCNAME\\\"\\r\\n        [DATE1]=\\\"filterObj.DATE1\\\" [DATE2]=\\\"filterObj.DATE2\\\"></report-body>\\r\\n\\r\\n\\r\\n    </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  \\r\\n  \\r\\n  \\r\\n  <report-filter #reportFilter (filterEmiiter)=\\\"queryAndLoad($event)\\\" [reportType]=\\\"reportType\\\"></report-filter>\\r\\n  \"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/financial-report/Opening_Balance/openingBalance.component.html\n// module id = 1807\n// module chunks = 24"],"mappings":";;;;;;AAAA;AACA;AACA;AAMA;AAgBA;AAAA;AAAA;AAdA;AAWA;AAKA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAIA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAGA;AAAA;AA7JA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AAIA;AAAA;AAAA;AAAA;AAqCA;AADA;;AACA;;AAqCA;AAxFA;AAJA;AACA;AACA;AACA;AAiBA;AAAA;AAhBA;AAAA;AAkKA;AAAA;AAEA;AACA;AAAA;AAAA;;AAEA;AAAA;AAGA;AAAA;AAAA;;;;;;;;;;;;;;;;AClLA;AACA;AACA;AACA;AAUA;AAAA;AAMA;AALA;AACA;AACA;AACA;AACA;AACA;AAAA;AANA;AARA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;;;;;;;;;;;;;;ACbA;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAqBA;AAAA;AACA;AAAA;AAAA;AADA;AAnBA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;;;;;;;;;;;;;;;;;;;;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAUA;AAYA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAZA;AACA;AACA;AAIA;AAEA;AACA;AAIA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAEA;AAEA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAAA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAGA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAIA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AAAA;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAGA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAGA;AACA;AAEA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAEA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAEA;AACA;AAAA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AApKA;AAAA;AAAA;AAAA;AANA;AALA;AACA;AACA;AACA;AAcA;AACA;AAbA;AAAA;;;;;;;;;;;;;;;;;;;;ACnBA;AACA;AACA;AACA;AACA;AACA;AAIA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;;;AAAA;AAEA;AAEA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAjCA;AAFA;AAIA;AAFA;AAAA;;;;;;;;;;;;;;;;;ACTA;AACA;AACA;AACA;AAEA;AACA;AAKA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJA;AACA;AACA;AACA;AACA;AAAA;;;;;;;;;;;;;ACjBA;;;;","sourceRoot":""}