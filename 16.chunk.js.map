{"version":3,"file":"16.chunk.js","sources":["webpack:///./src/app/pages/masters/components/BudgetMaster/add-budget-master.component.ts","webpack:///./src/app/pages/masters/components/BudgetMaster/budget-master.component.ts","webpack:///./src/app/pages/masters/components/BudgetMaster/budget-master.module.ts","webpack:///./src/app/pages/masters/components/BudgetMaster/budget-master.routing.ts","webpack:///./src/app/pages/masters/components/BudgetMaster/search.pipe.ts","webpack:///./src/app/pages/masters/components/BudgetMaster/add-budget-master.component.scss","webpack:///./src/app/pages/masters/components/BudgetMaster/add-budget-master.component.html","webpack:///./src/app/pages/masters/components/BudgetMaster/budget-master.component.css","webpack:///./src/app/pages/masters/components/BudgetMaster/budget-master.component.html"],"sourcesContent":["import { Component, ElementRef, HostListener, Input, ViewChild } from '@angular/core';\r\nimport { AuthService } from '../../../../common/services/permission/authService.service';\r\nimport { MasterRepo } from \"../../../../common/repositories/masterRepo.service\";\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { AlertService } from '../../../../common/services/alert/alert.service';\r\nimport { SpinnerService } from '../../../../common/services/spinner/spinner.service';\r\nimport { GenericPopUpComponent, GenericPopUpSettings } from '../../../../common/popupLists/generic-grid/generic-popup-grid.component';\r\nimport { TransactionService } from '../../../../common/Transaction Components/transaction.service';\r\nimport { IActionMapping, KEYS, TREE_ACTIONS, TreeComponent } from 'angular-tree-component';\r\nimport { TreeViewAccService } from '../Account-Ledger-New/AccLedger.service';\r\nimport { Subject, Subscription } from 'rxjs';\r\nimport * as moment from 'moment';\r\nimport { LocalDataSource } from 'ng2-smart-table';\r\nimport * as XLSX from 'xlsx';\r\nimport * as FileSaver from 'file-saver';\r\nimport { SubdividedByEnum } from '../../../../common/interfaces';\r\nimport { FileUploaderPopUpSettings } from '../../../../common/popupLists/file-uploader/file-uploader-popup.component';\r\nconst EXCEL_TYPE = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8';\r\nconst EXCEL_EXTENSION = '.xlsx';\r\n\r\nconst actionMapping: IActionMapping = {\r\n  mouse: {\r\n    contextMenu: (tree, node, $event) => {\r\n      $event.preventDefault();\r\n      alert(`context menu for ${node.data.ACNAME}`);\r\n    },\r\n    dblClick: (tree, node, $event) => {\r\n      if (node.hasChildren) TREE_ACTIONS.TOGGLE_EXPANDED(tree, node, $event);\r\n    },\r\n    click: (tree, node, $event) => {\r\n      $event.shiftKey\r\n        ? TREE_ACTIONS.TOGGLE_SELECTED_MULTI(tree, node, $event)\r\n        : TREE_ACTIONS.TOGGLE_SELECTED(tree, node, $event)\r\n    }\r\n  },\r\n  keys: {\r\n    [KEYS.ENTER]: (tree, node, $event) => node.setActiveAndVisible()\r\n  }\r\n};\r\n@Component({\r\n  selector: 'add-budget-master-selector',\r\n  template: require('./add-budget-master.component.html'),\r\n  providers: [AuthService],\r\n  styles: [require('../../../modal-style.css'), require('./add-budget-master.component.scss')]\r\n})\r\nexport class AddBudgetMasterComponent {\r\n  selectedIndex: number;\r\n  public DetailList: BudgetData[];\r\n  public temp_DetailList: BudgetData[];\r\n  BudgetImportSheetList :any[] = [];\r\n  // temp_list_holder_array: BudgetData[];\r\n  is_yearly: boolean;\r\n  genericTableList: any;\r\n  is_quaterly: boolean;\r\n  is_monthly: boolean;\r\n  BudgetObj: Pobj = <Pobj>{};\r\n  userProfile: any = <any>{};\r\n  PhiscalObj: any = <any>{};\r\n  public SaveBudgetAllocationObj: Pobj = <Pobj>{};\r\n  private returnUrl: string;\r\n\r\n  busy: Subscription;\r\n  public nodes: any[] = [];\r\n  public tree: TreeComponent;\r\n  GeoList: any[] = [];\r\n  parentGroupID: string = \"\";\r\n  showPopup: boolean = false;\r\n  isOnceSelected: boolean=false;\r\n  transaction_status_check:boolean = false;\r\n  dataAcName: any = []\r\n  dataAcID: any = []\r\n  source: LocalDataSource = new LocalDataSource();\r\n  public selectedNode: any;\r\n  userSetting: any;\r\n  showActionCheckBox: boolean = false;\r\n  loadListSubject: Subject<any> = new Subject<any>();\r\n  root: string;\r\n  costCenterList: any[] = []\r\n  costCenterCategoryList: any[] = [];\r\n  costcenterDetailListTotal: number;\r\n  edit_budg_interval: string;\r\n  edit_sub_divided_by: string;\r\n  edit_adbs: string;\r\n  edit_action: string;\r\n  disableAmt: boolean = false;\r\n  filterValue: string;\r\n  filterOption: string = 'ACNAME';\r\n  accountGroupreplaceIndex: number;\r\n  displayBudgetImportPopUp: boolean = false;\r\n  selectedFileNames: string[] =[];\r\n  fileToImport:FileList = null;\r\n  ledgerListForTemplate:any[]=[];\r\n\r\n  @ViewChild(\"genericGridAccountLedger\") genericGridAccountLedger: GenericPopUpComponent;\r\n  gridPopupSettingsForAccountLedgerList: GenericPopUpSettings = new GenericPopUpSettings();\r\n  @ViewChild(\"genericGridBudgetList\") genericGridBudgetList: GenericPopUpComponent;\r\n  gridPopupSettingsForBudgetList: GenericPopUpSettings = new GenericPopUpSettings();\r\n  @ViewChild(\"genericGridCostCenterList\")\r\n  genericGridCostCenterList: GenericPopUpComponent;\r\n  gridCostCenterListPopupSettings: GenericPopUpSettings = new GenericPopUpSettings();\r\n  @ViewChild(\"genericGridCostCenterGroupList\")\r\n  genericGridCostCenterGroupList: GenericPopUpComponent;\r\n  gridCostCenterGroupListPopupSettings: GenericPopUpSettings = new GenericPopUpSettings();\r\n  @ViewChild('searchInputBox') inputBox: ElementRef;\r\n  @ViewChild('accountGroupSelectField') accountGroupField: ElementRef;\r\n  constructor(private masterService: MasterRepo, private loadingService: SpinnerService,\r\n    private router: Router,\r\n    private alertService: AlertService,\r\n    private loader: SpinnerService,\r\n    private _authService: AuthService,\r\n    private _transactionService: TransactionService,\r\n    public AccountService: TreeViewAccService,\r\n\r\n\r\n    private _activatedRoute: ActivatedRoute\r\n  ) {\r\n    this.userSetting = this._authService.getSetting();\r\n    this.userProfile = _authService.getUserProfile();\r\n    this.PhiscalObj = _authService.getPhiscalInfo();\r\n    try {\r\n      this.router = router;\r\n\r\n      this.masterService.getCostcenter().subscribe(res => {\r\n        this.costCenterList = res;\r\n      })\r\n\r\n      this.masterService.getCostCenterGroupPagedList().subscribe(res => {\r\n        this.costCenterCategoryList = res.data;\r\n      })\r\n      if (!!this._activatedRoute.snapshot.params['returnUrl']) {\r\n        this.returnUrl = this._activatedRoute.snapshot.params['returnUrl'];\r\n      }\r\n      if (!!this._activatedRoute.snapshot.params['VCHRNO']) {\r\n        let VCHRNO: string = \"\";\r\n        VCHRNO = this._activatedRoute.snapshot.params['VCHRNO'];\r\n\r\n        this.masterService.LoadBudgetAllocation(VCHRNO)\r\n          .subscribe(data => {\r\n            if (data.status == 'ok') {\r\n              if (data.result && data.result.length && data.result.length > 0) {\r\n                this.BudgetObj.VCHRNO = VCHRNO;\r\n                let abc = VCHRNO && VCHRNO.split('-');\r\n                this.BudgetObj.BUDGET_NUMBER = abc && abc[0];\r\n                this.BudgetObj.BUDGET_NAME = data.result[0].BUDGET_NAME;\r\n                this.BudgetObj.BUDGET_TYPE = data.result[0].BUDGET_TYPE;\r\n                this.edit_budg_interval = this.BudgetObj.BUDGET_INTERVAL = data.result[0].BUDGET_INTERVAL;\r\n                this.edit_adbs = this.BudgetObj.INTERVAL_ON_AD_OR_BS = data.result[0].INTERVAL_ON_AD_OR_BS;\r\n                this.BudgetObj.PREFILL_DATA = data.result[0].PREFILL_DATA;\r\n                this.BudgetObj.TRNDATE = data.result[0].TRNDATE;\r\n                this.BudgetObj.BSDATE = data.result[0].BSDATE;\r\n                this.edit_sub_divided_by = this.BudgetObj.SUBDIVIDED_BY = data.result[0].SUBDIVIDED_BY;\r\n                this.edit_action = this.BudgetObj.ACTION = data.result[0].ACTION;\r\n                this.BudgetObj.FROM_DATE = data.result[0].FROM_DATE;\r\n                this.BudgetObj.FROM_BSDATE = data.result[0].FROM_BSDATE;\r\n                this.BudgetObj.TO_DATE = data.result[0].TO_DATE;\r\n                this.BudgetObj.TO_BSDATE = data.result[0].TO_BSDATE;\r\n                this.BudgetObj.ACTION = data.result[0].ACTION;\r\n                this.BudgetObj.ACTION_TYPE = data.result[0].ACTION_TYPE;\r\n                this.BudgetObj.CREATED_BY = data.result[0].CREATED_BY;\r\n                this.BudgetObj.CREATED_ON = data.result[0].CREATED_ON;\r\n\r\n                if (data.result[0].ACTION == \"WARN\" || data.result[0].ACTION == \"STOP\") {\r\n                  this.showActionCheckBox = true;\r\n\r\n                }\r\n                \r\n                this.ChooseInterval();\r\n              }\r\n              if (data.result2 && data.result2.length && data.result2.length > 0) {\r\n                this.temp_DetailList = [];\r\n                this.DetailList = [] as Array<BudgetData>;\r\n                // this.BudgetObj.COSTCENTER_CATEGORYID = data.result2[0].COSTCENTER_CATEGORYID;\r\n                // this.BudgetObj.COSTCENTER_CATEGORYNAME = data.result2[0].COSTCENTER_CATEGORYNAME;\r\n                // this.BudgetObj.CCID = data.result2[0].CCID;\r\n                // this.BudgetObj.COSTCENTER_NAME = data.result2[0].COSTCENTER_NAME;\r\n                // this.temp_DetailList = data.result2[0].CCID ? data.result2.filter(x => x.CCID == data.result2[0].CCID) : data.result2;\r\n                this.temp_DetailList = data.result2;\r\n                // console.log(\"@@DetailList\",this.DetailList)\r\n                \r\n                //  this.DetailList = data.result2[0].CCID?data.result2:this.DetailList;\r\n                \r\n                //  this.temp_DetailList.forEach(x=>{\r\n                  //   let result=this.temp_DetailList.filter(y=>y.ACID == x.ACID );\r\n                  //   x.BUDGET=0;\r\n                  //   console.log(\"@@result\",result)\r\n                  //   result.forEach(z=>x.BUDGET=x.BUDGET+z.BUDGET);\r\n                  \r\n                  \r\n                  // });\r\n                  \r\n                  // let _data = this.DetailList.filter(x => x.CCID == data.result2[0].CCID);\r\n                  // if (_data && _data.length && _data.length > 0) {\r\n                    //   for (var a of _data) {\r\n                      //     let _findIndex = this.DetailList.findIndex(x => x.CCID == data.result2[0].CCID);\r\n                      //     if (_findIndex >= 0) {\r\n                        //       this.DetailList.splice(_findIndex, 1);\r\n                        //     }\r\n                        //   }\r\n                        \r\n                        //   console.log(\"@@DetailList\", this.DetailList)\r\n                        // }\r\n                        this.CalculateSum();\r\n                   if (this.BudgetObj.SUBDIVIDED_BY == 'COSTCENTER') {\r\n                    this.disableAmt = true;\r\n                  this.costcenterDetailListTotal = 0;\r\n                  this.Apply();\r\n                  if (this.temp_DetailList.length > 0) {\r\n                    const uniqueValues = [];\r\n                    const seenValues = {};\r\n                    let key = 'ACID';\r\n\r\n                    for (const obj of this.temp_DetailList) {\r\n                      if (!seenValues[obj[key]]) {\r\n                        uniqueValues.push(obj);\r\n                        seenValues[obj[key]] = true;\r\n                      }\r\n                    }\r\n                    this.temp_DetailList = uniqueValues;\r\n                  }\r\n                  // this.temp_DetailList.forEach(x => {\r\n                  //   this.costcenterDetailListTotal += this._transactionService.nullToZeroConverter(x.BUDGET);\r\n                  // });\r\n\r\n                }\r\n\r\n\r\n              }\r\n              let mode = this._activatedRoute.snapshot.params['mode'];\r\n              if (mode == 'view') {\r\n                this.BudgetObj.MODE = \"VIEW\";\r\n              } else {\r\n                this.BudgetObj.MODE = \"EDIT\";\r\n                this.masterService.checkBudgetTransaction(VCHRNO, this.BudgetObj.BUDGET_NAME, this.PhiscalObj.PhiscalID, \"STATUS\").subscribe((res) =>{\r\n                  if(res.status == 'ok'){\r\n                    if(res.result == \"1\")\r\n                    this.transaction_status_check = true;  \r\n                  }\r\n                }, error => {\r\n                  if (error._body == '\"1\"') {\r\n                    this.transaction_status_check = true;                  \r\n                    this.alertService.info(\"This Budget is already used in transaction.\");\r\n                  }\r\n                })\r\n              }\r\n            }\r\n            else {\r\n              this.BudgetObj.MODE = '';\r\n            }\r\n\r\n          }, error => {\r\n\r\n          }\r\n          )\r\n      }\r\n      else {\r\n        this.BudgetObj.MODE = \"ADD\";\r\n        this.reset();\r\n      }\r\n    } catch (ex) {\r\n      alert(ex);\r\n    }\r\n\r\n    let ACID = 'AL';\r\n    this.masterService.getAcidWiseAccountList(ACID).subscribe(res => {\r\n      if (res.status == \"ok\") {\r\n        this.AccountService.partyList = res ? res.result : [];\r\n      }\r\n      else {\r\n        this.AccountService.partyList = [];\r\n      }\r\n    });\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    this.masterService.getAccountListTree().map(x => { return x })\r\n    this.busy = this.masterService.getAccountListTree().map(x => { return x })\r\n      .subscribe(res => {\r\n        this.nodes = res;\r\n        if (this.tree != null) {\r\n          this.tree.treeModel.update();\r\n        }\r\n      }, error => {\r\n        this.masterService.resolveError(error, \"partyLedger - PartyLedger\");\r\n      });\r\n\r\n    this.AccountService.getHierachy().subscribe(res => {\r\n      if (res.status == \"ok\") {\r\n        this.GeoList = res.result.GEO;\r\n\r\n      }\r\n    });\r\n    this.AccountService.loadTableListSubject.subscribe(x => {\r\n    })\r\n    this.AccountService.getMainGroupList().subscribe((response) => {\r\n      if (response.length > 0) {\r\n        this.masterService.mainGroupList = response;\r\n      }\r\n      else {\r\n        this.masterService.mainGroupList = [];\r\n      }\r\n    })\r\n  }\r\n\r\n  getTreeItem() {\r\n    this.AccountService.Refresh();\r\n    this.busy = this.AccountService.busy;\r\n    this.nodes = this.AccountService.nodes;\r\n    this.tree = this.AccountService.tree;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.onChangeYa();\r\n\r\n  }\r\n\r\n\r\n  getRootParent(node, list) {\r\n    if (node.PARENTID == \"PA\") { this.root = node.ACID; return; }\r\n    for (let t of list) {\r\n      if (node.PARENTID != t.ACID) { this.loopingChild(node, t.children, t) }\r\n      else { this.root = t.ACID; }\r\n    }\r\n  }\r\n\r\n  loopingChild(node, cList, root) {\r\n    for (let c of cList) {\r\n      if (c != node) { this.loopingChild(node, c.children, root); }\r\n      else { this.root = root.ACID; }\r\n    }\r\n  }\r\n  getSubgroupA(e) {\r\n    let ACID = e.target.value\r\n    this.selectedNode = {};\r\n    this.masterService.SelectedGroup = this.selectedNode.ACID;\r\n    this.getRootParent(this.selectedNode, this.nodes);\r\n    this.loadListSubject.next(this.selectedNode);\r\n    this.AccountService.ParentInfo = this.selectedNode;\r\n    let mainGroupID = e.target.value;\r\n    this.parentGroupID = mainGroupID;\r\n    this.AccountService.getSubGroupList(mainGroupID).subscribe((res) => {\r\n      if (res.length > 0) {\r\n        this.masterService.subGroupAList = res;\r\n        this.masterService.disableSubGroupA = false;\r\n        this.masterService.disableSubGroupB = true;\r\n        this.masterService.disableSubGroupC = true;\r\n        this.masterService.groupSelectObj.SUBGROUP_A = \"\";\r\n        this.masterService.groupSelectObj.SUBGROUP_B = \"\";\r\n        this.masterService.groupSelectObj.SUBGROUP_C = \"\";\r\n\r\n\r\n      } else {\r\n        this.masterService.subGroupAList = [];\r\n        this.masterService.disableSubGroupA = true;\r\n        this.masterService.disableSubGroupB = true;\r\n        this.masterService.disableSubGroupC = true;\r\n        this.masterService.groupSelectObj.SUBGROUP_A = \"\";\r\n        this.masterService.groupSelectObj.SUBGROUP_B = \"\";\r\n        this.masterService.groupSelectObj.SUBGROUP_C = \"\";\r\n      }\r\n    });\r\n\r\n    this.masterService.getAcidWiseAccountList(ACID).subscribe(res => {\r\n      if (res.status == \"ok\") {\r\n        this.AccountService.partyList = res ? res.result : [];\r\n      }\r\n      else {\r\n        this.AccountService.partyList = [];\r\n      }\r\n    })\r\n  }\r\n  getSubgroupB(e) {\r\n    let subGroupID = e.target.value;\r\n    this.parentGroupID = subGroupID;\r\n    this.AccountService.getSubGroupList(this.masterService.groupSelectObj.SUBGROUP_A).subscribe((res) => {\r\n      if (res.length > 0) {\r\n        this.masterService.subGroupBList = res;\r\n        this.masterService.disableSubGroupB = false;\r\n        this.masterService.disableSubGroupC = true;\r\n\r\n      } else {\r\n        this.masterService.subGroupBList = [];\r\n        this.masterService.disableSubGroupB = true;\r\n        this.masterService.disableSubGroupC = true;\r\n        this.masterService.groupSelectObj.SUBGROUP_B = \"\";\r\n      }\r\n    })\r\n    this.selectedNode = {};\r\n    this.loadListSubject.next(this.selectedNode);\r\n    this.masterService.getAcidWiseAccountList(subGroupID).subscribe(res => {\r\n      if (res.status == \"ok\") {\r\n        this.AccountService.partyList = res ? res.result : [];\r\n      }\r\n      else {\r\n        this.AccountService.partyList = [];\r\n      }\r\n    })\r\n  }\r\n\r\n\r\n  reset() {\r\n    this.costcenterDetailListTotal = 0;\r\n    this.is_yearly = true;\r\n    this.is_quaterly = false;\r\n    this.is_monthly = false;\r\n    this.BudgetObj = {} as Pobj;\r\n    // this.DetailList = [] as Array<BudgetData>;\r\n    this.temp_DetailList = [] as Array<BudgetData>;\r\n    let newRow = <BudgetData>{};\r\n    newRow.ACCOUNTGROUP_ID = null;\r\n    newRow.ACCOUNTGROUP_NAME = null;\r\n    newRow.ACID = null;\r\n    newRow.ACNAME = null;\r\n    newRow.BUDGET = null;\r\n    this.disableAmt = false;\r\n    this.selectedFileNames = [];\r\n    this.fileToImport=null;\r\n    this.ledgerListForTemplate = [];\r\n    // this.DetailList.push(newRow);\r\n    this.temp_DetailList.push(newRow);\r\n    this.BudgetObj.MODE = \"ADD\";\r\n    this.BudgetObj.BUDGET_INTERVAL = \"YEARLY\";\r\n    this.BudgetObj.ACTION = \"IGNORE\";\r\n    this.BudgetObj.BUDGET_TYPE = \"ON_NET_TRANSACTION\";\r\n    this.BudgetObj.SUBDIVIDED_BY = \"DONOT_SUBDIVIDE\";\r\n    this.BudgetObj.INTERVAL_ON_AD_OR_BS = \"BSINTERVAL\";\r\n    this.showActionCheckBox = false;\r\n    this._transactionService.TrnMainObj.VoucherName = \"BudgetAllocate\";\r\n    this.BudgetObj.DIVISION = this._transactionService.TrnMainObj.DIVISION = this.userProfile.division;\r\n    this.BudgetObj.PHISCALID = this._transactionService.TrnMainObj.PhiscalID = this.userProfile.PhiscalYearInfo.PhiscalID;\r\n    this.BudgetObj.COMPANYID = this.userProfile.CompanyInfo.COMPANYID;\r\n    this.BudgetObj.CURRENT_YEAR = \"20\" + this.userProfile.PhiscalYearInfo.PhiscalID.split(\"/\")[0];\r\n    this.BudgetObj.NEXT_YEAR = \"20\" + this.userProfile.PhiscalYearInfo.PhiscalID.split(\"/\")[1];\r\n    this.BudgetObj.BEGINDATE = this.BudgetObj.FROM_DATE = this.masterService.PhiscalObj.BeginDate.split('T')[0];\r\n    this.BudgetObj.ENDDATE = this.BudgetObj.TO_DATE = this.masterService.PhiscalObj.EndDate.split('T')[0];\r\n    this.assigningNewSet();//while reseting new set is pushed\r\n    this.changeFromDate(this.BudgetObj.FROM_DATE, \"AD\");\r\n    this.changeToDate(this.BudgetObj.TO_DATE, \"AD\");\r\n    // this.AccountService.partyList=[];\r\n    this.edit_budg_interval = \"\";\r\n    this.edit_adbs = \"\";\r\n    this.masterService.getVoucherNo(this._transactionService.TrnMainObj, \"BG\").subscribe(res => {\r\n      if (res.status == \"ok\") {\r\n        this.BudgetObj.VCHRNO = res.result.VCHRNO;\r\n        let abc = res.result.VCHRNO && res.result.VCHRNO.split('-');\r\n        this.BudgetObj.BUDGET_NUMBER = abc && abc[0];\r\n      } else {\r\n        alert(\"Failed to retrieve VoucherNo\");\r\n      }\r\n    });\r\n  }\r\n\r\n  assigningNewSet(){\r\n    if (this.BudgetObj.BUDGET_INTERVAL == \"YEARLY\") {\r\n      this.is_yearly = true;\r\n      this.is_quaterly = false;\r\n      this.is_monthly = false;\r\n      this.onChangeYa();\r\n      this.temp_DetailList && this.temp_DetailList.length && this.temp_DetailList.forEach(x => {\r\n        x.SHRAWAN_ASHOJ = 0;\r\n        x.KARTIK_POUSH = 0;\r\n        x.MAGH_CHAITRA = 0;\r\n        x.BAISAKH_ASAR = 0;\r\n        x.JULY_SEPTEMBER = 0;\r\n        x.OCTOBER_DECEMBER = 0;\r\n        x.JANUARY_MARCH = 0;\r\n        x.APRIL_JUNE = 0;\r\n        x.BAISAKH = 0;\r\n        x.JESTHA = 0;\r\n        x.ASAR = 0;\r\n        x.SHRAWAN = 0;\r\n        x.BHADRA = 0;\r\n        x.ASHOJ = 0;\r\n        x.KARTIK = 0;\r\n        x.MANGSIR = 0;\r\n        x.POUSH = 0;\r\n        x.MAGH = 0;\r\n        x.FALGUN = 0;\r\n        x.CHAITRA = 0;\r\n        x.JANUARY = 0;\r\n        x.FEBRUARY = 0;\r\n        x.MARCH = 0;\r\n        x.APRIL = 0;\r\n        x.MAY = 0;\r\n        x.JUNE = 0;\r\n        x.JULY = 0;\r\n        x.AUGUST = 0;\r\n        x.SEPTEMBER = 0;\r\n        x.OCTOBER = 0;\r\n        x.NOVEMBER = 0;\r\n        x.DECEMBER = 0;\r\n        x.BUDGET = 0;\r\n      })\r\n      this.DetailList = [] as Array<BudgetData>;\r\n    } else if (this.BudgetObj.BUDGET_INTERVAL == \"QUARTERLY\") {\r\n      this.is_yearly = false;\r\n      this.is_quaterly = true;\r\n      this.is_monthly = false;\r\n      this.onChangeYa();\r\n      this.temp_DetailList && this.temp_DetailList.length && this.temp_DetailList.forEach(x => {\r\n        x.BAISAKH = 0;\r\n        x.JESTHA = 0;\r\n        x.ASAR = 0;\r\n        x.SHRAWAN = 0;\r\n        x.BHADRA = 0;\r\n        x.ASHOJ = 0;\r\n        x.KARTIK = 0;\r\n        x.MANGSIR = 0;\r\n        x.POUSH = 0;\r\n        x.MAGH = 0;\r\n        x.FALGUN = 0;\r\n        x.CHAITRA = 0;\r\n        x.JANUARY = 0;\r\n        x.FEBRUARY = 0;\r\n        x.MARCH = 0;\r\n        x.APRIL = 0;\r\n        x.MAY = 0;\r\n        x.JUNE = 0;\r\n        x.JULY = 0;\r\n        x.AUGUST = 0;\r\n        x.SEPTEMBER = 0;\r\n        x.OCTOBER = 0;\r\n        x.NOVEMBER = 0;\r\n        x.DECEMBER = 0;\r\n        x.BUDGET = 0;\r\n      });\r\n      this.DetailList = [] as Array<BudgetData>;\r\n    } else if (this.BudgetObj.BUDGET_INTERVAL == \"MONTHLY\") {\r\n      this.is_yearly = false;\r\n      this.is_quaterly = false;\r\n      this.is_monthly = true;\r\n      this.onChangeYa();\r\n      this.temp_DetailList && this.temp_DetailList.length && this.temp_DetailList.forEach(x => {\r\n        x.SHRAWAN_ASHOJ = 0;\r\n        x.KARTIK_POUSH = 0;\r\n        x.MAGH_CHAITRA = 0;\r\n        x.BAISAKH_ASAR = 0;\r\n        x.JULY_SEPTEMBER = 0;\r\n        x.OCTOBER_DECEMBER = 0;\r\n        x.JANUARY_MARCH = 0;\r\n        x.APRIL_JUNE = 0;\r\n        x.BAISAKH = 0;\r\n        x.JESTHA = 0;\r\n        x.ASAR = 0;\r\n        x.SHRAWAN = 0;\r\n        x.BHADRA = 0;\r\n        x.ASHOJ = 0;\r\n        x.KARTIK = 0;\r\n        x.MANGSIR = 0;\r\n        x.POUSH = 0;\r\n        x.MAGH = 0;\r\n        x.FALGUN = 0;\r\n        x.CHAITRA = 0;\r\n        x.JANUARY = 0;\r\n        x.FEBRUARY = 0;\r\n        x.MARCH = 0;\r\n        x.APRIL = 0;\r\n        x.MAY = 0;\r\n        x.JUNE = 0;\r\n        x.JULY = 0;\r\n        x.AUGUST = 0;\r\n        x.SEPTEMBER = 0;\r\n        x.OCTOBER = 0;\r\n        x.NOVEMBER = 0;\r\n        x.DECEMBER = 0;\r\n        x.BUDGET = 0;\r\n      });\r\n      this.DetailList = [] as Array<BudgetData>;\r\n    }\r\n  }\r\n  getSubgroupC(e) {\r\n    let subGroupID = e.target.value;\r\n    this.parentGroupID = subGroupID;\r\n    this.AccountService.getSubGroupList(this.masterService.groupSelectObj.SUBGROUP_B).subscribe((res) => {\r\n      if (res.length > 0) {\r\n        this.masterService.subGroupCList = res;\r\n        this.masterService.disableSubGroupC = false;\r\n      } else {\r\n        this.masterService.subGroupCList = [];\r\n        this.masterService.disableSubGroupC = true;\r\n        this.masterService.groupSelectObj.SUBGROUP_C = \"\";\r\n      }\r\n    })\r\n\r\n    this.masterService.getAcidWiseAccountList(subGroupID).subscribe(res => {\r\n      if (res.status == \"ok\") {\r\n        this.AccountService.partyList = res ? res.result : [];\r\n      }\r\n      else {\r\n        this.AccountService.partyList = [];\r\n      }\r\n    })\r\n  }\r\n\r\n  selectSubgroupC(e) {\r\n    let subGroupID = e.target.value;\r\n    this.parentGroupID = subGroupID;\r\n    this.masterService.getAcidWiseAccountList(this.masterService.groupSelectObj.SUBGROUP_C).subscribe(res => {\r\n      if (res.status == \"ok\") {\r\n        this.AccountService.partyList = res ? res.result : [];\r\n      }\r\n      else {\r\n        this.AccountService.partyList = [];\r\n      }\r\n    })\r\n  }\r\n\r\n  onChangeYa() {\r\n\r\n    if (this.BudgetObj.INTERVAL_ON_AD_OR_BS == \"BSINTERVAL\") {\r\n      this.genericTableList = [\r\n        {\r\n          header: 'So No.',\r\n          inputType: 'text',\r\n          hidden: false,\r\n          headerNgStyle: { width: \"4%\" },\r\n        },\r\n        {\r\n          header: 'Account Group',\r\n          inputType: 'text',\r\n          hidden: false,\r\n          headerNgStyle: { width: \"15%\" },\r\n        },\r\n        {\r\n          header: 'Account Ledger',\r\n          inputType: 'text',\r\n          hidden: false,\r\n          headerNgStyle: { width: \"15%\" },\r\n        },\r\n\r\n        {\r\n          header: 'Shrawan-Ashoj',\r\n          inputType: 'number',\r\n          hidden: this.is_yearly || this.is_monthly,\r\n          headerNgStyle: { width: \"15%\" },\r\n        },\r\n        {\r\n          header: 'Kartik-Poush',\r\n          inputType: 'number',\r\n          hidden: this.is_yearly || this.is_monthly,\r\n          headerNgStyle: { width: \"15%\" },\r\n        },\r\n        {\r\n          header: 'Magh-Chaitra',\r\n          inputType: 'number',\r\n          hidden: this.is_yearly || this.is_monthly,\r\n          headerNgStyle: { width: \"15%\" },\r\n        },\r\n        {\r\n          header: 'Baisakh-Asar',\r\n          inputType: 'number',\r\n          hidden: this.is_yearly || this.is_monthly,\r\n          headerNgStyle: { width: \"15%\" },\r\n        },\r\n\r\n        {\r\n          header: 'Shrawan',\r\n          inputType: 'number',\r\n          hidden: this.is_yearly || this.is_quaterly,\r\n          headerNgStyle: { width: \"73px\" },\r\n        },\r\n        {\r\n          header: 'Bhadra',\r\n          inputType: 'number',\r\n          hidden: this.is_yearly || this.is_quaterly,\r\n          headerNgStyle: { width: \"73px\" },\r\n        },\r\n        {\r\n          header: 'Ashoj',\r\n          inputType: 'number',\r\n          hidden: this.is_yearly || this.is_quaterly,\r\n          headerNgStyle: { width: \"73px\" },\r\n        },\r\n        {\r\n          header: 'Kartik',\r\n          inputType: 'number',\r\n          hidden: this.is_yearly || this.is_quaterly,\r\n          headerNgStyle: { width: \"73px\" },\r\n        },\r\n        {\r\n          header: 'Mangsir',\r\n          inputType: 'number',\r\n          hidden: this.is_yearly || this.is_quaterly,\r\n          headerNgStyle: { width: \"73px\" },\r\n        },\r\n        {\r\n          header: 'Poush',\r\n          inputType: 'number',\r\n          hidden: this.is_yearly || this.is_quaterly,\r\n          headerNgStyle: { width: \"73px\" },\r\n        },\r\n\r\n        {\r\n          header: 'Magh',\r\n          inputType: 'number',\r\n          hidden: this.is_yearly || this.is_quaterly,\r\n          headerNgStyle: { width: \"73px\" },\r\n        },\r\n\r\n        {\r\n          header: 'Falgun',\r\n          inputType: 'number',\r\n          hidden: this.is_yearly || this.is_quaterly,\r\n          headerNgStyle: { width: \"73px\" },\r\n        },\r\n\r\n        {\r\n          header: 'Chaitra',\r\n          inputType: 'number',\r\n          hidden: this.is_yearly || this.is_quaterly,\r\n          headerNgStyle: { width: \"73px\" },\r\n        },\r\n        {\r\n          header: 'Baisakh',\r\n          inputType: 'number',\r\n          hidden: this.is_yearly || this.is_quaterly,\r\n          headerNgStyle: { width: \"73px\" },\r\n        },\r\n        {\r\n          header: 'Jestha',\r\n          inputType: 'number',\r\n          hidden: this.is_yearly || this.is_quaterly,\r\n          headerNgStyle: { width: \"73px\" },\r\n        },\r\n        {\r\n          header: 'Asar',\r\n          inputType: 'number',\r\n          hidden: this.is_yearly || this.is_quaterly,\r\n          headerNgStyle: { width: \"73px\" },\r\n        },\r\n        {\r\n          header: 'Amount',\r\n          inputType: 'number',\r\n          hidden: false,\r\n          headerNgStyle: { width: \"15%\" },\r\n        },\r\n\r\n      ]\r\n      this.temp_DetailList && this.temp_DetailList.length && this.temp_DetailList.forEach(x => {\r\n        x.JULY_SEPTEMBER = 0;\r\n        x.OCTOBER_DECEMBER = 0;\r\n        x.JANUARY_MARCH = 0;\r\n        x.APRIL_JUNE = 0;\r\n        x.JANUARY = 0;\r\n        x.FEBRUARY = 0;\r\n        x.MARCH = 0;\r\n        x.APRIL = 0;\r\n        x.MAY = 0;\r\n        x.JUNE = 0;\r\n        x.JULY = 0;\r\n        x.AUGUST = 0;\r\n        x.SEPTEMBER = 0;\r\n        x.OCTOBER = 0;\r\n        x.NOVEMBER = 0;\r\n        x.DECEMBER = 0;\r\n        x.BUDGET = 0;\r\n      })\r\n    } else {\r\n      this.genericTableList = [\r\n        {\r\n          header: 'So No.',\r\n          inputType: 'text',\r\n          hidden: false,\r\n          headerNgStyle: { width: \"4%\" },\r\n        },\r\n        {\r\n          header: 'Account Group',\r\n          inputType: 'text',\r\n          hidden: false,\r\n          headerNgStyle: { width: \"15%\" },\r\n        },\r\n        {\r\n          header: 'Account Ledger',\r\n          inputType: 'text',\r\n          hidden: false,\r\n          headerNgStyle: { width: \"15%\" },\r\n        },\r\n        {\r\n          header: 'July-Sept',\r\n          inputType: 'number',\r\n          hidden: this.is_yearly || this.is_monthly,\r\n          headerNgStyle: { width: \"15%\" },\r\n        },\r\n        {\r\n          header: 'Oct-Dec',\r\n          inputType: 'number',\r\n          hidden: this.is_yearly || this.is_monthly,\r\n          headerNgStyle: { width: \"15%\" },\r\n        },\r\n        {\r\n          header: 'Jan-Mar',\r\n          inputType: 'number',\r\n          hidden: this.is_yearly || this.is_monthly,\r\n          headerNgStyle: { width: \"15%\" },\r\n        },\r\n        {\r\n          header: 'Apr-Jun',\r\n          inputType: 'number',\r\n          hidden: this.is_yearly || this.is_monthly,\r\n          headerNgStyle: { width: \"15%\" },\r\n        },\r\n\r\n        {\r\n          header: 'Apr',\r\n          inputType: 'number',\r\n          hidden: this.is_yearly || this.is_quaterly,\r\n          headerNgStyle: { width: \"73px\" },\r\n        },\r\n        {\r\n          header: 'May',\r\n          inputType: 'number',\r\n          hidden: this.is_yearly || this.is_quaterly,\r\n          headerNgStyle: { width: \"73px\" },\r\n        },\r\n        {\r\n          header: 'Jun',\r\n          inputType: 'number',\r\n          hidden: this.is_yearly || this.is_quaterly,\r\n          headerNgStyle: { width: \"73px\" },\r\n        },\r\n        {\r\n          header: 'Jul',\r\n          inputType: 'number',\r\n          hidden: this.is_yearly || this.is_quaterly,\r\n          headerNgStyle: { width: \"73px\" },\r\n        },\r\n        {\r\n          header: 'Aug',\r\n          inputType: 'number',\r\n          hidden: this.is_yearly || this.is_quaterly,\r\n          headerNgStyle: { width: \"73px\" },\r\n        },\r\n        {\r\n          header: 'Sept',\r\n          inputType: 'number',\r\n          hidden: this.is_yearly || this.is_quaterly,\r\n          headerNgStyle: { width: \"73px\" },\r\n        },\r\n        {\r\n          header: 'Oct',\r\n          inputType: 'number',\r\n          hidden: this.is_yearly || this.is_quaterly,\r\n          headerNgStyle: { width: \"73px\" },\r\n        },\r\n        {\r\n          header: 'Nov',\r\n          inputType: 'number',\r\n          hidden: this.is_yearly || this.is_quaterly,\r\n          headerNgStyle: { width: \"73px\" },\r\n        },\r\n\r\n        {\r\n          header: 'Dec',\r\n          inputType: 'number',\r\n          hidden: this.is_yearly || this.is_quaterly,\r\n          headerNgStyle: { width: \"73px\" },\r\n        },\r\n        {\r\n          header: 'Jan',\r\n          inputType: 'number',\r\n          hidden: this.is_yearly || this.is_quaterly,\r\n          headerNgStyle: { width: \"73px\" },\r\n        },\r\n        {\r\n          header: 'Feb',\r\n          inputType: 'number',\r\n          hidden: this.is_yearly || this.is_quaterly,\r\n          headerNgStyle: { width: \"73px\" },\r\n        },\r\n        {\r\n          header: 'Mar',\r\n          inputType: 'number',\r\n          hidden: this.is_yearly || this.is_quaterly,\r\n          headerNgStyle: { width: \"73px\" },\r\n        },\r\n        {\r\n          header: 'Amount',\r\n          inputType: 'number',\r\n          hidden: false,\r\n          headerNgStyle: { width: \"15%\" },\r\n        },\r\n      ]\r\n      this.temp_DetailList && this.temp_DetailList.length && this.temp_DetailList.forEach(x => {\r\n        x.SHRAWAN_ASHOJ = 0;\r\n        x.KARTIK_POUSH = 0;\r\n        x.MAGH_CHAITRA = 0;\r\n        x.BAISAKH_ASAR = 0;\r\n        x.BAISAKH = 0;\r\n        x.JESTHA = 0;\r\n        x.ASAR = 0;\r\n        x.SHRAWAN = 0;\r\n        x.BHADRA = 0;\r\n        x.ASHOJ = 0;\r\n        x.KARTIK = 0;\r\n        x.MANGSIR = 0;\r\n        x.POUSH = 0;\r\n        x.MAGH = 0;\r\n        x.FALGUN = 0;\r\n        x.CHAITRA = 0;\r\n        x.BUDGET = 0;\r\n      })\r\n    }\r\n    this.BudgetObj.TOTAL_BUDGET = 0;\r\n  }\r\n\r\n  SelectionAction() {\r\n    if (this.BudgetObj.ACTION == \"WARN\" || this.BudgetObj.ACTION == \"STOP\") {\r\n      this.showActionCheckBox = true;\r\n      if (this.BudgetObj.BUDGET_INTERVAL == \"YEARLY\") {\r\n        this.BudgetObj.ACTION_TYPE = \"ANNUALLY\";\r\n      } else if (this.BudgetObj.BUDGET_INTERVAL == \"QUARTERLY\") {\r\n        this.BudgetObj.ACTION_TYPE = \"QUARTERLY\";\r\n      } else if (this.BudgetObj.BUDGET_INTERVAL == \"MONTHLY\") {\r\n        this.BudgetObj.ACTION_TYPE = \"MONTHLY\";\r\n      }\r\n    } else {\r\n      this.showActionCheckBox = false;\r\n      this.BudgetObj.ACTION_TYPE = \"\";\r\n    }\r\n  }\r\n\r\n  changeEntryDate(value, format: string) {\r\n    var adbs = require(\"ad-bs-converter\");\r\n    if (format == \"AD\") {\r\n      let yearValue = moment(value).year();\r\n      if (yearValue.toString().length == 4) {\r\n        var adDate = (value.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n        var bsDate = adbs.ad2bs(adDate);\r\n        bsDate.en.month = bsDate.en.month <= 9 ? \"0\" + (bsDate.en.month) : bsDate.en.month\r\n        this.BudgetObj.BSDATE =\r\n          this.masterService.toBSDate(value);\r\n      }\r\n    }\r\n    else if (format == \"BS\") {\r\n      var datearr = value.split('/');\r\n      const bsDate = datearr[2] + \"/\" + datearr[1] + \"/\" + datearr[0];\r\n      let yearValue = moment(value).year();\r\n      var adDate = adbs.bs2ad(bsDate);\r\n      this.BudgetObj.TRNDATE = this.masterService.toADDate(value);\r\n    }\r\n  }\r\n\r\n  changeFromDate(value, format: string) {\r\n    var adbs = require(\"ad-bs-converter\");\r\n    if (format == \"AD\") {\r\n      let yearValue = moment(value).year();\r\n      if (yearValue.toString().length == 4) {\r\n        var adDate = (value.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n        var bsDate = adbs.ad2bs(adDate);\r\n        bsDate.en.month = bsDate.en.month <= 9 ? \"0\" + (bsDate.en.month) : bsDate.en.month\r\n        this.BudgetObj.FROM_BSDATE =\r\n          this.masterService.toBSDate(value);\r\n      }\r\n    }\r\n    else if (format == \"BS\") {\r\n      var datearr = value.split('/');\r\n      const bsDate = datearr[2] + \"/\" + datearr[1] + \"/\" + datearr[0];\r\n      let yearValue = moment(value).year();\r\n      var adDate = adbs.bs2ad(bsDate);\r\n      this.BudgetObj.FROM_DATE = this.masterService.toADDate(value);\r\n    }\r\n  }\r\n\r\n  changeToDate(value, format: string) {\r\n    var adbs = require(\"ad-bs-converter\");\r\n    if (format == \"AD\") {\r\n      let yearValue = moment(value).year();\r\n      if (yearValue.toString().length == 4) {\r\n        var adDate = (value.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n        var bsDate = adbs.ad2bs(adDate);\r\n        bsDate.en.month = bsDate.en.month <= 9 ? \"0\" + (bsDate.en.month) : bsDate.en.month\r\n        this.BudgetObj.TO_BSDATE =\r\n          this.masterService.toBSDate(value);\r\n      }\r\n    }\r\n    else if (format == \"BS\") {\r\n      var datearr = value.split('/');\r\n      const bsDate = datearr[2] + \"/\" + datearr[1] + \"/\" + datearr[0];\r\n      let yearValue = moment(value).year();\r\n      var adDate = adbs.bs2ad(bsDate);\r\n      this.BudgetObj.TO_DATE = this.masterService.toADDate(value);\r\n    }\r\n  }\r\n  AccountGroupClick(i: number) {\r\n    this.AccountService.partyList.forEach(x => {\r\n      if (x.IS_CHECKED == true) {\r\n        x.IS_CHECKED = false;\r\n      }\r\n    });\r\n    this.masterService.groupSelectObj.MGROUP = \"\"\r\n    this.showPopup = true\r\n    this.accountGroupreplaceIndex = i;\r\n  }\r\n  Close() {\r\n    this.showPopup = false;\r\n    this.displayBudgetImportPopUp = false;\r\n    this.selectedFileNames = [];\r\n    this.fileToImport=null;\r\n\r\n  }\r\n  replaceAccountGroup() {\r\n    if (this.accountGroupreplaceIndex >= 0) this.temp_DetailList.splice(this.accountGroupreplaceIndex, 1);\r\n  }\r\n  @HostListener(\"document : keydown\", [\"$event\"])\r\n  handleKeyDownboardEvent($event: KeyboardEvent) {\r\n    if ($event.code == \"Escape\") {\r\n      $event.preventDefault();\r\n      this.Close();\r\n    }else if($event.code == 'F6'){\r\n      $event.preventDefault();\r\n      this.showPopup = false;\r\n      this.saveClick();\r\n    }else if($event.code == 'F10'){\r\n      $event.preventDefault();\r\n      this.router.navigate(['/pages/account/AccountLedger/budget-master']);\r\n    }else if($event.code == 'F3'){\r\n      $event.preventDefault();\r\n      this.reset();\r\n    }else if($event.key === '-'){\r\n      const targetElement = $event.target as HTMLInputElement;\r\n      const inputType = targetElement.type;\r\n      if (inputType === 'number') {    \r\n        $event.preventDefault();\r\n      }\r\n    }\r\n  }\r\n\r\n  // @HostListener(\"document : keyup\", [\"$event\"])\r\n  // handleKeyUpboardEvent($event: KeyboardEvent) {\r\n  //   if ($event.code == \"ShiftLeft\" || $event.code == \"ShiftRight\") {\r\n  //     $event.preventDefault();\r\n  //     this.displaySecondaryButton = true;\r\n  //   }\r\n  //   if ($event.code == \"Delete\") {\r\n  //     $event.preventDefault();\r\n  //     this.displaySecondaryButton = false;\r\n  //   }\r\n  // }\r\n\r\n  rowClick(i) {\r\n    this.selectedIndex = i;\r\n  }\r\n  AccountEnterClicked(event: any) {\r\n    this.gridPopupSettingsForAccountLedgerList = this.masterService.getGenericGridPopUpSettings('AccountLedgerListForReport');\r\n    this.genericGridAccountLedger.show();\r\n  }\r\n  dblClickAccountSelect(account) {\r\n    this.temp_DetailList[this.selectedIndex].ACID = account.ACID;\r\n    this.temp_DetailList[this.selectedIndex].ACNAME = account.ACNAME;\r\n  }\r\n\r\n  ChooseInterval() {\r\n    if (this.BudgetObj.MODE == \"EDIT\") {\r\n      if (confirm(\"All previously allocated budget's amount will be reset. Are you sure you want to change interval?\")) {\r\n\r\n      } else {\r\n        setTimeout(() => {\r\n          this.BudgetObj.BUDGET_INTERVAL = this.edit_budg_interval;\r\n        }, 100)\r\n        return;\r\n      }\r\n    }\r\n    this.BudgetObj.TOTAL_BUDGET = 0;\r\n    this.costcenterDetailListTotal = 0;\r\n    // if (this.BudgetObj.BUDGET_INTERVAL == \"YEARLY\") {\r\n    //   this.is_yearly = true;\r\n    //   this.is_quaterly = false;\r\n    //   this.is_monthly = false;\r\n    //   this.onChangeYa();\r\n    //   this.temp_DetailList && this.temp_DetailList.length && this.temp_DetailList.forEach(x => {\r\n    //     x.SHRAWAN_ASHOJ = 0;\r\n    //     x.KARTIK_POUSH = 0;\r\n    //     x.MAGH_CHAITRA = 0;\r\n    //     x.BAISAKH_ASAR = 0;\r\n    //     x.JULY_SEPTEMBER = 0;\r\n    //     x.OCTOBER_DECEMBER = 0;\r\n    //     x.JANUARY_MARCH = 0;\r\n    //     x.APRIL_JUNE = 0;\r\n    //     x.BAISAKH = 0;\r\n    //     x.JESTHA = 0;\r\n    //     x.ASAR = 0;\r\n    //     x.SHRAWAN = 0;\r\n    //     x.BHADRA = 0;\r\n    //     x.ASHOJ = 0;\r\n    //     x.KARTIK = 0;\r\n    //     x.MANGSIR = 0;\r\n    //     x.POUSH = 0;\r\n    //     x.MAGH = 0;\r\n    //     x.FALGUN = 0;\r\n    //     x.CHAITRA = 0;\r\n    //     x.JANUARY = 0;\r\n    //     x.FEBRUARY = 0;\r\n    //     x.MARCH = 0;\r\n    //     x.APRIL = 0;\r\n    //     x.MAY = 0;\r\n    //     x.JUNE = 0;\r\n    //     x.JULY = 0;\r\n    //     x.AUGUST = 0;\r\n    //     x.SEPTEMBER = 0;\r\n    //     x.OCTOBER = 0;\r\n    //     x.NOVEMBER = 0;\r\n    //     x.DECEMBER = 0;\r\n    //     x.BUDGET = 0;\r\n    //   })\r\n    //   this.DetailList = [] as Array<BudgetData>;\r\n    // } else if (this.BudgetObj.BUDGET_INTERVAL == \"QUARTERLY\") {\r\n    //   this.is_yearly = false;\r\n    //   this.is_quaterly = true;\r\n    //   this.is_monthly = false;\r\n    //   this.onChangeYa();\r\n    //   this.temp_DetailList && this.temp_DetailList.length && this.temp_DetailList.forEach(x => {\r\n    //     x.BAISAKH = 0;\r\n    //     x.JESTHA = 0;\r\n    //     x.ASAR = 0;\r\n    //     x.SHRAWAN = 0;\r\n    //     x.BHADRA = 0;\r\n    //     x.ASHOJ = 0;\r\n    //     x.KARTIK = 0;\r\n    //     x.MANGSIR = 0;\r\n    //     x.POUSH = 0;\r\n    //     x.MAGH = 0;\r\n    //     x.FALGUN = 0;\r\n    //     x.CHAITRA = 0;\r\n    //     x.JANUARY = 0;\r\n    //     x.FEBRUARY = 0;\r\n    //     x.MARCH = 0;\r\n    //     x.APRIL = 0;\r\n    //     x.MAY = 0;\r\n    //     x.JUNE = 0;\r\n    //     x.JULY = 0;\r\n    //     x.AUGUST = 0;\r\n    //     x.SEPTEMBER = 0;\r\n    //     x.OCTOBER = 0;\r\n    //     x.NOVEMBER = 0;\r\n    //     x.DECEMBER = 0;\r\n    //     x.BUDGET = 0;\r\n    //   });\r\n    //   this.DetailList = [] as Array<BudgetData>;\r\n    // } else if (this.BudgetObj.BUDGET_INTERVAL == \"MONTHLY\") {\r\n    //   this.is_yearly = false;\r\n    //   this.is_quaterly = false;\r\n    //   this.is_monthly = true;\r\n    //   this.onChangeYa();\r\n    //   this.temp_DetailList && this.temp_DetailList.length && this.temp_DetailList.forEach(x => {\r\n    //     x.SHRAWAN_ASHOJ = 0;\r\n    //     x.KARTIK_POUSH = 0;\r\n    //     x.MAGH_CHAITRA = 0;\r\n    //     x.BAISAKH_ASAR = 0;\r\n    //     x.JULY_SEPTEMBER = 0;\r\n    //     x.OCTOBER_DECEMBER = 0;\r\n    //     x.JANUARY_MARCH = 0;\r\n    //     x.APRIL_JUNE = 0;\r\n    //     x.BAISAKH = 0;\r\n    //     x.JESTHA = 0;\r\n    //     x.ASAR = 0;\r\n    //     x.SHRAWAN = 0;\r\n    //     x.BHADRA = 0;\r\n    //     x.ASHOJ = 0;\r\n    //     x.KARTIK = 0;\r\n    //     x.MANGSIR = 0;\r\n    //     x.POUSH = 0;\r\n    //     x.MAGH = 0;\r\n    //     x.FALGUN = 0;\r\n    //     x.CHAITRA = 0;\r\n    //     x.JANUARY = 0;\r\n    //     x.FEBRUARY = 0;\r\n    //     x.MARCH = 0;\r\n    //     x.APRIL = 0;\r\n    //     x.MAY = 0;\r\n    //     x.JUNE = 0;\r\n    //     x.JULY = 0;\r\n    //     x.AUGUST = 0;\r\n    //     x.SEPTEMBER = 0;\r\n    //     x.OCTOBER = 0;\r\n    //     x.NOVEMBER = 0;\r\n    //     x.DECEMBER = 0;\r\n    //     x.BUDGET = 0;\r\n    //   });\r\n    //   this.DetailList = [] as Array<BudgetData>;\r\n    // }\r\nthis.assigningNewSet();\r\n    // else {\r\n    //   return false\r\n\r\n    // }\r\n\r\n  }\r\n\r\n  saveClick() {\r\n\r\n    if (this.BudgetObj.BUDGET_NAME === '' ||\r\n      this.BudgetObj.BUDGET_NAME === null ||\r\n      this.BudgetObj.BUDGET_NAME === undefined ||\r\n      this.BudgetObj.BUDGET_NAME.trim() === '') {\r\n      this.alertService.info(\"Please Enter Budget Name.\");\r\n      return;\r\n    }\r\n\r\n    if (this.temp_DetailList[0].ACCOUNTGROUP_ID == null || this.temp_DetailList[0].ACCOUNTGROUP_ID == undefined) {\r\n      this.alertService.info(\"Please select account ledger\");\r\n      return;\r\n    }\r\n    if (this.temp_DetailList.length > 0) {\r\n      let emptyAmountLedger = this.temp_DetailList.find((budget) => (budget.BUDGET == 0 || budget.BUDGET == undefined || budget.BUDGET == null) && (budget.ACCOUNTGROUP_ID != undefined || budget.ACCOUNTGROUP_ID != null));\r\n      if (emptyAmountLedger) {\r\n        this.alertService.info(\"Please Enter Amount in Ledger \" + emptyAmountLedger.ACNAME);\r\n        return;\r\n      }\r\n    }\r\n\r\n    if (this.BudgetObj.SUBDIVIDED_BY == \"DONOT_SUBDIVIDE\") {\r\n      this.DetailList = this.temp_DetailList.filter(x => x.BUDGET > 0);\r\n    } else {\r\n      if (this.BudgetObj.CCID != null && this.BudgetObj.CCID != undefined && this.BudgetObj.CCID != \"\") {\r\n        if (this.temp_DetailList.length > 0) {\r\n          if (this.temp_DetailList[0].ACID != null) {\r\n            this.alertService.info(\"Please add the data of the table to save.\");\r\n            return;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    // if (this.DetailList.length == 0) {\r\n    //   this.alertService.info(\"No data to save!\");\r\n    //   return false;\r\n    // }\r\n    if (!this.BudgetObj.TRNDATE) {\r\n      this.BudgetObj.TRNDATE = new Date().toJSON().split('T')[0];\r\n      this.changeEntryDate(this.BudgetObj.TRNDATE, 'AD');\r\n    }\r\n    if (!this.BudgetObj.FROM_DATE) {\r\n      this.BudgetObj.FROM_DATE = this.masterService.PhiscalObj.BeginDate.split('T')[0];\r\n      this.changeFromDate(this.BudgetObj.FROM_DATE, 'AD');\r\n    }\r\n    if (!this.BudgetObj.TO_DATE) {\r\n      this.BudgetObj.TO_DATE = this.masterService.PhiscalObj.EndDate.split('T')[0];\r\n      this.changeToDate(this.BudgetObj.TO_DATE, 'AD');\r\n    }\r\n\r\n    this.CalculateFinalSum();\r\n    this.BudgetObj.DIVISION = this.userProfile.division;\r\n    this.BudgetObj.PHISCALID = this.userProfile.PhiscalYearInfo.PhiscalID;\r\n    this.BudgetObj.COMPANYID = this.userProfile.CompanyInfo.COMPANYID;\r\n    this.BudgetObj.CURRENT_YEAR = \"20\" + this.userProfile.PhiscalYearInfo.PhiscalID.split(\"/\")[0];\r\n    this.BudgetObj.NEXT_YEAR = \"20\" + this.userProfile.PhiscalYearInfo.PhiscalID.split(\"/\")[1];\r\n    this.BudgetObj.BEGINDATE = this.masterService.PhiscalObj.BeginDate.split('T')[0];\r\n    this.BudgetObj.ENDDATE = this.masterService.PhiscalObj.EndDate.split('T')[0];\r\n    this.changeFromDate(this.BudgetObj.FROM_DATE, \"AD\");\r\n    this.changeToDate(this.BudgetObj.TO_DATE, \"AD\");\r\n    this.SaveBudgetAllocationObj = this.BudgetObj;\r\n    this.SaveBudgetAllocationObj.BudgetDataList = this.DetailList;\r\n    this.SaveBudgetAllocationObj.BudgetDataList.forEach(x => {\r\n      //Budget Allocation data prepare starts\r\n      x.VCHRNO = this.BudgetObj.VCHRNO;\r\n      x.DIVISION = this.userProfile.division;\r\n      x.PHISCALID = this.userProfile.PhiscalYearInfo.PhiscalID;\r\n      x.COMPANYID = this.userProfile.CompanyInfo.COMPANYID;\r\n    })\r\n\r\n    let bodyData = { data: this.SaveBudgetAllocationObj, MODE: this.BudgetObj.MODE };\r\n    this.masterService.saveBudgetAllocation(bodyData).subscribe(x => {\r\n      if (x.status == \"ok\") {\r\n        this.reset();\r\n        this.alertService.info(\"Saved Successfully.\");\r\n        this.returnUrl = \"/pages/account/AccountLedger/budget-master\";\r\n        this.router.navigate([this.returnUrl]);\r\n\r\n      } else {\r\n        var _error = JSON.parse(x.result._body);\r\n        this.alertService.error(_error.result);\r\n      }\r\n    }), err => {\r\n      this.alertService.error(err);\r\n    }\r\n  }\r\n\r\n  CalculateSum() {\r\n    this.BudgetObj.TOTAL_BUDGET = 0;\r\n    this.temp_DetailList.forEach(x => {\r\n      if (this.BudgetObj.BUDGET_INTERVAL == \"QUARTERLY\") {\r\n        if (this.BudgetObj.INTERVAL_ON_AD_OR_BS == \"BSINTERVAL\") {\r\n          x.BUDGET = this._transactionService.nullToZeroConverter(x.SHRAWAN_ASHOJ) + this._transactionService.nullToZeroConverter(x.KARTIK_POUSH) +\r\n            this._transactionService.nullToZeroConverter(x.MAGH_CHAITRA) + this._transactionService.nullToZeroConverter(x.BAISAKH_ASAR);\r\n        } else if (this.BudgetObj.INTERVAL_ON_AD_OR_BS == \"ADINTERVAL\") {\r\n          x.BUDGET = this._transactionService.nullToZeroConverter(x.JULY_SEPTEMBER) + this._transactionService.nullToZeroConverter(x.OCTOBER_DECEMBER) +\r\n            this._transactionService.nullToZeroConverter(x.JANUARY_MARCH) + this._transactionService.nullToZeroConverter(x.APRIL_JUNE);\r\n        }\r\n      } else if (this.BudgetObj.BUDGET_INTERVAL == \"MONTHLY\") {\r\n        if (this.BudgetObj.INTERVAL_ON_AD_OR_BS == \"BSINTERVAL\") {\r\n          x.BUDGET = this._transactionService.nullToZeroConverter(x.BAISAKH) + this._transactionService.nullToZeroConverter(x.JESTHA) +\r\n            this._transactionService.nullToZeroConverter(x.ASAR) + this._transactionService.nullToZeroConverter(x.SHRAWAN) +\r\n            this._transactionService.nullToZeroConverter(x.BHADRA) + this._transactionService.nullToZeroConverter(x.ASHOJ) +\r\n            this._transactionService.nullToZeroConverter(x.KARTIK) + this._transactionService.nullToZeroConverter(x.MANGSIR) +\r\n            this._transactionService.nullToZeroConverter(x.POUSH) + this._transactionService.nullToZeroConverter(x.MAGH) +\r\n            this._transactionService.nullToZeroConverter(x.FALGUN) + this._transactionService.nullToZeroConverter(x.CHAITRA);\r\n        } else if (this.BudgetObj.INTERVAL_ON_AD_OR_BS == \"ADINTERVAL\") {\r\n          x.BUDGET = this._transactionService.nullToZeroConverter(x.JANUARY) + this._transactionService.nullToZeroConverter(x.FEBRUARY) +\r\n            this._transactionService.nullToZeroConverter(x.MARCH) + this._transactionService.nullToZeroConverter(x.APRIL) +\r\n            this._transactionService.nullToZeroConverter(x.MAY) + this._transactionService.nullToZeroConverter(x.JUNE) +\r\n            this._transactionService.nullToZeroConverter(x.JULY) + this._transactionService.nullToZeroConverter(x.AUGUST) +\r\n            this._transactionService.nullToZeroConverter(x.SEPTEMBER) + this._transactionService.nullToZeroConverter(x.OCTOBER) +\r\n            this._transactionService.nullToZeroConverter(x.NOVEMBER) + this._transactionService.nullToZeroConverter(x.DECEMBER);\r\n        }\r\n      }\r\n    })\r\n    this.temp_DetailList.forEach(x => {\r\n      this.BudgetObj.TOTAL_BUDGET += this._transactionService.nullToZeroConverter(x.BUDGET);\r\n    });\r\n  }\r\n\r\n  CalculateFinalSum() {\r\n    this.BudgetObj.TOTAL_BUDGET = 0;\r\n    this.DetailList.forEach(x => {\r\n      if (this.BudgetObj.BUDGET_INTERVAL == \"QUARTERLY\") {\r\n        if (this.BudgetObj.INTERVAL_ON_AD_OR_BS == \"BSINTERVAL\") {\r\n          x.BUDGET = this._transactionService.nullToZeroConverter(x.SHRAWAN_ASHOJ) + this._transactionService.nullToZeroConverter(x.KARTIK_POUSH) +\r\n            this._transactionService.nullToZeroConverter(x.MAGH_CHAITRA) + this._transactionService.nullToZeroConverter(x.BAISAKH_ASAR);\r\n        } else if (this.BudgetObj.INTERVAL_ON_AD_OR_BS == \"ADINTERVAL\") {\r\n          x.BUDGET = this._transactionService.nullToZeroConverter(x.JULY_SEPTEMBER) + this._transactionService.nullToZeroConverter(x.OCTOBER_DECEMBER) +\r\n            this._transactionService.nullToZeroConverter(x.JANUARY_MARCH) + this._transactionService.nullToZeroConverter(x.APRIL_JUNE);\r\n        }\r\n      } else if (this.BudgetObj.BUDGET_INTERVAL == \"MONTHLY\") {\r\n        if (this.BudgetObj.INTERVAL_ON_AD_OR_BS == \"BSINTERVAL\") {\r\n          x.BUDGET = this._transactionService.nullToZeroConverter(x.BAISAKH) + this._transactionService.nullToZeroConverter(x.JESTHA) +\r\n            this._transactionService.nullToZeroConverter(x.ASAR) + this._transactionService.nullToZeroConverter(x.SHRAWAN) +\r\n            this._transactionService.nullToZeroConverter(x.BHADRA) + this._transactionService.nullToZeroConverter(x.ASHOJ) +\r\n            this._transactionService.nullToZeroConverter(x.KARTIK) + this._transactionService.nullToZeroConverter(x.MANGSIR) +\r\n            this._transactionService.nullToZeroConverter(x.POUSH) + this._transactionService.nullToZeroConverter(x.MAGH) +\r\n            this._transactionService.nullToZeroConverter(x.FALGUN) + this._transactionService.nullToZeroConverter(x.CHAITRA);\r\n        } else if (this.BudgetObj.INTERVAL_ON_AD_OR_BS == \"ADINTERVAL\") {\r\n          x.BUDGET = this._transactionService.nullToZeroConverter(x.JANUARY) + this._transactionService.nullToZeroConverter(x.FEBRUARY) +\r\n            this._transactionService.nullToZeroConverter(x.MARCH) + this._transactionService.nullToZeroConverter(x.APRIL) +\r\n            this._transactionService.nullToZeroConverter(x.MAY) + this._transactionService.nullToZeroConverter(x.JUNE) +\r\n            this._transactionService.nullToZeroConverter(x.JULY) + this._transactionService.nullToZeroConverter(x.AUGUST) +\r\n            this._transactionService.nullToZeroConverter(x.SEPTEMBER) + this._transactionService.nullToZeroConverter(x.OCTOBER) +\r\n            this._transactionService.nullToZeroConverter(x.NOVEMBER) + this._transactionService.nullToZeroConverter(x.DECEMBER);\r\n        }\r\n      }\r\n    })\r\n    this.DetailList.forEach(x => {\r\n      this.BudgetObj.TOTAL_BUDGET += this._transactionService.nullToZeroConverter(x.BUDGET);\r\n    });\r\n  }\r\n\r\n  PreFillDataClicked() {\r\n    let fiscal_Data = this.userProfile.PhiscalYearInfo.PhiscalID.split('/');\r\n    let previous_fiscal_front = fiscal_Data[0] - 1;\r\n    let previous_fiscal_back = fiscal_Data[0];\r\n    let previous_fiscalid = previous_fiscal_front + \"ZZ\" + previous_fiscal_back;\r\n    // let re = /\\//gi;\r\n    // let fiscalid = this.userProfile.PhiscalYearInfo.PhiscalID.replace(re, \"ZZ\");\r\n    let division = this.userProfile.division;\r\n    this.gridPopupSettingsForBudgetList = {\r\n      title: \"Budget List\",\r\n      apiEndpoints: `/getBudgetNameList/${previous_fiscalid}/${division}`,\r\n      defaultFilterIndex: 0,\r\n      columns: [\r\n        {\r\n          key: \"BUDGET_NUMBER\",\r\n          title: \"Budget No\",\r\n          hidden: false,\r\n          noSearch: false\r\n        },\r\n        {\r\n          key: \"BUDGET_NAME\",\r\n          title: \"Budget Name\",\r\n          hidden: false,\r\n          noSearch: false\r\n        }\r\n      ]\r\n    };\r\n    this.genericGridBudgetList.show();\r\n  }\r\n\r\n  dblClickBudgetSelect(value) {\r\n    this.BudgetObj.PREFILL_DATA = value.BUDGET_NAME;\r\n    this.masterService.LoadBudgetAllocation(value.VCHRNO)\r\n      .subscribe(data => {\r\n        if (data.status == 'ok') {\r\n          if (data.result && data.result.length && data.result.length > 0) {\r\n            this.BudgetObj.MODE = \"ADD\";\r\n            this.BudgetObj.BUDGET_NAME = data.result[0].BUDGET_NAME;\r\n            //this.BudgetObj.BUDGET_TYPE = data.result[0].BUDGET_TYPE;\r\n            this.BudgetObj.BUDGET_TYPE = data.result[0].BUDGET_TYPE;\r\n            this.BudgetObj.BUDGET_INTERVAL = data.result[0].BUDGET_INTERVAL;\r\n            this.BudgetObj.INTERVAL_ON_AD_OR_BS = data.result[0].INTERVAL_ON_AD_OR_BS;\r\n            this.BudgetObj.TRNDATE = data.result[0].TRNDATE;\r\n            this.BudgetObj.BSDATE = data.result[0].BSDATE;\r\n            this.BudgetObj.SUBDIVIDED_BY = data.result[0].SUBDIVIDED_BY;\r\n            this.BudgetObj.FROM_DATE = this.masterService.PhiscalObj.BeginDate.split('T')[0];\r\n            this.BudgetObj.TO_DATE = this.masterService.PhiscalObj.EndDate.split('T')[0];\r\n            this.changeFromDate(this.BudgetObj.FROM_DATE, \"AD\");\r\n            this.changeToDate(this.BudgetObj.TO_DATE, \"AD\");\r\n            this.BudgetObj.ACTION = data.result[0].ACTION;\r\n            this.BudgetObj.ACTION_TYPE = data.result[0].ACTION_TYPE;\r\n            this.ChooseInterval();\r\n            this.SelectionAction();\r\n\r\n          }\r\n          if (data.result2 && data.result2.length && data.result2.length > 0) {\r\n            this.temp_DetailList = [];\r\n            this.DetailList = [];\r\n            this.BudgetObj.COSTCENTER_CATEGORYID = data.result2[0].COSTCENTER_CATEGORYID;\r\n            this.BudgetObj.COSTCENTER_CATEGORYNAME = data.result2[0].COSTCENTER_CATEGORYNAME;\r\n            this.BudgetObj.CCID = data.result2[0].CCID;\r\n            this.BudgetObj.COSTCENTER_NAME = data.result2[0].COSTCENTER_NAME;\r\n            this.temp_DetailList = data.result2;\r\n            this.CalculateSum();\r\n          }\r\n          //this.addrow()\r\n        }\r\n      }, error => {\r\n\r\n      }\r\n      )\r\n\r\n  }\r\n\r\n  addrow(index) {\r\n    let _emptyrow = this.temp_DetailList.filter(x => x.ACID == null && (x.BUDGET == null || x.BUDGET == 0));\r\n    if (_emptyrow && _emptyrow.length && _emptyrow.length > 0) {\r\n      this.CalculateSum();\r\n      return;\r\n    }\r\n    let newRow = <BudgetData>{};\r\n    newRow.ACCOUNTGROUP_ID = null;\r\n    newRow.ACCOUNTGROUP_NAME = null;\r\n    newRow.ACID = null;\r\n    newRow.ACNAME = null;\r\n    newRow.BUDGET = null;\r\n    this.temp_DetailList.push(newRow);\r\n    this.CalculateSum();\r\n  }\r\n\r\n  preventInput($event) {\r\n    $event.preventDefault();\r\n    return false;\r\n  }\r\n\r\n  clearRow($event, index, value) {\r\n    $event.preventDefault();\r\n\r\n    if (confirm(\"Are you sure you want to delete the row?\")) {\r\n      if (this.temp_DetailList.length < 1) return;\r\n\r\n      if (this.temp_DetailList.length == 1) {\r\n        this.temp_DetailList.splice(index, 1);\r\n        this.addrow(index);\r\n        return;\r\n      } else {\r\n        this.temp_DetailList.splice(index, 1);\r\n        this.CalculateSum();\r\n      }\r\n    }\r\n  }\r\n\r\n  showCostCenterGroupList(i) {\r\n    this.selectedIndex = i;\r\n    this.gridCostCenterGroupListPopupSettings = {\r\n      title: \"Cost Centers Categories\",\r\n      apiEndpoints: `/getCostCenterGroupPagedList`,\r\n      defaultFilterIndex: 0,\r\n      columns: [\r\n        {\r\n          key: \"ccgid\",\r\n          title: \"ID\",\r\n          hidden: false,\r\n          noSearch: false\r\n        },\r\n        {\r\n          key: \"COSTCENTERGROUPNAME\",\r\n          title: \"Cost Center Category Name\",\r\n          hidden: false,\r\n          noSearch: false\r\n        },\r\n\r\n      ]\r\n    };\r\n    this.genericGridCostCenterGroupList.show();\r\n  }\r\n\r\n  exportTOExcel(dataList: any, excelFileName: string) {\r\n    var newArray: any[] = [];\r\n    newArray = Object.assign([], dataList);\r\n    Object.keys(newArray).forEach((key: any) => {\r\n      delete newArray[key].ACCOUNTGROUP_ID;\r\n      delete newArray[key].ACID;\r\n      delete newArray[key].CCID;\r\n      delete newArray[key].COSTCENTER_CATEGORYID;\r\n    })\r\n    // this.downloadFile(this.listOfData, 'transaction')\r\n    const ws: XLSX.WorkSheet = XLSX.utils.json_to_sheet(newArray);\r\n    const wb: XLSX.WorkBook = XLSX.utils.book_new();\r\n    XLSX.utils.book_append_sheet(wb, ws, \"ABC\");\r\n    /* save to file */\r\n    const excelBuffer: any = XLSX.write(wb, { bookType: 'xlsx', type: 'buffer' });\r\n    this.saveAsExcelFile(excelBuffer, excelFileName);\r\n  }\r\n\r\n  private saveAsExcelFile(buffer: any, fileName: string): void {\r\n    const data: Blob = new Blob([buffer], { type: EXCEL_TYPE });\r\n    FileSaver.saveAs(data, fileName + EXCEL_EXTENSION);\r\n  }\r\n\r\n\r\n  showCostCenterList() {\r\n    if (this.userSetting.EnableCompulsoryCostCategory == 1) {\r\n      let ccgid = this.BudgetObj.COSTCENTER_CATEGORYID;\r\n      this.gridCostCenterListPopupSettings = {\r\n        title: \"Cost Centers\",\r\n        apiEndpoints: `/getCostCenterPagedListAccordingToId/${ccgid}`,\r\n        defaultFilterIndex: 0,\r\n        columns: [\r\n          {\r\n            key: \"COSTCENTERNAME\",\r\n            title: \"Cost Center Name\",\r\n            hidden: false,\r\n            noSearch: false\r\n          }\r\n        ]\r\n      };\r\n    }\r\n    else {\r\n      this.gridCostCenterListPopupSettings = {\r\n        title: \"Cost Centers\",\r\n        apiEndpoints: `/getCostCenterPagedList`,\r\n        defaultFilterIndex: 0,\r\n        columns: [\r\n          {\r\n            key: \"COSTCENTERNAME\",\r\n            title: \"Cost Center Name\",\r\n            hidden: false,\r\n            noSearch: false\r\n          }\r\n        ]\r\n      };\r\n    }\r\n\r\n    this.genericGridCostCenterList.show();\r\n\r\n  }\r\n\r\n  // showCostCenterList() {\r\n  //   this.masterService.showCostCenterList().subscribe((res: any) => {\r\n  //     console.log('res', res)\r\n  //     this.costCenterList.push(res.data)\r\n  //     console.log('costCenterList', this.costCenterList)\r\n\r\n  //   })\r\n\r\n  // }\r\n\r\n\r\n  onCostCenterGroupSelect(category) {\r\n    this.BudgetObj.COSTCENTER_CATEGORYID = category.ccgid;\r\n    this.BudgetObj.COSTCENTER_CATEGORYNAME = category.COSTCENTERGROUPNAME;\r\n    this.BudgetObj.COSTCENTER_NAME = '';\r\n    this.BudgetObj.CCID = '';\r\n    let element = document.getElementById(\"costCenterInput\");\r\n    if (element) {\r\n      (<HTMLInputElement>element).focus();\r\n    }\r\n  }\r\n\r\n\r\n  onSubdivideByChange() {\r\n    if (this.BudgetObj.MODE == \"EDIT\") {\r\n      if (confirm(\"All previously allocated budget's amount will be reset. Are you sure you want to change Sub Divide Mode?\")) {\r\n\r\n      } else {\r\n        setTimeout(() => {\r\n          this.BudgetObj.SUBDIVIDED_BY = this.edit_sub_divided_by;\r\n        }, 100);\r\n        return;\r\n      }\r\n    }\r\n    this.disableAmt = false;\r\n    this.DetailList = [];\r\n    // this.temp_list_holder_array = [];\r\n    if (this.BudgetObj.SUBDIVIDED_BY == 'COSTCENTER') {\r\n      this.temp_DetailList && this.temp_DetailList.length && this.temp_DetailList.forEach(x => {\r\n        x.SHRAWAN_ASHOJ = 0;\r\n        x.KARTIK_POUSH = 0;\r\n        x.MAGH_CHAITRA = 0;\r\n        x.BAISAKH_ASAR = 0;\r\n        x.JULY_SEPTEMBER = 0;\r\n        x.OCTOBER_DECEMBER = 0;\r\n        x.JANUARY_MARCH = 0;\r\n        x.APRIL_JUNE = 0;\r\n        x.BAISAKH = 0;\r\n        x.JESTHA = 0;\r\n        x.ASAR = 0;\r\n        x.SHRAWAN = 0;\r\n        x.BHADRA = 0;\r\n        x.ASHOJ = 0;\r\n        x.KARTIK = 0;\r\n        x.MANGSIR = 0;\r\n        x.POUSH = 0;\r\n        x.MAGH = 0;\r\n        x.FALGUN = 0;\r\n        x.CHAITRA = 0;\r\n        x.JANUARY = 0;\r\n        x.FEBRUARY = 0;\r\n        x.MARCH = 0;\r\n        x.APRIL = 0;\r\n        x.MAY = 0;\r\n        x.JUNE = 0;\r\n        x.JULY = 0;\r\n        x.AUGUST = 0;\r\n        x.SEPTEMBER = 0;\r\n        x.OCTOBER = 0;\r\n        x.NOVEMBER = 0;\r\n        x.DECEMBER = 0;\r\n        x.BUDGET = 0;\r\n      });\r\n      this.BudgetObj.TOTAL_BUDGET = 0;\r\n      this.costcenterDetailListTotal = 0;\r\n    } else if (this.BudgetObj.SUBDIVIDED_BY == 'DONOT_SUBDIVIDE') {\r\n      this.temp_DetailList && this.temp_DetailList.length && this.temp_DetailList.forEach(x => {\r\n        x.SHRAWAN_ASHOJ = 0;\r\n        x.KARTIK_POUSH = 0;\r\n        x.MAGH_CHAITRA = 0;\r\n        x.BAISAKH_ASAR = 0;\r\n        x.JULY_SEPTEMBER = 0;\r\n        x.OCTOBER_DECEMBER = 0;\r\n        x.JANUARY_MARCH = 0;\r\n        x.APRIL_JUNE = 0;\r\n        x.BAISAKH = 0;\r\n        x.JESTHA = 0;\r\n        x.ASAR = 0;\r\n        x.SHRAWAN = 0;\r\n        x.BHADRA = 0;\r\n        x.ASHOJ = 0;\r\n        x.KARTIK = 0;\r\n        x.MANGSIR = 0;\r\n        x.POUSH = 0;\r\n        x.MAGH = 0;\r\n        x.FALGUN = 0;\r\n        x.CHAITRA = 0;\r\n        x.JANUARY = 0;\r\n        x.FEBRUARY = 0;\r\n        x.MARCH = 0;\r\n        x.APRIL = 0;\r\n        x.MAY = 0;\r\n        x.JUNE = 0;\r\n        x.JULY = 0;\r\n        x.AUGUST = 0;\r\n        x.SEPTEMBER = 0;\r\n        x.OCTOBER = 0;\r\n        x.NOVEMBER = 0;\r\n        x.DECEMBER = 0;\r\n        x.BUDGET = 0;\r\n        x.COSTCENTER_CATEGORYID = null;\r\n        x.COSTCENTER_CATEGORYNAME = null;\r\n        x.CCID = null;\r\n        x.COSTCENTER_NAME = null;\r\n      });\r\n      this.BudgetObj.COSTCENTER_CATEGORYID = null;\r\n      this.BudgetObj.CCID = null;\r\n      this.BudgetObj.COSTCENTER_NAME = null;\r\n      this.BudgetObj.COSTCENTER_CATEGORYNAME = null;\r\n      this.BudgetObj.TOTAL_BUDGET = 0;\r\n      this.costcenterDetailListTotal = 0;\r\n    }\r\n\r\n  }\r\n\r\n  onCostCenterSelect(costCenter) {\r\n    this.BudgetObj.CCID = costCenter.CCID;\r\n    // this.BudgetObj.CCID = costCenter.target.value;\r\n    this.BudgetObj.COSTCENTER_NAME = costCenter.COSTCENTERNAME;\r\n\r\n    let _data = this.DetailList.filter(x => x.CCID == costCenter.CCID);\r\n    if (_data && _data.length && _data.length > 0) {\r\n      this.temp_DetailList = [];\r\n      this.temp_DetailList = _data;\r\n      for (var a of _data) {\r\n        let _findIndex = this.DetailList.findIndex(x => x.CCID == costCenter.CCID);\r\n        if(this.BudgetObj.MODE != 'VIEW'){\r\n          if (_findIndex >= 0) {\r\n            this.DetailList.splice(_findIndex, 1);\r\n          }\r\n        }\r\n\r\n      }\r\n      this.CalculateSum();\r\n    } else {\r\n      this.temp_DetailList.forEach((x) => {\r\n        x.SHRAWAN_ASHOJ = 0;\r\n        x.KARTIK_POUSH = 0;\r\n        x.MAGH_CHAITRA = 0;\r\n        x.BAISAKH_ASAR = 0;\r\n        x.JULY_SEPTEMBER = 0;\r\n        x.OCTOBER_DECEMBER = 0;\r\n        x.JANUARY_MARCH = 0;\r\n        x.APRIL_JUNE = 0;\r\n        x.BAISAKH = 0;\r\n        x.JESTHA = 0;\r\n        x.ASAR = 0;\r\n        x.SHRAWAN = 0;\r\n        x.BHADRA = 0;\r\n        x.ASHOJ = 0;\r\n        x.KARTIK = 0;\r\n        x.MANGSIR = 0;\r\n        x.POUSH = 0;\r\n        x.MAGH = 0;\r\n        x.FALGUN = 0;\r\n        x.CHAITRA = 0;\r\n        x.JANUARY = 0;\r\n        x.FEBRUARY = 0;\r\n        x.MARCH = 0;\r\n        x.APRIL = 0;\r\n        x.MAY = 0;\r\n        x.JUNE = 0;\r\n        x.JULY = 0;\r\n        x.AUGUST = 0;\r\n        x.SEPTEMBER = 0;\r\n        x.OCTOBER = 0;\r\n        x.NOVEMBER = 0;\r\n        x.DECEMBER = 0;\r\n        x.BUDGET = 0;\r\n      });\r\n      this.CalculateSum();\r\n    }\r\n    if(this.BudgetObj.MODE == 'VIEW'){\r\n      this.disableAmt = true;\r\n    }else {\r\n      this.disableAmt = false;\r\n\r\n    }\r\n    this.focusNext(0, 'AccountGroupField');\r\n  }\r\n\r\n  showCostCenterGroupChange(costCentercategory) {\r\n    this.BudgetObj.COSTCENTER_CATEGORYID = costCentercategory.target.value;\r\n\r\n    if (this.userSetting.EnableCompulsoryCostCategory == 1) {\r\n\r\n      this.masterService.sendCostCenterList(costCentercategory.target.value).subscribe((res: any) => {\r\n        // this.costCenterList.push(res.data)\r\n        this.costCenterList = res.data;\r\n\r\n      })\r\n    }\r\n\r\n  }\r\n\r\n  nextrow(index, value) {\r\n    if (value.ACCOUNTGROUP_ID === \"\" || value.ACCOUNTGROUP_ID === null || value.ACCOUNTGROUP_ID === undefined ||\r\n      value.ACID === \"\" || value.ACID === null || value.ACID === undefined\r\n    ) {\r\n      this.alertService.info(\"Please enter all data.\");\r\n      return;\r\n    }\r\n    if (value.BUDGET === \"\" || value.BUDGET === null || value.BUDGET === undefined) {\r\n      this.alertService.info(\"Budget cannot be null or special characters\");\r\n      return;\r\n    }\r\n    this.addrow(index);\r\n    setTimeout(() => {\r\n      this.focusNext(index+1, 'AccountGroupField');\r\n    }, 50);\r\n  }\r\n\r\n  focusPrevious(rowIndex){\r\n    if(this.temp_DetailList[rowIndex-1]){\r\n      let sname = `accountgroup_${rowIndex - 1}`\r\n      let element = document.getElementById(sname);\r\n        if (element) {\r\n          setTimeout(function () {\r\n            (<HTMLInputElement>element).focus();\r\n            //(<HTMLInputElement>element).select();\r\n          }, 100)\r\n        }\r\n    }else {\r\n      return;\r\n    }\r\n  }\r\n\r\n  focusNext(index, inputField?) {\r\n    if(index == 0 && inputField == 'subdividedby'){\r\n      let element = document.getElementById('subdividedby');\r\n            if (element) {\r\n              setTimeout(function () {\r\n                (<HTMLInputElement>element).focus();\r\n                //(<HTMLInputElement>element).select();\r\n              }, 100)\r\n            }      \r\n    }else if (inputField == 'amount') {\r\n      if (this.BudgetObj.INTERVAL_ON_AD_OR_BS == \"BSINTERVAL\") {\r\n        if (this.BudgetObj.BUDGET_INTERVAL == \"QUARTERLY\") {\r\n          let element = document.getElementById(`shrawanAshojAmountInput_${index}`);\r\n          if (element) {\r\n            setTimeout(function () {\r\n              (<HTMLInputElement>element).focus();\r\n              //(<HTMLInputElement>element).select();\r\n            }, 100)\r\n          }\r\n        } else if (this.BudgetObj.BUDGET_INTERVAL == \"MONTHLY\") {\r\n          let element = document.getElementById(`shrawanAmountInput_${index}`);\r\n          if (element) {\r\n            setTimeout(function () {\r\n              (<HTMLInputElement>element).focus();\r\n              //(<HTMLInputElement>element).select();\r\n            }, 100)\r\n          }\r\n        } else {\r\n          let element = document.getElementById(`budgetAmountinput_${index}`);\r\n          if (element) {\r\n            setTimeout(function () {\r\n              (<HTMLInputElement>element).focus();\r\n              //(<HTMLInputElement>element).select();\r\n            }, 100)\r\n          }\r\n        }\r\n      }\r\n      // if (this.temp_DetailList[index].BUDGET == 0) {\r\n      // } else if (this.temp_DetailList[0].BUDGET > 0) {\r\n      //   let element = document.getElementById(`accountgroup_${index + 1}`);\r\n      //   if (element) {\r\n      //     setTimeout(function () {\r\n      //       (<HTMLInputElement>element).focus();\r\n      //       //(<HTMLInputElement>element).select();\r\n      //     }, 100)\r\n      //   }\r\n      // }\r\n\r\n    }else if(this.temp_DetailList[index].ACCOUNTGROUP_ID != null && inputField == 'ledger'){\r\n      let element = document.getElementById(`ledger_${index}`);\r\n            if (element) {\r\n              setTimeout(function () {\r\n                (<HTMLInputElement>element).focus();\r\n                //(<HTMLInputElement>element).select();\r\n              }, 100)\r\n            }\r\n    }\r\n    else {\r\n      if (index ==0 && inputField == 'searchInputBox'){\r\n        setTimeout(() => {\r\n          this.inputBox.nativeElement.focus()\r\n        }, 100);\r\n      }else if (index ==0 && inputField == 'accountGroupSelectField'){\r\n        setTimeout(() => {\r\n          this.accountGroupField.nativeElement.focus()\r\n        }, 200); \r\n      }\r\n      else {\r\n        let element = document.getElementById(`accountgroup_${index}`);\r\n        if (element) {\r\n          setTimeout(function () {\r\n            (<HTMLInputElement>element).focus();\r\n            //(<HTMLInputElement>element).select();\r\n          }, 100)\r\n        }\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n  Apply() {\r\n    // if (this.DetailList.length == 0) {\r\n    //   this.alertService.info(\"Data is not Selected!\");\r\n    //   return true;\r\n    // }\r\n    if (this.BudgetObj.SUBDIVIDED_BY == \"COSTCENTER\" && this.BudgetObj.MODE == 'ADD') {\r\n      if (!this.BudgetObj.CCID && !this.temp_DetailList[0].CCID) {\r\n        this.alertService.info(\"Please enter costcenter.\");\r\n        return;\r\n      }\r\n      if (this.temp_DetailList.length > 0) {\r\n        if(this.temp_DetailList[0].ACCOUNTGROUP_ID == null || this.temp_DetailList[0].ACCOUNTGROUP_ID == undefined){\r\n          this.alertService.info('No Ledger has been selected.');\r\n          return;\r\n        }\r\n        let emptyAmountLedger = this.temp_DetailList.find((budget) => (budget.BUDGET == 0 || budget.BUDGET == undefined || budget.BUDGET == null) && (budget.ACCOUNTGROUP_ID != undefined || budget.ACCOUNTGROUP_ID != null));\r\n        if (emptyAmountLedger) {\r\n          this.alertService.info(\"Please Enter Amount in Ledger \" + emptyAmountLedger.ACNAME);\r\n          return;\r\n        }\r\n      }\r\n      // if (this.BudgetObj.TOTAL_BUDGET <= 0) {\r\n      //   this.alertService.info(\"Please enter amount.\");\r\n      //   return;\r\n      // }\r\n\r\n    }\r\n    this.temp_DetailList.forEach((element, i) => {\r\n      let acs1: BudgetData = <BudgetData>{\r\n        COSTCENTER_CATEGORYID: \"\",\r\n        COSTCENTER_CATEGORYNAME: \"\",\r\n        CCID: \"\",\r\n        COSTCENTER_NAME: \"\",\r\n        ACCOUNTGROUP_ID: \"\",\r\n        ACCOUNTGROUP_NAME: \"\",\r\n        ACID: \"\",\r\n        ACNAME: \"\",\r\n        BUDGET: 0\r\n      }\r\n      if (this.BudgetObj.INTERVAL_ON_AD_OR_BS == \"BSINTERVAL\") {\r\n        if (this.BudgetObj.BUDGET_INTERVAL == \"QUARTERLY\") {\r\n          acs1.SHRAWAN_ASHOJ = element.SHRAWAN_ASHOJ,\r\n            acs1.KARTIK_POUSH = element.KARTIK_POUSH,\r\n            acs1.MAGH_CHAITRA = element.MAGH_CHAITRA,\r\n            acs1.BAISAKH_ASAR = element.BAISAKH_ASAR\r\n        } else if (this.BudgetObj.BUDGET_INTERVAL == \"MONTHLY\") {\r\n          acs1.BAISAKH = element.BAISAKH,\r\n            acs1.JESTHA = element.JESTHA,\r\n            acs1.ASAR = element.ASAR,\r\n            acs1.SHRAWAN = element.SHRAWAN,\r\n            acs1.BHADRA = element.BHADRA,\r\n            acs1.ASHOJ = element.ASHOJ,\r\n            acs1.KARTIK = element.KARTIK,\r\n            acs1.MANGSIR = element.MANGSIR,\r\n            acs1.POUSH = element.POUSH,\r\n            acs1.MAGH = element.MAGH,\r\n            acs1.FALGUN = element.FALGUN,\r\n            acs1.CHAITRA = element.CHAITRA\r\n        }\r\n      } else if (this.BudgetObj.INTERVAL_ON_AD_OR_BS == \"ADINTERVAL\") {\r\n        if (this.BudgetObj.BUDGET_INTERVAL == \"QUARTERLY\") {\r\n          acs1.JULY_SEPTEMBER = element.JULY_SEPTEMBER,\r\n            acs1.OCTOBER_DECEMBER = element.OCTOBER_DECEMBER,\r\n            acs1.JANUARY_MARCH = element.JANUARY_MARCH,\r\n            acs1.APRIL_JUNE = element.APRIL_JUNE\r\n        } else if (this.BudgetObj.BUDGET_INTERVAL == \"MONTHLY\") {\r\n          acs1.JANUARY = element.JANUARY,\r\n            acs1.FEBRUARY = element.FEBRUARY,\r\n            acs1.MARCH = element.MARCH,\r\n            acs1.APRIL = element.APRIL,\r\n            acs1.MAY = element.MAY,\r\n            acs1.JUNE = element.JUNE,\r\n            acs1.JULY = element.JULY,\r\n            acs1.AUGUST = element.AUGUST,\r\n            acs1.SEPTEMBER = element.SEPTEMBER,\r\n            acs1.OCTOBER = element.OCTOBER,\r\n            acs1.NOVEMBER = element.NOVEMBER,\r\n            acs1.DECEMBER = element.DECEMBER\r\n        }\r\n      }\r\n      acs1.COSTCENTER_CATEGORYID = this.BudgetObj.COSTCENTER_CATEGORYID ? this.BudgetObj.COSTCENTER_CATEGORYID : element.COSTCENTER_CATEGORYID,\r\n        acs1.COSTCENTER_CATEGORYNAME = this.BudgetObj.COSTCENTER_CATEGORYID && this.BudgetObj.COSTCENTER_CATEGORYID != '%' ? this.costCenterCategoryList.filter(x => x.ccgid == this.BudgetObj.COSTCENTER_CATEGORYID)[0].COSTCENTERGROUPNAME : element.COSTCENTER_CATEGORYNAME,\r\n        acs1.CCID = this.BudgetObj.CCID ? this.BudgetObj.CCID : element.CCID,\r\n        acs1.COSTCENTER_NAME = this.BudgetObj.CCID && this.BudgetObj.CCID != '%' ? this.costCenterList.filter(x => x.CCID == this.BudgetObj.CCID)[0].COSTCENTERNAME : element.COSTCENTER_NAME,\r\n        acs1.ACCOUNTGROUP_ID = element.ACCOUNTGROUP_ID,\r\n        acs1.ACCOUNTGROUP_NAME = element.ACCOUNTGROUP_NAME,\r\n        acs1.ACID = element.ACID,\r\n        acs1.ACNAME = element.ACNAME,\r\n        acs1.BUDGET = element.BUDGET\r\n      if (element.ACCOUNTGROUP_ID && element.ACID && element.BUDGET > 0) {\r\n        this.DetailList.push(acs1);\r\n      }\r\n\r\n      this.costcenterDetailListTotal = 0;\r\n\r\n      this.DetailList.forEach(x => {\r\n        this.costcenterDetailListTotal += this._transactionService.nullToZeroConverter(x.BUDGET);\r\n\r\n\r\n      });\r\n\r\n    });\r\n    this.CalculateFinalSum();\r\n    this.BudgetObj.COSTCENTER_CATEGORYID = \"\";\r\n    this.BudgetObj.COSTCENTER_CATEGORYNAME = \"\";\r\n    this.BudgetObj.CCID = \"\";\r\n    this.BudgetObj.COSTCENTER_NAME = \"\";\r\n    this.BudgetObj.TOTAL_BUDGET = 0;\r\n    // this.temp_DetailList.forEach(x => {      \r\n\r\n    // });\r\n    this.temp_DetailList.forEach(x => {\r\n      x.SHRAWAN_ASHOJ = 0;\r\n      x.KARTIK_POUSH = 0;\r\n      x.MAGH_CHAITRA = 0;\r\n      x.BAISAKH_ASAR = 0;\r\n      x.JULY_SEPTEMBER = 0;\r\n      x.OCTOBER_DECEMBER = 0;\r\n      x.JANUARY_MARCH = 0;\r\n      x.APRIL_JUNE = 0;\r\n      x.BAISAKH = 0;\r\n      x.JESTHA = 0;\r\n      x.ASAR = 0;\r\n      x.SHRAWAN = 0;\r\n      x.BHADRA = 0;\r\n      x.ASHOJ = 0;\r\n      x.KARTIK = 0;\r\n      x.MANGSIR = 0;\r\n      x.POUSH = 0;\r\n      x.MAGH = 0;\r\n      x.FALGUN = 0;\r\n      x.CHAITRA = 0;\r\n      x.JANUARY = 0;\r\n      x.FEBRUARY = 0;\r\n      x.MARCH = 0;\r\n      x.APRIL = 0;\r\n      x.MAY = 0;\r\n      x.JUNE = 0;\r\n      x.JULY = 0;\r\n      x.AUGUST = 0;\r\n      x.SEPTEMBER = 0;\r\n      x.OCTOBER = 0;\r\n      x.NOVEMBER = 0;\r\n      x.DECEMBER = 0;\r\n      x.BUDGET = 0;\r\n      let result = this.DetailList.filter(y => y.ACID == x.ACID);\r\n      result.forEach(z => {\r\n        x.BUDGET += z.BUDGET;\r\n        x.SHRAWAN_ASHOJ += z.SHRAWAN_ASHOJ;\r\n        x.KARTIK_POUSH += z.KARTIK_POUSH;\r\n        x.MAGH_CHAITRA += z.MAGH_CHAITRA;\r\n        x.BAISAKH_ASAR += z.BAISAKH_ASAR;\r\n        x.JULY_SEPTEMBER += z.JULY_SEPTEMBER;\r\n        x.OCTOBER_DECEMBER += z.OCTOBER_DECEMBER;\r\n        x.JANUARY_MARCH += z.JANUARY_MARCH;\r\n        x.APRIL_JUNE += z.APRIL_JUNE;\r\n        x.BAISAKH += z.BAISAKH;\r\n        x.JESTHA += z.JESTHA;\r\n        x.ASAR += z.ASAR;\r\n        x.SHRAWAN += z.SHRAWAN;\r\n        x.BHADRA += z.BHADRA;\r\n        x.ASHOJ += z.ASHOJ;\r\n        x.KARTIK += z.KARTIK;\r\n        x.MANGSIR += z.MANGSIR;\r\n        x.POUSH += z.POUSH;\r\n        x.MAGH += z.MAGH;\r\n        x.FALGUN += z.FALGUN;\r\n        x.CHAITRA += z.CHAITRA;\r\n        x.JANUARY += z.JANUARY;\r\n        x.FEBRUARY += z.FEBRUARY;\r\n        x.MARCH += z.MARCH;\r\n        x.APRIL += z.APRIL;\r\n        x.MAY += z.MAY;\r\n        x.JUNE += z.JUNE;\r\n        x.JULY += z.JULY;\r\n        x.AUGUST += z.AUGUST;\r\n        x.SEPTEMBER += z.SEPTEMBER;\r\n        x.OCTOBER += z.OCTOBER;\r\n        x.NOVEMBER += z.NOVEMBER;\r\n        x.DECEMBER += z.DECEMBER;\r\n      });\r\n      // this.BudgetObj.TOTAL_BUDGET += this._transactionService.nullToZeroConverter(x.BUDGET);\r\n    });\r\n    this.DetailList.forEach((x) => this.BudgetObj.TOTAL_BUDGET += this._transactionService.nullToZeroConverter(x.BUDGET));\r\n    this.disableAmt = true;\r\n  }\r\n  ChooseBsInterval(event: any) {\r\n    if (this.BudgetObj.MODE == \"EDIT\") {\r\n      if (confirm(\"All previous amount data will be reset. Are you sure you want to change interval mode?\")) {\r\n\r\n      } else {\r\n        this.BudgetObj.INTERVAL_ON_AD_OR_BS = this.edit_adbs;\r\n        return;\r\n      }\r\n    }\r\n    if (event.target.value == \"BSINTERVAL\") {\r\n      this.onChangeYa();\r\n    }\r\n\r\n  }\r\n  ChooseAdInterval(event: any) {\r\n    if (this.BudgetObj.MODE == \"EDIT\") {\r\n      if (confirm(\"All previous amount data will be reset. Are you sure you want to change interval mode?\")) {\r\n\r\n      } else {\r\n        this.BudgetObj.INTERVAL_ON_AD_OR_BS = this.edit_adbs;\r\n        return;\r\n      }\r\n    }\r\n    if (event.target.value == \"ADINTERVAL\") {\r\n      this.onChangeYa();\r\n    }\r\n  }\r\n\r\n\r\n  method() {\r\n    if (this.AccountService.partyList && this.AccountService.partyList.length > 0) {\r\n      let _selecteddata = this.AccountService.partyList.filter(x => x.IS_CHECKED == true);\r\n      if (_selecteddata.length == 0) {\r\n        return;\r\n      }\r\n    } else {\r\n      return;\r\n    }\r\n\r\n\r\n\r\n    let checkedlist = this.AccountService.partyList.filter(x => x.IS_CHECKED);\r\n    checkedlist.forEach((ledger) => {\r\n\r\n      let dublicateACID = this.temp_DetailList.find(x => x.ACID == ledger.ACID);\r\n      if (dublicateACID) {\r\n        let dublicate_acname = dublicateACID.ACNAME;\r\n        alert(\"Duplicate ledger \" + dublicate_acname + \" detected!\")\r\n        return;\r\n      } else {\r\n        if (checkedlist) this.replaceAccountGroup();\r\n      }\r\n    })\r\n\r\n\r\n    this.AccountService.partyList.forEach(x => {\r\n      if (x.IS_CHECKED == true) {\r\n        let data: BudgetData = <BudgetData>{\r\n          ACCOUNTGROUP_ID: \"\",\r\n          ACCOUNTGROUP_NAME: \"\",\r\n          ACID: \"\",\r\n          ACNAME: \"\",\r\n        }\r\n        data.ACCOUNTGROUP_ID = x.PARENTID;\r\n        data.ACCOUNTGROUP_NAME = x.PARENT_NAME;\r\n        data.ACID = x.ACID;\r\n        data.ACNAME = x.ACNAME;\r\n        if (this.BudgetObj.BUDGET_INTERVAL == \"QUARTERLY\" || this.BudgetObj.BUDGET_INTERVAL == \"MONTHLY\") {\r\n          data.SHRAWAN_ASHOJ = 0;\r\n          data.KARTIK_POUSH = 0;\r\n          data.MAGH_CHAITRA = 0;\r\n          data.BAISAKH_ASAR = 0;\r\n          data.JULY_SEPTEMBER = 0;\r\n          data.OCTOBER_DECEMBER = 0;\r\n          data.JANUARY_MARCH = 0;\r\n          data.APRIL_JUNE = 0;\r\n          data.BAISAKH = 0;\r\n          data.JESTHA = 0;\r\n          data.ASAR = 0;\r\n          data.SHRAWAN = 0;\r\n          data.BHADRA = 0;\r\n          data.ASHOJ = 0;\r\n          data.KARTIK = 0;\r\n          data.MANGSIR = 0;\r\n          data.POUSH = 0;\r\n          data.MAGH = 0;\r\n          data.FALGUN = 0;\r\n          data.CHAITRA = 0;\r\n          data.JANUARY = 0;\r\n          data.FEBRUARY = 0;\r\n          data.MARCH = 0;\r\n          data.APRIL = 0;\r\n          data.MAY = 0;\r\n          data.JUNE = 0;\r\n          data.JULY = 0;\r\n          data.AUGUST = 0;\r\n          data.SEPTEMBER = 0;\r\n          data.OCTOBER = 0;\r\n          data.NOVEMBER = 0;\r\n          data.DECEMBER = 0;\r\n          data.BUDGET = 0;\r\n        }else{\r\n          data.BUDGET = 0;          \r\n        }\r\n        this.temp_DetailList.push(data);\r\n      }\r\n    })\r\n    this.filterValue = \"\";\r\n    // let _emptyindex=this.temp_DetailList.findIndex(x=>x.ACID==null && x.ACCOUNTGROUP_ID==null && x.BUDGET==null);\r\n    let _emptyindex = this.temp_DetailList.findIndex(x => x.ACID == null && x.ACCOUNTGROUP_ID == null);\r\n    if (_emptyindex > 0) {\r\n      this.temp_DetailList.splice(_emptyindex, 1);\r\n    }\r\n    setTimeout(() => {\r\n      this.focusNext(this.accountGroupreplaceIndex, 'amount');\r\n      \r\n    }, 50);\r\n  }\r\n\r\n  handleChange(event: any) {\r\n    if (event.target.checked == true) {\r\n      this.AccountService.partyList.forEach(x => {\r\n        x.IS_CHECKED = true;\r\n      })\r\n    } else {\r\n      this.AccountService.partyList.forEach(x => {\r\n        x.IS_CHECKED = false;\r\n      })\r\n    }\r\n  }\r\n\r\n  displayBudgetImportPopup(){\r\n    this.displayBudgetImportPopUp = true;\r\n  }\r\n\r\n  downloadBudgetTemplate(){\r\n    this.AccountService.partyList.forEach(x => {\r\n      let data: BudgetData = <BudgetData>{\r\n        ACCOUNTGROUP_ID: \"\",\r\n        ACCOUNTGROUP_NAME: \"\",\r\n        ACID: \"\",\r\n        ACNAME: \"\",\r\n      }\r\n      if(this.BudgetObj.SUBDIVIDED_BY == 'COSTCENTER'){\r\n        data.COSTCENTER_CATEGORYID = '';\r\n        data.COSTCENTER_CATEGORYNAME = '';\r\n        data.CCID = '';\r\n        data.COSTCENTER_NAME = '';\r\n      }\r\n      data.ACCOUNTGROUP_ID = x.PARENTID;\r\n      data.ACCOUNTGROUP_NAME = x.PARENT_NAME;\r\n      data.ACID = x.ACID;\r\n      data.ACNAME = x.ACNAME;\r\n      if (this.BudgetObj.BUDGET_INTERVAL == \"QUARTERLY\") {\r\n        data.SHRAWAN_ASHOJ = 0;\r\n        data.KARTIK_POUSH = 0;\r\n        data.MAGH_CHAITRA = 0;\r\n        data.BAISAKH_ASAR = 0;\r\n      }\r\n      else if(this.BudgetObj.BUDGET_INTERVAL == \"MONTHLY\"){\r\n        data.SHRAWAN = 0;\r\n        data.BHADRA = 0;\r\n        data.ASHOJ = 0;\r\n        data.KARTIK = 0;\r\n        data.MANGSIR = 0;\r\n        data.POUSH = 0;\r\n        data.MAGH = 0;\r\n        data.FALGUN = 0;\r\n        data.CHAITRA = 0;\r\n        data.BAISAKH = 0;\r\n        data.JESTHA = 0;\r\n        data.ASAR = 0;\r\n        // data.BUDGET = 0;\r\n      }else{\r\n        data.BUDGET = 0;          \r\n      }\r\n      this.ledgerListForTemplate.push(data);\r\n    });\r\n\r\n    this.exportTOExcel(this.ledgerListForTemplate,'Ledger');\r\n    this.ledgerListForTemplate = [];\r\n  }\r\n\r\n  clearBrowseFile() {\r\n    this.fileToImport = null;\r\n    this.selectedFileNames = [];\r\n  }\r\n  \r\n  onFileChange($event: any) {\r\n    const files = $event.target.files;\r\n    this.isOnceSelected = !this.isOnceSelected;\r\n    this.processFiles(files);\r\n  }\r\n  \r\n  onDrop(event: any): void {\r\n    event.preventDefault();\r\n    const files = event.dataTransfer.files;\r\n    this.processFiles(files);\r\n  }\r\n  \r\n  onDragOver(event: any): void {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n  }\r\n  \r\n  processFiles(files: FileList): void {\r\n    this.clearBrowseFile();\r\n    this.fileToImport = files;\r\n  \r\n    if (this.fileToImport) {\r\n      this.setSelectedFileNames();\r\n    }\r\n  }\r\n\r\n  setSelectedFileNames(){\r\n    this.selectedFileNames = []; \r\n    if(this.fileToImport == null){\r\n      return;\r\n    }else {\r\n      for(let i = 0; i < this.fileToImport.length;  i++){\r\n        this.selectedFileNames.push(this.fileToImport[i].name)\r\n      } \r\n    }\r\n  }\r\n\r\n  readExcelFile(file: File): void {\r\n    const reader: FileReader = new FileReader();\r\n\r\n    reader.onload = (e: any) => {\r\n      const data = new Uint8Array(e.target.result);\r\n      const workbook = XLSX.read(data, { type: 'array' });\r\n      const sheetName = workbook.SheetNames[0];\r\n      const worksheet = workbook.Sheets[sheetName];\r\n\r\n        // Get headers from the first row\r\n      const headers: string[] = Object.keys(worksheet);\r\n      const firstRow: string = headers[0];\r\n      const headerRow :any = XLSX.utils.sheet_to_json(worksheet, { header: 1 })[0];\r\n      \r\n      // Convert sheet data to JSON\r\n      const jsonDataFromSheet = XLSX.utils.sheet_to_json(worksheet, { raw: true });\r\n      \r\n      // Now, you can use jsonData as your imported data\r\n      this.BudgetImportSheetList = jsonDataFromSheet;\r\n      let misSpelledLedgerName = [];\r\n      let misSpelledCostCenter = [];\r\n      const objectsWithoutCostCenterName = [];\r\n      const objectsWithoutLedgerName = this.BudgetImportSheetList.filter((x: any) => !('ACNAME' in x));\r\n      if(objectsWithoutLedgerName.length>0){\r\n        this.alertService.info(\"Ledger Cannot be Blank\");\r\n        return;\r\n      }\r\n      \r\n      if(this.BudgetObj.BUDGET_INTERVAL == \"QUARTERLY\"){\r\n        const columnExists = headerRow.find(columnNameToCheck => columnNameToCheck == \"SHRAWAN_ASHOJ\");\r\n        if(columnExists == undefined){\r\n          this.alertService.info(\"The Uploaded Budget Format doesn't match with downloaded Sample Sheet.\");\r\n          return;\r\n        }\r\n      }else if(this.BudgetObj.BUDGET_INTERVAL == \"MONTHLY\"){\r\n        const columnExists = headerRow.find(columnNameToCheck => columnNameToCheck == \"SHRAWAN\");\r\n        if(columnExists == undefined){\r\n          this.alertService.info(\"The Uploaded Budget Format doesn't match with downloaded Sample Sheet.\");\r\n          return;\r\n        }\r\n      }else if(this.BudgetObj.BUDGET_INTERVAL == 'YEARLY'){\r\n        const columnExists = headerRow.find(columnNameToCheck => columnNameToCheck == \"BUDGET\");\r\n        if(columnExists == undefined){\r\n          this.alertService.info(\"The Uploaded Budget Format doesn't match with downloaded Sample Sheet.\");\r\n          return;\r\n        }\r\n      }\r\n      if(this.BudgetObj.SUBDIVIDED_BY == \"COSTCENTER\"){\r\n        const columnExists = headerRow.find(columnNameToCheck => columnNameToCheck == \"COSTCENTER_NAME\");\r\n        if(columnExists == undefined){\r\n          this.alertService.info(\"The Uploaded Budget Format doesn't match with downloaded Sample Sheet. Cost Center Column is Missing\");\r\n          return;\r\n        }\r\n      }\r\n      this.temp_DetailList = [];\r\n      this.DetailList = [];\r\n      let duplicate_account_ledger = [];\r\n      if(this.BudgetImportSheetList.length>0){\r\n        this.BudgetImportSheetList.forEach((x : any ) => {\r\n    \r\n          let data: BudgetData = <BudgetData>{\r\n            ACCOUNTGROUP_ID: \"\",\r\n            ACID: \"\",\r\n            COSTCENTER_CATEGORYID: \"\",\r\n            CCID: \"\"\r\n          }\r\n  \r\n          \r\n          if (this.BudgetObj.BUDGET_INTERVAL == \"QUARTERLY\") {\r\n            if((!x.SHRAWAN_ASHOJ || x.SHRAWAN_ASHOJ == 0) && (!x.KARTIK_POUSH || x.KARTIK_POUSH == 0) && (!x.MAGH_CHAITRA || x.MAGH_CHAITRA == 0 )&& (!x.BAISAKH_ASAR || x.BAISAKH_ASAR == 0)){\r\n              return;\r\n            }else {\r\n              data.SHRAWAN_ASHOJ = x.SHRAWAN_ASHOJ?x.SHRAWAN_ASHOJ:0;\r\n              data.KARTIK_POUSH = x.KARTIK_POUSH?x.KARTIK_POUSH:0;\r\n              data.MAGH_CHAITRA = x.MAGH_CHAITRA?x.MAGH_CHAITRA:0;\r\n              data.BAISAKH_ASAR = x.BAISAKH_ASAR?x.BAISAKH_ASAR:0;\r\n              data.JULY_SEPTEMBER = x.JULY_SEPTEMBER?x.JULY_SEPTEMBER:0;\r\n              data.OCTOBER_DECEMBER = x.OCTOBER_DECEMBER?x.OCTOBER_DECEMBER:0;\r\n              data.JANUARY_MARCH = x.JANUARY_MARCH?x.JANUARY_MARCH:0;\r\n              data.APRIL_JUNE = x.APRIL_JUNE?x.APRIL_JUNE:0;\r\n              data.BUDGET = 0;\r\n            }\r\n          }else if( this.BudgetObj.BUDGET_INTERVAL == \"MONTHLY\"){\r\n            if((!x.BAISAKH || x.BAISAKH == 0) && (!x.JESTHA || x.JESTHA == 0) && (!x.ASAR || x.ASAR == 0) && (!x.SHRAWAN || x.SHRAWAN == 0) && (!x.BHADRA || x.BHADRA == 0) && (!x.ASHOJ || x.ASHOJ == 0) && (!x.KARTIK || x.KARTIK == 0) && (!x.MANGSIR || x.MANGSIR == 0) && (!x.POUSH || x.POUSH == 0) && (!x.MAGH || x.MAGH == 0) && (!x.FALGUN || x.FALGUN == 0) && (!x.CHAITRA || x.CHAITRA == 0)){\r\n              return;\r\n            }else {\r\n              data.BAISAKH = x.BAISAKH?x.BAISAKH:0;\r\n              data.JESTHA = x.JESTHA?x.JESTHA:0;\r\n              data.ASAR = x.ASAR?x.ASAR:0;\r\n              data.SHRAWAN = x.SHRAWAN?x.SHRAWAN:0;\r\n              data.BHADRA = x.BHADRA?x.BHADRA:0;\r\n              data.ASHOJ = x.ASHOJ?x.ASHOJ:0;\r\n              data.KARTIK = x.KARTIK?x.KARTIK:0;\r\n              data.MANGSIR = x.MANGSIR?x.MANGSIR:0;\r\n              data.POUSH = x.POUSH?x.POUSH:0;\r\n              data.MAGH = x.MAGH?x.MAGH:0;\r\n              data.FALGUN = x.FALGUN?x.FALGUN:0;\r\n              data.CHAITRA = x.CHAITRA?x.CHAITRA:0;\r\n              // data.JANUARY = 0;\r\n              // data.FEBRUARY = 0;\r\n              // data.MARCH = 0;\r\n              // data.APRIL = 0;\r\n              // data.MAY = 0;\r\n              // data.JUNE = 0;\r\n              // data.JULY = 0;\r\n              // data.AUGUST = 0;\r\n              // data.SEPTEMBER = 0;\r\n              // data.OCTOBER = 0;\r\n              // data.NOVEMBER = 0;\r\n              // data.DECEMBER = 0;\r\n              data.BUDGET = 0;\r\n\r\n            }\r\n\r\n          }\r\n          else{\r\n            if(!x.BUDGET || x.BUDGET == 0){\r\n              return;\r\n            }else {\r\n              data.BUDGET = x.BUDGET; \r\n\r\n            }\r\n         \r\n          }\r\n          // let matchedAccountLedger:any = {};\r\n           let matchedAccountLedger = this.AccountService.partyList.find((ledger) => ledger.ACNAME == x.ACNAME);\r\n          if(matchedAccountLedger){\r\n            data.ACNAME = x.ACNAME;\r\n            data.ACID = matchedAccountLedger.ACID;\r\n            data.ACCOUNTGROUP_ID = matchedAccountLedger.PARENTID;\r\n            data.ACCOUNTGROUP_NAME = matchedAccountLedger.PARENT_NAME;\r\n            \r\n          }else{\r\n            misSpelledLedgerName.push(x);\r\n            return;\r\n          }\r\n\r\n          if(this.BudgetObj.SUBDIVIDED_BY == \"COSTCENTER\"){\r\n            if(!x.COSTCENTER_NAME || x.COSTCENTER_NAME == ''){\r\n              objectsWithoutCostCenterName.push(x);\r\n              return;\r\n            }\r\n            let matchedCostCenter = this.costCenterList.find(cc => cc.COSTCENTERNAME == x.COSTCENTER_NAME);\r\n            if(matchedCostCenter != undefined){\r\n              data.COSTCENTER_NAME = x.COSTCENTER_NAME;\r\n              data.CCID = matchedCostCenter.CCID;           \r\n              data.COSTCENTER_CATEGORYID = matchedCostCenter.ccgid;\r\n              data.COSTCENTER_CATEGORYNAME = this.costCenterCategoryList.find(x => x.ccgid == data.COSTCENTER_CATEGORYID).COSTCENTERGROUPNAME;\r\n              if(this.temp_DetailList.length>0){\r\n                this.temp_DetailList.forEach((ledger) => {\r\n                  if(ledger.ACID == data.ACID && ledger.CCID == data.CCID){\r\n                    duplicate_account_ledger.push(data);\r\n                  }\r\n                })\r\n              }            \r\n\r\n            }else{\r\n              misSpelledCostCenter.push(x);\r\n              return;\r\n            }\r\n            \r\n          }else {\r\n            if(this.temp_DetailList.length>0){\r\n              this.temp_DetailList.forEach((ledger) => {\r\n                if(ledger.ACID == data.ACID ){\r\n                  duplicate_account_ledger.push(data);\r\n                }\r\n              })\r\n            }  \r\n            console.log(\"Duplicate ledger\",duplicate_account_ledger);\r\n  \r\n          }\r\n          \r\n          \r\n          this.temp_DetailList.push(data);\r\n        });\r\n        if(objectsWithoutCostCenterName.length>0){\r\n          this.alertService.info(\"The cost center for ledger \"+objectsWithoutCostCenterName[0].ACNAME+' does not exist.');\r\n          this.temp_DetailList = [] as Array<BudgetData>;\r\n          this.addrow(0);\r\n            return;\r\n        }\r\n        if(misSpelledLedgerName.length>0){\r\n          this.alertService.info(\"Cannot Upload as there is no ledger named \"+misSpelledLedgerName[0].ACNAME);\r\n          this.temp_DetailList = [] as Array<BudgetData>;\r\n          this.addrow(0);\r\n          return;\r\n        }\r\n        if(misSpelledCostCenter.length>0){\r\n          this.alertService.info(\"Cannot Upload as there is no Cost Center named \"+misSpelledCostCenter[0].COSTCENTER_NAME);\r\n          this.temp_DetailList = [] as Array<BudgetData>;\r\n          this.addrow(0);\r\n          return;\r\n        } \r\n        if(this.temp_DetailList.length == 0){\r\n          this.alertService.info(\"Budget Amount Should be inserted for at least one ledger.\");\r\n          this.temp_DetailList = [] as Array<BudgetData>;\r\n          this.addrow(0);\r\n          return;\r\n        }\r\n        if(duplicate_account_ledger.length){\r\n          let dublicate_acname = duplicate_account_ledger[0].ACNAME;\r\n          this.alertService.info(\"Duplicate ledger \" + dublicate_acname + \" detected!\");\r\n          this.temp_DetailList = [] as Array<BudgetData>;\r\n          this.addrow(0);\r\n        }else{\r\n          this.CalculateSum();\r\n          if(this.BudgetObj.SUBDIVIDED_BY == \"COSTCENTER\"){\r\n            // const objectsWithoutCostCenterName = this.temp_DetailList.filter((x: any) => !('COSTCENTER_NAME' in x) || x.COSTCENTER_NAME == \"\");\r\n          \r\n            if(this.temp_DetailList.length>0) this.Apply();\r\n            \r\n            if (this.temp_DetailList.length > 0) {\r\n              const uniqueValues = [];\r\n              const seenValues = {};\r\n              let key = 'ACID';\r\n    \r\n              for (const obj of this.temp_DetailList) {\r\n                if (!seenValues[obj[key]]) {\r\n                  uniqueValues.push(obj);\r\n                  seenValues[obj[key]] = true;\r\n                }\r\n              }\r\n              this.temp_DetailList = uniqueValues;\r\n            }\r\n          }else {\r\n            setTimeout(() => {\r\n              this.focusNext(0, 'amount');\r\n              \r\n            }, 50);\r\n          }\r\n          this.Close();\r\n        }\r\n      }\r\n      \r\n    };\r\n\r\n    reader.readAsArrayBuffer(file);\r\n  }  \r\n\r\n\r\n}\r\n\r\n\r\n\r\nexport interface Pobj {\r\n  VCHRNO: string;\r\n  BUDGET_NUMBER: string;\r\n  TRNDATE: Date | string;\r\n  BSDATE: string;\r\n  BUDGET_NAME: string;\r\n  BUDGET_TYPE: string;\r\n  BUDGET_INTERVAL: string;\r\n  INTERVAL_ON_AD_OR_BS: string;\r\n  PREFILL_DATA: string;\r\n  SUBDIVIDED_BY: string;\r\n  FROM_DATE: Date | string;\r\n  FROM_BSDATE: string;\r\n  TO_DATE: Date | string;\r\n  TO_BSDATE: string;\r\n  ACTION: string;\r\n  ACTION_TYPE: string;\r\n  TOTAL_BUDGET: number;\r\n  DIVISION: string;\r\n  PHISCALID: string;\r\n  COMPANYID: string;\r\n  MODE: string;\r\n  BEGINDATE: string;\r\n  ENDDATE: string;\r\n  CURRENT_YEAR: string;\r\n  NEXT_YEAR: string;\r\n  COSTCENTER_CATEGORYID: string;\r\n  COSTCENTER_CATEGORYNAME: string;\r\n  COSTCENTERWISE: number;\r\n  CCID: string;\r\n  COSTCENTER_NAME: string;\r\n  CREATED_BY: Date | string;\r\n  CREATED_ON: string;\r\n  BudgetDataList: BudgetData[];\r\n}\r\nexport interface BudgetData {\r\n  VCHRNO: string;\r\n  COSTCENTER_CATEGORYID: string;\r\n  COSTCENTER_CATEGORYNAME: string;\r\n  CCID: string;\r\n  COSTCENTER_NAME: string;\r\n\r\n  ACCOUNTGROUP_ID: string;\r\n  ACCOUNTGROUP_NAME: string;\r\n  ACID: string;\r\n  ACNAME: string;\r\n  BUDGET: number;\r\n  FROMDATE_AD: Date | string;\r\n  FROMDATE_BS: string;\r\n  TODATE_AD: Date | string;\r\n  TODATE_BS: string;\r\n  QUARTER_TYPE: number;\r\n  QUARTER_NAME: string;\r\n  MONTH_NAME: string;\r\n\r\n  SHRAWAN_ASHOJ: number;\r\n  KARTIK_POUSH: number;\r\n  MAGH_CHAITRA: number;\r\n  BAISAKH_ASAR: number;\r\n\r\n  JULY_SEPTEMBER: number;\r\n  OCTOBER_DECEMBER: number;\r\n  JANUARY_MARCH: number;\r\n  APRIL_JUNE: number;\r\n\r\n  BAISAKH: number;\r\n  JESTHA: number;\r\n  ASAR: number;\r\n  SHRAWAN: number;\r\n  BHADRA: number;\r\n  ASHOJ: number;\r\n  KARTIK: number;\r\n  MANGSIR: number;\r\n  POUSH: number;\r\n  MAGH: number;\r\n  FALGUN: number;\r\n  CHAITRA: number;\r\n\r\n  JANUARY: number;\r\n  FEBRUARY: number;\r\n  MARCH: number;\r\n  APRIL: number;\r\n  MAY: number;\r\n  JUNE: number;\r\n  JULY: number;\r\n  AUGUST: number;\r\n  SEPTEMBER: number;\r\n  OCTOBER: number;\r\n  NOVEMBER: number;\r\n  DECEMBER: number;\r\n\r\n  DIVISION: string;\r\n  PHISCALID: string;\r\n  COMPANYID: string;\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/pages/masters/components/BudgetMaster/add-budget-master.component.ts","import { Component } from '@angular/core';\r\nimport { AuthService } from '../../../../common/services/permission/authService.service';\r\nimport { MasterRepo } from \"../../../../common/repositories/masterRepo.service\";\r\nimport { Router } from '@angular/router';\r\nimport { AlertService } from '../../../../common/services/alert/alert.service';\r\nimport { SpinnerService } from '../../../../common/services/spinner/spinner.service';\r\nimport { CostCenterCategory } from '../../../../common/interfaces';\r\n\r\n\r\n@Component({\r\n  selector: 'budget-master-selector',\r\n  template: require('./budget-master.component.html'),\r\n  providers: [AuthService],\r\n  styles: [require('../../../modal-style.css'), require('./budget-master.component.css')]\r\n})\r\nexport class BudgetMasterComponent {\r\n  BudgetList: any[] = [];\r\n  userSetting: any;\r\n  disableButton: boolean = false;\r\n  filter: any;\r\n  userProfile: any = <any>{};\r\n\r\n  constructor(private masterService: MasterRepo,\r\n    private router: Router,\r\n    private alertService: AlertService,\r\n    private loader: SpinnerService,\r\n    private _authService: AuthService\r\n  ) {\r\n    this.userSetting = this._authService.getSetting();\r\n    this.userProfile = _authService.getUserProfile();\r\n    this.getAllBudgetList();\r\n  }\r\n\r\n\r\n  addBudget() {\r\n    this.router.navigate(['./pages/account/AccountLedger/budget-master/addbudget'])\r\n  }\r\n  uploadBudget() {\r\n    // this.router.navigate(['./pages/account/AccountLedger/budget-master/uploadbudget'])\r\n    this.router.navigate(['./pages/account/AccountLedger/budget-master/addbudget'])\r\n  }\r\n\r\n\r\n  getAllBudgetList() {\r\n    try {\r\n      this.BudgetList = [];\r\n      let fiscalid = this.userProfile.PhiscalYearInfo.PhiscalID;\r\n      let division = this.userProfile.division;\r\n      this.masterService.getAllBudgetList(fiscalid,division)\r\n        .subscribe((res: any) => {\r\n          console.log(\"cost getAllBudgetList\", res)\r\n          this.BudgetList = res;\r\n        }, error => {\r\n          this.alertService.info(error.result._body);\r\n        }\r\n        );\r\n    } catch (ex) {\r\n      alert(ex);\r\n    }\r\n\r\n  }\r\n\r\n  onDeleteClick(event) {\r\n    if (confirm(\"Are you sure you want to delete?\")) {\r\n      try {\r\n        this.masterService.deleteBudgetAllocated(event.VCHRNO, event.BUDGET_NAME, event.PHISCALID, \"STATUS\").subscribe(\r\n          (response) => {\r\n            if (response.status == 'ok') {\r\n              this.alertService.info(response.result);\r\n              this.getAllBudgetList();\r\n            } else {\r\n              this.alertService.info(response.result);\r\n            }\r\n          }, error => {\r\n            if (error._body == '\"This budget is already saved in transaction.\"') {\r\n              if (confirm(\"This budget is already saved in transaction. Are you sure you want to delete?\")) {\r\n                try {\r\n                  this.masterService.deleteBudgetAllocated(event.VCHRNO, event.BUDGET_NAME, event.PHISCALID, \"ALLOW_DELETE\").subscribe(\r\n                    (response) => {\r\n                      if (response.status == 'ok') {\r\n                        this.alertService.info(response.result);\r\n                        this.getAllBudgetList();\r\n                      } else {\r\n                        this.alertService.info(response.result);\r\n                      }\r\n                    }, error => {\r\n                      this.alertService.info(error._body);\r\n                    }\r\n                  )\r\n                } catch (ex) {\r\n                  alert(ex);\r\n                }\r\n              }\r\n            } else {\r\n            this.alertService.info(error._body);\r\n          }\r\n          }\r\n        )\r\n      } catch (ex) {\r\n        alert(ex);\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  onEditClick(event): void {\r\n    if (confirm(\"Are you sure you want to edit?\")) {\r\n      try {\r\n        if (this.masterService.validateMasterCreation(\"edit\") == false) {\r\n          return;\r\n        }\r\n        this.router.navigate([\"./pages/account/AccountLedger/budget-master/addbudget\", { VCHRNO: event.VCHRNO, mode: \"edit\", returnUrl: this.router.url }]);\r\n      } catch (ex) {\r\n        alert(ex);\r\n      }\r\n    }\r\n  }\r\n\r\n  onViewClick(event): void {\r\n    try {\r\n      if (this.masterService.validateMasterCreation(\"view\") == false) {\r\n        return;\r\n      }\r\n      this.router.navigate([\"./pages/account/AccountLedger/budget-master/addbudget\", { VCHRNO: event.VCHRNO, mode: \"view\", returnUrl: this.router.url }]);\r\n    } catch (ex) {\r\n      alert(ex);\r\n    }\r\n  }\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/pages/masters/components/BudgetMaster/budget-master.component.ts","import { NgModule } from \"@angular/core\";\r\nimport TreeModule from \"angular-tree-component\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\r\nimport { GenericPopupGridModule } from \"../../../../common/popupLists/generic-grid/generic-popup-grid.module\";\r\nimport { NgaModule } from \"../../../../theme/nga.module\";\r\nimport { ModalModule } from \"ngx-bootstrap\";\r\n\r\nimport { BudgetMasterRoutingModule } from \"./budget-master.routing\";\r\nimport { BudgetMasterComponent } from \"./budget-master.component\";\r\nimport { AddBudgetMasterComponent } from \"./add-budget-master.component\";\r\nimport { TransactionModule } from \"../../../../common/Transaction Components/transaction.module\";\r\nimport { NepaliDatePickerModule } from \"../../../../common/nepali-date-picker/nepali-date-picker.module\";\r\nimport { SearchPipe} from \"./search.pipe\";\r\nimport { ContextMenuModule } from \"ngx-contextmenu\";\r\nimport { ContextmenuComponent } from \"../../../Reports/context-menu/context-menu.component\";\r\nimport { AccountGroupPopupGridModule } from \"../../../../common/popupLists/AGroupPopup/account-group-popup-grid.module\";\r\nimport { TreeViewAccService } from \"../Account-Ledger-New/AccLedger.service\";\r\n\r\n\r\n\r\n\r\n@NgModule({\r\n  imports: [\r\n    TreeModule,\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    GenericPopupGridModule.forRoot(),\r\n    AccountGroupPopupGridModule.forRoot(),\r\n    NgaModule,\r\n    ModalModule.forRoot(),\r\n    BudgetMasterRoutingModule,\r\n    TransactionModule,\r\n    NepaliDatePickerModule,\r\n    // ContextMenuModule\r\n    \r\n  ],\r\n  declarations: [\r\n    // ContextmenuComponent,\r\n    BudgetMasterComponent,\r\n    AddBudgetMasterComponent,\r\n    SearchPipe,\r\n    ],\r\n    providers:[TreeViewAccService]\r\n})\r\nexport class BudgetMasterModule {\r\n }\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/pages/masters/components/BudgetMaster/budget-master.module.ts","import { Routes, RouterModule } from '@angular/router';\r\nimport { NgModule } from '@angular/core';\r\nimport { BudgetMasterComponent } from './budget-master.component';\r\nimport { AddBudgetMasterComponent } from './add-budget-master.component';\r\n\r\nconst routes: Routes = [\r\n    { path: '', component: BudgetMasterComponent },\r\n    { path: 'addbudget', component: AddBudgetMasterComponent },\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class BudgetMasterRoutingModule { }\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/pages/masters/components/BudgetMaster/budget-master.routing.ts","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({ name: 'searchData', pure: false })\r\n\r\nexport class SearchPipe implements PipeTransform {\r\n  transform(data, query: string, option: string): any {\r\n    if (data) {\r\n      if (query) {\r\n        if(option == ''){\r\n          return data.filter(item => {\r\n            const searchedQuery = query.replace(/[^A-Z0-9]/ig, '').toLowerCase();\r\n            const comId = (item.BUDGET_NUMBER) ? (item.BUDGET_NUMBER).replace(/[^A-Z0-9]/ig, '').toLowerCase() : '';\r\n            const name = (item.BUDGET_NAME) ? (item.BUDGET_NAME).replace(/[^A-Z0-9]/ig, '').toLowerCase() : '';\r\n            const fromdate = (item.FROM_DATE) ? (item.FROM_DATE).replace(/[^A-Z0-9]/ig, '').toLowerCase() : '';\r\n            const createdon = (item.CREATED_ON) ? (item.CREATED_ON).replace(/[^A-Z0-9]/ig, '').toLowerCase() : '';\r\n            const updatedon = (item.UPDATED_ON) ? (item.UPDATED_ON).replace(/[^A-Z0-9]/ig, '').toLowerCase() : '';\r\n            const status = (item.STATUS) ? (item.STATUS).replace(/[^A-Z0-9]/ig, '').toLowerCase() : '';\r\n            if (\r\n              comId.indexOf(searchedQuery) !== -1\r\n            ) {\r\n              return item;\r\n            }else if (\r\n              name.indexOf(searchedQuery) !== -1\r\n            ) {\r\n              return item;\r\n            }else if (\r\n              fromdate.indexOf(searchedQuery) !== -1\r\n            ) {\r\n              return item;\r\n            }else if (\r\n              createdon.indexOf(searchedQuery) !== -1\r\n            ) {\r\n              return item;\r\n            }else if (\r\n              updatedon.indexOf(searchedQuery) !== -1\r\n            ) {\r\n              return item;\r\n            }else if (\r\n              status.indexOf(searchedQuery) !== -1\r\n            ) {\r\n              return item;\r\n            }\r\n          });\r\n\r\n        }else if(option == 'ACCODE'){\r\n          return data.filter(item => {\r\n            const searchedQuery = query.replace(/[^A-Z0-9]/ig, '').toLowerCase();\r\n            const accode = (item.ACCODE) ? (item.ACCODE).replace(/[^A-Z0-9]/ig, '').toLowerCase() : '';\r\n            if (\r\n              accode.indexOf(searchedQuery) !== -1\r\n            ) {\r\n              return item;\r\n            }\r\n          });\r\n\r\n        }else if(option == 'ACNAME'){\r\n          return data.filter(item => {\r\n            const searchedQuery = query.replace(/[^A-Z0-9]/ig, '').toLowerCase();\r\n            const acname = (item.ACNAME) ? (item.ACNAME).replace(/[^A-Z0-9]/ig, '').toLowerCase() : '';\r\n            if (\r\n              acname.indexOf(searchedQuery) !== -1\r\n            ) {\r\n              return item;\r\n            }\r\n          });         \r\n\r\n        }\r\n      \r\n      } else {\r\n        return data;\r\n      }\r\n    }\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/pages/masters/components/BudgetMaster/search.pipe.ts","module.exports = \".modal-content {\\n  padding: 1px;\\n  margin: 0px;\\n  float: right; }\\n\\n.modal-content {\\n  box-shadow: -10px 0px 10px 1px #aaaaaa; }\\n\\n.modal-content-summary-area {\\n  max-height: 20%;\\n  height: 20%;\\n  overflow: auto;\\n  overflow-x: hidden; }\\n\\n/* layout.css Style */\\n.upload-drop-zone {\\n  height: 80px;\\n  border-width: 2px;\\n  margin-bottom: 0px; }\\n\\n/* skin.css Style*/\\n.upload-drop-zone {\\n  color: #c7dadf;\\n  border-style: dashed;\\n  border-color: #c7dadf;\\n  border-radius: 2px;\\n  line-height: 75px;\\n  text-align: center;\\n  cursor: pointer;\\n  height: 12.5rem; }\\n\\n.sample-download-area {\\n  color: #ccc;\\n  border-style: dashed;\\n  border-color: #ccc;\\n  line-height: 60px;\\n  text-align: center;\\n  cursor: pointer; }\\n\\n.upload-drop-zone.drop {\\n  color: #222;\\n  border-color: #222; }\\n\\n.image-preview-input {\\n  position: relative;\\n  overflow: hidden;\\n  margin: 0px;\\n  color: #333;\\n  background-color: #fff;\\n  border-color: #ccc; }\\n\\n.image-preview-input input[type=\\\"file\\\"] {\\n  position: absolute;\\n  top: 0;\\n  right: 0;\\n  margin: 0;\\n  padding: 0;\\n  font-size: 20px;\\n  cursor: pointer;\\n  opacity: 0;\\n  filter: alpha(opacity=0); }\\n\\n.image-preview-input-title {\\n  margin-left: 2px; }\\n\\n.form-control {\\n  height: 35px; }\\n\\n.file-dropover-continue {\\n  color: #1b6ed6;\\n  border-style: dashed;\\n  border-color: #1b6ed6;\\n  background: #ded4d4; }\\n\\n.modal-sticky {\\n  position: fixed;\\n  top: 275px;\\n  right: 20px;\\n  width: 40%;\\n  z-index: 9999999; }\\n\\n.outerbox {\\n  padding: 12px;\\n  background-color: #C8E6FE;\\n  border: 1px solid #B6B3B3;\\n  border-radius: 8px; }\\n\\nthead th {\\n  color: #fff !important; }\\n\\n.item-4 {\\n  padding-top: 7px;\\n  margin-top: 6px;\\n  border: none;\\n  width: 20px;\\n  height: 20px;\\n  position: relative;\\n  border-radius: 50%;\\n  background-color: #FFF; }\\n  .item-4:before, .item-4:after {\\n    content: \\\"\\\";\\n    position: absolute;\\n    width: 80%;\\n    height: 2px;\\n    background-color: #36658d;\\n    left: 50%;\\n    top: 50%; }\\n  .item-4:after {\\n    transform: translate(-50%, -50%) rotate(45deg); }\\n  .item-4:before {\\n    transform: translate(-50%, -50%) rotate(-45deg); }\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/masters/components/BudgetMaster/add-budget-master.component.scss\n// module id = 1690\n// module chunks = 16","module.exports = \"<style>\\r\\n  .sectionWrapper {\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    height: 83vh;\\r\\n  }\\r\\n\\r\\n  .midTableWrapper {\\r\\n    flex: 1;\\r\\n    overflow: auto;\\r\\n    overflow-x: hidden;\\r\\n  }\\r\\n\\r\\n  .footer-wrapper {\\r\\n    background: lightgreen;\\r\\n    min-height: 87px;\\r\\n  }\\r\\n\\r\\n  td {\\r\\n    border: 1px solid #e6e6e6;\\r\\n    height: 24px;\\r\\n\\r\\n  }\\r\\n\\r\\n  input, select {\\r\\n    /* padding: 8px; */\\r\\n    border: 0px;\\r\\n    width: 88%;\\r\\n    margin: 1.5% 2%;\\r\\n    border: 1px solid #ddd;\\r\\n    border-radius: 5px;\\r\\n  }\\r\\n  \\r\\n\\r\\n  th {\\r\\n    font-weight: bold;\\r\\n    font-family: Roboto, Arial, sans-serif;\\r\\n\\r\\n  }\\r\\n\\r\\n  thead th {\\r\\n    color: #fff !important;\\r\\n    padding-left: 10px;\\r\\n  }\\r\\n\\r\\n  .input_hight {\\r\\n    height: 24px;\\r\\n  }\\r\\n\\r\\n  select {\\r\\n    margin: 5px 0;\\r\\n    margin-left: 2%;\\r\\n  }\\r\\n\\r\\n  select label {\\r\\n    margin-top: 9px;\\r\\n  }\\r\\n\\r\\n  .totalvalue {\\r\\n    align-items: center;\\r\\n  }\\r\\n\\r\\n  .totalvalue label {\\r\\n    white-space: nowrap;\\r\\n    margin-bottom: 0 !important;\\r\\n    padding: 0 10px;\\r\\n\\r\\n  }\\r\\n\\r\\n  .totalvalue input {\\r\\n    height: 25px;\\r\\n  }\\r\\n\\r\\n  .radioBUttons input {\\r\\n    margin-left: -40%;\\r\\n  }\\r\\n\\r\\n  .radioBUttons .form-check+.form-check {\\r\\n    margin-top: 0;\\r\\n  }\\r\\n\\r\\n  .radioBUttons .form-check {\\r\\n    margin-right: 10px;\\r\\n  }\\r\\n\\r\\n  .radioBUttons {\\r\\n    margin-left: 140px;\\r\\n    margin-top: 5px;\\r\\n  }\\r\\n\\r\\n  .radioBUttons .form-check-label {\\r\\n    padding-left: 1.25rem;\\r\\n    margin-bottom: 0;\\r\\n    cursor: pointer;\\r\\n    font-size: 12px;\\r\\n  }\\r\\n\\r\\n  .sectionWrapper button {\\r\\n    background-color: #4472C4;\\r\\n  }\\r\\n  .form-control[disabled], .form-control[readonly], fieldset[disabled] .form-control {\\r\\n    color: #000 !important;\\r\\n  }\\r\\n\\r\\n\\r\\nthead th{\\r\\n  text-align: center;\\r\\n    border: 1px solid #fff;\\r\\n    padding: 4px;\\r\\n    vertical-align: middle;\\r\\n    font-weight: normal    ;\\r\\n}\\r\\n.table > tbody > tr > td {\\r\\n  text-align: center;\\r\\n}\\r\\n\\r\\n.disabled {\\r\\n  pointer-events: none; /* Prevents interaction with the disabled rows */\\r\\n  color: gray; /* Change the text color to indicate the row is disabled */\\r\\n}\\r\\n</style>\\r\\n\\r\\n\\r\\n<!-- <for-account-group-popup-grid #acPopupGrid (onItemDoubleClick)=\\\"onItemDoubleClick($event)\\\" [Prefix]=\\\"Prefix\\\">\\r\\n</for-account-group-popup-grid> -->\\r\\n<div class=\\\"sectionWrapper\\\">\\r\\n  <div class=\\\"clearfix\\\">\\r\\n    <div class=\\\"topWrapper\\\">\\r\\n      <div class=\\\"sticky-top\\\" style=\\\"top: 65px;\\\">\\r\\n\\r\\n        <div class=\\\"col-md-1\\\">\\r\\n          <voucher-master-toggler></voucher-master-toggler>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-6\\\">\\r\\n          <label\\r\\n            style=\\\"font-family: Segoe UI Light;font-weight: bold;font-size: 20px;padding-left: 5%;padding-top: 1%;\\\">{{BudgetObj.MODE}}\\r\\n            BUDGET</label>\\r\\n\\r\\n        </div>\\r\\n       \\r\\n\\r\\n        <div class=\\\"col-md-5\\\">\\r\\n          <button class=\\\"btn btn-info pull-right\\\" style=\\\"margin-right : 10px;\\\"\\r\\n            routerLink=\\\"/pages/account/AccountLedger/budget-master\\\" >\\r\\n            F10 Back\\r\\n          </button>\\r\\n          <button type=\\\"button \\\" class=\\\"btn btn-info pull-right\\\" style=\\\"margin-right : 10px;\\\" (click)=\\\"saveClick()\\\"\\r\\n          [disabled]=\\\"BudgetObj.MODE=='VIEW' || transaction_status_check\\\">\\r\\n           F6 Save\\r\\n          </button>\\r\\n\\r\\n          <button type=\\\"button \\\" class=\\\"btn btn-info pull-right\\\" style=\\\"margin-right : 10px;\\\" (click)=\\\"reset()\\\">\\r\\n          <!-- [disabled]=\\\"BudgetObj.MODE=='VIEW' || BudgetObj.MODE=='EDIT'\\\"> -->\\r\\n           F3 Reset\\r\\n          </button>\\r\\n          <button [disabled]=\\\"BudgetObj.MODE=='VIEW'\\\" type=\\\"button\\\" class=\\\"btn btn-info pull-right\\\" style=\\\"margin-right : 10px;\\\" (click)=\\\"displayBudgetImportPopup()\\\">\\r\\n           Budget Import\\r\\n          </button>\\r\\n\\r\\n          <!-- <voucher-master-action></voucher-master-action> -->\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"main-container\\\"  style=\\\"margin-bottom: 0  !important; height:100%\\\">\\r\\n      <div class=\\\"clearfix\\\" *ngIf=\\\"masterService.ShowMore\\\">\\r\\n\\r\\n        <!-- <trnmain-voucher-entry></trnmain-voucher-entry> -->\\r\\n\\r\\n        <div class=\\\"col-md-12\\\" style=\\\"border-bottom: 1px solid #828080;\\r\\n      margin-top:14px;\\r\\n      margin-bottom: 5px;\\r\\n      padding-bottom: 10px;\\r\\n      background: #e2eaea; padding-top: 9px;\\r\\n      width: 100%;\\r\\n     \\\">\\r\\n          <div style=\\\"display: flex;\\\">\\r\\n          </div>\\r\\n          <!-- <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-3\\\">\\r\\n              <label>Voucher No :</label>\\r\\n              <b>{{BudgetObj.BUDGET_NUMBER}}</b>\\r\\n            </div>\\r\\n          </div> -->\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-lg-7\\\">\\r\\n              <div class=\\\"budgetName\\\" style=\\\"display: flex; align-items: center;\\\">\\r\\n\\r\\n                <label style=\\\"flex: 0 0 15%; margin-top: 9px;\\\">Budget Name :</label>\\r\\n                <input type=\\\"text\\\" style=\\\"height:24px;width: 95% !important; margin-top: 5px; margin-bottom: 5px;\\\"\\r\\n                  [(ngModel)]=\\\"BudgetObj.BUDGET_NAME\\\" autocomplete=\\\"off\\\" [disabled]=\\\"BudgetObj.MODE=='VIEW' || transaction_status_check\\\">\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-lg-6\\\">\\r\\n                  <div class=\\\"Interval\\\" style=\\\"display: flex;\\\">\\r\\n                    <label style=\\\"flex: 0 0 34%; margin-top: 9px;\\\">Interval :</label>\\r\\n                    <select style=\\\"flex: 0 0 33%\\\" class=\\\"form-select form-control\\\"\\r\\n                      [(ngModel)]=\\\"BudgetObj.BUDGET_INTERVAL\\\" (change)=\\\"ChooseInterval($event)\\\"\\r\\n                      [disabled]=\\\"BudgetObj.MODE=='VIEW' || (BudgetObj.MODE=='ADD' && costcenterDetailListTotal>0) || transaction_status_check\\\">\\r\\n                      <option value=\\\"YEARLY\\\">Annually</option>\\r\\n                      <option value=\\\"QUARTERLY\\\">Quarterly</option>\\r\\n                      <option value=\\\"MONTHLY\\\">Monthly</option>\\r\\n                    </select>\\r\\n                    <div *ngIf=\\\"BudgetObj.BUDGET_INTERVAL != 'YEARLY'\\\" class=\\\"Datetype\\\" style=\\\"    display: flex;\\r\\n                    align-items: center;\\r\\n                    flex: 0 0 36%;\\\">\\r\\n                      <div class=\\\"form-check\\\" style=\\\"margin-bottom: 0;\\r\\n                      font-size: 11px;\\\">\\r\\n                        <input  [disabled]=\\\"BudgetObj.MODE=='VIEW' || transaction_status_check\\\" class=\\\"form-check-input\\\" type=\\\"radio\\\" name=\\\"interval\\\" id=\\\"bsInterval\\\" checked\\r\\n                          (change)=\\\"ChooseBsInterval($event)\\\" value=\\\"BSINTERVAL\\\"\\r\\n                          [(ngModel)]=\\\"BudgetObj.INTERVAL_ON_AD_OR_BS\\\">\\r\\n                        <label class=\\\"form-check-label\\\" for=\\\"bsInterval\\\" style=\\\"padding-left: 2.25rem;\\\">\\r\\n                          B.S\\r\\n                        </label>\\r\\n                      </div>\\r\\n                      <!-- <div class=\\\"form-check\\\" style=\\\"margin-bottom: 0; margin-top: 0;\\r\\n                      font-size: 11px;\\\">\\r\\n                        <input  [disabled]=\\\"BudgetObj.MODE=='VIEW'\\\" class=\\\"form-check-input\\\" type=\\\"radio\\\" name=\\\"interval\\\" id=\\\"adInterval\\\"\\r\\n                          (change)=\\\"ChooseAdInterval($event)\\\" value=\\\"ADINTERVAL\\\"\\r\\n                          [(ngModel)]=\\\"BudgetObj.INTERVAL_ON_AD_OR_BS\\\">\\r\\n                        <label class=\\\"form-check-label\\\" for=\\\"adInterval\\\" style=\\\"padding-left: 2.25rem;\\\">\\r\\n                          A.D\\r\\n                        </label>\\r\\n                      </div> -->\\r\\n                    </div>\\r\\n\\r\\n\\r\\n                  </div>\\r\\n                  <!-- <div class=\\\"fromdate\\\" style=\\\"display: flex; align-items: center;\\\">\\r\\n                    <label style=\\\"flex: 0 0 34%;\\\">From:</label>\\r\\n                    <input style=\\\"flex: 0 0 28%; height: 24px; \\r\\n                font-size: 12px;\\\" placeholder=\\\"Year Start Date\\\" (change)=\\\"changeFromDate($event.target.value,'AD')\\\"\\r\\n                      [(ngModel)]=\\\"BudgetObj.FROM_DATE\\\" type=\\\"date\\\" disabled>\\r\\n                    <label style=\\\"flex: 0 0 8%; margin-left: 0%;  font-size: 11px;\\\"> (A.D)</label>\\r\\n\\r\\n                    <div style=\\\"flex: 0 0 28%; height: 24px;\\r\\n          font-size: 12px;\\\">\\r\\n                      <nepali-date-picker name=\\\"nepaliDateFrom\\\" [id]=\\\"'nepaliDatefrom'\\\"\\r\\n                        (change)=\\\"changeFromDate($event.detail.value,'BS')\\\" [(ngModel)]=\\\"BudgetObj.FROM_BSDATE\\\">\\r\\n                      </nepali-date-picker>\\r\\n                    </div>\\r\\n                    <label style=\\\" flex: 0 0 8%;\\r\\n            margin-left: 0%; font-size: 11px;\\\"> (B.S)</label>\\r\\n                  </div>\\r\\n\\r\\n                  <div class=\\\"todate\\\" style=\\\"display: flex; align-items: center;\\\">\\r\\n                    <label style=\\\"flex: 0 0 34%;\\\">To:</label>\\r\\n                    <input style=\\\"flex: 0 0 28%; height: 24px;\\r\\n          font-size: 12px;\\\" placeholder=\\\"Year Start Date\\\" [(ngModel)]=\\\"BudgetObj.TO_DATE\\\"\\r\\n                      (change)=\\\"changeToDate($event.target.value,'AD')\\\" type=\\\"date\\\" disabled>\\r\\n                    <label style=\\\"flex: 0 0 8%; margin-left: 0%;  font-size: 11px;\\\"> (A.D)</label>\\r\\n\\r\\n                    <div style=\\\"flex: 0 0 28%; height: 24px;\\r\\n          font-size: 12px;\\\">\\r\\n                      <nepali-date-picker name=\\\"nepaliDateTo\\\" [id]=\\\"'nepaliDateTo'\\\"\\r\\n                        (change)=\\\"changeToDate($event.detail.value,'BS')\\\" [(ngModel)]=\\\"BudgetObj.TO_BSDATE\\\">\\r\\n                      </nepali-date-picker>\\r\\n                    </div>\\r\\n                    <label style=\\\" flex: 0 0 8%;\\r\\n                    margin-left: 0%; font-size: 11px;\\\"> (B.S)</label>\\r\\n\\r\\n                  </div> -->\\r\\n                </div>\\r\\n                <div class=\\\"col-lg-6\\\">\\r\\n                  <div class=\\\" Pre-FillData\\\" style=\\\"display: flex; align-items: center;\\\">\\r\\n\\r\\n                    <label style=\\\"flex: 0 0 30%; margin-top: 9px;\\\">Pre-Fill Data :</label>\\r\\n                    <input type=\\\"text\\\" style=\\\"font-weight: bold; height:24px;width: 95% !important;\\\"\\r\\n                      class=\\\"form-control accountLedger\\\" [(ngModel)]=\\\"BudgetObj.PREFILL_DATA\\\"\\r\\n                      placeholder=\\\"Press Enter for Pre-Fill Data List\\\"  (keydown.Tab)=\\\"focusNext(0, 'subdividedby')\\\"\\r\\n                      (keydown.enter)=\\\"PreFillDataClicked($event)\\\" [disabled]=\\\"BudgetObj.MODE=='VIEW' || transaction_status_check\\\"\\r\\n                      >\\r\\n                  </div>\\r\\n                 \\r\\n           \\r\\n\\r\\n\\r\\n                </div>\\r\\n\\r\\n\\r\\n              </div>\\r\\n\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"col-lg-4\\\">\\r\\n              <!-- <div class=\\\"  TypeofBudget\\\" style=\\\"display: flex;align-items: center; \\\">\\r\\n\\r\\n                <label style=\\\"flex: 0 0 30%; margin-top: 9px;\\\">Type of Budget :</label>\\r\\n\\r\\n                <select style=\\\"flex: 0 0 65%\\\" class=\\\"form-select form-control\\\" [(ngModel)]=\\\"BudgetObj.BUDGET_TYPE\\\"\\r\\n                  [disabled]=\\\"BudgetObj.MODE=='VIEW'\\\">\\r\\n                  <option value=\\\"ON_NET_TRANSACTION\\\">On Net Transaction</option>\\r\\n                  <option value=\\\"ON_CLOSING_BALANCE\\\">On Closing Balance</option>\\r\\n                </select>\\r\\n              </div> -->\\r\\n\\r\\n             \\r\\n              <div class=\\\"SubDivided\\\" style=\\\"display: flex;align-items: center; \\\">\\r\\n\\r\\n                <label style=\\\"flex: 0 0 30%; margin-top: 9px;\\\">Sub divided by :</label>\\r\\n\\r\\n                <select #subdividedby style=\\\"flex: 0 0 65%\\\" class=\\\"form-select form-control\\\" [(ngModel)]=\\\"BudgetObj.SUBDIVIDED_BY\\\" (change)=\\\"onSubdivideByChange()\\\"\\r\\n                  [disabled]=\\\"BudgetObj.MODE=='VIEW' || (BudgetObj.MODE=='ADD' && costcenterDetailListTotal>0) || transaction_status_check\\\">\\r\\n                  <option value=\\\"DONOT_SUBDIVIDE\\\">Donot sub divide</option>\\r\\n                  <!-- <option value=\\\"DEPARTMENT\\\">Department</option> -->\\r\\n                  <option  *ngIf=\\\"userSetting.enableCostCenter == 1 || userSetting.enableCostCenter == 2\\\" value=\\\"COSTCENTER\\\">Cost Center</option>\\r\\n                </select>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\" Action \\\" style=\\\"display: flex;\\\">\\r\\n\\r\\n                <label style=\\\"flex: 0 0 19%;\\r\\n                margin-top: 9px;\\r\\n                margin-left: 11%;\\\">Action :</label>\\r\\n                <select style=\\\"flex: 0 0 65%\\\" class=\\\"form-select form-control\\\" (change)=\\\"SelectionAction($event)\\\" (keydown.Tab)=\\\"focusNext(0)\\\"\\r\\n                  [(ngModel)]=\\\"BudgetObj.ACTION\\\" [disabled]=\\\"BudgetObj.MODE=='VIEW' || transaction_status_check\\\">\\r\\n                  <option selected value=\\\"IGNORE\\\">Ignore</option>\\r\\n                  <option value=\\\"WARN\\\">Warn</option>\\r\\n                  <option value=\\\"STOP\\\">Stop</option>\\r\\n                </select>\\r\\n\\r\\n\\r\\n              </div>\\r\\n              <!-- <div class=\\\"radioBUttons\\\" *ngIf=\\\"showActionCheckBox==true\\\"\\r\\n              style=\\\"display: flex; align-items: center;\\\">\\r\\n              <div class=\\\"form-check\\\">\\r\\n                <input class=\\\"form-check-input\\\" type=\\\"radio\\\" name=\\\"flexRadioDefault\\\" id=\\\"Monthly\\\"\\r\\n                  [(ngModel)]=\\\"BudgetObj.ACTION_TYPE\\\" value=\\\"MONTHLY\\\" [disabled]=\\\"BudgetObj.MODE=='VIEW' || BudgetObj.BUDGET_INTERVAL!=''\\\" [checked]=\\\"BudgetObj.BUDGET_INTERVAL=='MONTHLY'\\\">\\r\\n                <label class=\\\"form-check-label\\\" for=\\\"Monthly\\\">\\r\\n                  Monthly\\r\\n                </label>\\r\\n              </div>\\r\\n              <div class=\\\"form-check\\\">\\r\\n                <input class=\\\"form-check-input\\\" type=\\\"radio\\\" name=\\\"flexRadioDefault\\\" id=\\\"Quaterly\\\"\\r\\n                  [(ngModel)]=\\\"BudgetObj.ACTION_TYPE\\\" value=\\\"QUARTERLY\\\" [disabled]=\\\"BudgetObj.MODE=='VIEW' || BudgetObj.BUDGET_INTERVAL!=''\\\" [checked]=\\\"BudgetObj.BUDGET_INTERVAL=='QUARTERLY'\\\">\\r\\n                <label class=\\\"form-check-label\\\" for=\\\"Quaterly\\\" >\\r\\n                  Quaterly\\r\\n                </label>\\r\\n              </div>\\r\\n              <div class=\\\"form-check\\\">\\r\\n                <input class=\\\"form-check-input\\\" type=\\\"radio\\\" name=\\\"flexRadioDefault\\\" id=\\\"Annually\\\"\\r\\n                  [(ngModel)]=\\\"BudgetObj.ACTION_TYPE\\\" value=\\\"ANNUALLY\\\" [disabled]=\\\"BudgetObj.MODE=='VIEW' || BudgetObj.BUDGET_INTERVAL!=''\\\" [checked]=\\\"BudgetObj.BUDGET_INTERVAL=='ANNUALLY' || BudgetObj.BUDGET_INTERVAL=='YEARLY'\\\">\\r\\n                <label class=\\\"form-check-label\\\" for=\\\"Annually\\\">\\r\\n                  Annually\\r\\n                </label>\\r\\n              </div>\\r\\n\\r\\n            </div> -->\\r\\n\\r\\n            </div>\\r\\n\\r\\n          </div>\\r\\n\\r\\n\\r\\n\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"row\\\" style=\\\"margin: 0;\\\" >\\r\\n        <ul class=\\\"nav nav-tabs\\\" style=\\\"background-color:#CFD5EA ;\\\">\\r\\n          <li class=\\\"nav-item\\\">\\r\\n            <a class=\\\"nav-link active\\\" href=\\\"#budgetEntry\\\" data-toggle=\\\"tab\\\" style=\\\"color:#000\\\">Budget Entry</a>\\r\\n          </li>\\r\\n         \\r\\n         \\r\\n          <li class=\\\"nav-item\\\" *ngIf=\\\"BudgetObj.SUBDIVIDED_BY=='COSTCENTER'\\\">\\r\\n            <a class=\\\"nav-link\\\" href=\\\"#costCenterdetails\\\"  data-toggle=\\\"tab\\\" style=\\\"color:#000\\\">Cost Center Details</a>\\r\\n          </li>\\r\\n\\r\\n        </ul>\\r\\n         \\r\\n        \\r\\n        <!-- <div class=\\\"titleWrapper\\\" style=\\\"background-color:#CFD5EA ; padding: 10px;\\\">\\r\\n          <h6 style=\\\"margin: 0;\\\">ACCOUNT LIST</h6>\\r\\n        </div> -->\\r\\n\\r\\n        <div class=\\\"tab-content\\\">\\r\\n          <div class=\\\"tab-pane active\\\" id=\\\"budgetEntry\\\">\\r\\n             <div class=\\\"row\\\" style=\\\"position: relative; height:30px\\\" *ngIf=\\\"BudgetObj.SUBDIVIDED_BY=='COSTCENTER'\\\">\\r\\n          <div *ngIf=\\\"userSetting.EnableCompulsoryCostCategory==1 && BudgetObj.SUBDIVIDED_BY=='COSTCENTER'\\\"\\r\\n            \\r\\n            class=\\\"CostCenterCategory col-md-4\\\" style=\\\"display: flex;\\\">\\r\\n            <label style=\\\"flex: 0 0 35%; margin-top: 9px;\\\">Cost Center Category:</label>\\r\\n\\r\\n            <!-- <select [disabled]=\\\"BudgetObj.MODE=='VIEW'\\\" class=\\\"form-select\\\" aria-label=\\\"Default select example\\\" [(ngModel)]=\\\"BudgetObj.COSTCENTER_CATEGORYID\\\" (change)=\\\"showCostCenterGroupChange($event)\\\">\\r\\n              <option selected value=\\\"%\\\"> </option>\\r\\n              <option *ngFor=\\\"let i of costCenterCategoryList\\\" value={{i.ccgid}}>{{i.COSTCENTERGROUPNAME}}\\r\\n              </option>\\r\\n           \\r\\n            </select> -->\\r\\n            <input type=\\\"text\\\" style=\\\"font-weight: bold; height:24px;width: 95% !important;\\\"\\r\\n              class=\\\"form-control accountLedger\\\" [(ngModel)]=\\\"BudgetObj.COSTCENTER_CATEGORYNAME\\\"\\r\\n              placeholder=\\\"Press Enter or Tab for Cost Center Category List\\\"\\r\\n              (keydown.Tab)=\\\"showCostCenterGroupList($event)\\\" (keydown.enter)=\\\"showCostCenterGroupList($event)\\\"\\r\\n              [disabled]=\\\"transaction_status_check\\\" (keydown)=\\\"preventInput($event)\\\"autocomplete=\\\"off\\\">\\r\\n          </div>\\r\\n          <div class=\\\"CostCenter col-md-4\\\" style=\\\"display: flex;\\\" *ngIf=\\\"BudgetObj.SUBDIVIDED_BY=='COSTCENTER' && userSetting.COSTCENTERCOMPULSORY==1\\\">\\r\\n            <label style=\\\"flex: 0 0 21%; margin-top: 9px;\\\">Cost Center :</label>\\r\\n\\r\\n            <!-- <select [disabled]=\\\"BudgetObj.MODE=='VIEW'\\\" class=\\\"form-select\\\" aria-label=\\\"Default select example\\\" [(ngModel)]=\\\"BudgetObj.CCID\\\" (change)=\\\"onCostCenterSelect($event)\\\">\\r\\n              <option selected value=\\\"%\\\"> </option>\\r\\n              <option *ngFor=\\\"let i of costCenterList\\\" value={{i.CCID}}>{{i.COSTCENTERNAME}}\\r\\n              </option>\\r\\n           \\r\\n            </select> -->\\r\\n            <input id=\\\"costCenterInput\\\" type=\\\"text\\\" style=\\\"font-weight: bold; height:24px;width: 95% !important;\\\"\\r\\n              class=\\\"form-control accountLedger\\\" [(ngModel)]=\\\"BudgetObj.COSTCENTER_NAME\\\"\\r\\n              placeholder=\\\"Press Enter or Tab for Cost Center List\\\" (keydown.Tab)=\\\"showCostCenterList($event)\\\"\\r\\n              (keydown.enter)=\\\"showCostCenterList($event)\\\" [disabled]=\\\"transaction_status_check\\\"\\r\\n              (keydown)=\\\"preventInput($event)\\\" autocomplete=\\\"off\\\">\\r\\n          </div>\\r\\n          <div *ngIf=\\\"BudgetObj.SUBDIVIDED_BY=='COSTCENTER'\\\">\\r\\n            <button class=\\\"btn btn-info pull-right\\\" (click)=\\\"Apply()\\\" style=\\\" color: #fff;\\r\\n            margin-left: 20px;\\r\\n            margin-top: 5px;\\r\\n            position: absolute;\\r\\n            right: 21px;\\r\\n            margin-top: 10px;\\r\\n            border: none;\\r\\n            padding: 6px;\\r\\n            top: -5px;;\\\" [disabled]=\\\"BudgetObj.MODE=='VIEW' || disableAmt || transaction_status_check\\\">Apply</button>\\r\\n          </div>\\r\\n\\r\\n             </div>\\r\\n             <!-- <div class=\\\"midTableWrapper\\\"> -->\\r\\n              <div class=\\\"clearfix\\\" style=\\\"margin-top: 5px\\\">\\r\\n          \\r\\n          \\r\\n                <div class=\\\"row\\\">\\r\\n                  <div class=\\\"col-lg-12\\\">\\r\\n                    <div style=\\\"padding-right: 0px !important; padding-left: 0px !important;\\\">\\r\\n                      <div style=\\\"height:auto; overflow-y: scroll\\\">\\r\\n                        <table style=\\\"margin-bottom: 5px;font-size: 13px;width: 100%;\\\">\\r\\n                          <thead>\\r\\n                            <tr style=\\\" border-bottom: 2px solid #E6E6E6;\\r\\n                                                    border-top: 2px solid #E6E6E6;\\r\\n                                                    height: 30px;\\r\\n                                                    background: #4472C4;\\r\\n                                                    color: #fff;\\\">\\r\\n                              <!-- <th style=\\\"width: 2%;\\\">SNo.</th> -->\\r\\n                              <ng-container *ngFor=\\\"let column of genericTableList; let i = index\\\">\\r\\n          \\r\\n                                <th *ngIf=\\\"!column.hidden\\\" [ngStyle]=\\\"column.headerNgStyle\\\">\\r\\n                                  {{column.header}}\\r\\n                                </th>\\r\\n                              </ng-container>\\r\\n                              <!-- <th style=\\\"width: 11%;padding-left: 1%;\\\">\\r\\n                                Account Ledger\\r\\n                              </th>\\r\\n                              <th style=\\\"width: 11%;padding-left: 1%;\\\">\\r\\n                                Amount\\r\\n                              </th> -->\\r\\n          \\r\\n                            </tr>\\r\\n                          </thead>\\r\\n                          <tbody *ngFor=\\\"let t of temp_DetailList; let i = index\\\" (click)=\\\"rowClick(i)\\\" [ngClass]=\\\"{ 'disabled': transaction_status_check}\\\">\\r\\n                            <!-- <ng-container > -->\\r\\n          \\r\\n                            <tr style=\\\"border: 1px solid #e6e6e6;max-height:25px;\\\">\\r\\n                              <!-- <ng-container *ngIf=\\\"!col.hidden\\\"> -->\\r\\n          \\r\\n          \\r\\n                              <td style=\\\"line-height:21px; text-align:center\\\">\\r\\n                                {{i+1}}\\r\\n                              </td>\\r\\n                              <td style=\\\"line-height:21px; text-align:center\\\">\\r\\n                                <input type=\\\"text\\\" style=\\\"height:24px;width: 95% !important;\\\" placeholder=\\\"Press Enter to select\\\" [id]=\\\"'accountgroup_'+i\\\"\\r\\n                                  (keydown.Enter)=\\\"AccountGroupClick(i);focusNext(0, 'accountGroupSelectField');\\\" [(ngModel)]=\\\"t.ACCOUNTGROUP_NAME\\\"\\r\\n                                  (keydown)=\\\"preventInput($event)\\\" (keydown.tab)=\\\"focusNext(i, 'ledger')\\\" autocomplete=\\\"off\\\" [disabled]=\\\"BudgetObj.MODE=='VIEW' || disableAmt\\\"\\r\\n                                  (keydown.Shift.Delete)=\\\"clearRow($event,i,t);\\\" (keydown.Shift.Tab)=\\\"focusPrevious(i)\\\">\\r\\n                              </td>\\r\\n                              <td style=\\\"line-height:21px; text-align:center\\\">\\r\\n                                <input type=\\\"text\\\" style=\\\"height:24px;width: 95% !important;\\\" placeholder=\\\"Press Enter to Select Ledger\\\"\\r\\n                                  (keydown.Enter)=\\\"AccountGroupClick(i);focusNext(0, 'searchInputBox');\\\" [(ngModel)]=\\\"t.ACNAME\\\" [id]=\\\"'ledger_'+i\\\"\\r\\n                                  (keydown.tab)=\\\"focusNext(i, 'amount')\\\" autocomplete=\\\"off\\\" [disabled]=\\\"BudgetObj.MODE=='VIEW' || disableAmt\\\"\\r\\n                                  (keydown.Shift.Delete)=\\\"clearRow($event,i,t);\\\">\\r\\n                              </td>\\r\\n          \\r\\n                              <!-- quarterly in bs-interval starts -->\\r\\n                              <td *ngIf=\\\"is_quaterly && BudgetObj.INTERVAL_ON_AD_OR_BS=='BSINTERVAL'\\\"\\r\\n                                style=\\\"line-height:21px; text-align:center\\\">\\r\\n                                <input type=\\\"number\\\" style=\\\"height:24px;width: 95% !important;\\\" [(ngModel)]=\\\"t.SHRAWAN_ASHOJ\\\" [id]=\\\"'shrawanAshojAmountInput_'+i\\\"\\r\\n                                  [disabled]=\\\"BudgetObj.MODE=='VIEW' || disableAmt\\\" (keydown.Shift.Delete)=\\\"clearRow($event,i,t);\\\"\\r\\n                                  (change)=\\\"CalculateSum()\\\" [min]=\\\"0\\\">\\r\\n                              </td>\\r\\n                              <td *ngIf=\\\"is_quaterly && BudgetObj.INTERVAL_ON_AD_OR_BS=='BSINTERVAL'\\\"\\r\\n                                style=\\\"line-height:21px; text-align:center\\\">\\r\\n                                <input type=\\\"number\\\" style=\\\"height:24px;width: 95% !important;\\\" [(ngModel)]=\\\"t.KARTIK_POUSH\\\"\\r\\n                                  [disabled]=\\\"BudgetObj.MODE=='VIEW' || disableAmt\\\" (keydown.Shift.Delete)=\\\"clearRow($event,i,t);\\\"\\r\\n                                  (change)=\\\"CalculateSum()\\\" [min]=\\\"0\\\">\\r\\n                              </td>\\r\\n                              <td *ngIf=\\\"is_quaterly && BudgetObj.INTERVAL_ON_AD_OR_BS=='BSINTERVAL'\\\"\\r\\n                                style=\\\"line-height:21px; text-align:center\\\">\\r\\n                                <input type=\\\"number\\\" style=\\\"height:24px;width: 95% !important;\\\" [(ngModel)]=\\\"t.MAGH_CHAITRA\\\"\\r\\n                                  [disabled]=\\\"BudgetObj.MODE=='VIEW' || disableAmt\\\" (keydown.Shift.Delete)=\\\"clearRow($event,i,t);\\\"\\r\\n                                  (change)=\\\"CalculateSum()\\\" [min]=\\\"0\\\">\\r\\n                              </td>\\r\\n                              <td *ngIf=\\\"is_quaterly && BudgetObj.INTERVAL_ON_AD_OR_BS=='BSINTERVAL'\\\"\\r\\n                                style=\\\"line-height:21px; text-align:center\\\">\\r\\n                                <input type=\\\"number\\\" style=\\\"height:24px;width: 95% !important;\\\" [(ngModel)]=\\\"t.BAISAKH_ASAR\\\" (keydown.Tab)=\\\"nextrow(i,t)\\\"\\r\\n                                  [disabled]=\\\"BudgetObj.MODE=='VIEW' || disableAmt\\\" (change)=\\\"CalculateSum()\\\"\\r\\n                                  (keydown.Shift.Delete)=\\\"clearRow($event,i,t);\\\"(keydown.enter)=\\\"nextrow(i,t)\\\" [min]=\\\"0\\\">\\r\\n                              </td>\\r\\n                              <!-- quarterly in bs-interval ends -->\\r\\n          \\r\\n                              <!-- quarterly in ad-interval starts -->\\r\\n                              <td *ngIf=\\\"is_quaterly && BudgetObj.INTERVAL_ON_AD_OR_BS=='ADINTERVAL'\\\"\\r\\n                                style=\\\"line-height:21px; text-align:center\\\">\\r\\n                                <input type=\\\"number\\\" style=\\\"height:24px;width: 95% !important;\\\" [(ngModel)]=\\\"t.JULY_SEPTEMBER\\\"\\r\\n                                  [disabled]=\\\"BudgetObj.MODE=='VIEW' || disableAmt\\\" (change)=\\\"CalculateSum()\\\"\\r\\n                                  (keydown.Shift.Delete)=\\\"clearRow($event,i,t);\\\" [min]=\\\"0\\\">\\r\\n                              </td>\\r\\n                              <td *ngIf=\\\"is_quaterly && BudgetObj.INTERVAL_ON_AD_OR_BS=='ADINTERVAL'\\\"\\r\\n                                style=\\\"line-height:21px; text-align:center\\\">\\r\\n                                <input type=\\\"number\\\" style=\\\"height:24px;width: 95% !important;\\\" [(ngModel)]=\\\"t.OCTOBER_DECEMBER\\\"\\r\\n                                  [disabled]=\\\"BudgetObj.MODE=='VIEW' || disableAmt\\\" (change)=\\\"CalculateSum()\\\"\\r\\n                                  (keydown.Shift.Delete)=\\\"clearRow($event,i,t);\\\" [min]=\\\"0\\\">\\r\\n                              </td>\\r\\n                              <td *ngIf=\\\"is_quaterly && BudgetObj.INTERVAL_ON_AD_OR_BS=='ADINTERVAL'\\\"\\r\\n                                style=\\\"line-height:21px; text-align:center\\\">\\r\\n                                <input type=\\\"number\\\" style=\\\"height:24px;width: 95% !important;\\\" [(ngModel)]=\\\"t.JANUARY_MARCH\\\"\\r\\n                                  [disabled]=\\\"BudgetObj.MODE=='VIEW' || disableAmt\\\" (change)=\\\"CalculateSum()\\\"\\r\\n                                  (keydown.Shift.Delete)=\\\"clearRow($event,i,t);\\\" [min]=\\\"0\\\">\\r\\n                              </td>\\r\\n                              <td *ngIf=\\\"is_quaterly && BudgetObj.INTERVAL_ON_AD_OR_BS=='ADINTERVAL'\\\"\\r\\n                                style=\\\"line-height:21px; text-align:center\\\">\\r\\n                                <input type=\\\"number\\\" style=\\\"height:24px;width: 95% !important;\\\" [(ngModel)]=\\\"t.APRIL_JUNE\\\"\\r\\n                                  [disabled]=\\\"BudgetObj.MODE=='VIEW' || disableAmt\\\" (change)=\\\"CalculateSum()\\\"\\r\\n                                  (keydown.Shift.Delete)=\\\"clearRow($event,i,t);\\\"(keydown.enter)=\\\"nextrow(i,t)\\\" [min]=\\\"0\\\">\\r\\n                              </td>\\r\\n                              <!-- quarterly in ad-interval ends -->\\r\\n          \\r\\n                              <!-- monthly in bs-interval starts -->\\r\\n                              <td *ngIf=\\\"is_monthly && BudgetObj.INTERVAL_ON_AD_OR_BS=='BSINTERVAL'\\\"\\r\\n                                style=\\\"line-height:21px; text-align:center\\\">\\r\\n                                <input type=\\\"number\\\" style=\\\"height:24px;width: 95% !important;\\\" [(ngModel)]=\\\"t.SHRAWAN\\\" [id]=\\\"'shrawanAmountInput_'+i\\\"\\r\\n                                  [disabled]=\\\"BudgetObj.MODE=='VIEW' || disableAmt\\\" (keydown.Shift.Delete)=\\\"clearRow($event,i,t);\\\"\\r\\n                                  (change)=\\\"CalculateSum()\\\" [min]=\\\"0\\\">\\r\\n                              </td>\\r\\n                              <td *ngIf=\\\"is_monthly && BudgetObj.INTERVAL_ON_AD_OR_BS=='BSINTERVAL'\\\"\\r\\n                                style=\\\"line-height:21px; text-align:center\\\">\\r\\n                                <input type=\\\"number\\\" style=\\\"height:24px;width: 95% !important;\\\" [(ngModel)]=\\\"t.BHADRA\\\"\\r\\n                                  [disabled]=\\\"BudgetObj.MODE=='VIEW' || disableAmt\\\" (keydown.Shift.Delete)=\\\"clearRow($event,i,t);\\\"\\r\\n                                  (change)=\\\"CalculateSum()\\\" [min]=\\\"0\\\">\\r\\n                              </td>\\r\\n                              <td *ngIf=\\\"is_monthly && BudgetObj.INTERVAL_ON_AD_OR_BS=='BSINTERVAL'\\\"\\r\\n                                style=\\\"line-height:21px; text-align:center\\\">\\r\\n                                <input type=\\\"number\\\" style=\\\"height:24px;width: 95% !important;\\\" [(ngModel)]=\\\"t.ASHOJ\\\"\\r\\n                                  [disabled]=\\\"BudgetObj.MODE=='VIEW' || disableAmt\\\" (keydown.Shift.Delete)=\\\"clearRow($event,i,t);\\\"\\r\\n                                  (change)=\\\"CalculateSum()\\\" [min]=\\\"0\\\">\\r\\n                              </td>\\r\\n                              <td *ngIf=\\\"is_monthly && BudgetObj.INTERVAL_ON_AD_OR_BS=='BSINTERVAL'\\\"\\r\\n                                style=\\\"line-height:21px; text-align:center\\\">\\r\\n                                <input type=\\\"number\\\" style=\\\"height:24px;width: 95% !important;\\\" [(ngModel)]=\\\"t.KARTIK\\\"\\r\\n                                  [disabled]=\\\"BudgetObj.MODE=='VIEW' || disableAmt\\\" (keydown.Shift.Delete)=\\\"clearRow($event,i,t);\\\"\\r\\n                                  (change)=\\\"CalculateSum()\\\" [min]=\\\"0\\\">\\r\\n                              </td>\\r\\n                              <td *ngIf=\\\"is_monthly && BudgetObj.INTERVAL_ON_AD_OR_BS=='BSINTERVAL'\\\"\\r\\n                                style=\\\"line-height:21px; text-align:center\\\">\\r\\n                                <input type=\\\"number\\\" style=\\\"height:24px;width: 95% !important;\\\" [(ngModel)]=\\\"t.MANGSIR\\\"\\r\\n                                  [disabled]=\\\"BudgetObj.MODE=='VIEW' || disableAmt\\\" (keydown.Shift.Delete)=\\\"clearRow($event,i,t);\\\"\\r\\n                                  (change)=\\\"CalculateSum()\\\" [min]=\\\"0\\\">\\r\\n                              </td>\\r\\n                              <td *ngIf=\\\"is_monthly && BudgetObj.INTERVAL_ON_AD_OR_BS=='BSINTERVAL'\\\"\\r\\n                                style=\\\"line-height:21px; text-align:center\\\">\\r\\n                                <input type=\\\"number\\\" style=\\\"height:24px;width: 95% !important;\\\" [(ngModel)]=\\\"t.POUSH\\\"\\r\\n                                  [disabled]=\\\"BudgetObj.MODE=='VIEW' || disableAmt\\\" (keydown.Shift.Delete)=\\\"clearRow($event,i,t);\\\"\\r\\n                                  (change)=\\\"CalculateSum()\\\" [min]=\\\"0\\\">\\r\\n                              </td>\\r\\n                              <td *ngIf=\\\"is_monthly && BudgetObj.INTERVAL_ON_AD_OR_BS=='BSINTERVAL'\\\"\\r\\n                                style=\\\"line-height:21px; text-align:center\\\">\\r\\n                                <input type=\\\"number\\\" style=\\\"height:24px;width: 95% !important;\\\" [(ngModel)]=\\\"t.MAGH\\\"\\r\\n                                  [disabled]=\\\"BudgetObj.MODE=='VIEW' || disableAmt\\\" (keydown.Shift.Delete)=\\\"clearRow($event,i,t);\\\"\\r\\n                                  (change)=\\\"CalculateSum()\\\" [min]=\\\"0\\\">\\r\\n                              </td>\\r\\n                              <td *ngIf=\\\"is_monthly && BudgetObj.INTERVAL_ON_AD_OR_BS=='BSINTERVAL'\\\"\\r\\n                                style=\\\"line-height:21px; text-align:center\\\">\\r\\n                                <input type=\\\"number\\\" style=\\\"height:24px;width: 95% !important;\\\" [(ngModel)]=\\\"t.FALGUN\\\"\\r\\n                                  [disabled]=\\\"BudgetObj.MODE=='VIEW' || disableAmt\\\" (keydown.Shift.Delete)=\\\"clearRow($event,i,t);\\\"\\r\\n                                  (change)=\\\"CalculateSum()\\\" [min]=\\\"0\\\">\\r\\n                              </td>\\r\\n                              <td *ngIf=\\\"is_monthly && BudgetObj.INTERVAL_ON_AD_OR_BS=='BSINTERVAL'\\\"\\r\\n                                style=\\\"line-height:21px; text-align:center\\\">\\r\\n                                <input type=\\\"number\\\" style=\\\"height:24px;width: 95% !important;\\\" [(ngModel)]=\\\"t.CHAITRA\\\"\\r\\n                                  [disabled]=\\\"BudgetObj.MODE=='VIEW' || disableAmt\\\" (change)=\\\"CalculateSum()\\\"\\r\\n                                  (keydown.Shift.Delete)=\\\"clearRow($event,i,t);\\\"(keydown.enter)=\\\"nextrow(i,t)\\\" [min]=\\\"0\\\">\\r\\n                              </td>\\r\\n                              <td *ngIf=\\\"is_monthly && BudgetObj.INTERVAL_ON_AD_OR_BS=='BSINTERVAL'\\\"\\r\\n                                style=\\\"line-height:21px; text-align:center\\\">\\r\\n                                <input type=\\\"number\\\" style=\\\"height:24px;width: 95% !important;\\\" [(ngModel)]=\\\"t.BAISAKH\\\"\\r\\n                                  [disabled]=\\\"BudgetObj.MODE=='VIEW' || disableAmt\\\" (keydown.Shift.Delete)=\\\"clearRow($event,i,t);\\\"\\r\\n                                  (change)=\\\"CalculateSum()\\\" [min]=\\\"0\\\">\\r\\n                              </td>\\r\\n                              <td *ngIf=\\\"is_monthly && BudgetObj.INTERVAL_ON_AD_OR_BS=='BSINTERVAL'\\\"\\r\\n                                style=\\\"line-height:21px; text-align:center\\\">\\r\\n                                <input type=\\\"number\\\" style=\\\"height:24px;width: 95% !important;\\\" [(ngModel)]=\\\"t.JESTHA\\\"\\r\\n                                  [disabled]=\\\"BudgetObj.MODE=='VIEW' || disableAmt\\\" (keydown.Shift.Delete)=\\\"clearRow($event,i,t);\\\"\\r\\n                                  (change)=\\\"CalculateSum()\\\" [min]=\\\"0\\\">\\r\\n                              </td>\\r\\n                              <td *ngIf=\\\"is_monthly && BudgetObj.INTERVAL_ON_AD_OR_BS=='BSINTERVAL'\\\"\\r\\n                                style=\\\"line-height:21px; text-align:center\\\">\\r\\n                                <input type=\\\"number\\\" style=\\\"height:24px;width: 95% !important;\\\" [(ngModel)]=\\\"t.ASAR\\\" (keydown.Tab)=\\\"nextrow(i,t)\\\" (keydown.enter)=\\\"nextrow(i,t)\\\"\\r\\n                                  [disabled]=\\\"BudgetObj.MODE=='VIEW' || disableAmt\\\" (keydown.Shift.Delete)=\\\"clearRow($event,i,t);\\\"\\r\\n                                  (change)=\\\"CalculateSum()\\\" [min]=\\\"0\\\">\\r\\n                              </td>\\r\\n                              <!-- monthly in bs-interval ends -->\\r\\n          \\r\\n                              <!-- monthly in ad-interval starts -->\\r\\n                              <td *ngIf=\\\"is_monthly && BudgetObj.INTERVAL_ON_AD_OR_BS=='ADINTERVAL'\\\"\\r\\n                                style=\\\"line-height:21px; text-align:center\\\">\\r\\n                                <input type=\\\"number\\\" style=\\\"height:24px;width: 95% !important;\\\" [(ngModel)]=\\\"t.JANUARY\\\"\\r\\n                                  [disabled]=\\\"BudgetObj.MODE=='VIEW' || disableAmt\\\" (keydown.Shift.Delete)=\\\"clearRow($event,i,t);\\\"\\r\\n                                  (change)=\\\"CalculateSum()\\\" [min]=\\\"0\\\">\\r\\n                              </td>\\r\\n                              <td *ngIf=\\\"is_monthly && BudgetObj.INTERVAL_ON_AD_OR_BS=='ADINTERVAL'\\\"\\r\\n                                style=\\\"line-height:21px; text-align:center\\\">\\r\\n                                <input type=\\\"number\\\" style=\\\"height:24px;width: 95% !important;\\\" [(ngModel)]=\\\"t.FEBRUARY\\\"\\r\\n                                  [disabled]=\\\"BudgetObj.MODE=='VIEW' || disableAmt\\\" (keydown.Shift.Delete)=\\\"clearRow($event,i,t);\\\"\\r\\n                                  (change)=\\\"CalculateSum()\\\" [min]=\\\"0\\\">\\r\\n                              </td>\\r\\n                              <td *ngIf=\\\"is_monthly && BudgetObj.INTERVAL_ON_AD_OR_BS=='ADINTERVAL'\\\"\\r\\n                                style=\\\"line-height:21px; text-align:center\\\">\\r\\n                                <input type=\\\"number\\\" style=\\\"height:24px;width: 95% !important;\\\" [(ngModel)]=\\\"t.MARCH\\\"\\r\\n                                  [disabled]=\\\"BudgetObj.MODE=='VIEW' || disableAmt\\\" (keydown.Shift.Delete)=\\\"clearRow($event,i,t);\\\"\\r\\n                                  (change)=\\\"CalculateSum()\\\" [min]=\\\"0\\\">\\r\\n                              </td>\\r\\n                              <td *ngIf=\\\"is_monthly && BudgetObj.INTERVAL_ON_AD_OR_BS=='ADINTERVAL'\\\"\\r\\n                                style=\\\"line-height:21px; text-align:center\\\">\\r\\n                                <input type=\\\"number\\\" style=\\\"height:24px;width: 95% !important;\\\" [(ngModel)]=\\\"t.APRIL\\\"\\r\\n                                  [disabled]=\\\"BudgetObj.MODE=='VIEW' || disableAmt\\\" (keydown.Shift.Delete)=\\\"clearRow($event,i,t);\\\"\\r\\n                                  (change)=\\\"CalculateSum()\\\" [min]=\\\"0\\\">\\r\\n                              </td>\\r\\n                              <td *ngIf=\\\"is_monthly && BudgetObj.INTERVAL_ON_AD_OR_BS=='ADINTERVAL'\\\"\\r\\n                                style=\\\"line-height:21px; text-align:center\\\">\\r\\n                                <input type=\\\"number\\\" style=\\\"height:24px;width: 95% !important;\\\" [(ngModel)]=\\\"t.MAY\\\"\\r\\n                                  [disabled]=\\\"BudgetObj.MODE=='VIEW' || disableAmt\\\" (keydown.Shift.Delete)=\\\"clearRow($event,i,t);\\\"\\r\\n                                  (change)=\\\"CalculateSum()\\\" [min]=\\\"0\\\">\\r\\n                              </td>\\r\\n                              <td *ngIf=\\\"is_monthly && BudgetObj.INTERVAL_ON_AD_OR_BS=='ADINTERVAL'\\\"\\r\\n                                style=\\\"line-height:21px; text-align:center\\\">\\r\\n                                <input type=\\\"number\\\" style=\\\"height:24px;width: 95% !important;\\\" [(ngModel)]=\\\"t.JUNE\\\"\\r\\n                                  [disabled]=\\\"BudgetObj.MODE=='VIEW' || disableAmt\\\" (keydown.Shift.Delete)=\\\"clearRow($event,i,t);\\\"\\r\\n                                  (change)=\\\"CalculateSum()\\\" [min]=\\\"0\\\">\\r\\n                              </td>\\r\\n                              <td *ngIf=\\\"is_monthly && BudgetObj.INTERVAL_ON_AD_OR_BS=='ADINTERVAL'\\\"\\r\\n                                style=\\\"line-height:21px; text-align:center\\\">\\r\\n                                <input type=\\\"number\\\" style=\\\"height:24px;width: 95% !important;\\\" [(ngModel)]=\\\"t.JULY\\\"\\r\\n                                  [disabled]=\\\"BudgetObj.MODE=='VIEW' || disableAmt\\\" (keydown.Shift.Delete)=\\\"clearRow($event,i,t);\\\"\\r\\n                                  (change)=\\\"CalculateSum()\\\" [min]=\\\"0\\\">\\r\\n                              </td>\\r\\n                              <td *ngIf=\\\"is_monthly && BudgetObj.INTERVAL_ON_AD_OR_BS=='ADINTERVAL'\\\"\\r\\n                                style=\\\"line-height:21px; text-align:center\\\">\\r\\n                                <input type=\\\"number\\\" style=\\\"height:24px;width: 95% !important;\\\" [(ngModel)]=\\\"t.AUGUST\\\"\\r\\n                                  [disabled]=\\\"BudgetObj.MODE=='VIEW' || disableAmt\\\" (keydown.Shift.Delete)=\\\"clearRow($event,i,t);\\\"\\r\\n                                  (change)=\\\"CalculateSum()\\\" [min]=\\\"0\\\">\\r\\n                              </td>\\r\\n                              <td *ngIf=\\\"is_monthly && BudgetObj.INTERVAL_ON_AD_OR_BS=='ADINTERVAL'\\\"\\r\\n                                style=\\\"line-height:21px; text-align:center\\\">\\r\\n                                <input type=\\\"number\\\" style=\\\"height:24px;width: 95% !important;\\\" [(ngModel)]=\\\"t.SEPTEMBER\\\"\\r\\n                                  [disabled]=\\\"BudgetObj.MODE=='VIEW' || disableAmt\\\" (keydown.Shift.Delete)=\\\"clearRow($event,i,t);\\\"\\r\\n                                  (change)=\\\"CalculateSum()\\\" [min]=\\\"0\\\">\\r\\n                              </td>\\r\\n                              <td *ngIf=\\\"is_monthly && BudgetObj.INTERVAL_ON_AD_OR_BS=='ADINTERVAL'\\\"\\r\\n                                style=\\\"line-height:21px; text-align:center\\\">\\r\\n                                <input type=\\\"number\\\" style=\\\"height:24px;width: 95% !important;\\\" [(ngModel)]=\\\"t.OCTOBER\\\"\\r\\n                                  [disabled]=\\\"BudgetObj.MODE=='VIEW' || disableAmt\\\" (keydown.Shift.Delete)=\\\"clearRow($event,i,t);\\\"\\r\\n                                  (change)=\\\"CalculateSum()\\\" [min]=\\\"0\\\">\\r\\n                              </td>\\r\\n                              <td *ngIf=\\\"is_monthly && BudgetObj.INTERVAL_ON_AD_OR_BS=='ADINTERVAL'\\\"\\r\\n                                style=\\\"line-height:21px; text-align:center\\\">\\r\\n                                <input type=\\\"number\\\" style=\\\"height:24px;width: 95% !important;\\\" [(ngModel)]=\\\"t.NOVEMBER\\\"\\r\\n                                  [disabled]=\\\"BudgetObj.MODE=='VIEW' || disableAmt\\\" (keydown.Shift.Delete)=\\\"clearRow($event,i,t);\\\"\\r\\n                                  (change)=\\\"CalculateSum()\\\" [min]=\\\"0\\\">\\r\\n                              </td>\\r\\n                              <td *ngIf=\\\"is_monthly && BudgetObj.INTERVAL_ON_AD_OR_BS=='ADINTERVAL'\\\"\\r\\n                                style=\\\"line-height:21px; text-align:center\\\">\\r\\n                                <input type=\\\"number\\\" style=\\\"height:24px;width: 95% !important;\\\" [(ngModel)]=\\\"t.DECEMBER\\\"\\r\\n                                  [disabled]=\\\"BudgetObj.MODE=='VIEW' || disableAmt\\\" (change)=\\\"CalculateSum()\\\"\\r\\n                                  (keydown.Shift.Delete)=\\\"clearRow($event,i,t);\\\"(keydown.enter)=\\\"nextrow(i,t)\\\" [min]=\\\"0\\\">\\r\\n                              </td>\\r\\n                              <!-- monthly in ad-interval ends -->\\r\\n          \\r\\n                              <td>\\r\\n                                <input type=\\\"number\\\" class=\\\"input_hight Amount\\\" [(ngModel)]=\\\"t.BUDGET\\\" [id]=\\\"'budgetAmountinput_'+i\\\"\\r\\n                                  [disabled]=\\\"BudgetObj.MODE=='VIEW' || is_monthly || is_quaterly || disableAmt || t.ACCOUNTGROUP_NAME == null\\\" (keydown.Tab)=\\\"nextrow(i,t)\\\"\\r\\n                                  (keydown.enter)=\\\"nextrow(i,t)\\\" (keydown.Shift.Delete)=\\\"clearRow($event,i,t);\\\" (change)=\\\"CalculateSum()\\\" [min]=\\\"0\\\">\\r\\n          \\r\\n          \\r\\n                              </td>\\r\\n          \\r\\n                            </tr>\\r\\n                         \\r\\n                          </tbody>\\r\\n          \\r\\n          \\r\\n                        </table>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n          \\r\\n              </div>\\r\\n\\r\\n            <div *ngIf=\\\"!displayBudgetImportPopUp\\\" class=\\\"footer\\\">\\r\\n              <div class=\\\"row\\\" style=\\\"position: fixed;\\r\\n                   bottom: 20px; background-color: #fff;\\\">\\r\\n          \\r\\n                <tr>\\r\\n                  <td style=\\\"width: 15%;\\\"></td>\\r\\n                  <td style=\\\"width: 7%;\\\">\\r\\n                    <div class=\\\"d-flex\\\" style=\\\"display: flex; align-items: center;\\\">\\r\\n                      <h5 style=\\\"font-weight: bold; margin: 0 ;padding-left:10px; flex: 0 0 5%;\\\">Total:</h5>\\r\\n                      <input style=\\\"flex: 0 0 30%; padding: 5px;\\\" type=\\\"text\\\" placeholder=\\\"0.00:\\\"\\r\\n                        [(ngModel)]=\\\"BudgetObj.TOTAL_BUDGET\\\" disabled>\\r\\n                    </div>\\r\\n          \\r\\n                  </td>\\r\\n          \\r\\n                </tr>\\r\\n          \\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"tab-pane \\\" id=\\\"costCenterdetails\\\">\\r\\n            <div class=\\\"row\\\" style=\\\"margin-right: 0px;\\\">\\r\\n              <button *ngIf=\\\"BudgetObj.SUBDIVIDED_BY=='COSTCENTER'\\\" type=\\\"button \\\" class=\\\"btn btn-info pull-right\\\" (click)=\\\"exportTOExcel(DetailList, 'Budget')\\\" style=\\\"margin-bottom: 5px; background-color: #4472C4;\\\">\\r\\n                Export Budget\\r\\n              </button>\\r\\n            </div>\\r\\n           <table id=\\\"budgetList\\\" class=\\\"table table-striped\\\" >\\r\\n            <thead style=\\\"background-color: #4472C4;\\\">\\r\\n              <tr >\\r\\n                <th >S.N</th>\\r\\n                <th >Account Group</th>\\r\\n                <th >Account Ledger</th>\\r\\n                <th *ngIf=\\\"COSTCENTER_CATEGORYNAME!=null|| COSTCENTER_CATEGORYNAME!=''\\\">Cost Center Category</th>\\r\\n                <th>Cost Center</th>\\r\\n                <th >Total</th>\\r\\n              </tr>\\r\\n            \\r\\n            </thead>\\r\\n            <tbody>\\r\\n\\r\\n             <ng-container *ngIf=\\\"DetailList\\\">\\r\\n              <tr *ngFor=\\\"let entry of DetailList; let i = index\\\">\\r\\n                <td > {{ i+1 }}</td>\\r\\n                <td>{{ entry.ACCOUNTGROUP_NAME }}</td>\\r\\n                <td>{{ entry.ACNAME }}</td>\\r\\n                <td *ngIf=\\\"COSTCENTER_CATEGORYNAME!=null|| COSTCENTER_CATEGORYNAME!=''\\\">{{ entry.COSTCENTER_CATEGORYNAME }}</td>\\r\\n                <td>{{ entry.COSTCENTER_NAME }}</td>\\r\\n                <td>{{ entry.BUDGET }}</td>\\r\\n               \\r\\n              </tr>\\r\\n\\r\\n             </ng-container>\\r\\n             <ng-container *ngIf=\\\"DetailList==null || DetailList=='' \\\">\\r\\n              <tr *ngFor=\\\"let entry of temp_DetailList; let i = index\\\">\\r\\n                <td > {{ i+1 }}</td>\\r\\n                <td>{{ entry.ACCOUNTGROUP_NAME }}</td>\\r\\n                <td>{{ entry.ACNAME }}</td>\\r\\n                <td *ngIf=\\\"COSTCENTER_CATEGORYNAME!=null|| COSTCENTER_CATEGORYNAME!=''\\\">{{ entry.COSTCENTER_CATEGORYNAME }}</td>\\r\\n                <td>{{ entry.COSTCENTER_NAME }}</td>\\r\\n                <td>{{ entry.BUDGET }}</td>\\r\\n               \\r\\n              </tr>\\r\\n\\r\\n             </ng-container>\\r\\n             \\r\\n           \\r\\n            \\r\\n            </tbody>\\r\\n          </table>\\r\\n        \\r\\n          <div class=\\\"footer\\\">\\r\\n            <div class=\\\"row\\\" style=\\\"position: fixed;\\r\\n                 bottom: 20px; background-color: #fff;\\\">\\r\\n        \\r\\n              <tr>\\r\\n                <td  style=\\\"width: 10%;\\\"></td>\\r\\n                <td style=\\\"width: 62%;\\\">\\r\\n                 </td>\\r\\n                 <td style=\\\"width: 16%;\\\">Total :</td>\\r\\n                 <td><input type=\\\"text\\\" [(ngModel)]=\\\"costcenterDetailListTotal\\\"> </td>\\r\\n        \\r\\n              </tr>\\r\\n        \\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n            \\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n \\r\\n\\r\\n\\r\\n  \\r\\n\\r\\n\\r\\n\\r\\n</div>\\r\\n\\r\\n\\r\\n<div style=\\\"width:90%\\\" class=\\\"reportpopup\\\">\\r\\n  <generic-popup-grid #genericGridAccountLedger [popupsettings]=\\\"gridPopupSettingsForAccountLedgerList\\\"\\r\\n    (onItemDoubleClick)=\\\"dblClickAccountSelect($event)\\\">\\r\\n  </generic-popup-grid>\\r\\n  <generic-popup-grid #genericGridBudgetList [popupsettings]=\\\"gridPopupSettingsForBudgetList\\\"\\r\\n    (onItemDoubleClick)=\\\"dblClickBudgetSelect($event)\\\">\\r\\n  </generic-popup-grid>\\r\\n  <generic-popup-grid #genericGridCostCenterList [popupsettings]=\\\"gridCostCenterListPopupSettings\\\"\\r\\n    (onItemDoubleClick)=\\\"onCostCenterSelect($event)\\\"></generic-popup-grid>\\r\\n  <generic-popup-grid #genericGridCostCenterGroupList [popupsettings]=\\\"gridCostCenterGroupListPopupSettings\\\"\\r\\n    (onItemDoubleClick)=\\\"onCostCenterGroupSelect($event)\\\"></generic-popup-grid>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n</div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n<!-- importBudget PopUP -->\\r\\n\\r\\n<div *ngIf=\\\"displayBudgetImportPopUp\\\" class=\\\"poppWrapper\\\" style=\\\" position: fixed;\\r\\nright: 0%;\\r\\ntop: 75px;\\r\\nbackground: #fff;\\r\\nwidth: 45%;\\r\\nheight: 80vh;\\r\\n  overflow-y: scroll; overflow-x: hidden;\\\" id=\\\"importBudget\\\"  role=\\\"dialog\\\"\\r\\n  aria-labelledby=\\\"importBudgetlabel\\\" aria-hidden=\\\"false\\\">\\r\\n  <div class=\\\"modal-dialog modal-lg\\\" role=\\\"document\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <div class=\\\"modal-header row\\\">\\r\\n        <h5 class=\\\"modal-title col-md-11\\\" id=\\\"importBudget\\\">Import Budget</h5>\\r\\n        <!-- <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\" style=\\\" position: absolute;\\r\\n                top: 20px;\\r\\n                right: 30px;\\\">\\r\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button> -->\\r\\n        <button  (keydown.esc)=\\\"Close()\\\" (click)=\\\"Close()\\\"  class=\\\"item-4 closeIcon col-md-2\\\" style=\\\"padding-top: 7px;\\\"></button>\\r\\n      </div>\\r\\n      <div class=\\\"modal-body\\\">\\r\\n        <div class=\\\"upload-area container\\\" style=\\\" margin-top: -40px;\\\">\\r\\n          <br />\\r\\n          <div class=\\\"file-upload-area\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\" offset-lg-2 col-md-8\\\">\\r\\n\\r\\n                <div class=\\\"outerbox\\\" (drop)=\\\"onDrop($event)\\\"\\r\\n                (dragover)=\\\"onDragOver($event)\\\">\\r\\n                  <div class=\\\"upload-drop-zone\\\" style=\\\"background-color: #fff;\\\" id=\\\"drop-zone\\\">\\r\\n                    <b>Drag Your File Here or Browse. </b> \\r\\n                    <!-- <span style=\\\"font-weight: 800; \\r\\n                                  font-size: 16px; color: #2D94EC;\\\">Browse.</span> -->\\r\\n\\r\\n                  </div>\\r\\n                  <div  *ngIf=\\\"selectedFileNames.length\\\" style=\\\"overflow-y:auto; background-color: #292626; color: whitesmoke;\\\">\\r\\n                    <table class=\\\"table\\\">\\r\\n                      <thead>\\r\\n                        <tr>\\r\\n                          <th>SN.</th>\\r\\n                          <th>Filename</th>\\r\\n                          <!-- <th>Action</th> -->\\r\\n                        </tr>\\r\\n                      </thead>\\r\\n                      <tbody>\\r\\n                        <tr *ngFor=\\\"let item of selectedFileNames; let i = index\\\">\\r\\n                          <td>\\r\\n                            {{ i + 1 }}\\r\\n                          </td>\\r\\n                          <td>{{ item }}</td>\\r\\n                          <!-- <td>\\r\\n                            <a (click)=\\\"deleteSelectedItem(i)\\\">\\r\\n                              <span class=\\\"glyphicon glyphicon-trash\\\"></span\\r\\n                            ></a>\\r\\n                          </td> -->\\r\\n                        </tr>\\r\\n                      </tbody>\\r\\n                    </table>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"input-group image-preview\\\" style=\\\"justify-content: right;\\\">\\r\\n                  <input placeholder=\\\"\\\" type=\\\"text\\\" class=\\\"form-control image-preview-filename\\\" disabled=\\\"disabled\\\"\\r\\n                    name=\\\"selectedfiles\\\" style=\\\"display: none\\\" />\\r\\n                  <!-- don't give a name === doesn't send on POST/GET -->\\r\\n                  <span class=\\\"input-group-btn\\\">\\r\\n                    <!-- image-preview-clear button -->\\r\\n                    <button type=\\\"button\\\" class=\\\"btn btn-default image-preview-clear\\\" style=\\\"display:none;\\\">\\r\\n                      <span class=\\\"glyphicon glyphicon-remove\\\">Clear</span>\\r\\n                    </button>\\r\\n                    <!-- image-preview-input -->\\r\\n                    <!-- <div class=\\\"btn btn-info image-preview-input\\\" style=\\\"margin-right: 5px; justify-content: right;\\\">\\r\\n                      <span class=\\\"glyphicon glyphicon-folder-open\\\"></span>\\r\\n                      <span class=\\\"image-preview-input-title\\\">Browse</span>\\r\\n                      <input type=\\\"file\\\" #fileSelect accept=\\\".png, .jpg, .xlsx\\\" name=\\\"input-file-preview\\\" />\\r\\n                    </div> -->\\r\\n                    <div class=\\\"btn btn-default image-preview-input\\\">\\r\\n                      <span class=\\\"glyphicon glyphicon-folder-open\\\"></span>\\r\\n                      <span class=\\\"image-preview-input-title\\\">Browse</span>\\r\\n                      <input *ngIf=\\\"!isOnceSelected\\\"\\r\\n                      type=\\\"file\\\"\\r\\n                      #fileSelect\\r\\n                      accept=\\\".csv, .xlsx\\\"\\r\\n                      name=\\\"input-file-preview\\\"\\r\\n                      (change)=\\\"onFileChange($event)\\\"\\r\\n                      ng-multiple=\\\"popupsettings.allowMultiple\\\"\\r\\n                    />\\r\\n                      <input *ngIf=\\\"isOnceSelected\\\"\\r\\n                      type=\\\"file\\\"\\r\\n                      #fileSelect\\r\\n                      accept=\\\".csv, .xlsx\\\"\\r\\n                      name=\\\"input-file-preview\\\"\\r\\n                      (change)=\\\"onFileChange($event)\\\"\\r\\n                      ng-multiple=\\\"popupsettings.allowMultiple\\\"\\r\\n                    />\\r\\n                      <!-- rename it -->\\r\\n                    </div>\\r\\n                    <button [disabled]=\\\"selectedFileNames.length==0\\\" (click)=\\\"readExcelFile(fileToImport[0])\\\" style=\\\"\\r\\n                                    font-size: 14px;\\r\\n                                    line-height: 18px;\\r\\n                                    color: #FFFFFF;\\r\\n                                    background: #4472C4;\\r\\n                                     border-radius: 5px;\\r\\n                                    \\\" type=\\\"button\\\" data-dismiss=\\\"modal\\\" class=\\\"btn btn-labeled btn-info\\\">\\r\\n                      <span class=\\\"btn-label\\\"><i class=\\\"glyphicon glyphicon-upload\\\"></i>\\r\\n                      </span>Upload\\r\\n                    </button>\\r\\n                  </span>\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n            </div>\\r\\n\\r\\n            <br />\\r\\n\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"offset-md-1 col-lg-11\\\">\\r\\n            <p >Download the <button (click)=\\\"downloadBudgetTemplate()\\\" style=\\\"color: #209e91; border:none;\\\">sample template</button> to get started.</p>\\r\\n            <!-- <p *ngIf=\\\"BudgetObj.BUDGET_INTERVAL == 'QUARTERLY' && BudgetObj.SUBDIVIDED_BY == 'COSTCENTER'\\\">Download the <a href=\\\"/assets/Excel_Sample/Budget(1).xlsx\\\" download=\\\"Budget.xlsx\\\"><b> sample template</b></a> to get started.</p>\\r\\n            <p *ngIf=\\\"BudgetObj.BUDGET_INTERVAL == 'YEARLY' && BudgetObj.SUBDIVIDED_BY == 'COSTCENTER'\\\">Download the <a href=\\\"/assets/Excel_Sample/Budget(2).xlsx\\\" download=\\\"Budget.xlsx\\\"><b> sample template</b></a> to get started.</p>\\r\\n            <p *ngIf=\\\"BudgetObj.BUDGET_INTERVAL == 'MONTHLY' && BudgetObj.SUBDIVIDED_BY == 'DONOT_SUBDIVIDE'\\\">Download the <a href=\\\"/assets/Excel_Sample/Budget(3).xlsx\\\" download=\\\"Budget.xlsx\\\"><b> sample template</b></a> to get started.</p>\\r\\n            <p *ngIf=\\\"BudgetObj.BUDGET_INTERVAL == 'QUARTERLY' && BudgetObj.SUBDIVIDED_BY == 'DONOT_SUBDIVIDE'\\\">Download the <a href=\\\"/assets/Excel_Sample/Budget(5).xlsx\\\" download=\\\"Budget.xlsx\\\"><b> sample template</b></a> to get started.</p>\\r\\n            <p *ngIf=\\\"BudgetObj.BUDGET_INTERVAL == 'YEARLY' && BudgetObj.SUBDIVIDED_BY == 'DONOT_SUBDIVIDE'\\\">Download the <a href=\\\"/assets/Excel_Sample/Budget(4).xlsx\\\" download=\\\"Budget.xlsx\\\"><b> sample template</b></a> to get started.</p> -->\\r\\n            <p><b>Note :</b></p>\\r\\n            <p>You can Supply Budget amounts in a csv format for quick importing.</p>\\r\\n            <p>Enter the budget amount</p>\\r\\n            <ul>\\r\\n              <li>Do not change the account ledger names.</li>\\r\\n              <li>Do not duplicate the account ledger for 'Do not subdivide mode'.</li>\\r\\n            </ul>\\r\\n            <ul>\\r\\n              <li>Do not duplicate the account ledger under the same cost center.</li>\\r\\n              <li>The uploaded format should be the same as the Selected interval.</li>\\r\\n            </ul>\\r\\n          </div>\\r\\n\\r\\n\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n<!-- p[pup] -->\\r\\n\\r\\n<!--  -->\\r\\n<style>\\r\\n  .acpopup.table>tbody>tr>td {\\r\\n    padding: 8px 6px 0px 8px;\\r\\n    line-height: 20px;\\r\\n\\r\\n  }\\r\\n</style>\\r\\n\\r\\n<div *ngIf=\\\"showPopup\\\" class=\\\"poppWrapper\\\" style=\\\" position: fixed;\\r\\nleft: 25%;\\r\\ntop: 165px;\\r\\nbackground: #fff;\\r\\nwidth: 55%;\\r\\n  overflow: scroll;\\\">\\r\\n\\r\\n  <fieldset style=\\\"padding: 0; border-top-left-radius: 10px; border-top-right-radius: 10px;\\\">\\r\\n    <header style=\\\"    background: #4472C4 !important;\\r\\npadding: 0 20px; border-top-left-radius: 10px; border-top-right-radius: 10px;\\r\\n\\\">\\r\\n      <div class=\\\"row\\\" style=\\\"display: flex;\\\">\\r\\n        <h5 style=\\\"padding: 10px 0 0 10px; color: #fff;\\\">ACCOUNT GROUP</h5>\\r\\n\\r\\n        <button  (keydown.esc)=\\\"Close()\\\" (click)=\\\"Close()\\\"  class=\\\"item-4 closeIcon\\\" style=\\\"padding-top: 7px;\\\"></button>\\r\\n        <!-- <div (click)=\\\"Close()\\\" class=\\\"closeIcon\\\" style=\\\"padding-top: 7px;\\\">\\r\\n          <img src=\\\"../../../../../assets/icon/close.png\\\" alt=\\\"\\\">\\r\\n        </div> -->\\r\\n\\r\\n      </div>\\r\\n\\r\\n    </header>\\r\\n    <div class=\\\"row\\\" style=\\\"margin: 0;\\\">\\r\\n      <div class=\\\"col-lg-6\\\" style=\\\"border:2px solid;border-color:#dcdcdc; width: 50%; padding: 10px 30px;\\\">\\r\\n        <header\\r\\n          style=\\\"background: #4472C4 !important;\\r\\n           padding: 0 20px; margin: -7px -26px -7px -14px; border-top-left-radius: 10px; border-top-right-radius: 10px;\\\">\\r\\n          <h5 style=\\\" padding: 7px 0 6px 0px;; color: #fff; text-align: center;\\\">GROUP SELECTION</h5>\\r\\n        </header>\\r\\n\\r\\n        <div class=\\\"row\\\" style=\\\"margin-top: 20px;\\\">\\r\\n          <label class=\\\"form-control-label col-md-4 \\\" style=\\\"width: auto;\\\">Main Group :</label>\\r\\n          <div class=\\\"col-md-7\\\">\\r\\n            <hr>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"row selectrow\\\">\\r\\n          <select id=\\\"accountGroupSelectField\\\" #accountGroupSelectField class=\\\"form-control\\\" [(ngModel)]=\\\"masterService.groupSelectObj.MGROUP\\\"\\r\\n            [ngModelOptions]=\\\"{standalone: true}\\\" (change)=\\\"getSubgroupA($event)\\\">\\r\\n            <!-- <option [value]=\\\"AL\\\"></option> -->\\r\\n            <option *ngFor=\\\"let main of masterService.mainGroupList;let i=index\\\" [value]=\\\"main.ACID\\\">{{main?.ACNAME}}\\r\\n            </option>\\r\\n          </select>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\">\\r\\n          <label class=\\\"form-control-label col-md-4 \\\" style=\\\"width: auto;\\\">Sub Group (A) :</label>\\r\\n          <div class=\\\"col-md-7\\\">\\r\\n            <hr>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"row selectrow\\\">\\r\\n          <select class=\\\"form-control\\\" [(ngModel)]=\\\"masterService.groupSelectObj.SUBGROUP_A\\\"\\r\\n          [disabled]=\\\"masterService.disableSubGroupA\\\" [ngModelOptions]=\\\"{standalone: true}\\\"\\r\\n            (change)=\\\"getSubgroupB($event)\\\">\\r\\n            <option [value]=\\\"\\\"></option>\\r\\n            <option *ngFor=\\\"let sub of masterService.subGroupAList;let i=index\\\" [value]=\\\"sub.ACID\\\">{{sub?.ACNAME}}\\r\\n            </option>\\r\\n          </select>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\">\\r\\n          <label class=\\\"form-control-label col-md-4 \\\" style=\\\"width: auto;\\\">Sub Group (B) :</label>\\r\\n          <div class=\\\"col-md-7\\\">\\r\\n            <hr>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"row selectrow\\\">\\r\\n          <select class=\\\"form-control\\\" [(ngModel)]=\\\"masterService.groupSelectObj.SUBGROUP_B\\\"\\r\\n            [disabled]=\\\"masterService.disableSubGroupB\\\" [ngModelOptions]=\\\"{standalone: true}\\\"\\r\\n            (change)=\\\"getSubgroupC($event)\\\">\\r\\n            <option [value]=\\\"\\\"></option>\\r\\n            <option *ngFor=\\\"let sub of masterService.subGroupBList; let i=index\\\" [value]=\\\"sub.ACID\\\">{{sub?.ACNAME}}\\r\\n            </option>\\r\\n          </select>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\">\\r\\n          <label class=\\\"form-control-label col-md-4 \\\" style=\\\"width: auto;\\\">Sub Group (C) :</label>\\r\\n          <div class=\\\"col-md-7 pd0\\\">\\r\\n            <hr>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"row selectrow\\\">\\r\\n          <select class=\\\"form-control\\\" [(ngModel)]=\\\"masterService.groupSelectObj.SUBGROUP_C\\\"\\r\\n            [disabled]=\\\"masterService.disableSubGroupC\\\" [ngModelOptions]=\\\"{standalone: true}\\\"\\r\\n            (change)=\\\"selectSubgroupC($event)\\\">\\r\\n            <option *ngFor=\\\"let sub of masterService.subGroupCList; let i = index\\\" [value]=\\\"sub.ACID\\\">{{sub?.ACNAME}}\\r\\n            </option>\\r\\n          </select>\\r\\n        </div>\\r\\n\\r\\n      </div>\\r\\n      <div class=\\\"col-lg-6\\\" style=\\\"height: 386px; overflow-y: scroll; overflow-x: hidden; padding-right: 0;\\\">\\r\\n        <header style=\\\"\\r\\n        padding: 0 20px; position: sticky; top: 0; background-color: #fff !important; z-index: 9;\\\">\\r\\n          <div class=\\\"row\\\" style=\\\"display: flex;\\\">\\r\\n            <h5 style=\\\"padding: 10px 0 0 0; color: #000; font-weight: bold;\\\">Selected Group Lists</h5>\\r\\n            <div (click)=\\\"Close()\\\" class=\\\"closeIcon\\\" style=\\\"padding-top: 7px;\\\">\\r\\n              <button class=\\\"btn btn-sm \\\" style=\\\"background-color: #4472C4; color: #fff;\\\"\\r\\n                (click)=\\\"method()\\\">Apply</button>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-7\\\" style=\\\"margin: 2px -25px;\\\">\\r\\n              <select\\r\\n                style=\\\"width: 100%; padding: 4px 0px;\\\"\\r\\n                [(ngModel)]=\\\"filterOption\\\"\\r\\n              >\\r\\n                <option value=\\\"\\\" disabled selected hidden>Select Filter Option</option>\\r\\n                <option value=\\\"ACCODE\\\" selected>A/C Code</option>\\r\\n                <option value=\\\"ACNAME\\\" selected>A/C Name</option>\\r\\n              </select>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-6\\\" style=\\\"margin: 4px 4px 0px 0px;\\\">\\r\\n              <input\\r\\n                #searchInputBox\\r\\n                type=\\\"text\\\"\\r\\n                style=\\\"width: 120%; padding: 5px 3px\\\"\\r\\n                placeholder=\\\"Enter keyword to search\\\"\\r\\n                [(ngModel)]=\\\"filterValue\\\"\\r\\n              />\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n        </header>\\r\\n\\r\\n\\r\\n        <div class=\\\"SelectAll\\\" style=\\\"display: flex; background-color: #E9EBF5;position: sticky;top:70px; z-index:9\\\">\\r\\n          <input type=\\\"text\\\" type=\\\"checkbox\\\" style=\\\"width: auto; \\\" (change)=\\\"handleChange($event)\\\" id=\\\"selectAll\\\">\\r\\n          <label style=\\\"margin-top: 8px;\\\">Select All</label>\\r\\n\\r\\n        </div>\\r\\n\\r\\n\\r\\n        <table class=\\\"table table-striped acpopup\\\">\\r\\n          <thead style=\\\"position: sticky;top:100px; z-index:9\\\">\\r\\n            <tr style=\\\" background: #FFF;\\r\\n            box-shadow: 2px 4px 4px 2px rgba(0, 0, 0, 0.25);\\r\\n            \\\">\\r\\n              <th style=\\\"width: 1%;\\\"></th>\\r\\n              <th scope=\\\"col\\\" style=\\\"width:2%; color:#000 !important\\\">A/C Code</th>\\r\\n              <th scope=\\\"col\\\" style=\\\"width:100%;color:#000 !important\\\">A/C Name</th>\\r\\n            </tr>\\r\\n          </thead>\\r\\n          <tbody>\\r\\n            <ng-container *ngIf=\\\"this.AccountService.partyList && this.AccountService.partyList.length >0\\\">\\r\\n              <tr *ngFor=\\\"let party of (AccountService.partyList|searchData: filterValue: filterOption); let i=index\\\">\\r\\n                <td style=\\\"line-height:21px; text-align:center\\\">\\r\\n                  <div class=\\\"form-check\\\">\\r\\n                    <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" [(ngModel)]=\\\"party.IS_CHECKED\\\">\\r\\n\\r\\n                  </div>\\r\\n                </td>\\r\\n                <td style=\\\"width:8%\\\">{{party.ACCODE}}</td>\\r\\n                <td style=\\\"width:12%\\\">{{party.ACNAME}}</td>\\r\\n\\r\\n\\r\\n              </tr>\\r\\n            </ng-container>\\r\\n          </tbody>\\r\\n        </table>\\r\\n\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n\\r\\n\\r\\n  </fieldset>\\r\\n\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/masters/components/BudgetMaster/add-budget-master.component.html\n// module id = 1825\n// module chunks = 16","module.exports = \"input, select{\\r\\n    height: 25px;\\r\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/masters/components/BudgetMaster/budget-master.component.css\n// module id = 1826\n// module chunks = 16","module.exports = \"<style>\\r\\n  .table-striped>tbody>tr:nth-of-type(odd) {\\r\\n    background-color: #CFD5EA;\\r\\n  }\\r\\n\\r\\n  .table-striped>tbody>tr:nth-of-type(even) {\\r\\n    background-color: #E9EBF5;\\r\\n  }\\r\\n\\r\\n  .table button {\\r\\n    padding: 2px 10px !important;\\r\\n    margin-top: 2px;\\r\\n  }\\r\\n\\r\\n  .table td {\\r\\n    line-height: 29px;\\r\\n  }\\r\\n  .table thead th{\\r\\n    background-color: #fff;\\r\\n  }\\r\\n</style>\\r\\n\\r\\n<div class=\\\"sticky-top\\\">\\r\\n  <div class=\\\"row clearfix\\\" style=\\\" padding: 3px 20px;\\\">\\r\\n    <div class=\\\"col-md-6\\\">\\r\\n      <h3 class=\\\"page-title\\\">Budget Master</h3>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-6\\\" style=\\\"float: right;\\\">\\r\\n      <button class=\\\"btn btn-info pull-right\\\" style=\\\"margin-right : 10px; background-color: #4472C4;\\\"\\r\\n        routerLink=\\\"/pages/dashboard/dashboard\\\">\\r\\n        Back\\r\\n      </button>\\r\\n      <!-- <button type=\\\"button \\\" class=\\\"btn btn-info pull-right\\\" data-toggle=\\\"modal\\\" data-target=\\\"#importBudget\\\" style=\\\"margin-right : 10px; background-color: #4472C4;\\\" (click)=\\\"uploadBudget()\\\">\\r\\n          Import Budget\\r\\n        </button> -->\\r\\n        \\r\\n      <button *ngIf=\\\"userSetting.enableMaster_AddEdit==1\\\" type=\\\"button \\\" class=\\\"btn btn-info pull-right\\\" style=\\\"margin-right : 10px;background-color: #4472C4;\\\"\\r\\n        (click)=\\\"addBudget()\\\">\\r\\n        Add Budget\\r\\n      </button>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n<div class=\\\"row\\\" style=\\\"align-items: center;\\\">\\r\\n  <div class=\\\"col-md-12 col-sm-8\\\" style=\\\"margin-top:4.5rem\\\">\\r\\n\\r\\n    <div class=\\\"card\\\" style=\\\"margin: auto; width: 63rem;\\\">\\r\\n      <div class=\\\"card-header\\\" style=\\\"    background: #4472C4;\\r\\n        color: #ffff;\\\">\\r\\n\\r\\n        <span class=\\\"col-md-6\\\">Budget Lists</span>\\r\\n        <div style=\\\"margin-left: 45rem; margin-top: -6px;\\\">\\r\\n          <input type=\\\"text\\\" name=\\\"search\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"filter\\\" #searchFilter=\\\"ngModel\\\"\\r\\n            placeholder=\\\"Search...\\\" style=\\\"width: 15rem; height: 1.7rem; padding: 0px 6px;\\\">\\r\\n        </div>\\r\\n\\r\\n\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"card-body\\\" style=\\\"padding: 0;    max-height: 440px !important;\\r\\n      overflow: scroll;\\\">\\r\\n        <table class=\\\"table table-striped\\\">\\r\\n          <thead style=\\\"    background: #FFF;\\r\\n            box-shadow: 2px 4px 4px 2px rgba(0, 0, 0, 0.25);\\\">\\r\\n            <tr style=\\\"position: sticky; top:0;line-height: 0.5rem;\\\">\\r\\n              <th scope=\\\"col\\\" style=\\\" font-weight: bold;\\\">S.N</th>\\r\\n              <!-- <th scope=\\\"col\\\" style=\\\"font-weight: bold;\\\">Budget No</th> -->\\r\\n              <th scope=\\\"col\\\" style=\\\" font-weight: bold\\\">Budget Name </th>\\r\\n              <th scope=\\\"col\\\" style=\\\" font-weight: bold\\\">Period</th>\\r\\n              <th scope=\\\"col\\\" style=\\\" font-weight: bold\\\">Created On</th>\\r\\n              <th scope=\\\"col\\\" style=\\\" font-weight: bold\\\">Updated On</th>\\r\\n              <th scope=\\\"col\\\" style=\\\" font-weight: bold\\\">Status</th>\\r\\n              <th scope=\\\"col\\\" style=\\\"text-align:center;width:18%; font-weight: bold \\\">Action</th>\\r\\n            </tr>\\r\\n          </thead>\\r\\n          <tbody>\\r\\n            <ng-container>\\r\\n              <tr *ngFor=\\\"let list of (BudgetList|searchData:filter:''); let i=index\\\">\\r\\n                <td >{{i+1}}</td>\\r\\n                <!-- <td >{{list.BUDGET_NUMBER}}</td> -->\\r\\n                <td >{{list.BUDGET_NAME}}</td>\\r\\n                <td >{{list.FROM_DATE}}-{{list.TO_DATE}}</td>\\r\\n                <td >{{list.CREATED_ON}}</td>\\r\\n                <td >{{list.UPDATED_ON}}</td>\\r\\n                <td >{{list.STATUS}}</td>\\r\\n                <td style=\\\"width:18%;text-align: center; display:flex\\\">\\r\\n                  <button style=\\\"width: 60px; margin-right: 10px; background-color: #4472C4;\\\" type=\\\"button\\\"\\r\\n                    class=\\\"btn btn-sm btn-info mr-1 btn-sm\\\" data-toggle=\\\"modal\\\"\\r\\n                    (click)=\\\"onViewClick(list)\\\">View</button>\\r\\n                  <button *ngIf=\\\"userSetting.enableMaster_AddEdit==1\\\" style=\\\"width: 60px; margin-right: 10px; background-color: #4472C4;\\\" type=\\\"button\\\"\\r\\n                    class=\\\"btn btn-sm btn-info mr-1 btn-sm\\\" data-toggle=\\\"modal\\\"\\r\\n                    (click)=\\\"onEditClick(list)\\\">Edit</button>\\r\\n                  <button style=\\\"width: 60px; background-color: #4472C4;\\\" type=\\\"button\\\"\\r\\n                    class=\\\"btn btn-sm btn-info mr-1 btn-sm\\\" data-toggle=\\\"modal\\\"\\r\\n                    (click)=\\\"onDeleteClick(list)\\\">Delete</button>\\r\\n\\r\\n                </td>\\r\\n              </tr>\\r\\n\\r\\n            </ng-container>\\r\\n\\r\\n          </tbody>\\r\\n        </table>\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/masters/components/BudgetMaster/budget-master.component.html\n// module id = 1827\n// module chunks = 16"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAOA;AA4DA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAjEA;AAMA;AACA;AACA;AACA;AAIA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AAMA;AAEA;AAEA;AACA;AACA;AACA;AAGA;AAEA;AAGA;AAGA;AAcv3EA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAGA;AADA;AACA;AAAA;AAGA;AADA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAw4BA;AADA;;AACA;;AAqBA;AAx9BA;AANA;AACA;AACA;AACA;AACA;AACA;AA6DA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AArEA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7CA;AACA;AACA;AACA;AACA;AACA;AAUA;AAOA;AAAA;AACA;AACA;AACA;AACA;AAVA;AAEA;AAEA;AAQA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AAEA;AAEA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAGA;AAAA;AAnHA;AANA;AACA;AACA;AACA;AACA;AACA;AAQA;AACA;AACA;AACA;AACA;AAXA;AAAA;;;;;;;;;;;;;;;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AA6BA;AAAA;AACA;AAAA;AAAA;AADA;AAxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;AC9CA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJA;AACA;AACA;AACA;AACA;AAAA;;;;;;;;;;;;;;ACdA;AAIA;AAAA;AAqEA;AApEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAAA;AAGA;AACA;AAAA;AAGA;AACA;AAAA;AAGA;AACA;AAAA;AAGA;AACA;AAAA;AAGA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AArEA;AAFA;AAEA;AAAA;;;;;;;;;;ACJA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;","sourceRoot":""}