{"version":3,"file":"12.chunk.js","sources":["webpack:///./src/app/~/ng2-smart-table/ng2-smart-table.js?5484**","webpack:///./src/app/pages/masters/components/PLedger/PLedger.component.ts?c521","webpack:///./src/app/pages/masters/components/PLedger/PLedger.service.ts?815f","webpack:///./src/app/~/ng2-smart-table/src/ng2-smart-table/lib/data-source/server/server-source.conf.ts?1f58**","webpack:///./src/app/~/ng2-smart-table/src/ng2-smart-table/lib/data-source/server/server.data-source.ts?19e9**","webpack:///./src/app/~/ng2-smart-table/src/ng2-smart-table/lib/index.ts?e710**","webpack:///./src/app/pages/masters/components/account-ledger/accountLedger.service.ts?3d6e","webpack:///./src/app/pages/masters/components/Account-Ledger-New/AccLedger.service.ts","webpack:///./src/app/pages/masters/components/ALedger/aledger.module.ts","webpack:///./src/app/theme/directives/pipes/pipes.ts?7c6e","webpack:///./src/app/pages/masters/components/PLedger/PLedger.html?f033","webpack:///./src/app/common/popupLists/AGroupPopup/ForAccountLedger.component.ts","webpack:///./src/app/common/popupLists/AGroupPopup/account-group-popup-grid.module.ts","webpack:///./src/app/pages/masters/components/ALedger/ALedgerTable.component.ts","webpack:///./src/app/pages/masters/components/Account-Ledger-New/AccLedgerTable.component.ts","webpack:///./src/app/pages/masters/components/Bank/bank-list.component.ts","webpack:///./src/app/pages/masters/components/Bank/bank.component.ts","webpack:///./src/app/pages/masters/components/Bank/bank.module.ts","webpack:///./src/app/pages/masters/components/Bank/bank.service.ts","webpack:///./src/app/pages/masters/components/PLedger/CustomerLedger.component.ts","webpack:///./src/app/pages/masters/components/PLedger/SupplierLedger.component.ts","webpack:///./src/app/pages/masters/components/account-ledger/accountLedgerTable.component.ts","webpack:///./src/app/pages/masters/components/account-ledger/addLedg.component.ts","webpack:///./src/app/pages/masters/components/party-ledger/partyLedgerTable.component.ts","webpack:///./src/app/pages/masters/components/ALedger/smartTables.scss?e487","webpack:///./src/app/pages/masters/components/PLedger/smartTables.scss?a06b","webpack:///./src/app/common/popupLists/AGroupPopup/account-group-popup-grid.component.ts","webpack:///./src/app/pages/masters/components/ALedger/ALedger.component.ts","webpack:///./src/app/pages/masters/components/ALedger/aledger.routing.ts","webpack:///./src/app/pages/masters/components/Account-Ledger-New/addAcc.module.ts","webpack:///./src/app/pages/masters/components/Account-Ledger-New/addAcc.routing.ts","webpack:///./src/app/pages/masters/components/Account-Ledger-New/addAccMajorgrp.component.ts","webpack:///./src/app/pages/masters/components/Account-Ledger-New/addAccgrp.component.ts","webpack:///./src/app/pages/masters/components/Account-Ledger-New/addAccledger.component.ts","webpack:///./src/app/pages/masters/components/Account-Ledger-New/search.pipe.ts","webpack:///./src/app/pages/masters/components/Bank/bank.routing.ts","webpack:///./src/app/pages/masters/components/PLedger/PLedgerTable.component.ts","webpack:///./src/app/pages/masters/components/PLedger/pledger.module.ts","webpack:///./src/app/pages/masters/components/PLedger/pledger.routing.ts","webpack:///./src/app/pages/masters/components/account-ledger/addLedger.component.ts","webpack:///./src/app/pages/masters/components/account-ledger/addSubgrps.component.ts","webpack:///./src/app/pages/masters/components/party-ledger/addMajorgrp.component.ts","webpack:///./src/app/pages/masters/components/party-ledger/addparty.module.ts","webpack:///./src/app/pages/masters/components/party-ledger/addparty.routing.ts","webpack:///./src/app/pages/masters/components/party-ledger/addpartygrp.component.ts","webpack:///./src/app/pages/masters/components/party-ledger/addpartyledger.component.ts","webpack:///./src/app/pages/masters/components/party-ledger/search.pipe.ts","webpack:///./src/app/pages/masters/components/ALedger/smartTables.scss","webpack:///./src/app/pages/masters/components/Bank/smartTables.scss","webpack:///./src/app/pages/masters/components/Companies/smartTables.scss","webpack:///./src/app/pages/masters/components/PLedger/smartTables.scss","webpack:///./src/app/common/popupLists/AGroupPopup/ForAccountLedger.component.html","webpack:///./src/app/common/popupLists/AGroupPopup/account-group-popup-grid.component.html","webpack:///./src/app/pages/masters/components/ALedger/ALedger.html","webpack:///./src/app/pages/masters/components/ALedger/ALedgerTable.html","webpack:///./src/app/pages/masters/components/Account-Ledger-New/AccLedgerTable.component.css","webpack:///./src/app/pages/masters/components/Account-Ledger-New/AccLedgerTable.component.html","webpack:///./src/app/pages/masters/components/Account-Ledger-New/addAccMajorgrp.component.html","webpack:///./src/app/pages/masters/components/Account-Ledger-New/addAccgrp.component.html","webpack:///./src/app/pages/masters/components/Account-Ledger-New/addAccledger.component.html","webpack:///./src/app/pages/masters/components/Bank/bank-list.component.html","webpack:///./src/app/pages/masters/components/Bank/bank.component.html","webpack:///./src/app/pages/masters/components/PLedger/PLedgerTable.html","webpack:///./src/app/pages/masters/components/account-ledger/accountLedgerTable.component.html","webpack:///./src/app/pages/masters/components/account-ledger/addledger.component.html","webpack:///./src/app/pages/masters/components/account-ledger/addsubgrps.component.html","webpack:///./src/app/pages/masters/components/party-ledger/addMajorgrp.component.html","webpack:///./src/app/pages/masters/components/party-ledger/addpartygrp.component.html","webpack:///./src/app/pages/masters/components/party-ledger/addpartyledger.component.html","webpack:///./src/app/pages/masters/components/party-ledger/partyLedgerTable.component.css","webpack:///./src/app/pages/masters/components/party-ledger/partyLedgerTable.component.html","webpack:///./src/app/pages/masters/components/Bank/smartTables.scss?bf05","webpack:///./src/app/pages/masters/components/Companies/smartTables.scss?0687"],"sourcesContent":["\"use strict\";\r\nfunction __export(m) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n__export(require('./src/ng2-smart-table.directives'));\r\n__export(require('./src/ng2-smart-table/ng2-smart-table.component'));\r\n__export(require('./src/ng2-smart-table/lib'));\r\n__export(require('./src/ng2-smart-table.module'));\r\nvar cell_1 = require('./src/ng2-smart-table/lib/data-set/cell');\r\nexports.Cell = cell_1.Cell;\r\nvar default_editor_1 = require('./src/ng2-smart-table/components/cell/cell-editors/default-editor');\r\nexports.DefaultEditor = default_editor_1.DefaultEditor;\r\n//# sourceMappingURL=ng2-smart-table.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/~/ng2-smart-table/ng2-smart-table.js\n// module id = 1179\n// module chunks = 2 4 6 12","import { MdDialog } from \"@angular/material\";\r\nimport { SelectItem } from \"primeng/primeng\";\r\nimport { GroupParty } from \"./PLedger.service\";\r\nimport { Component, Input, Output, EventEmitter } from \"@angular/core\";\r\nimport { ActivatedRoute, Router } from \"@angular/router\";\r\nimport { FormGroup, FormBuilder, Validators } from \"@angular/forms\";\r\nimport { Subscription } from \"rxjs/Subscription\";\r\nimport { MasterRepo } from \"../../../../common/repositories/masterRepo.service\";\r\nimport {\r\n  AcListTree,\r\n  TAcList\r\n} from \"../../../../common/interfaces/Account.interface\";\r\nimport { AuthService } from \"../../../../common/services/permission\";\r\nimport { PLedgerservice } from \"./PLedger.service\";\r\nimport { TransactionService } from \"../../../../common/Transaction Components/transaction.service\";\r\nimport { PreventNavigationService } from \"../../../../common/services/navigation-perventor/navigation-perventor.service\";\r\nimport { AlertService } from \"../../../../common/services/alert/alert.service\";\r\nimport { SpinnerService } from \"../../../../common/services/spinner/spinner.service\";\r\nimport { subscribeOn } from \"rxjs/operator/subscribeOn\";\r\nimport { TrnMain } from \"../../../../common/interfaces\";\r\nimport { relativeTimeRounding } from \"moment\";\r\n\r\n@Component({\r\n  selector: \"PLedger\",\r\n  template: require('./PLedger.html'),\r\n  providers: [PLedgerservice, TransactionService],\r\n  styles: [require('../../../Style.css'), require('../../../../common/popupLists/pStyle.css')]\r\n})\r\nexport class PLedgerComponent {\r\n  @Output(\"onClose\") onClose = new EventEmitter();\r\n  ACID: string;\r\n  @Input() rootID: string;\r\n  @Input() PType: string;\r\n  @Input() mode: string;\r\n  @Input() grp: string;\r\n  @Output() SavePartyEmit = new EventEmitter();\r\n  @Input() fromTree: number;\r\n  \r\n  selectednode: any;\r\n  parentid: any;\r\n  majorparent: any;\r\n  majorParentAcList: any[] = [];\r\n  acParentList: any[] = [];\r\n  PARENTACNAME: string;\r\n  RootName: string;\r\n  acListtree: AcListTree = <AcListTree>{};\r\n  ledgerAcObj: TAcList = <TAcList>{};\r\n  ledgerAcList: TAcList[];\r\n  private returnUrl: string;\r\n  router: Router;\r\n  form: FormGroup;\r\n  viewMode = false;\r\n  private subcriptions: Array<Subscription> = [];\r\n  initialTextReadOnly = false;\r\n  ID: string = \"\";\r\n  modeTitle: string;\r\n  parentGroup: GroupParty;\r\n  acGroups: any[] = [];\r\n  actype: string = \"\";\r\n  disableActype: boolean = false;\r\n  lastParentID: string;\r\n  userProfile: any;\r\n  formObj: any = <any>{};\r\n  Title: string = \"\";\r\n  // PType: string;\r\n  isGroup: number;\r\n  PartyGrpList: any[] = [];\r\n  ChannelList: any[] = [];\r\n  GeoList: any[] = [];\r\n  RouteList: any[] = [];\r\n  BranchList: any[] = [];\r\n  editModel: any = <any>{}\r\n  geo: any;\r\n  CardName: any[] = [];\r\n  StateList: any[] = [];\r\n  DistrictList:any[]=[];\r\n  TrnMainObj: TrnMain = <TrnMain>{};\r\n  constructor(\r\n    private preventNavigationService: PreventNavigationService,\r\n    private alertService: AlertService,\r\n    private loadingService: SpinnerService,\r\n    protected MasterService: MasterRepo,\r\n    private PartyService: PLedgerservice,\r\n    router: Router,\r\n    private _activatedRoute: ActivatedRoute,\r\n    private _fb: FormBuilder,\r\n    public dialog: MdDialog,\r\n    private _authService: AuthService,\r\n    private _trnMainService: TransactionService\r\n  ) {\r\n    this.router = router;\r\n    this.TrnMainObj = this._trnMainService.TrnMainObj;\r\n    // this.service.getNewValues(selectL)\r\n    //     .subscribe(data => {\r\n    //         if (data.status == 'ok') {\r\n\r\n    //             this.ledgerAcObj.PARENT = data.result.parent.ACID;\r\n    //             this.PARENTACNAME = data.result.parent.ACNAME;\r\n    //             this.ledgerAcObj.PType = data.result.parent.PType;\r\n    //         }\r\n\r\n    //     }\r\n    //     , error => {\r\n    //         this.router.navigate([this.returnUrl]);\r\n    //         console.log(error);\r\n    //     }\r\n    //     );\r\n\r\n    \r\n    \r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.HideACNAME=false;\r\n    this.AfterView()\r\n  }\r\n  AfterView(){\r\n    //console.log(\"CheckPtype\", this.PType, this.isGroup);\r\n    // if (this.PType == 'C' && (this.isGroup == false || this.isGroup == 'false')) {\r\n    if (this.PType == \"C\" && this.isGroup == 0) {\r\n      \r\n      this.formObj.Name = \"Customer Name\";\r\n      this.formObj.PSType = \"Sales Type\";\r\n      this.formObj.PMode = \"Payment Mode\";\r\n      this.form.patchValue({\r\n        PType: \"C\",\r\n        TYPE: \"A\"\r\n      });\r\n    } else if (this.PType == \"C\" && this.isGroup == 1) {\r\n    \r\n      this.formObj.Name = \"Group Name\";\r\n      this.form.patchValue({ PType: \"C\", TYPE: \"G\" });\r\n    }\r\n    // else if (this.PType == 'V' && (this.isGroup == false || this.isGroup == 'false')) {\r\n    else if (this.PType == \"V\" && this.isGroup == 0) {\r\n      this.formObj.Name = \"Supplier Name\";\r\n      this.formObj.PSType = \"Purchase Type\";\r\n      this.formObj.PMode = \"Purchase Mode\";\r\n      this.form.patchValue({ PType: \"V\", TYPE: \"A\" });\r\n    } else if (this.PType == \"V\" && this.isGroup == 1) {\r\n      this.form.patchValue({ PType: \"V\", TYPE: \"G\" });\r\n    }\r\n\r\n    // document.getElementById('id') = 'General';\r\n    this.PartyService.getPartyGroupByPtype(this.PType).subscribe(res => {\r\n      if (res.status == \"ok\") {\r\n        this.PartyGrpList = res.result;\r\n      }\r\n    });\r\n    this.PartyService.getDIV().subscribe(res => {\r\n    \r\n      this.BranchList = res;\r\n    });\r\n    this.PartyService.getHierachy().subscribe(res => {\r\n      if (res.status == \"ok\") {\r\n        this.GeoList = res.result.GEO;\r\n        this.ChannelList = res.result.CHANNEL;\r\n        this.RouteList = res.result.Route;\r\n      }\r\n    });\r\n    this.MasterService.GETTRNTYPE().subscribe(res => {\r\n      if (res.status == 'ok') {\r\n        this.CardName = res.result;\r\n      }\r\n\r\n    })\r\n    this.MasterService.getState().subscribe(res => {\r\n      if (res.status == 'ok') {\r\n        this.StateList = res.result;\r\n      }\r\n    })\r\n    this.MasterService.getDistrict().subscribe(res => {\r\n      if (res.status == 'ok') {\r\n        this.DistrictList = res.result;\r\n      }\r\n    })\r\n    this.userProfile = this._authService.getUserProfile();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.form = this._fb.group({\r\n      PARENT: [\"\"],\r\n      TITLE: [\"\"],\r\n      ACNAME: [\"\", Validators.required],\r\n      SHORTNAME: [\"\"],\r\n      CUSTOMERID: [\"\"],\r\n      CATEGORY: [\"\"],\r\n      Currency: [\"\"],\r\n      PMODE: [\"\"],\r\n      CRLIMIT: [0],\r\n      CRPERIOD: [0],\r\n      PSTYPE: [\"\"],\r\n      DIV: [\"\"],\r\n      GSTTYPE: [\"\"],\r\n      MAILTYPE: [\"\"],\r\n      ISACTIVE: [1],\r\n      ADDRESS: [\"\"],\r\n      TEMPADDRESS: [\"\"],\r\n      CITY: [\"\"],\r\n      STATE: [\"\"],\r\n      AREA: [\"\"],\r\n      LANDMARK: [\"\"],\r\n      PHONE: [\"\"],\r\n      MOBILE: [\"\", Validators.required],\r\n      EMAIL: [\"\"],\r\n      POSTALCODE: [\"\"],\r\n      FAX: [\"\"],\r\n      VATNO: [\"\"],\r\n      ADHARNO: [\"\"],\r\n      GSTNO: [\"\"],\r\n      PRICELEVELCONFIG: [\"\"],\r\n      PRICELEVEL: [\"\"],\r\n      CTYPE: [\"\"],\r\n      ERPPLANTCODE: [\"\"],\r\n      ERPSTOCKLOCATIONCODE: [\"\"],\r\n      CBALANCE: [0],\r\n      PType: [\"\"],\r\n      MAPID: [\"\"],\r\n      ACCODE: [\"\"],\r\n      ACID: [\"\"],\r\n      TYPE: [\"\"],\r\n      Channel: [\"\"],\r\n      SO: [\"\"],\r\n      GEO: [\"\"],\r\n      ROUTE: [\"\"],\r\n      RouteDays: [\"\"],\r\n      DISTRICT:[\"\"],\r\n      CONTACTPERSON:[\"\"],\r\n      CONTACTMOBILE:[\"\"],\r\n      CONTACTEMAIL:[\"\"]\r\n    });\r\n    this.form.valueChanges.subscribe(data=>{\r\n      this.MasterService.PLedgerObj=data;\r\n    })\r\n\r\n    this.onFormChanges();\r\n    this.CrDisabled = 'enabled'\r\n\r\n    if (!!this._activatedRoute.snapshot.params[\"mode\"])\r\n      this.mode = this._activatedRoute.snapshot.params[\"mode\"];\r\n\r\n    if (!!this._activatedRoute.snapshot.params[\"isGroup\"])\r\n      this.isGroup = this._activatedRoute.snapshot.params[\"isGroup\"];\r\n\r\n    if (!!this._activatedRoute.snapshot.params[\"ACID\"])\r\n      this.ACID = this._activatedRoute.snapshot.params[\"ACID\"];\r\n\r\n    if (!!this._activatedRoute.snapshot.params[\"PType\"])\r\n      this.PType = this._activatedRoute.snapshot.params[\"PType\"];\r\n    if (!!this._activatedRoute.snapshot.params[\"Title\"])\r\n      this.Title = this._activatedRoute.snapshot.params[\"Title\"];\r\n\r\n    if (!!this._activatedRoute.snapshot.params[\"returnUrl\"])\r\n      this.returnUrl = this._activatedRoute.snapshot.params[\"returnUrl\"];\r\n\r\n    this.getGroups();\r\n\r\n    // this.MasterService.getAllAccount().subscribe(res => { this.ledgerAcList.push(<TAcList>res); });\r\n\r\n    if (this.mode == \"edit\") {\r\n      this.form.get(\"PARENT\").disable();\r\n      this.form.get(\"ACNAME\").disable();\r\n      this.form.get(\"SHORTNAME\").disable();\r\n      this.form.get(\"CUSTOMERID\").disable();\r\n      this.form.get(\"VATNO\").disable();\r\n      this.form.get(\"ACCODE\").disable();\r\n      this.form.get(\"CRLIMIT\").disable();\r\n\r\n      this.loadingService.show(\"Getting data, Please wait...\");\r\n      this.MasterService.getAllAccount(this.ACID).subscribe(\r\n        data => {\r\n          this.loadingService.hide();\r\n          this.editModel = data.result;\r\n          if(data.result2!=null || data.result2 !=undefined){\r\n            this.SOTableList .push(data.result2)\r\n          }\r\n           \r\n          this.setEditFromValue();\r\n        },\r\n        error => {\r\n          this.loadingService.hide();\r\n        }\r\n      );\r\n    } else {\r\n      if (this.Title == \"AddLedger\") {\r\n        this.modeTitle = \"Add Party Ledger\";\r\n      } else if (this.Title == \"AddGroup\") {\r\n        this.modeTitle = \"Add Party Group\";\r\n      }\r\n    }\r\n\r\n  }\r\n  HideACNAME=false;\r\nBindValue(value,isGroup=0){\r\n  this.PType=value;\r\n  this.isGroup=isGroup;\r\n  this.HideACNAME=true;\r\n  this.AfterView();\r\n  return\r\n  // this.HideACNAME=false;\r\n  // this.form.patchValue({\r\n  //   PType: '',\r\n  //   TYPE: '',\r\n  //   PARENT:''\r\n  // });\r\n  // this.isGroup=isGroup\r\n  // if (value == \"C\" && this.isGroup == 0) {\r\n  //   this.HideACNAME=true;\r\n  //   this.formObj.Name = \"Customer Name\";\r\n  //   this.formObj.PSType = \"Sales Type\";\r\n  //   this.formObj.PMode = \"Payment Mode\";\r\n  //   this.form.patchValue({\r\n  //     PType: \"C\",\r\n  //     TYPE: \"A\",\r\n  //     PARENT:'PA'\r\n  //   });\r\n  // } else if (value == \"C\" && this.isGroup == 1) {\r\n  //   this.formObj.Name = \"Group Name\";\r\n  //   this.form.patchValue({ PType: \"C\", TYPE: \"G\",PARENT:'PA' });\r\n  // }\r\n  // // else if (this.PType == 'V' && (this.isGroup == false || this.isGroup == 'false')) {\r\n  // if (value == \"V\" && this.isGroup == 0) {\r\n  //   //console.log(\"reached supllier\")\r\n  //   this.HideACNAME=true;\r\n  //   this.formObj.Name = \"Supplier Name\";\r\n  //   this.formObj.PSType = \"Purchase Type\";\r\n  //   this.formObj.PMode = \"Purchase Mode\";\r\n  //   this.form.patchValue({ PType: \"V\", TYPE: \"A\",PARENT:'PA' });\r\n  // } else if (this.PType == \"V\" && this.isGroup == 1) {\r\n  //   this.form.patchValue({ PType: \"V\", TYPE: \"G\",PARENT:'PA' });\r\n  // }\r\n}\r\n\r\n  setEditFromValue(data=null) {\r\n    if(data!=null && data !=undefined && data !=\"\"){\r\n      this.editModel=data\r\n    }\r\n    this.form.patchValue({\r\n      PARENT: this.editModel.PARENT,\r\n      TITLE: this.editModel.TITLE,\r\n      ACNAME: this.editModel.ACNAME,\r\n      SHORTNAME: this.editModel.shortname,\r\n      CUSTOMERID: this.editModel.customerID,\r\n      CATEGORY: this.editModel.CATEGORY,\r\n      Currency: this.editModel.Currency,\r\n      PMODE: this.editModel.PMODE,\r\n      CRLIMIT: this.editModel.CRLIMIT,\r\n      CRPERIOD: this.editModel.CRPERIOD,\r\n      PSTYPE: this.editModel.PSTYPE,\r\n      DIV: this.editModel.DIV,\r\n      GSTTYPE: this.editModel.GSTTYPE,\r\n      MAILTYPE: this.editModel.MAILTYPE,\r\n      ISACTIVE: this.editModel.ISACTIVE,\r\n      ADDRESS: this.editModel.ADDRESS,\r\n      TEMPADDRESS: this.editModel.TEMPADDRESS,\r\n      CITY: this.editModel.CITY,\r\n      STATE: this.editModel.STATE,\r\n      AREA: this.editModel.AREA,\r\n      LANDMARK: this.editModel.LANDMARK,\r\n      PHONE: this.editModel.PHONE,\r\n      MOBILE: this.editModel.MOBILE,\r\n      EMAIL: this.editModel.EMAIL,\r\n      POSTALCODE: this.editModel.POSTALCODE,\r\n      FAX: this.editModel.FAX,\r\n      VATNO: this.editModel.VATNO,\r\n      ADHARNO: this.editModel.ADHARNO,\r\n      GSTNO: this.editModel.GSTNO,\r\n      PRICELEVELCONFIG: this.editModel.PRICELEVELCONFIG,\r\n      PRICELEVEL: this.editModel.PRICELEVEL,\r\n      CTYPE: this.editModel.CTYPE,\r\n      ERPPLANTCODE: this.editModel.ERPPLANTCODE,\r\n      CBALANCE: this.editModel.CBALANCE,\r\n      PType: this.editModel.PType,\r\n      MAPID: this.editModel.MAPID,\r\n      ACCODE: this.editModel.ACCODE,\r\n      ACID: this.editModel.ACID,\r\n      TYPE: this.editModel.TYPE,\r\n      isAutoGSTApplicable : this.editModel.isAutoGSTApplicable,\r\n      isRCMApplicable : this.editModel.isRCMApplicable,\r\n      isReverseChargeApplicable : this.editModel.isReverseChargeApplicable\r\n\r\n    });\r\n    this.geo = this.editModel.GEO;\r\n  }\r\n\r\n  onFormChanges(): void {\r\n    this.form.valueChanges.subscribe(() => {\r\n      if (this.form.dirty)\r\n        this.preventNavigationService.preventNavigation(true);\r\n    });\r\n  }\r\n\r\n  majorgroupChange() {\r\n    this.filter(this.form.get(\"majorparent\").value);\r\n  }\r\n\r\n  filter(majorparent) {\r\n    this.MasterService.getpartyListTree().subscribe(data => {\r\n      var f = data.filter(x => x.ACID == majorparent)[0];\r\n      if (f != null) {\r\n        this.acParentList = f.children;\r\n      }\r\n    });\r\n  }\r\n  SumbitSave() {\r\n    let gsttype=this.form.get(\"GSTTYPE\").value;\r\n    if(gsttype==\"Regular\" || gsttype==\"Composite\")\r\n    {\r\n      if(this.form.get(\"GSTNO\").value==null || this.form.get(\"GSTNO\").value==\"\")\r\n      {\r\n        this.alertService.error(\"Please insert the GST NO.\");\r\n        return;\r\n      }\r\n    }\r\n    //console.log(\"gstsss\",gsttype);\r\n    if (this.PType == 'C') {\r\n      if (this.form.get(\"CUSTOMERID\").value == \"\" || this.form.get(\"CUSTOMERID\").value == null) { this.alertService.warning(\"Customer-ID is required!\"); return }\r\n    }\r\n    if (this.PType == 'V') {\r\n      if (this.form.get('ERPPLANTCODE').value == \"\" || this.form.get('ERPPLANTCODE').value == null) { this.alertService.warning(\"ERPPLANTCODE is required!\"); return }\r\n    }\r\n    if (this.form.value.MOBILE.length != 10) {\r\n      this.alertService.warning(\"Mobile number is invalid! Please enter atleast 10 digit number. \");\r\n      return\r\n    }\r\n\r\n    if (this.form.value.VATNO) {\r\n      // console.log({ billtotel: parseFloat(this.form.value.VATNO) });\r\n      var pno = parseFloat(this.form.value.VATNO);\r\n      // if (pno.toString().length != 9) {\r\n      //   this.alertService.error(\"PAN No is not correct\");\r\n      //   return;\r\n      // }\r\n    }\r\n    try {\r\n      let al = <TAcList>{};\r\n\r\n      this.form.value.MAPID = \"N\";\r\n\r\n      if (this.mode == \"edit\") {\r\n        al.ACID = this.ACID;\r\n      }\r\n      let saveModel = this.form.value;\r\n      if (this.PType == 'C') {\r\n        saveModel.PType = \"C\"\r\n      }\r\n      else {\r\n        saveModel.PType = \"V\"\r\n      }\r\n      saveModel.GEO = this.geo;\r\n      saveModel.PRICELEVEL = this.geo;\r\n      saveModel.TYPE = \"A\"\r\n     if(this.mode!=\"edit\"){\r\n      saveModel.PARENT = \"PA\";\r\n     }\r\n      saveModel.ACNAME = this.form.controls['ACNAME'].value;\r\n      saveModel.SHORTNAME = this.form.controls['SHORTNAME'].value;\r\n      saveModel.ACCODE = saveModel.CUSTOMERID = this.form.controls['CUSTOMERID'].value;\r\n      saveModel.VATNO = this.form.controls['VATNO'].value;\r\n      saveModel.LEVELS = 10;\r\n      // saveModel.ACCODE = this.form.controls['ACCODE'].value;\r\n      saveModel.CRLIMIT = this.form.controls['CRLIMIT'].value;\r\n\r\n      this.loadingService.show(\"Saving Data please wait...\");\r\n      let sub = this.MasterService.saveAccount(\r\n        this.mode,\r\n        saveModel,\r\n        this.SOTableList\r\n      ).subscribe(\r\n        data => {\r\n          this.loadingService.hide();\r\n          if (data.status == \"ok\") {\r\n            this.alertService.success(\"Data Saved Successfully\");\r\n            this.preventNavigationService.preventNavigation(false);\r\n            setTimeout(() => {\r\n              this.onClose.emit(true);\r\n              this.router.navigate([this.returnUrl]);\r\n            }, 1000);\r\n          } else {\r\n            //alert(data.result);\r\n            //the ConnectionString in the server is not initialized means the the token 's user is not int the list of database user so it could't make connectionstring. Re authorization is requierd\r\n            if (\r\n              data.result._body ==\r\n              \"The ConnectionString property has not been initialized.\"\r\n            ) {\r\n              this.router.navigate([\"/login\", this.router.url]);\r\n              return;\r\n            }\r\n            //Some other issues need to check\r\n            this.alertService.error(\r\n              \"Error in Saving Data:\" + data.result._body\r\n            );\r\n          }\r\n        },\r\n        error => {\r\n          this.loadingService.hide();\r\n          this.alertService.error(error);\r\n        }\r\n      );\r\n      this.subcriptions.push(sub);\r\n    } catch (e) {\r\n      this.alertService.error(e);\r\n    }\r\n  }\r\n\r\n  cancel() {\r\n    try {\r\n      this.router.navigate([this.returnUrl]);\r\n    } catch (ex) {\r\n      console.log(ex);\r\n      this.alertService.error(ex);\r\n    }\r\n  }\r\n\r\n  changePtype(value) {\r\n    this.form.get(\"Ptype\").patchValue(value);\r\n  }\r\n\r\n  public onGrpChange(event, i, selected) {\r\n    try {\r\n      if (selected) {\r\n        // this.actype = selected.ACTYPE\r\n        // this.changeACtype(selected.ACTYPE);\r\n        // this.disableActype == true;\r\n        //latest selected\r\n        this.parentGroup = selected;\r\n      }\r\n\r\n      //let newGroup: GroupAccounts = event.value;\r\n      console.log({\r\n        onGrpChangeEvent: event,\r\n        eventIndex: i,\r\n        selected: selected\r\n      });\r\n      let opt: SelectItem[] = [];\r\n      var ind = i;\r\n\r\n      if (event) {\r\n        if (this.acGroups.length > ind + 1) {\r\n          this.acGroups.splice(ind + 1, this.acGroups.length - 1);\r\n        }\r\n        // console.log({ GroupchageEvent: event, value: event.value.ACNAME });\r\n        this.lastParentID = event.value.ACID;\r\n        this.PartyService.getChildrenGroups(event.value.ACID)\r\n          .flatMap(data => data)\r\n          .subscribe(\r\n            data => {\r\n              // console.log({ children: data });\r\n              if (data.TYPE == \"G\")\r\n                opt.push({ label: data.ACNAME, value: data });\r\n            },\r\n            Error => console.log({ groupchangeError: Error }),\r\n            () => {\r\n              if (opt.length > 0) {\r\n                this.acGroups.push({\r\n                  group: event.value.ACNAME,\r\n                  value: event.value,\r\n                  options: opt\r\n                });\r\n              }\r\n\r\n              //this.groupListSubject.next(subjectData);\r\n              // console.log({ negroup2: { group: event.value.ACNAME, value: event.value, options: opt }, subjectData2: subjectData });\r\n            }\r\n          );\r\n      }\r\n    } catch (ex) {\r\n      console.log({ onGroupChange: ex });\r\n    }\r\n  }\r\n  getGroups() {\r\n    //console.log(\"Has SUB is false\");\r\n    this.actype = \"\";\r\n    this.disableActype = false;\r\n    this.acGroups = [];\r\n    this.getMainGroup();\r\n    if (!this.ACID) return;\r\n    console.log({ acid: this.ACID });\r\n    this.PartyService.getParentGroups(this.ACID)\r\n      .flatMap(data => data)\r\n      .subscribe(\r\n        data => {\r\n          try {\r\n            data.SELECTEDGROUPAC = data.CHILDLIST.find(\r\n              itm => itm.ACID == data.SELECTEDGROUP\r\n            );\r\n            this.parentGroup = data.SELECTEDGROUPAC;\r\n            console.log({\r\n              selectedGroup: data.SELECTEDGROUP,\r\n              selectedGroupAC: data.SELECTEDGROUPAC\r\n            });\r\n            // if (data.SELECTEDGROUPAC.HASSUBLEDGER == 1 && this.hasSubLedger == 0) {\r\n            //     this.hasSubLedger = 1;\r\n            //     this.changehassubEvent(true);\r\n            //     this.disableHassubledger = true;\r\n            //     //console.log(\"Disable AHS SUB\")\r\n            // }\r\n            let opt: SelectItem[] = [];\r\n            data.CHILDLIST.forEach(child => {\r\n              opt.push({ label: child.ACNAME, value: child });\r\n            });\r\n            this.acGroups.push({\r\n              group: data.ACNAME,\r\n              value: data,\r\n              options: opt\r\n            });\r\n          } catch (ex) {\r\n            console.log({ getParentGroups: ex });\r\n          }\r\n        },\r\n        error => {\r\n          console.log({ getgroupError: error });\r\n        },\r\n        () => {\r\n          if (this.acGroups.length > 1) {\r\n            let selectedGroup = this.acGroups[0].options.find(\r\n              itm => itm.value.ACID == this.acGroups[1].value.ACID\r\n            );\r\n            if (selectedGroup) {\r\n              this.acGroups[0].value.SELECTEDGROUPAC = selectedGroup.value;\r\n            }\r\n            // console.log({ selectedGroupValue: selectedGroup.value });\r\n            // if (selectedGroup.value.Ptype) {\r\n            //     alert(\"REACHED\")\r\n            //     this.actype = selectedGroup.value.Ptype\r\n            //     this.changePtype(selectedGroup.value.Ptype);\r\n            //     this.disableActype == true;\r\n            // }\r\n            // console.log({groupTofind:this.acGroups[1],options:this.acGroups[0].options,selected:this.acGroups[0].value.SELECTEDGROUPAC,selected2:this.acGroups[1].value.SELECTEDGROUPAC})\r\n          }\r\n        }\r\n      );\r\n\r\n    return;\r\n  }\r\n\r\n  getMainGroup() {\r\n    let opt: SelectItem[] = [];\r\n    this.PartyService.getTopGroups()\r\n      .flatMap(data => data)\r\n      .subscribe(data => {\r\n        opt.push({ label: data.ACNAME, value: data });\r\n      });\r\n    this.acGroups.push({\r\n      group: \"Main Group\",\r\n      value: { ACNAME: \"MAIN GROUP\", ACID: null, PARENT: null },\r\n      options: opt\r\n    });\r\n  }\r\n\r\n  clickedNotActive(value) {\r\n    if (this.form == null) {\r\n      return;\r\n    }\r\n    this.form.get(\"isNotActive\").patchValue(value);\r\n  }\r\n  NotActive() { }\r\n  partyList: any[] = [];\r\n  solist: any[] = [];\r\n  SOTableList: any[] = [];\r\n  RCODE: any;\r\n  RouteClick(value) {\r\n    this.RCODE = value;\r\n    // //console.log(\"RouteClick\", value)\r\n    this.PartyService.getSOFromRoute(value).subscribe(res => {\r\n      // //console.log(\"RES\", res)\r\n      // if (res.status == \"ok\") {\r\n      //   this.solist = res.result;\r\n      // }\r\n    });\r\n  }\r\n\r\n  SOChange(value) {\r\n    let soName = this.solist.filter(x => x.CODE == value)[0];\r\n\r\n    //console.log(\"Changed\", soName);\r\n\r\n    this.form.patchValue({\r\n      SO: soName ? soName.CODE : \"\"\r\n    });\r\n  }\r\n\r\n  RouteAdd() {\r\n    let a: any = <any>{};\r\n    var formValue = this.form.value;\r\n    var route = this.RouteList.filter(x => x.RouteCode == formValue.ROUTE)[0];\r\n    let soName = this.solist.filter(x => x.CODE == formValue.SO)[0];\r\n\r\n    if (soName == undefined || soName == null) {\r\n      this.alertService.info(\"All fields are required.\");\r\n      return;\r\n    }\r\n\r\n    a.SONAME = soName ? soName.NAME : \"\";\r\n    a.RouteName = route ? route.RouteName : \"\";\r\n    a.SOCODE = soName ? soName.CODE : \"\";\r\n    a.PCL = soName ? soName.PCL : \"\";\r\n    this.SOTableList.push(a);\r\n\r\n    this.form.patchValue({\r\n      ROUTE: \"\",\r\n      SO: \"\",\r\n      SONAME: \"\",\r\n      RouteDays: \"\"\r\n    });\r\n  }\r\n\r\n  deleteSOList(index: number) {\r\n    this.SOTableList.splice(index, 1);\r\n  }\r\n\r\n  CrDisabled: string;\r\n  Crvalue: string\r\n  ChangePMODE(value) {\r\n    this.Crvalue = value;\r\n    if (value == \"credit\" || value == \"cashandcredit\") {\r\n      this.CrDisabled = 'enable';\r\n    }\r\n    else {\r\n      this.CrDisabled = 'disabled';\r\n      this.form.patchValue({\r\n        CRLIMIT: 0,\r\n        CRPERIOD: 0\r\n      })\r\n    }\r\n  }\r\n  CreditDisabled() {\r\n    try {\r\n      if (this.Crvalue == \"credit\" || this.Crvalue == 'cashandcredit') {\r\n        this.CrDisabled = 'enable';\r\n        return \"white\";\r\n      } else {\r\n        this.CrDisabled = 'disabled';\r\n        return \"#EBEBE4\";\r\n\r\n      }\r\n    } catch (ex) {\r\n      console.log(ex);\r\n      this.alertService.error(ex);\r\n    }\r\n  }\r\n  changePriceLevel() {\r\n    alert(\"Changes on Pricelevel will affects the Category also!\")\r\n\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/pages/masters/components/PLedger/PLedger.component.ts","import { MasterRepo } from './../../../../common/repositories/masterRepo.service';\r\nimport { Subscriber } from 'rxjs/Subscriber';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { Http, Response, RequestOptions, Headers } from '@angular/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { ActivatedRoute, ActivatedRouteSnapshot } from '@angular/router';\r\nimport { AuthService } from '../../../../common/services/permission';\r\n// import { IDivision } from '../../../../common/interfaces';\r\n// import { AlternateUnit} from '../../../../common/interfaces/TrnMain';\r\nimport { AlternateUnit, IDivision, Item, Product, ItemRate, ProductType, KotCategory, Model, Brand, RateDiscount, TBarcode } from '../../../../common/interfaces';\r\nimport { Subject } from 'rxjs/subject'\r\nimport { GlobalState } from \"../../../../global.state\";\r\n\r\n@Injectable()\r\n\r\nexport class PLedgerservice {\r\n    constructor(private http: Http, private activatedRoute: ActivatedRoute, private authService: AuthService, private state: GlobalState, private masterService: MasterRepo) {\r\n    }\r\n    private get apiUrl(): string {\r\n        let url = this.state.getGlobalSetting(\"apiUrl\");\r\n        let apiUrl = \"\";\r\n\r\n        if (!!url && url.length > 0) { apiUrl = url[0] };\r\n        return apiUrl\r\n    }\r\n    getParentWisePartyList(ACID: string) {\r\n        return this.http.get(this.apiUrl + '/getParentWiseAccount/' + ACID, this.getRequestOption()).flatMap(response => response.json() || []);\r\n    }\r\n\r\n    getNewValues(mcode: string) {\r\n        let res = { status: \"error\", result: \"\" };\r\n        let returnSubject: Subject<any> = new Subject();\r\n        this.http.get(this.apiUrl + '/getNewValues/' + mcode, this.getRequestOption()).subscribe(response => {\r\n            let data = response.json();\r\n            if (data.status == 'ok') {\r\n                returnSubject.next(data);\r\n                returnSubject.unsubscribe();\r\n\r\n            }\r\n            else {\r\n                returnSubject.next(data)\r\n                returnSubject.unsubscribe();\r\n            }\r\n        }, error => {\r\n            res.status = 'error'; res.result = error;\r\n            returnSubject.next(res);\r\n            returnSubject.unsubscribe();\r\n        }\r\n        );\r\n        return returnSubject;\r\n    }\r\n\r\n    getPartyList(mcode: string) {\r\n        let res = { status: \"error\", result: \"\" };\r\n        let returnSubject: Subject<any> = new Subject();\r\n        this.http.get(this.apiUrl + '/getPartyList/' + mcode, this.getRequestOption()).subscribe(response => {\r\n            let data = response.json();\r\n            if (data.status == 'ok') {\r\n                returnSubject.next(data);\r\n                returnSubject.unsubscribe();\r\n\r\n            }\r\n            else {\r\n                returnSubject.next(data)\r\n                returnSubject.unsubscribe();\r\n            }\r\n        }, error => {\r\n            res.status = 'error'; res.result = error;\r\n            returnSubject.next(res);\r\n            returnSubject.unsubscribe();\r\n        }\r\n        );\r\n        return returnSubject;\r\n    }\r\n    getAllParty(ACID: string) {\r\n        let res = { status: \"error\", result: \"\" };\r\n        let returnSubject: Subject<any> = new Subject();\r\n        this.http.get(this.apiUrl + '/getAllData/' + ACID, this.getRequestOption()).subscribe(response => {\r\n            let data = response.json();\r\n            if (data.status == 'ok') {\r\n                returnSubject.next(data);\r\n                returnSubject.unsubscribe();\r\n\r\n            }\r\n            else {\r\n                returnSubject.next(data)\r\n                returnSubject.unsubscribe();\r\n            }\r\n        }, error => {\r\n            res.status = 'error'; res.result = error;\r\n            returnSubject.next(res);\r\n            returnSubject.unsubscribe();\r\n        }\r\n        );\r\n        return returnSubject;\r\n    }\r\n    savePartyList(mode: string, prodObj: Product, RGLIST: ItemRate[], AlternateUnits: AlternateUnit[], PBarCodeCollection: TBarcode[]) {\r\n        let res = { status: \"error\", result: \"\" }\r\n        let returnSubject: Subject<any> = new Subject();\r\n        let opt = this.getRequestOption();\r\n        let hd: Headers = new Headers({ 'Content-Type': 'application/json' });\r\n        let op: RequestOptions = new RequestOptions()\r\n        let bodyData = { mode: mode, data: { product: prodObj, rglist: RGLIST, alternateunits: AlternateUnits, pbarcodes: PBarCodeCollection } };\r\n        ////console.log(\"product json\");\r\n        var data = JSON.stringify(bodyData, undefined, 2);\r\n        //console.log(data);\r\n        this.http.post(this.apiUrl + \"/savePartyList\", bodyData, this.getRequestOption())\r\n            .subscribe(data => {\r\n                let retData = data.json();\r\n                //console.log(retData);\r\n                if (retData.status == \"ok\") {\r\n                    res.status = \"ok\";\r\n                    res.result = retData.result\r\n                    returnSubject.next(res);\r\n                    returnSubject.unsubscribe();\r\n                }\r\n                else {\r\n                    res.status = \"error1\"; res.result = retData.result;\r\n                    //console.log(res);\r\n                    returnSubject.next(res);\r\n                    returnSubject.unsubscribe();\r\n                }\r\n            },\r\n            error => {\r\n                res.status = \"error2\", res.result = error;\r\n                //console.log(res);\r\n                returnSubject.next(res);\r\n                returnSubject.unsubscribe();\r\n            }\r\n            );\r\n        return returnSubject;\r\n\r\n    }\r\n    private getRequestOption() {\r\n        let headers: Headers = new Headers({ 'Content-type': 'application/json', 'Authorization': this.authService.getAuth().token })\r\n        //console.log({ headers: headers });\r\n        return new RequestOptions({ headers: headers });\r\n    }\r\n\r\n    public getParentGroups(acid: string) {\r\n        //console.log({ acid: acid })\r\n        return new Observable((observer: Subscriber<GroupParty[]>) => {\r\n            this.http.get(this.masterService.apiUrl + '/getParents?acid=' + acid, this.masterService.getRequestOption())\r\n                .map(data => {\r\n                    //console.log({ parentGrop: data })\r\n                    return data.json()\r\n                })\r\n                .subscribe(res => {\r\n                    if (res.status == 'ok') {\r\n                        observer.next(res.result);\r\n                    }\r\n                }, error => {\r\n                    this.masterService.resolveError(error, 'getParents');\r\n                    observer.complete();\r\n                },\r\n                () => {\r\n                    observer.complete();\r\n                }\r\n                )\r\n        })\r\n\r\n\r\n    }\r\n\r\n    public getChildrenGroups(acid: string) {\r\n        //console.log({ getChildrenAcid: acid, url: this.masterService.apiUrl + '/getChildren?' + acid });\r\n        return new Observable((observer: Subscriber<GroupParty[]>) => {\r\n            this.http.get(this.masterService.apiUrl + '/getChildren?acid=' + acid, this.masterService.getRequestOption())\r\n                .map(data => data.json())\r\n                .subscribe(res => {\r\n                    //console.log({ getChildrenResult: res });\r\n                    observer.next(res.result);\r\n                }, error => {\r\n                    this.masterService.resolveError(error, 'getChildren');\r\n                    observer.complete();\r\n                },\r\n                () => {\r\n                    observer.complete();\r\n                }\r\n                )\r\n        })\r\n    }\r\n\r\n    public getTopGroups() {\r\n        return new Observable((observer: Subscriber<GroupParty[]>) => {\r\n            this.http.get(this.masterService.apiUrl + '/getTopPartyGroups', this.masterService.getRequestOption())\r\n                .map(data => data.json())\r\n                .subscribe(res => {\r\n                    observer.next(<GroupParty[]>res.result);\r\n                }, error => {\r\n                    this.masterService.resolveError(error, 'getTopGroups');\r\n                    observer.complete();\r\n                },\r\n                () => {\r\n                    observer.complete();\r\n                }\r\n                )\r\n        })\r\n    }\r\n\r\n    getPartyGroupByPtype(pType: string) {\r\n        let res = { status: \"error\", result: \"\" };\r\n        let returnSubject: Subject<any> = new Subject();\r\n        this.http.get(this.apiUrl + '/getPartyGroup/'+pType, this.getRequestOption()).subscribe(response => {\r\n            let data = response.json();\r\n            if (data.status == 'ok') {\r\n                returnSubject.next(data);\r\n                returnSubject.unsubscribe();\r\n\r\n            }\r\n            else {\r\n                returnSubject.next(data)\r\n                returnSubject.unsubscribe();\r\n            }\r\n        }, error => {\r\n            res.status = 'error'; res.result = error;\r\n            returnSubject.next(res);\r\n            returnSubject.unsubscribe();\r\n        }\r\n        );\r\n        return returnSubject;\r\n    }\r\n    getDIV() {\r\n        let res = { status: \"error\", result: \"\" };\r\n        let returnSubject: Subject<any> = new Subject();\r\n        this.http.get(this.apiUrl + '/getDIV', this.getRequestOption()).subscribe(response => {\r\n            let data = response.json();\r\n            if (data.status == 'ok') {\r\n                returnSubject.next(data);\r\n                returnSubject.unsubscribe();\r\n\r\n            }\r\n            else {\r\n                returnSubject.next(data)\r\n                returnSubject.unsubscribe();\r\n            }\r\n        }, error => {\r\n            res.status = 'error'; res.result = error;\r\n            returnSubject.next(res);\r\n            returnSubject.unsubscribe();\r\n        }\r\n        );\r\n        return returnSubject;\r\n    }\r\n    getPartyItemByPtype(pType: string) {\r\n        let res = { status: \"error\", result: \"\" };\r\n        let returnSubject: Subject<any> = new Subject();\r\n        this.http.get(this.apiUrl + '/getPartyItem/'+pType, this.getRequestOption()).subscribe(response => {\r\n            let data = response.json();\r\n            if (data.status == 'ok') {\r\n                returnSubject.next(data);\r\n                returnSubject.unsubscribe();\r\n\r\n            }\r\n            else {\r\n                returnSubject.next(data)\r\n                returnSubject.unsubscribe();\r\n            }\r\n        }, error => {\r\n            res.status = 'error'; res.result = error;\r\n            returnSubject.next(res);\r\n            returnSubject.unsubscribe();\r\n        }\r\n        );\r\n        return returnSubject;\r\n    }\r\n    getAccountLedgerItem(prefix:string ='') {\r\n        let res = { status: \"error\", result: \"\" };\r\n        let returnSubject: Subject<any> = new Subject();\r\n        this.http.get(this.apiUrl + '/getAccountItem/'+prefix, this.getRequestOption()).subscribe(response => {\r\n            let data = response.json();\r\n            if (data.status == 'ok') {\r\n                returnSubject.next(data);\r\n                returnSubject.unsubscribe();\r\n\r\n            }\r\n            else {\r\n                returnSubject.next(data)\r\n                returnSubject.unsubscribe();\r\n            }\r\n        }, error => {\r\n            res.status = 'error'; res.result = error;\r\n            returnSubject.next(res);\r\n            returnSubject.unsubscribe();\r\n        }\r\n        );\r\n        return returnSubject;\r\n    }\r\n    getAllAccount() {\r\n        let res = { status: \"error\", result: \"\" };\r\n        let returnSubject: Subject<any> = new Subject();\r\n        this.http.get(this.apiUrl + '/getAllAccountItem/', this.getRequestOption()).subscribe(response => {\r\n            let data = response.json();\r\n            if (data.status == 'ok') {\r\n                returnSubject.next(data);\r\n                returnSubject.unsubscribe();\r\n\r\n            }\r\n            else {\r\n                returnSubject.next(data)\r\n                returnSubject.unsubscribe();\r\n            }\r\n        }, error => {\r\n            res.status = 'error'; res.result = error;\r\n            returnSubject.next(res);\r\n            returnSubject.unsubscribe();\r\n        }\r\n        );\r\n        return returnSubject;\r\n    }\r\n    getAccountLedgerGroup() {\r\n        let res = { status: \"error\", result: \"\" };\r\n        let returnSubject: Subject<any> = new Subject();\r\n        this.http.get(this.apiUrl + '/getAccountGroup', this.getRequestOption()).subscribe(response => {\r\n            let data = response.json();\r\n            if (data.status == 'ok') {\r\n                returnSubject.next(data);\r\n                returnSubject.unsubscribe();\r\n\r\n            }\r\n            else {\r\n                returnSubject.next(data)\r\n                returnSubject.unsubscribe();\r\n            }\r\n        }, error => {\r\n            res.status = 'error'; res.result = error;\r\n            returnSubject.next(res);\r\n            returnSubject.unsubscribe();\r\n        }\r\n        );\r\n        return returnSubject;\r\n    }\r\n    getHierachy() {\r\n        let res = { status: \"error\", result: \"\" };\r\n        let returnSubject: Subject<any> = new Subject();\r\n        this.http.get(this.apiUrl + '/getAllHierachy', this.getRequestOption()).subscribe(response => {\r\n            let data = response.json();\r\n            if (data.status == 'ok') {\r\n                returnSubject.next(data);\r\n                returnSubject.unsubscribe();\r\n\r\n            }\r\n            else {\r\n                returnSubject.next(data)\r\n                returnSubject.unsubscribe();\r\n            }\r\n        }, error => {\r\n            res.status = 'error'; res.result = error;\r\n            returnSubject.next(res);\r\n            returnSubject.unsubscribe();\r\n        }\r\n        );\r\n        return returnSubject;\r\n    }\r\n    getSOFromRoute(rcode: string) {\r\n        let res = { status: \"error\", result: \"\" };\r\n        let returnSubject: Subject<any> = new Subject();\r\n        this.http.get(this.apiUrl + '/getSOfromRCode/'+rcode, this.getRequestOption()).subscribe(response => {\r\n            let data = response.json();\r\n            if (data.status == 'ok') {\r\n                returnSubject.next(data);\r\n                returnSubject.unsubscribe();\r\n\r\n            }\r\n            else {\r\n                returnSubject.next(data)\r\n                returnSubject.unsubscribe();\r\n            }\r\n        }, error => {\r\n            res.status = 'error'; res.result = error;\r\n            returnSubject.next(res);\r\n            returnSubject.unsubscribe();\r\n        }\r\n        );\r\n        return returnSubject;\r\n    }\r\n    getAllMainGroup() {\r\n        let res = { status: \"error\", result: \"\" };\r\n        let returnSubject: Subject<any> = new Subject();\r\n        this.http.get(this.apiUrl + '/AllPrimaryGroup/', this.getRequestOption()).subscribe(response => {\r\n            let data = response.json();\r\n            if (data.status == 'ok') {\r\n                returnSubject.next(data);\r\n                returnSubject.unsubscribe();\r\n\r\n            }\r\n            else {\r\n                returnSubject.next(data)\r\n                returnSubject.unsubscribe();\r\n            }\r\n        }, error => {\r\n            res.status = 'error'; res.result = error;\r\n            returnSubject.next(res);\r\n            returnSubject.unsubscribe();\r\n        }\r\n        );\r\n        return returnSubject;\r\n    }\r\n    getAllAccountGroup() {\r\n        let res = { status: \"error\", result: \"\" };\r\n        let returnSubject: Subject<any> = new Subject();\r\n        this.http.get(this.apiUrl + '/AllAccountGroup/', this.getRequestOption()).subscribe(response => {\r\n            let data = response.json();\r\n            if (data.status == 'ok') {\r\n                returnSubject.next(data);\r\n                returnSubject.unsubscribe();\r\n\r\n            }\r\n            else {\r\n                returnSubject.next(data)\r\n                returnSubject.unsubscribe();\r\n            }\r\n        }, error => {\r\n            res.status = 'error'; res.result = error;\r\n            returnSubject.next(res);\r\n            returnSubject.unsubscribe();\r\n        }\r\n        );\r\n        return returnSubject;\r\n    }\r\n}\r\n\r\nexport interface GroupParty {\r\n    ACID: string;\r\n    ACNAME: string;\r\n    PARENT: string;\r\n    TYPE: string;\r\n    PType: string;\r\n    MAPID: string;\r\n    CHILDLIST: any[];\r\n    SELECTEDGROUP: any;\r\n    LIST: Observable<any[]>;\r\n    SELECTEDGROUPAC: GroupParty;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/pages/masters/components/PLedger/PLedger.service.ts","export class ServerSourceConf {\r\n\r\n  protected static readonly SORT_FIELD_KEY = '_sort';\r\n  protected static readonly SORT_DIR_KEY = '_order';\r\n  protected static readonly PAGER_PAGE_KEY = '_page';\r\n  protected static readonly PAGER_LIMIT_KEY = '_limit';\r\n  protected static readonly FILTER_FIELD_KEY = '#field#_like';\r\n  protected static readonly TOTAL_KEY = 'x-total-count';\r\n  protected static readonly DATA_KEY = '';\r\n\r\n  endPoint: string;\r\n\r\n  sortFieldKey: string;\r\n  sortDirKey: string;\r\n  pagerPageKey: string;\r\n  pagerLimitKey: string;\r\n  filterFieldKey: string;\r\n  totalKey: string;\r\n  dataKey: string;\r\n\r\n  constructor(\r\n    {endPoint = '', sortFieldKey = '', sortDirKey = '', pagerPageKey = '', pagerLimitKey = '', filterFieldKey = '', totalKey = '', dataKey = ''} = {}) {\r\n\r\n    this.endPoint = endPoint ? endPoint : '';\r\n\r\n    this.sortFieldKey = sortFieldKey ? sortFieldKey : ServerSourceConf.SORT_FIELD_KEY;\r\n    this.sortDirKey = sortDirKey ? sortDirKey : ServerSourceConf.SORT_DIR_KEY;\r\n    this.pagerPageKey = pagerPageKey ? pagerPageKey : ServerSourceConf.PAGER_PAGE_KEY;\r\n    this.pagerLimitKey = pagerLimitKey ? pagerLimitKey : ServerSourceConf.PAGER_LIMIT_KEY;\r\n    this.filterFieldKey = filterFieldKey ? filterFieldKey : ServerSourceConf.FILTER_FIELD_KEY;\r\n    this.totalKey = totalKey ? totalKey : ServerSourceConf.TOTAL_KEY;\r\n    this.dataKey = dataKey ? dataKey : ServerSourceConf.DATA_KEY;\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/~/ng2-smart-table/src/ng2-smart-table/lib/data-source/server/server-source.conf.ts","import { Http ,RequestOptionsArgs,URLSearchParams, Headers} from '@angular/http';\r\nimport { LocalDataSource } from '../local/local.data-source';\r\n//import { RequestOptionsArgs } from '@angular/http/src/interfaces';\r\n//import { URLSearchParams } from '@angular/http/src/url_search_params';\r\nimport { Observable } from 'rxjs';\r\nimport { ServerSourceConf } from './server-source.conf';\r\nimport { getDeepFromObject } from '../../helpers';\r\nimport { consumptionTableComponent } from '../../../../../../../pages/Inventory/components/consumption/consumptionTable.component';\r\n\r\nexport class ServerDataSource extends LocalDataSource {\r\n\r\n  protected conf: ServerSourceConf;\r\n\r\n  protected lastRequestCount: number = 0;\r\n\r\n  constructor(protected http: Http,conf: ServerSourceConf|{} = {}) {\r\n    super();\r\n    this.conf = new ServerSourceConf(conf);\r\n    if (!this.conf.endPoint) {\r\n      throw new Error('At least endPoint must be specified as a configuration of the server data source.');\r\n    }\r\n  }\r\n\r\n  count(): number {\r\n    return this.lastRequestCount;\r\n  }\r\n\r\n  getElements(): Promise<any> {\r\n    return this.requestElements().map(res => {\r\n      // console.log(\"response got form the server \" + JSON.stringify(res))\r\n      let body = JSON.parse(res._body) \r\n      //console.log(JSON.stringify(body))\r\n      this.lastRequestCount = body.totalCount;//this.extractTotalFromResponse(res);\r\n      this.data = this.extractDataFromResponse(res);\r\n\r\n      // console.log(\"from total count \" +  JSON.stringify(this.lastRequestCount))\r\n      return this.data;\r\n    }).toPromise();\r\n  }\r\n\r\n  /**\r\n   * Extracts array of data from server response\r\n   * @param res\r\n   * @returns {any}\r\n   */\r\n  protected extractDataFromResponse(res): Array<any> {\r\n    const rawData = res.json();\r\n    let data = !!this.conf.dataKey ? getDeepFromObject(rawData, this.conf.dataKey, []) : rawData;\r\n\r\n    if (data instanceof Array) {\r\n      return data;\r\n    }\r\n\r\n    throw new Error(`Data must be an array. Please check that data extracted from the server response by the key '${this.conf.dataKey}' exists and is array.`);\r\n  }\r\n\r\n  /**\r\n   * Extracts total rows count from the server response\r\n   * Looks for the count in the heders first, then in the response body\r\n   * @param res\r\n   * @returns {any}\r\n   */\r\n  protected extractTotalFromResponse(res): number {\r\n    // console.log(\"total key :\" + this.conf.totalKey)\r\n    // console.log(\"total key :\" + JSON.stringify(res))\r\n    if (res.headers.has(this.conf.totalKey)) {\r\n      return +res.headers.get(this.conf.totalKey);\r\n    } else {\r\n      const rawData = res.json();\r\n      return getDeepFromObject(rawData, this.conf.totalKey, 0)\r\n    }\r\n  }  \r\n \r\n  protected requestElements(): Observable<any> { \r\n    //console.log(\"hey pradeep i am here.\")\r\n    return this.http.get(this.conf.endPoint,this.createRequestOptions());\r\n  }\r\n\r\n  protected createRequestOptions(): RequestOptionsArgs {\r\n    let requestOptions: RequestOptionsArgs = {};\r\n\r\n    let token =  localStorage.getItem(\"TOKEN\")\r\n    // console.log(\"token at data table :\" + token? token.replace(/['\"]+/g, '') : '')\r\n    // console.log(\"token at data table :\" + token)\r\n    requestOptions.headers = new Headers()\r\n    //console.log(token);\r\n    requestOptions.headers.append('Authorization', token? token.replace(/['\"]+/g, '') : '');\r\n\r\n    requestOptions.search = new URLSearchParams();\r\n\r\n    requestOptions = this.addSortRequestOptions(requestOptions);\r\n    requestOptions = this.addFilterRequestOptions(requestOptions);\r\n\r\n\r\n    return this.addPagerRequestOptions(requestOptions);\r\n  }\r\n\r\n  protected addSortRequestOptions(requestOptions: RequestOptionsArgs): RequestOptionsArgs {\r\n    let searchParams: URLSearchParams = <URLSearchParams> requestOptions.search;\r\n\r\n    let sort = [];\r\n    if (this.sortConf) {\r\n      this.sortConf.forEach((fieldConf) => { \r\n        sort.push({ \r\n          \"Field\" : fieldConf.field,\r\n          \"Dir\" : fieldConf.direction.toUpperCase()\r\n        })\r\n        // searchParams.set(this.conf.sortFieldKey, fieldConf.field);\r\n        // searchParams.set(this.conf.sortDirKey, fieldConf.direction.toUpperCase());\r\n      });\r\n\r\n      if(sort.length) searchParams.set(\"sort\",  JSON.stringify(sort));\r\n    }\r\n\r\n    return requestOptions;\r\n  }\r\n\r\n  protected addFilterRequestOptions(requestOptions: RequestOptionsArgs): RequestOptionsArgs {\r\n    let searchParams: URLSearchParams = <URLSearchParams> requestOptions.search;\r\n    let filters = [];\r\n    if (this.filterConf.filters) {\r\n      this.filterConf.filters.forEach((fieldConf) => {\r\n        if (fieldConf['search']) {\r\n          filters.push({\"Field\" : fieldConf['field'], \"Value\": fieldConf['search']})\r\n          // searchParams.set(this.conf.filterFieldKey.replace('#field#', fieldConf['field']), fieldConf['search']);\r\n        }\r\n      });\r\n      if(filters.length) searchParams.set(\"filters\", JSON.stringify(filters)); \r\n    }\r\n\r\n    return requestOptions;\r\n  }\r\n\r\n  protected addPagerRequestOptions(requestOptions: RequestOptionsArgs): RequestOptionsArgs {\r\n    let searchParams: URLSearchParams = <URLSearchParams> requestOptions.search;\r\n\r\n    if (this.pagingConf && this.pagingConf['page'] && this.pagingConf['perPage']) {\r\n      searchParams.set(this.conf.pagerPageKey, this.pagingConf['page']);\r\n      searchParams.set(this.conf.pagerLimitKey, this.pagingConf['perPage']);\r\n    }\r\n\r\n    return requestOptions;\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/~/ng2-smart-table/src/ng2-smart-table/lib/data-source/server/server.data-source.ts","export * from './grid';\r\nexport * from './data-source/data-source';\r\nexport * from './data-source/local/local.data-source';\r\nexport * from './data-source/server/server.data-source'\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/~/ng2-smart-table/src/ng2-smart-table/lib/index.ts","import { Subscriber } from 'rxjs/Subscriber';\r\nimport { Http, Response, RequestOptions, Headers } from '@angular/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { ActivatedRoute, ActivatedRouteSnapshot } from '@angular/router';\r\nimport { AuthService } from '../../../../common/services/permission';\r\nimport { IDivision } from '../../../../common/interfaces';\r\nimport { AlternateUnit} from '../../../../common/interfaces/TrnMain';\r\nimport { Item,Product ,ItemRate,ProductType,KotCategory,Model,Brand,RateDiscount,TBarcode} from '../../../../common/interfaces';\r\nimport { Subject } from 'rxjs/subject'\r\nimport { GlobalState } from \"../../../../global.state\";\r\nimport { MasterRepo } from \"../../../../common/repositories/masterRepo.service\";\r\nimport { Observable } from \"rxjs/Observable\";\r\n\r\n@Injectable()\r\n\r\nexport class TreeViewAcService {\r\n    constructor(private http: Http, private activatedRoute: ActivatedRoute, private authService: AuthService,private state:GlobalState,private masterService:MasterRepo) {\r\n    }\r\n     private get apiUrl():string{\r\n        let url=this.state.getGlobalSetting(\"apiUrl\");\r\n        let apiUrl =\"\";\r\n        \r\n        if(!!url && url.length>0){apiUrl=url[0]};\r\n        return apiUrl\r\n    }\r\n    public selectAcdivisionList : any[] = [];\r\n    public selectAcdivisionObj : any=<any>{};\r\n    getParentWiseAccountList(ACID:string) {\r\n        this.selectAcdivisionList = [];\r\n        this.selectAcdivisionObj = {};\r\n    //   return this.http.get(this.apiUrl + '/getParentWiseAccount/'+ACID, this.getRequestOption()).flatMap(response => response.json() || []);\r\n      let res = { status: \"error\", result: \"\" };\r\n      let returnSubject: Subject<any> = new Subject();\r\n      this.http.get(this.apiUrl + '/getParentWiseAccount/' + ACID, this.getRequestOption()).subscribe(response => {\r\n          let data = response.json();\r\n          //console.log(\"CheckValue^^\",data);\r\n          if (data.status == 'ok') {\r\n              this.selectAcdivisionList = data.result2;\r\n              this.selectAcdivisionObj = data.result;\r\n              returnSubject.next(data);\r\n              returnSubject.unsubscribe();\r\n\r\n          }\r\n          else {\r\n              returnSubject.next(data)\r\n              returnSubject.unsubscribe();\r\n          }\r\n      }, error => {\r\n          res.status = 'error'; res.result = error;\r\n          returnSubject.next(res);\r\n          returnSubject.unsubscribe();\r\n      }\r\n      );\r\n      return returnSubject;\r\n    }\r\n    getAccDivisionMapping(ACID:string) {\r\n        let res = { status: \"error\", result: \"\" };\r\n        let returnSubject: Subject<any> = new Subject();\r\n        this.http.get(this.apiUrl + '/getParentWiseAccount/' + ACID, this.getRequestOption()).subscribe(response => {\r\n            let data = response.json();\r\n            \r\n            if (data.status == 'ok') {\r\n                \r\n                returnSubject.next(data);\r\n                returnSubject.unsubscribe();\r\n\r\n            }\r\n            else {\r\n                returnSubject.next(data)\r\n                returnSubject.unsubscribe();\r\n            }\r\n        }, error => {\r\n            res.status = 'error'; res.result = error;\r\n            returnSubject.next(res);\r\n            returnSubject.unsubscribe();\r\n        }\r\n        );\r\n        return returnSubject;\r\n    }\r\n\r\n\r\n    getAccountAutomationGSTRate(ACID:string,parent:string) {\r\n        return this.http.get(this.apiUrl + `/getAccountAutomationGSTRate?ACID=${ACID}&PARENT=${parent}`, this.getRequestOption()).map(response => response.json() || []);\r\n      }\r\n\r\n    getNewValues(mcode: string) {\r\n        let res = { status: \"error\", result: \"\" };\r\n        let returnSubject: Subject<any> = new Subject();\r\n        this.http.get(this.apiUrl + '/getNewValues/' + mcode, this.getRequestOption()).subscribe(response => {\r\n            let data = response.json();\r\n            if (data.status == 'ok') {\r\n                returnSubject.next(data);\r\n                returnSubject.unsubscribe();\r\n\r\n            }\r\n            else {\r\n                returnSubject.next(data)\r\n                returnSubject.unsubscribe();\r\n            }\r\n        }, error => {\r\n            res.status = 'error'; res.result = error;\r\n            returnSubject.next(res);\r\n            returnSubject.unsubscribe();\r\n        }\r\n        );\r\n        return returnSubject;\r\n    }\r\n// getAccount(ACID:string){\r\n//          let res={status:\"error\",result:\"\"};\r\n//         let returnSubject:Subject<any>=new Subject();\r\n//        this.http.get(this.apiUrl + '/getAllData/'+ACID, this.getRequestOption()).subscribe(response=>{\r\n//                 let data = response.json();\r\n//                 if(data.status == 'ok'){\r\n//                     returnSubject.next(data);\r\n//                     returnSubject.unsubscribe();\r\n\r\n//                 }\r\n//                 else{\r\n//                     returnSubject.next(data)\r\n//                     returnSubject.unsubscribe();\r\n//                 }\r\n//             },error =>{\r\n//                 res.status='error';res.result=error;\r\n//                 returnSubject.next(res);\r\n//                 returnSubject.unsubscribe();\r\n//             }\r\n//             );\r\n//             return returnSubject;\r\n//     }\r\n    getPartyList(mcode:string){\r\n         let res={status:\"error\",result:\"\"};\r\n        let returnSubject:Subject<any>=new Subject();\r\n       this.http.get(this.apiUrl + '/getPartyList/'+mcode, this.getRequestOption()).subscribe(response=>{\r\n                let data = response.json();\r\n                if(data.status == 'ok'){\r\n                    returnSubject.next(data);\r\n                    returnSubject.unsubscribe();\r\n\r\n                }\r\n                else{\r\n                    returnSubject.next(data)\r\n                    returnSubject.unsubscribe();\r\n                }\r\n            },error =>{\r\n                res.status='error';res.result=error;\r\n                returnSubject.next(res);\r\n                returnSubject.unsubscribe();\r\n            }\r\n            );\r\n            return returnSubject;\r\n    }\r\n    savePartyList(mode:string,prodObj:Product,RGLIST:ItemRate[],AlternateUnits:AlternateUnit[],PBarCodeCollection:TBarcode[]){\r\n        let res = { status: \"error\", result: \"\" }\r\n        let returnSubject:Subject<any> =new Subject();\r\n        let opt=this.getRequestOption();\r\n        let hd:Headers = new Headers({'Content-Type':'application/json'});\r\n        let op:RequestOptions = new RequestOptions()\r\n        let bodyData ={mode:mode,data:{product:prodObj,rglist:RGLIST,alternateunits:AlternateUnits,pbarcodes:PBarCodeCollection}};\r\n       ////console.log(\"product json\");\r\n      var  data = JSON.stringify(bodyData, undefined, 2);\r\n         //console.log(data);\r\n        this.http.post(this.apiUrl + \"/savePartyList\",bodyData,this.getRequestOption())\r\n            .subscribe(data => {\r\n                let retData = data.json();\r\n                //console.log(retData);\r\n                if (retData.status == \"ok\") {\r\n                    res.status = \"ok\";\r\n                    res.result = retData.result\r\n                    returnSubject.next( res);\r\n                    returnSubject.unsubscribe();\r\n                }\r\n                else {\r\n                    res.status = \"error1\"; res.result = retData.result;\r\n                    //console.log(res);\r\n                    returnSubject.next( res);\r\n                    returnSubject.unsubscribe();\r\n                }\r\n            },\r\n            error => {\r\n                res.status = \"error2\", res.result = error;\r\n                //console.log(res);\r\n                returnSubject.next(res);\r\n                returnSubject.unsubscribe();\r\n            }\r\n            );\r\n            return returnSubject;\r\n\r\n    }\r\n    private getRequestOption() {\r\n        let headers: Headers = new Headers({ 'Content-type': 'application/json', 'Authorization': this.authService.getAuth().token })\r\n        //console.log({ headers: headers });\r\n        return new RequestOptions({ headers: headers });\r\n    }\r\n   \r\n    public getParentGroups(acid:string){\r\n        //console.log({acid:acid})\r\n        return new Observable((observer:Subscriber<GroupAccounts[]>)=>{\r\n            this.http.get(this.masterService.apiUrl + '/getParents?acid=' + acid,this.masterService.getRequestOption())\r\n            .map(data=>{\r\n                //console.log({parentGrop:data})\r\n                return data.json()\r\n            })\r\n            .subscribe(res=>{\r\n                if(res.status =='ok')\r\n               {\r\n                    observer.next(res.result);\r\n               }\r\n            },error=> {\r\n                this.masterService.resolveError(error,'getParents');\r\n                observer.complete();\r\n            },\r\n            ()=>{\r\n                observer.complete();\r\n            }\r\n            )\r\n        }) \r\n            \r\n\r\n    }\r\n\r\n    public getChildrenGroups(acid:string){\r\n        //console.log({getChildrenAcid:acid,url:this.masterService.apiUrl + '/getChildren?' + acid});\r\n        return new Observable((observer:Subscriber<GroupAccounts[]>)=>{\r\n            this.http.get(this.masterService.apiUrl + '/getChildren?acid=' + acid,this.masterService.getRequestOption())\r\n            .map(data=>data.json())\r\n            .subscribe(res=>{\r\n                //console.log({getChildrenResult:res});\r\n               observer.next(res.result);\r\n            },error=> {\r\n                this.masterService.resolveError(error,'getChildren');\r\n                observer.complete();\r\n            },\r\n            ()=>{\r\n                observer.complete();\r\n            }\r\n            )\r\n        }) \r\n    }\r\n\r\n    public getTopGroups(){\r\n        return new Observable((observer:Subscriber<GroupAccounts[]>)=>{\r\n            this.http.get(this.masterService.apiUrl + '/getTopGroups',this.masterService.getRequestOption())\r\n            .map(data=>data.json())\r\n            .subscribe(res=>{\r\n               observer.next(<GroupAccounts[]>res.result);\r\n            },error=> {\r\n                this.masterService.resolveError(error,'getTopGroups');\r\n                observer.complete();\r\n            },\r\n            ()=>{\r\n                observer.complete();\r\n            }\r\n            )\r\n        }) \r\n    }\r\n}\r\n\r\nexport interface GroupAccounts{\r\n      ACID :string;\r\n      ACNAME:string;\r\n      PARENT :string;\r\n      TYPE :string;\r\n      ACTYPE :string;\r\n      MAPID :string;\r\n      MCAT :string;\r\n      HASSUBLEDGER :number;\r\n      CHILDLIST :any[];\r\n      CACID:string;\r\n      SELECTEDGROUP:any;\r\n      LIST:Observable<any[]>;\r\n      SELECTEDGROUPAC:GroupAccounts;\r\n}\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/pages/masters/components/account-ledger/accountLedger.service.ts","import { MasterRepo } from '../../../../common/repositories/masterRepo.service';\r\nimport { Subscriber } from 'rxjs/Subscriber';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { Http, Response, RequestOptions, Headers } from '@angular/http';\r\nimport { Injectable, ViewChild } from '@angular/core';\r\nimport { ActivatedRoute, ActivatedRouteSnapshot } from '@angular/router';\r\nimport { AuthService } from '../../../../common/services/permission';\r\n// import { IDivision } from '../../../../common/interfaces';\r\n// import { AlternateUnit} from '../../../../common/interfaces/TrnMain';\r\nimport { AlternateUnit, IDivision, Item, Product, ItemRate, ProductType, KotCategory, Model, Brand, RateDiscount, TBarcode } from '../../../../common/interfaces';\r\nimport { Subject } from 'rxjs/subject'\r\nimport { GlobalState } from \"../../../../global.state\";\r\nimport { TreeComponent, IActionMapping, TREE_ACTIONS, KEYS } from 'angular-tree-component';\r\nimport { Subscription } from 'rxjs';\r\nimport { ContextMenuComponent } from 'ngx-contextmenu';\r\n\r\n\r\nconst actionMapping: IActionMapping = {\r\n    mouse: {\r\n      contextMenu: (tree, node, $event) => {\r\n        $event.preventDefault();\r\n        alert(`context menu for ${node.data.ACNAME}`);\r\n      },\r\n      dblClick: (tree, node, $event) => {\r\n        if (node.hasChildren) TREE_ACTIONS.TOGGLE_EXPANDED(tree, node, $event);\r\n      },\r\n      click: (tree, node, $event) => {\r\n        $event.shiftKey\r\n          ? TREE_ACTIONS.TOGGLE_SELECTED_MULTI(tree, node, $event)\r\n          : TREE_ACTIONS.TOGGLE_SELECTED(tree, node, $event)\r\n      }\r\n    },\r\n    keys: {\r\n      [KEYS.ENTER]: (tree, node, $event) => node.setActiveAndVisible()\r\n      //[KEYS.ENTER]: (tree, node, $event) =>  alert(`This is ${node.data.name}`)\r\n    }\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n\r\n@Injectable()\r\nexport class TreeViewAccService {\r\n    private _treeEnable: Boolean = true;\r\n//   mainGroupList: any = [];\r\n//   subGroupAList: any = [];\r\n//   subGroupBList: any = [];\r\n// //   subGroupCList: any = [];\r\n//   groupSelectObj: AccountGroup = <AccountGroup>{};\r\n//   modeTitle: string;/\r\n    public get treeEnable(): Boolean { return this._treeEnable; } \r\n    public set treeEnable(value: Boolean) { this._treeEnable = value; }\r\n\r\n    @ViewChild(ContextMenuComponent) public contextMenu: ContextMenuComponent;\r\n    ParentInfo:any=<any>{};\r\n\r\n    public nodes: any[] = [];\r\n    @ViewChild(TreeComponent)\r\n    public tree: TreeComponent;\r\n    busy: Subscription;\r\n    subTitle:string;\r\n    isGroup : boolean;\r\n    addGroupSubject: Subject<any> = new Subject<any>();\r\n   // addGroup$: Observable<any> = this.addGroupSubject.asObservable();\r\n    loadTableListSubject : Subject<any>=new Subject<any>();\r\n    loadTableList$ : Observable<any> = this.loadTableListSubject.asObservable();\r\n    partyList: any = [];\r\n    sortAccount:any;\r\n\r\n    constructor(private http: Http, private activatedRoute: ActivatedRoute, private authService: AuthService, private state: GlobalState, private masterService: MasterRepo) {\r\n    \r\n        ////console.log(\"tree\",this.tree);\r\n        this.isGroup = false;\r\n    }\r\n\r\n\r\n    private get apiUrl(): string {\r\n        let url = this.state.getGlobalSetting(\"apiUrl\");\r\n        let apiUrl = \"\";\r\n\r\n        if (!!url && url.length > 0) { apiUrl = url[0] };\r\n        return apiUrl\r\n    }\r\n    getParentWisePartyList(ACID: string) {\r\n        return this.http.get(this.apiUrl + '/getParentWiseAccount/' + ACID, this.getRequestOption()).flatMap(response => response.json() || []);\r\n    }\r\n\r\n\r\n    getParentWisePartyPgwsList(ACID: string) {\r\n        return this.http.get(this.apiUrl + '/getParentWiseAccount/' + ACID, this.getRequestOption()).flatMap(response => response.json() || []);\r\n    }\r\n\r\n    getNewValues(mcode: string) {\r\n        let res = { status: \"error\", result: \"\" };\r\n        let returnSubject: Subject<any> = new Subject();\r\n        this.http.get(this.apiUrl + '/getNewValues/' + mcode, this.getRequestOption()).subscribe(response => {\r\n            let data = response.json();\r\n            if (data.status == 'ok') {\r\n                returnSubject.next(data);\r\n                returnSubject.unsubscribe();\r\n\r\n            }\r\n            else {\r\n                returnSubject.next(data)\r\n                returnSubject.unsubscribe();\r\n            }\r\n        }, error => {\r\n            res.status = 'error'; res.result = error;\r\n            returnSubject.next(res);\r\n            returnSubject.unsubscribe();\r\n        }\r\n        );\r\n        return returnSubject;\r\n    }\r\n\r\n    getPartyList(mcode: string) {\r\n        let res = { status: \"error\", result: \"\" };\r\n        let returnSubject: Subject<any> = new Subject();\r\n        this.http.get(this.apiUrl + '/getPartyList/' + mcode, this.getRequestOption()).subscribe(response => {\r\n            let data = response.json();\r\n            if (data.status == 'ok') {\r\n                returnSubject.next(data);\r\n                returnSubject.unsubscribe();\r\n\r\n            }\r\n            else {\r\n                returnSubject.next(data)\r\n                returnSubject.unsubscribe();\r\n            }\r\n        }, error => {\r\n            res.status = 'error'; res.result = error;\r\n            returnSubject.next(res);\r\n            returnSubject.unsubscribe();\r\n        }\r\n        );\r\n        return returnSubject;\r\n    }\r\n    getAllParty(ACID: string) {\r\n        let res = { status: \"error\", result: \"\" };\r\n        let returnSubject: Subject<any> = new Subject();\r\n        this.http.get(this.apiUrl + '/getAllData/' + ACID, this.getRequestOption()).subscribe(response => {\r\n            let data = response.json();\r\n            if (data.status == 'ok') {\r\n                returnSubject.next(data);\r\n                returnSubject.unsubscribe();\r\n\r\n            }\r\n            else {\r\n                returnSubject.next(data)\r\n                returnSubject.unsubscribe();\r\n            }\r\n        }, error => {\r\n            res.status = 'error'; res.result = error;\r\n            returnSubject.next(res);\r\n            returnSubject.unsubscribe();\r\n        }\r\n        );\r\n        return returnSubject;\r\n    }\r\n    savePartyList(mode: string, prodObj: Product, RGLIST: ItemRate[], AlternateUnits: AlternateUnit[], PBarCodeCollection: TBarcode[]) {\r\n        let res = { status: \"error\", result: \"\" }\r\n        let returnSubject: Subject<any> = new Subject();\r\n        let opt = this.getRequestOption();\r\n        let hd: Headers = new Headers({ 'Content-Type': 'application/json' });\r\n        let op: RequestOptions = new RequestOptions()\r\n        let bodyData = { mode: mode, data: { product: prodObj, rglist: RGLIST, alternateunits: AlternateUnits, pbarcodes: PBarCodeCollection } };\r\n        ////console.log(\"product json\");\r\n        var data = JSON.stringify(bodyData, undefined, 2);\r\n        //console.log(data);\r\n        this.http.post(this.apiUrl + \"/savePartyList\", bodyData, this.getRequestOption())\r\n            .subscribe(data => {\r\n                let retData = data.json();\r\n                //console.log(retData);\r\n                if (retData.status == \"ok\") {\r\n                    res.status = \"ok\";\r\n                    res.result = retData.result\r\n                    returnSubject.next(res);\r\n                    returnSubject.unsubscribe();\r\n                }\r\n                else {\r\n                    res.status = \"error1\"; res.result = retData.result;\r\n                    //console.log(res);\r\n                    returnSubject.next(res);\r\n                    returnSubject.unsubscribe();\r\n                }\r\n            },\r\n            error => {\r\n                res.status = \"error2\", res.result = error;\r\n                //console.log(res);\r\n                returnSubject.next(res);\r\n                returnSubject.unsubscribe();\r\n            }\r\n            );\r\n        return returnSubject;\r\n\r\n    }\r\n    private getRequestOption() {\r\n        let headers: Headers = new Headers({ 'Content-type': 'application/json', 'Authorization': this.authService.getAuth().token })\r\n        //console.log({ headers: headers });\r\n        return new RequestOptions({ headers: headers });\r\n    }\r\n\r\n    public getParentGroups(acid: string) {\r\n        //console.log({ acid: acid })\r\n        return new Observable((observer: Subscriber<GroupParty[]>) => {\r\n            this.http.get(this.masterService.apiUrl + '/getParents?acid=' + acid, this.masterService.getRequestOption())\r\n                .map(data => {\r\n                    //console.log({ parentGrop: data })\r\n                    return data.json()\r\n                })\r\n                .subscribe(res => {\r\n                    if (res.status == 'ok') {\r\n                        observer.next(res.result);\r\n                    }\r\n                }, error => {\r\n                    this.masterService.resolveError(error, 'getParents');\r\n                    observer.complete();\r\n                },\r\n                () => {\r\n                    observer.complete();\r\n                }\r\n                )\r\n        })\r\n\r\n\r\n    }\r\n\r\n    public getChildrenGroups(acid: string) {\r\n        //console.log({ getChildrenAcid: acid, url: this.masterService.apiUrl + '/getChildren?' + acid });\r\n        return new Observable((observer: Subscriber<GroupParty[]>) => {\r\n            this.http.get(this.masterService.apiUrl + '/getChildren?acid=' + acid, this.masterService.getRequestOption())\r\n                .map(data => data.json())\r\n                .subscribe(res => {\r\n                    //console.log({ getChildrenResult: res });\r\n                    observer.next(res.result);\r\n                }, error => {\r\n                    this.masterService.resolveError(error, 'getChildren');\r\n                    observer.complete();\r\n                },\r\n                () => {\r\n                    observer.complete();\r\n                }\r\n                )\r\n        })\r\n    }\r\n\r\n    public getTopGroups() {\r\n        return new Observable((observer: Subscriber<GroupParty[]>) => {\r\n            this.http.get(this.masterService.apiUrl + '/getTopPartyGroups', this.masterService.getRequestOption())\r\n                .map(data => data.json())\r\n                .subscribe(res => {\r\n                    observer.next(<GroupParty[]>res.result);\r\n                }, error => {\r\n                    this.masterService.resolveError(error, 'getTopGroups');\r\n                    observer.complete();\r\n                },\r\n                () => {\r\n                    observer.complete();\r\n                }\r\n                )\r\n        })\r\n    }\r\n    getHierachy() {\r\n        let res = { status: \"error\", result: \"\" };\r\n        let returnSubject: Subject<any> = new Subject();\r\n        this.http.get(this.apiUrl + '/getAllHierachy', this.getRequestOption()).subscribe(response => {\r\n            let data = response.json();\r\n            if (data.status == 'ok') {\r\n                returnSubject.next(data);\r\n                returnSubject.unsubscribe();\r\n\r\n            }\r\n            else {\r\n                returnSubject.next(data)\r\n                returnSubject.unsubscribe();\r\n            }\r\n        }, error => {\r\n            res.status = 'error'; res.result = error;\r\n            returnSubject.next(res);\r\n            returnSubject.unsubscribe();\r\n        }\r\n        );\r\n        return returnSubject;\r\n    }\r\n\r\n\r\n    Refresh() {\r\n        this.masterService._accountTree = [];\r\n        this.masterService.getAccountTreeObservable = null;\r\n        this.busy = this.masterService.getacListTree().map(x => { return x })\r\n          .subscribe(res => {\r\n            this.nodes = res;\r\n            if (this.tree != null) {\r\n              this.tree.treeModel.update();\r\n            }\r\n          }, error => {\r\n            var err = this.masterService.resolveError(error, \"partyledger - partyledger\");\r\n            if (err) { alert(err.json()); }\r\n          }\r\n          );\r\n      }\r\n    \r\n      getMainGroupList(){\r\n        let res = {status: 'error', result: \"\"};\r\n        let returnSubject: Subject<any> = new Subject();\r\n        this.http.get(this.apiUrl+'/getMainGroupList', this.getRequestOption())\r\n        .subscribe( response =>{\r\n            let data = response.json();\r\n            if(data.status == 'ok'){\r\n                returnSubject.next(data);\r\n                returnSubject.unsubscribe();\r\n            }else{\r\n                returnSubject.next(data)\r\n                returnSubject.unsubscribe();\r\n            }\r\n        }, error =>{\r\n            res.status = 'error'; res.result = error;\r\n            returnSubject.next(res);\r\n            returnSubject.unsubscribe();\r\n        });\r\n        return returnSubject;\r\n      }\r\n\r\n      public getSubGroupList(groupID){\r\n    let res = { status: \"error\", result: \"\" };\r\n    let returnSubject: Subject<any> = new Subject();\r\n    this.http.get(this.apiUrl+'/getSubGroupList?SELECTEDGROUPID='+groupID, this.getRequestOption())\r\n        .subscribe(response => {\r\n            let data = response.json();\r\n            if (data.status == 'ok') {\r\n                returnSubject.next(data);\r\n                returnSubject.unsubscribe();\r\n            }\r\n            else {\r\n                returnSubject.next(data)\r\n                returnSubject.unsubscribe();\r\n            }\r\n        }, error => {\r\n            res.status = 'error2'; res.result = error;\r\n            returnSubject.next(res);\r\n            returnSubject.unsubscribe();\r\n        }\r\n        );\r\n    return returnSubject;\r\n  }\r\n\r\n  \r\n\r\n  public getAccountHeirarchy(groupID){\r\n    let res = {status:\"error\",result:\"\"};\r\n    let returnSubject: Subject<any> = new Subject();\r\n    this.http.get(this.apiUrl+'/getAccountHeirarchy?GROUPID='+groupID, this.getRequestOption())\r\n    .subscribe(response =>{\r\n      let data = response.json();\r\n      if(data.status=='ok'){\r\n        returnSubject.next(data);\r\n        returnSubject.unsubscribe();\r\n      }\r\n      else{\r\n        returnSubject.next(data)\r\n        returnSubject.unsubscribe();\r\n      }\r\n    }, error=>{\r\n      res.status = 'error2'; res.result = error;\r\n      returnSubject.next(res);\r\n      returnSubject.unsubscribe();\r\n    });\r\n    return returnSubject;\r\n  }\r\n\r\n  getSelectNodeObj(groupID){\r\n    let res = {status:\"error\",result:\"\"};\r\n    let returnSubject: Subject<any> = new Subject();\r\n    this.http.get(this.apiUrl+'/getAccountLedgerDetails?GROUPID='+groupID, this.getRequestOption())\r\n    .subscribe(response =>{\r\n      let data = response.json();\r\n      if(data.status=='ok'){\r\n        returnSubject.next(data);\r\n        returnSubject.unsubscribe();\r\n      }\r\n      else{\r\n        returnSubject.next(data)\r\n        returnSubject.unsubscribe();\r\n      }\r\n    }, error=>{\r\n      res.status = 'error2'; res.result = error;\r\n      returnSubject.next(res);\r\n      returnSubject.unsubscribe();\r\n    });\r\n    return returnSubject;\r\n  }\r\n\r\n      public contextMenuActions = [\r\n        {\r\n          html: (item) => `Edit`,\r\n          tag: 'edit',\r\n          enabled: (item) => true,\r\n          visible: (item) => true,\r\n        },\r\n        {\r\n          divider: true,\r\n          visible: true,\r\n        },\r\n        {\r\n          html: (item) => `Delete`,\r\n          tag: 'delete',\r\n          enabled: (item) => true,\r\n          visible: (item) => true,\r\n        },\r\n      ];\r\n}\r\n\r\nexport interface GroupParty {\r\n    ACID: string;\r\n    ACNAME: string;\r\n    PARENT: string;\r\n    TYPE: string;\r\n    PType: string;\r\n    MAPID: string;\r\n    CHILDLIST: any[];\r\n    SELECTEDGROUP: any;\r\n    LIST: Observable<any[]>;\r\n    SELECTEDGROUPAC: GroupParty;\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/pages/masters/components/Account-Ledger-New/AccLedger.service.ts","import { NgModule } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\r\nimport { Ng2SmartTableModule } from \"../../../../node_modules/ng2-smart-table/src/ng2-smart-table.module\";\r\nimport { NgaModule } from \"../../../../theme/nga.module\";\r\nimport { AledgerRoutingModule } from \"./aledger.routing\";\r\nimport { ALedgerComponent } from \"./ALedger.component\";\r\nimport { ALedgerTableComponent } from \"./ALedgerTable.component\";\r\nimport { PendingChangesGuard } from \"../../../../common/services/guard/can-navigate.guard\";\r\nimport { AccountGroupPopupGridModule } from \"../../../../common/popupLists/AGroupPopup/account-group-popup-grid.module\";\r\nimport { PLedgerservice } from \"../PLedger/PLedger.service\";\r\nimport { PartyLedgerModule } from \"../PLedger/pledger.module\";\r\nimport { ModalModule } from \"ng2-bootstrap\";\r\nimport { BankModule } from \"../Bank/bank.module\";\r\nimport { AccountLedgerComponent } from \"../account-ledger/accountLedgerTable.component\";\r\nimport { AddLedgerComponent } from \"../account-ledger/addLedger.component\";\r\nimport { addGrpComponent } from \"../account-ledger/addSubgrps.component\";\r\nimport { LedgComponent } from \"../account-ledger/addLedg.component\";\r\nimport {TreeModule} from \"angular-tree-component\";\r\nimport { ContextMenuModule } from \"ngx-contextmenu\";\r\nimport { PartyModule } from \"../party-ledger/addparty.module\";\r\nimport { AccNewModule } from \"../Account-Ledger-New/addAcc.module\";\r\nimport { GenericPopupGridModule } from \"../../../../common/popupLists/generic-grid/generic-popup-grid.module\";\r\n\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    AledgerRoutingModule,\r\n    NgaModule,\r\n    Ng2SmartTableModule,\r\n    AccountGroupPopupGridModule.forRoot(),\r\n    PartyLedgerModule,\r\n    ModalModule.forRoot(),\r\n    BankModule,TreeModule,ContextMenuModule,\r\n    PartyModule,\r\n    AccNewModule,\r\n    GenericPopupGridModule.forRoot(),\r\n  ],\r\n  declarations: [\r\n    ALedgerComponent,\r\n    ALedgerTableComponent,AccountLedgerComponent,AddLedgerComponent,addGrpComponent,LedgComponent\r\n  ],\r\n  providers:[PendingChangesGuard]\r\n})\r\nexport class AledgerModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/pages/masters/components/ALedger/aledger.module.ts","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n    name: 'filter',\r\n    pure: false\r\n})\r\nexport class FilterPipe implements PipeTransform {\r\n    transform(items: any[], key, term): any { \r\n        ////console.log(items); \r\n        if(key == null || key == undefined || key == \"\") return items;\r\n        if(term == null || term == undefined || term == \"\") return items;\r\n        return term \r\n            ? items.filter(item => \r\n                item[key] != undefined \r\n                && item[key] != null \r\n                && item[key].toLowerCase().indexOf(term.toLowerCase()) !== -1)\r\n            : items;\r\n    }\r\n}\r\n\r\n@Pipe({\r\n    name: 'sortBy'\r\n})\r\nexport class SortByPipe implements PipeTransform {\r\n    transform(items: any[], sortedBy: string): any {\r\n        ////console.log('sortedBy', sortedBy);\r\n        return items.sort((a, b) => {return b[sortedBy] - a[sortedBy]});\r\n    }\r\n} \r\n\r\n@Pipe({name: 'keys'})\r\nexport class KeysPipe implements PipeTransform {\r\n  transform(value, args:string[]) : any {\r\n    let keys = [];\r\n    for (let key in value) {\r\n      keys.push(key);\r\n    }\r\n    return keys;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/theme/directives/pipes/pipes.ts","module.exports = \"<style>\\r\\n  label {\\r\\n    width: 150px;\\r\\n    font-size: 15px;\\r\\n    color: #403c3c;\\r\\n  }\\r\\n\\r\\n  input {\\r\\n    height: 30px;\\r\\n  }\\r\\n</style>\\r\\n<!-- begin form here -->\\r\\n<form [formGroup]=\\\"form\\\">\\r\\n  <div class=\\\"sticky-top\\\">\\r\\n    <div class=\\\"row clearfix\\\" style=\\\" padding: 0px 20px;\\\">\\r\\n      <div class=\\\"col-md-6\\\">\\r\\n        <h3 class=\\\"page-title\\\">{{ Title }}</h3>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-6\\\" style=\\\"float: right;\\\">\\r\\n        <div class=\\\"col-md-6\\\" style=\\\"display: contents;\\\">\\r\\n          <button style=\\\"float:right\\\" type=\\\"button\\\" (click)=\\\"cancel()\\\" title=\\\"Cancel\\\" class=\\\"btn btn-info\\\">\\r\\n            Back\\r\\n          </button>\\r\\n        </div>\\r\\n        <button style=\\\"float:right;margin-right:10px\\\" type=\\\"button\\\" (click)=\\\"SumbitSave()\\\" title=\\\"onSave\\\"\\r\\n          class=\\\"btn btn-info\\\" [disabled]=\\\"!this.parentGroup\\\" *ngIf=\\\"grp == 'G'\\\">\\r\\n          Save\\r\\n        </button>\\r\\n        <button style=\\\"float:right;margin-right:10px\\\" type=\\\"button\\\" [disabled]=\\\"!form.valid\\\"  (click)=\\\"SumbitSave()\\\" title=\\\"onSave\\\"\\r\\n          class=\\\"btn btn-info\\\">\\r\\n          Save\\r\\n        </button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"main-container\\\" style=\\\"padding-top : 10px; margin-bottom: 0px\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-12\\\">\\r\\n        <div class=\\\"tabbable\\\" id=\\\"warehouse-tabs\\\">\\r\\n          <ul class=\\\"nav nav-tabs\\\">\\r\\n            <li class=\\\"nav-item\\\">\\r\\n              <a class=\\\"nav-link active\\\" href=\\\"#general-info4\\\" data-toggle=\\\"tab\\\">General Info</a>\\r\\n            </li>\\r\\n            <li class=\\\"nav-item\\\">\\r\\n              <a class=\\\"nav-link\\\" href=\\\"#contact-details\\\" data-toggle=\\\"tab\\\">Contact Details</a>\\r\\n            </li>\\r\\n            <li class=\\\"nav-item\\\">\\r\\n              <a class=\\\"nav-link\\\" href=\\\"#gst\\\" data-toggle=\\\"tab\\\">GST</a>\\r\\n            </li>\\r\\n            <li class=\\\"nav-item\\\">\\r\\n              <a class=\\\"nav-link\\\" href=\\\"#other\\\" data-toggle=\\\"tab\\\">Other</a>\\r\\n            </li>\\r\\n            <!-- <li class=\\\"nav-item\\\">\\r\\n              <a class=\\\"nav-link\\\" href=\\\"#route\\\" data-toggle=\\\"tab\\\">Route</a>\\r\\n            </li> -->\\r\\n          </ul>\\r\\n          <div class=\\\"tab-content\\\">\\r\\n            <div class=\\\"tab-pane active\\\" id=\\\"general-info4\\\">\\r\\n              <!-- General Info -->\\r\\n              <div class=\\\"form-group row\\\">\\r\\n                <div class=\\\"col-sm-12\\\">\\r\\n                  \\r\\n                  <div *ngIf='HideACNAME==false' class=\\\"form-group row col-sm-6\\\">\\r\\n                    <label class=\\\"col-sm-2 form-control-label\\\">{{ formObj.Name }}<a style=\\\"color: red\\\">*</a>:</label>\\r\\n                    <div class=\\\"col-sm-6\\\">\\r\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"ACNAME\\\" placeholder=\\\"Name\\\" />\\r\\n                      <div *ngIf=\\\"\\r\\n                          !form.controls['ACNAME'].valid &&\\r\\n                          form.controls['ACNAME']?.touched\\r\\n                        \\\" class=\\\"text-danger\\\">\\r\\n                        <span *ngIf=\\\"form.get('ACNAME').hasError('required')\\\">\\r\\n                          Name is required.\\r\\n                        </span>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <div *ngIf=\\\"isGroup == 0\\\">\\r\\n                    <div *ngIf=\\\"PType == 'V'\\\" class=\\\"form-group row col-sm-6\\\">\\r\\n                      <label class=\\\"col-sm-2 form-control-label\\\">Precise Name:</label>\\r\\n                      <div class=\\\"col-sm-6\\\">\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"SHORTNAME\\\" placeholder=\\\"Short Name\\\" />\\r\\n                      </div>\\r\\n                    </div>\\r\\n                    <div *ngIf=\\\"PType == 'C' && fromTree != 1 \\\" class=\\\"form-group row col-sm-6\\\">\\r\\n                      <label class=\\\"col-sm-2 form-control-label\\\">Customer ID<a style=\\\"color: red\\\">*</a> :</label>\\r\\n                      <div class=\\\"col-sm-6\\\">\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"CUSTOMERID\\\" placeholder=\\\"SAP-CODE\\\" />\\r\\n                      </div>\\r\\n                    </div>\\r\\n                    <div *ngIf=\\\"PType == 'C' && fromTree != 1 \\\" class=\\\"form-group row col-sm-6\\\">\\r\\n                      <label class=\\\"col-sm-2 form-control-label\\\">Category:</label>\\r\\n                      <div class=\\\"col-sm-6\\\">\\r\\n                        <select class=\\\"form-control\\\" [(ngModel)]=\\\"geo\\\" [ngModelOptions]=\\\"{standalone:true}\\\"\\r\\n                          style=\\\"height:30px;padding-bottom: 0px;\\\">\\r\\n                          <option>None</option>\\r\\n                          <option *ngFor=\\\"let i of GeoList\\\" value=\\\"{{i.OrgTypeCode}}\\\">{{\\r\\n                            i.OrgTypeName\\r\\n                          }}</option>\\r\\n                        </select>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                    <div *ngIf=\\\"PType == 'V'\\\" class=\\\"form-group row col-sm-6\\\">\\r\\n                      <label class=\\\"col-sm-2 form-control-label\\\">Currency :</label>\\r\\n                      <div class=\\\"col-sm-6\\\">\\r\\n                        <select class=\\\"form-control\\\" formControlName=\\\"Currency\\\"\\r\\n                          style=\\\"height:30px;padding-bottom: 0px;\\\">\\r\\n                          <option value=\\\"INDIAN RUPEE\\\">INDIAN RUPEE</option>\\r\\n                          <option value=\\\"USD\\\">USD</option>\\r\\n                        </select>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group row col-sm-6\\\">\\r\\n                      <label class=\\\"col-sm-2 form-control-label\\\">{{ formObj.PMode }}\\r\\n                      </label>\\r\\n                      <div class=\\\"col-sm-6\\\">\\r\\n                        <select class=\\\"form-control\\\" formControlName=\\\"PMODE\\\" style=\\\"height:30px;padding-bottom: 0px;\\\"\\r\\n                          (change)=\\\"ChangePMODE($event.target.value)\\\">\\r\\n                          <option value=\\\"cash\\\">Cash</option>\\r\\n                          <option value=\\\"credit\\\">Credit</option>\\r\\n                          <option value=\\\"cashandcredit\\\">Both Cash and Credit</option>\\r\\n                        </select>\\r\\n                      </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group row col-sm-6\\\">\\r\\n                      <label class=\\\"col-sm-2 form-control-label\\\">Credit Limit:\\r\\n                      </label>\\r\\n                      <div class=\\\"col-sm-6\\\">\\r\\n                        <input [style.background-color]=\\\"CreditDisabled()\\\"\\r\\n                          [readOnly]=\\\"CrDisabled == 'disabled' ? true : false\\\" type=\\\"number\\\" class=\\\"form-control\\\"\\r\\n                          formControlName=\\\"CRLIMIT\\\" placeholder=\\\"CRLIMIT\\\" />\\r\\n                      </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group row col-sm-6\\\">\\r\\n                      <label class=\\\"col-sm-2 form-control-label\\\">Credit Days:\\r\\n                      </label>\\r\\n                      <div class=\\\"col-sm-6\\\">\\r\\n                        <input [style.background-color]=\\\"CreditDisabled()\\\"\\r\\n                          [readOnly]=\\\"CrDisabled == 'disabled' ? true : false\\\" type=\\\"number\\\" class=\\\"form-control\\\"\\r\\n                          formControlName=\\\"CRPERIOD\\\" placeholder=\\\"CRPERIOD\\\" />\\r\\n                      </div>\\r\\n                    </div>\\r\\n\\r\\n                    <!-- <div *ngIf=\\\"PType == 'V'\\\" class=\\\"form-group row col-sm-6\\\">\\r\\n                      <label class=\\\"col-sm-2 form-control-label\\\">Credit Balance:\\r\\n                      </label>\\r\\n                      <div class=\\\"col-sm-6\\\">\\r\\n                        <input type=\\\"number\\\" class=\\\"form-control\\\" formControlName=\\\"CBALANCE\\\" placeholder=\\\"CRPERIOD\\\" />\\r\\n                      </div>\\r\\n                    </div> -->\\r\\n\\r\\n                    <div class=\\\"form-group row col-sm-6\\\">\\r\\n                      <label class=\\\"col-sm-2 form-control-label\\\">\\r\\n                        {{ formObj.PSType }} <a style=\\\"color: red\\\">*</a></label>\\r\\n                      <div class=\\\"col-sm-6\\\">\\r\\n                        <select class=\\\"form-control\\\" formControlName=\\\"PSTYPE\\\" style=\\\"height:30px;padding-bottom: 0px;\\\">\\r\\n                          <option value=\\\"local\\\">Local</option>\\r\\n                          <option value=\\\"interstate\\\">Interstate</option>\\r\\n                        </select>\\r\\n                      </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div *ngIf=\\\"PType == 'V'\\\" class=\\\"form-group row col-sm-6\\\">\\r\\n                      <label class=\\\"col-sm-2 form-control-label\\\">Branch:</label>\\r\\n                      <div class=\\\"col-sm-6\\\">\\r\\n                        <select class=\\\"form-control\\\" formControlName=\\\"DIV\\\" style=\\\"height:30px;padding-bottom: 0px;\\\">\\r\\n                          <option *ngFor=\\\"let i of BranchList\\\" value=\\\"{{ i.INITIAL }}\\\">{{ i.NAME }}</option>\\r\\n                        </select>\\r\\n                      </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group row col-sm-6\\\">\\r\\n                      <label class=\\\"col-sm-2 form-control-label\\\">GST Type <a style=\\\"color: red\\\">*</a></label>\\r\\n                      <div class=\\\"col-sm-6\\\">\\r\\n                        <select class=\\\"form-control\\\" formControlName=\\\"GSTTYPE\\\" style=\\\"height:30px;padding-bottom: 0px;\\\">\\r\\n                          <option value=\\\"Regular\\\">Regular</option>\\r\\n                          <option value=\\\"Composite\\\">Composite</option>\\r\\n                          <option value=\\\"Unregistered\\\">Unregistered</option>\\r\\n                          <option value=\\\"UIN Holder\\\">UIN Holder</option>\\r\\n                        </select>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                    <!-- *ngIf=\\\"PType == 'V'\\\" -->\\r\\n                    <div class=\\\"form-group row col-sm-6\\\" *ngIf=\\\"fromTree != 1 && fromTree != 2  \\\"   >\\r\\n                      <label class=\\\"col-sm-2 form-control-label\\\">Integration Type:</label>\\r\\n                      <div class=\\\"col-sm-6\\\">\\r\\n                        <select class=\\\"form-control\\\" formControlName=\\\"MAILTYPE\\\"\\r\\n                          style=\\\"height:30px;padding-bottom: 0px;\\\">\\r\\n                          <option value=\\\"None\\\">None</option>\\r\\n                          <option value=\\\"SAP\\\">SAP</option>\\r\\n                          <option CSV=\\\"None\\\">CSV</option>\\r\\n                          <option value=\\\"EDI\\\">EDI</option>\\r\\n                          <option value=\\\"Inline HTML\\\">Inline HTML</option>\\r\\n                        </select>\\r\\n                      </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group row col-sm-6\\\">\\r\\n                      <label class=\\\"col-sm-2 form-control-label\\\">Status:</label>\\r\\n                      <div class=\\\"col-sm-6\\\">\\r\\n                        <select class=\\\"form-control\\\" formControlName=\\\"ISACTIVE\\\"\\r\\n                          style=\\\"height:30px;padding-bottom: 0px;\\\">\\r\\n                          <option value=1>Active</option>\\r\\n                          <option value=0>Inactive</option>\\r\\n                        </select>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"tab-pane\\\" id=\\\"contact-details\\\">\\r\\n              <!-- Contact Details -->\\r\\n              <div class=\\\"form-group row\\\">\\r\\n                <div class=\\\"col-sm-12\\\">\\r\\n                  <div class=\\\"form-group row col-sm-6\\\">\\r\\n                    <label class=\\\"col-sm-6 form-control-label\\\">Address</label>\\r\\n                    <div class=\\\"col-sm-6\\\">\\r\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"TEMPADDRESS\\\" placeholder=\\\"Temp Address\\\" />\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <div *ngIf=\\\"PType == 'C' && fromTree != 1 \\\" class=\\\"form-group row col-sm-6\\\">\\r\\n                    <label class=\\\"col-sm-6 form-control-label\\\">Shipping Address:</label>\\r\\n                    <div class=\\\"col-sm-6\\\">\\r\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"ADDRESS\\\"\\r\\n                        placeholder=\\\"Shipping Address\\\" />\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <div class=\\\"form-group row col-sm-6\\\">\\r\\n                    <label class=\\\"col-sm-6 form-control-label\\\">State <a style=\\\"color: red\\\">*</a></label>\\r\\n                    <div class=\\\"col-sm-6\\\">\\r\\n\\r\\n                      <select class=\\\"form-control\\\" style=\\\"color:black\\\" name=\\\"STATE\\\" id=\\\"STATE\\\" formControlName=\\\"STATE\\\">\\r\\n                        <option *ngFor=\\\"let i of StateList\\\" value={{i.StateCode}}>{{i.StateName}}</option>\\r\\n                      </select>\\r\\n                      <!-- <div\\r\\n                        *ngIf=\\\"\\r\\n                          !form.controls['STATE'].valid &&\\r\\n                          form.controls['STATE']?.touched\\r\\n                        \\\"\\r\\n                        class=\\\"text-danger\\\"\\r\\n                      >\\r\\n                        <span *ngIf=\\\"form.get('STATE').hasError('required')\\\">\\r\\n                          State is required.\\r\\n                        </span>\\r\\n                      </div> -->\\r\\n                    </div>\\r\\n                  </div>\\r\\n\\r\\n                  <div class=\\\"form-group row col-sm-6\\\">\\r\\n                    <label class=\\\"col-sm-2 form-control-label\\\">City:</label>\\r\\n                    <div class=\\\"col-sm-6\\\">\\r\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"CITY\\\" placeholder=\\\"City\\\" />\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <div class=\\\"form-group row col-sm-6\\\">\\r\\n                    <label class=\\\"col-sm-2 form-control-label\\\">District:</label>\\r\\n                    <div class=\\\"col-sm-6\\\">\\r\\n                      <select formControlName=\\\"DISTRICT\\\" class=\\\"form-control\\\">\\r\\n                        <option *ngFor=\\\"let i of DistrictList\\\" value={{i.Name}} >{{i.Name}}</option>\\r\\n                        \\r\\n                      </select>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <div class=\\\"form-group row col-sm-6\\\">\\r\\n                    <label class=\\\"col-sm-2 form-control-label\\\">Area:</label>\\r\\n                    <div class=\\\"col-sm-6\\\">\\r\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"AREA\\\" placeholder=\\\"AREA\\\" />\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <div *ngIf=\\\"PType == 'C'\\\" class=\\\"form-group row col-sm-6\\\">\\r\\n                    <label class=\\\"col-sm-2 form-control-label\\\">Land Mark:</label>\\r\\n                    <div class=\\\"col-sm-6\\\">\\r\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"LANDMARK\\\" placeholder=\\\"LandMark\\\" />\\r\\n                      <div *ngIf=\\\"\\r\\n                          !form.controls['LANDMARK'].valid &&\\r\\n                          form.controls['LANDMARK']?.touched\\r\\n                        \\\" class=\\\"text-danger\\\">\\r\\n                        <span *ngIf=\\\"form.get('LANDMARK').hasError('required')\\\">\\r\\n                          Postal Code is required.\\r\\n                        </span>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <div class=\\\"form-group row col-sm-6\\\">\\r\\n                    <label class=\\\"col-sm-2 form-control-label\\\">Phone:</label>\\r\\n                    <div class=\\\"col-sm-6\\\">\\r\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"PHONE\\\" placeholder=\\\"PHONE\\\" />\\r\\n                    </div>\\r\\n                  </div>\\r\\n\\r\\n                  <div class=\\\"form-group row col-sm-6\\\">\\r\\n                    <label class=\\\"col-sm-2 form-control-label\\\">Mobile <a style=\\\"color: red\\\">*</a></label>\\r\\n                    <div class=\\\"col-sm-6\\\">\\r\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"MOBILE\\\" placeholder=\\\"MOBILE\\\" />\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <div class=\\\"form-group row col-sm-6\\\">\\r\\n                    <label class=\\\"col-sm-2 form-control-label\\\">Email </label>\\r\\n                    <div class=\\\"col-sm-6\\\">\\r\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"EMAIL\\\" placeholder=\\\"EMAIL\\\" />\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  \\r\\n                  <div *ngIf=\\\"PType == 'V'\\\" class=\\\"form-group row col-sm-6\\\">\\r\\n                    <label class=\\\"col-sm-2 form-control-label\\\">Fax</label>\\r\\n                    <div class=\\\"col-sm-6\\\">\\r\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"FAX\\\" placeholder=\\\"FAX\\\" />\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <div *ngIf=\\\"PType == 'V'\\\" class=\\\"form-group row col-sm-6\\\">\\r\\n                    <label class=\\\"col-sm-2 form-control-label\\\">Postal Code\\r\\n                    </label>\\r\\n                    <div class=\\\"col-sm-6\\\">\\r\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"POSTALCODE\\\" placeholder=\\\"POSTALCODE\\\" />\\r\\n                      <div *ngIf=\\\"\\r\\n                          !form.controls['POSTALCODE'].valid &&\\r\\n                          form.controls['POSTALCODE']?.touched\\r\\n                        \\\" class=\\\"text-danger\\\">\\r\\n                        <span *ngIf=\\\"form.get('POSTALCODE').hasError('required')\\\">\\r\\n                          Postal Code is required.\\r\\n                        </span>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <div *ngIf=\\\"isGroup == 0\\\" class=\\\"form-group row col-sm-6\\\">\\r\\n                    <label class=\\\"col-sm-2 form-control-label\\\">TITLE:</label>\\r\\n                    <div class=\\\"col-sm-6\\\">\\r\\n                      <select class=\\\"form-control\\\" formControlName=\\\"TITLE\\\" style=\\\"height:30px;padding-bottom: 0px;\\\">\\r\\n                        <option value=\\\"Mr\\\">Mr.</option>\\r\\n                        <option value=\\\"Mrs\\\">Mrs.</option>\\r\\n                        <option value=\\\"Mrs\\\">Others.</option>\\r\\n                      </select>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <div class=\\\"form-group row col-sm-6\\\">\\r\\n                    <label class=\\\"col-sm-2 form-control-label\\\">Contact Person </label>\\r\\n                    <div class=\\\"col-sm-6\\\">\\r\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"CONTACTPERSON\\\" placeholder=\\\"Contact Person Name\\\" />\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <div class=\\\"form-group row col-sm-6\\\">\\r\\n                    <label class=\\\"col-sm-2 form-control-label\\\">Person Mobile </label>\\r\\n                    <div class=\\\"col-sm-6\\\">\\r\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"CONTACTMOBILE\\\" placeholder=\\\"Contact Persons Mobile\\\" />\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <div class=\\\"form-group row col-sm-6\\\">\\r\\n                    <label class=\\\"col-sm-2 form-control-label\\\">Person Email </label>\\r\\n                    <div class=\\\"col-sm-6\\\">\\r\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"CONTACTEMAIL\\\" placeholder=\\\"Contact Persons Email\\\" />\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <div *ngIf=\\\"PType == 'V'&& userProfile.CompanyInfo.ORG_TYPE!= 'retailer' && fromTree != 2  \\\" class=\\\"form-group row col-sm-6\\\">\\r\\n                      <label class=\\\"col-sm-6 form-control-label\\\">ERP Stock Location Code</label>\\r\\n                      <div class=\\\"col-sm-6\\\">\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"ERPSTOCKLOCATIONCODE\\\" placeholder=\\\"ERP Stock Location Code\\\" />\\r\\n                      </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"tab-pane\\\" id=\\\"gst\\\">\\r\\n              <!-- GST  -->\\r\\n              <div class=\\\"form-group row\\\">\\r\\n                <div class=\\\"col-sm-12\\\">\\r\\n                  <div class=\\\"form-group row col-sm-6\\\">\\r\\n                    <label class=\\\"col-sm-2 form-control-label\\\">PANNO:</label>\\r\\n                    <div class=\\\"col-sm-6\\\">\\r\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"VATNO\\\" placeholder=\\\"VNO\\\" />\\r\\n                    </div>\\r\\n                  </div>\\r\\n\\r\\n                  <div class=\\\"form-group row col-sm-6\\\">\\r\\n                    <label class=\\\"col-sm-2 form-control-label\\\">GST No:</label>\\r\\n                    <div class=\\\"col-sm-6\\\">\\r\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"GSTNO\\\" placeholder=\\\"GSTNO\\\" />\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <div class=\\\"form-group row col-sm-6\\\">\\r\\n                    <label class=\\\"col-sm-6 form-control-label\\\">Aadhar No:</label>\\r\\n                    <div class=\\\"col-sm-6\\\">\\r\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"ADHARNO\\\" placeholder=\\\"ANO\\\" />\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"tab-pane\\\" id=\\\"other\\\">\\r\\n              <!-- OTHER  -->\\r\\n              <div class=\\\"form-group row\\\">\\r\\n                <div class=\\\"col-sm-12\\\">\\r\\n                  <!-- <div *ngIf=\\\"PType == 'C'\\\" class=\\\"form-group row col-sm-6\\\">\\r\\n                    <label class=\\\"col-sm-2 form-control-label\\\"\\r\\n                      >Category/Channel:</label\\r\\n                    >\\r\\n                    <div class=\\\"col-sm-6\\\">\\r\\n                      <select\\r\\n                        class=\\\"form-control\\\"\\r\\n                        formControlName=\\\"Channel\\\"\\r\\n                        style=\\\"height:30px;padding-bottom: 0px;\\\"\\r\\n                      >\\r\\n                        <option>None</option>\\r\\n                        <option\\r\\n                          *ngFor=\\\"let i of ChannelList\\\"\\r\\n                          value=\\\"i.ChannelCode\\\"\\r\\n                          >{{ i.ChannelName }}</option\\r\\n                        >\\r\\n                      </select>\\r\\n                    </div>\\r\\n                  </div> -->\\r\\n\\r\\n                  <div *ngIf=\\\"PType == 'C'\\\" class=\\\"form-group row col-sm-6\\\">\\r\\n                    <label class=\\\"col-sm-2 form-control-label\\\">Customer Type:</label>\\r\\n                    <div class=\\\"col-sm-6\\\">\\r\\n                      <select class=\\\"form-control\\\" formControlName=\\\"CTYPE\\\" style=\\\"height:30px;padding-bottom: 0px;\\\">\\r\\n                        <option value=\\\"RETAIL INVOICE\\\">RETAIL INVOICE</option>\\r\\n                        <option value=\\\"E-COMMERCE\\\">E-COMMERCE</option>\\r\\n                        <option value=\\\"EXEMPTED\\\">EXEMPTED</option>\\r\\n                        <option value=\\\"TAX INVOICE\\\">TAX INVOICE</option>\\r\\n                      </select>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <div *ngIf=\\\"PType == 'C' && fromTree != 1 \\\" class=\\\"form-group row col-sm-6\\\">\\r\\n                    <label class=\\\"col-sm-2 form-control-label\\\">Price Level:</label>\\r\\n                    <div class=\\\"col-sm-6\\\">\\r\\n                      <select class=\\\"form-control\\\" [(ngModel)]=\\\"geo\\\" [ngModelOptions]=\\\"{standalone:true}\\\"\\r\\n                        style=\\\"height:30px;padding-bottom: 0px;\\\" (change)=\\\"changePriceLevel()\\\">\\r\\n                        <option>None</option>\\r\\n                        <option *ngFor=\\\"let i of GeoList\\\" value=\\\"{{i.OrgTypeCode}}\\\">{{\\r\\n                          i.OrgTypeName\\r\\n                        }}</option>\\r\\n                      </select>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <!-- <div *ngIf=\\\"PType == 'C'\\\" class=\\\"form-group row col-sm-6\\\">\\r\\n                    <label class=\\\"col-sm-2 form-control-label\\\"\\r\\n                      >Price Level Config:</label\\r\\n                    >\\r\\n                    <div class=\\\"col-sm-6\\\">\\r\\n                      <select\\r\\n                        class=\\\"form-control\\\"\\r\\n                        formControlName=\\\"PRICELEVELCONFIG\\\"\\r\\n                        style=\\\"height:30px;padding-bottom: 0px;\\\"\\r\\n                      >\\r\\n                        <option value=\\\"None\\\">None</option>\\r\\n                        <option value=\\\"Apply from Pricelevl Master\\\"\\r\\n                          >Apply from Pricelevl Master</option\\r\\n                        >\\r\\n                        <option value=\\\"Apply from Pricelevel Table\\\"\\r\\n                          >Apply from Pricelevel Table</option\\r\\n                        >\\r\\n                        <option value=\\\"Apply from PL.Table then PL.Master\\\"\\r\\n                          >Apply from PL.Table then PL.Master</option\\r\\n                        >\\r\\n                      </select>\\r\\n                    </div>\\r\\n                  </div>  -->\\r\\n                  <!-- <div *ngIf=\\\"PType == 'V'\\\" class=\\\"form-group row col-sm-6\\\">\\r\\n                    <label class=\\\"col-sm-2 form-control-label\\\">ERP Plant Code<a style=\\\"color: red\\\">*</a></label>\\r\\n                    <div class=\\\"col-sm-6\\\">\\r\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"ERPPLANTCODE\\\" placeholder=\\\"SAP-CODE\\\" />\\r\\n                    </div>\\r\\n                  </div> -->\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"tab-pane\\\" id=\\\"route\\\">\\r\\n              <!-- ROUTE -->\\r\\n              <div class=\\\"form-group row\\\">\\r\\n                <div class=\\\"col-sm-6\\\">\\r\\n                  <div class=\\\"form-group row col-sm-12\\\">\\r\\n                    <label class=\\\"col-sm-2 form-control-label\\\">Route:</label>\\r\\n                    <div class=\\\"col-sm-6\\\">\\r\\n                      <select class=\\\"form-control\\\" formControlName=\\\"ROUTE\\\" style=\\\"height:30px;padding-bottom: 0px;\\\"\\r\\n                        (change)=\\\"RouteClick($event.target.value)\\\">\\r\\n                        <option>None</option>\\r\\n                        <option *ngFor=\\\"let i of RouteList\\\" value=\\\"{{ i.RouteCode }}\\\">{{ i?.RouteName }}</option>\\r\\n                      </select>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <div class=\\\"form-group row col-sm-12\\\">\\r\\n                    <label class=\\\"col-sm-2 form-control-label\\\">Sales Officer:</label>\\r\\n                    <div class=\\\"col-sm-6\\\">\\r\\n                      <select class=\\\"form-control\\\" formControlName=\\\"SO\\\" style=\\\"height:30px;padding-bottom: 0px;\\\"\\r\\n                        (change)=\\\"SOChange($event.target.value)\\\">\\r\\n                        <option>None</option>\\r\\n                        <option [value]=\\\"i.CODE\\\" *ngFor=\\\"let i of solist\\\">{{\\r\\n                          i.NAME\\r\\n                        }}</option>\\r\\n                      </select>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <div class=\\\"form-group row col-sm-12\\\">\\r\\n                    <label class=\\\"col-sm-2 form-control-label\\\">Officer Code:</label>\\r\\n                    <div class=\\\"col-sm-6\\\">\\r\\n                      <select class=\\\"form-control\\\" formControlName=\\\"SO\\\" (change)=\\\"SOChange($event.target.value)\\\"\\r\\n                        style=\\\"height:30px;padding-bottom: 0px;\\\">\\r\\n                        <option>None</option>\\r\\n                        <option [value]=\\\"i.CODE\\\" *ngFor=\\\"let i of solist\\\">{{ i.CODE }}</option>\\r\\n                      </select>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <div class=\\\"form-group row col-sm-12\\\">\\r\\n                    <label class=\\\"col-sm-2 form-control-label\\\">Route Days:</label>\\r\\n                    <div class=\\\"col-sm-6\\\">\\r\\n                      <select class=\\\"form-control\\\" formControlName=\\\"RouteDays\\\" style=\\\"height:30px;padding-bottom: 0px;\\\">\\r\\n                        <option>Sunday</option>\\r\\n                        <option>Monday</option>\\r\\n                        <option>Tuesday</option>\\r\\n                        <option>Wednesday</option>\\r\\n                        <option>Thursday</option>\\r\\n                        <option>Friday</option>\\r\\n                        <option>Saturday</option>\\r\\n                      </select>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"RouteAdd()\\\">\\r\\n                    Add\\r\\n                  </button>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"col-sm-6\\\">\\r\\n                  <div class=\\\"form-group row col-sm-12\\\" style=\\\"border: 1px solid #cccccc;    height: 180px;\\\">\\r\\n                    <table style=\\\"width:100%;height: 110px;\\\">\\r\\n                      <tr>\\r\\n                        <th style=\\\"width:5%\\\">SNO</th>\\r\\n                        <th style=\\\"width:35%\\\">Route Name</th>\\r\\n                        <th style=\\\"width:35%\\\">Sales Officer</th>\\r\\n                        <th style=\\\"width:20%\\\">Officer Code</th>\\r\\n\\r\\n                        <th style=\\\"width:5%\\\"></th>\\r\\n                      </tr>\\r\\n                     <ng-container *ngIf=\\\"SOTableList.length\\\">\\r\\n                      <tr *ngFor=\\\"let i of SOTableList;let ind = index\\\">\\r\\n                        <td>1</td>\\r\\n                        <td>{{ i?.RouteName }}</td>\\r\\n                        <td>{{ i?.SONAME }}</td>\\r\\n                        <td>{{ i?.SOCODE }}</td>\\r\\n                        <td>\\r\\n                          <button class=\\\"glyphicon glyphicon-trash\\\" (click)=\\\"deleteSOList(ind)\\\"></button>\\r\\n                        </td>\\r\\n                      </tr>\\r\\n                     </ng-container>\\r\\n                    </table>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</form>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/masters/components/PLedger/PLedger.html\n// module id = 1367\n// module chunks = 0 12","import {\r\n  Component,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  Injector,\r\n  HostListener\r\n} from \"@angular/core\";\r\nimport { PagedListingComponentBase } from \"../../../paged-list-component-base\";\r\nimport { MasterRepo } from \"../../repositories\";\r\nimport { GenericPopUpSettings } from \"../generic-grid/generic-popup-grid.component\";\r\nimport { PLedgerservice } from \"../../../pages/masters/components/PLedger/PLedger.service\";\r\n\r\n@Component({\r\n  selector: \"for-account-group-popup-grid\",\r\n  template: require('./ForAccountLedger.component.html'),\r\n  styles: [require('../../../pages/Style.css'), require('../pStyle.css')]\r\n})\r\nexport class ForAccountGroupPopUpComponent extends PagedListingComponentBase {\r\n  /** List Declaration  */\r\n\r\n  isActive: boolean = false;\r\n  itemList: any[] = [];\r\n  selectedRowIndex: number = 0;\r\n  tabindex: string = \"list\";\r\n\r\n  /** Output  */\r\n\r\n  @Output() onPopUpClose = new EventEmitter();\r\n  @Output() onItemDoubleClick = new EventEmitter();\r\n  @Input() Prefix: string;\r\n  /** Input  */\r\n\r\n  popupsettings: GenericPopUpSettings;\r\n\r\n  constructor(\r\n    public injector: Injector,\r\n    private masterService: MasterRepo,\r\n    private _Ledgerservice: PLedgerservice\r\n  ) {\r\n    super(injector);\r\n    this.popupsettings = {\r\n      title: \"Account Groups\",\r\n      apiEndpoints: `/getAccountItem/`,\r\n      defaultFilterIndex: 0,\r\n      columns: [\r\n        {\r\n          key: \"ACNAME\",\r\n          title: \"Account Name\",\r\n          hidden: false,\r\n          noSearch: false\r\n        },\r\n        // {\r\n        //   key: \"ACID\",\r\n        //   title: \"CODE\",\r\n        //   hidden: false,\r\n        //   noSearch: false\r\n        // },\r\n        {\r\n          key: \"PARENT\",\r\n          title: \"PARENT\",\r\n          hidden: false,\r\n          noSearch: false,\r\n\r\n        }\r\n      ]\r\n    };\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this._Ledgerservice.getAllAccountGroup().subscribe(res => {\r\n      if (res.status == \"ok\") {\r\n        this.itemList = res.result.length > 0 ? res.result.filter(x => x.TYPE == \"G\") : [];\r\n      }\r\n    });\r\n\r\n  }\r\n  show(currentItem: any = <any>{}) {\r\n    // this.popupsettings.apiEndpoints=`/getAccountItem/${this.Prefix}`,\r\n    this.isActive = true;\r\n    this.selectedRowIndex = 0;\r\n    if (this.itemList.length > 0) return;\r\n    this.refreshPage();\r\n    this.refresh();\r\n  }\r\n  refreshAll() {\r\n    this.refreshPage();\r\n    this.refresh();\r\n  }\r\n  getData() {\r\n    if (this.Prefix == '') { alert(\"Please select MainGroup first!\"); return }\r\n\r\n    this.selectedRowIndex = 0;\r\n    if (this.itemList.length) { return }\r\n    this._Ledgerservice.getAccountLedgerItem(this.Prefix).subscribe(res => {\r\n      if (res.status == \"ok\") {\r\n        this.itemList = res.result.length > 0 ? res.result.filter(x => x.TYPE == \"G\") : [];\r\n      }\r\n    });\r\n  }\r\n  GetDataFromPrefix(Prefix) {\r\n    this._Ledgerservice.getAccountLedgerItem(Prefix).subscribe(res => {\r\n      if (res.status == \"ok\") {\r\n        this.itemList = res.result.length > 0 ? res.result.filter(x => x.TYPE == \"G\") : [];\r\n      }\r\n    });\r\n  }\r\n  hide() {\r\n    this.itemList = [];\r\n    this.pageNumber = 1;\r\n    this.totalItems = 0;\r\n    this.isActive = false;\r\n  }\r\n\r\n  triggerSearch() {\r\n    if (\r\n      this.filterOption == null ||\r\n      this.filterOption == undefined ||\r\n      this.filterOption == \"\"\r\n    )\r\n      return;\r\n    if (\r\n      this.filterValue == null ||\r\n      this.filterValue == undefined ||\r\n      this.filterValue == \"\"\r\n    )\r\n      return;\r\n\r\n    this.refreshPage();\r\n    this.refresh();\r\n  }\r\n\r\n  singleClick(index, $event) {\r\n    this.selectedRowIndex = index;\r\n    this.onItemDoubleClick.emit($event);\r\n  }\r\n\r\n  doubleClick($event) {\r\n    this.onItemDoubleClick.emit($event);\r\n    this.hide();\r\n  }\r\n\r\n  @HostListener(\"document : keydown\", [\"$event\"])\r\n  updown($event: KeyboardEvent) {\r\n    if (\r\n      $event.code == \"ArrowDown\" &&\r\n      this.selectedRowIndex < this.pageSize - 1\r\n    ) {\r\n      $event.preventDefault();\r\n      this.selectedRowIndex++;\r\n    }\r\n    else if ($event.code == \"ArrowDown\") {\r\n      $event.preventDefault();\r\n      this.selectedRowIndex = 0;\r\n      this.pageNumber = this.pageNumber + 1;\r\n    }\r\n    else if ($event.code == \"ArrowUp\" && this.selectedRowIndex - 1 > -1) {\r\n      $event.preventDefault();\r\n      this.selectedRowIndex--;\r\n    }\r\n    else if ($event.code == \"ArrowUp\") {\r\n      $event.preventDefault();\r\n      this.selectedRowIndex = 0;\r\n      this.pageNumber = this.pageNumber > 0 ? this.pageNumber - 1 : this.pageNumber\r\n    }\r\n    else if (\r\n      $event.code == \"Enter\" &&\r\n      this.selectedRowIndex >= 0 &&\r\n      this.selectedRowIndex < this.itemList.length - 1\r\n    ) {\r\n      $event.preventDefault();\r\n\r\n      let itemIndex = ((this.pageNumber - 1) * this.pageSize) + (this.selectedRowIndex)\r\n      this.onItemDoubleClick.emit(this.itemList[this.selectedRowIndex]);\r\n      this.hide();\r\n      this.itemListClosed();\r\n    }\r\n  }\r\n\r\n  itemListClosed() {\r\n    this.onPopUpClose.emit();\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/common/popupLists/AGroupPopup/ForAccountLedger.component.ts","import { NgModule, ModuleWithProviders } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { ModalModule } from \"ngx-bootstrap\";\r\nimport { MasterRepo } from \"../../repositories\";\r\nimport { NgaModule } from \"../../../theme/nga.module\";\r\nimport { NgxPaginationModule } from \"ngx-pagination\";\r\nimport { AccountGroupPopUpComponent } from \"./account-group-popup-grid.component\";\r\nimport { FilterPipe, SortByPipe } from \"../../../theme/directives/pipes/pipes\";\r\nimport { ForAccountGroupPopUpComponent } from \"./ForAccountLedger.component\";\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n\r\n    ModalModule.forRoot(),\r\n    NgaModule,\r\n    ModalModule.forRoot(),\r\n    NgxPaginationModule\r\n  ],\r\n  declarations: [AccountGroupPopUpComponent,ForAccountGroupPopUpComponent, FilterPipe, SortByPipe],\r\n  exports: [AccountGroupPopUpComponent,ForAccountGroupPopUpComponent]\r\n})\r\nexport class AccountGroupPopupGridModule {\r\n  static forRoot(): ModuleWithProviders {\r\n    return {\r\n      ngModule: AccountGroupPopupGridModule,\r\n      providers: [MasterRepo]\r\n    };\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/common/popupLists/AGroupPopup/account-group-popup-grid.module.ts","import { Component } from '@angular/core';\r\nimport 'style-loader!./smartTables.scss';\r\nimport { LocalDataSource } from '../../../../node_modules/ng2-smart-table/';\r\nimport 'style-loader!./smartTables.scss';\r\nimport { Router } from '@angular/router';\r\nimport { BehaviorSubject } from \"rxjs/BehaviorSubject\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { MdDialog } from \"@angular/material\";\r\nimport { AuthDialog } from \"../../../modaldialogs/authorizationDialog/authorizationDialog.component\";\r\n\r\nimport { PLedgerservice } from '../PLedger/PLedger.service';\r\n\r\n\r\n@Component({\r\n    selector: 'ALedgerTable',\r\n    template: require('./ALedgerTable.html'),\r\n    styles: [require('../../../modal-style.css')],\r\n    providers: [PLedgerservice],\r\n})\r\nexport class ALedgerTableComponent {\r\n    //  @Input() PType: string;\r\n    PType: string;\r\n    partyName: string;\r\n    settings = {\r\n        mode: 'external',\r\n        add: {\r\n            addButtonContent: '',\r\n            createButtonContent: '<i class=\"ion-checkmark\"></i>',\r\n            cancelButtonContent: '<i class=\"ion-close\"></i>',\r\n        },\r\n        // view: {\r\n        //   viewButtonContent: 'View',\r\n        //   saveButtonContent: '<i class=\"ion-checkmark\"></i>',\r\n        //   cancelButtonContent: '<i class=\"ion-close\"></i>',\r\n        // },\r\n        edit: {\r\n            editButtonContent: 'Edit',\r\n            saveButtonContent: '<i class=\"ion-checkmark\"></i>',\r\n            cancelButtonContent: '<i class=\"ion-close\"></i>',\r\n        },\r\n        delete: {\r\n            deleteButtonContent: ' ',\r\n            confirmDelete: true\r\n        },\r\n        columns: {\r\n            ACNAME: {\r\n                title: 'NAME',\r\n                type: 'string'\r\n            },\r\n            ACCODE: {\r\n                title: 'ACCODE',\r\n                type: 'string'\r\n            },\r\n            TYPE: {\r\n                title: 'Type',\r\n                type: 'string',\r\n                valuePrepareFunction: (value) => {\r\n                    switch (value) {\r\n                        case \"A\":\r\n                            return 'Asset';\r\n                        case \"G\":\r\n                            return 'Group';\r\n                        default:\r\n                            return ''\r\n\r\n\r\n                    }\r\n                },\r\n                filter: {\r\n                    type: 'list',\r\n                    config: {\r\n                        selectText: 'All',\r\n                        list: [\r\n                            { value: 'A', title: 'Asset' },\r\n                            { value: 'G', title: 'Group' },\r\n                        ]\r\n                    }\r\n                }\r\n            },\r\n            ACTYPE: {\r\n                title: 'AC Type',\r\n                type: 'string',\r\n                valuePrepareFunction: (value) => {\r\n                    switch (value) {\r\n                        case \"AT\":\r\n                            return 'Asset';\r\n                        case \"LB\":\r\n                            return 'Liability';\r\n                        case \"DI\":\r\n                            return 'Direct Income';\r\n                        case \"DE\":\r\n                            return 'Direct Expense';\r\n                        case \"II\":\r\n                            return 'Indirect Income';\r\n                        case \"IE\":\r\n                            return 'Indirect Expense';\r\n                        default:\r\n                            return ''\r\n\r\n\r\n                    }\r\n                },\r\n                filter: {\r\n                    type: 'list',\r\n                    config: {\r\n                        selectText: 'All',\r\n                        list: [\r\n                            { value: 'AT', title: 'Asset' },\r\n                            { value: 'LB', title: 'Liability' },\r\n                            { value: 'DI', title: 'Direcct Income' },\r\n                            { value: 'DE', title: 'Direct Expense' },\r\n                            { value: 'II', title: 'Indirect Income' },\r\n                            { value: 'IE', title: 'Indirect Expense' },\r\n                        ]\r\n                    }\r\n                }\r\n            },\r\n            HASSUBLEDGER: {\r\n                title: 'Has Subledger',\r\n                type: 'string',\r\n                valuePrepareFunction: (value) => { return value == 1 ? 'Yes' : value == 0 ? 'No' : ''; },\r\n                filter: {\r\n                    type: 'list',\r\n                    config: {\r\n                        selectText: 'All',\r\n                        list: [\r\n                            { value: 1, title: 'Yes' },\r\n                            { value: 0, title: 'No' },\r\n                        ]\r\n                    }\r\n                }\r\n            },\r\n            ISACTIVE: {\r\n                title: 'STATUS',\r\n                type: 'string',\r\n                valuePrepareFunction: (value) => { return value == true ? 'Active' : value == false ? 'InActive' : ''; },\r\n                filter: {\r\n                    type: 'list',\r\n                    config: {\r\n                        selectText: 'All',\r\n                        list: [\r\n                            { value: true, title: 'Active' },\r\n                            { value: false, title: 'InActive' },\r\n                        ]\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    source: LocalDataSource = new LocalDataSource();\r\n    messageSubject: BehaviorSubject<string> = new BehaviorSubject<string>(\"You are not authorized.\");\r\n    message$: Observable<string> = this.messageSubject.asObservable();\r\n    MainGrpList:any[]=[];\r\n    constructor(private _Ledgerservice: PLedgerservice, private router: Router, public dialog: MdDialog) {\r\n        try {\r\n            ////console.log(\"Ptype\", this.PType)\r\n            if (this.PType == 'C') this.partyName = 'New Customer';\r\n            else if (this.PType == 'V') this.partyName = 'New Supplier';\r\n\r\n            let data: Array<any> = [];\r\n            this._Ledgerservice.getAllAccount().subscribe(res => {\r\n                if (res.status == \"ok\") {\r\n                    data = res.result;\r\n                    this.source.load(data);\r\n                    ////console.log(\"PledgerTable\", data)\r\n                }\r\n            });\r\n         \r\n\r\n\r\n\r\n\r\n        } catch (ex) {\r\n            //console.log(ex);\r\n            alert(ex);\r\n        }\r\n    }\r\n\r\n    setMode() {\r\n        try {\r\n\r\n        } catch (ex) {\r\n            //console.log(ex);\r\n            alert(ex);\r\n        }\r\n    }\r\n    onAddClick(): void {\r\n        try {\r\n\r\n            this.router.navigate([\"./pages/masters/AccountLedger/Account\", { mode: \"add\", isGroup: 0, Title: 'Create Account', returnUrl: this.router.url }]);\r\n\r\n        } catch (ex) {\r\n            //console.log(ex);\r\n            alert(ex);\r\n        }\r\n    }\r\n    onGrpAddClick() {\r\n        try {\r\n            this.router.navigate([\"./pages/masters/AccountLedger/Account\", { mode: \"add\", isGroup: 1, PType: 'G', Title: 'Create Account Group', returnUrl: this.router.url }]);\r\n\r\n        } catch (ex) {\r\n            //console.log(ex);\r\n            alert(ex);\r\n        }\r\n    }\r\n\r\n    onDeleteConfirm(event): void {\r\n        try {\r\n            if (window.confirm('Are you sure you want to delete?')) {\r\n                event.confirm.resolve();\r\n            } else {\r\n                event.confirm.reject();\r\n            }\r\n        } catch (ex) {\r\n            //console.log(ex);\r\n            alert(ex);\r\n        }\r\n    }\r\n\r\n    onViewClick(): void {\r\n        try {\r\n            this.router.navigate([\"./pages/masters/AccountLedger/Account\", { mode: \"view\", isGroup: 1, PType: 'G', Title: 'Create Account Group', returnUrl: this.router.url }]);\r\n        } catch (ex) {\r\n            //console.log(ex);\r\n            alert(ex);\r\n        }\r\n    }\r\n\r\n    onEditClick(event): void {\r\n        try {\r\n            this.router.navigate([\"./pages/masters/AccountLedger/Account\",\r\n                {\r\n                    mode: \"edit\",\r\n                    isGroup: event.data.TYPE == \"G\" ? 1 : 0,\r\n                    PType: event.data.TYPE,\r\n                    ACID: event.data.ACID,\r\n                    Title: event.data.TYPE == \"G\" ? 'Edit Account Group' : 'Edit Account',\r\n                    returnUrl: this.router.url\r\n            }]);            \r\n        } catch (ex) {\r\n            //console.log(ex);\r\n            alert(ex);\r\n        }\r\n    }\r\n\r\n    openAuthDialog() {\r\n        var message = { header: \"Information\", message: this.message$ };\r\n        this.dialog.open(AuthDialog, { hasBackdrop: true, data: message });\r\n    }\r\n\r\n}\r\n    /*public actions: Array<PageAction> = [];\r\nprivate router: Router;\r\nconstructor(router: Router) {\r\nsuper();\r\nlet self: Divisions = this;\r\nself.router = router;\r\nself.model = new DivisionsModel(self.i18nHelper);\r\n//self.registerEvent(self.model.event)\r\nself.loadDivisions();\r\nthis.model.addPageAction(new PageAction(\"btnAddDivision\", \"masters.divisions.addDivisionAction\", () => self.onAddNewDivisionClicked()));\r\n\r\n}\r\n\r\nonAddNewDivisionClicked() {\r\nthis.router.navigate([route.division.addDivision.name]);\r\n}\r\n\r\nonEditDivisionClicked(event: any) {\r\nthis.router.navigate([route.division.editDivision.name, { id: event.item.initial }]);\r\n}\r\n\r\nonDeleteDivisionClicked(event: any) {\r\nlet self: Divisions = this;\r\ndivisionsService.delete(event.item.id).then(function () {\r\nself.loadDivisions();\r\n});\r\n\r\n}\r\nprivate loadDivisions() {\r\nlet self: Divisions = this;\r\ndivisionsService.getDivision().then(function (items: Array<any>) {\r\n\r\nself.model.importDivisions(items);\r\n});\r\n}\r\n}*/\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/pages/masters/components/ALedger/ALedgerTable.component.ts","import { Subscription } from 'rxjs/Subscription';\r\nimport { Component, OnInit, Input, Output, EventEmitter, ViewChild, Injector, HostListener } from '@angular/core';\r\nimport { AuthService } from \"../../../../common/services/permission/authService.service\";\r\nimport { ModalDirective } from 'ng2-bootstrap'\r\nimport { Router } from \"@angular/router\";\r\nimport { AccountGroup, MasterRepo } from '../../../../common/repositories/masterRepo.service';\r\nimport { TreeNode, TREE_ACTIONS, KEYS, IActionMapping, TreeComponent } from 'angular-tree-component';\r\nimport { LocalDataSource, ServerDataSource } from 'ng2-smart-table';\r\n\r\nimport { TreeViewPartyervice } from \"./partyledger.service\";\r\nimport { Subject } from \"rxjs/Subject\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { ContextMenuComponent } from 'ngx-contextmenu';\r\nimport { AlertService } from '../../../../common/services/alert/alert.service';\r\nimport { SpinnerService } from '../../../../common/services/spinner/spinner.service';\r\nimport { AppComponentBase } from '../../../../app-component-base';\r\nimport { Division } from '../../../../common/interfaces';\r\nimport { GenericPopUpComponent, GenericPopUpSettings } from '../../../../common/popupLists/generic-grid/generic-popup-grid.component';\r\nimport { TreeViewAccService } from './AccLedger.service';\r\n\r\nconst actionMapping: IActionMapping = {\r\n  mouse: {\r\n    contextMenu: (tree, node, $event) => {\r\n      $event.preventDefault();\r\n      alert(`context menu for ${node.data.ACNAME}`);\r\n    },\r\n    dblClick: (tree, node, $event) => {\r\n      if (node.hasChildren) TREE_ACTIONS.TOGGLE_EXPANDED(tree, node, $event);\r\n    },\r\n    click: (tree, node, $event) => {\r\n      $event.shiftKey\r\n        ? TREE_ACTIONS.TOGGLE_SELECTED_MULTI(tree, node, $event)\r\n        : TREE_ACTIONS.TOGGLE_SELECTED(tree, node, $event)\r\n    }\r\n  },\r\n  keys: {\r\n    [KEYS.ENTER]: (tree, node, $event) => node.setActiveAndVisible()\r\n    //[KEYS.ENTER]: (tree, node, $event) =>  alert(`This is ${node.data.name}`)\r\n  }\r\n};\r\n\r\n@Component({\r\n  selector: \"AccLedgerNew\",\r\n  template: require('./AccLedgerTable.component.html'),\r\n  styles: [require('../../../Style.css'), require('../../../modal-style.css'), require('./AccLedgerTable.component.css')],\r\n  providers: [MasterRepo, TreeViewAccService, AuthService]\r\n\r\n})\r\n\r\nexport class AccNewLedgerComponent extends AppComponentBase implements OnInit {\r\n  @ViewChild('childModal') childModal: ModalDirective;\r\n  @ViewChild(ContextMenuComponent) public contextMenu: ContextMenuComponent;\r\n  @ViewChild('DeleteAcc') DeleteAcc: ModalDirective;\r\n  @ViewChild(\"genericGridACList\") genericGridACList: GenericPopUpComponent;\r\n  gridACListPopupSettings: GenericPopUpSettings = new GenericPopUpSettings();\r\n\r\n  DialogMessage: string = \"You are not authorized\";\r\n  addMode: boolean = false;\r\n  public mode: string;\r\n  public grp: string;\r\n  modeTitle: string;\r\n  loadListSubject: Subject<any> = new Subject<any>();\r\n  areaList: any[] = [];\r\n  loadList$: Observable<any> = this.loadListSubject.asObservable();\r\n  \r\n  partyFilter: any;\r\n  searchParty: any;\r\n  isLoader = true;\r\n  currentPage = 1;\r\n  totalCount: number;\r\n  itemsPerPage = 200;\r\n  // showPartyLedgerFilterpopUp: boolean;\r\n  LedgerFilterObj: IsLedgerFilter = <IsLedgerFilter>{};\r\n  FormName : ExportLedgerFilterDto = <ExportLedgerFilterDto>{};\r\n\r\n  settings = {\r\n    mode: \"external\",\r\n    add: {\r\n      addButtonContent: '',\r\n    },\r\n    view: {\r\n      viewButtonContent: 'View',\r\n      saveButtonContent: '<i class=\"ion-checkmark\"></i>',\r\n      cancelButtonContent: '<i class=\"ion-close\"></i>',\r\n    },\r\n    edit: {\r\n      editButtonContent: 'Edit',\r\n      saveButtonContent: '<i class=\"ion-checkmark\"></i>',\r\n      cancelButtonContent: '<i class=\"ion-close\"></i>',\r\n    },\r\n    delete: {\r\n      deleteButtonContent: '<i class=\"ion-trash-a\"></i>',\r\n      confirmDelete: true\r\n    },\r\n    pager: {\r\n      display: true,\r\n      perPage: 14\r\n    },\r\n    columns: {\r\n      ACNAME: {\r\n        title: 'PARTY NAME',\r\n        type: 'number'\r\n\r\n      },\r\n      ADDRESS: {\r\n        title: 'ADDRESS',\r\n        type: 'string'\r\n\r\n      },\r\n      VATNO: {\r\n        title: 'VAT NO',\r\n        type: 'string'\r\n\r\n      }\r\n      ,\r\n      PartyType: {\r\n        title: 'PARTY TYPE',\r\n        type: 'string'\r\n\r\n      }\r\n      ,\r\n      Category: {\r\n        title: 'CATEGORY',\r\n        type: 'string',\r\n        width: '20px'\r\n      }\r\n      ,\r\n      Parent: {\r\n        title: 'PARTY GROUP',\r\n        type: 'string',\r\n        width: '20px'\r\n      }\r\n    }\r\n  };\r\n\r\n\r\n\r\n  private _treeEnable: Boolean = true;\r\n  subTitle: string;\r\n  // disableSubGroupA: boolean = true;\r\n  // disableSubGroupB: boolean = true;\r\n  // disableSubGroupC: boolean = true;\r\n  parentGroupID: string = \"\";\r\n  overdraftIs: string;\r\n  isBank: boolean;\r\n\r\n  public get treeEnable(): Boolean { return this._treeEnable; }\r\n\r\n  public set treeEnable(value: Boolean) { this._treeEnable = value; }\r\n  public selectedNode: any;\r\n  public nodes: any[] = [];\r\n  @ViewChild(TreeComponent)\r\n  public tree: TreeComponent;\r\n  source: LocalDataSource = new LocalDataSource();\r\n  busy: Subscription;\r\n  division: any[] = [];\r\n  GeoList: any[] = [];\r\n  ParentList: any[] = [];\r\n  showAccountLedgerFilterpopUp: boolean;\r\n  SubGroupAccountMaster: any[] = [];\r\n  ChildrenList: any[] = [];\r\n  userSetting:any;\r\n\r\n  constructor(public masterService: MasterRepo,\r\n    public _alertService: AlertService,\r\n    public _spinerService: SpinnerService,\r\n    public _authService: AuthService,\r\n    public router: Router,\r\n    public AccountService: TreeViewAccService,\r\n    public injector: Injector,\r\n    protected MasterService: MasterRepo,\r\n  ) {\r\n    super(injector);\r\n    this.searchParty = \"searchByName\";\r\n    this.AccountService.sortAccount = \"sortByName\";\r\n    this.masterService.getAccountListTree().map(x => { return x })\r\n    this.busy = this.masterService.getAccountListTree().map(x => { return x })\r\n      .subscribe(res => {\r\n        // //console.log(res);\r\n        this.nodes = res;\r\n        // //console.log(this.nodes);\r\n        if (this.tree != null) {\r\n          this.tree.treeModel.update();\r\n        }\r\n        // //console.log(this.tree);\r\n      }, error => {\r\n        this.masterService.resolveError(error, \"partyLedger - PartyLedger\");\r\n      });\r\n\r\n\r\n     \r\n    this.division = [];\r\n    this.masterService.getAllDivisions()\r\n      .subscribe(res => {\r\n        this.division.push(<Division>res);\r\n      }, error => {\r\n        this.masterService.resolveError(error, \"divisions - getDivisions\");\r\n      });\r\n\r\n\r\n    this.AccountService.getHierachy().subscribe(res => {\r\n      if (res.status == \"ok\") {\r\n        this.GeoList = res.result.GEO;\r\n\r\n      }\r\n    });\r\n    // this.getTreeItem();\r\n    this.AccountService.loadTableListSubject.subscribe(x=>{\r\n      // //console.log(\"CheckXValu5\",x);\r\n  })\r\n\r\n    this.AccountService.getMainGroupList().subscribe((response)=>{\r\n      // //console.log(\"Main group,\", response);\r\n      if(response.length > 0){\r\n        this.masterService.mainGroupList = response;\r\n      }\r\n      else{\r\n        this.masterService.mainGroupList = [];\r\n      }\r\n    })\r\n\r\n\r\n    this.userSetting = this._authService.getSetting();\r\n  }\r\n\r\n  getTreeItem() {\r\n    this.AccountService.Refresh();\r\n    this.busy = this.AccountService.busy;\r\n    this.nodes = this.AccountService.nodes;\r\n    this.tree = this.AccountService.tree;\r\n  }\r\n\r\n\r\n\r\n  ngOnInit() {\r\n    this.AccountService.subTitle = \"\";\r\n    let data: Array<any> = [];\r\n\r\n\r\n    // this.loadListSubject.switchMap(snode => {\r\n    //   data = [];\r\n    //   ////console.log(\"reach here\");\r\n    //   return this.AccountService.getParentWisePartyList(snode.ACID)\r\n    // })\r\n    //   .subscribe(res => {\r\n    //     data.push(<any>res);\r\n    //     this.source.load(data);\r\n    //   })\r\n\r\n\r\n    // try { \r\n    //   let apiUrl = `${this.apiUrl}/getAllGeographicalHierarchyPagedList/${snode.ACID}`;\r\n    //   this.source =  this.source = new ServerDataSource(this._http, \r\n    //     { endPoint: apiUrl, \r\n    //       dataKey : \"data\", \r\n    //       pagerPageKey : \"currentPage\",\r\n    //       pagerLimitKey : \"maxResultCount\"\r\n    //     }); \r\n\r\n\r\n    // } catch (ex) {\r\n    //   //console.log(ex);\r\n    //   alert(ex);\r\n    // }\r\n\r\n\r\n  }\r\n\r\n\r\n  ngAfterViewInit() {\r\n    // document.getElementsByClassName('ACNAME')['0'].style.width = '20%';\r\n    // document.getElementsByClassName('ADDRESS')['0'].style.width = '20%';\r\n    // document.getElementsByClassName('VATNO')['0'].style.width = '8%';\r\n    // document.getElementsByClassName('PartyType')['0'].style.width = '10%';\r\n    // document.getElementsByClassName('Category')['0'].style.width = '8%';\r\n    // document.getElementsByClassName('Parent')['0'].style.width = '20%';\r\n\r\n    // this.ledgercomponent.getParentName();\r\n  }\r\n\r\n\r\n\r\n  getPartyPagedList() {\r\n    // let apiUrl = `${this.apiUrl}/getParentWiseAccountPagedList/${this.selectedNode.ACID}`;  \r\n    // this.source  = new ServerDataSource(this._http, \r\n    //   { endPoint: apiUrl, \r\n    //     dataKey : \"data\", \r\n    //     pagerPageKey : \"currentPage\",\r\n    //     pagerLimitKey : \"maxResultCount\"\r\n    //   }); \r\n    let data: Array<any> = [];\r\n    // this.masterService.getAcidWisePartyList(this.selectedNode.ACID)\r\n    // .subscribe(res => {\r\n    //   data.push(<any>res);\r\n    //   this.source.load(data);\r\n    // }, error => {\r\n    //   this.masterService.resolveError(error, \"divisions - getDivisions\");\r\n    // }\r\n\r\n    // );\r\n    this.masterService.getAcidWiseAccountList(this.selectedNode.ACID).subscribe(res => {\r\n      if (res.status == \"ok\") {\r\n        data = res.result;\r\n        this.source.load(data);\r\n        this.AccountService.partyList = res ? res.result : [];\r\n        ////console.log(\"PledgerTable\",data)\r\n      } else {\r\n        this.AccountService.partyList = [];\r\n      }\r\n    });\r\n\r\n    ////console.log(\"sourcevalue\",this.source);\r\n  }\r\n\r\n\r\n  getChildren(node: any) {\r\n    return new Promise((resolve, reject) => {\r\n      setTimeout(() => resolve(this.asyncChildren.map((c) => {\r\n        return Object.assign({}, c, {\r\n          hasChildren: node.level < 5\r\n        });\r\n      })), 1000);\r\n    });\r\n  }\r\n\r\n  asyncChildren = [\r\n    {\r\n      name: 'child2.1',\r\n      subTitle: 'new and improved'\r\n    }, {\r\n      name: 'child2.2',\r\n      subTitle: 'new and improved2'\r\n    }\r\n  ];\r\n\r\n  addNode(addednode) {\r\n    ////console.log(\"node reached\")\r\n    this.tree.treeModel.getFocusedNode().data.children.push(addednode);\r\n    this.tree.treeModel.update();\r\n  }\r\n\r\n  childrenCount(node: TreeNode): string {\r\n    return node && node.children ? `(${node.children.length})` : '';\r\n  }\r\n\r\n  filterNodes(value, tree) {\r\n    try {\r\n      // displayField: 'ACNAME', is required\r\n      this.tree.treeModel.filterNodes(value, true);\r\n    } catch (ex) {\r\n      ////console.log(\"PartyFilter\", ex);\r\n      alert(\"PartyFilter-\" + ex)\r\n    }\r\n  }\r\n\r\n  activateSubSub(tree) {\r\n    // tree.treeModel.getNodeBy((node) => node.data.name === 'subsub')\r\n    tree.treeModel.getNodeById(1001)\r\n      .setActiveAndVisible();\r\n  }\r\n\r\n  customTemplateStringOptions = {\r\n    displayField: 'ACNAME',\r\n    isExpandedField: 'expanded',\r\n    idField: 'uuid',\r\n    getChildren: this.getChildren.bind(this),\r\n    actionMapping,\r\n    allowDrag: false\r\n  }\r\n\r\n  onEvent($event) {\r\n    //console.log.bind(console);\r\n  }\r\n  root: string;\r\n\r\n  onselect(tree, $event) {\r\n    if(!this.masterService.getRequestOption()){\r\n      return;\r\n    }\r\n    //this.source = new ServerDataSource();\r\n    console.log(\"CheckTree\",this.tree);\r\n\r\n    this.overdraftIs = '';\r\n    this.selectedNode = tree.treeModel.getFocusedNode().data;\r\n    console.log(\"on tree click\", this.selectedNode);\r\n    this.masterService.SelectedGroup = this.selectedNode.ACID;\r\n    this.getRootParent(this.selectedNode, this.nodes);\r\n    this.loadListSubject.next(this.selectedNode);\r\n    this.AccountService.ParentInfo = this.selectedNode;\r\n    this.getPartyPagedList();\r\n    this.AccountService.sortAccount = \"sortByName\";\r\n    if (this.selectedNode.ACID == 'AG013' || (this.selectedNode.PARENT ? this.selectedNode.PARENT.ACID == 'AG013' : this.selectedNode.MAPID == 'OD') || this.selectedNode.MAPID == 'OD') {\r\n      this.overdraftIs = 'OD';\r\n    }\r\n\r\n    if(this.selectedNode.ACID == 'AG006' || this.selectedNode.MAPID == 'B'){\r\n      this.isBank = true;\r\n    }else{\r\n      this.isBank = false;\r\n    }\r\n\r\n\r\n  }\r\n\r\n\r\n\r\n  getList(selNod) {\r\n    //$event.stopPropagation();\r\n    let data: Array<any> = [];\r\n    this.AccountService.getParentWisePartyList(selNod.ACID)\r\n      .subscribe(res => {\r\n        data.push(<any>res);\r\n        this.source.load(data);\r\n      }\r\n      );\r\n\r\n  }\r\n  getRootParent(node, list) {\r\n    if (node.PARENTID == \"PA\") { this.root = node.ACID; return; }\r\n    for (let t of list) {\r\n      if (node.PARENTID != t.ACID) { this.loopingChild(node, t.children, t) }\r\n      else { this.root = t.ACID; }\r\n    }\r\n  }\r\n  loopingChild(node, cList, root) {\r\n    for (let c of cList) {\r\n      if (c != node) { this.loopingChild(node, c.children, root); }\r\n      else { this.root = root.ACID; }\r\n    }\r\n  }\r\n  go($event) {\r\n    $event.stopPropagation();\r\n    alert('this method is on the app component')\r\n  }\r\n\r\n  onTreeEnable(value: boolean) {\r\n    this.treeEnable = value;\r\n  }\r\n\r\n  AddLedger() {\r\n    if(!this.masterService.getRequestOption()){\r\n      return;\r\n    }\r\n    if (this.masterService.validateMasterCreation(\"create\") == false || this._authService.checkMenuRight(\"AccountMaster\", \"add\") == false) {\r\n      this._alertService.info(\"Current user has no Rights to add Account Master.\");\r\n      return;\r\n    }\r\n\r\n    if(this.selectedNode.ACID == 'AG01001' || this.selectedNode.ACID == 'AG01002'){\r\n      this._alertService.warning(\"Cannot add account under this group\");\r\n      return;\r\n    }\r\n    this.addMode = true;\r\n    this.modeTitle = \"AddLedger\"\r\n    this.AccountService.subTitle = \">> Add New Ledger A/C\"\r\n    this.mode = \"add\";\r\n    this.grp = \"A\";\r\n    this.AccountService.isGroup = false;\r\n    this.masterService.focusAnyControl(\"ACCODE\");\r\n  }\r\n\r\n  AddGroup(trees) {\r\n    if(!this.masterService.getRequestOption()){\r\n      return;\r\n    }\r\n    if (this.masterService.validateMasterCreation(\"create\") == false || this._authService.checkMenuRight(\"AccountMaster\", \"add\") == false) {\r\n      this._alertService.info(\"Current user has no Rights to add Account Group.\");\r\n      return;\r\n    }\r\n\r\n    if(this.selectedNode.ACID == 'AG01001' || this.selectedNode.ACID == 'AG01002'){\r\n      this._alertService.warning(\"Cannot add group under this group\");\r\n      return;\r\n    }\r\n\r\n    this.addMode = true;\r\n    this.modeTitle = \"AddGroup\"\r\n\r\n    this.AccountService.subTitle = \">> Add New Account Group\";\r\n    this.mode = \"add\";\r\n    this.grp = \"G\";\r\n    this.AccountService.isGroup = true;\r\n    this.masterService.focusAnyControl(\"ACCODE\");\r\n\r\n    this.AccountService.addGroupSubject.next(true);\r\n\r\n  }\r\n\r\n  onEditClick(party): void {\r\n    if(!this.masterService.getRequestOption()){\r\n      return;\r\n    }\r\n    if (this.masterService.validateMasterCreation(\"edit\") == false || this._authService.checkMenuRight(\"AccountMaster\", \"edit\") == false) {\r\n      this._alertService.info(\"Current user has no Rights to edit Account Master.\");\r\n      return;\r\n    }\r\n    this.addMode = true;\r\n    this.mode = \"edit\";\r\n    this.AccountService.subTitle = \">> Edit Ledger A/C\";\r\n    // this.selectedNode = event.data;\r\n    // //console.log(\"@selected party for edit\", party);\r\n    this.selectedNode = party;\r\n    this.selectedNode.PARENT_CODE = party.PARENTID;\r\n    this.MasterService.SelectedGroup = party.PARENTID;\r\n    ////console.log(\"selectedNode\",this.selectedNode);\r\n\r\n    this.grp = \"A\"\r\n\r\n  }\r\n\r\n  onViewClick(party): void {\r\n    if(!this.masterService.getRequestOption()){\r\n      return;\r\n    }\r\n    if (this._authService.checkMenuRight(\"AccountMaster\", \"view\") == false) {\r\n      this._alertService.info(\"Current user has no Rights to view Account Master.\");\r\n      return;\r\n    }\r\n    this.addMode = true;\r\n    this.mode = \"view\";\r\n    this.AccountService.subTitle = \">> View Ledger A/C\"\r\n    // this.selectedNode = event.data;\r\n    this.selectedNode = party;\r\n    this.selectedNode.PARENT_CODE = party.PARENTID;\r\n    this.MasterService.SelectedGroup = party.PARENTID;\r\n    this.grp = \"A\"\r\n  }\r\n\r\n  hideChildModal() {\r\n    this.childModal.hide();\r\n  }\r\n  onAddClose(event) {\r\n    this.addMode = false;\r\n    this.mode = \"\";\r\n    this.masterService.groupSelectObj = <AccountGroup>{};\r\n    this.masterService.disableSubGroupA=true;\r\n    this.masterService.disableSubGroupB=true;\r\n    this.masterService.disableSubGroupC=true;\r\n    this.parentGroupID = \"\";\r\n    this.selectedNode = undefined;\r\n\r\n    this.masterService.getAcidWiseAccountList(event,\"sortItemByDate\").subscribe(res => {\r\n      if (res.status == \"ok\") {\r\n        this.AccountService.partyList = res ? res.result : [];\r\n      } else {\r\n        this.AccountService.partyList = [];\r\n      }\r\n    });\r\n\r\n  }\r\n  public contextMenuActions = [\r\n    {\r\n      html: (item) => `Edit`,\r\n      tag: 'edit',\r\n      enabled: (item) => true,\r\n      visible: (item) => true,\r\n    },\r\n    {\r\n      divider: true,\r\n      visible: true,\r\n    },\r\n    {\r\n      html: (item) => `Delete`,\r\n      tag: 'delete',\r\n      enabled: (item) => true,\r\n      visible: (item) => true,\r\n    },\r\n  ];\r\n\r\n  contextMenuClick(selecteddata, selectedmenu) {\r\n    if (selectedmenu.tag == \"edit\") {\r\n      if(selecteddata.LEVELS == 1){\r\n        this._alertService.warning(\"Cannot edit Main Group\");\r\n        return;\r\n      }\r\n      // //console.log(\"Edit Context menu\", selecteddata)\r\n      this.addMode = true;\r\n      this.modeTitle = \"AddGroup\"\r\n      this.AccountService.subTitle = \">> Edit Account Group\"\r\n      this.mode = \"edit\";\r\n      this.selectedNode = selecteddata;\r\n      this.selectedNode.PARENT_CODE = selecteddata.PARENTID;\r\n\r\n\r\n      ////console.log(\"selecteddata\",selecteddata)\r\n      this.grp = \"G\"\r\n    }\r\n    else if (selectedmenu.tag == \"delete\") {\r\n      let childrenPartyList = [];\r\n      let childreenList = [];\r\n      this.masterService.getChildrenPartyAccount(this.selectedNode.ACID).subscribe(\r\n        res => {\r\n          if (res) {\r\n            childrenPartyList = res.result;\r\n            ////console.log(\"partylist\",childrenPartyList)\r\n            if (childrenPartyList.length > 0) {\r\n              this._alertService.info(\"PARTY ACCOUNT EXIST UNDER SELECTED PARTY GROUP. HENCE, REQUESTED COMMAND IS ABORTED\");\r\n            } else {\r\n              ////console.log(\"children\",this.selectedNode.children);\r\n              childreenList = this.selectedNode.children;\r\n              if (childreenList.length > 0) {\r\n                this._alertService.info(\"PARTY ACCOUNT EXIST UNDER SELECTED PARTY GROUP. HENCE, REQUESTED COMMAND IS ABORTED\");\r\n              } else {\r\n                this.DeleteAcc.show();\r\n              }\r\n            }\r\n          }\r\n        }\r\n      )\r\n\r\n\r\n\r\n    }\r\n  }\r\n  SavePartyEmit(value) {\r\n    // //console.log(\"Party$$$$\", value, this.tree)\r\n    if (value.type == \"G\") {\r\n      this.Refresh();\r\n      this.loadListSubject.next(this.selectedNode);\r\n    }\r\n    else {\r\n      var childAccountList = this.masterService.PartialAccountList.filter(a => a.PARENT == value.value.PARENT);\r\n      if (childAccountList.length > 0) {\r\n        ////console.log(\"Data from Array\");\r\n        this.loadListSubject.next(this.selectedNode);\r\n      }\r\n    }\r\n  }\r\n\r\n  EditPartyEmit() {\r\n    this.Refresh();\r\n  }\r\n\r\n\r\n\r\n\r\n  getGivenNode(nodeid: string, list: any[], savedNode): any {\r\n    for (let ag of list) {\r\n      // //console.log({ 'recusiveIteration': ag.ACID })\r\n      ////console.log(\"ag\", ag)\r\n      if (ag.ACID == nodeid) {\r\n        ag.children.push(savedNode);\r\n        // //console.log('requiredvalue', ag);\r\n        return ag;\r\n      }\r\n      else if (ag.children && ag.children.length > 0) {\r\n        var node = this.getGivenNode(nodeid, ag.children, savedNode);\r\n        if (node) {\r\n          return node;\r\n        }\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n\r\n  DeleteYes() {\r\n    this.DeleteAcc.hide();\r\n    this._spinerService.show(\"Deleting Data please wait...\");\r\n    this.masterService.deleteAccount(this.selectedNode.ACID).subscribe(data => {\r\n      if (data.status == \"ok\") {\r\n        this._alertService.success(\"Data Deleted Successfully\");\r\n        this._spinerService.hide();\r\n        this.Refresh();\r\n      }\r\n      else {\r\n\r\n        //alert(data.result);\r\n        //the ConnectionString in the server is not initialized means the the token 's user is not int the list of database user so it could't make connectionstring. Re authorization is requierd\r\n        if (\r\n          data.result._body ==\r\n          \"The ConnectionString property has not been initialized.\"\r\n        ) {\r\n          this.router.navigate([\"/login\", this.router.url]);\r\n          return;\r\n        }\r\n        //Some other issues need to check\r\n        this._alertService.error(\r\n          \"Error in Deleting Data:\" + data.result._body\r\n        );\r\n\r\n      }\r\n    })\r\n  }\r\n  DeleteNo() {\r\n    this.DeleteAcc.hide();\r\n  }\r\n\r\n  onClickNo() {\r\n    this.DeleteAcc.hide();\r\n  }\r\n\r\n\r\n\r\n  Refresh() {\r\n    this.masterService._accountPartyTree = [];\r\n    this.masterService.getPartyTreeObservable = null;\r\n    //this.masterService.getpartyListTree().map(x => { return x })\r\n    this.busy = this.masterService.getAccountListTree().map(x => { return x })\r\n      .subscribe(res => {\r\n        // //console.log(res);\r\n\r\n        this.nodes = res;\r\n        // //console.log(this.nodes);\r\n        if (this.tree != null) {\r\n          this.tree.treeModel.update();\r\n        }\r\n        // //console.log(this.tree);\r\n      }, error => {\r\n        this.masterService.resolveError(error, \"AccountLedger - AccountLedger\");\r\n      });\r\n\r\n  }\r\n\r\n  onDeleteConfirm(event): void {\r\n\r\n    if (window.confirm('Are you sure you want to delete?')) {\r\n      //event.confirm.resolve();\r\n      event.data.ISACTIVE = 0;\r\n      this._spinerService.show(\"please Wait..\");\r\n      this.masterService.inActiveAccount(event.data.ISACTIVE, event.data.ACCODE, event.data.ACID).subscribe(res => {\r\n        if (res.status == \"ok\") {\r\n          this._spinerService.hide();\r\n          this._alertService.info(\"Deleted successfully..\");\r\n          this.getPartyPagedList();\r\n        } else {\r\n          ////console.log(\"response\",res.result._body)\r\n          this._spinerService.hide();\r\n          this._alertService.info(res.result._body)\r\n        }\r\n      })\r\n    } else {\r\n      // event.confirm.reject();\r\n    }\r\n  }\r\n\r\n  partyPagination(event) {\r\n    this.isLoader = true;\r\n    this.currentPage = event;\r\n    const t = this;\r\n    window.scrollTo({ top: 0, behavior: 'smooth' });\r\n    setTimeout(() => {\r\n      t.isLoader = false;\r\n    }, 500);\r\n  }\r\n\r\n  backToDashboard() {\r\n    this.router.navigate([\"pages/dashboard\"])\r\n  }\r\n\r\n\r\n  @HostListener(\"document : keydown\", [\"$event\"])\r\n  handleKeyDownboardEvent($event: KeyboardEvent) {\r\n    if ($event.code == 'F10') {\r\n      $event.preventDefault();\r\n      this.backToDashboard();\r\n    }\r\n  }\r\n\r\n\r\n  ExportAll() {\r\n    this.FormName.data = \"Account\";\r\n    let filterObjData = {data: this.FormName, filtername: \"AllAccountList\" }\r\n    this.masterService.getExcelFile('/getAllLegerList',filterObjData).subscribe(\r\n      data => {\r\n        this._alertService.hide();\r\n        this.masterService.downloadFile(data);\r\n        this.CancelCommand();\r\n      },\r\n      error => {\r\n        this._alertService.hide();\r\n      }\r\n    )\r\n  }\r\n  OkCommand() {\r\n    this.LedgerFilterObj.FILTER = \"Account\";\r\n    let filterObjData = { data: this.LedgerFilterObj }\r\n    this.masterService.getExcelFileFilter('/getLedgerByFilter', filterObjData).subscribe(\r\n      data => {\r\n        this._alertService.hide();\r\n\r\n        this.masterService.downloadFile(data);\r\n        this.CancelCommand();\r\n      },\r\n      error => {\r\n        this._alertService.info(\"Data not found\");\r\n      }\r\n    )\r\n    this.showAccountLedgerFilterpopUp = false;\r\n  }\r\n  CancelCommand() {\r\n    this.LedgerFilterObj = <IsLedgerFilter>{};\r\n    this.FormName = <ExportLedgerFilterDto>{};\r\n    this.showAccountLedgerFilterpopUp = false;\r\n  }\r\n\r\n  showAcList(i) {\r\n    let TRNMODE = \"\";\r\n    if(this.LedgerFilterObj.type == \"Customer\"){\r\n      TRNMODE = \"Customer_Pay\";\r\n    }else if(this.LedgerFilterObj.type == \"Supplier\"){\r\n      TRNMODE = \"SupplierListOnly\";\r\n    }\r\n    // //console.log(\"TRNMODE\",TRNMODE)\r\n    this.gridACListPopupSettings = {\r\n      title: \"Accounts\",\r\n      apiEndpoints: `/getAccountPagedListByMapId/Details/${TRNMODE}`,\r\n      defaultFilterIndex: 1,\r\n      columns: [\r\n        {\r\n          key: \"ACID\",\r\n          title: \"AC CODE\",\r\n          hidden: false,\r\n          noSearch: false\r\n        },\r\n        {\r\n          key: \"ACNAME\",\r\n          title: \"A/C NAME\",\r\n          hidden: false,\r\n          noSearch: false\r\n        }\r\n      ]\r\n    };\r\n\r\n    this.genericGridACList.show();\r\n  }\r\n\r\n  onAcSelect(acItem) {\r\n    this.LedgerFilterObj.accountName = acItem.ACNAME;\r\n    this.LedgerFilterObj.ACID = acItem.ACID;\r\n  }\r\n\r\n  changeType(){\r\n    this.LedgerFilterObj.accountName = \"\";\r\n    this.LedgerFilterObj.ACID = \"\";\r\n    this.LedgerFilterObj.accountType = \"\";\r\n  }\r\n  sortProductListByDate(){\r\n    //console.log(\"CheckvalueFromTable\",this.AccountService.partyList)\r\n    \r\n  }\r\n\r\n  getSubgroupA(e){\r\n    let mainGroupID = e.target.value;\r\n    this.parentGroupID = mainGroupID;\r\n    // let acname=this.masterService.mainGroupList.filter(x=>x.ACID==e.target.value)[0].ACNAME;\r\n    // this.masterService.groupSelectObj.MGROUP=acname;\r\n    this.AccountService.getSubGroupList(mainGroupID).subscribe((res) =>{\r\n      if(res.length > 0 ){\r\n        // //console.log(\"list A\", res);\r\n        this.masterService.subGroupAList = res;\r\n        this.masterService.disableSubGroupA = false;\r\n        this.masterService.disableSubGroupB = true;\r\n        this.masterService.disableSubGroupC = true;\r\n        this.masterService.groupSelectObj.SUBGROUP_A = \"\";\r\n        this.masterService.groupSelectObj.SUBGROUP_B = \"\";\r\n        this.masterService.groupSelectObj.SUBGROUP_C = \"\";\r\n\r\n\r\n      }else{\r\n        this.masterService.subGroupAList = [];\r\n        this.masterService.disableSubGroupA = true;\r\n        this.masterService.disableSubGroupB = true;\r\n        this.masterService.disableSubGroupC = true;\r\n        this.masterService.groupSelectObj.SUBGROUP_A = \"\";\r\n        this.masterService.groupSelectObj.SUBGROUP_B = \"\";\r\n        this.masterService.groupSelectObj.SUBGROUP_C = \"\";\r\n      }\r\n    })\r\n  }\r\n\r\n  getSubgroupB(e){\r\n    let subGroupID = e.target.value;\r\n    this.parentGroupID = subGroupID;\r\n    // this.masterService.groupSelectObj.SUBGROUP_A = e.target.value;\r\n    // //console.log(\"sub group A selected\", this.parentGroupID)\r\n    this.AccountService.getSubGroupList(this.parentGroupID).subscribe((res) =>{\r\n      if(res.length > 0 ){\r\n        // //console.log(\"list B\", res);\r\n        this.masterService.subGroupBList = res;\r\n        this.masterService.disableSubGroupB = false;\r\n        this.masterService.disableSubGroupC = true;\r\n\r\n      }else{\r\n        this.masterService.subGroupBList = [];\r\n        this.masterService.disableSubGroupB = true;\r\n        this.masterService.disableSubGroupC = true;\r\n        this.masterService.groupSelectObj.SUBGROUP_B = \"\";\r\n      }\r\n    })\r\n  }\r\n\r\n  \r\n  getSubgroupC(e){\r\n    let subGroupID = e.target.value;\r\n    if(subGroupID == 'AG01001' || subGroupID == 'AG01002'){\r\n      this._alertService.warning(\"Cannot add account under this group\");\r\n      return;\r\n    }\r\n    this.parentGroupID = subGroupID;\r\n    // this.masterService.groupSelectObj.SUBGROUP_B = e.target.value;\r\n    //console.log(\"sub group B selected\", this.parentGroupID)\r\n    this.AccountService.getSubGroupList(this.parentGroupID).subscribe((res) =>{\r\n      if(res.length > 0 ){\r\n        // //console.log(\"list C\", res);\r\n        this.masterService.subGroupCList = res;\r\n        this.masterService.disableSubGroupC = false;\r\n\r\n      }else{\r\n        this.masterService.subGroupCList = [];\r\n        this.masterService.disableSubGroupC = true;\r\n        this.masterService.groupSelectObj.SUBGROUP_C = \"\";\r\n        \r\n      }\r\n    })\r\n  }\r\n\r\n  selectSubgroupC(e){\r\n    let subGroupID = e.target.value;\r\n    this.parentGroupID = subGroupID;\r\n    // this.masterService.groupSelectObj.SUBGROUP_C = e.target.value;\r\n  }\r\n\r\n  sortAccountListByName(){\r\n    // //console.log(\"ACID k ?\", this.selectedNode);\r\n    this.masterService.getAcidWiseAccountList(this.selectedNode.ACID).subscribe(res => {\r\n      if (res.status == \"ok\") {\r\n        this.AccountService.partyList = res ? res.result : [];\r\n      } else {\r\n        this.AccountService.partyList = [];\r\n      }\r\n    });\r\n  }\r\n\r\n  sortAccountListByDate(){\r\n    // //console.log(\"ACID k @@@\", this.selectedNode);\r\n    this.masterService.getAcidWiseAccountList(this.selectedNode.ACID,\"sortItemByDate\").subscribe(res => {\r\n      if (res.status == \"ok\") {\r\n        this.AccountService.partyList = res ? res.result : [];\r\n      } else {\r\n        this.AccountService.partyList = [];\r\n      }\r\n    });\r\n  }\r\n\r\n  showAllAccountList(){\r\n    this.selectedNode = {};\r\n    this.selectedNode.ACID = 'AL';\r\n    // this.masterService.SelectedGroup = this.selectedNode.ACID;\r\n    this.loadListSubject.next(this.selectedNode);\r\n\r\n\r\n    this.masterService.getAcidWiseAccountList('AL').subscribe(res => {\r\n      if(res.status == \"ok\"){\r\n        this.AccountService.partyList = res ? res.result : [];\r\n      }\r\n      else{\r\n        this.AccountService.partyList = [];\r\n      }\r\n    })\r\n  }\r\n\r\n  ExportAccountLedger() {\r\n    if(!this.masterService.getRequestOption()){\r\n      return;\r\n    }\r\n    this.masterService.getAccountListOfTree().subscribe(res => {\r\n      this.ParentList = res;\r\n    })\r\n    this.showAccountLedgerFilterpopUp = true;\r\n  }\r\n\r\n  changeAccountType() {\r\n    this.LedgerFilterObj.SUBGROUP = \"\";\r\n    this.LedgerFilterObj.ACID = \"\";\r\n  }\r\n\r\n  changeAccountGroup(event) {\r\n    this.LedgerFilterObj.SUBGROUP = \"\";\r\n    this.LedgerFilterObj.ACID = \"\";\r\n    this.masterService.getSubGroupForQuickAccountMaster(this.LedgerFilterObj.MAINGROUP).subscribe(res => {\r\n      this.SubGroupAccountMaster = res.result;\r\n    })\r\n\r\n    this.masterService.getAcidWiseAccountList(event).subscribe((res:any) => {\r\n      // let abc = res.filter(x => x.ACID == this.LedgerFilterObj.MAINGROUP);\r\n      // this.ChildrenList = abc.length > 0 && abc[0].children.filter(x => x.TYPE == \"A\");\r\n      this.ChildrenList=res.result;\r\n    })\r\n  }\r\n  \r\n}\r\nexport interface IsLedgerFilter {\r\n  FILTER:string;\r\n  type: string;\r\n  accountType: string;\r\n  accountName: string;\r\n  ACID: string;\r\n  MAINGROUP: string;\r\n  SUBGROUP: string;\r\n}\r\nexport interface  ExportLedgerFilterDto{\r\n  data: string;\r\n  filtername: string;\r\n  \r\n}\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/pages/masters/components/Account-Ledger-New/AccLedgerTable.component.ts","import { Component, Injector } from '@angular/core';\r\nimport { AuthService } from \"../../../../common/services/permission/authService.service\"; \r\nimport { ServerDataSource } from '../../../../node_modules/ng2-smart-table/';\r\nimport 'style-loader!./smartTables.scss';\r\nimport { MasterRepo } from '../../../../common/repositories/masterRepo.service';\r\nimport { Router } from '@angular/router';\r\nimport { MdDialog } from \"@angular/material\";\r\nimport { BehaviorSubject } from \"rxjs/BehaviorSubject\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { AuthDialog } from \"../../../modaldialogs/authorizationDialog/authorizationDialog.component\";\r\nimport { AppComponentBase } from '../../../../app-component-base';\r\nimport { BankMasterService } from './bank.service';\r\n\r\n@Component({\r\n  selector: 'bank-list',\r\n  template: require('./bank-list.component.html'),\r\n  providers: [MasterRepo,BankMasterService],\r\n  styles: [require('../../../modal-style.css')],\r\n})\r\nexport class BankListComponent extends AppComponentBase{\r\n\r\n  settings = {\r\n    mode: 'external',\r\n    add: {\r\n      addButtonContent: '',\r\n      createButtonContent: '<i class=\"ion-checkmark\"></i>',\r\n      cancelButtonContent: '<i class=\"ion-close\"></i>',\r\n    },\r\n    // view: {\r\n    //   viewButtonContent: 'View',\r\n    //   saveButtonContent: '<i class=\"ion-checkmark\"></i>',\r\n    //   cancelButtonContent: '<i class=\"ion-close\"></i>',\r\n    // },\r\n    edit: {\r\n      editButtonContent: '<button type=\"button\" class=\"btn btn-info\">Edit</button>',\r\n      saveButtonContent: '<i class=\"ion-checkmark\"></i>',\r\n      cancelButtonContent: '<i class=\"ion-close\"></i>',\r\n    },\r\n    delete: {\r\n      deleteButtonContent: ' ',\r\n      confirmDelete: true\r\n    },\r\n    pager:{\r\n      display:true,\r\n      perPage:10\r\n    },\r\n    columns: {\r\n      ADDRESS: {\r\n        title: 'Branch Name',\r\n        type: 'string'\r\n      },\r\n      ACCODE: {\r\n        title: 'Branch Code',\r\n        type: 'string'\r\n      },\r\n      ACNAME: {\r\n        title: 'Bank Name',\r\n        type: 'string'\r\n      }, \r\n      IFSC_CODE: {\r\n        title: 'IFSC CODE',\r\n        type: 'number'\r\n      },\r\n      ISACTIVE: {\r\n        title: 'Status',\r\n        type: 'number',\r\n        valuePrepareFunction: (value) => { return value==1?'Active':'InActive'; },\r\n        filter: {\r\n          type: 'list',\r\n            config: {\r\n              selectText: 'Show all',\r\n                list: [\r\n                  { value: 1, title: 'Active' },\r\n                  { value: 0, title: 'InActive' },\r\n                ]\r\n              }\r\n            }\r\n      }\r\n      \r\n    }\r\n  };\r\n  source: ServerDataSource;\r\n  messageSubject: BehaviorSubject<string> = new BehaviorSubject<string>(\"You are not authorized.\");\r\n  message$: Observable<string> = this.messageSubject.asObservable();\r\n  constructor(\r\n    //private _authService: AuthService, \r\n    private router: Router, \r\n    public dialog: MdDialog,\r\n    public injector : Injector\r\n    ) {\r\n      super(injector);\r\n    try { \r\n      let apiUrl = `${this.apiUrl}/getAllBankMasterPagedList`;\r\n      this.source =  this.source = new ServerDataSource(this._http, \r\n        { endPoint: apiUrl, \r\n          dataKey : \"data\", \r\n          pagerPageKey : \"currentPage\",\r\n          pagerLimitKey : \"maxResultCount\"\r\n        }); \r\n     \r\n    } catch (ex) {\r\n      //console.log(ex);\r\n      alert(ex);\r\n    }\r\n  }\r\n  \r\n  addNewBank(): void {\r\n    try {\r\n     \r\n        this.router.navigate([\"./pages/account/AccountLedger/bank/add-bank\", { mode: \"add\", returnUrl: this.router.url }])\r\n \r\n    } catch (ex) {\r\n      //console.log(ex);\r\n      alert(ex);\r\n    }\r\n  }\r\n\r\n  onEditClick(event): void {\r\n    try {\r\n    this.router.navigate([\"./pages/account/AccountLedger/bank/add-bank\", { ACID: event.data.ACID, mode: \"edit\", returnUrl: this.router.url }]);\r\n      \r\n    } catch (ex) {\r\n      //console.log(ex);\r\n      alert(ex);\r\n    }\r\n  }\r\n\r\n  onViewClick(event): void {\r\n    try {\r\n      if(!this._authService.getRequestOption()){\r\n        return;\r\n      }\r\n     // this.router.navigate([\"pages/masters/Branch\", { name: event.data.BRANCHID, mode: \"view\", returnUrl: this.router.url }]);\r\n      if (this._authService.checkMenuRight(\"bank\", \"view\") == true) {\r\n        this.router.navigate([\"./pages/account/AccountLedger/bank\", { mode: \"view\", returnUrl: this.router.url }])\r\n      } else {\r\n        this.messageSubject.next(\"You are not authorized to View new bank.\");\r\n        this.openAuthDialog();\r\n      }\r\n    \r\n    } catch (ex) {\r\n      //console.log(ex);\r\n      alert(ex);\r\n    }\r\n  }\r\n  onDeleteConfirm(event): void {\r\n    if(!this._authService.getRequestOption()){\r\n      return;\r\n    }\r\n    if (window.confirm('Are you sure you want to delete?')) {\r\n      event.confirm.resolve();\r\n    } else {\r\n      event.confirm.reject();\r\n    }\r\n  }\r\n\r\n  openAuthDialog() {\r\n    var message = { header: \"Information\", message: this.message$ };\r\n    this.dialog.open(AuthDialog, { hasBackdrop: true, data: message });\r\n  }\r\n  \r\n}\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/pages/masters/components/Bank/bank-list.component.ts","import { Component } from \"@angular/core\";\r\nimport { MasterRepo } from \"../../../../common/repositories\";\r\nimport { FormGroup, FormBuilder, Validators } from \"@angular/forms\";\r\nimport { AlertService } from \"../../../../common/services/alert/alert.service\";\r\nimport { PreventNavigationService } from \"../../../../common/services/navigation-perventor/navigation-perventor.service\";\r\nimport { Router, ActivatedRoute } from \"@angular/router\";\r\nimport { TAcList } from \"../../../../common/interfaces\";\r\nimport { SpinnerService } from \"../../../../common/services/spinner/spinner.service\";\r\nimport { Subscription } from \"rxjs\";\r\nimport { AuthService } from \"../../../../common/services/permission\";\r\nimport { BankMasterService } from \"./bank.service\";\r\n\r\n\r\n@Component({\r\n  selector: 'bankdetails',\r\n  template: require('./bank.component.html'),\r\n  providers: [MasterRepo, BankMasterService],\r\n  styles: [require('../../../modal-style.css')],\r\n})\r\nexport class BankComponent {\r\n  form: FormGroup;\r\n  viewMode = false;\r\n  mode: string = \"add\";\r\n  private returnUrl: string\r\n  userProfile: any;\r\n  private subcriptions: Array<Subscription> = [];\r\n  modeTitle: string = '';\r\n  AcListObj: TAcList = <TAcList>{};\r\n  initialTextReadOnly: boolean = false;\r\n  StateList:any[]=[];\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private alertService: AlertService,\r\n    private preventNavigationService: PreventNavigationService,\r\n    private router: Router,\r\n    private loadingService: SpinnerService,\r\n    protected MasterService: MasterRepo,\r\n    private _authService: AuthService,\r\n    private _activatedRoute: ActivatedRoute,\r\n    private _bankService: BankMasterService\r\n  ) {\r\n    this.userProfile = this._authService.getUserProfile();\r\n    this.buildForm();\r\n    this.MasterService.getState().subscribe(res => {\r\n      if (res.status == 'ok') {\r\n        this.StateList = res.result;\r\n      }\r\n    })\r\n  }\r\n\r\n  ngOnInit() {\r\n    try {\r\n      if (!!this._activatedRoute.snapshot.params['returnUrl']) {\r\n        this.returnUrl = this._activatedRoute.snapshot.params['returnUrl'];\r\n      }\r\n      if (!!this._activatedRoute.snapshot.params['ACID']) {\r\n        let BID: string = \"\";\r\n        BID = this._activatedRoute.snapshot.params['ACID'];\r\n\r\n        this._bankService.getBankList(BID)\r\n          .subscribe(data => {\r\n            if (data.status == 'ok') {\r\n              //console.log(data);\r\n              let bankObj = data.result;\r\n              ////console.log(\"bank Obj value\" + bankObj);\r\n              this.form.patchValue({\r\n                ACID: bankObj.ACID,\r\n                ADDRESS: bankObj.ADDRESS,\r\n                TYPE: bankObj.TYPE,\r\n                ACNAME: bankObj.ACNAME,\r\n                CRLIMIT: bankObj.CRLIMIT,\r\n                BANKACCOUNTNUMBER: bankObj.BANKACCOUNTNUMBER,\r\n                           \r\n                CITY: bankObj.CITY,\r\n                PHONE: bankObj.PHONE,\r\n                GSTNO: bankObj.GSTNO,\r\n                PSTYPE: bankObj.PSTYPE,\r\n                           \r\n                ISACTIVE: bankObj.ISACTIVE,\r\n                PARENT: bankObj.PARENT,\r\n                MAPID: bankObj.MAPID,\r\n                HASSUBLEDGER: bankObj.HASSUBLEDGER,\r\n                            ACCODE:bankObj.ACCODE,\r\n                            IFCS_CODE:bankObj.IFCS_CODE,\r\n                            CTYPE:bankObj.CTYPE\r\n\r\n              })\r\n              if (this._activatedRoute.snapshot.params['mode'] == null) {\r\n                this.modeTitle = \"Edit Bank\";\r\n              } else if (this._activatedRoute.snapshot.params['mode'] == \"view\") {\r\n                this.modeTitle = \"View Bank\";\r\n              }\r\n              this.mode = 'edit';\r\n              this.initialTextReadOnly = true;\r\n            }\r\n            else {\r\n              this.mode = '';\r\n              this.modeTitle = \"Edit -Error in Bank Hierarchy\";\r\n              this.initialTextReadOnly = true;\r\n            }\r\n          }, error => {\r\n            this.mode = '';\r\n            this.modeTitle = \"Edit2 -Error in Bank\";\r\n            //this.masterService.resolveError(error, \"Company Hierarchy - getBranch\");\r\n          }\r\n          )\r\n      }\r\n      else {\r\n        this.mode = \"add\";\r\n        this.modeTitle = \"Add Bank\";\r\n        this.initialTextReadOnly = false;\r\n\r\n      }\r\n\r\n    } catch (ex) {\r\n    }\r\n  }\r\n\r\n  buildForm() {\r\n    this.form = this.fb.group({\r\n      ACID: [\"\"],\r\n      ADDRESS: [\"\", [Validators.required]],\r\n      TYPE: [\"A\"],\r\n      ACNAME: [\"\", [Validators.required]],\r\n      CRLIMIT: [0],\r\n      BANKACCOUNTNUMBER: [\"\"],\r\n      CITY: [\"\"],\r\n      PHONE: [\"\"],\r\n      GSTNO: [\"\"],\r\n      PSTYPE: [\"\"],\r\n      PType: [\"V\"],\r\n      ISACTIVE: [1],\r\n      PARENT: [\"AT1069\"],\r\n      MAPID: [\"B\"],\r\n      HASSUBLEDGER: [0],\r\n      LEVELS: [4],\r\n      ACTYPE: [\"AT\"],\r\n      CTYPE:[\"\"],\r\n      ACCODE : [\"\"],\r\n      IFCS_CODE:[\"\"],\r\n      STATE:[\"\"],\r\n      BANKBUILDING:[\"\"]//bankbuilding use for Country\r\n    });\r\n    this.form.valueChanges.subscribe(data => {\r\n      this.MasterService.BankObj = data;\r\n    })\r\n    this.onFormChanges();\r\n  }\r\n\r\n  onFormChanges(): void {\r\n    this.form.valueChanges.subscribe(val => {\r\n      if (this.form.dirty)\r\n        this.preventNavigationService.preventNavigation(true);\r\n    });\r\n  }\r\n\r\n  onSave() {\r\n    if(!this.MasterService.getRequestOption()){\r\n      return;\r\n    }\r\n\r\n   if(this.form.controls['CTYPE'].value==null \r\n   || this.form.controls['ACNAME'].value==null\r\n   ||this.form.controls['CTYPE'].value==\"\" \r\n   || this.form.controls['ACNAME'].value==\"\"\r\n   ||this.form.controls['CTYPE'].value==undefined \r\n   || this.form.controls['ACNAME'].value==undefined\r\n   ){\r\n    this.alertService.error(\"Please Filll the mandatory fields\")\r\n   }else{\r\n    try {\r\n      this.onSubmit();\r\n    } catch (ex) {\r\n      this.alertService.error(ex);\r\n    }\r\n   }\r\n\r\n  }\r\n  onSubmit() {\r\n    try {\r\n\r\n      let saveModel = Object.assign(<TAcList>{}, this.form.value);\r\n      saveModel.DIV = this.userProfile.userDivision;\r\n      if (this.mode == \"edit\") {\r\n\r\n      } else {\r\n      }\r\n      // ////console.log(\"ALedger Data\"+JSON.stringify(saveModel));\r\n      this.loadingService.show(\"Saving Data please wait...\");\r\n      let sub = this.MasterService.saveAccount(\r\n        this.mode,\r\n        saveModel,\r\n        null\r\n      ).subscribe(\r\n        data => {\r\n          this.loadingService.hide();\r\n          if (data.status == \"ok\") {\r\n            ////console.log(\"PARTYDATA@@@@\", data);\r\n            this.alertService.success(\"Data Saved Successfully\");\r\n            this.preventNavigationService.preventNavigation(false);\r\n            setTimeout(() => {\r\n              this.router.navigate([this.returnUrl]);\r\n            }, 1000);\r\n          } else {\r\n\r\n            this.alertService.error(\r\n              \"Error in Saving Data:\" + data.result._body\r\n            );\r\n          }\r\n        },\r\n        error => {\r\n          this.loadingService.hide();\r\n          this.alertService.error(error);\r\n        }\r\n      );\r\n      this.subcriptions.push(sub);\r\n    } catch (ex) {\r\n      this.alertService.error(ex);\r\n    }\r\n  }\r\n\r\n  cancel() {\r\n    try {\r\n      this.router.navigate([this.returnUrl]);\r\n    } catch (ex) {\r\n      //console.log(ex);\r\n      this.alertService.error(ex);\r\n    }\r\n  }\r\n\r\n\r\n\r\n  disabled() {\r\n    try {\r\n      if (this.viewMode == true) {\r\n        return \"#EBEBE4\";\r\n      } else {\r\n        return \"\";\r\n      }\r\n    } catch (ex) {\r\n      //console.log(ex);\r\n      this.alertService.error(ex);\r\n    }\r\n  }\r\n\r\n  editDisabled() {\r\n    try {\r\n      if (this.mode == \"edit\") {\r\n        return \"#EBEBE4\";\r\n      } else {\r\n        return \"\";\r\n      }\r\n    } catch (ex) {\r\n      //console.log(ex);\r\n      this.alertService.error(ex);\r\n    }\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/pages/masters/components/Bank/bank.component.ts","import { NgModule } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\r\nimport { TreeModule } from \"angular-tree-component\";\r\nimport { NgaModule } from \"../../../../theme/nga.module\";\r\nimport { Ng2SmartTableModule } from \"../../../../node_modules/ng2-smart-table/src/ng2-smart-table.module\";\r\nimport { GenericPopupGridModule } from \"../../../../common/popupLists/generic-grid/generic-popup-grid.module\";\r\nimport { BankComponent } from \"./bank.component\";\r\nimport { BankRoutingModule } from \"./bank.routing\";\r\nimport { BankListComponent } from \"./bank-list.component\";\r\n\r\n\r\n\r\n@NgModule({\r\n  imports: [\r\n    TreeModule,\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    BankRoutingModule,\r\n    GenericPopupGridModule.forRoot(),\r\n    NgaModule,\r\n    Ng2SmartTableModule,\r\n  ],\r\n  declarations: [\r\n    BankListComponent,\r\n    BankComponent,\r\n      \r\n  ],\r\n  exports:[\r\n    BankComponent\r\n  ]\r\n})\r\nexport class BankModule{ }\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/pages/masters/components/Bank/bank.module.ts","import { Http, Response, RequestOptions, Headers } from '@angular/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { ActivatedRoute, ActivatedRouteSnapshot } from '@angular/router';\r\nimport { AuthService } from '../../../../common/services/permission';\r\nimport {Branch} from \"../../../../common/interfaces/TrnMain\";\r\nimport { Subject } from 'rxjs/subject';\r\nimport {GlobalState} from '../../../../../app/global.state';\r\n@Injectable()\r\n\r\nexport class BankMasterService {\r\n    \r\n    constructor(private http: Http, private activatedRoute: ActivatedRoute, private authService: AuthService,private state:GlobalState) {\r\n    }\r\n   private get apiUrl():string{\r\n        let url=this.state.getGlobalSetting(\"apiUrl\");\r\n        let apiUrl =\"\";\r\n        \r\n        if(!!url && url.length>0){apiUrl=url[0]};\r\n        return apiUrl\r\n    } \r\n    getBankList(bid:string) {\r\n        let res={status:\"error\",result:\"\"};\r\n        let returnSubject:Subject<any>=new Subject();\r\n        ////console.log(\"about to edit\");\r\n        let bodyData = {mode:'query',data:{BID:bid}};\r\n        this.http.post(this.apiUrl +'/getBankMasterlist',bodyData,this.getRequestOption())\r\n            .subscribe(response=>{\r\n                let data = response.json();\r\n                if(data.status == 'ok'){\r\n                    returnSubject.next(data);\r\n                    returnSubject.unsubscribe();\r\n\r\n                }\r\n                else{\r\n                    returnSubject.next(data)\r\n                    returnSubject.unsubscribe();\r\n                }\r\n            },error =>{\r\n                res.status='error';res.result=error;\r\n                returnSubject.next(res);\r\n                returnSubject.unsubscribe();\r\n            }\r\n            );\r\n            return returnSubject;\r\n       /* return this.http.get(\"/rategroups.json\").toPromise()\r\n            .then((res) => res.json());*/\r\n            \r\n     }\r\n     \r\n      private getRequestOption() {\r\n        let headers: Headers = new Headers({ 'Content-type': 'application/json', 'Authorization': this.authService.getAuth().token })\r\n        //console.log({ headers: headers });\r\n        return new RequestOptions({ headers: headers });\r\n    }\r\n   \r\n}\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/pages/masters/components/Bank/bank.service.ts","import { Component, Input, Output, EventEmitter, OnInit, ViewChild } from '@angular/core';\r\nimport { MasterRepo } from '../../../../common/repositories';\r\n\r\n@Component(\r\n    {\r\n        selector: 'CustomerLedger',\r\n        template:`<pLedgerTable></pLedgerTable>`,\r\n        styles: [require('../../../Style.css')],\r\n\r\n    }\r\n)\r\nexport class CustomerLedgerComponent {\r\n    // Ptype: string\r\n    constructor(private MasterService: MasterRepo) {\r\n        // this.Ptype=\"C\"\r\n        this.MasterService.PType = 'C';\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/pages/masters/components/PLedger/CustomerLedger.component.ts","import { Component, Input, Output, EventEmitter, OnInit, ViewChild } from '@angular/core';\r\nimport { MasterRepo } from '../../../../common/repositories';\r\n\r\n@Component(\r\n    {\r\n        selector: 'SupplierLedger',\r\n        template:`<pLedgerTable></pLedgerTable>`,\r\n        styles: [require('../../../Style.css')],\r\n\r\n    }\r\n)\r\nexport class SupplierLedgerComponent {\r\n    // Ptype: string\r\n    constructor(private MasterService: MasterRepo) {\r\n        // this.Ptype=\"V\"\r\n        this.MasterService.PType = 'V';\r\n    }\r\n\r\n \r\n\r\n\r\n  \r\n  \r\n\r\n   \r\n}\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/pages/masters/components/PLedger/SupplierLedger.component.ts","import { Observable } from 'rxjs/Observable';\r\nimport { Subject } from 'rxjs/Subject';\r\nimport { Component, ViewChild, ElementRef, HostListener } from '@angular/core';\r\nimport { AuthService } from \"./../../../../common/services/permission/authService.service\";\r\nimport { ModalDirective } from 'ng2-bootstrap'\r\nimport { Router } from \"@angular/router\";\r\nimport { TAcList, SelectedDivisions } from '../../../../common/interfaces/Account.interface';\r\nimport { FormBuilder } from '@angular/forms';\r\nimport { MasterRepo } from '../../../../common/repositories/masterRepo.service';\r\nimport { TreeNode, TREE_ACTIONS, KEYS, IActionMapping, TreeComponent } from 'angular-tree-component';\r\nimport { LocalDataSource } from '../../../../node_modules/ng2-smart-table/';\r\nimport 'style-loader!../Companies/smartTables.scss';\r\nimport { TreeViewAcService } from './accountLedger.service';\r\nimport { Subscription } from \"rxjs/Subscription\";\r\nimport { ContextMenuComponent } from 'ngx-contextmenu';\r\nimport { LedgComponent } from './addLedg.component';\r\nimport { PreventNavigationService } from '../../../../common/services/navigation-perventor/navigation-perventor.service';\r\nimport { AlertService } from '../../../../common/services/alert/alert.service';\r\nimport { SpinnerService } from '../../../../common/services/spinner/spinner.service';\r\nimport { PLedgerComponent } from '../PLedger/PLedger.component';\r\nimport { HotkeysService, Hotkey } from 'angular2-hotkeys';\r\nimport { Division } from '../../../../common/interfaces';\r\nimport { TransactionService } from '../../../../common/Transaction Components/transaction.service';\r\nimport { GenericPopUpComponent, GenericPopUpSettings } from '../../../../common/popupLists/generic-grid/generic-popup-grid.component';\r\n\r\nconst actionMapping: IActionMapping = {\r\n\r\n  mouse: {\r\n    contextMenu: (tree, node, $event) => {\r\n      $event.preventDefault();\r\n      alert(`context menu for ${node.data.name}`);\r\n    },\r\n    dblClick: (tree, node, $event) => {\r\n      if (node.hasChildren) TREE_ACTIONS.TOGGLE_EXPANDED(tree, node, $event);\r\n    },\r\n    click: (tree, node, $event) => {\r\n      $event.shiftKey\r\n        ? TREE_ACTIONS.TOGGLE_SELECTED_MULTI(tree, node, $event)\r\n        : TREE_ACTIONS.TOGGLE_SELECTED(tree, node, $event)\r\n    }\r\n  },\r\n  keys: {\r\n    [KEYS.ENTER]: (tree, node, $event) => node.setActiveAndVisible()\r\n    //[KEYS.ENTER]: (tree, node, $event) =>  alert(`This is ${node.data.name}`)\r\n  }\r\n};\r\n\r\n@Component({\r\n  selector: \"accountLedger\",\r\n  template: require('./accountLedgerTable.component.html'),\r\n  // styles: [require('../../../Style.css')],\r\n  providers: [TreeViewAcService, AuthService]\r\n\r\n})\r\n\r\nexport class AccountLedgerComponent {\r\n\r\n\r\n  @ViewChild('childModal') childModal: ModalDirective;\r\n  @ViewChild('fields') fieldsEl: ElementRef;\r\n  @ViewChild(\"LedgerChild\") LedgerChild: LedgComponent;\r\n  @ViewChild('lgModal') lgModel: ModalDirective;\r\n  @ViewChild(TreeComponent)\r\n  @ViewChild('DeleteAcc') DeleteAcc: ModalDirective;\r\n  @ViewChild(\"PLedgerChild\") PLedgerChild: PLedgerComponent;\r\n  @ViewChild(ContextMenuComponent) public contextMenu: ContextMenuComponent;\r\n  @ViewChild(\"Name\") _BE: ElementRef;\r\n  @ViewChild('ShiftParent') ShiftParent: ModalDirective;\r\n\r\n  DialogMessage: string = \"You are not authorized\";\r\n  public get treeEnable(): Boolean { return this._treeEnable; }\r\n  public set treeEnable(value: Boolean) { this._treeEnable = value; }\r\n  public nodes: any[] = [];\r\n  PartialAccountList: any[] = [];\r\n  data: Array<any> = [];\r\n  private subcriptions: Array<Subscription> = [];\r\n  dynamicDDList: any[] = [];\r\n  public mode: string;\r\n  public grp: string;\r\n  modeTitle: string;\r\n  root: string;\r\n  addMode: boolean = false;\r\n  selectedNodeEdit: number = 0;\r\n  GroupStatus: string;\r\n  fromTreeTag: number;\r\n  autoCalculationParam: any = <any>{};\r\n  settings = {\r\n    mode: \"external\",\r\n    add: {\r\n      addButtonContent: '',\r\n    },\r\n    // view: {\r\n    //   viewButtonContent: 'View',\r\n    //   saveButtonContent: '<i class=\"ion-checkmark\"></i>',\r\n    //   cancelButtonContent: '<i class=\"ion-close\"></i>',\r\n    // },\r\n    edit: {\r\n      editButtonContent: 'Edit',\r\n      saveButtonContent: '<i class=\"ion-checkmark\"></i>',\r\n      cancelButtonContent: '<i class=\"ion-close\"></i>',\r\n    },\r\n    delete: {\r\n      deleteButtonContent: ' ',\r\n      confirmDelete: true\r\n    },\r\n    columns: {\r\n      ACID: {\r\n        title: 'AC ID',\r\n        type: 'number'\r\n      },\r\n      PARENT: {\r\n        title: 'Parent',\r\n        type: 'string'\r\n      },\r\n      ACNAME: {\r\n        title: 'AcName',\r\n        type: 'string'\r\n      }\r\n    }\r\n  };\r\n  private _treeEnable: Boolean = true;\r\n  public selectedNode: any;\r\n  public tree: TreeComponent;\r\n  source: LocalDataSource = new LocalDataSource();\r\n  busy: Subscription;\r\n  loadListSubject: Subject<any> = new Subject<any>();\r\n  loadList$: Observable<any> = this.loadListSubject.asObservable();\r\n  userProfile: any;\r\n  formObj: any = <any>{}\r\n  isGroup: number;\r\n  PrimaryGrpObj: any;\r\n  UnderObj: any;\r\n  nodeObj: any = <any>{}\r\n  isOnlyMainParent = 0\r\n  Parent: any = <any>{}\r\n  BankPartyVerification: any = <any>{}\r\n  AdditionalInfo: number = 0;\r\n  showPLedgerInfo: number = 0;\r\n  showCustomer: number = 0;\r\n  showBank: number = 0\r\n  showAssets = 0;\r\n  PTypeForParty: any;\r\n  HSN_Active = 0;\r\n  Party: any;\r\n  isAccount = true;\r\n  parentHasSubLedger = false;\r\n  tagForDisplayingAccname: string;\r\n  OverdraftIs: string;\r\n  division: any[] = [];\r\n  divisionList: any[] = [];\r\n  showDivSelectionTable: boolean;\r\n  SelectedDivisionList: SelectedDivisions[] = [];\r\n  divisioncheckObj: any = <any>{}\r\n  enableDivisionMapping: boolean;\r\n  ParentList: any[] = [];\r\n  ShiftParentObj: any = <any>{};\r\n  showShiftParentButton: boolean;\r\n  showAccountLedgerFilterpopUp: boolean;\r\n  LedgerFilterObj: IsLedgerFilter = <IsLedgerFilter>{};\r\n  FormName: ExportLedgerFilterDto = <ExportLedgerFilterDto>{};\r\n  SubGroupAccountMaster: any[] = [];\r\n  ChildrenList: any[] = [];\r\n\r\n  constructor(private masterService: MasterRepo, private _authService: AuthService, private router: Router,\r\n    private AccountService: TreeViewAcService, private _hotkeysService: HotkeysService,\r\n    private preventNavigationService: PreventNavigationService,\r\n    private alertService: AlertService,\r\n    private loadingService: SpinnerService,\r\n    private _fb: FormBuilder, public _transactionService: TransactionService) {\r\n    //console.log(\"@@authservice\", _authService.getPhiscalInfo())\r\n\r\n    // this.lgModel.show();\r\n    // ////console.log(\"@@_transactionService.userSetting.ENABLESUBLEDGER\", this._transactionService.userSetting.ENABLESUBLEDGER)\r\n    this.mode = \"add\";\r\n    this.masterService.PType = '';\r\n    this.userProfile = this._authService.getUserProfile();\r\n    this.busy = this.masterService.getacListTree().map(x => { return x })\r\n      .subscribe(res => {\r\n        this.nodes = res;\r\n        if (this.tree != null) {\r\n          this.tree.treeModel.update();\r\n        }\r\n      }, error => {\r\n        var err = this.masterService.resolveError(error, \"accountLedger - accountLedger\");\r\n        if (err) { alert(err.json()); }\r\n      }\r\n      );\r\n\r\n    this.division = [];\r\n    this.masterService.getAllDivisions()\r\n      .subscribe(res => {\r\n        this.division.push(<Division>res);\r\n        this.divisionList.push(<Division>res);\r\n      }, error => {\r\n        this.masterService.resolveError(error, \"divisions - getDivisions\");\r\n      });\r\n\r\n    if (this.masterService.userSetting.DIVISIONWISEACLISTING == 1) {\r\n      this.enableDivisionMapping = true\r\n      this.formObj.enableDivSelectionTable = false;\r\n\r\n    }\r\n    else {\r\n      this.enableDivisionMapping = false;\r\n    }\r\n\r\n\r\n  }\r\n  ngOnInit() {\r\n    this.autoCalculationParam.igst = 0;\r\n    this.autoCalculationParam.cgst = 0;\r\n    this.autoCalculationParam.sgst = 0;\r\n    this.autoCalculationParam.cess = 0;\r\n    \r\n    this._hotkeysService.add(\r\n      new Hotkey(\r\n        \"f10\",\r\n        (event: KeyboardEvent): boolean => {\r\n          event.preventDefault();\r\n          this.ngOnInit();\r\n          return false;\r\n        }\r\n      )\r\n    );\r\n    this.formObj.DIV = this.userProfile.userDivision;\r\n    this.enableDivision = false;\r\n    \r\n\r\n    this.loadListSubject.switchMap(snode => {\r\n      this.data = [];\r\n      return this.AccountService.getParentWiseAccountList(snode.ACID)\r\n    })\r\n      .subscribe(res => {\r\n        \r\n        this.data.push(<any>res);\r\n        this.source.load(this.data);\r\n        if (this.AccountService.selectAcdivisionList.length > 0) {\r\n          this.formObj.DIV = this.AccountService.selectAcdivisionList[0].MAINDIV;\r\n          \r\n          this.changeDivision(this.AccountService.selectAcdivisionList[0].MAINDIV)\r\n          this.divisioncheckObj.ShareAccount = 1;\r\n          this.ClickShareAccount(\"x\");\r\n          this.enableDivSelectionTable(1);\r\n          // //console.log(\"checkValue##\", this.divisionList, this.AccountService.selectAcdivisionList)\r\n          for (let i of this.divisionList) {\r\n            for (let j of this.AccountService.selectAcdivisionList) {\r\n              \r\n              if (i.INITIAL == j.DIV) {\r\n                this.AccountService.selectAcdivisionList[0].MAINDIV == j.DIV ? i.isDefault = true : i.isDefault = false;\r\n               \r\n                i.isCheck = true;\r\n              }\r\n\r\n            }\r\n          }\r\n          if (this.AccountService.selectAcdivisionList[0].ISCOMMONAC == 1) {\r\n              this.divisioncheckObj.ShareAllDiv = \"2\";\r\n            this.formObj.ISCOMMONAC = 1;\r\n            this.divisioncheckObj.ShareAccount = 1;\r\n            this.showDivSelectionTable = false;\r\n          }\r\n          else {\r\n            this.divisioncheckObj.ShareAllDiv = \"0\";\r\n            this.formObj.ISCOMMONAC = 0;\r\n            this.divisioncheckObj.ShareSelectiveDiv = \"1\";\r\n            this.divisioncheckObj.ShareAccount = 1;\r\n          }\r\n        }\r\n        else {\r\n          this.divisioncheckObj.ShareAccount = 0;\r\n          this.ClickShareAccount(\"x\");\r\n          this.enableDivSelectionTable(0);\r\n         \r\n          if(this.selectedNode.ISCOMMONAC == 0){\r\n            this.formObj.DIV = this.selectedNode.DIV;\r\n          }else{\r\n            this.formObj.DIV = this.userProfile.userDivision;\r\n          }\r\n\r\n        }\r\n\r\n      })\r\n\r\n\r\n      this.divisioncheckObj.ShareSelectiveDiv = 1;\r\n\r\n    // this.loadListSubject.switchMap(snode => {\r\n    //   return this.AccountService.getAccountAutomationGSTRate(snode.ACID, snode.PARENTID)\r\n    // })\r\n    //   .subscribe(res => {\r\n    //     let gstRate: any = res;\r\n    //     for (let i in gstRate) {\r\n    //       if (gstRate[i].PARTICULAR == \"Integrated Tax\") {\r\n    //         this.autoCalculationParam.igst = gstRate[i].RATE;\r\n    //       }\r\n    //       if (gstRate[i].PARTICULAR == \"Central Tax\") {\r\n    //         this.autoCalculationParam.cgst = gstRate[i].RATE;\r\n    //       }\r\n    //       if (gstRate[i].PARTICULAR == \"UT Tax\") {\r\n    //         this.autoCalculationParam.sgst = gstRate[i].RATE;\r\n    //       }\r\n    //       if (gstRate[i].PARTICULAR == \"Cess\") {\r\n    //         this.autoCalculationParam.cess = gstRate[i].RATE;\r\n    //       }\r\n    //     };\r\n    //   })\r\n    this.isParentBank = false;\r\n  }\r\n\r\n\r\n  ngAfterViewInit() {\r\n    this._BE.nativeElement.focus();\r\n    this.formObj.ISCOMMON = 0;\r\n  }\r\n\r\n  getChildren(node: any) {\r\n    return new Promise((resolve, reject) => {\r\n      setTimeout(() => resolve(this.asyncChildren.map((c) => {\r\n        return Object.assign({}, c, {\r\n          hasChildren: node.level < 5\r\n        });\r\n      })), 1000);\r\n    });\r\n  }\r\n  asyncChildren = [\r\n    {\r\n      name: 'child2.1',\r\n      subTitle: 'new and improved'\r\n    }, {\r\n      name: 'child2.2',\r\n      subTitle: 'new and improved2'\r\n    }\r\n  ];\r\n  addNode(addednode) {\r\n    var Node = this.tree.treeModel.getFocusedNode();\r\n    // if (fNode == null) {\r\n    //   this.tree.treeModel.nodes.push(addednode);\r\n    // }\r\n    // else {\r\n    //   alert(\"child\")\r\n    this.tree.treeModel.getFocusedNode().data.children.push(addednode);\r\n    // }\r\n    this.tree.treeModel.update();\r\n  }\r\n\r\n  childrenCount(node: TreeNode): string {\r\n    return node && node.children ? `(${node.children.length})` : '';\r\n  }\r\n\r\n  filterNodes(text, tree) {\r\n    try {\r\n      tree.treeModel.filterNodes(text, true);\r\n    } catch (ex) {\r\n      alert(ex);\r\n    }\r\n  }\r\n\r\n  activateSubSub(tree) {\r\n    // tree.treeModel.getNodeBy((node) => node.data.name === 'subsub')\r\n    tree.treeModel.getNodeById(1001)\r\n      .setActiveAndVisible();\r\n  }\r\n\r\n  customTemplateStringOptions = {\r\n    displayField: 'ACNAME',\r\n    isExpandedField: 'expanded',\r\n    idField: 'uuid',\r\n    getChildren: this.getChildren.bind(this),\r\n    actionMapping,\r\n    allowDrag: false\r\n  }\r\n  onEvent($event) {\r\n    // //console.log.bind(console);\r\n  }\r\n\r\n  onselect(tree, $event) {\r\n    if(!this.masterService.getRequestOption()){\r\n      return;\r\n    }\r\n    //console.log(\"TreeSelec\",tree)\r\n    this.OverdraftIs = ' ';\r\n\r\n    this.source = new LocalDataSource();\r\n    this.AdditionalInfo = 0;\r\n    this.showBank = 0;\r\n    this.showPLedgerInfo = 0\r\n\r\n    this.selectedNode = tree.treeModel.getFocusedNode().data;\r\n    this.selectedNodeEdit = this.selectedNode.ACID;\r\n    this.GroupStatus = this.selectedNode.TYPE;\r\n    ////console.log(\"onselect\", this.selectedNode, this.nodes);\r\n    this.tagForDisplayingAccname = this.selectedNode.TYPE;\r\n    this.ViewMode = true;\r\n    this.getRootParent(this.selectedNode, this.nodes);\r\n    this.loadListSubject.next(this.selectedNode);\r\n    this.formObj.ACNAME = this.selectedNode.ACNAME;\r\n    this.formObj.ACCODE = this.selectedNode.ACCODE;\r\n    this.parentHasSubLedger = false;\r\n    //console.log(\"@@this.selectedNode.\", this.selectedNode)\r\n\r\n    if (this.selectedNode.TYPE == \"A\") {\r\n      this.ShiftParentObj.ACID = this.selectedNode.ACID;\r\n      this.ShiftParentObj.ACNAME = this.selectedNode.ACNAME;\r\n      if (this.selectedNode.PARENT != null) {\r\n        this.ShiftParentObj.FROMPARENT = this.selectedNode.PARENT.ACID;\r\n      }\r\n      this.showShiftParentButton = true;\r\n    }\r\n    else {\r\n      this.showShiftParentButton = false;\r\n    }\r\n\r\n\r\n    this.searchParentHasSubLedger();\r\n    if (this.selectedNode.ACID == 'AG013' || (this.selectedNode.PARENT ? this.selectedNode.PARENT.MAPID == 'OD' : this.selectedNode.MAPID == 'OD') || this.selectedNode.MAPID == 'OD') {\r\n      this.OverdraftIs = 'OD';\r\n    }\r\n\r\n\r\n    if (this.selectedNode.PARENT !== null && this.selectedNode !== null) {\r\n      if (this.selectedNode.PARENT.MAPID == 'B' || this.selectedNode.MAPID == 'B') {\r\n        this.showBank = 1;\r\n        this.isGroup = 0;\r\n      } else {\r\n        this.isGroup = 0;\r\n        this.showBank = 0;\r\n      }\r\n    }\r\n    else {\r\n      this.showBank = 0;\r\n      this.showBank = 0;\r\n    }\r\n\r\n\r\n    this.formObj.HASSUBLEDGER = this.selectedNode.HASSUBLEDGER;\r\n    this.formObj.HSN_SACCODE = this.selectedNode.HSN_SACCODE;\r\n    this.formObj.CRLIMIT = this.selectedNode.CRLIMIT;\r\n\r\n\r\n    var childAccountList = this.masterService.PartialAccountList.filter(a => a.PARENT == this.selectedNode.id);\r\n    this.mode = \"select\";\r\n    let customerData: any\r\n    let checkAcid = this.selectedNode.ACID.substring(0, 2);\r\n    if (this.selectedNode.PType == \"C\" && this.selectedNode.TYPE == \"A\") {\r\n\r\n      this.loadingService.show(\"Getting data, Please wait...\");\r\n      this.masterService.getAllAccount(this.selectedNode.ACID).subscribe(\r\n        data => {\r\n          this.NewItem()\r\n          this.modeTitle = 'View And Edit Customer'\r\n          this.showPLedgerInfo = 1;\r\n          this.isGroup = 0;\r\n          this.Party = \"Customer\"\r\n          this.PTypeForParty = this.selectedNode.PType\r\n          this.formObj.ACNAME = this.selectedNode.ACNAME;\r\n          this.formObj.mode = \"edit\"\r\n          this.mode = \"view\"\r\n          this.loadingService.hide();\r\n          customerData = data.result;\r\n          // this.formObj.isAutoGSTApplicable = customerData.isAutoGSTApplicable;\r\n          // this.formObj.isRCMApplicable = customerData.isRCMApplicable;\r\n          this.formObj.isAutoGSTApplicable = 0;\r\n          this.formObj.isRCMApplicable = 0;\r\n          this.PLedgerChild.setEditFromValue(customerData);\r\n\r\n        },\r\n        error => {\r\n          this.loadingService.hide();\r\n        }\r\n      );\r\n    } else if ((this.selectedNode.PType == 'V' && checkAcid == 'PA') || this.selectedNode.ACID == 'LB1199') {\r\n      this.loadingService.show(\"Getting data, Please wait...\");\r\n      this.masterService.getAllAccount(this.selectedNode.ACID).subscribe(\r\n        data => {\r\n          this.NewItem()\r\n          this.modeTitle = 'View And Edit Supplier'\r\n          this.showPLedgerInfo = 1;\r\n          this.isGroup = 0;\r\n          this.Party = \"Supplier\"\r\n          this.PTypeForParty = this.selectedNode.PType\r\n          this.formObj.ACNAME = this.selectedNode.ACNAME;\r\n          this.formObj.mode = \"edit\"\r\n          this.mode = \"view\"\r\n          this.loadingService.hide();\r\n          customerData = data.result;\r\n          this.formObj.isAutoGSTApplicable = customerData.isAutoGSTApplicable;\r\n          this.formObj.isRCMApplicable = customerData.isRCMApplicable;\r\n          this.formObj.isReverseChargeApplicable = customerData.isReverseChargeApplicable;\r\n          this.PLedgerChild.setEditFromValue(customerData);\r\n        },\r\n        error => {\r\n          this.loadingService.hide();\r\n        }\r\n      );\r\n    }\r\n    // else {\r\n    //   this.masterService.getAllAccount(this.selectedNode.ACID).subscribe(\r\n    //     data => {\r\n    //       // this.NewItem()\r\n    //       this.modeTitle = 'View And Edit'\r\n\r\n\r\n\r\n    //       this.PTypeForParty = this.selectedNode.PType\r\n    //       this.formObj.ACNAME = this.selectedNode.ACNAME;\r\n    //       this.formObj.mode = \"edit\"\r\n    //       this.mode = \"view\"\r\n    //       this.loadingService.hide();\r\n    //       customerData = data.result;\r\n    //       this.formObj.isAutoGSTApplicable = customerData.isAutoGSTApplicable;\r\n    //       this.formObj.isRCMApplicable = customerData.isRCMApplicable;\r\n    //       this.formObj.isReverseChargeApplicable = customerData.isReverseChargeApplicable;\r\n\r\n    //     },\r\n    //     error => {\r\n    //       this.loadingService.hide();\r\n    //     }\r\n    //   );\r\n    // }\r\n  }\r\n\r\n  searchParentHasSubLedger() {\r\n    ////console.log(\"subledger\", this.selectedNode.PARENT);\r\n    if (this.selectedNode.PARENT != null &&\r\n      this.selectedNode.PARENT != undefined &&\r\n      this.selectedNode.PARENT != \"\" &&\r\n      this.selectedNode.PARENT !== null\r\n    ) {\r\n      if (this.selectedNode.PARENT.HASSUBLEDGER == 1) {\r\n        this.parentHasSubLedger = true;\r\n        ////console.log(\"reach here1\");\r\n      } else {\r\n        this.parentHasSubLedger = false;\r\n        ////console.log(\"reach here2\");\r\n      }\r\n    } else {\r\n      ////console.log(\"reach here\");\r\n      this.parentHasSubLedger = false;\r\n    }\r\n\r\n  }\r\n\r\n\r\n  ViewMode: boolean;\r\n  getRootParent(node, list) {\r\n    this.Parent.Under = '';\r\n    if (node.ACID == \"CA\") this.formObj.ACTYPE = \"LB\";\r\n    else this.formObj.ACTYPE = node.ACID;\r\n\r\n\r\n    this.nodeObj = node;\r\n    this.UnderObj = node.PARENT;\r\n    if (node.PARENTID == 'BS' || node.PARENTID == 'PL' || node.PARENTID == 'TD') {\r\n      this.PrimaryGrpObj = node; this.Parent.Primary = node.ACNAME;\r\n      this.isOnlyMainParent = 1; this.UnderObj = node; return;\r\n\r\n    }\r\n    for (let t of list) {\r\n\r\n      if (node.PARENTID != t.ACID) {\r\n        this.loopingChild(node, t.children, t);\r\n\r\n\r\n      }\r\n      else { this.root = node.PARENTID; this.PrimaryGrpObj = node }\r\n    }\r\n    this.Parent.Under = this.UnderObj.ACNAME;\r\n    if (node.TYPE == \"G\") {\r\n      this.UnderObj = node;\r\n      this.isGroup == 1\r\n      this.modeTitle = 'View Group'\r\n      this.ViewMode = true;\r\n\r\n      ////console.log(\"isgroup value\", this.isGroup);\r\n      // ////console.log(\"viewmode\",this.ViewMode);\r\n      //   this.formObj.HASSUBLEDGER =\r\n\r\n      //     this.selectedNode.Parent.HASSUBLEDGER\r\n      //       ? 1\r\n      //       : 0\r\n\r\n      // }\r\n      // else{\r\n      //   this.isGroup=0;\r\n      //   this.formObj.HASSUBLEDGER=0;\r\n      //   this.modeTitle='View Account'\r\n    }\r\n    else {\r\n      this.modeTitle = 'View Account';\r\n      this.ViewMode = true;\r\n    }\r\n    // this.Parent.Primary=this.PrimaryGrpObj.ACNAME;\r\n    if (this.root == 'LB') {\r\n      this.Parent.Primary = 'LIABILITES'\r\n      this.formObj.ACTYPE = 'LB'\r\n\r\n    }\r\n    else if (this.root == 'AT') {\r\n      this.Parent.Primary = 'ASSETS'\r\n      this.formObj.ACTYPE = 'AT'\r\n\r\n    }\r\n    else if (this.root == 'DI') {\r\n      this.Parent.Primary = 'DIRECT INCOME'\r\n      this.formObj.ACTYPE = 'DI'\r\n    }\r\n    else if (this.root == 'DE') {\r\n      this.Parent.Primary = 'DIRECT EXPENSES'\r\n      this.formObj.ACTYPE = 'DE'\r\n    }\r\n    else if (this.root == 'IE') {\r\n      this.Parent.Primary = 'INDIRECT EXPENSES'\r\n      this.formObj.ACTYPE = 'IE'\r\n    }\r\n    else if (this.root == 'II') {\r\n      this.Parent.Primary = 'INDIRECT INCOME'\r\n      this.formObj.ACTYPE = 'II'\r\n    }\r\n    else if (this.root == 'CA') {\r\n      this.Parent.Primary = 'CAPITAL A/C'\r\n      this.formObj.ACTYPE = 'LB'\r\n    }\r\n\r\n    this.isOnlyMainParent = 0;\r\n\r\n  }\r\n  loopingChild(node, cList, root) {\r\n    for (let c of cList) {\r\n      if (c != node) { this.loopingChild(node, c.children, root); }\r\n      else { this.root = root.ACID; this.PrimaryGrpObj = root }\r\n    }\r\n  }\r\n\r\n  getNoOfChild(list, selectedid, rootid) {\r\n    for (let i of list) {\r\n      if (i.ACID == selectedid) { break; }\r\n      else {\r\n        this.dynamicDDList.push({ label: 'Parent' });\r\n        this.getNoOfChild(i.children, selectedid, rootid);\r\n      }\r\n    }\r\n  }\r\n\r\n  go($event) {\r\n    $event.stopPropagation();\r\n    alert('this method is on the app component')\r\n  }\r\n\r\n  onTreeEnable(value: boolean) {\r\n    this.treeEnable = value;\r\n  }\r\n\r\n  AddLedger() {\r\n    this.addMode = true;\r\n    this.modeTitle = \"AddLedger\"\r\n    this.mode = \"add\";\r\n    this.grp = \"A\"\r\n    return;\r\n  }\r\n  AddSubGroup(trees) {\r\n    this.addMode = true;\r\n    this.modeTitle = \"AddSubGroup\"\r\n    this.mode = \"add\";\r\n    this.grp = \"G\"\r\n  }\r\n  onDeleteConfirm(event): void {\r\n    if (window.confirm('Are you sure you want to delete?')) {\r\n      event.confirm.resolve();\r\n    } else {\r\n      event.confirm.reject();\r\n    }\r\n  }\r\n\r\n  onEditClick(event): void {\r\n    this.addMode = true;\r\n    this.mode = \"edit\";\r\n    this.selectedNode = event.data;\r\n    this.grp = \"A\"\r\n  }\r\n\r\n  onAddClose(event) {\r\n\r\n    this.addMode = false;\r\n  }\r\n  hideChildModal() {\r\n    this.childModal.hide();\r\n  }\r\n  public contextMenuActions = [\r\n    {\r\n      html: (item) => `Edit`,\r\n      tag: 'edit',\r\n      enabled: (item) => true,\r\n      visible: (item) => true,\r\n    },\r\n    {\r\n      divider: true,\r\n      visible: true,\r\n    },\r\n    {\r\n      html: (item) => `Delete`,\r\n      tag: 'delete',\r\n      enabled: (item) => true,\r\n      visible: (item) => true,\r\n    },\r\n  ];\r\n\r\n  contextMenuClick(selecteddata, selectedmenu) {\r\n    if (selectedmenu.tag == \"edit\") {\r\n      this.addMode = true;\r\n      this.mode = \"edit\";\r\n      this.selectedNode = selecteddata;\r\n      this.grp = \"G\"\r\n    }\r\n    else if (selectedmenu.tag == \"delete\") {\r\n    }\r\n  }\r\n\r\n  SaveAcEmit(value) {\r\n    if (value.type == \"G\") {\r\n      this.getGivenNode(value.lastparent, this.nodes, value.value);\r\n      this.tree.treeModel.update();\r\n    }\r\n    else {\r\n      var childAccountList = this.masterService.PartialAccountList.filter(a => a.PARENT == value.value.PARENT);\r\n      if (childAccountList.length > 0) {\r\n        this.source.load(childAccountList);\r\n      }\r\n    }\r\n  }\r\n\r\n  getGivenNode(nodeid: string, list: any[], savedNode): any {\r\n    for (let ag of list) {\r\n      if (ag.ACID == nodeid) {\r\n        ag.children.push(savedNode);\r\n        return ag;\r\n      }\r\n      else if (ag.children && ag.children.length > 0) {\r\n        var node = this.getGivenNode(nodeid, ag.children, savedNode);\r\n        if (node) {\r\n          return node;\r\n        }\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  NewGroup() {\r\n    if(!this.validateBranch(\"create new group\")){\r\n      return;\r\n     }\r\n    // if(this.nodeObj.ACID=='AG01001' || this.nodeObj.ACID=='AG01002'){\r\n    //   this.DialogMessage = \"Cannot create Group or Account inside this.\";\r\n    //   this.childModal.show()\r\n    //                           setTimeout(() => {\r\n    //                         this.childModal.hide();\r\n    //                     }, 2000)\r\n    //   return;\r\n    // }\r\n    if (this.masterService.validateMasterCreation(\"create\") == false) {\r\n      return;\r\n    }\r\n\r\n    if (this.nodeObj.ACID == 'AG01001' || this.nodeObj.ACID == 'AG01002') {\r\n      this.alertService.info('Cannot create Group or Account inside this.');\r\n      return;\r\n    }\r\n\r\n\r\n    this.ViewMode = false;\r\n    this.tagForDisplayingAccname = 'G';\r\n    setTimeout(() => {\r\n      this._BE.nativeElement.focus();\r\n    }, 20);\r\n\r\n    this.mode = \"add\"\r\n    this.addMode = true;\r\n    this.formObj.ACNAME = ''\r\n    this.modeTitle = 'New Group'\r\n    this.formObj.TYPE = 'G'\r\n    this.isGroup = 1;\r\n    this.showPLedgerInfo = 0;\r\n    this.BankPartyVerification.SupplierGrp = 0\r\n    this.isAccount = false;\r\n    // this.Parent.Primary=this.PrimaryGrpObj.ACNAME;\r\n    if (this.nodeObj.TYPE == 'G') {\r\n      // this.UnderObj = this.nodeObj.ACNAME;\r\n\r\n\r\n      if (this.selectedNode.HASSUBLEDGER == 1) {\r\n        //if parent has subledger then hide child has subledger option\r\n        this.parentHasSubLedger = true;\r\n      }\r\n\r\n\r\n\r\n      this.Parent.Under = this.nodeObj.ACNAME;\r\n      this.formObj.HASSUBLEDGER = 0;\r\n      this.formObj.PARENT = this.nodeObj.ACID;\r\n      this.formObj.MAPID = this.nodeObj.MAPID;\r\n      this.formObj.PType = this.nodeObj.PType;\r\n      var checkAcid = this.nodeObj.ACID.substring(0, 2);\r\n      this.formObj.LEVELS = this.nodeObj.LEVELS + 1;\r\n      if ((this.formObj.PType == 'V' && checkAcid == 'PA') || this.nodeObj.ACID == 'LB1199') {\r\n\r\n        this.BankPartyVerification.SupplierGrp = 1\r\n      }\r\n      if (this.nodeObj.ACID.substring(0, 2) == 'IE' || this.UnderObj.ACID.substring(0, 2) == 'DE') {\r\n        this.HSN_Active = 1;\r\n      }\r\n    }\r\n    else {\r\n      // this.UnderObj = this.nodeObj.PARENT.ACNAME;\r\n      this.Parent.Under = this.UnderObj.ACNAME;\r\n      this.formObj.PARENT = this.UnderObj.ACID;\r\n      this.formObj.MAPID = this.nodeObj.MAPID;\r\n      this.formObj.PType = this.nodeObj.PType;\r\n      this.formObj.LEVELS = this.nodeObj.LEVELS;\r\n    }\r\n    this.divisioncheckObj = {};\r\n\r\n  }\r\n  isParentBank : Boolean;\r\n  NewItem() {\r\n   \r\n    if(!this.validateBranch(\"create new item\")){\r\n      return;\r\n     }\r\n    // if(this.nodeObj.ACID=='AG01001' || this.nodeObj.ACID=='AG01002'){\r\n    //   this.DialogMessage = \"Cannot create Group or Account inside this.\";\r\n    //   this.childModal.show()\r\n    //                           setTimeout(() => {\r\n    //                         this.childModal.hide();\r\n    //                     }, 2000)\r\n    //   return;\r\n    // }\r\n    if (this.masterService.validateMasterCreation(\"create\") == false) {\r\n      return;\r\n    }\r\n\r\n    this.GroupStatus = '';\r\n    if (this.nodeObj.ACID == 'AG01001' || this.nodeObj.ACID == 'AG01002') {\r\n      this.alertService.info('Cannot create Group or Account inside this.');\r\n      return;\r\n    }\r\n\r\n\r\n    this.ViewMode = false;\r\n    this.tagForDisplayingAccname = 'A';\r\n    //console.log(\"CHeckValue#\",this.nodeObj.ACID)\r\n    if(this.nodeObj.ACID == \"AG006\"){\r\n      this.isParentBank = true;\r\n    }\r\n    setTimeout(() => {\r\n      this._BE.nativeElement.focus();\r\n    }, 20);\r\n\r\n\r\n    if (document.getElementById(\"Name\") != null) {\r\n      document.getElementById(\"Name\").focus();\r\n    }\r\n\r\n\r\n    this.mode = \"add\"\r\n    this.isAccount = true;\r\n    this.addMode = true;\r\n    this.formObj.ACNAME = ''\r\n    this.modeTitle = 'New Account'\r\n    this.formObj.TYPE = 'A'\r\n    this.isGroup = 0\r\n    this.showBank = 0\r\n    this.showPLedgerInfo = 0\r\n    this.HSN_Active = 0;\r\n    this.BankPartyVerification.Bank = 0;\r\n    this.BankPartyVerification.Customer = 0;\r\n    this.BankPartyVerification.Supplier = 0;\r\n    this.BankPartyVerification.SupplierGrp = 0;\r\n    // this.PLedgerChild.BindValue('Q');\r\n    this.formObj.CRLIMIT = '';\r\n    var checkAcid = this.nodeObj.ACID.substring(0, 2);\r\n\r\n\r\n    if (this.nodeObj.TYPE == 'G') {\r\n      this.Parent.Under = this.nodeObj.ACNAME;\r\n      this.formObj.PARENT = this.nodeObj.ACID;\r\n      this.formObj.MAPID = this.nodeObj.MAPID;\r\n      this.formObj.PType = this.nodeObj.PType\r\n      this.formObj.LEVELS = this.nodeObj.LEVELS + 1;\r\n      if (this.nodeObj.ACID.substring(0, 2) == 'IE' || this.nodeObj.ACID.substring(0, 2) == 'DE') {\r\n        this.HSN_Active = 1;\r\n      }\r\n    }\r\n    else {\r\n      this.Parent.Under = this.UnderObj.ACNAME;\r\n      this.formObj.PARENT = this.UnderObj.ACID;\r\n      this.formObj.MAPID = this.nodeObj.MAPID;\r\n      this.formObj.PType = this.nodeObj.PType\r\n      this.formObj.LEVELS = this.nodeObj.LEVELS\r\n    }\r\n\r\n    if (this.formObj.MAPID == 'B') {\r\n      this.AdditionalInfo = 1;\r\n      this.showBank = 1\r\n      this.isGroup = 0\r\n      this.BankPartyVerification.Bank = 1\r\n      this.formObj.MAPID = 'B';\r\n    }\r\n    else if (this.formObj.MAPID == 'C') {\r\n      this.showAssets = 1\r\n      this.formObj.MAPID = 'C'\r\n    }\r\n    else {\r\n      this.showAssets = 0\r\n      this.formObj.MAPID = ''\r\n    }\r\n\r\n    if (this.formObj.PType == 'C') {\r\n\r\n      this.AdditionalInfo = 1;\r\n      this.showPLedgerInfo = 1;\r\n      this.showCustomer = 1;\r\n      // this.PLedgerChild.BindValue('C', 0);\r\n      this.masterService.PType = 'C';\r\n      this.Party = \"Customer\"\r\n      this.isGroup = 0\r\n      this.BankPartyVerification.Customer = 1\r\n      this.fromTreeTag = 1;\r\n    }\r\n    if ((this.formObj.PType == 'V' && checkAcid == 'PA') || this.nodeObj.ACID == 'LB1199') {\r\n\r\n      this.AdditionalInfo = 1;\r\n      this.showPLedgerInfo = 1;\r\n      this.PTypeForParty = 'V'\r\n      this.Party = \"Supplier\"\r\n      this.isGroup = 0\r\n      this.showCustomer = 0;\r\n      // this.PLedgerChild.BindValue('V', 0);\r\n      this.masterService.PType = 'V';\r\n      this.BankPartyVerification.Supplier = 1\r\n      this.fromTreeTag = 2;\r\n\r\n    }\r\n\r\n    this.divisioncheckObj = {};\r\n    this.showDivSelectionTable=false;\r\n    this.division.forEach(x => {\r\n       x.isCheck = false;\r\n    })\r\n    this.formObj.DIV = this.userProfile.userDivision;\r\n    \r\n  }\r\n\r\n  DivListForSave: DivList[] = [];\r\n  SumbitSave() {\r\n    if(!this.masterService.getRequestOption()){\r\n      return;\r\n    }\r\n    if (this.masterService.validateMasterCreation(\"save\") == false) {\r\n      return;\r\n    }\r\n    if (this.mode == \"view\") {\r\n      this.alertService.warning(\"Cannot Save. You are in view Mode\")\r\n    } else {\r\n      try {\r\n        // this.form.value.MAPID = \"N\";\r\n        ////console.log(\"@@nodeObj\", this.nodeObj)\r\n\r\n        if (this.nodeObj.ACID == 'AG013' || (this.nodeObj.PARENT ? this.nodeObj.PARENT.MAPID == 'OD' : this.nodeObj.MAPID == 'OD') || this.nodeObj.MAPID == 'OD') {\r\n          this.formObj.MAPID = \"OD\";\r\n        }\r\n        let saveModel = Object.assign(<TAcList>{}, this.formObj);\r\n        if (saveModel.ACNAME == '') {\r\n          alert(\"Please enter ACNAME first!\")\r\n          return;\r\n        }\r\n        else if (saveModel.PARENT == '') {\r\n          alert(\"Please Choose Parent!\")\r\n          return;\r\n        }\r\n        if (this.BankPartyVerification.Customer == 1 || this.BankPartyVerification.Supplier == 1) {\r\n\r\n\r\n          // if (this.masterService.PLedgerObj.GSTTYPE == '') {\r\n          //   alert(\"Please Choose GSTTYPE!\")\r\n          //   return;\r\n          // }\r\n          // if (this.masterService.PLedgerObj.PSTYPE == '') {\r\n          //   alert(\"Please Choose Sales/Purchase Type!\")\r\n          //   return;\r\n          // }\r\n          // if (this.masterService.PLedgerObj.STATE == '') {\r\n          //   alert(\"Please Choose States!\")\r\n          //   return;\r\n          // }\r\n        }\r\n        if (saveModel.HASSUBLEDGER == 1 && this.isGroup == 1) {\r\n          saveModel.MCAT = 'SG'\r\n        }\r\n        if (saveModel.DIV == '' || saveModel.DIV == null) {\r\n          saveModel.DIV = this.userProfile.userDivision;\r\n\r\n        }\r\n        if (this.formObj.CRLIMIT == '' || this.formObj.CRLIMIT === null || this.formObj.CRLIMIT == null || this.formObj.CRLIMIT === undefined || this.formObj.CRLIMIT === '') {\r\n          this.formObj.CRLIMIT = 0;\r\n          saveModel.CRLIMIT = 0;\r\n        }\r\n\r\n\r\n        if (this.divisioncheckObj.ShareAllDiv == 2) {\r\n          saveModel.ISCOMMONAC = 1;\r\n          if (this.mode == \"add\") {\r\n\r\n          }\r\n        }\r\n        else {\r\n          saveModel.ISCOMMONAC = 0;\r\n        }\r\n\r\n\r\n\r\n        saveModel.enableDivSelectionTable = this.formObj.enableDivSelectionTable;\r\n        let divisionObj = <SelectedDivisions>{};\r\n        divisionObj.DIV = this.divisioncheckObj.MultipleDivision;\r\n\r\n        ////console.log(\"divisionObj\", divisionObj)\r\n        // this.SelectedDivisionList.push(divisionObj);\r\n\r\n        this.loadingService.show(\"Saving Data please wait...\");\r\n        if (this.masterService.PLedgerObj.PType == \"C\") {\r\n          this.masterService.PLedgerObj.GEO = this.PLedgerChild.geo\r\n        }\r\n        let DObj: DObj = <DObj>{};\r\n        if (this.showDivSelectionTable == true) {\r\n          this.DivListForSave = [];\r\n          for (let i of this.division) {\r\n            if (i.isCheck == true) {\r\n              let dObj: DivList = <DivList>{};\r\n              dObj.ACID = i.ACID;\r\n              dObj.DIV = i.INITIAL;\r\n              this.DivListForSave.push(dObj);\r\n            }\r\n          }\r\n\r\n          DObj.DivList = this.DivListForSave;\r\n        } else {\r\n          if (this.divisioncheckObj.ShareAllDiv == 2 || this.divisioncheckObj.ShareAllDiv == 1) {\r\n            saveModel.enableDivSelectionTable = true;\r\n            this.DivListForSave = [];\r\n            for (let i of this.division) {\r\n              let dObj: DivList = <DivList>{};\r\n              dObj.ACID = i.ACID;\r\n              dObj.DIV = i.INITIAL;\r\n              this.DivListForSave.push(dObj);\r\n            }\r\n\r\n            DObj.DivList = this.DivListForSave;\r\n          }\r\n        }\r\n\r\n\r\n\r\n        // ////console.log(\"CheckDivisionList\",this.DivListForSave,this.showDivSelectionTable,this.division)\r\n        // return;\r\n        let sub = this.masterService.saveAccountLedgerOnly(\r\n          this.mode,\r\n          saveModel,\r\n          null,\r\n          this.BankPartyVerification,\r\n          this.masterService.BankObj,\r\n          this.masterService.PLedgerObj,\r\n          this.AdditionalInfo,\r\n          this.autoCalculationParam,\r\n          DObj\r\n\r\n\r\n        ).subscribe(\r\n          data => {\r\n            this.loadingService.hide();\r\n            if (data.status == \"ok\") {\r\n              this.nodes.map(data => { data })\r\n              this.alertService.success(\"Data Saved Successfully\");\r\n              this.preventNavigationService.preventNavigation(false);\r\n              this.showPLedgerInfo = 0;\r\n              this.isGroup = 0;\r\n              this.showBank = 0;\r\n              this.masterService.BankObj = {};\r\n              this.masterService.PLedgerObj = {};\r\n              this.formObj.ACNAME = '';\r\n              this.formObj.ACCODE = '';\r\n              document.getElementById('generalInfo').click()\r\n              this.addMode = false;\r\n              this.Refresh();\r\n              this.autoCalculationParam.igst = 0;\r\n              this.autoCalculationParam.cgst = 0;\r\n              this.autoCalculationParam.sgst = 0;\r\n              this.autoCalculationParam.cess = 0;\r\n              this.formObj.isAutoGSTApplicable = 0;\r\n              this.formObj.isRCMApplicable = 0;\r\n              this.formObj.isReverseChargeApplicable = 0;\r\n              this.formObj.CRLIMIT = '';\r\n              this.divisioncheckObj = {};\r\n              DObj = <DObj>{};\r\n              this.cancel();\r\n              this.formObj.enableDivSelectionTable = false;\r\n              this.showDivSelectionTable = false;\r\n\r\n            } else {\r\n\r\n              //alert(data.result);\r\n              //the ConnectionString in the server is not initialized means the the token 's user is not int the list of database user so it could't make connectionstring. Re authorization is requierd\r\n              if (\r\n                data.result._body ==\r\n                \"The ConnectionString property has not been initialized.\"\r\n              ) {\r\n                this.router.navigate([\"/login\", this.router.url]);\r\n                return;\r\n              }\r\n              //Some other issues need to check\r\n              this.alertService.error(\r\n                \"Error in Saving Data:\" + data.result._body\r\n              );\r\n\r\n            }\r\n          },\r\n          error => {\r\n            this.loadingService.hide();\r\n            this.alertService.error(error);\r\n\r\n          }\r\n        );\r\n        this.subcriptions.push(sub);\r\n      } catch (e) {\r\n        this.alertService.error(e);\r\n      }\r\n    }\r\n  }\r\n  initilizeAl() {\r\n    this.formObj.ACNAME = '';\r\n    this.Parent.Under = '';\r\n    this.Parent.Primary = '';\r\n    this.formObj.HASSUBLEDGER = 0;\r\n    this.formObj.HSN_SACCODE = ''\r\n  }\r\n  cancel() {\r\n    this.addMode = false;\r\n    this.showPLedgerInfo = 0;\r\n    this.isGroup = 0;\r\n    this.modeTitle = \"\"\r\n    this.initilizeAl()\r\n    document.getElementById('generalInfo').click()\r\n    this.mode = 'new';\r\n    //this.ViewMode = true;\r\n    this.isAccount = true;\r\n    this.parentHasSubLedger = false;\r\n    this.ViewMode = true;\r\n    this.divisioncheckObj = {};\r\n    this.showDivSelectionTable=false;\r\n    this.division.forEach(x => {\r\n       x.isCheck = false;\r\n    })\r\n    this.formObj.DIV = this.userProfile.userDivision;\r\n  }\r\n  EditItem() {\r\n    if(!this.masterService.getRequestOption()){\r\n      return;\r\n    }\r\n   if(!this.validateBranch(\"Edit\")){\r\n    return;\r\n   }\r\n    this.ViewMode = false;\r\n    this.modeTitle = 'Edit Account'\r\n    this.mode = 'edit';\r\n    this.HSN_Active = 0;\r\n    // this.Parent.Under = this.nodeObj.PARENT;\r\n    this.formObj.PARENT = this.nodeObj.PARENTID;\r\n    this.formObj.MAPID = this.nodeObj.MAPID;\r\n    this.formObj.PType = this.nodeObj.PType;\r\n    this.formObj.TYPE = this.nodeObj.TYPE;\r\n    this.formObj.ACCODE = this.nodeObj.ACCODE;\r\n    //this.formObj.ACID = this.nodeObj.ACID;\r\n    this.formObj.ACID = this.selectedNodeEdit;\r\n    if (this.nodeObj.ACID.substring(0, 2) == 'IE' || this.nodeObj.ACID.substring(0, 2) == 'DE') {\r\n      this.HSN_Active = 1;\r\n    }\r\n    setTimeout(() => {\r\n      this._BE.nativeElement.focus();\r\n    }, 20);\r\n\r\n\r\n  }\r\n  DeleteItem() {\r\n    if(!this.masterService.getRequestOption()){\r\n      return;\r\n    }\r\n    //this.DeleteAcc.show();\r\n    if(!this.validateBranch(\"delete\")){\r\n      return;\r\n     }\r\n    let childreenList = [];\r\n    childreenList = this.nodeObj.children;\r\n    if (childreenList.length > 0) {\r\n      this.alertService.info(\"TRANSACTION EXIST UNDER SELECTED ACCOUNT NAME. HENCE, REQUESTED COMMAND IS ABORTED.\");\r\n    } else {\r\n      this.DeleteAcc.show();\r\n    }\r\n\r\n  }\r\n\r\n  DeleteYes() {\r\n    if(!this.validateBranch(\"delete\")){\r\n      return;\r\n     }\r\n    this.DeleteAcc.hide();\r\n    this.loadingService.show(\"Deleting Data please wait...\");\r\n    this.masterService.deleteAccount(this.nodeObj.ACID).subscribe(data => {\r\n      if (data.status == \"ok\") {\r\n        this.alertService.success(\"Data Deleted Successfully\");\r\n        this.loadingService.hide();\r\n        this.Parent = <any>{};\r\n        this.formObj = <any>{};\r\n        this.Refresh();\r\n      }\r\n      else {\r\n        this.loadingService.hide();\r\n        //alert(data.result);\r\n        //the ConnectionString in the server is not initialized means the the token 's user is not int the list of database user so it could't make connectionstring. Re authorization is requierd\r\n        if (\r\n          data.result._body ==\r\n          \"The ConnectionString property has not been initialized.\"\r\n        ) {\r\n          this.router.navigate([\"/login\", this.router.url]);\r\n          return;\r\n        }\r\n        //Some other issues need to check\r\n        this.alertService.info(\r\n          \"Error in Deleting Data:\" + data.result._body\r\n        );\r\n\r\n      }\r\n    })\r\n  }\r\n  DeleteNo() {\r\n    if(!this.validateBranch(\"delete\")){\r\n      return;\r\n     }\r\n\r\n    this.DeleteAcc.hide();\r\n  }\r\n\r\n  onClickNo() {\r\n    this.DeleteAcc.hide();\r\n  }\r\n\r\n\r\n  GSTApplicablecheck(e) {\r\n    if (e.target.checked) { this.formObj.GSTchecked = 1; }\r\n    else { this.formObj.GSTchecked = 0; }\r\n  }\r\n  TDSApplicablecheck(e) {\r\n    if (e.target.checked) { this.formObj.TDSchecked = 1; }\r\n    else { this.formObj.TDSchecked = 0; }\r\n  }\r\n\r\n\r\n\r\n  Refresh() {\r\n    this.masterService._accountTree = [];\r\n    this.masterService.getAccountTreeObservable = null;\r\n    this.busy = this.masterService.getacListTree().map(x => { return x })\r\n      .subscribe(res => {\r\n        this.nodes = res;\r\n        if (this.tree != null) {\r\n          this.tree.treeModel.update();\r\n        }\r\n      }, error => {\r\n        var err = this.masterService.resolveError(error, \"accountLedger - accountLedger\");\r\n        if (err) { alert(err.json()); }\r\n      }\r\n      );\r\n  }\r\n\r\n  autoCalculationevent(e) {\r\n    if (e.target.checked) { this.formObj.isAutoGSTApplicable = 1; }\r\n    else { this.formObj.isAutoGSTApplicable = 0; }\r\n  }\r\n\r\n  rcmChangeEvent(e) {\r\n    if (e.target.checked) { this.formObj.isRCMApplicable = 1; }\r\n    else { this.formObj.isRCMApplicable = 0; }\r\n  }\r\n\r\n  backToDashboard() {\r\n    this.router.navigate([\"pages/dashboard\"])\r\n  }\r\n  validateBranch(text){\r\n    return true;\r\n    if(this._transactionService.userProfile.CompanyInfo.MAIN == 0 && this._transactionService.userSetting.EnableCentralMasterCreation == 1){\r\n      this.alertService.warning(\"Cannot \"+text+\" Ledger under branch office\");\r\n      return false;\r\n    }\r\n    else{\r\n      return true;\r\n    }\r\n  }\r\n  enableDivSelectionTable(showTable) {\r\n    // ////console.log(\"@@showTable\", showTable)\r\n    if (showTable == 1) {\r\n      this.showDivSelectionTable = true;\r\n      this.formObj.enableDivSelectionTable = true;\r\n      this.division.forEach(x => {\r\n        x.INITIAL == this.userProfile.CompanyInfo.INITIAL ? x.isCheck = true : '';\r\n      })\r\n\r\n\r\n    } else {\r\n      this.showDivSelectionTable = false;\r\n      this.formObj.enableDivSelectionTable = false;\r\n\r\n    }\r\n    this.divisioncheckObj.ShareAllDiv = 0;\r\n    this.formObj.ISCOMMONAC = 0;\r\n  }\r\n\r\n  ShareAllDiv(event) {\r\n    // ////console.log(\"@@event\", event)\r\n    this.formObj.enableDivSelectionTable = false;\r\n    if (event == 1) {\r\n      this.showDivSelectionTable = false;\r\n      this.formObj.ISCOMMONAC = 1;\r\n    }\r\n    else {\r\n      this.formObj.ISCOMMONAC = 0;\r\n    }\r\n  }\r\n\r\n  check(e) {\r\n\r\n    this.divisioncheckObj.MultipleDivision = e.target.value;\r\n\r\n    // //console.log('checkValue@!', this.divisioncheckObj.MultipleDivision)\r\n  }\r\n  activeIndex: any;\r\n  rowClick(i) {\r\n    this.activeIndex = i;\r\n  }\r\n  changeDivision(e) {\r\n    \r\n    this.division.forEach(x => {\r\n      x.INITIAL == e ? x.isDefault = true : x.isDefault = false;\r\n\r\n    })\r\n\r\n    if (this.mode == \"edit\") {\r\n      this.division.forEach(x => {\r\n        x.INITIAL == e ? x.isCheck = true : x.isCheck = false;\r\n      })\r\n    } else {\r\n      this.division.forEach(x => {\r\n        x.INITIAL == e ? x.isCheck = true : x.isCheck = false;\r\n      })\r\n    }\r\n  }\r\n\r\n  @HostListener(\"document : keydown\", [\"$event\"])\r\n  handleKeyDownboardEvent($event: KeyboardEvent) {\r\n    if ($event.code == 'F6') {\r\n      $event.preventDefault();\r\n      this.SumbitSave();\r\n    }\r\n    else if ($event.code == 'F3') {\r\n      $event.preventDefault();\r\n      this.cancel();\r\n    }\r\n    else if ($event.code == 'F5') {\r\n      $event.preventDefault();\r\n      this.EditItem();\r\n    }\r\n    if ($event.code == 'F10') {\r\n      $event.preventDefault();\r\n      this.backToDashboard();\r\n    }\r\n  }\r\n  enableDivision: Boolean;\r\n  ClickShareAccount(value) {\r\n    this.formObj.enableDivSelectionTable = false;\r\n    if (this.divisioncheckObj.ShareAccount == 1) {\r\n      this.changeDivision(this.masterService.userProfile.CompanyInfo.INITIAL)\r\n      this.enableDivision = true;\r\n\r\n\r\n    }\r\n    else {\r\n\r\n      this.divisioncheckObj.ShareAllDiv = 0\r\n      this.divisioncheckObj.ShareSelectiveDiv = 0\r\n      this.enableDivision = false;\r\n\r\n    }\r\n    this.formObj.enableDivSelectionTable = false;\r\n    this.showDivSelectionTable = false;\r\n    \r\n  }\r\n\r\n  shiftParent() {\r\n    if(!this.masterService.getRequestOption()){\r\n      return;\r\n    }\r\n    this.masterService.getAccountListOfTree().subscribe(res => {\r\n      this.ParentList = res;\r\n    })\r\n    this.ShiftParent.show();\r\n  }\r\n\r\n  onClose() {\r\n    this.ShiftParentObj = {};\r\n    this.ShiftParent.hide();\r\n  }\r\n\r\n  ConfirmShiftParent() {\r\n    this.masterService.ShiftParent(this.ShiftParentObj).subscribe(res => {\r\n      this.onClose();\r\n      this.Refresh();\r\n    })\r\n  }\r\n\r\n  ExportAccountLedger() {\r\n    if(!this.masterService.getRequestOption()){\r\n      return;\r\n    }\r\n    this.masterService.getAccountListOfTree().subscribe(res => {\r\n      this.ParentList = res;\r\n    })\r\n    this.showAccountLedgerFilterpopUp = true;\r\n  }\r\n\r\n  ExportAll() {\r\n    this.FormName.data = \"Account\";\r\n    let filterObjData = { data: this.FormName, filtername: \"AllAccountList\" }\r\n    this.masterService.getExcelFile('/getAllLegerList', filterObjData).subscribe(\r\n      data => {\r\n        this.alertService.hide();\r\n        this.masterService.downloadFile(data);\r\n        this.CancelCommand();\r\n      },\r\n      error => {\r\n        this.alertService.hide();\r\n      }\r\n    )\r\n  }\r\n\r\n  OkCommand() {\r\n    this.LedgerFilterObj.FILTER = \"Account\";\r\n    let filterObjData = { data: this.LedgerFilterObj }\r\n    this.masterService.getExcelFileFilter('/getLedgerByFilter', filterObjData).subscribe(\r\n      data => {\r\n        this.alertService.hide();\r\n\r\n        this.masterService.downloadFile(data);\r\n        this.CancelCommand();\r\n      },\r\n      error => {\r\n        this.alertService.hide();\r\n      }\r\n    )\r\n    this.showAccountLedgerFilterpopUp = false;\r\n  }\r\n\r\n  CancelCommand() {\r\n    this.LedgerFilterObj = <IsLedgerFilter>{};\r\n    this.FormName = <ExportLedgerFilterDto>{};\r\n    this.showAccountLedgerFilterpopUp = false;\r\n  }\r\n\r\n  changeAccountGroup() {\r\n    this.LedgerFilterObj.SUBGROUP = \"\";\r\n    this.LedgerFilterObj.ACID = \"\";\r\n    this.masterService.getSubGroupForQuickAccountMaster(this.LedgerFilterObj.MAINGROUP).subscribe(res => {\r\n      this.SubGroupAccountMaster = res.result;\r\n    })\r\n\r\n    this.masterService.getAccountListOfTree().subscribe(res => {\r\n      let abc = res.filter(x => x.ACID == this.LedgerFilterObj.MAINGROUP);\r\n      this.ChildrenList = abc.length > 0 && abc[0].children.filter(x => x.TYPE == \"A\");\r\n    })\r\n  }\r\n\r\n  changeAccountType() {\r\n    this.LedgerFilterObj.SUBGROUP = \"\";\r\n    this.LedgerFilterObj.ACID = \"\";\r\n  }\r\n  @ViewChild(\"genericGridBankList\") genericGridBankList: GenericPopUpComponent;\r\n  gridBankPopupSettings: GenericPopUpSettings = new GenericPopUpSettings();\r\n  showBankPopup(){\r\n    this.gridBankPopupSettings = {\r\n      title: \"Accounts\",\r\n      apiEndpoints: `/getBankPagedList/`,\r\n      defaultFilterIndex: 1,\r\n      columns: [\r\n        {\r\n          key: \"BANKCODE\",\r\n          title: \"Bank CODE\",\r\n          hidden: false,\r\n          noSearch: false\r\n        },\r\n        {\r\n          key: \"BANKNAME\",\r\n          title: \"Bank NAME\",\r\n          hidden: false,\r\n          noSearch: false\r\n        }\r\n      ]\r\n    };\r\n    this.genericGridBankList.show();\r\n  }\r\n  onBankSelect(value){\r\n    //console.log(\"ValueCheck\",value)\r\n    this.formObj.ACNAME = value.BANKNAME;\r\n    this.formObj.ACCODE = value.BANKCODE;\r\n  }\r\n}\r\n\r\nexport class DObj {\r\n  DivList: DivList[]\r\n}\r\nexport class DivList {\r\n  ACID: string;\r\n  DIV: string;\r\n  STAMP: number;\r\n  ISACTIVE: number;\r\n}\r\n\r\nexport interface IsLedgerFilter {\r\n  FILTER: string;\r\n  accountName: string;\r\n  ACID: string;\r\n  ACCOUNTTYPE: string;\r\n  MAINGROUP: string;\r\n  SUBGROUP: string;\r\n}\r\nexport interface ExportLedgerFilterDto {\r\n  data: string;\r\n  filtername: string;\r\n}\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/pages/masters/components/account-ledger/accountLedgerTable.component.ts","import { TreeViewAcService, GroupAccounts } from './accountLedger.service';\r\nimport { LocalDataSource } from 'ng2-smart-table';\r\n// import { LocalDataSource } from 'ng2-smart-table/ng2-smart-table/lib';\r\nimport { Parent } from './../../../../common/interfaces/CostCenter.interface';\r\nimport { Component, Input, Output, EventEmitter, OnInit, ViewChild } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { NgForm, FormGroup, FormControl, Validators, FormBuilder } from '@angular/forms';\r\nimport { Subscription } from \"rxjs/Subscription\";\r\nimport { ModalDirective } from 'ng2-bootstrap';\r\nimport { MasterRepo } from '../../../../common/repositories/masterRepo.service';\r\nimport { AcListTree, TAcList } from \"../../../../common/interfaces/Account.interface\";\r\nimport { BehaviorSubject } from \"rxjs/BehaviorSubject\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { SelectItem } from 'primeng/primeng';\r\nimport { MdDialog, MdDialogRef } from \"@angular/material\";\r\nimport { MessageDialog } from \"../../../modaldialogs/messageDialog/messageDialog.component\";\r\nimport { AuthService } from '../../../../common/services/permission';\r\n@Component(\r\n    {\r\n        selector: 'addLedgerSelector',\r\n        template: require('./addledger.component.html'),\r\n        providers: [],\r\n\r\n    }\r\n)\r\nexport class LedgComponent {\r\n    @Output('onClose') onClose = new EventEmitter();\r\n    @ViewChild('childModal') childModal: ModalDirective;\r\n    @Input('acid') ACID: string;\r\n    @Input() rootID: string;\r\n    @Input() modeTitle: string = '';\r\n    @Input() mode: string;\r\n    @Input() grp: string;\r\n    @Output() SaveAcEmit = new EventEmitter();\r\n    @Input('PrimaryGrp') PrimaryGrp:string;\r\n    selectednode: any;\r\n    parentid: any;\r\n    majorparent: any = <any>{};\r\n    majorParentAcList: any[] = [];\r\n    acParentList: AcListTree[] = [];\r\n    PARENTACNAME: string;\r\n    RootName: string;\r\n    acListtree: AcListTree = <AcListTree>{};\r\n    ledgerAcObj: TAcList = <TAcList>{};\r\n    ledgerAcList: TAcList[];\r\n    private returnUrl: string;\r\n    router: Router;\r\n    dialogMessageSubject: BehaviorSubject<string> = new BehaviorSubject<string>('');\r\n    dialogMessage$: Observable<string> = this.dialogMessageSubject.asObservable();\r\n    //DialogMessage: string = \"Saving data please wait ...\"\r\n    private subcriptions: Array<Subscription> = [];\r\n    public acledgerSubject: BehaviorSubject<TAcList[]> = new BehaviorSubject<TAcList[]>([]);\r\n    public acledgerList$: Observable<TAcList[]> = this.acledgerSubject.asObservable();\r\n    //treeList:any[]=[];\r\n    AddLedger: FormGroup;\r\n    // modeTitle: string = '';\r\n    viewMode = false;\r\n    TreeParent: any[];\r\n    initialTextReadOnly: boolean = false;\r\n    public selectedNode: any;\r\n    source: LocalDataSource = new LocalDataSource();\r\n    // groupListSubject: BehaviorSubject<any[]> = new BehaviorSubject<any[]>([]);\r\n    // groupList$: Observable<any[]> = this.groupListSubject.asObservable();\r\n    acGroups: any[] = [];\r\n    hasSubLedger: number = 0\r\n    disableHassubledger: boolean = false;\r\n    actype: string = '';\r\n    disableActype: boolean = false;\r\n    parentGroup: GroupAccounts;\r\n    value = false;\r\n    // mode: string = \"add\";\r\n    SubGroup = true;\r\n    DialogMessage: string = \"Saving data please wait ...\"\r\n    lastParentID: string;\r\n    // PartialAccountList: any[] = [];\r\n    // @Input() AccountTreePart: any[];\r\n    userProfile:any;\r\n    ngOnInit() {\r\n        ////console.log(\"AddLedger Reached\")\r\n        this.AddLedger = this._fb.group({\r\n            ACNAME: ['', Validators.required],\r\n            majorparent: [''],\r\n            // parentid: [''],\r\n            hasSub: [''],\r\n            ACType: [''],\r\n            ACCODE: ['', Validators.required],\r\n            ASSETTYPE: [''],\r\n            isNotActive:['']\r\n        });\r\n\r\n\r\n        let self = this;\r\n        this.getGroups();\r\n        this.value = false;\r\n        this.modeTitle;\r\n        if (this.mode == 'edit') {\r\n            ////console.log(\"Mode Edit\", this.ACID);\r\n            this.modeTitle = 'Edit Ledger'\r\n            this.MasterService.getAllAccount(this.ACID)\r\n\r\n                .subscribe(data => {\r\n                    if (data.status == 'ok') {\r\n                        ////console.log(\"EDIT GetAllAccountReached\");\r\n                        // this.AddLedger.get('parentid').setValue(data.result.PARENT);\r\n                        this.AddLedger.get('ACNAME').setValue(data.result.ACNAME);\r\n                        this.AddLedger.get('ACCODE').setValue(data.result.ACCODE);\r\n                        //console.log(data);\r\n                        this.mode = 'edit';\r\n                        this.initialTextReadOnly = true;\r\n\r\n                    }\r\n                    else {\r\n                        this.mode = '';\r\n                        this.modeTitle = \"Edit - Error in AccountLedger\";\r\n                        this.initialTextReadOnly = true;\r\n                    }\r\n                }, error => {\r\n                    this.mode = '';\r\n                    this.modeTitle = \"Edit2 - Error in AccountLedger\";\r\n                    this.MasterService.resolveError(error, \"AccountLedger - getAccountLedger\");\r\n                }\r\n                );\r\n        }\r\n    }\r\n    constructor(public MasterService: MasterRepo, router: Router, private accountService: TreeViewAcService,\r\n        private _activatedRoute: ActivatedRoute, public _fb: FormBuilder, public dialog: MdDialog,private _authService:AuthService) {\r\n        ////console.log(\"\");\r\n        this.router = router;\r\n        this.majorparent.children = [];\r\n        // if (!!_activatedRoute.snapshot.params['returnUrl']) {\r\n        //     this.returnUrl = this._activatedRoute.snapshot.params['returnUrl'];\r\n        // }\r\n        this.userProfile=this._authService.getUserProfile();\r\n        // ////console.log(\"User\",this.userProfile)\r\n\r\n    }\r\n\r\n    majorgroupChange(majorparent) {\r\n        this.filter(this.AddLedger.get('majorparent').value);\r\n        //  var p= this.treeList.filter(x => x.ACID == majorparent)[0];\r\n\r\n        //   if(p!=null){ this.acParentList =p.children;} \r\n\r\n    }\r\n\r\n    filter(majorparent) {\r\n        this.MasterService.getacListTree().subscribe(data => {\r\n            var p = data.filter(x => x.ACID == majorparent)[0];\r\n\r\n            if (p != null) { this.acParentList = p.CHILDREN; }\r\n        });\r\n\r\n    }\r\n    onSave() {\r\n        \r\n        this.dialogMessageSubject.next(\"Saving Data please wait...\");\r\n        var dialogRef = this.dialog.open(MessageDialog, { hasBackdrop: true, data: { header: 'Information', message: this.dialogMessage$ } })\r\n        try {\r\n            ////console.log(\"submit call\");\r\n            //console.log({ PARENT: this.parentGroup })\r\n            if (!this.parentGroup) throw new Error(\"Parent is missing\");\r\n\r\n            let al = <TAcList>{};\r\n            if (this.mode == 'edit') {\r\n                al.ACID = this.ACID;\r\n                //console.log({ EDITEDACID: al.ACID })\r\n            }\r\n            if (this.modeTitle == 'AddLedger' || this.mode == 'edit' && this.grp == 'A') {\r\n                //console.log({ ModeTitle: \"A\" })\r\n                al.TYPE = \"A\"\r\n            }\r\n            else {\r\n                //console.log({ ModeTitle: \"G\" })\r\n                al.TYPE = \"G\"\r\n            }\r\n            al.ACNAME = this.AddLedger.value.ACNAME;\r\n            al.PType = this.AddLedger.value.ASSETTYPE;\r\n            // al.PARENT = this.AddLedger.value.parentid == null ? this.AddLedger.value.majorparent : this.AddLedger.value.parentid;\r\n            al.PARENT = this.parentGroup.ACID;\r\n            al.HASSUBLEDGER = this.AddLedger.value.hasSub;\r\n            al.ACCODE = this.AddLedger.value.ACCODE;\r\n            al.ACTYPE = this.parentGroup.ACTYPE;\r\n            al.MAPID = this.AddLedger.value.ASSETTYPE;\r\n            al.DIV = this.userProfile.userDivision\r\n           // al.IsNotActive = this.AddLedger.value.isNotActive\r\n            //console.log({ ACLedgSave: al })\r\n            //console.log({ SAVEMODE: this.mode })\r\n            let sub = this.MasterService.saveAccount(this.mode, al)\r\n                .subscribe(data => {\r\n                    if (data.status == 'ok') {\r\n                        ////console.log(\"Status\",data.status)\r\n                        var selNode = {}\r\n                        \r\n                        if (this.grp == 'A') {\r\n                            al.ACID = data.result.ACID\r\n                            \r\n                            ;\r\n                            this.MasterService.PartialAccountList.push(al);\r\n                            selNode = { type: 'A', value: al };\r\n                            ////console.log(\"TYPE99\", selNode)\r\n                        }\r\n                        else {\r\n                            selNode = { type: 'G', lastparent: this.lastParentID, value: { ACID: data.result.acid, ACNAME: al.ACNAME, PARENT: null, PARENTID: this.lastParentID, children: [] } };\r\n                        }\r\n\r\n                        this.SaveAcEmit.emit(selNode);\r\n                        this.dialogMessageSubject.next(\"Data Saved Successfully\")\r\n                        setTimeout(() => {\r\n                            dialogRef.close();\r\n                            // this.AccountTreePart(al);\r\n                            //console.log({ AccountTree: this.AccountTreePart })\r\n                            this.onClose.emit(true);\r\n                        }, 1000)\r\n                    }\r\n                    else {\r\n                        //alert(data.result);\r\n                        //the ConnectionString in the server is not initialized means the the token 's user is not int the list of database user so it could't make connectionstring. Re authorization is requierd\r\n                        if (data.result._body == \"The ConnectionString property has not been initialized.\") {\r\n                            this.router.navigate(['/login', this.router.url])\r\n                            return;\r\n                        }\r\n                        //Some other issues need to check\r\n                        this.DialogMessage = \"Error in Saving Data:\" + data.result._body;\r\n                        //console.log(data.result._body);\r\n                        setTimeout(() => {\r\n                            this.childModal.hide();\r\n                        }, 3000)\r\n                    }\r\n                },\r\n                error => { alert(error) }\r\n                );\r\n        }\r\n        catch (ex) {\r\n            this.dialogMessageSubject.next(ex)\r\n            setTimeout(function () {\r\n\r\n                dialogRef.close();\r\n            }, 3000);\r\n            //  alert(ex);\r\n            //  //console.log(ex);\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    cancel() {\r\n        // this.router.navigate([\"./pages/masters/AccountLedger\"]);\r\n        // this.onClose.emit(true);\r\n    }\r\n    hideChildModal() {\r\n        try {\r\n            this.childModal.hide();\r\n        } catch (ex) {\r\n            //console.log(ex);\r\n            alert(ex);\r\n        }\r\n    }\r\n    AccountTreePart(event) {\r\n        ////console.log(\"AccountTreePartCall\")\r\n        let addLedg = { ACID: event.ACID, ACNAME: event.ACNAME, PARENT: event.PARENT, SERIAL: event.SERIAL };\r\n        this.MasterService.PartialAccountList.push(addLedg);\r\n        var childproductList = this.MasterService.PartialAccountList.filter(p => p.PARENT == this.selectedNode.ACID);\r\n        if (childproductList.length > 0) {\r\n            this.source.load(childproductList);\r\n        }\r\n    }\r\n\r\n    // public onGroupChange(event, i,selected) {\r\n    //     try {\r\n\r\n    //         let subjectData = this.groupListSubject.getValue();\r\n    //         let newGroup: GroupAccounts = selected;\r\n    //         //console.log({event:event, subjectData: subjectData, eventIndex: i ,selected:selected});\r\n    //         newGroup.CHILDLIST = [];\r\n    //         var ind = i;\r\n    //         if(subjectData.length>ind+1){\r\n    //             subjectData.splice(ind + 1, subjectData.length - 1)\r\n    //         }\r\n    //         //console.log({ negroup: newGroup, subjectData: subjectData });\r\n    //         if (event) {\r\n    //             //console.log({ GroupchageEvent: event, value: newGroup.ACID });\r\n    //             this.accountService.getChildrenGroups(newGroup.ACID).subscribe(data => {\r\n    //                 newGroup.CHILDLIST.push(data);\r\n    //             }, Error => //console.log({ groupchangeError: Error })\r\n    //                 , () => {\r\n    //                     subjectData.push(newGroup);\r\n    //                     this.groupListSubject.next(subjectData);\r\n    //                     //console.log({ negroup2: newGroup, subjectData2: subjectData });\r\n    //                 }\r\n    //             );\r\n    //         }\r\n\r\n    //     }\r\n    //     catch (ex) {\r\n    //         //console.log({ onGroupChange: ex })\r\n    //     }\r\n\r\n    // }\r\n\r\n    public onGrpChange(event, i, selected) {\r\n\r\n        try {\r\n            if (selected) {\r\n                this.actype = selected.ACTYPE\r\n                this.changeACtype(selected.ACTYPE);\r\n                this.disableActype == true;\r\n                //latest selected \r\n                this.parentGroup = selected;\r\n            }\r\n\r\n\r\n            //let newGroup: GroupAccounts = event.value;\r\n            //console.log({ onGrpChangeEvent: event, eventIndex: i, selected: selected });\r\n            let opt: SelectItem[] = [];\r\n            var ind = i;\r\n\r\n            if (event) {\r\n                if (this.acGroups.length > ind + 1) {\r\n                    this.acGroups.splice(ind + 1, this.acGroups.length - 1)\r\n                }\r\n                //console.log({ GroupchageEvent: event, value: event.value.ACNAME, ACID: event.value.ACID });\r\n                this.lastParentID = event.value.ACID;\r\n                this.accountService.getChildrenGroups(event.value.ACID)\r\n                    .flatMap(data => data)\r\n                    .subscribe(data => {\r\n                        var selNode = {}\r\n                        //console.log({ children: data });\r\n                        if (data.TYPE == 'G')\r\n                            opt.push({ label: data.ACNAME, value: data });\r\n                    }, Error => //console.log({ groupchangeError: Error })\r\n                    , () => {\r\n                        if (opt.length > 0) {\r\n                            this.acGroups.push({ group: event.value.ACNAME, value: event.value, options: opt });\r\n                        }\r\n\r\n                        //this.groupListSubject.next(subjectData);\r\n                        // //console.log({ negroup2: { group: event.value.ACNAME, value: event.value, options: opt }, subjectData2: subjectData });\r\n                    }\r\n                    );\r\n            }\r\n\r\n        }\r\n        catch (ex) {\r\n            //console.log({ onGroupChange: ex })\r\n        }\r\n\r\n    }\r\n\r\n    getGroups() {\r\n        //FIRST GET THE MAIN GROUP\r\n        this.hasSubLedger = 0;\r\n        this.changehassubEvent(false);\r\n        this.disableHassubledger = false;\r\n        ////console.log(\"Has SUB is false\")\r\n        this.actype = '';\r\n        this.disableActype = false;\r\n        this.acGroups = [];\r\n        this.getMainGroup();\r\n        if (!this.ACID) return;\r\n        //console.log({ acid: this.ACID });\r\n        this.accountService.getParentGroups(this.ACID)\r\n            .flatMap(data => data)\r\n            .subscribe(data => {\r\n                try {\r\n                    data.SELECTEDGROUPAC = data.CHILDLIST.find(itm => itm.ACID == data.SELECTEDGROUP);\r\n                    this.parentGroup = data.SELECTEDGROUPAC;\r\n                    //console.log({ selectedGroup: data.SELECTEDGROUP, selectedGroupAC: data.SELECTEDGROUPAC })\r\n                    if (data.SELECTEDGROUPAC.HASSUBLEDGER == 1 && this.hasSubLedger == 0) {\r\n                        this.hasSubLedger = 1;\r\n                        this.changehassubEvent(true);\r\n                        this.disableHassubledger = true;\r\n                        ////console.log(\"Disable AHS SUB\")\r\n                    }\r\n                    \r\n                    let opt: SelectItem[] = [];\r\n                    data.CHILDLIST.forEach(child => {\r\n                        opt.push({ label: child.ACNAME, value: child });\r\n                    });\r\n                    this.acGroups.push({ group: data.ACNAME, value: data, options: opt });\r\n                }\r\n                catch (ex) {\r\n                    //console.log({ getParentGroups: ex })\r\n                }\r\n            }, error => { //console.log({ getgroupError: error }) }\r\n            , () => {\r\n                if (this.acGroups.length > 1) {\r\n                    let selectedGroup = this.acGroups[0].options.find(itm =>\r\n                        itm.value.ACID == this.acGroups[1].value.ACID\r\n                    )\r\n                    if (selectedGroup) {\r\n                        this.acGroups[0].value.SELECTEDGROUPAC = selectedGroup.value;\r\n                    }\r\n                    //console.log({ selectedGroupValue: selectedGroup.value });\r\n                    if (this.actype == '' && selectedGroup.value.ACTYPE) {\r\n                        this.actype = selectedGroup.value.ACTYPE\r\n                        this.changeACtype(selectedGroup.value.ACTYPE);\r\n                        this.disableActype == true;\r\n                    }\r\n                    // //console.log({groupTofind:this.acGroups[1],options:this.acGroups[0].options,selected:this.acGroups[0].value.SELECTEDGROUPAC,selected2:this.acGroups[1].value.SELECTEDGROUPAC})\r\n                }\r\n            });\r\n\r\n        return;\r\n    }\r\n\r\n    getMainGroup() {\r\n        let opt: SelectItem[] = [];\r\n        this.accountService.getTopGroups()\r\n            .flatMap(data => data)\r\n            .subscribe(data => {\r\n               opt.push({ label: data.ACNAME, value: data })\r\n            });\r\n            ////console.log(\"VALUE#######\",this.value)\r\n        this.acGroups.push({ group: 'Main Group', value: { ACNAME: 'MAIN GROUP', ACID: null, PARENT: null }, options: opt });\r\n    }\r\n\r\n    changehassubEvent(value) {\r\n        if (this.AddLedger == null) { return; }\r\n        this.AddLedger.get('hasSub').patchValue(value);\r\n        //console.log({ HasSubVAlue: value })\r\n    }\r\n    changeACtype(value) {\r\n        try {\r\n            this.AddLedger.get('ACType').patchValue(value);\r\n            //console.log({ ChangeValue: value })\r\n            if (value == 'AT') {\r\n                this.value = true;\r\n            }\r\n            else {\r\n                this.value = false;\r\n            }\r\n        }\r\n        catch (ex) {\r\n            //console.log(ex);\r\n        }\r\n    }\r\n    clickedNotActive(value) {\r\n        if(this.AddLedger==null){return}\r\n        this.AddLedger.get('isNotActive').patchValue(value);\r\n    }\r\n    check(){\r\n\r\n    }\r\n    checkActive(){\r\n        \r\n    }\r\n    BindValue(value){\r\n        this.AddLedger.patchValue({\r\n            ACNAME:value\r\n        })\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/pages/masters/components/account-ledger/addLedg.component.ts","import { Subscription } from 'rxjs/Subscription';\r\nimport { Component, OnInit, Input, Output, EventEmitter, ViewChild, Injector, HostListener } from '@angular/core';\r\nimport { AuthService } from \"./../../../../common/services/permission/authService.service\";\r\nimport { ModalDirective } from 'ng2-bootstrap'\r\nimport { Router } from \"@angular/router\";\r\nimport { AccountGroup, MasterRepo } from '../../../../common/repositories/masterRepo.service';\r\nimport { TreeNode, TREE_ACTIONS, KEYS, IActionMapping, TreeComponent } from 'angular-tree-component';\r\nimport { LocalDataSource, ServerDataSource } from '../../../../node_modules/ng2-smart-table/';\r\n\r\nimport { TreeViewPartyervice } from \"./partyledger.service\";\r\nimport { Subject } from \"rxjs/Subject\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { ContextMenuComponent } from 'ngx-contextmenu';\r\nimport { AlertService } from '../../../../common/services/alert/alert.service';\r\nimport { SpinnerService } from '../../../../common/services/spinner/spinner.service';\r\nimport { AppComponentBase } from '../../../../app-component-base';\r\nimport { AddPartyLedgerComponent } from './addpartyledger.component';\r\nimport { Division } from '../../../../common/interfaces';\r\nimport { GenericPopUpComponent, GenericPopUpSettings } from '../../../../common/popupLists/generic-grid/generic-popup-grid.component';\r\nimport { FileUploaderPopupComponent, FileUploaderPopUpSettings } from '../../../../common/popupLists/file-uploader/file-uploader-popup.component';\r\n\r\nconst actionMapping: IActionMapping = {\r\n  mouse: {\r\n    contextMenu: (tree, node, $event) => {\r\n      $event.preventDefault();\r\n      alert(`context menu for ${node.data.ACNAME}`);\r\n    },\r\n    dblClick: (tree, node, $event) => {\r\n      if (node.hasChildren) TREE_ACTIONS.TOGGLE_EXPANDED(tree, node, $event);\r\n    },\r\n    click: (tree, node, $event) => {\r\n      $event.shiftKey\r\n        ? TREE_ACTIONS.TOGGLE_SELECTED_MULTI(tree, node, $event)\r\n        : TREE_ACTIONS.TOGGLE_SELECTED(tree, node, $event)\r\n    }\r\n  },\r\n  keys: {\r\n    [KEYS.ENTER]: (tree, node, $event) => node.setActiveAndVisible()\r\n    //[KEYS.ENTER]: (tree, node, $event) =>  alert(`This is ${node.data.name}`)\r\n  }\r\n};\r\n\r\n@Component({\r\n  selector: \"partyLedger\",\r\n  template: require('./partyLedgerTable.component.html'),\r\n  styles: [require('../../../Style.css'), require('../../../modal-style.css'), require('./partyLedgerTable.component.css')],\r\n  providers: [MasterRepo, TreeViewPartyervice, AuthService]\r\n\r\n})\r\n\r\nexport class PartyLedgerComponent extends AppComponentBase implements OnInit {\r\n  @ViewChild('childModal') childModal: ModalDirective;\r\n  @ViewChild(ContextMenuComponent) public contextMenu: ContextMenuComponent;\r\n  @ViewChild('DeleteAcc') DeleteAcc: ModalDirective;\r\n  @ViewChild(\"genericGridACList\") genericGridACList: GenericPopUpComponent;\r\n  gridACListPopupSettings: GenericPopUpSettings = new GenericPopUpSettings();\r\n\r\n  DialogMessage: string = \"You are not authorized\";\r\n  addMode: boolean = false;\r\n  public mode: string;\r\n  public grp: string;\r\n  modeTitle: string;\r\n  loadListSubject: Subject<any> = new Subject<any>();\r\n  areaList: any[] = [];\r\n  loadList$: Observable<any> = this.loadListSubject.asObservable();\r\n  \r\n  partyFilter: any;\r\n  searchParty: any;\r\n  isLoader = true;\r\n  currentPage = 1;\r\n  totalCount: number;\r\n  itemsPerPage = 200;\r\n  showPartyLedgerFilterpopUp: boolean;\r\n  LedgerFilterObj: IsLedgerFilter = <IsLedgerFilter>{};\r\n  FormName : ExportLedgerFilterDto = <ExportLedgerFilterDto>{};\r\n\r\n  settings = {\r\n    mode: \"external\",\r\n    add: {\r\n      addButtonContent: '',\r\n    },\r\n    view: {\r\n      viewButtonContent: 'View',\r\n      saveButtonContent: '<i class=\"ion-checkmark\"></i>',\r\n      cancelButtonContent: '<i class=\"ion-close\"></i>',\r\n    },\r\n    edit: {\r\n      editButtonContent: 'Edit',\r\n      saveButtonContent: '<i class=\"ion-checkmark\"></i>',\r\n      cancelButtonContent: '<i class=\"ion-close\"></i>',\r\n    },\r\n    delete: {\r\n      deleteButtonContent: '<i class=\"ion-trash-a\"></i>',\r\n      confirmDelete: true\r\n    },\r\n    pager: {\r\n      display: true,\r\n      perPage: 14\r\n    },\r\n    columns: {\r\n      ACNAME: {\r\n        title: 'PARTY NAME',\r\n        type: 'number'\r\n\r\n      },\r\n      ADDRESS: {\r\n        title: 'ADDRESS',\r\n        type: 'string'\r\n\r\n      },\r\n      VATNO: {\r\n        title: 'VAT NO',\r\n        type: 'string'\r\n\r\n      }\r\n      ,\r\n      PartyType: {\r\n        title: 'PARTY TYPE',\r\n        type: 'string'\r\n\r\n      }\r\n      ,\r\n      Category: {\r\n        title: 'CATEGORY',\r\n        type: 'string',\r\n        width: '20px'\r\n      }\r\n      ,\r\n      Parent: {\r\n        title: 'PARTY GROUP',\r\n        type: 'string',\r\n        width: '20px'\r\n      }\r\n    }\r\n  };\r\n\r\n\r\n\r\n  private _treeEnable: Boolean = true;\r\n  subTitle: string;\r\n  parentPartyID: string = '';\r\n  mainGroupID: string = '';\r\n\r\n  public get treeEnable(): Boolean { return this._treeEnable; }\r\n\r\n  public set treeEnable(value: Boolean) { this._treeEnable = value; }\r\n  public selectedNode: any;\r\n  public nodes: any[] = [];\r\n  @ViewChild(TreeComponent)\r\n  public tree: TreeComponent;\r\n  source: LocalDataSource = new LocalDataSource();\r\n  busy: Subscription;\r\n  division: any[] = [];\r\n  GeoList: any[] = [];\r\n  userSetting:any;\r\n  @ViewChild(\"fileUploadPopup\") fileUploadPopup: FileUploaderPopupComponent;\r\n  fileUploadPopupSettings: FileUploaderPopUpSettings = new FileUploaderPopUpSettings();\r\n\r\n  constructor(public masterService: MasterRepo,\r\n    public _alertService: AlertService,\r\n    public _spinerService: SpinnerService,\r\n    public _authService: AuthService,\r\n    public router: Router,\r\n    public partyservice: TreeViewPartyervice,\r\n    public injector: Injector,\r\n    protected MasterService: MasterRepo\r\n  ) {\r\n    \r\n    super(injector);\r\n    this.searchParty = \"searchByName\";\r\n    this.masterService.getpartyListTree().map(x => { return x })\r\n    this.busy = this.masterService.getpartyListTree().map(x => { return x })\r\n      .subscribe(res => {\r\n        //console.log(res);\r\n        this.nodes = res;\r\n        //console.log(this.nodes);\r\n        if (this.tree != null) {\r\n          this.tree.treeModel.update();\r\n        }\r\n        //console.log(this.tree);\r\n      }, error => {\r\n        this.masterService.resolveError(error, \"partyLedger - PartyLedger\");\r\n      });\r\n\r\n   this.userSetting = this._authService.getSetting();\r\n\r\n    this.division = [];\r\n    this.masterService.getAllDivisions()\r\n      .subscribe(res => {\r\n        this.division.push(<Division>res);\r\n      }, error => {\r\n        this.masterService.resolveError(error, \"divisions - getDivisions\");\r\n      });\r\n\r\n\r\n    this.partyservice.getHierachy().subscribe(res => {\r\n      if (res.status == \"ok\") {\r\n        this.GeoList = res.result.GEO;\r\n\r\n      }\r\n    });\r\n    // this.getTreeItem();\r\n    this.partyservice.loadTableListSubject.subscribe(x=>{\r\n      //console.log(\"CheckXValu5\",x);\r\n  })\r\n\r\n  this.partyservice.getPartyGroupList().subscribe((response)=>{\r\n    //console.log(\"PARTY group,\", response);\r\n    if(response.length > 0){\r\n      this.masterService.partyGroupList = response;\r\n    }\r\n    else{\r\n      this.masterService.partyGroupList = [];\r\n    }\r\n  })\r\n  }\r\n\r\n  getTreeItem() {\r\n    this.partyservice.Refresh();\r\n    this.busy = this.partyservice.busy;\r\n    this.nodes = this.partyservice.nodes;\r\n    this.tree = this.partyservice.tree;\r\n  }\r\n\r\n\r\n\r\n  ngOnInit() {\r\n    this.partyservice.subTitle = \"\";\r\n    let data: Array<any> = [];\r\n    // this.loadListSubject.switchMap(snode => {\r\n    //   data = [];\r\n    //   ////console.log(\"reach here\");\r\n    //   return this.partyservice.getParentWisePartyList(snode.ACID)\r\n    // })\r\n    //   .subscribe(res => {\r\n    //     data.push(<any>res);\r\n    //     this.source.load(data);\r\n    //   })\r\n\r\n\r\n    // try { \r\n    //   let apiUrl = `${this.apiUrl}/getAllGeographicalHierarchyPagedList/${snode.ACID}`;\r\n    //   this.source =  this.source = new ServerDataSource(this._http, \r\n    //     { endPoint: apiUrl, \r\n    //       dataKey : \"data\", \r\n    //       pagerPageKey : \"currentPage\",\r\n    //       pagerLimitKey : \"maxResultCount\"\r\n    //     }); \r\n\r\n\r\n    // } catch (ex) {\r\n    //   //console.log(ex);\r\n    //   alert(ex);\r\n    // }\r\n\r\n    this.fileUploadPopupSettings = Object.assign(new FileUploaderPopUpSettings(),\r\n      {\r\n        title: \"Party Ledger Excel Upload\",\r\n        sampleFileUrl: `/downloadSampleFile/PARTYLEDGER`,\r\n        uploadEndpoints: `/masterImport/PARTYLEDGER`,\r\n        allowMultiple: false,\r\n        acceptFormat: \".xlsx\",\r\n        filename: `PARTYLEDGER`,\r\n        // note : ''\r\n      });\r\n\r\n  }\r\n\r\n\r\n  ngAfterViewInit() {\r\n    // document.getElementsByClassName('ACNAME')['0'].style.width = '20%';\r\n    // document.getElementsByClassName('ADDRESS')['0'].style.width = '20%';\r\n    // document.getElementsByClassName('VATNO')['0'].style.width = '8%';\r\n    // document.getElementsByClassName('PartyType')['0'].style.width = '10%';\r\n    // document.getElementsByClassName('Category')['0'].style.width = '8%';\r\n    // document.getElementsByClassName('Parent')['0'].style.width = '20%';\r\n\r\n    // this.ledgercomponent.getParentName();\r\n  }\r\n\r\n\r\n\r\n  getPartyPagedList() {\r\n    // let apiUrl = `${this.apiUrl}/getParentWiseAccountPagedList/${this.selectedNode.ACID}`;  \r\n    // this.source  = new ServerDataSource(this._http, \r\n    //   { endPoint: apiUrl, \r\n    //     dataKey : \"data\", \r\n    //     pagerPageKey : \"currentPage\",\r\n    //     pagerLimitKey : \"maxResultCount\"\r\n    //   }); \r\n    let data: Array<any> = [];\r\n    // this.masterService.getAcidWisePartyList(this.selectedNode.ACID)\r\n    // .subscribe(res => {\r\n    //   data.push(<any>res);\r\n    //   this.source.load(data);\r\n    // }, error => {\r\n    //   this.masterService.resolveError(error, \"divisions - getDivisions\");\r\n    // }\r\n\r\n    // );\r\n    this.masterService.getAcidWisePartyList(this.selectedNode.ACID).subscribe(res => {\r\n      if (res.status == \"ok\") {\r\n        data = res.result;\r\n        this.source.load(data);\r\n        this.partyservice.partyList = res ? res.result : [];\r\n        ////console.log(\"PledgerTable\",data)\r\n      } else {\r\n        this.partyservice.partyList = [];\r\n      }\r\n    });\r\n\r\n    ////console.log(\"sourcevalue\",this.source);\r\n  }\r\n\r\n\r\n  getChildren(node: any) {\r\n    return new Promise((resolve, reject) => {\r\n      setTimeout(() => resolve(this.asyncChildren.map((c) => {\r\n        return Object.assign({}, c, {\r\n          hasChildren: node.level < 5\r\n        });\r\n      })), 1000);\r\n    });\r\n  }\r\n\r\n  asyncChildren = [\r\n    {\r\n      name: 'child2.1',\r\n      subTitle: 'new and improved'\r\n    }, {\r\n      name: 'child2.2',\r\n      subTitle: 'new and improved2'\r\n    }\r\n  ];\r\n\r\n  addNode(addednode) {\r\n    ////console.log(\"node reached\")\r\n    this.tree.treeModel.getFocusedNode().data.children.push(addednode);\r\n    this.tree.treeModel.update();\r\n  }\r\n\r\n  childrenCount(node: TreeNode): string {\r\n    return node && node.children ? `(${node.children.length})` : '';\r\n  }\r\n\r\n  filterNodes(value, tree) {\r\n    try {\r\n      // displayField: 'ACNAME', is required\r\n      this.tree.treeModel.filterNodes(value, true);\r\n    } catch (ex) {\r\n      ////console.log(\"PartyFilter\", ex);\r\n      alert(\"PartyFilter-\" + ex)\r\n    }\r\n  }\r\n\r\n  activateSubSub(tree) {\r\n    // tree.treeModel.getNodeBy((node) => node.data.name === 'subsub')\r\n    tree.treeModel.getNodeById(1001)\r\n      .setActiveAndVisible();\r\n  }\r\n\r\n  customTemplateStringOptions = {\r\n    displayField: 'ACNAME',\r\n    isExpandedField: 'expanded',\r\n    idField: 'uuid',\r\n    getChildren: this.getChildren.bind(this),\r\n    actionMapping,\r\n    allowDrag: false\r\n  }\r\n\r\n  onEvent($event) {\r\n    //console.log.bind(console);\r\n  }\r\n  root: string;\r\n\r\n  onselect(tree, $event) {\r\n    if(!this.masterService.getRequestOption()){\r\n      return;\r\n    }\r\n    //this.source = new ServerDataSource();\r\n    ////console.log(\"CheckTree\",this.tree);\r\n    this.selectedNode = tree.treeModel.getFocusedNode().data;\r\n    //console.log(\"on tree click\", this.selectedNode);\r\n\r\n    this.MasterService.SelectedGroup = this.selectedNode.ACID;\r\n    this.getRootParent(this.selectedNode, this.nodes);\r\n    this.loadListSubject.next(this.selectedNode);\r\n    this.partyservice.ParentInfo = this.selectedNode;\r\n    this.getPartyPagedList();\r\n    this.partyservice.sortParty = \"sortByName\";\r\n\r\n\r\n  }\r\n\r\n\r\n\r\n  getList(selNod) {\r\n    //$event.stopPropagation();\r\n    let data: Array<any> = [];\r\n    this.partyservice.getParentWisePartyList(selNod.ACID)\r\n      .subscribe(res => {\r\n        data.push(<any>res);\r\n        this.source.load(data);\r\n      }\r\n      );\r\n\r\n  }\r\n  getRootParent(node, list) {\r\n    if (node.PARENTID == \"PA\") { this.root = node.ACID; return; }\r\n    for (let t of list) {\r\n      if (node.PARENTID != t.ACID) { this.loopingChild(node, t.children, t) }\r\n      else { this.root = t.ACID; }\r\n    }\r\n  }\r\n  loopingChild(node, cList, root) {\r\n    for (let c of cList) {\r\n      if (c != node) { this.loopingChild(node, c.children, root); }\r\n      else { this.root = root.ACID; }\r\n    }\r\n  }\r\n  go($event) {\r\n    $event.stopPropagation();\r\n    alert('this method is on the app component')\r\n  }\r\n\r\n  onTreeEnable(value: boolean) {\r\n    this.treeEnable = value;\r\n  }\r\n\r\n  AddLedger() {\r\n    if(!this.masterService.getRequestOption()){\r\n      return;\r\n    }\r\n    if (this.masterService.validateMasterCreation(\"create\") == false || this._authService.checkMenuRight(\"PartyTree\", \"add\") == false) {\r\n      this._alertService.info(\"Current user has no Rights to Add party.\");\r\n      return;\r\n    }\r\n    this.addMode = true;\r\n    this.modeTitle = \"AddLedger\"\r\n    this.partyservice.subTitle = \">> Add New Party A/C\"\r\n    this.mode = \"add\";\r\n    this.grp = \"A\";\r\n    this.masterService.focusAnyControl(\"ACCODE\");\r\n  }\r\n\r\n  AddGroup(trees) {\r\n    if(!this.masterService.getRequestOption()){\r\n      return;\r\n    }\r\n    if (this.masterService.validateMasterCreation(\"create\") == false || this._authService.checkMenuRight(\"PartyTree\", \"add\") == false) {\r\n      this._alertService.info(\"Current user has no Rights to Add Party Group.\");\r\n      return;\r\n    }\r\n    this.addMode = true;\r\n    this.modeTitle = \"AddGroup\"\r\n    this.partyservice.subTitle = \">> Add New Party Group\";\r\n    this.mode = \"add\";\r\n    this.grp = \"G\";\r\n    this.masterService.focusAnyControl(\"ACCODE\");\r\n\r\n    this.partyservice.addGroupSubject.next(true);\r\n\r\n  }\r\n\r\n  onEditClick(party): void {\r\n    if(!this.masterService.getRequestOption()){\r\n      return;\r\n    }\r\n    //console.log(\"ON EDIT CLICK\", party);\r\n    if (this.masterService.validateMasterCreation(\"edit\") == false || this._authService.checkMenuRight(\"PartyTree\", \"edit\") == false) {\r\n      this._alertService.info(\"Current user has no Rights to Edit Party.\");\r\n      return;\r\n    }\r\n    this.addMode = true;\r\n    this.mode = \"edit\";\r\n    this.modeTitle = \"AddLedger\"\r\n    this.partyservice.subTitle = \">> Edit Party A/C\";\r\n    // this.selectedNode = event.data;\r\n    ////console.log(\"@selected party for edit\", party);\r\n    this.selectedNode = party;\r\n    this.MasterService.SelectedGroup = party.PARENT_CODE;\r\n    ////console.log(\"selectedNode\",this.selectedNode);\r\n\r\n    this.grp = \"A\"\r\n\r\n  }\r\n\r\n  onViewClick(party): void {\r\n    if(!this.masterService.getRequestOption()){\r\n      return;\r\n    }\r\n    if(this._authService.checkMenuRight(\"PartyTree\", \"view\") == false){\r\n      this._alertService.info(\"Current user has no  Rights to View Party.\");\r\n      return;\r\n    }\r\n    this.addMode = true;\r\n    this.mode = \"view\";\r\n    this.partyservice.subTitle = \">> View Party A/C\"\r\n    // this.selectedNode = event.data;\r\n    this.selectedNode = party;\r\n    this.grp = \"A\"\r\n  }\r\n\r\n  hideChildModal() {\r\n    this.childModal.hide();\r\n  }\r\n  onAddClose(event) {\r\n    this.addMode = false;\r\n    this.mode = \"\";\r\n    this.masterService.groupSelectObj = <AccountGroup>{};\r\n    this.masterService.disableSubPartyA=true;\r\n    this.masterService.disableSubPartyB=true;\r\n    this.masterService.disableSubPartyC=true;\r\n    this.parentPartyID = \"\";\r\n    this.selectedNode = undefined;\r\n\r\n    this.masterService.getAcidWisePartyList(event,\"sortItemByDate\").subscribe(res => {\r\n      if (res.status == \"ok\") {\r\n        this.partyservice.partyList = res ? res.result : [];\r\n        ////console.log(\"PledgerTable\",data)\r\n      } else {\r\n        this.partyservice.partyList = [];\r\n      }\r\n    });\r\n\r\n  }\r\n  public contextMenuActions = [\r\n    {\r\n      html: (item) => `Edit`,\r\n      tag: 'edit',\r\n      enabled: (item) => true,\r\n      visible: (item) => true,\r\n    },\r\n    {\r\n      divider: true,\r\n      visible: true,\r\n    },\r\n    {\r\n      html: (item) => `Delete`,\r\n      tag: 'delete',\r\n      enabled: (item) => true,\r\n      visible: (item) => true,\r\n    },\r\n  ];\r\n\r\n  contextMenuClick(selecteddata, selectedmenu) {\r\n    //console.log(\"context menu click\", selecteddata, selectedmenu)\r\n    if (selectedmenu.tag == \"edit\") {\r\n      ////console.log(\"Edit Context menu\")\r\n      this.addMode = true;\r\n      this.modeTitle = \"AddGroup\"\r\n      this.partyservice.subTitle = \">> Edit Party Group\"\r\n      this.mode = \"edit\";\r\n      this.selectedNode = selecteddata;\r\n      this.selectedNode.PARENT_CODE = selecteddata.PARENTID;\r\n\r\n      ////console.log(\"selecteddata\",selecteddata)\r\n      this.grp = \"G\"\r\n    }\r\n    else if (selectedmenu.tag == \"delete\") {\r\n      let childrenPartyList = [];\r\n      let childreenList = [];\r\n      this.masterService.getChildrenPartyAccount(this.selectedNode.ACID).subscribe(\r\n        res => {\r\n          if (res) {\r\n            childrenPartyList = res.result;\r\n            ////console.log(\"partylist\",childrenPartyList)\r\n            if (childrenPartyList.length > 0) {\r\n              this._alertService.info(\"PARTY ACCOUNT EXIST UNDER SELECTED PARTY GROUP. HENCE, REQUESTED COMMAND IS ABORTED\");\r\n            } else {\r\n              ////console.log(\"children\",this.selectedNode.children);\r\n              childreenList = this.selectedNode.children;\r\n              if (childreenList.length > 0) {\r\n                this._alertService.info(\"PARTY ACCOUNT EXIST UNDER SELECTED PARTY GROUP. HENCE, REQUESTED COMMAND IS ABORTED\");\r\n              } else {\r\n                this.DeleteAcc.show();\r\n              }\r\n            }\r\n          }\r\n        }\r\n      )\r\n\r\n\r\n\r\n    }\r\n  }\r\n  SavePartyEmit(value) {\r\n    //console.log(\"Party$$$$\", value)\r\n    if (value.type == \"G\") {\r\n      // this.getGivenNode(value.lastparent, this.nodes, value.value);\r\n      // this.tree.treeModel.update();\r\n      // if (this.tree != null) {\r\n      //   this.tree.treeModel.update();\r\n      // }\r\n      this.Refresh();\r\n      this.loadListSubject.next(this.selectedNode);\r\n    }\r\n    else {\r\n      var childAccountList = this.masterService.PartialAccountList.filter(a => a.PARENT == value.value.PARENT);\r\n      if (childAccountList.length > 0) {\r\n        ////console.log(\"Data from Array\");\r\n        this.loadListSubject.next(this.selectedNode);\r\n      }\r\n    }\r\n  }\r\n\r\n  EditPartyEmit() {\r\n    this.Refresh();\r\n  }\r\n\r\n\r\n\r\n\r\n  getGivenNode(nodeid: string, list: any[], savedNode): any {\r\n    for (let ag of list) {\r\n      //console.log({ 'recusiveIteration': ag.ACID })\r\n      ////console.log(\"ag\", ag)\r\n      if (ag.ACID == nodeid) {\r\n        ag.children.push(savedNode);\r\n        //console.log('requiredvalue', ag);\r\n        return ag;\r\n      }\r\n      else if (ag.children && ag.children.length > 0) {\r\n        var node = this.getGivenNode(nodeid, ag.children, savedNode);\r\n        if (node) {\r\n          return node;\r\n        }\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n\r\n  DeleteYes() {\r\n    this.DeleteAcc.hide();\r\n    this._spinerService.show(\"Deleting Data please wait...\");\r\n    this.masterService.deleteAccount(this.selectedNode.ACID).subscribe(data => {\r\n      if (data.status == \"ok\") {\r\n        this._alertService.success(\"Data Deleted Successfully\");\r\n        this._spinerService.hide();\r\n        this.Refresh();\r\n      }\r\n      else {\r\n\r\n        //alert(data.result);\r\n        //the ConnectionString in the server is not initialized means the the token 's user is not int the list of database user so it could't make connectionstring. Re authorization is requierd\r\n        if (\r\n          data.result._body ==\r\n          \"The ConnectionString property has not been initialized.\"\r\n        ) {\r\n          this.router.navigate([\"/login\", this.router.url]);\r\n          return;\r\n        }\r\n        //Some other issues need to check\r\n        this._alertService.error(\r\n          \"Error in Deleting Data:\" + data.result._body\r\n        );\r\n\r\n      }\r\n    })\r\n  }\r\n  DeleteNo() {\r\n    this.DeleteAcc.hide();\r\n  }\r\n\r\n  onClickNo() {\r\n    this.DeleteAcc.hide();\r\n  }\r\n\r\n\r\n\r\n  Refresh() {\r\n    this.masterService._accountPartyTree = [];\r\n    this.masterService.getPartyTreeObservable = null;\r\n    //this.masterService.getpartyListTree().map(x => { return x })\r\n    this.busy = this.masterService.getpartyListTree().map(x => { return x })\r\n      .subscribe(res => {\r\n        //console.log(res);\r\n\r\n        this.nodes = res;\r\n        //console.log(this.nodes);\r\n        if (this.tree != null) {\r\n          this.tree.treeModel.update();\r\n        }\r\n        //console.log(this.tree);\r\n      }, error => {\r\n        this.masterService.resolveError(error, \"partyLedger - PartyLedger\");\r\n      });\r\n\r\n  }\r\n\r\n  onDeleteConfirm(event): void {\r\n\r\n    if (window.confirm('Are you sure you want to delete?')) {\r\n      //event.confirm.resolve();\r\n      event.data.ISACTIVE = 0;\r\n      this._spinerService.show(\"please Wait..\");\r\n      this.masterService.inActiveAccount(event.data.ISACTIVE, event.data.ACCODE, event.data.ACID).subscribe(res => {\r\n        if (res.status == \"ok\") {\r\n          this._spinerService.hide();\r\n          this._alertService.info(\"Deleted successfully..\");\r\n          this.getPartyPagedList();\r\n        } else {\r\n          ////console.log(\"response\",res.result._body)\r\n          this._spinerService.hide();\r\n          this._alertService.info(res.result._body)\r\n        }\r\n      })\r\n    } else {\r\n      // event.confirm.reject();\r\n    }\r\n  }\r\n\r\n  partyPagination(event) {\r\n    this.isLoader = true;\r\n    this.currentPage = event;\r\n    const t = this;\r\n    window.scrollTo({ top: 0, behavior: 'smooth' });\r\n    setTimeout(() => {\r\n      t.isLoader = false;\r\n    }, 500);\r\n  }\r\n\r\n  backToDashboard() {\r\n    this.router.navigate([\"pages/dashboard\"])\r\n  }\r\n\r\n\r\n  @HostListener(\"document : keydown\", [\"$event\"])\r\n  handleKeyDownboardEvent($event: KeyboardEvent) {\r\n    if ($event.code == 'F10') {\r\n      $event.preventDefault();\r\n      this.backToDashboard();\r\n    }\r\n  }\r\n\r\n  ExportPartyLedger() {\r\n    if(!this.masterService.getRequestOption()){\r\n      return;\r\n    }\r\n    this.showPartyLedgerFilterpopUp = true;\r\n  }\r\n  ExportAll() {\r\n    this.FormName.data = \"Party\";\r\n    let filterObjData = {data: this.FormName,filtername : \"AllPartyList\"}\r\n    this.masterService.getExcelFile('/getAllLegerList',filterObjData).subscribe(\r\n      data => {\r\n        this._alertService.hide();\r\n        this.masterService.downloadFile(data);\r\n        this.CancelCommand();\r\n      },\r\n      error => {\r\n        this._alertService.hide();\r\n      }\r\n    )\r\n  }\r\n  OkCommand() {\r\n    this.LedgerFilterObj.FILTER = \"Party\";\r\n    this.LedgerFilterObj.PARENT = this.selectedNode.ACID;\r\n    let filterObjData = {data:this.LedgerFilterObj }\r\n    this.masterService.getExcelFileFilter('/getLedgerByFilter',filterObjData).subscribe(\r\n      data => {\r\n        this._alertService.hide();\r\n       \r\n        this.masterService.downloadFile(data);\r\n        this.CancelCommand();\r\n      },\r\n      error => {\r\n        this._alertService.info(\"Data not found\");\r\n      }\r\n    )\r\n    this.showPartyLedgerFilterpopUp = false;\r\n  }\r\n  CancelCommand() {\r\n    this.LedgerFilterObj = <IsLedgerFilter>{};\r\n    this.FormName =  <ExportLedgerFilterDto>{};\r\n    this.showPartyLedgerFilterpopUp = false;\r\n  }\r\n\r\n  showAcList(i) {\r\n    let TRNMODE = \"\";\r\n    if(this.LedgerFilterObj.type == \"Customer\"){\r\n      TRNMODE = \"Customer_Pay\";\r\n    }else if(this.LedgerFilterObj.type == \"Supplier\"){\r\n      TRNMODE = \"SupplierListOnly\";\r\n    }\r\n    //console.log(\"TRNMODE\",TRNMODE)\r\n    this.gridACListPopupSettings = {\r\n      title: \"Accounts\",\r\n      apiEndpoints: `/getAccountPagedListByMapId/Details/${TRNMODE}`,\r\n      defaultFilterIndex: 1,\r\n      columns: [\r\n        {\r\n          key: \"ACID\",\r\n          title: \"AC CODE\",\r\n          hidden: false,\r\n          noSearch: false\r\n        },\r\n        {\r\n          key: \"ACNAME\",\r\n          title: \"A/C NAME\",\r\n          hidden: false,\r\n          noSearch: false\r\n        }\r\n      ]\r\n    };\r\n\r\n    this.genericGridACList.show();\r\n  }\r\n\r\n  onAcSelect(acItem) {\r\n    this.LedgerFilterObj.accountName = acItem.ACNAME;\r\n    this.LedgerFilterObj.ACID = acItem.ACID;\r\n  }\r\n\r\n  changeType(){\r\n    this.LedgerFilterObj.accountName = \"\";\r\n    this.LedgerFilterObj.ACID = \"\";\r\n    this.LedgerFilterObj.accountType = \"\";\r\n  }\r\n  sortProductListByDate(){\r\n    //console.log(\"CheckvalueFromTable\",this.partyservice.partyList)\r\n    \r\n  }\r\n\r\n  getSubPartyA(e){\r\n    let mainPartyId = e.target.value;\r\n    this.parentPartyID = mainPartyId;\r\n    this.mainGroupID = mainPartyId;\r\n    this.partyservice.getSubPartyList(mainPartyId).subscribe((res) =>{\r\n      if(res.length > 0){\r\n        //console.log(\"party A\", res);\r\n        this.masterService.subPartyAList = res;\r\n        this.masterService.disableSubPartyA = false;\r\n        this.masterService.disableSubPartyB = true;\r\n        this.masterService.disableSubPartyC = true;\r\n        this.masterService.groupSelectObj.SUBGROUP_A = \"\";\r\n        this.masterService.groupSelectObj.SUBGROUP_B = \"\";\r\n        this.masterService.groupSelectObj.SUBGROUP_C = \"\";\r\n      }else{\r\n        this.masterService.subPartyAList = [];\r\n        this.masterService.disableSubPartyA = true;\r\n        this.masterService.disableSubPartyB = true;\r\n        this.masterService.disableSubPartyC = true;\r\n        this.masterService.groupSelectObj.SUBGROUP_A = \"\";\r\n        this.masterService.groupSelectObj.SUBGROUP_B = \"\";\r\n        this.masterService.groupSelectObj.SUBGROUP_C = \"\";\r\n      }\r\n    })\r\n  }\r\n\r\n  getSubPartyB(e){\r\n    let subGroupID = e.target.value;\r\n    this.parentPartyID = subGroupID;\r\n    // //console.log(\"sub group A selected\", this.parentGroupID)\r\n    this.partyservice.getSubPartyList(this.parentPartyID).subscribe((res) =>{\r\n      if(res.length > 0 ){\r\n        //console.log(\"list B\", res);\r\n        this.masterService.subPartyBList = res;\r\n        this.masterService.disableSubPartyB = false;\r\n        this.masterService.disableSubPartyC = true;\r\n\r\n      }else{\r\n        this.masterService.subPartyBList = [];\r\n        this.masterService.disableSubPartyB = true;\r\n        this.masterService.disableSubPartyC = true;\r\n        this.masterService.groupSelectObj.SUBGROUP_B = \"\";\r\n      }\r\n    })\r\n  }\r\n\r\n  \r\n  getSubPartyC(e){\r\n    let subGroupID = e.target.value;\r\n    this.parentPartyID = subGroupID;\r\n    //console.log(\"sub group B selected\", this.parentPartyID)\r\n    this.partyservice.getSubPartyList(this.parentPartyID).subscribe((res) =>{\r\n      if(res.length > 0 ){\r\n        //console.log(\"list C\", res);\r\n        this.masterService.subPartyCList = res;\r\n        this.masterService.disableSubPartyC = false;\r\n\r\n      }else{\r\n        this.masterService.subPartyCList = [];\r\n        this.masterService.disableSubPartyC = true;\r\n        this.masterService.groupSelectObj.SUBGROUP_C = \"\";\r\n        \r\n      }\r\n    })\r\n  }\r\n\r\n  selectSubPartyC(e){\r\n    let subGroupID = e.target.value;\r\n    this.parentPartyID = subGroupID;\r\n  }\r\n  \r\n\r\n  sortPartyListByName(){\r\n    this.masterService.getAcidWisePartyList(this.selectedNode.ACID).subscribe(res =>{\r\n      if(res.status == \"ok\"){\r\n        this.partyservice.partyList = res? res.result : [];\r\n      }else{\r\n        this.partyservice.partyList = [];\r\n      }\r\n    });\r\n  }\r\n\r\n  sortPartyListByDate(){\r\n    this.masterService.getAcidWisePartyList(this.selectedNode.ACID,\"sortItemByDate\").subscribe(res =>{\r\n      if(res.status == \"ok\"){\r\n        this.partyservice.partyList = res? res.result : [];\r\n      }else{\r\n        this.partyservice.partyList = [];\r\n      }\r\n    });\r\n  }\r\n\r\n  ExcelUploadPartyLedger(){\r\n    if(!this.masterService.getRequestOption()){\r\n      return;\r\n    }\r\n    this.fileUploadPopup.show();\r\n  }\r\n\r\n  fileUploadSuccess(uploadedResult) {\r\n    if (!uploadedResult || uploadedResult == null || uploadedResult == undefined) {\r\n      return;\r\n    }\r\n  }\r\n\r\n\r\n}\r\nexport interface IsLedgerFilter {\r\n  FILTER:string;\r\n  type: string;\r\n  accountType: string;\r\n  accountName: string;\r\n  ACID: string;\r\n  PARENT:string;\r\n}\r\nexport interface  ExportLedgerFilterDto{\r\n  data: string;\r\n  filtername: string;\r\n  \r\n}\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/pages/masters/components/party-ledger/partyLedgerTable.component.ts","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../node_modules/raw-loader/index.js!../../../../../../node_modules/sass-loader/index.js!./smartTables.scss\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = require(\"!../../../../../../node_modules/style-loader/addStyles.js\")(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../../../../../node_modules/raw-loader/index.js!../../../../../../node_modules/sass-loader/index.js!./smartTables.scss\", function() {\n\t\t\tvar newContent = require(\"!!../../../../../../node_modules/raw-loader/index.js!../../../../../../node_modules/sass-loader/index.js!./smartTables.scss\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/style-loader!./src/app/pages/masters/components/ALedger/smartTables.scss\n// module id = 1466\n// module chunks = 12","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../node_modules/raw-loader/index.js!../../../../../../node_modules/sass-loader/index.js!./smartTables.scss\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = require(\"!../../../../../../node_modules/style-loader/addStyles.js\")(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../../../../../node_modules/raw-loader/index.js!../../../../../../node_modules/sass-loader/index.js!./smartTables.scss\", function() {\n\t\t\tvar newContent = require(\"!!../../../../../../node_modules/raw-loader/index.js!../../../../../../node_modules/sass-loader/index.js!./smartTables.scss\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/style-loader!./src/app/pages/masters/components/PLedger/smartTables.scss\n// module id = 1467\n// module chunks = 12","import {\r\n  Component,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  Injector,\r\n  HostListener\r\n} from \"@angular/core\";\r\nimport { PagedListingComponentBase } from \"../../../paged-list-component-base\";\r\nimport { MasterRepo } from \"../../repositories\";\r\nimport { GenericPopUpSettings } from \"../generic-grid/generic-popup-grid.component\";\r\nimport { PLedgerservice } from \"../../../pages/masters/components/PLedger/PLedger.service\";\r\n\r\n@Component({\r\n  selector: \"account-group-popup-grid\",\r\n  template: require('./account-group-popup-grid.component.html'),\r\n  styles: [require('../../../pages/Style.css'), require('../pStyle.css')]\r\n})\r\nexport class AccountGroupPopUpComponent extends PagedListingComponentBase {\r\n  /** List Declaration  */\r\n\r\n  isActive: boolean = false;\r\n  itemList: any[] = [];\r\n  selectedRowIndex: number = 0;\r\n  tabindex: string = \"list\";\r\n\r\n  /** Output  */\r\n\r\n  @Output() onPopUpClose = new EventEmitter();\r\n  @Output() onItemDoubleClick = new EventEmitter();\r\n  @Input() Prefix: string;\r\n  /** Input  */\r\n\r\n  popupsettings: GenericPopUpSettings;\r\n\r\n  constructor(\r\n    public injector: Injector,\r\n    private masterService: MasterRepo,\r\n    private _Ledgerservice: PLedgerservice\r\n  ) {\r\n    super(injector);\r\n    this.popupsettings = {\r\n      title: \"Account Groups\",\r\n      apiEndpoints: `/getAccountItem/`,\r\n      defaultFilterIndex: 0,\r\n      columns: [\r\n        {\r\n          key: \"ACNAME\",\r\n          title: \"Account Name\",\r\n          hidden: false,\r\n          noSearch: false\r\n        },\r\n        {\r\n          key: \"ACID\",\r\n          title: \"CODE\",\r\n          hidden: false,\r\n          noSearch: false\r\n        },\r\n        {\r\n          key: \"PARENT\",\r\n          title: \"PARENT\",\r\n          hidden: false,\r\n          noSearch: false\r\n        }\r\n      ]\r\n    };\r\n\r\n  }\r\n\r\n  show(currentItem: any = <any>{}) {\r\n    // this.popupsettings.apiEndpoints=`/getAccountItem/${this.Prefix}`,\r\n    this.isActive = true;\r\n    this.selectedRowIndex = 0;\r\n    if (this.itemList.length > 0) return;\r\n    this.refreshPage();\r\n    this.refresh();\r\n  }\r\n\r\n  getData() {\r\n    if (this.Prefix == '') { alert(\"Please select MainGroup first!\"); return }\r\n\r\n    this.selectedRowIndex = 0;\r\n    if (this.itemList.length) { return }\r\n    this._Ledgerservice.getAccountLedgerItem(this.Prefix).subscribe(res => {\r\n      if (res.status == \"ok\") {\r\n        this.itemList = res.result.length > 0 ? res.result.filter(x => x.TYPE == \"G\") : [];\r\n      }\r\n    });\r\n  }\r\n\r\n  hide() {\r\n    this.itemList = [];\r\n    this.pageNumber = 1;\r\n    this.totalItems = 0;\r\n    this.isActive = false;\r\n  }\r\n\r\n  triggerSearch() {\r\n    if (\r\n      this.filterOption == null ||\r\n      this.filterOption == undefined ||\r\n      this.filterOption == \"\"\r\n    )\r\n      return;\r\n    if (\r\n      this.filterValue == null ||\r\n      this.filterValue == undefined ||\r\n      this.filterValue == \"\"\r\n    )\r\n      return;\r\n\r\n    this.refreshPage();\r\n    this.refresh();\r\n  }\r\n\r\n  singleClick(index) {\r\n    this.selectedRowIndex = index;\r\n  }\r\n\r\n  doubleClick($event) {\r\n    this.onItemDoubleClick.emit($event);\r\n    this.hide();\r\n  }\r\n\r\n  @HostListener(\"document : keydown\", [\"$event\"])\r\n  updown($event: KeyboardEvent) {\r\n    if (\r\n      $event.code == \"ArrowDown\" &&\r\n      this.selectedRowIndex < this.pageSize - 1\r\n    ) {\r\n      $event.preventDefault();\r\n      this.selectedRowIndex++;\r\n    }\r\n    else if ($event.code == \"ArrowDown\") {\r\n      $event.preventDefault();\r\n      this.selectedRowIndex = 0;\r\n      this.pageNumber = this.pageNumber + 1;\r\n    }\r\n    else if ($event.code == \"ArrowUp\" && this.selectedRowIndex - 1 > -1) {\r\n      $event.preventDefault();\r\n      this.selectedRowIndex--;\r\n    }\r\n    else if ($event.code == \"ArrowUp\") {\r\n      $event.preventDefault();\r\n      this.selectedRowIndex = 0;\r\n      this.pageNumber = this.pageNumber > 0 ? this.pageNumber - 1 : this.pageNumber\r\n    }\r\n    else if (\r\n      $event.code == \"Enter\" &&\r\n      this.selectedRowIndex >= 0 &&\r\n      this.selectedRowIndex < this.itemList.length - 1\r\n    ) {\r\n      $event.preventDefault();\r\n\r\n      let itemIndex = ((this.pageNumber - 1) * this.pageSize) + (this.selectedRowIndex)\r\n      this.onItemDoubleClick.emit(this.itemList[this.selectedRowIndex]);\r\n      this.hide();\r\n      this.itemListClosed();\r\n    }\r\n  }\r\n\r\n  itemListClosed() {\r\n    this.onPopUpClose.emit();\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/common/popupLists/AGroupPopup/account-group-popup-grid.component.ts","import { Observable } from \"rxjs/Observable\";\r\nimport { MdDialog } from \"@angular/material\";\r\nimport { MessageDialog } from \"./../../../modaldialogs/messageDialog/messageDialog.component\";\r\nimport { BehaviorSubject } from \"rxjs/BehaviorSubject\";\r\nimport {\r\n  Component,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  ViewChild,\r\n  ElementRef\r\n} from \"@angular/core\";\r\nimport { ActivatedRoute, Router } from \"@angular/router\";\r\nimport { FormGroup, FormBuilder, FormControl } from \"@angular/forms\";\r\nimport { Subscription } from \"rxjs/Subscription\";\r\nimport { ModalDirective } from \"ng2-bootstrap\";\r\nimport { MasterRepo } from \"../../../../common/repositories/masterRepo.service\";\r\nimport {\r\n  AcListTree,\r\n  TAcList\r\n} from \"../../../../common/interfaces/Account.interface\";\r\nimport { AuthService } from \"../../../../common/services/permission\";\r\n\r\nimport { TransactionService } from \"../../../../common/Transaction Components/transaction.service\";\r\nimport { PLedgerservice } from \"../PLedger/PLedger.service\";\r\nimport { AccountGroupPopUpComponent } from \"../../../../common/popupLists/AGroupPopup/account-group-popup-grid.component\";\r\nimport { PreventNavigationService } from \"../../../../common/services/navigation-perventor/navigation-perventor.service\";\r\nimport { AlertService } from \"../../../../common/services/alert/alert.service\";\r\nimport { SpinnerService } from \"../../../../common/services/spinner/spinner.service\";\r\nimport { ForAccountGroupPopUpComponent } from \"../../../../common/popupLists/AGroupPopup/ForAccountLedger.component\";\r\nimport { PLedgerComponent } from \"../PLedger/PLedger.component\";\r\n\r\n@Component({\r\n  selector: \"ALedger\",\r\n  template: require('./ALedger.html'),\r\n  providers: [PLedgerservice, TransactionService],\r\n  styles: [require('../../../Style.css'), require('../../../../common/popupLists/pStyle.css')]\r\n})\r\nexport class ALedgerComponent {\r\n  @ViewChild(\"acPopupGrid\") acPopupGrid: ForAccountGroupPopUpComponent;\r\n  @Output(\"onClose\") onClose = new EventEmitter();\r\n  ACID: string;\r\n  @Input() rootID: string;\r\n  @Input() mode: string;\r\n  @Input() grp: string;\r\n  @Output() SavePartyEmit = new EventEmitter();\r\n  @ViewChild(\"showParty\") sParty: ElementRef;\r\n  @ViewChild(\"PLedgerChild\") PLedgerChild: PLedgerComponent;\r\n  showAssets = 0;\r\n  PARENTNAME = new FormControl('')\r\n  selectednode: any;\r\n  parentid: any;\r\n  majorparent: any;\r\n  majorParentAcList: any[] = [];\r\n  acParentList: any[] = [];\r\n  PARENTACNAME: string;\r\n  RootName: string;\r\n  acListtree: AcListTree = <AcListTree>{};\r\n  ledgerAcObj: TAcList = <TAcList>{};\r\n  ledgerAcList: TAcList[];\r\n  private returnUrl: string;\r\n  router: Router;\r\n  form: FormGroup;\r\n  viewMode = false;\r\n  DialogMessage: string = \"Saving data please wait ...\";\r\n  private subcriptions: Array<Subscription> = [];\r\n  initialTextReadOnly = false;\r\n  ID: string = \"\";\r\n  modeTitle: string;\r\n  // parentGroup: GroupParty;\r\n  acGroups: any[] = [];\r\n  Prefix: any;\r\n  dialogMessageSubject: BehaviorSubject<string> = new BehaviorSubject<string>(\r\n    \"\"\r\n  );\r\n  dialogMessage$: Observable<string> = this.dialogMessageSubject.asObservable();\r\n  actype: string = \"\";\r\n  disableActype: boolean = false;\r\n  lastParentID: string;\r\n  userProfile: any;\r\n  formObj: any = <any>{};\r\n  Title: string = \"\";\r\n  PType: string;\r\n  isGroup: number;\r\n  AccCurrentSelectedGroup: any;\r\n  editItem: any;\r\n  isSubGrpEmpty = true;\r\n  MainGrpList:any[]=[];\r\n  AllGrpList:any[]=[];\r\n  isActive: boolean = false;\r\n  Acctitle:any;\r\n  BankPartyVerification:any=<any>{}\r\n  constructor(\r\n    private preventNavigationService: PreventNavigationService,\r\n    private alertService: AlertService,\r\n    private loadingService: SpinnerService,\r\n    private MasterService: MasterRepo,\r\n    router: Router,\r\n    private _activatedRoute: ActivatedRoute,\r\n    private _fb: FormBuilder,\r\n    public dialog: MdDialog,\r\n    private _authService: AuthService,\r\n    private _Ledgerservice: PLedgerservice,\r\n  ) {\r\n    this.router = router;\r\n    this.userProfile = this._authService.getUserProfile();\r\n    this.showAssets = 0;\r\n    \r\n    this._Ledgerservice.getAllMainGroup().subscribe(res => {\r\n      ////console.log(\"reachedaaa\",res)\r\n      if (res.status == \"ok\") {\r\n          this.MainGrpList=res.result;\r\n      }\r\n  });\r\n\r\n  }\r\n  ngAfterViewInit() {\r\n    // setTimeout(() => {\r\n    //   this.acPopupGrid.show(\"a\");\r\n    // }, 4000);\r\n    this.acPopupGrid.show(this.AccCurrentSelectedGroup);\r\n  }\r\n  ngOnInit() {\r\n    this.form = this._fb.group({\r\n      PARENT: [\"\"],\r\n      ACCODE: [\"\"],\r\n      ACNAME: [\"\"],\r\n      ISACTIVE: [1],\r\n      HASSUBLEDGER: [0],\r\n      ACTYPE: [\"\"],\r\n      DIV: [\"\"],\r\n      MAPID: [\"\"],\r\n      TYPE: [\"\"],\r\n      ACID: [\"\"],\r\n      MainGroup: [\"\"],\r\n\r\n    });\r\n    this.onFormChanges();\r\n    if (!!this._activatedRoute.snapshot.params[\"mode\"])\r\n      this.mode = this._activatedRoute.snapshot.params[\"mode\"];\r\n\r\n    if (!!this._activatedRoute.snapshot.params[\"isGroup\"])\r\n      this.isGroup = this._activatedRoute.snapshot.params[\"isGroup\"];\r\n\r\n    if (!!this._activatedRoute.snapshot.params[\"PType\"])\r\n      this.PType = this._activatedRoute.snapshot.params[\"PType\"];\r\n\r\n    this.form.patchValue({\r\n      TYPE: this.PType\r\n\r\n    })\r\n\r\n    if (!!this._activatedRoute.snapshot.params[\"Title\"])\r\n      this.Title = this._activatedRoute.snapshot.params[\"Title\"];\r\n\r\n    if (!!this._activatedRoute.snapshot.params[\"ACID\"])\r\n      this.ACID = this._activatedRoute.snapshot.params[\"ACID\"];\r\n\r\n    if (!!this._activatedRoute.snapshot.params[\"returnUrl\"])\r\n      this.returnUrl = this._activatedRoute.snapshot.params[\"returnUrl\"];\r\n    if (!!this._activatedRoute.snapshot.params[\"PType\"])\r\n      this.PType = this._activatedRoute.snapshot.params[\"PType\"];\r\n\r\n    this.form.patchValue({\r\n      TYPE: this.PType\r\n\r\n    })\r\n\r\n    if (this.mode == \"edit\") {\r\n      //this.form.get(\"PARENT\").disable();\r\n      //  this.form.get(\"ACCODE\").disable();\r\n      //this.form.get(\"ACNAME\").disable();\r\n      //this.form.get(\"HASSUBLEDGER\").disable();\r\n      // this.form.get(\"ACTYPE\").disable();\r\n      // this.form.get(\"DIV\").disable();\r\n      // this.form.get(\"MAPID\").disable();\r\n\r\n      this.loadingService.show(\"Getting data, Please wait...\");\r\n      this.MasterService.getAllAccount(this.ACID).subscribe(\r\n        data => {\r\n          this.loadingService.hide();\r\n          this.editItem = data.result;\r\n          this.PARENTNAME.patchValue(data.result.GROUPNAME)\r\n          this.form.patchValue({\r\n            HASSUBLEDGER: data.result.HASSUBLEDGER,\r\n            PARENT: data.result.PARENT,\r\n            ACCODE: data.result.ACCODE,\r\n            ACNAME: data.result.ACNAME,\r\n            ISACTIVE: data.result.ISACTIVE,\r\n            DIV: data.result.DIV,\r\n            MAPID: data.result.MAPID,\r\n            ACID: data.result.ACID\r\n          });\r\n          this.Prefix = data.result.ACID.substring(0, 2);\r\n\r\n        },\r\n        error => {\r\n          this.loadingService.hide();\r\n          this.alertService.error(error);\r\n        }\r\n      );\r\n    } else {\r\n      if (this.Title == \"AddLedger\") {\r\n        this.modeTitle = \"Add Account Ledger\";\r\n      } else if (this.Title == \"AddGroup\") {\r\n        this.modeTitle = \"Add Account Group\";\r\n      }\r\n    }\r\n  }\r\n\r\n  onAcGroupPopupTab() {\r\n\r\n    // this.acPopupGrid.show(this.AccCurrentSelectedGroup);\r\n  }\r\n  AdditionalInfo:number=0;\r\n  showPLedgerInfo:number=0;\r\n  showBank:number=0\r\n  onItemDoubleClick(event) {\r\n    this.AdditionalInfo=0;\r\n    this.showBank=0;\r\n    this.showPLedgerInfo=0\r\n    this.isSubGrpEmpty=false;\r\n    this.AccCurrentSelectedGroup = event;\r\n\r\n    ////console.log(\"selected group\" + JSON.stringify(this.AccCurrentSelectedGroup));\r\n\r\n    //  if(this.AccCurrentSelectedGroup.PARENT.substring(0,2) == \"BS\"){\r\n    //    return this.showAssets = true;\r\n    //  }\r\n\r\n    if (this.AccCurrentSelectedGroup.ACID.substring(0, 2) == \"AT\")\r\n      this.showAssets = 1;\r\n    else\r\n      this.showAssets = 0;\r\n    let hasSubLedger =\r\n      this.isGroup == 1\r\n        ? this.AccCurrentSelectedGroup.HASSUBLEDGER\r\n          ? 1\r\n          : 0\r\n        : 0;\r\n    this.form.patchValue({\r\n      HASSUBLEDGER: hasSubLedger,\r\n      PARENT: this.AccCurrentSelectedGroup.ACNAME,\r\n    });\r\n    ////console.log(\"CheckSelectedGroup\",this.AccCurrentSelectedGroup)\r\n    \r\n    // this.acPopupGrid.hide()\r\n    var subPrefix=this.AccCurrentSelectedGroup.ACID.substring(0,2);\r\n    this.Prefix=subPrefix;\r\n    // if(this.AccCurrentSelectedGroup.ACID=='B'){\r\n      // this.childModal.show();\r\n    // }\r\n    this.form.patchValue({\r\n      MAPID:'',\r\n      Ptype:''\r\n    })\r\n    this.PARENTNAME.patchValue(this.AccCurrentSelectedGroup.ACNAME)\r\n    this.BankPartyVerification.Bank=0;\r\n    this.BankPartyVerification.Customer=0;\r\n    this.BankPartyVerification.Supplier=0;\r\n    if (this.AccCurrentSelectedGroup.ACID=='ATG0003' || this.AccCurrentSelectedGroup.MAPID == 'B') {\r\n      this.AdditionalInfo=1;\r\n      // this.showPLedgerInfo=1\r\n      this.showBank=1;\r\n      this.showAssets = 1\r\n      this.form.patchValue({\r\n        MAPID:'B'\r\n      })\r\n      this.BankPartyVerification.Bank='saveBank'\r\n    }\r\n    else  if (this.AccCurrentSelectedGroup.ACID=='ATG0003' || this.AccCurrentSelectedGroup.MAPID == 'C') {\r\n      this.showAssets = 1\r\n      this.form.patchValue({\r\n        MAPID:'C'\r\n      })\r\n      \r\n    }\r\n    else{\r\n      this.showAssets = 0\r\n      this.form.patchValue({\r\n        MAPID:''\r\n      })\r\n   \r\n    }\r\n    this.PLedgerChild.BindValue('Q');\r\n    if(this.AccCurrentSelectedGroup.ACID=='LBG38' || this.AccCurrentSelectedGroup.PType=='C'){\r\n      //Sundry creditor\r\n            this.AdditionalInfo=1;\r\n      this.showPLedgerInfo=1;\r\n      this.PLedgerChild.BindValue('C');\r\n      this.MasterService.PType = 'C';\r\n      this.form.patchValue({\r\n        Ptype:'C'\r\n      })\r\n      this.BankPartyVerification.Customer=1\r\n    }\r\n    if(this.AccCurrentSelectedGroup.ACID=='AT01001' || this.AccCurrentSelectedGroup.PType=='V'){\r\n      //sundry deptors\r\n      this.AdditionalInfo=1;\r\n      this.showPLedgerInfo=1;\r\n      this.PTypeForParty='V'\r\n      this.PLedgerChild.BindValue('V');\r\n      this.MasterService.PType = 'V'\r\n      this.form.patchValue({\r\n        Ptype:'V'\r\n      })\r\n      this.BankPartyVerification.Supplier=1\r\n    }\r\n    \r\n  }\r\n  PTypeForParty:any;\r\n  // @ViewChild('lgModal') childModal: ModalDirective;\r\n  hide(){\r\n    this.isActive = false;\r\n  }\r\n  onFormChanges(): void {\r\n    this.form.valueChanges.subscribe(val => {\r\n      if (this.form.dirty)\r\n        this.preventNavigationService.preventNavigation(true);\r\n    });\r\n  }\r\n\r\n  majorgroupChange() {\r\n    this.filter(this.form.get(\"majorparent\").value);\r\n  }\r\n\r\n  filter(majorparent) {\r\n    this.MasterService.getpartyListTree().subscribe(data => {\r\n      var f = data.filter(x => x.ACID == majorparent)[0];\r\n      if (f != null) {\r\n        this.acParentList = f.children;\r\n      }\r\n    });\r\n  }\r\n  SumbitSave() {\r\n    if(!this.MasterService.getRequestOption()){\r\n      return;\r\n    }\r\n    if (this.form.value.VATNO) {\r\n      var pno = parseFloat(this.form.value.VATNO);\r\n      if(this.userProfile.userSetting.isOverSeas == 0){\r\n      if (pno.toString().length != 9) {\r\n        this.alertService.error(\"PAN No is not correct\");\r\n        this.acPopupGrid.show(this.AccCurrentSelectedGroup);\r\n        return;\r\n      }\r\n    }\r\n    }\r\n    try {\r\n      // this.form.value.MAPID = \"N\";\r\n      let saveModel = Object.assign(<TAcList>{}, this.form.value);\r\n      ////console.log(\"SAVEOBJ\",this.form.value)\r\n      if(this.isSubGrpEmpty==false)\r\n      {\r\n        if (this.AccCurrentSelectedGroup.HASSUBLEDGER == 1 && this.isGroup == 0) {\r\n          saveModel.MCAT = 'SL'\r\n        }\r\n        if (this.mode == \"edit\") {\r\n          //this.editItem.ISACTIVE = saveModel.ISACTIVE\r\n          //saveModel = this.editItem; \r\n  \r\n          // ////console.log(\"editItem\"+this.editItem);\r\n          //////console.log(\"Edit Account\" + JSON.stringify(saveModel));\r\n  \r\n        } else {\r\n          saveModel.PARENT = this.AccCurrentSelectedGroup.ACID;\r\n        }\r\n      }\r\n      else{\r\n        saveModel.PARENT=this.Prefix;\r\n      }\r\n     \r\n      ////console.log(\"SAVEOBJ1\",saveModel)\r\n      if (saveModel.HASSUBLEDGER == 1 && this.isGroup == 1) {\r\n        saveModel.MCAT = 'SG'\r\n      }\r\n     \r\n      saveModel.DIV = this.userProfile.userDivision;\r\n      //saveModel.MAPID = \"N\";\r\n      \r\n      this.loadingService.show(\"Saving Data please wait...\");\r\n      let sub = this.MasterService.saveAccountLedgerOnly(\r\n        this.mode,\r\n        saveModel,\r\n        null,\r\n        this.BankPartyVerification,\r\n        this.MasterService.BankObj,\r\n        this.MasterService.PLedgerObj,\r\n        0,\r\n       null\r\n      ).subscribe(\r\n        data => {\r\n          this.loadingService.hide();\r\n          if (data.status == \"ok\") {\r\n            ////console.log(\"PARTYDATA@@@@\", data);\r\n            this.alertService.success(\"Data Saved Successfully\");\r\n            this.preventNavigationService.preventNavigation(false);\r\n            setTimeout(() => {\r\n              this.onClose.emit(true);\r\n              this.router.navigate([this.returnUrl]);\r\n            }, 1000);\r\n          } else {\r\n            \r\n            //alert(data.result);\r\n            //the ConnectionString in the server is not initialized means the the token 's user is not int the list of database user so it could't make connectionstring. Re authorization is requierd\r\n            if (\r\n              data.result._body ==\r\n              \"The ConnectionString property has not been initialized.\"\r\n            ) {\r\n              this.router.navigate([\"/login\", this.router.url]);\r\n              return;\r\n            }\r\n            //Some other issues need to check\r\n            this.alertService.error(\r\n              \"Error in Saving Data:\" + data.result._body\r\n            );\r\n            this.acPopupGrid.show(this.AccCurrentSelectedGroup);\r\n          }\r\n        },\r\n        error => {\r\n          this.loadingService.hide();\r\n          this.alertService.error(error);\r\n       \r\n        }\r\n      );\r\n      this.subcriptions.push(sub);\r\n    } catch (e) {\r\n      this.alertService.error(e);\r\n    }\r\n  }\r\n\r\n  cancel() {\r\n    try {\r\n      this.router.navigate([this.returnUrl]);\r\n    } catch (ex) {\r\n      //console.log(ex);\r\n      this.alertService.error(ex);\r\n    }\r\n  }\r\n\r\n  changePtype(value) {\r\n    this.form.get(\"Ptype\").patchValue(value);\r\n  }\r\n\r\n  NotActive() { }\r\n\r\n  closePartyPopup() {\r\n    this.sParty.nativeElement.style.display = \"none\";\r\n  }\r\n  SelectMainGrp() {\r\n    this.AdditionalInfo=0;\r\n    this.showPLedgerInfo=0;\r\n    this.showBank=0\r\n    this.isSubGrpEmpty=true;\r\n   \r\n    this.AllGrpList=[]\r\n    this.form.patchValue({\r\n      HASSUBLEDGER:'',\r\n      PARENTNAME:''\r\n    })\r\n    this.acPopupGrid.GetDataFromPrefix(this.Prefix)\r\n    // this.acPopupGrid.show(this.AccCurrentSelectedGroup)\r\n\r\n  }\r\n  doubleClick($event) {\r\n    this.onItemDoubleClick($event);\r\n    \r\n  }\r\n  selectedRowIndex: number = 0;\r\n  singleClick(index) {\r\n    this.selectedRowIndex = index;\r\n  }\r\n  // closeParty(){\r\n  //   // this.childModal.hide()\r\n  //   this.acPopupGrid.show(this.AccCurrentSelectedGroup)\r\n  // }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/pages/masters/components/ALedger/ALedger.component.ts","import { Routes, RouterModule } from '@angular/router';\r\nimport { NgModule } from '@angular/core';\r\nimport { ALedgerComponent } from './ALedger.component';\r\nimport { ALedgerTableComponent } from './ALedgerTable.component';\r\nimport { PendingChangesGuard } from '../../../../common/services/guard/can-navigate.guard';\r\nimport { BankListComponent } from '../Bank/bank-list.component';\r\nimport { AccountLedgerComponent } from '../account-ledger/accountLedgerTable.component';\r\n\r\nconst routes: Routes = [\r\n    {path:'Account',component:ALedgerTableComponent,canDeactivate: [PendingChangesGuard]},\r\n    {path:'AccountList',component:ALedgerTableComponent},\r\n    { path: 'AccountTree', component: AccountLedgerComponent}, \r\n    {path:'bank',loadChildren:'app/pages/masters/components/Bank/bank.module#BankModule'},\r\n    {path:'chalan-master',loadChildren:'app/pages/masters/components/chalan-master/chalan-master.module#ChalanMaserModule'},\r\n    {path:'subledger-master',loadChildren:'app/pages/masters/components/subledger-master/subledger-master.module#SubLedgerMasterModule'},\r\n    {path:'voucher-series-master',loadChildren:'app/pages/masters/components/Voucher-Series/voucher-series.module#VoucherSeriesModule'},\r\n    {path:'cost-center',loadChildren:'app/pages/masters/components/CostCenter/cost-center.module#CostCenterModule'},\r\n    {path:'cost-center-category',loadChildren:'app/pages/masters/components/CostCenterCategory/cost-center-category.module#CostCenterCategoryModule'},\r\n    {path:'merchant-details',loadChildren:'app/pages/masters/components/MerchantDetails/merchant-details.module#MerchantDetailsModule'},\r\n    {path:'budget-master',loadChildren:'app/pages/masters/components/BudgetMaster/budget-master.module#BudgetMasterModule'},\r\n    {path:'partycategory-master',loadChildren:'app/pages/masters/components/PartyCategoryMaster/party-category-master.module#PartyCategoryMasterModule'}\r\n];\r\n  \r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class AledgerRoutingModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/pages/masters/components/ALedger/aledger.routing.ts","import { NgModule } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\r\nimport { TreeModule } from \"angular-tree-component\";\r\nimport { NgaModule } from \"../../../../theme/nga.module\";\r\n\r\nimport { GenericPopupGridModule } from \"../../../../common/popupLists/generic-grid/generic-popup-grid.module\";\r\nimport { PartyLedgerComponent } from \"./partyLedgerTable.component\";\r\nimport { PartyRoutingModule } from \"./addparty.routing\";\r\nimport { ContextMenuModule } from \"ngx-contextmenu\";\r\nimport { ModalModule } from \"ng2-bootstrap\";\r\nimport { addMajorGrpComponent } from \"./addMajorgrp.component\";\r\nimport { AddPartyLedgerGrpComponent } from \"./addpartygrp.component\";\r\nimport { AddPartyLedgerComponent } from \"./addpartyledger.component\";\r\nimport {SearchPipe} from './search.pipe';\r\nimport { NgxPaginationModule } from 'ngx-pagination';\r\nimport { AccNewLedgerComponent } from \"./AccLedgerTable.component\";\r\nimport { AddAccLedgerGrpComponent } from \"./addAccgrp.component\";\r\nimport { AccNewRoutingModule } from \"./addAcc.routing\";\r\nimport { AddAccLedgerComponent } from \"./addAccledger.component\";\r\nimport { addAccMajorGrpComponent } from \"./addAccMajorgrp.component\";\r\n\r\n@NgModule({\r\n  imports: [\r\n    TreeModule,\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    AccNewRoutingModule,\r\n    GenericPopupGridModule.forRoot(),\r\n    NgaModule,\r\n    ContextMenuModule,\r\n    ModalModule.forRoot(),\r\n    ContextMenuModule,\r\n    NgxPaginationModule\r\n  ],\r\n  declarations: [\r\n    AccNewLedgerComponent,AddAccLedgerGrpComponent,SearchPipe,AddAccLedgerComponent,addAccMajorGrpComponent\r\n\r\n  ],\r\n  exports: [\r\n    // PartyLedgerComponent\r\n  ]\r\n})\r\nexport class AccNewModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/pages/masters/components/Account-Ledger-New/addAcc.module.ts","import { Routes, RouterModule } from '@angular/router';\r\nimport { NgModule } from '@angular/core';\r\nimport { AccNewLedgerComponent } from './AccLedgerTable.component';\r\n\r\n\r\n\r\n\r\nconst routes: Routes = [\r\n    {path: 'AccountMaster', component: AccNewLedgerComponent}, \r\n    \r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class AccNewRoutingModule { }\r\n\r\n\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/pages/masters/components/Account-Ledger-New/addAcc.routing.ts","import { Component, Input, Output, EventEmitter, OnInit, ViewChild } from '@angular/core';\r\nimport { TAcList, AcListTree } from \"../../../../common/interfaces/Account.interface\";\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { FormGroup, FormControl, FormBuilder, Validators } from '@angular/forms';\r\nimport { Subscription } from \"rxjs/Subscription\";\r\nimport { ModalDirective } from 'ng2-bootstrap';\r\nimport { MasterRepo } from \"../../../../common/repositories/masterRepo.service\";\r\nimport { TreeViewAccService } from './AccLedger.service';\r\n@Component(\r\n    {\r\n        selector: 'addAccMajorgrpSelector',\r\n        template: require('./addAccMajorgrp.component.html'),\r\n        providers: [TreeViewAccService],\r\n\r\n    }\r\n)\r\nexport class addAccMajorGrpComponent {\r\n    router: Router;\r\n    ledgerAcObj: TAcList = <TAcList>{};\r\n    acListtree: AcListTree = <AcListTree>{};\r\n    private returnUrl: string;\r\n    DialogMessage: string = \"Saving Data please wait ...\"\r\n    private subcriptions: Array<Subscription> = [];\r\n    @ViewChild('childModal') childModal: ModalDirective;\r\n    Addform: FormGroup;\r\n    viewMode = true;\r\n    modeTitle:string='';\r\n    initialTextReadOnly:false;\r\n    ngOnInit() {\r\n        // try {\r\n        //     let self = this;\r\n        //     if (!!this._activatedRoute.snapshot.params['returnUrl']) {\r\n        //         this.ledgerAcObj.PARENT = 'PA';\r\n        //     }\r\n            \r\n        // } catch (ex) {\r\n        //     //console.log(ex);\r\n        //     alert(ex);\r\n        // }\r\n        // this.Addform = this._fb.group({\r\n        //     ACNAME: ['', Validators.required],\r\n        //     PType:[''],\r\n        // })\r\n\r\n    }\r\n    constructor(protected service: TreeViewAccService, router: Router, private _activatedRoute: ActivatedRoute, protected MasterService: MasterRepo, private _fb: FormBuilder) {\r\n        // this.router = router;\r\n        // if (!!_activatedRoute.snapshot.params['returnUrl']) {\r\n        //     this.acListtree.ACID = _activatedRoute.snapshot.params['returnUrl'];\r\n        // }\r\n\r\n    }\r\n    \r\n    cancel() {\r\n        this.router.navigate([\"./pages/masters/PartyLedger\"]);\r\n    }\r\n\r\n    onSave() {\r\n\r\n        this.DialogMessage = \"Saving Data please wait...\"\r\n        this.childModal.show();\r\n        this.SumbitSave();\r\n    }\r\n    mode: string = \"add\";\r\n    value:any;\r\n    SumbitSave() {\r\n        ////console.log(\"Submit call\")\r\n        try {\r\n            let am = <TAcList>{}\r\n            am.ACNAME = this.Addform.value.ACNAME;\r\n            am.TYPE = \"G\";\r\n            am.PARENT=\"PA\";\r\n            //console.log({ AddMajor: am });\r\n            let sub = this.MasterService.saveAccount(this.mode, am)\r\n                .subscribe(data => {\r\n                    if (data.status == 'ok') {\r\n                        this.DialogMessage = \"Data Saved Successfully\"\r\n                        setTimeout(() => {\r\n                            this.childModal.hide();\r\n\r\n                            this.router.navigate([\"pages/account/AccountLedger/AccountMaster\"])\r\n                        }, 1000)\r\n\r\n\r\n                    }\r\n                    else {\r\n                        //alert(data.result);\r\n                        //the ConnectionString in the server is not initialized means the the token 's user is not int the list of database user so it could't make connectionstring. Re authorization is requierd\r\n                        if (data.result._body == \"The ConnectionString property has not been initialized.\") {\r\n                            this.router.navigate(['/login', this.router.url])\r\n                            return;\r\n                        }\r\n                        //Some other issues need to check\r\n                        this.DialogMessage = \"Error in Saving Data:\" + data.result._body;\r\n                        //console.log(data.result._body);\r\n                        setTimeout(() => {\r\n                            this.childModal.hide();\r\n                        }, 3000)\r\n                    }\r\n                },\r\n                error => { alert(error) }\r\n                );\r\n            this.subcriptions.push(sub);\r\n        }\r\n        catch (e) {\r\n            alert(e);\r\n        }\r\n    }\r\n    // ptypeRadioChangeEvent(value)\r\n    // {\r\n    //    this.Addform.controls['PType'].setValue(value);\r\n\r\n    //     //console.log({value:value});\r\n    // }\r\n    hideChildModal() {\r\n        try {\r\n            this.childModal.hide();\r\n        } catch (ex) {\r\n            //console.log(ex);\r\n            alert(ex);\r\n        }\r\n    }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/pages/masters/components/Account-Ledger-New/addAccMajorgrp.component.ts","import { Component, Input, Output, EventEmitter, OnInit, ViewChild } from '@angular/core';\r\nimport { AcListTree, TAcList } from \"../../../../common/interfaces/Account.interface\";\r\nimport { TreeViewPartyervice } from './partyledger.service'\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { FormGroup, FormControl, FormBuilder, Validators } from '@angular/forms';\r\nimport { ModalDirective } from 'ng2-bootstrap';\r\nimport { Subscription } from \"rxjs/Subscription\";\r\nimport { MasterRepo } from \"../../../../common/repositories/masterRepo.service\";\r\n@Component(\r\n    {\r\n        selector: 'addAccGrpSelector',\r\n        template: require('./addAccgrp.component.html'),\r\n    }\r\n)\r\nexport class AddAccLedgerGrpComponent {\r\n    majorParentAcList: any[];\r\n    ParentAcList: any[];\r\n    majorparent: any;\r\n    PARENTACNAME: string;\r\n    acListtree: AcListTree = <AcListTree>{};\r\n    ledgerAcObj: TAcList = <TAcList>{};\r\n    form: FormGroup;\r\n    private returnUrl: string;\r\n    @ViewChild('childModal') childModal: ModalDirective;\r\n    private subcriptions: Array<Subscription> = [];\r\n    DialogMessage: string = \"Saving data please wait ...\"\r\n    router: Router;\r\n    // salesman:Salesman=<Salesman>{};\r\n    ngOnInit() {\r\n        // this.form = this.fb.group({\r\n        //     majorparent: [''],\r\n        //     ACNAME: ['', Validators.required],\r\n        //     hasSub:[''],\r\n        // })\r\n        // this.MasterService.getpartyListTree()\r\n        //     .subscribe(data => {\r\n        //         let p = data.filter(x => x.PARENTID == 'PA');\r\n        //         this.ParentAcList = p;\r\n        //         if (!!this._activatedRoute.snapshot.params['Par']) {\r\n        //             this.majorparent = this._activatedRoute.snapshot.params['Par'];\r\n        //             this.form.get('majorparent').patchValue(this.majorparent);\r\n        //             ////console.log(\"Get\");\r\n        //             //console.log(this.majorparent);\r\n        //         }\r\n\r\n        //     });\r\n\r\n        // let self = this;\r\n        // if (!!this._activatedRoute.snapshot.params['ACID']) {\r\n        //     let ACID = this._activatedRoute.snapshot.params['ACID'];\r\n        // }\r\n\r\n\r\n    }\r\n\r\n    constructor(protected MasterService: MasterRepo, router: Router, private _activatedRoute: ActivatedRoute, private fb: FormBuilder) {\r\n        // this.router = router;\r\n\r\n\r\n    }\r\n    \r\nchangehassubEvent(value)\r\n    {\r\n        if(this.form==null)return;\r\n       this.form.get('hasSub').patchValue(value);\r\n\r\n        ////console.log(\"value:\"+value);\r\n    }\r\n\r\n    onSave() {\r\n        if(!this.MasterService.getRequestOption()){\r\n            return;\r\n          }\r\n\r\n        this.DialogMessage = \"Saving Data please wait...\"\r\n        this.childModal.show();\r\n        this.SumbitSave();\r\n    }\r\n    mode: string = \"add\";\r\n    SumbitSave() {\r\n        try {\r\n            let ap = <TAcList>{}\r\n            ap.ACNAME = this.form.value.ACNAME;\r\n            ap.TYPE = \"G\";\r\n            ap.PARENT = this.form.value.majorparent;\r\n            ap.HASSUBLEDGER=this.form.value.hasSub;\r\n            //console.log({AddPartyGroup:ap})\r\n            let sub = this.MasterService.saveAccount(this.mode, ap)\r\n                .subscribe(data => {\r\n                    if (data.status == 'ok') {\r\n                        //Displaying dialog message for save with timer of 1 secs\r\n                        this.DialogMessage = \"Data Saved Successfully\"\r\n                        setTimeout(() => {\r\n                            this.childModal.hide();\r\n\r\n                            this.router.navigate([this.returnUrl]);\r\n                        }, 1000)\r\n\r\n\r\n                    }\r\n                    else {\r\n                        //alert(data.result);\r\n                        //the ConnectionString in the server is not initialized means the the token 's user is not int the list of database user so it could't make connectionstring. Re authorization is requierd\r\n                        if (data.result._body == \"The ConnectionString property has not been initialized.\") {\r\n                            this.router.navigate(['/login', this.router.url])\r\n                            return;\r\n                        }\r\n                        //Some other issues need to check\r\n                        this.DialogMessage = \"Error in Saving Data:\" + data.result._body;\r\n                        //console.log(data.result._body);\r\n                        setTimeout(() => {\r\n                            this.childModal.hide();\r\n                        }, 3000)\r\n                    }\r\n                },\r\n                error => { alert(error) }\r\n                );\r\n            this.subcriptions.push(sub);\r\n        }\r\n        catch (e) {\r\n            alert(e);\r\n        }\r\n    }\r\n    cancel() {\r\n        this.router.navigate([\"pages/account/AccountLedger/AccountMaster\"]);\r\n    }\r\n    hideChildModal() {\r\n        try {\r\n            this.childModal.hide();\r\n        } catch (ex) {\r\n            //console.log(ex);\r\n            alert(ex);\r\n        }\r\n    }\r\n\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/pages/masters/components/Account-Ledger-New/addAccgrp.component.ts","import { style } from '@angular/animations';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { MdDialog } from '@angular/material';\r\nimport { MessageDialog } from '../../../modaldialogs/messageDialog/messageDialog.component';\r\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\r\nimport { SelectItem } from 'primeng/primeng';\r\nimport { Component, Input, Output, EventEmitter, OnInit, ViewChild, ElementRef, HostListener, SimpleChanges } from '@angular/core';\r\nimport { TreeViewPartyervice } from './partyledger.service'\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { FormGroup,  FormBuilder, Validators } from '@angular/forms';\r\nimport { Subscription } from \"rxjs/Subscription\";\r\nimport { ModalDirective } from 'ng2-bootstrap';\r\nimport { MasterRepo } from '../../../../common/repositories/masterRepo.service';\r\nimport { AcListTree, TAcList, PartyAdditional, SelectedDivisions } from \"../../../../common/interfaces/Account.interface\";\r\nimport { AuthService } from '../../../../common/services/permission';\r\nimport { Division } from '../../../../common/interfaces';\r\nimport { GroupParty, TreeViewAccService } from './AccLedger.service';\r\nimport { SpinnerService } from '../../../../common/services/spinner/spinner.service';\r\nimport { AlertService } from '../../../../common/services/alert/alert.service';\r\nimport { GenericPopUpComponent, GenericPopUpSettings } from '../../../../common/popupLists/generic-grid/generic-popup-grid.component';\r\nimport { TheadTitlesRowComponent } from 'ng2-smart-table/src/ng2-smart-table/components/thead/rows';\r\n\r\n@Component(\r\n    {\r\n        selector: 'addAccLedgerSelector',\r\n        template: require('./addAccledger.component.html'),\r\n        //  [(ngModel)]=\"PARENTACNAME\"\r\n        // [(ngModel)]=\"RootName\"\r\n        providers: [TreeViewAccService],\r\n        styles: [`input:disabled, select:disabled, textarea:disabled {\r\n    cursor: not-allowed !important;\r\n    color: black !important;\r\n    background-color: #EBEBE4 !important;\r\n}\r\n\r\nbutton:disabled{\r\ncursor: not-allowed !important;\r\n}`]\r\n\r\n    }\r\n)\r\nexport class AddAccLedgerComponent {\r\n    @Output('onClose') onClose = new EventEmitter();\r\n    @Input('acid') ACID: string;\r\n    // @Input('parent') Parent: string;\r\n    Parent: any = <any>{}\r\n    @Input('PARENTID') PARENTID: any;\r\n    @Input('partyParentName') partyParentName: any;\r\n    @Input() rootID: string;\r\n    @Input() Title: string = '';\r\n    @Input() mode: string;\r\n    @Input() grp: string;\r\n    @ViewChild('childModal') childModal: ModalDirective;\r\n    @Output() SavePartyEmit = new EventEmitter();\r\n    @Output() EditPartyEmit = new EventEmitter();\r\n    @ViewChild('ACNAME') acnameField: ElementRef;\r\n    @Input() parentGroupID:string;\r\n    @Input() parentIdOnEdit:string;\r\n    @Input() selectedNode: any;\r\n    @Input() nodes: any[];\r\n    @Input() overdraft:string;\r\n    @Input() isBank:boolean;\r\n    @ViewChild('DeleteAcc') DeleteAcc: ModalDirective;\r\n\r\n    @ViewChild(\"genericGridBankList\") genericGridBankList: GenericPopUpComponent;\r\n    gridBankPopupSettings: GenericPopUpSettings = new GenericPopUpSettings();\r\n\r\n\r\n\r\n    // @Output(\"getParentNameEmit\") getParentNameEmit = new EventEmitter();\r\n\r\n    // @Output(\"getParentNameEmit\") getParentNameEmit: EventEmitter<any> = new EventEmitter();\r\n\r\n\r\n    selectednode: any;\r\n    parentid: any;\r\n    majorparent: any;\r\n    majorParentAcList: any[] = [];\r\n    acParentList: any[] = [];\r\n    PARENTACNAME: string;\r\n    RootName: string;\r\n    acListtree: AcListTree = <AcListTree>{};\r\n    ledgerAcObj: TAcList = <TAcList>{};\r\n    ledgerAcList: TAcList[];\r\n    private returnUrl: string;\r\n    router: Router;\r\n    form: FormGroup;\r\n    viewMode = false;\r\n    DialogMessage: string = \"Saving data please wait ...\"\r\n    private subcriptions: Array<Subscription> = [];\r\n    initialTextReadOnly = false;\r\n    ID: string = '';\r\n    modeTitle: string;\r\n    parentGroup: GroupParty;\r\n    acGroups: any[] = [];\r\n    dialogMessageSubject: BehaviorSubject<string> = new BehaviorSubject<string>('');\r\n    dialogMessage$: Observable<string> = this.dialogMessageSubject.asObservable();\r\n    actype: string = '';\r\n    disableActype: boolean = false;\r\n    lastParentID: string;\r\n    userProfile: any;\r\n    GeoList: any[] = [];\r\n    DistrictList: any[] = [];\r\n    areaList: any[] = [];\r\n    parentValueForEditMode: string;\r\n    division: any[] = [];\r\n    createMember: any;\r\n    showDivSelectionTable: boolean = false;\r\n    enableDivisionMapping: boolean;\r\n    divisionList: any[] = [];\r\n    SelectedDivisionList: SelectedDivisions[] = [];\r\n    DivListForSave: DivList[] = [];\r\n    accLevel: number;\r\n    accMapId: string;\r\n    accACTYPE: string;\r\n    TDSType_List:any[] = [];\r\n\r\n\r\n    constructor(protected MasterService: MasterRepo,\r\n         private AccountService: TreeViewAccService,\r\n          router: Router,\r\n           private _activatedRoute: ActivatedRoute,\r\n            private _fb: FormBuilder,\r\n             public dialog: MdDialog,\r\n              private _authService: AuthService,\r\n               public spinnerservice:SpinnerService,\r\n               public alertservice: AlertService) {\r\n        this.router = router;\r\n        this.userProfile = this._authService.getUserProfile();\r\n        this.userSetting = this._authService.getSetting()\r\n        this.division = [];\r\n        this.MasterService.getAllDivisions()\r\n            .subscribe(res => {\r\n                this.division.push(<Division>res);\r\n            }, error => {\r\n                this.MasterService.resolveError(error, \"divisions - getDivisions\");\r\n            });\r\n\r\n            this.MasterService.getTDSTypeList().subscribe( res =>{\r\n                    this.TDSType_List = res.result;\r\n            })\r\n    }\r\n    userSetting: any;\r\n\r\n\r\n    Init(){\r\n\r\n        \r\n        // this.service.getNewValues(selectL)\r\n        //     .subscribe(data => {\r\n        //         if (data.status == 'ok') {\r\n\r\n        //             this.ledgerAcObj.PARENT = data.result.parent.ACID;\r\n        //             this.PARENTACNAME = data.result.parent.ACNAME;\r\n        //             this.ledgerAcObj.PType = data.result.parent.PType;\r\n        //         }\r\n\r\n        //     }\r\n        //     , error => {\r\n        //         this.router.navigate([this.returnUrl]);\r\n        //         //console.log(error);\r\n        //     }\r\n        //     );\r\n        \r\n        ////console.log(\"userSetting\", this.userSetting)\r\n        this.AccountService.getHierachy().subscribe(res => {\r\n            if (res.status == \"ok\") {\r\n                this.GeoList = res.result.GEO;\r\n\r\n            }\r\n        });\r\n        this.MasterService.getDistrict().subscribe(res => {\r\n            if (res.status == 'ok') {\r\n                this.DistrictList = res.result;\r\n            }\r\n        })\r\n\r\n        this.MasterService.getAreaDetail().subscribe(res => {\r\n            if (res.status == 'ok') {\r\n                this.areaList = res.result;\r\n            }\r\n        })\r\n\r\n       \r\n    }\r\n\r\n\r\n    ngOnInit() {\r\n\r\n       \r\n        this.form = this._fb.group({\r\n            majorparent: [''],\r\n            parentid: [''],\r\n            ACNAME: ['', Validators.required],\r\n            Ptype: [''],\r\n            MAPID: [''],\r\n            ADDRESS: [''],\r\n            PHONE: [''],\r\n            FAX: [''],\r\n            EMAIL: [''],\r\n\r\n            ACCODE: [''],\r\n\r\n            isNotActive: [''],\r\n\r\n            CITY: [''],\r\n            STATE: [''],\r\n            COMMON: [0],\r\n            ISACTIVE: [1],\r\n            VATNO: [''],\r\n            CRPERIOD: [0],\r\n            CRLIMIT: [0],\r\n            GEO: ['111111-1'],\r\n            CNAME: [''],\r\n            ONAME: [''],\r\n            OCONTACT: [''],\r\n            ODESIGNATION: [''],\r\n            CONTACTNAME: [''],\r\n            CONTACT_A: [''],\r\n            CONTACT_B: [''],\r\n            CDESIGNATION: [''],\r\n            RELATEDSPERSON_A: [''],\r\n            RELATEDSPERSON_B: [''],\r\n            NOTES: [''],\r\n            Mobile: [''],\r\n            INITIAL: [''],\r\n            IsInitialValue: [0],\r\n            createMember: [''],\r\n            DIV: [this.userProfile.userDivision],\r\n            ShareAccount: [''],\r\n            ShareSelectiveDiv: [''],\r\n            ShareAllDiv: [''],\r\n            enableDivSelectionTable: [0],\r\n            cusName:[''],\r\n            ISCOMMONAC : [0],\r\n            HASSUBLEDGER: [0],\r\n            ACTYPE : [''],\r\n            TDS_TYPE: ['']\r\n            // BANKACCOUNTNUMBER : ['']\r\n        })\r\n        this.AccountService.addGroupSubject.subscribe((res) => {\r\n            //console.log('common');\r\n        })\r\n        this.Init();\r\n        this.MasterService.userSetting.DIVISIONWISEACLISTING == 1 ?\r\n            this.enableDivisionMapping = true :\r\n            this.enableDivisionMapping = false;\r\n\r\n\r\n        this.form.get('ShareAllDiv').disable();\r\n        this.form.get('ShareSelectiveDiv').disable();\r\n        this.form.get('ACTYPE').disable();\r\n\r\n        if(this.mode == \"add\"){\r\n            // //console.log(\"WHEN ADD\", this.selectedNode)\r\n            this.getGroupList(this.ACID);\r\n            this.getRootParent(this.selectedNode,this.nodes);\r\n            this.accLevel = this.selectedNode.LEVELS + 1;\r\n            this.accMapId = this.selectedNode.MAPID;\r\n\r\n\r\n        }\r\n\r\n        \r\n\r\n\r\n        if (this.userSetting.AUTOACCODE == 1) {\r\n            this.disableACCodeIfAutoSuponeisOne();\r\n        }\r\n\r\n        // this.CheckCompanyAndValidate();\r\n        this.getGroups();\r\n      \r\n        // this.MasterService.getAllAccount().subscribe(res => { this.ledgerAcList.push(<TAcList>res); });\r\n        this.MasterService.getAccountListTree()\r\n            .subscribe(data => {\r\n                let l = data.filter(x => x.PARENTID == 'PAG');\r\n                this.majorParentAcList = l;\r\n                if (!!this._activatedRoute.snapshot.params['Par']) {\r\n                    this.majorparent = this._activatedRoute.snapshot.params['Par'];\r\n                    this.form.get('majorparent').setValue(this.majorparent);\r\n                    this.majorgroupChange();\r\n                }\r\n\r\n                if (this.mode == 'edit' || this.mode == 'view') {\r\n                    this.mode == 'edit' ? this.modeTitle = \"Edit Party A/C\" : this.modeTitle = \"View Party Ledger\"\r\n                    this.getParentName(this.mode);\r\n                    this.form.get('ACTYPE').disable();\r\n                    this.MasterService.getAllAccount(this.ACID)\r\n                        .subscribe(data => {\r\n                            if (data.status == 'ok') {\r\n                                //console.log(\"\")\r\n                                this.parentValueForEditMode = data.result.PARENT;\r\n                                this.form.get('ACNAME').setValue(data.result.ACNAME);\r\n                                this.form.get('HASSUBLEDGER').setValue(data.result.HASSUBLEDGER);\r\n                               \r\n                                this.form.get('ACCODE').setValue(data.result.ACCODE);\r\n\r\n                                // this.form.get('ACCODE').setValue(data.result.ACID);\r\n                               \r\n                                this.form.get('COMMON').setValue(data.result.COMMON);\r\n                               \r\n\r\n                              \r\n                                this.form.get('ISACTIVE').setValue(data.result.ISACTIVE);\r\n                                this.form.get('DIV').setValue(data.result.DIV);\r\n                                this.form.get('ISCOMMONAC').setValue(data.result.ISCOMMONAC);\r\n                                this.form.get('ACTYPE').setValue(data.result.ACTYPE);\r\n                                // this.form.get('BANKACCOUNTNUMBER').setValue(data.result.BANKACCOUNTNUMBER);\r\n                                this.form.get('TDS_TYPE').setValue(data.result.TDS_TYPE);\r\n                              \r\n                                                    \r\n                                this.form.get('INITIAL').setValue(data.result.INITIAL);\r\n                                if (data.result.INITIAL == null || data.result.INITIAL == \"\") {\r\n                                    this.form.get('IsInitialValue').setValue(0);\r\n                                    this.form.get('INITIAL').disable();\r\n                                } else {\r\n                                    this.form.get('IsInitialValue').setValue(1);\r\n                                    this.form.get('INITIAL').enable();\r\n                                }\r\n                                \r\n                                if(data.result3.length >0){\r\n                                    this.form.get('ShareAccount').setValue(1);\r\n                                    this.enableShareOptions(1);\r\n                                    if(this.division.length == data.result3.length){\r\n                                        this.form.get('ShareAllDiv').setValue('2');\r\n                                        this.enableDivSelectionTable(2);\r\n                                    }else{\r\n                                        this.form.get('ShareSelectiveDiv').setValue('1');\r\n                                        this.enableDivSelectionTable(1);\r\n                                    }\r\n                                    this.changeDivision(this.MasterService.userProfile.CompanyInfo.INITIAL);\r\n                                    this.division.forEach(x => {\r\n                                        data.result3.forEach(div=>{\r\n                                        x.INITIAL == div.DIV ? x.isCheck = true : '';\r\n                                        })\r\n                                    })                                                                 \r\n                                }\r\n\r\n                                // this.getGroupList();\r\n                            }\r\n\r\n                        },\r\n\r\n                        );\r\n                }\r\n\r\n            });\r\n\r\n            if(this.mode == 'edit' || this.mode == 'view'){\r\n                //console.log(\"edit mode\", this.parentIdOnEdit);\r\n                this.getGroupList(this.parentIdOnEdit);\r\n            }\r\n\r\n        if (this.mode == 'view') {\r\n            this.form.get('ACNAME').disable();\r\n            this.form.get('ADDRESS').disable();\r\n            this.form.get('PHONE').disable();\r\n            this.form.get('FAX').disable();\r\n            this.form.get('EMAIL').disable();\r\n            this.form.get('VATNO').disable();\r\n            this.form.get('ACCODE').disable();\r\n            this.form.get('CRLIMIT').disable();\r\n            this.form.get('Ptype').disable();\r\n            this.form.get('HASSUBLEDGER').disable();\r\n\r\n            this.form.get('Mobile').disable();\r\n            this.form.get('CITY').disable();\r\n            this.form.get('CRPERIOD').disable();\r\n            this.form.get('STATE').disable();\r\n            this.form.get('ISACTIVE').disable();\r\n            this.form.get('CNAME').disable();\r\n            this.form.get('ONAME').disable();\r\n            this.form.get('OCONTACT').disable();\r\n            this.form.get('GEO').disable();\r\n            this.form.get('ODESIGNATION').disable();\r\n            this.form.get('CONTACTNAME').disable();\r\n            this.form.get('CONTACT_A').disable();\r\n            this.form.get('CONTACT_B').disable();\r\n            this.form.get('CDESIGNATION').disable();\r\n            this.form.get('RELATEDSPERSON_A').disable();\r\n            this.form.get('RELATEDSPERSON_B').disable();\r\n            this.form.get('NOTES').disable();\r\n            this.form.get('COMMON').disable();\r\n            this.form.get('INITIAL').disable();\r\n            this.form.get('IsInitialValue').disable();\r\n            this.form.get('ACTYPE').disable();\r\n            this.form.get('TDS_TYPE').disable();\r\n            // this.form.get('BANKACCOUNTNUMBER').disable();\r\n            // this.MasterService.disableGroupSelection = true;\r\n\r\n\r\n        }\r\n\r\n        ////console.log(\"parentname\", this.Parent)\r\n\r\n\r\n        if (this.Title == \"AddLedger\") {\r\n            this.modeTitle = \"Add New A/C\";\r\n        }\r\n        else if (this.Title == \"AddGroup\") {\r\n            this.modeTitle = \"Add New Group\";\r\n        }\r\n\r\n        if (this.mode == 'edit') {\r\n            this.modeTitle = \"Edit A/C\";\r\n        }\r\n\r\n        if (this.mode == 'view') {\r\n            this.modeTitle = \"View A/C\";\r\n        }\r\n        \r\n\r\n    }\r\n\r\n\r\n    ngOnChanges(changes:SimpleChanges) {\r\n        //console.log(\"ng on changes\", this.parentGroupID, this.ACID);\r\n        if(changes.ACID){\r\n            //console.log(\"from tree\", this.ACID)\r\n        this.getParentName(this.mode);\r\n        // this.getRootParent(this.selectedNode,this.nodes);\r\n        }\r\n\r\n        if(changes.parentGroupID){\r\n            if(this.parentGroupID != undefined && this.parentGroupID != \"\"){\r\n                //console.log(\"group changed\", this.parentGroupID);\r\n               if(this.parentGroupID == 'AG013'){\r\n                   this.overdraft = 'OD'\r\n               }else{\r\n                   this.overdraft = ''\r\n               }\r\n\r\n               if(this.parentGroupID == 'AG006'){\r\n                this.isBank = true;\r\n               }else{\r\n                this.isBank = false;\r\n               }\r\n\r\n               if(this.mode == 'add'){\r\n                this.ACID = this.parentGroupID;\r\n                }\r\n                this.MasterService.SelectedGroup = this.parentGroupID;\r\n                this.getParentNameInGroupSelect( this.parentGroupID,\"add\");\r\n                this.AccountService.getSelectNodeObj(this.parentGroupID).subscribe(res=>{\r\n                    let actype = res[0].ACTYPE;\r\n                    this.accACTYPE = res[0].ACTYPE;\r\n                    this.accLevel = res[0].LEVELS + 1;\r\n                    this.accMapId = res[0].MAPID;\r\n                    this.form.get('ACTYPE').setValue(actype);\r\n                });\r\n            }\r\n            \r\n        }\r\n    }\r\n\r\n\r\n    ngAfterViewInit() {\r\n        this.acnameField.nativeElement.focus();\r\n    }\r\n\r\n    getParentName(mode) {\r\n\r\n        this.MasterService.getParentNamebyID(this.ACID, mode).subscribe(\r\n            (res) => {\r\n                ////console.log(\"result1231231231312\", res);\r\n                var parentName = res[0];\r\n                this.form.get('parentid').setValue(parentName.ACNAME);\r\n                this.form.get('parentid').disable();\r\n            }\r\n        )\r\n    }\r\n\r\n    getParentNameInGroupSelect(PARENTACID,mode){\r\n        this.MasterService.getParentNamebyID(PARENTACID,mode).subscribe(\r\n            (res) =>{\r\n                var parentName = res[0];\r\n                this.form.get('parentid').setValue(parentName.ACNAME);\r\n                this.form.get('parentid').disable();\r\n            }\r\n        )\r\n    }\r\n\r\n    disableACCodeIfAutoSuponeisOne() {\r\n        //console.log('disable')\r\n        this.form.get('ACCODE').disable();\r\n    }\r\n    validationRequired: true;\r\n    CheckCompanyAndValidate() {\r\n\r\n        if (this.userSetting.CompanyType == \"B2B\") {\r\n            // this.form.get('VATNO').setValidators([Validators.required]);\r\n            // this.form.get('VATNO').updateValueAndValidity;\r\n            this.form.get('ACCODE').setValidators([Validators.required]);\r\n            this.form.get('ACCODE').updateValueAndValidity;\r\n            this.form.get('CRPERIOD').setValidators([Validators.required]);\r\n            this.form.get('CRPERIOD').updateValueAndValidity;\r\n            this.form.get('CRLIMIT').setValidators([Validators.required]);\r\n            this.form.get('CRLIMIT').updateValueAndValidity;\r\n            this.form.get('GEO').setValidators([Validators.required]);\r\n            this.form.get('GEO').updateValueAndValidity;\r\n        }\r\n        if (this.userSetting.CompanyType == \"B2C\") {\r\n            this.form.get('ACCODE').clearValidators\r\n            this.form.get('ACCODE').updateValueAndValidity;\r\n            this.form.get('VATNO').clearValidators;\r\n            this.form.get('VATNO').updateValueAndValidity;\r\n            this.form.get('CRPERIOD').clearValidators;\r\n            this.form.get('CRPERIOD').updateValueAndValidity;\r\n            this.form.get('CRLIMIT').clearValidators;\r\n            this.form.get('CRLIMIT').updateValueAndValidity;\r\n            this.form.get('GEO').clearValidators;\r\n            this.form.get('GEO').updateValueAndValidity;\r\n        }\r\n    }\r\n    majorgroupChange() {\r\n        this.filter(this.form.get('majorparent').value);\r\n\r\n\r\n    }\r\n\r\n    filter(majorparent) {\r\n        this.MasterService.getAccountListTree().subscribe(data => {\r\n            var f = data.filter(x => x.ACID == majorparent)[0];\r\n            if (f != null) { this.acParentList = f.children; }\r\n        });\r\n    }\r\n    BankPartyVerification:any=<any>{}\r\n    SumbitSave() {\r\n        if (this.MasterService.validateMasterCreation(\"save\") == false) {\r\n            return;\r\n        }\r\n        if(this.MasterService.userSetting.AUTOACCODE ==0 && this.form.value.ACCODE==\"\" && this.grp=='A'){\r\n            this.alertservice.warning(\"Accode is mandatory\");\r\n            return;\r\n        }\r\n    \r\n        if(this.ACID == 'AG01001' || this.ACID == 'AG01002'){\r\n            this.alertservice.warning(\"Cannot save account under this Group\");\r\n            return;\r\n        }\r\n\r\n        if (this.form.value.TDS_TYPE) {\r\n            var tdstype = parseFloat(this.form.value.TDS_TYPE);\r\n            if (tdstype.toString().length < 2) {\r\n                this.alertservice.warning(\"TDS Type should be minimum 2 character long.\");\r\n                return;\r\n            }\r\n            if (tdstype.toString().length > 50) {\r\n                this.alertservice.warning(\"TDS Type should be maximum 50 character long.\");\r\n                return;\r\n            }\r\n        }\r\n        this.dialogMessageSubject.next(\"Saving Data please wait...\");\r\n        var dialogRef = this.dialog.open(MessageDialog, { hasBackdrop: true, data: { header: 'Information', message: this.dialogMessage$ } })\r\n       \r\n        try {\r\n            // if (!this.parentGroup) throw new Error(\"Parent is missing\");\r\n            //console.log(\"FORM VALUES\", this.form.value);\r\n            let al = <TAcList>{};\r\n            let partyAdditionalInfo = <PartyAdditional>{};\r\n            if (this.Title == 'AddLedger' || this.mode == 'edit' && this.grp == 'A') {\r\n                al.TYPE = \"A\"\r\n            }\r\n            else {\r\n               \r\n                al.TYPE = \"G\"\r\n            }\r\n            if (this.mode != 'edit') {\r\n                al.PARENT = this.ACID;\r\n                al.ACCODE = this.userSetting.AUTOACCODE != 1?this.form.value.ACCODE.trim():null;\r\n\r\n            }\r\n            al.ACNAME = this.form.value.ACNAME?this.form.value.ACNAME.trim():this.form.value.ACNAME,\r\n            al.ISACTIVE = this.form.value.isNotActive;\r\n            al.ACID = this.ACID;\r\n            al.HASSUBLEDGER = this.form.value.HASSUBLEDGER;\r\n            al.DIV = this.ChangedDiv;\r\n            al.ACTYPE = this.accACTYPE?this.accACTYPE:this.form.controls.ACTYPE.value;\r\n            al.LEVELS = this.accLevel;\r\n            al.MAPID = this.accMapId;\r\n            al.CRLIMIT = this.form.controls.CRLIMIT.value ? this.form.controls.CRLIMIT.value :0;\r\n            if (al.DIV == '' || al.DIV == null) {\r\n                al.DIV = this.userProfile.userDivision;\r\n            }\r\n            al.TDS_TYPE = this.form.value.TDS_TYPE;\r\n\r\n            if (this.mode == 'edit') {\r\n                al.ACID = this.ACID;\r\n                al.PARENT = this.parentValueForEditMode;\r\n                al.ACCODE = this.form.get('ACCODE').value;\r\n                //console.log({ ACID: al.ACID });\r\n                //console.log({ ID: this.ID });\r\n            }\r\n            if (this.form.value.ShareAccount) {\r\n                al.ISCOMMONAC = 1;\r\n            } else {\r\n                al.ISCOMMONAC = 0;\r\n            }\r\n          \r\n            al.COMMON = this.form.value.COMMON;\r\n            al.ISACTIVE = this.form.value.ISACTIVE;\r\n            al.ISCOMMONAC = this.form.value.ISCOMMONAC;\r\n           \r\n            al.INITIAL = this.form.value.INITIAL;\r\n            al.enableDivSelectionTable=this.showDivSelectionTable;\r\n            // al.BANKACCOUNTNUMBER = this.form.controls.BANKACCOUNTNUMBER.value;\r\n\r\n            let divisionObj = <SelectedDivisions>{};\r\n            divisionObj.DIV = this.form.value.MultipleDivision;\r\n            // al.enableDivSelectionTable = false;\r\n            let DObj : DObj=<DObj>{};\r\n            if (this.showDivSelectionTable == true) {\r\n                al.ISCOMMONAC = 0;\r\n                this.DivListForSave = [];\r\n             for(let i of this.division){\r\n                //  //console.log(\"@@division\",this.division)\r\n                if(i.isCheck==true){\r\n                  let dObj:DivList=<DivList>{};\r\n                  dObj.ACID = i.ACID;\r\n                  dObj.DIV = i.INITIAL;\r\n                  this.DivListForSave.push(dObj);\r\n                }\r\n              }\r\n            DObj.DivList = this.DivListForSave;\r\n            }else{\r\n                if( this.form.value.ShareAllDiv == 2 || this.form.value.ShareAllDiv == 1){\r\n                  al.enableDivSelectionTable = true;\r\n                  al.ISCOMMONAC = 1;\r\n                  this.DivListForSave = [];\r\n                  for(let i of this.division){\r\n                       let dObj:DivList=<DivList>{};\r\n                       dObj.ACID = i.ACID;\r\n                       dObj.DIV = i.INITIAL;\r\n                       this.DivListForSave.push(dObj);\r\n                   }\r\n                  \r\n                 DObj.DivList = this.DivListForSave;\r\n                }\r\n               \r\n              }\r\n              if(this.Title != \"AddGroup\"){\r\n                if( al.PARENT.slice(al.PARENT.length -3) != 'PAG'){\r\n                    al.PARENT = this.MasterService.SelectedGroup;\r\n                }\r\n              }\r\n             \r\n              console.log(\"CheckSaveObj\",al,this.MasterService.SelectedGroup);\r\n            //   return;\r\n           \r\n            let sub = this.MasterService.saveAccountLedgerOnly(\r\n                this.mode, \r\n                al, \r\n                null,\r\n        this.BankPartyVerification,\r\n        this.MasterService.BankObj,\r\n        this.MasterService.PLedgerObj,\r\n        0,\r\n       null,\r\n       DObj\r\n       )\r\n                .subscribe(data => {\r\n                    if (data.status == 'ok') {\r\n                        //Displaying dialog message for save with timer of 1 secs\r\n                        \r\n                        var selNode = {}\r\n\r\n                        if (this.grp == 'A') {\r\n                            al.ACID = data.result.acid;\r\n                            this.MasterService.PartialAccountList.push(al);\r\n                            selNode = { type: 'A', value: al };\r\n                            ////console.log(\"TYPE99\", selNode)\r\n                        }\r\n                        else {\r\n                            // alert(\"reached\")\r\n                            selNode = { type: 'G', lastparent: this.ACID, value: { ACID: data.result.ACID, ACNAME: data.result.ACNAME, PARENT: data.result.PARENT, PARENTID: data.result.PARENTID, children: [] } };\r\n                        }\r\n                        if (this.mode == 'edit') {\r\n                            this.EditPartyEmit.emit();\r\n                        } else {\r\n\r\n                            this.SavePartyEmit.emit(selNode);\r\n                        }\r\n                        this.AccountService.loadTableListSubject.next(al);\r\n                        for(let i of this.AccountService.partyList){\r\n                            if(i.ACID == al.PARENT){\r\n                                i.children.push(al);\r\n                            }\r\n                        }\r\n                        \r\n                        this.dialogMessageSubject.next(\"Data Saved Successfully\")\r\n                        setTimeout(() => {\r\n                            dialogRef.close();\r\n                            this.onClose.emit(this.ACID);\r\n                            this.router.navigate([\"pages/account/AccountLedger/AccountMaster\"])\r\n\r\n                        }, 1000)\r\n\r\n\r\n                    }\r\n                    else {\r\n                        //alert(data.result);\r\n                        //the ConnectionString in the server is not initialized means the the token 's user is not int the list of database user so it could't make connectionstring. Re authorization is requierd\r\n                        if (data.result._body == \"The ConnectionString property has not been initialized.\") {\r\n                            this.router.navigate(['/login', this.router.url])\r\n                            return;\r\n                        }\r\n                        //Some other issues need to check\r\n                        this.dialogMessageSubject.next(\"Error in Saving Data:\" + data.result._body);\r\n                        //console.log(data.result._body);\r\n                        setTimeout(() => {\r\n                            dialogRef.close();\r\n                            this.childModal.hide();\r\n                        }, 3000)\r\n                    }\r\n                },\r\n                    error => { alert(error) }\r\n                );\r\n            this.subcriptions.push(sub);\r\n        }\r\n        catch (e) {\r\n            alert(e);\r\n        }\r\n    }\r\n    cancel() {\r\n        let acid = this.mode == 'add'? this.ACID : this.parentIdOnEdit;\r\n        this.onClose.emit(acid);\r\n        this.AccountService.subTitle = \" \";\r\n    }\r\n    hideChildModal() {\r\n        try {\r\n            this.childModal.hide();\r\n        } catch (ex) {\r\n            //console.log(ex);\r\n            alert(ex);\r\n        }\r\n    }\r\n\r\n    changePtype(value) {\r\n        // this.form.get('Ptype').patchValue(value);\r\n        ////console.log(\"@@value\", value);\r\n        if (value == 'V') {\r\n            this.form.get('createMember').disable;\r\n        } else {\r\n            this.form.get('createMember').enable;\r\n        }\r\n    }\r\n    public onGrpChange(event, i, selected) {\r\n        try {\r\n            if (selected) {\r\n                // this.actype = selected.ACTYPE\r\n                // this.changeACtype(selected.ACTYPE);\r\n                // this.disableActype == true;\r\n                //latest selected \r\n                this.parentGroup = selected;\r\n            }\r\n\r\n\r\n            //let newGroup: GroupAccounts = event.value;\r\n            //console.log({ onGrpChangeEvent: event, eventIndex: i, selected: selected });\r\n            let opt: SelectItem[] = [];\r\n            var ind = i;\r\n\r\n            if (event) {\r\n                if (this.acGroups.length > ind + 1) {\r\n                    this.acGroups.splice(ind + 1, this.acGroups.length - 1)\r\n                }\r\n                //console.log({ GroupchageEvent: event, value: event.value.ACNAME });\r\n                this.lastParentID = event.value.ACID;\r\n\r\n                this.AccountService.getChildrenGroups(event.value.ACID)\r\n                    .flatMap(data => data)\r\n                    .subscribe(data => {\r\n                        //console.log({ children: data });\r\n                        if (data.TYPE == 'G')\r\n                            opt.push({ label: data.ACNAME, value: data });\r\n\r\n                    }, Error => //console.log({ groupchangeError: Error })\r\n                         () => {\r\n                            if (opt.length > 0) {\r\n                                this.acGroups.push({ group: event.value.ACNAME, value: event.value, options: opt });\r\n                            }\r\n\r\n                            //this.groupListSubject.next(subjectData);\r\n                            // //console.log({ negroup2: { group: event.value.ACNAME, value: event.value, options: opt }, subjectData2: subjectData });\r\n                        }\r\n                    );\r\n            }\r\n\r\n        }\r\n        catch (ex) {\r\n            //console.log({ onGroupChange: ex })\r\n        }\r\n\r\n    }\r\n\r\n    onChangeArea(event) {\r\n        let userAreaName = event.target.value;\r\n        let checkArea = [];\r\n        if (userAreaName != null) {\r\n            checkArea = this.areaList.filter(x => x.AREANAME.toUpperCase() == userAreaName.toUpperCase());\r\n            if (checkArea.length == 0) {\r\n                if (confirm(\"Do you want to add new Area\")) {\r\n\r\n                } else {\r\n                    this.form.get('CITY').patchValue(\"\");\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    getGroups() {\r\n        //FIRST GET THE MAIN GROUP\r\n        // this.hasSubLedger = 0;\r\n        // this.changehassubEvent(false);\r\n        // this.disableHassubledger = false;\r\n        // alert(\"reached\")\r\n        ////console.log(\"Has SUB is false\")\r\n        this.actype = '';\r\n        this.disableActype = false;\r\n        this.acGroups = [];\r\n        this.getMainGroup();\r\n        if (!this.ACID) return;\r\n        //console.log({ acid: this.ACID });\r\n        this.AccountService.getParentGroups(this.ACID)\r\n            .flatMap(data => data)\r\n            .subscribe(data => {\r\n                try {\r\n                    data.SELECTEDGROUPAC = data.CHILDLIST.find(itm => itm.ACID == data.SELECTEDGROUP);\r\n                    this.parentGroup = data.SELECTEDGROUPAC;\r\n                    //console.log({ selectedGroup: data.SELECTEDGROUP, selectedGroupAC: data.SELECTEDGROUPAC })\r\n                    // this.parentid = data.SELECTEDGROUPAC.SELECTEDGROUPAC.ACNAME;\r\n\r\n                    // if (data.SELECTEDGROUPAC.HASSUBLEDGER == 1 && this.hasSubLedger == 0) {\r\n                    //     this.hasSubLedger = 1;\r\n                    //     this.changehassubEvent(true);\r\n                    //     this.disableHassubledger = true;\r\n                    //     ////console.log(\"Disable AHS SUB\")\r\n                    // }\r\n                    \r\n                    let opt: SelectItem[] = [];\r\n                    data.CHILDLIST.forEach(child => {\r\n                        opt.push({ label: child.ACNAME, value: child });\r\n                    });\r\n                    this.acGroups.push({ group: data.ACNAME, value: data, options: opt });\r\n                }\r\n                catch (ex) {\r\n                    //console.log({ getParentGroups: ex })\r\n                }\r\n            }, error => { //console.log({ getgroupError: error }) }\r\n                () => {\r\n                    if (this.acGroups.length > 1) {\r\n                        let selectedGroup = this.acGroups[0].options.find(itm =>\r\n                            itm.value.ACID == this.acGroups[1].value.ACID\r\n                        )\r\n                        if (selectedGroup) {\r\n                            this.acGroups[0].value.SELECTEDGROUPAC = selectedGroup.value;\r\n                        }\r\n                        //console.log({ selectedGroupValue: selectedGroup.value });\r\n                        // if (selectedGroup.value.Ptype) {\r\n                        //     alert(\"REACHED\")\r\n                        //     this.actype = selectedGroup.value.Ptype\r\n                        //     this.changePtype(selectedGroup.value.Ptype);\r\n                        //     this.disableActype == true;\r\n                        // }\r\n                        // //console.log({groupTofind:this.acGroups[1],options:this.acGroups[0].options,selected:this.acGroups[0].value.SELECTEDGROUPAC,selected2:this.acGroups[1].value.SELECTEDGROUPAC})\r\n                    }\r\n                }});\r\n\r\n        return;\r\n    }\r\n    getMainGroup() {\r\n        let opt: SelectItem[] = [];\r\n        this.AccountService.getTopGroups()\r\n            .flatMap(data => data)\r\n            .subscribe(data => {\r\n                opt.push({ label: data.ACNAME, value: data })\r\n            });\r\n        this.acGroups.push({ group: 'Main Group', value: { ACNAME: 'MAIN GROUP', ACID: null, PARENT: null }, options: opt });\r\n        ////console.log(\"CheckAcGroup\", this.acGroups)\r\n    }\r\n    clickedNotActive(value) {\r\n        if (this.form == null) { return }\r\n        this.form.get('isNotActive').patchValue(value);\r\n    }\r\n    NotActive() {\r\n\r\n    }\r\n\r\n    enableInitial(value) {\r\n        // ////console.log(\"@@value\", value)\r\n        if (value == 0) {\r\n            this.form.get('INITIAL').disable();\r\n        } else {\r\n            this.form.get('INITIAL').enable();\r\n        }\r\n    }\r\n\r\n    enableShareOptions(enableShareDiv) {\r\n        // ////console.log(\"@@enableShareDiv\", enableShareDiv)\r\n        if (enableShareDiv == 1) {\r\n            this.form.get('ShareSelectiveDiv').enable();\r\n            this.form.get('ShareAllDiv').enable();\r\n\r\n            // this.showDivSelectionTable = true;\r\n            \r\n        } else {\r\n            this.form.get('ShareSelectiveDiv').disable();\r\n            this.form.get('ShareAllDiv').disable();\r\n            this.form.get('ShareSelectiveDiv').setValue(0);\r\n            this.form.get('ShareAllDiv').setValue(0);\r\n\r\n            this.showDivSelectionTable = false;\r\n            \r\n        }\r\n        \r\n\r\n    }\r\n\r\n    enableDivSelectionTable(showTable) {\r\n        // ////console.log(\"@@showTable\", showTable)\r\n        if (showTable == 1) {\r\n            this.showDivSelectionTable = true;\r\n            this.form.get('ShareAllDiv').setValue(0);\r\n            this.enableDivision = true;\r\n            this.division.forEach(x => {\r\n                x.INITIAL == this.userProfile.CompanyInfo.INITIAL ? x.isCheck = true : '';\r\n            }) \r\n                    } else {\r\n            this.showDivSelectionTable = false;\r\n            this.enableDivision = false\r\n        }\r\n    }\r\n\r\n    ShareAllDiv(ShareAllDiv) {\r\n        this.showDivSelectionTable = false;\r\n        if (ShareAllDiv == 1) {\r\n            this.form.get('ShareSelectiveDiv').setValue(0);\r\n            this.form.get('ISCOMMONAC').setValue(1);\r\n        }\r\n        else{\r\n            this.form.get('ISCOMMONAC').setValue(0);\r\n        }\r\n        this.form.get('enableDivSelectionTable').setValue(false);\r\n    }\r\n   \r\n\r\n    keyPress(event: any) {\r\n        const pattern = /[0-9]/;\r\n        const inputChar = String.fromCharCode((event as KeyboardEvent).charCode);\r\n        if (!pattern.test(inputChar)) {\r\n            // invalid character, prevent input\r\n            event.preventDefault();\r\n        }\r\n    }\r\n\r\n    @HostListener(\"document : keydown\", [\"$event\"])\r\n    handleKeyDownboardEvent($event: KeyboardEvent) {\r\n        if ($event.code == \"F3\") {\r\n            $event.preventDefault();\r\n            this.cancel();\r\n        }\r\n    }\r\n    check(e) {\r\n        // //console.log('checkValue@!',this.division)\r\n        this.form.value.MultipleDivision = e.target.value;\r\n    }\r\n    activeIndex: any;\r\n    rowClick(i) {\r\n        this.activeIndex = i;\r\n    }\r\n     ChangedDiv : string = '';\r\n    changeDivision(e) {\r\n        // //console.log(\"CheckValue@\",e)\r\n        this.ChangedDiv = e;\r\n        this.division.forEach(x => {\r\n            x.INITIAL == e ? x.isDefault = true : x.isDefault = false;\r\n\r\n        })\r\n        if(this.mode == \"add\"){\r\n            this.division.forEach(x => {\r\n                x.INITIAL == e ? x.isCheck = true : x.isCheck = false;\r\n            })\r\n        }else{\r\n            this.division.forEach(x => {\r\n                x.INITIAL == e ? x.isCheck = true : '';\r\n            })\r\n        }\r\n        \r\n    }\r\n    enableDivision: Boolean;\r\n    ClickShareAccount(value) {\r\n        this.form.value.enableDivSelectionTable = false;\r\n        if (this.form.value.ShareAccount == 1) {\r\n            this.changeDivision(this.MasterService.userProfile.CompanyInfo.INITIAL)\r\n            this.enableDivision = true;\r\n\r\n\r\n        }\r\n        else {\r\n            this.form.get('ShareAllDiv').setValue(0);\r\n            this.form.get('ShareSelectiveDiv').setValue(0);\r\n            this.enableDivision = false;\r\n\r\n        }\r\n        this.form.get('enableDivSelectionTable').setValue(false);\r\n       \r\n    }\r\n\r\n    getGroupList(parentACID){\r\n        \r\n        //console.log(\"get group list\", this.ACID);\r\n\r\n        if(parentACID){\r\n            this.AccountService.getAccountHeirarchy(parentACID).subscribe(\r\n                res=>{\r\n                    //console.log(\"result hai\", res);\r\n                    let itemGroup = res[0];\r\n                    //console.log(\"MAIN GROUP LSIR\", this.MasterService.mainGroupList);\r\n                    this.MasterService.groupSelectObj.MGROUP = itemGroup.L1;\r\n                    //console.log(\"main group id\", this.MasterService.groupSelectObj.MGROUP);\r\n                    this.AccountService.getSubGroupList(this.MasterService.groupSelectObj.MGROUP).subscribe((res)=>{\r\n                        if(res.length > 0){\r\n                            this.MasterService.subGroupAList = res;\r\n                            this.MasterService.groupSelectObj.SUBGROUP_A = itemGroup.L2;\r\n                            //console.log(\"SUBGROUP A LIST\", this.MasterService.subGroupAList);\r\n                            this.MasterService.disableSubGroupA = false\r\n                            this.AccountService.getSubGroupList(this.MasterService.groupSelectObj.SUBGROUP_A).subscribe((res)=>{\r\n                                if(res.length> 0){\r\n                                    this.MasterService.subGroupBList = res;\r\n                                    this.MasterService.groupSelectObj.SUBGROUP_B = itemGroup.L3;\r\n                                    this.MasterService.disableSubGroupB = false\r\n                                    this.AccountService.getSubGroupList(this.MasterService.groupSelectObj.SUBGROUP_B).subscribe((res)=>{\r\n                                        if(res.length > 0){\r\n                                            this.MasterService.subGroupCList = res;\r\n                                            this.MasterService.groupSelectObj.SUBGROUP_C = itemGroup.L4;\r\n                                            this.MasterService.disableSubGroupC = false;\r\n\r\n                                        }else{\r\n                                            this.MasterService.disableSubGroupC = true;\r\n                                        }\r\n                                    });\r\n\r\n                                }else{\r\n                                    this.MasterService.disableSubGroupB = true;\r\n                                }\r\n                            });\r\n                        }else{\r\n                            this.MasterService.disableSubGroupA = true;\r\n                        }\r\n                    })\r\n                }\r\n            )\r\n        }\r\n    }\r\n\r\n    UnderObj: any;\r\n  nodeObj: any = <any>{}\r\n  PrimaryGrpObj: any;\r\n  isOnlyMainParent = 0\r\n  root: string;\r\n  isGroup: number;\r\n  ViewMode: boolean;\r\n    getRootParent(node, list) {\r\n// return;\r\n// console.log(\"ChewcekLog\",node,list)\r\n        //console.log(\"get Rooy parent\", node,list);\r\n        this.Parent.Under = '';\r\n        // if (node.ACID == \"CA\") this.form.value.ACTYPE = \"LB\"; this.form.get('ACTYPE').setValue(\"LB\");\r\n        if (node.ACID == \"CA\")  this.form.get('ACTYPE').setValue(\"LB\");\r\n        // else this.form.value.ACTYPE = node.ACID;\r\n        else this.form.get('ACTYPE').setValue(node.ACID);\r\n\r\n    \r\n    \r\n        this.nodeObj = node;\r\n        this.UnderObj = node.PARENT;\r\n        if (node.PARENTID == 'BS' || node.PARENTID == 'PL' || node.PARENTID == 'TD') {\r\n          this.PrimaryGrpObj = node; this.Parent.Primary = node.ACNAME;\r\n          this.isOnlyMainParent = 1; this.UnderObj = node; return;\r\n    \r\n        }\r\n        for (let t of list) {\r\n    \r\n          if (node.PARENTID != t.ACID) {\r\n            this.loopingChild(node, t.children, t);\r\n    \r\n    \r\n          }\r\n          else { this.root = node.PARENTID; this.PrimaryGrpObj = node }\r\n        }\r\n        if(this.UnderObj){\r\n            this.Parent.Under = this.UnderObj.ACNAME;\r\n        }\r\n       \r\n        if (node.TYPE == \"G\") {\r\n          this.UnderObj = node;\r\n          this.isGroup == 1\r\n          this.modeTitle = 'View Group'\r\n          this.ViewMode = true;\r\n        }\r\n        else {\r\n          this.modeTitle = 'View Account';\r\n          this.ViewMode = true;\r\n        }\r\n        // this.Parent.Primary=this.PrimaryGrpObj.ACNAME;\r\n        if (this.root == 'LB') {\r\n          this.Parent.Primary = 'LIABILITES'\r\n        //   this.form.value.ACTYPE = 'LB'\r\n          this.form.get('ACTYPE').setValue('LB');\r\n\r\n    \r\n        }\r\n        else if (this.root == 'AT') {\r\n          this.Parent.Primary = 'ASSETS'\r\n        //   this.form.value.ACTYPE = 'AT'\r\n          this.form.get('ACTYPE').setValue('AT');\r\n\r\n    \r\n        }\r\n        else if (this.root == 'DI') {\r\n          this.Parent.Primary = 'DIRECT INCOME'\r\n        //   this.form.value.ACTYPE = 'DI'\r\n          this.form.get('ACTYPE').setValue('DI');\r\n\r\n        }\r\n        else if (this.root == 'DE') {\r\n          this.Parent.Primary = 'DIRECT EXPENSES'\r\n        //   this.form.value.ACTYPE = 'DE'\r\n          this.form.get('ACTYPE').setValue('DE');\r\n\r\n        }\r\n        else if (this.root == 'IE') {\r\n          this.Parent.Primary = 'INDIRECT EXPENSES'\r\n        //   this.form.value.ACTYPE = 'IE'\r\n          this.form.get('ACTYPE').setValue('IE');\r\n\r\n        }\r\n        else if (this.root == 'II') {\r\n          this.Parent.Primary = 'INDIRECT INCOME'\r\n        //   this.form.value.ACTYPE = 'II'\r\n          this.form.get('ACTYPE').setValue('II');\r\n\r\n        }\r\n        else if (this.root == 'CA') {\r\n          this.Parent.Primary = 'CAPITAL A/C'\r\n        //   this.form.value.ACTYPE = 'LB'\r\n          this.form.get('ACTYPE').setValue('LB');\r\n\r\n        }\r\n        this.form.get('ACTYPE').disable();\r\n        this.accACTYPE = this.form.controls.ACTYPE.value;\r\n\r\n    \r\n        this.isOnlyMainParent = 0;\r\n    \r\n      }\r\n      loopingChild(node, cList, root) {\r\n        for (let c of cList) {\r\n          if (c != node) { this.loopingChild(node, c.children, root); }\r\n          else { this.root = root.ACID; this.PrimaryGrpObj = root }\r\n        }\r\n      }\r\n\r\n      DeleteLedger(){\r\n          //console.log(\"CURRENT ACCNT ACID\", this.ACID);\r\n         this.DeleteAcc.show();\r\n      }\r\n\r\n      DeleteYes(){\r\n          //console.log(\"DELETE YES\", this.ACID,this.parentIdOnEdit);\r\n          this.DeleteAcc.hide();\r\n          this.spinnerservice.show(\"Deleting account, please wait...\");\r\n          this.MasterService.deleteAccount(this.ACID).subscribe(data =>{\r\n              if(data.status == \"ok\"){\r\n                  this.alertservice.success(\"Account deleted successfully\");\r\n                  this.spinnerservice.hide();\r\n                  this.onClose.emit(this.parentIdOnEdit);\r\n                  this.router.navigate([\"pages/account/AccountLedger/AccountMaster\"])\r\n              }else{\r\n                  this.spinnerservice.hide();\r\n                  this.alertservice.error(\"Error in  deleting data: \"+data.result._body);\r\n              }\r\n          })\r\n      }\r\n\r\n      DeleteNo() {\r\n          this.DeleteAcc.hide();\r\n      }\r\n\r\n      showBankPopup(){\r\n        this.gridBankPopupSettings = {\r\n            title: \"Accounts\",\r\n            apiEndpoints: `/getBankPagedList/`,\r\n            defaultFilterIndex: 1,\r\n            columns: [\r\n              {\r\n                key: \"BANKCODE\",\r\n                title: \"Bank CODE\",\r\n                hidden: false,\r\n                noSearch: false\r\n              },\r\n              {\r\n                key: \"BANKNAME\",\r\n                title: \"Bank NAME\",\r\n                hidden: false,\r\n                noSearch: false\r\n              }\r\n            ]\r\n          };\r\n          this.genericGridBankList.show();\r\n      }\r\n\r\n      onBankSelect(value){\r\n    //console.log(\"ValueCheck\",value)\r\n    this.form.get('ACNAME').setValue(value.BANKNAME);\r\n    this.form.get('ACCODE').setValue(value.BANKCODE);\r\n\r\n\r\n      }\r\n\r\n      onChangeTDSType(event){\r\n        let user_tdstype= event.target.value;\r\n         let check_TDSType = [];   \r\n        if(user_tdstype !=null){\r\n            check_TDSType = this.TDSType_List.filter (x=> x.TDS_TYPE.toUpperCase() == user_tdstype.toUpperCase());\r\n            if(check_TDSType.length ==0){\r\n               if(confirm(\"Do you want to add new TDS Type?\")){\r\n      \r\n                }else{\r\n      \r\n                }\r\n            }   \r\n        }\r\n      \r\n      }\r\n}\r\n\r\n\r\nexport class DObj {\r\n    DivList: DivList[]\r\n}\r\nexport class DivList {\r\n    ACID: string;\r\n    DIV: string;\r\n    STAMP: number;\r\n    ISACTIVE: number;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/pages/masters/components/Account-Ledger-New/addAccledger.component.ts","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({ name: 'searchData', pure: false })\r\n\r\nexport class SearchPipe implements PipeTransform {\r\n  transform(data, query: string,option:string): any {\r\n    if (data) {\r\n      if (query) {\r\n        if(option == \"searchByName\"){\r\n        return data.filter(item => {\r\n          const searchedQuery = query.replace(/[^A-Z0-9]/ig, '').toLowerCase();\r\n          const comId = (item.ACNAME) ? (item.ACNAME).replace(/[^A-Z0-9]/ig, '').toLowerCase() : '';\r\n          if (\r\n            comId.indexOf(searchedQuery) !== -1\r\n          ) {\r\n            // //console.log(\"CheckIten\",item)\r\n            return item;\r\n          }\r\n        });\r\n      }else if(option == \"searchByVat\"){\r\n        return data.filter(item => {\r\n          const searchedQuery = query.replace(/[^A-Z0-9]/ig, '').toLowerCase();\r\n          const comId = (item.ACCODE) ? (item.ACCODE).replace(/[^A-Z0-9]/ig, '').toLowerCase() : '';\r\n          if (\r\n            comId.indexOf(searchedQuery) !== -1\r\n          ) {\r\n          \r\n            return item;\r\n          }\r\n        });\r\n      }\r\n      else if(option == \"orderByStamp\"){\r\n        return data.filter(item => {\r\n          const searchedQuery = query.replace(/[^A-Z0-9]/ig, '').toLowerCase();\r\n          const comId = (item.VATNO) ? (item.VATNO).replace(/[^A-Z0-9]/ig, '').toLowerCase() : '';\r\n          if (\r\n            comId.indexOf(searchedQuery) !== -1\r\n          ) {\r\n            return item;\r\n          }\r\n        });\r\n      }\r\n     \r\n      } else {\r\n        return data;\r\n      }\r\n    }\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/pages/masters/components/Account-Ledger-New/search.pipe.ts","import { Routes, RouterModule } from '@angular/router';\r\nimport { NgModule } from '@angular/core';\r\nimport { BankComponent } from './bank.component';\r\nimport { BankListComponent } from './bank-list.component';\r\n\r\n\r\nconst routes: Routes = [\r\n    { path: '', component: BankListComponent },\r\n    { path: 'add-bank', component: BankComponent },\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class BankRoutingModule { }\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/pages/masters/components/Bank/bank.routing.ts","import { Component } from '@angular/core';\r\nimport 'style-loader!./smartTables.scss';\r\nimport { LocalDataSource } from '../../../../node_modules/ng2-smart-table/';\r\nimport 'style-loader!./smartTables.scss';\r\nimport { MasterRepo } from \"../../../../common/repositories/masterRepo.service\";\r\nimport { Router } from '@angular/router';\r\nimport { BehaviorSubject } from \"rxjs/BehaviorSubject\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { MdDialog } from \"@angular/material\";\r\nimport { AuthDialog } from \"../../../modaldialogs/authorizationDialog/authorizationDialog.component\";\r\nimport { PLedgerservice } from './PLedger.service';\r\n\r\n\r\n@Component({\r\n    selector: 'pLedgerTable',\r\n    template: require('./PLedgerTable.html'),\r\n    styles: [require('../../../modal-style.css')],\r\n})\r\nexport class pLedgerTableComponent {\r\n    PType: string;\r\n    partyName: string;\r\n    settings = {\r\n        mode: 'external',\r\n        add: {\r\n            addButtonContent: '',\r\n            createButtonContent: '<i class=\"ion-checkmark\"></i>',\r\n            cancelButtonContent: '<i class=\"ion-close\"></i>',\r\n        },\r\n        edit: {\r\n            editButtonContent: 'Edit',\r\n            saveButtonContent: '<i class=\"ion-checkmark\"></i>',\r\n            cancelButtonContent: '<i class=\"ion-close\"></i>',\r\n        },\r\n        delete: {\r\n            deleteButtonContent: ' ',\r\n            confirmDelete: true\r\n        },\r\n        columns: {\r\n            ACNAME: {\r\n                title: 'NAME',\r\n                type: 'string'\r\n            },\r\n            shortname: {\r\n                title: 'Short Name',\r\n                type: 'string'\r\n            },\r\n            ACCODE: {\r\n                title: 'SAPCODE',\r\n                type: 'string'\r\n            },\r\n            Address: {\r\n                title: 'ADDRESS',\r\n                type: 'string'\r\n            },\r\n            GSTNO: {\r\n                title: 'GST No',\r\n                type: 'string'\r\n            },\r\n            \r\n            ISACTIVE: {\r\n                title: 'STATUS',\r\n                type: 'string',\r\n                valuePrepareFunction: (value) => { return value == true ? 'Active' : 'InActive'; },\r\n                filter: {\r\n                    type: 'list',\r\n                    config: {\r\n                        selectText: 'Show all',\r\n                        list: [\r\n                            { value: true, title: 'Active' },\r\n                            { value: false, title: 'InActive' },\r\n                        ]\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    source: LocalDataSource = new LocalDataSource();\r\n    messageSubject: BehaviorSubject<string> = new BehaviorSubject<string>(\"You are not authorized.\");\r\n    message$: Observable<string> = this.messageSubject.asObservable();\r\n\r\n    constructor(private _Ledgerservice: PLedgerservice, private router: Router, public dialog: MdDialog, private masterService: MasterRepo) {\r\n        try {\r\n\r\n            this.PType = this.masterService.PType;\r\n            //  ////console.log(\"Ptype\",this.PType)\r\n            if (this.PType == 'C') this.partyName = 'New Customer';\r\n            else if (this.PType == 'V') this.partyName = 'New Supplier';\r\n\r\n            let data: Array<any> = [];\r\n            this._Ledgerservice.getPartyItemByPtype(this.PType).subscribe(res => {\r\n                if (res.status == \"ok\") {\r\n                    data = res.result;\r\n                    this.source.load(data);\r\n                    //  ////console.log(\"PledgerTable\",data)\r\n                }\r\n            });\r\n\r\n\r\n\r\n\r\n\r\n        } catch (ex) {\r\n            //console.log(ex);\r\n            alert(ex);\r\n        }\r\n    }\r\n\r\n    setMode() {\r\n        try {\r\n\r\n        } catch (ex) {\r\n            //console.log(ex);\r\n            alert(ex);\r\n        }\r\n    }\r\n    onAddClick(): void {\r\n        try {\r\n            if (this.PType == 'C')\r\n                this.router.navigate([\"./pages/masters/PartyLedger/Customer\", { mode: \"add\", isGroup: 0, PType: 'C', Title: 'Create Customer', returnUrl: this.router.url }]);\r\n            else if (this.PType == 'V')\r\n                this.router.navigate([\"./pages/masters/PartyLedger/Supplier\", { mode: \"add\", isGroup: 0, PType: 'V', Title: 'Create Supplier', returnUrl: this.router.url }]);\r\n        } catch (ex) {\r\n            //console.log(ex);\r\n            alert(ex);\r\n        }\r\n    }\r\n    onGrpAddClick() {\r\n        try {\r\n            if (this.PType == 'C')\r\n                this.router.navigate([\"./pages/masters/PartyLedger/Customer\", { mode: \"add\", isGroup: 1, PType: 'C', Title: 'Create Customer Group', returnUrl: this.router.url }]);\r\n            else if (this.PType == 'V')\r\n                this.router.navigate([\"./pages/masters/PartyLedger/Supplier\", { mode: \"add\", isGroup: 1, PType: 'V', Title: 'Create Supplier Group', returnUrl: this.router.url }]);\r\n        } catch (ex) {\r\n            //console.log(ex);\r\n            alert(ex);\r\n        }\r\n    }\r\n\r\n    onDeleteConfirm(event): void {\r\n        try {\r\n            if (window.confirm('Are you sure you want to delete?')) {\r\n                event.confirm.resolve();\r\n            } else {\r\n                event.confirm.reject();\r\n            }\r\n        } catch (ex) {\r\n            //console.log(ex);\r\n            alert(ex);\r\n        }\r\n    }\r\n\r\n    onViewClick(): void {\r\n        try {\r\n            // this.router.navigate([\"./pages/masters/company\", { initial: event.data.INITIAL, mode: \"view\", returnUrl: this.router.url }]);\r\n        } catch (ex) {\r\n            //console.log(ex);\r\n            alert(ex);\r\n        }\r\n    }\r\n\r\n    onEditClick(event) {\r\n        try {\r\n            let acid = event.data.ACID\r\n            if (this.PType == 'C')\r\n                this.router.navigate([\"./pages/masters/PartyLedger/Customer\", { mode: \"edit\", ACID: acid, isGroup: 0, PType: 'C', Title: 'Edit Customer', returnUrl: this.router.url }]);\r\n            else if (this.PType == 'V')\r\n                this.router.navigate([\"./pages/masters/PartyLedger/Supplier\", { mode: \"edit\", ACID: acid, isGroup: 0, PType: 'V', Title: 'Edit Supplier', returnUrl: this.router.url }]);\r\n        } catch (ex) {\r\n            //console.log(ex);\r\n            alert(ex);\r\n        }\r\n    }\r\n\r\n    // onEditClick(event): void {\r\n    //     try {\r\n    //         this.router.navigate([\"./pages/masters/Customer/CustomerList\", { initial: event.data.INITIAL, name: event.data.NAME, mode: \"edit\", returnUrl: this.router.url }]);\r\n\r\n    //     } catch (ex) {\r\n    //         //console.log(ex);\r\n    //         alert(ex);\r\n    //     }\r\n    // }\r\n\r\n    openAuthDialog() {\r\n        var message = { header: \"Information\", message: this.message$ };\r\n        this.dialog.open(AuthDialog, { hasBackdrop: true, data: message });\r\n    }\r\n\r\n}\r\n    /*public actions: Array<PageAction> = [];\r\nprivate router: Router;\r\nconstructor(router: Router) {\r\nsuper();\r\nlet self: Divisions = this;\r\nself.router = router;\r\nself.model = new DivisionsModel(self.i18nHelper);\r\n//self.registerEvent(self.model.event)\r\nself.loadDivisions();\r\nthis.model.addPageAction(new PageAction(\"btnAddDivision\", \"masters.divisions.addDivisionAction\", () => self.onAddNewDivisionClicked()));\r\n\r\n}\r\n\r\nonAddNewDivisionClicked() {\r\nthis.router.navigate([route.division.addDivision.name]);\r\n}\r\n\r\nonEditDivisionClicked(event: any) {\r\nthis.router.navigate([route.division.editDivision.name, { id: event.item.initial }]);\r\n}\r\n\r\nonDeleteDivisionClicked(event: any) {\r\nlet self: Divisions = this;\r\ndivisionsService.delete(event.item.id).then(function () {\r\n    self.loadDivisions();\r\n});\r\n\r\n}\r\nprivate loadDivisions() {\r\nlet self: Divisions = this;\r\ndivisionsService.getDivision().then(function (items: Array<any>) {\r\n\r\n    self.model.importDivisions(items);\r\n});\r\n}\r\n}*/\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/pages/masters/components/PLedger/PLedgerTable.component.ts","import { NgModule } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\r\nimport { TreeModule } from \"angular-tree-component\";\r\nimport { Ng2SmartTableModule } from \"../../../../node_modules/ng2-smart-table/src/ng2-smart-table.module\";\r\nimport { PLedgerComponent } from \"./PLedger.component\";\r\nimport { SupplierLedgerComponent } from \"./SupplierLedger.component\";\r\nimport { CustomerLedgerComponent } from \"./CustomerLedger.component\";\r\nimport { PartyLedgerRoutingModule } from \"./pledger.routing\";\r\nimport { GenericPopupGridModule } from \"../../../../common/popupLists/generic-grid/generic-popup-grid.module\";\r\nimport { NgaModule } from \"../../../../theme/nga.module\";\r\nimport { pLedgerTableComponent } from \"./PLedgerTable.component\";\r\nimport { PLedgerservice } from \"./PLedger.service\";\r\nimport { TransactionService } from \"../../../../common/Transaction Components/transaction.service\";\r\n\r\n@NgModule({\r\n  imports: [\r\n    TreeModule,\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    PartyLedgerRoutingModule,\r\n    GenericPopupGridModule.forRoot(),\r\n    NgaModule,\r\n    Ng2SmartTableModule\r\n\r\n  ],\r\n  declarations: [\r\n    PLedgerComponent,\r\n    SupplierLedgerComponent,\r\n    CustomerLedgerComponent,\r\n    pLedgerTableComponent\r\n  ],\r\n  providers: [PLedgerservice, TransactionService],\r\n  exports:[PLedgerComponent]\r\n\r\n})\r\nexport class PartyLedgerModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/pages/masters/components/PLedger/pledger.module.ts","import { Routes, RouterModule } from '@angular/router';\r\nimport { NgModule } from '@angular/core';\r\nimport { PLedgerComponent } from './PLedger.component';\r\nimport { SupplierLedgerComponent } from './SupplierLedger.component';\r\nimport { CustomerLedgerComponent } from './CustomerLedger.component';\r\n\r\nconst routes: Routes = [\r\n    { path: 'Supplier', component: PLedgerComponent },\r\n    { path: 'SupplierList', component: SupplierLedgerComponent },\r\n    { path: 'Customer', component: PLedgerComponent },\r\n    { path: 'CustomerList', component: CustomerLedgerComponent },\r\n\r\n\r\n\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class PartyLedgerRoutingModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/pages/masters/components/PLedger/pledger.routing.ts","import { Component, Input, Output, EventEmitter, OnInit, ViewChild } from '@angular/core';\r\nimport { TreeViewAcService } from './accountLedger.service'\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { FormGroup, FormControl, FormBuilder, Validators } from '@angular/forms';\r\nimport { Subscription } from \"rxjs/Subscription\";\r\nimport { ModalDirective } from 'ng2-bootstrap';\r\nimport { MasterRepo } from '../../../../common/repositories/masterRepo.service';\r\nimport { AcListTree, TAcList } from \"../../../../common/interfaces/Account.interface\";\r\nimport { BehaviorSubject } from \"rxjs/BehaviorSubject\";\r\nimport { Observable } from \"rxjs/Observable\";\r\n\r\n@Component(\r\n    {\r\n        selector: 'addLedgerSelectors',\r\n        template: ` <div class=\"row\" class=\"form-horizontal\">\r\n    <ba-card [title]=\"modeTitle\" baCardClass=\"with-scroll\">\r\n    <div class=\"form-group row\">\r\n    <label class=\"col-sm-2 form-control-label\">Root Parent:</label>\r\n    <div class=\"col-sm-2\">\r\n    \r\n        <select style=\"width:130px; height:28px;\" [(ngModel)]=\"majorparent\" (ngModelChange)=\"majorgroupChange(majorparent)\">\r\n       <option *ngFor=\"let code of acledgerList$ | async\" [ngValue]=\"code\">{{code.ACNAME}}</option>\r\n      </select>\r\n     </div>\r\n  </div>\r\n  <div [ngBusy]=\"busy\"></div>\r\n  <div class=\"form-group row\">\r\n    <label class=\"col-sm-2 form-control-label\">Parent:</label>\r\n    <div class=\"col-sm-2\">\r\n     <select style=\"width:130px; height:28px;\" [(ngModel)]=\"parentid\">\r\n     <option *ngFor=\"let code of majorparent.children\" [ngValue]=\"code.ACID\">{{code.ACNAME}}</option>\r\n    </select>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"form-group row\">\r\n    <label class=\"col-sm-2 form-control-label\">Ledger Name:</label>\r\n    <div class=\"col-sm-2\">\r\n      <input type=\"text\" class=\"form-control\" [(ngModel)]=\"ledgerAcObj.ACNAME\" placeholder=\"Group Name\">\r\n    </div>\r\n  </div>\r\n  <div *ngIf=\"ledgerAcObj.PType!='B'\">\r\n  <fieldset style=\"border:1px solid black; margin-top:30px;\">\r\n                <label style=\"background-color:white; position: absolute; margin-top:-17px; margin-left: 20px; padding:5px;\">Account Type</label>\r\n\r\n                <table>\r\n                    <tr>\r\n                        <td> <label style=\"width:200px; padding:5px; margin-top:10px; margin-left:50px;\">Assets: </label><input disabled value=\"A\" type=\"radio\"  [checked]=\"ledgerAcObj.PType=='A'\" >\r\n                        <td> <label style=\"width:200px; padding:5px; margin-top:10px; margin-left:30px;\">Liabilities: </label><input disabled type=\"radio\" value=\"L\" [checked]=\"ledgerAcObj.PType=='L'\">\r\n                    </tr>\r\n                    <tr>\r\n                        <td> <label style=\"width:200px; padding:5px; margin-top:10px; margin-left:50px;\">Direct Income: </label><input disabled  value=\"D\" type=\"radio\" [checked]=\"ledgerAcObj.PType=='D'\">\r\n                         <td> <label style=\"width:200px; padding:5px; margin-top:10px; margin-left:30px;\">Indirect Income: </label><input disabled value=\"I\" type=\"radio\" [checked]=\"ledgerAcObj.PType=='I'\">   \r\n                    </tr>\r\n\r\n                </table>\r\n\r\n            </fieldset>\r\n            </div>\r\n   \r\n    </ba-card>\r\n    </div>\r\n    \r\n  <button type=\"button\" (click)=\"onSave()\" title=\"onSave\" class=\"btn btn-info\">Save</button>\r\n\r\n  <button type=\"button\" (click)=\"cancel()\" title=\"Cancel\" class=\"btn btn-info\">Back</button>\r\n  \r\n   <div class=\"modal fade\" bsModal #childModal=\"bs-modal\" [config]=\"{backdrop: 'static'}\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"mySmallModalLabel\"\r\n            aria-hidden=\"true\">\r\n            <div class=\"modal-dialog modal-sm\">\r\n                <div class=\"modal-content\">\r\n                    <div class=\"modal-header\">\r\n                        <button class=\"close\" aria-label=\"Close\" (click)=\"hideChildModal()\">\r\n          <span aria-hidden=\"true\">&times;</span>\r\n          \r\n        </button>\r\n                        <h4 class=\"modal-title\">Information</h4>\r\n                    </div>\r\n                    <div class=\"modal-body\">\r\n                        {{DialogMessage}}\r\n                    </div>\r\n                    <!--<div class=\"modal-footer\">\r\n                        <button class=\"btn btn-info confirm-btn\" (click)=\"hideChildModal()\">Save changes</button>\r\n                        <button class=\"btn btn-info confirm-btn\" type=\"button\" (click)=onsubmit()>Save</button>\r\n                    </div>!-->\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n     <div>\r\n  `,\r\n\r\n\r\n        //  [(ngModel)]=\"PARENTACNAME\"\r\n        // [(ngModel)]=\"RootName\"\r\n\r\n        providers: [TreeViewAcService],\r\n\r\n    }\r\n)\r\nexport class AddLedgerComponent {\r\n    selectednode: any;\r\n    parentid: any;\r\n    majorparent: any = <any>{};\r\n    majorParentAcList: any[] = [];\r\n    acParentList: any[] = [];\r\n    PARENTACNAME: string;\r\n    RootName: string;\r\n    acListtree: AcListTree = <AcListTree>{};\r\n    ledgerAcObj: TAcList = <TAcList>{};\r\n    ledgerAcList: TAcList[];\r\n    private returnUrl: string;\r\n    router: Router;\r\n    @ViewChild('childModal') childModal: ModalDirective;\r\n    DialogMessage: string = \"Saving data please wait ...\"\r\n    private subcriptions: Array<Subscription> = [];\r\n    public acledgerSubject:BehaviorSubject<TAcList[]> = new BehaviorSubject<TAcList[]>([]);\r\n    public acledgerList$:Observable<TAcList[]> = this.acledgerSubject.asObservable();\r\n    //treeList:any[]=[];\r\n    busy:Subscription;\r\n  \r\n    ngOnInit() {\r\n\r\n       this.busy= this.MasterService.getacListTree()\r\n            .subscribe(data => {\r\n\r\n               // let l = data.filter(x => x.PARENTID == 'BS' || 'PL' || 'TD');\r\n                this.majorParentAcList = data;\r\n                this.acledgerSubject.next(data);\r\n                ////console.log(\"initial call\")\r\n                //console.log(this.majorParentAcList);\r\n                //  this.treeList=data;\r\n                if (!!this._activatedRoute.snapshot.params['Par']) {\r\n                var mp = this._activatedRoute.snapshot.params['Par'];\r\n\r\n                   var s=this.majorParentAcList.filter(x=>x.ACID==mp)[0];\r\n                   if(s!=null){this.majorparent=s;}\r\n\r\n                    //this.majorgroupChange( this.majorparent);\r\n                }\r\n                if (!!this._activatedRoute.snapshot.params['ACID']) {\r\n                    this.parentid = this._activatedRoute.snapshot.params['ACID'];\r\n                }\r\n            });\r\n\r\n\r\n    }\r\n    constructor(public MasterService: MasterRepo, protected service: TreeViewAcService, router: Router, private _activatedRoute: ActivatedRoute) {\r\n        this.router = router;\r\n        this.majorparent.children = [];\r\n        // this.service.getNewValues(selectL)\r\n        //     .subscribe(data => {\r\n        //         if (data.status == 'ok') {\r\n\r\n        //             this.ledgerAcObj.PARENT = data.result.parent.ACID;\r\n        //             this.PARENTACNAME = data.result.parent.ACNAME;\r\n        //             this.ledgerAcObj.PType = data.result.parent.PType;\r\n        //         }\r\n\r\n        //     }\r\n        //     , error => {\r\n        //         this.router.navigate([this.returnUrl]);\r\n        //         //console.log(error);\r\n        //     }\r\n        //     );\r\n\r\n\r\n        if (!!_activatedRoute.snapshot.params['returmURl']) {\r\n            var selectq = this._activatedRoute.snapshot.params['returmURl'];\r\n        }\r\n\r\n\r\n    }\r\n    majorgroupChange(majorparent) {\r\n        ////console.log(\"call\")\r\n        //console.log(this.majorparent);\r\n        //  var p= this.treeList.filter(x => x.ACID == majorparent)[0];\r\n\r\n        //   if(p!=null){ this.acParentList =p.children;} \r\n\r\n    }\r\n\r\n    //     filter(majorparent) {\r\n    //         this.MasterService.getacListTree().subscribe(data => {\r\n    //             var p= data.filter(x => x.ACID == majorparent)[0];\r\n\r\n    //             if(p!=null){ this.acParentList =p.children;} });\r\n\r\n    // }\r\n    onSave() {\r\n        if(!this.MasterService.getRequestOption()){\r\n            return;\r\n          }\r\n\r\n        this.DialogMessage = \"Saving Data please wait...\"\r\n        this.childModal.show();\r\n        this.SumbitSave();\r\n    }\r\n    mode: string = \"add\";\r\n    SumbitSave() {\r\n        try {\r\n            ////console.log(\"submit call\");\r\n            this.ledgerAcObj.TYPE = \"A\";\r\n            // let pp = <TAcList>{}\r\n            // pp.ACNAME=this.form.value.ACNAME;\r\n            if (this.parentid == null) {\r\n                this.ledgerAcObj.PARENT = this.majorparent;\r\n                ////console.log(\"null value\");\r\n                //console.log(this.ledgerAcObj.PARENT);\r\n\r\n            }\r\n            else {\r\n                this.ledgerAcObj.PARENT = this.parentid;\r\n            }\r\n            let sub = this.MasterService.saveAccount(this.mode, this.ledgerAcObj)\r\n                .subscribe(data => {\r\n                    if (data.status == 'ok') {\r\n                        //Displaying dialog message for save with timer of 1 secs\r\n                        this.DialogMessage = \"Data Saved Successfully\"\r\n                        setTimeout(() => {\r\n                            this.childModal.hide();\r\n                            this.router.navigate([this.returnUrl]);\r\n                        }, 1000)\r\n\r\n\r\n                    }\r\n                    else {\r\n                        //alert(data.result);\r\n                        //the ConnectionString in the server is not initialized means the the token 's user is not int the list of database user so it could't make connectionstring. Re authorization is requierd\r\n                        if (data.result._body == \"The ConnectionString property has not been initialized.\") {\r\n                            this.router.navigate(['/login', this.router.url])\r\n                            return;\r\n                        }\r\n                        //Some other issues need to check\r\n                        this.DialogMessage = \"Error in Saving Data:\" + data.result._body;\r\n                        //console.log(data.result._body);\r\n                        setTimeout(() => {\r\n                            this.childModal.hide();\r\n                        }, 3000)\r\n                    }\r\n                },\r\n                error => { alert(error) }\r\n                );\r\n            this.subcriptions.push(sub);\r\n        }\r\n        catch (e) {\r\n            alert(e);\r\n        }\r\n    }\r\n    cancel() {\r\n        this.router.navigate([\"./pages/masters/AccountLedger\"]);\r\n    }\r\n    hideChildModal() {\r\n        try {\r\n            this.childModal.hide();\r\n        } catch (ex) {\r\n            //console.log(ex);\r\n            alert(ex);\r\n        }\r\n    }\r\n    \r\n}\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/pages/masters/components/account-ledger/addLedger.component.ts","import { Component, Input, Output, EventEmitter, OnInit, ViewChild } from '@angular/core';\r\nimport { AcListTree, TAcList } from \"../../../../common/interfaces/Account.interface\";\r\nimport { TreeViewAcService } from './accountLedger.service'\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { FormGroup, FormControl, FormBuilder, Validators } from '@angular/forms';\r\nimport { ModalDirective } from 'ng2-bootstrap';\r\nimport { Subscription } from \"rxjs/Subscription\";\r\nimport { MasterRepo } from \"../../../../common/repositories/masterRepo.service\";\r\n@Component(\r\n    {\r\n        selector: 'addGrpSelector',\r\n        template: require('./addsubgrps.component.html'),\r\n\r\n        providers: [TreeViewAcService],\r\n\r\n    }\r\n)\r\nexport class addGrpComponent {\r\n    majorParentAcList: any[];\r\n    ParentAcList: any[];\r\n    majorparent: any;\r\n    PARENTACNAME: string;\r\n    acListtree: AcListTree = <AcListTree>{};\r\n    ledgerAcObj: TAcList = <TAcList>{};\r\n    form: FormGroup;\r\n    private returnUrl: string;\r\n    @ViewChild('childModal') childModal: ModalDirective;\r\n    private subcriptions: Array<Subscription> = [];\r\n    DialogMessage: string = \"Saving data please wait ...\"\r\n    router: Router;\r\n    viewMode = false;\r\n    AddACGrpForm: FormGroup;\r\n    modeTitle: string = '';\r\n    initialTextReadOnly = false;\r\n\r\n\r\n    constructor(protected masterService: MasterRepo, protected AccountService: TreeViewAcService, router: Router, private _activatedRoute: ActivatedRoute, private fb: FormBuilder) {\r\n        this.router = router;\r\n        \r\n        if (!!_activatedRoute.snapshot.params['returnUrl']) {\r\n            this.returnUrl = _activatedRoute.snapshot.params['returnUrl'];\r\n\r\n        }\r\n        \r\n    }\r\n    // salesman:Salesman=<Salesman>{};\r\n    ngOnInit() {\r\nthis.AddACGrpForm = this.fb.group({\r\n            ACNAME: ['', Validators.required],\r\n            majorparent: [''],\r\n            hasSub: [''],\r\n            Ptype: ['']\r\n        });\r\n        if (this._activatedRoute.snapshot.params['SeletectedData']) {\r\n            let selectedAcid = this._activatedRoute.snapshot.params['SeletectedData'];\r\n            ////console.log(\"selectedAcid\")\r\n            this.masterService.getAllAccount(selectedAcid)\r\n                .subscribe(data => {\r\n                    if (data.status == 'ok') {\r\n                        this.AddACGrpForm.get('ACNAME').setValue(data.result.ACNAME);\r\n                        //console.log(data);\r\n                        this.mode = 'edit';\r\n                        this.initialTextReadOnly = true;\r\n\r\n\r\n                    }\r\n                }\r\n                )\r\n        }\r\n        this.masterService.getacListTree()\r\n            .subscribe(data => {\r\n                let p = data.filter(x => x.PARENTID == 'BS' || 'PL' || 'TD');\r\n                this.ParentAcList = p;\r\n                if (!!this._activatedRoute.snapshot.params['Par']) {\r\n                    this.majorparent = this._activatedRoute.snapshot.params['Par'];\r\n                    ////console.log(\"Get\");\r\n                    //console.log(this.majorparent);\r\n                    this.AddACGrpForm.controls['majorparent'].patchValue(this.majorparent);\r\n                }\r\n\r\n            });\r\n        //getting parent and majorgroup for new product group insert\r\n        if (!!this._activatedRoute.snapshot.params['SI']) {\r\n            var selectedID = this._activatedRoute.snapshot.params['SI'];\r\n            if (selectedID == \"null\") {\r\n                this.ledgerAcObj.PARENT = 'PA';\r\n                return;\r\n            }\r\n        }\r\n    }\r\n\r\n    onSave() {\r\n        if(!this.masterService.getRequestOption()){\r\n            return;\r\n          }\r\n\r\n        this.DialogMessage = \"Saving Data please wait...\"\r\n        this.childModal.show();\r\n        this.SumbitSave();\r\n    }\r\n    mode: string = \"add\";\r\n    result: any;\r\n    SumbitSave() {\r\n        try {\r\n            ////console.log(\"submit call\");\r\n\r\n            let ag = <TAcList>{}\r\n            ag.TYPE = \"G\";\r\n            ag.PARENT = this.AddACGrpForm.value.majorparent\r\n            ag.ACNAME = this.AddACGrpForm.value.ACNAME;\r\n            ag.PType = this.AddACGrpForm.value.Ptype;\r\n            ag.HASSUBLEDGER = this.AddACGrpForm.value.hasSub;\r\n            //console.log({ ag: ag });\r\n            let sub = this.masterService.saveAccount(this.mode, ag)\r\n                .subscribe(data => {\r\n                    if (data.status == 'ok') {\r\n                        //Displaying dialog message for save with timer of 1 secs\r\n                        this.DialogMessage = \"Data Saved Successfully\"\r\n                        setTimeout(() => {\r\n                            this.childModal.hide();\r\n                            this.router.navigate([this.returnUrl]);\r\n                        }, 1000)\r\n\r\n                    }\r\n                    else {\r\n                        //alert(data.result);\r\n                        //the ConnectionString in the server is not initialized means the the token 's user is not int the list of database user so it could't make connectionstring. Re authorization is requierd\r\n                        if (data.result._body == \"The ConnectionString property has not been initialized.\") {\r\n                            this.router.navigate(['/login', this.router.url])\r\n                            return;\r\n                        }\r\n                        //Some other issues need to check\r\n                        this.DialogMessage = \"Error in Saving Data:\" + data.result._body;\r\n                        //console.log(data.result._body);\r\n                        setTimeout(() => {\r\n                            this.childModal.hide();\r\n                        }, 3000)\r\n                    }\r\n                },\r\n                error => { alert(error) }\r\n                );\r\n            this.subcriptions.push(sub);\r\n        }\r\n        catch (e) {\r\n            alert(e);\r\n        }\r\n    }\r\n    cancel() {\r\n        this.router.navigate([\"./pages/masters/AccountLedger\"]);\r\n    }\r\n    hideChildModal() {\r\n        try {\r\n            this.childModal.hide();\r\n        } catch (ex) {\r\n            //console.log(ex);\r\n            alert(ex);\r\n        }\r\n    }\r\n    changehassubEvent(value) {\r\n        if (this.AddACGrpForm == null) { return; }\r\n        this.AddACGrpForm.get('hasSub').patchValue(value);\r\n    }\r\n    changePtype(value) {\r\n        this.AddACGrpForm.get('Ptype').patchValue(value);\r\n    }\r\n\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/pages/masters/components/account-ledger/addSubgrps.component.ts","import { Component, Input, Output, EventEmitter, OnInit, ViewChild } from '@angular/core';\r\nimport { TAcList, AcListTree } from \"../../../../common/interfaces/Account.interface\";\r\nimport { TreeViewPartyervice } from './partyledger.service'\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { FormGroup, FormControl, FormBuilder, Validators } from '@angular/forms';\r\nimport { Subscription } from \"rxjs/Subscription\";\r\nimport { ModalDirective } from 'ng2-bootstrap';\r\nimport { MasterRepo } from \"../../../../common/repositories/masterRepo.service\";\r\n@Component(\r\n    {\r\n        selector: 'addMajorgrpSelector',\r\n        template: require('./addMajorgrp.component.html'),\r\n        providers: [TreeViewPartyervice],\r\n\r\n    }\r\n)\r\nexport class addMajorGrpComponent {\r\n    router: Router;\r\n    ledgerAcObj: TAcList = <TAcList>{};\r\n    acListtree: AcListTree = <AcListTree>{};\r\n    private returnUrl: string;\r\n    DialogMessage: string = \"Saving Data please wait ...\"\r\n    private subcriptions: Array<Subscription> = [];\r\n    @ViewChild('childModal') childModal: ModalDirective;\r\n    Addform: FormGroup;\r\n    viewMode = true;\r\n    modeTitle:string='';\r\n    initialTextReadOnly:false;\r\n    ngOnInit() {\r\n        // try {\r\n        //     let self = this;\r\n        //     if (!!this._activatedRoute.snapshot.params['returnUrl']) {\r\n        //         this.ledgerAcObj.PARENT = 'PA';\r\n        //     }\r\n            \r\n        // } catch (ex) {\r\n        //     //console.log(ex);\r\n        //     alert(ex);\r\n        // }\r\n        // this.Addform = this._fb.group({\r\n        //     ACNAME: ['', Validators.required],\r\n        //     PType:[''],\r\n        // })\r\n\r\n    }\r\n    constructor(protected service: TreeViewPartyervice, router: Router, private _activatedRoute: ActivatedRoute, protected MasterService: MasterRepo, private _fb: FormBuilder) {\r\n        // this.router = router;\r\n        // if (!!_activatedRoute.snapshot.params['returnUrl']) {\r\n        //     this.acListtree.ACID = _activatedRoute.snapshot.params['returnUrl'];\r\n        // }\r\n\r\n    }\r\n    \r\n    cancel() {\r\n        this.router.navigate([\"./pages/masters/PartyLedger\"]);\r\n    }\r\n\r\n    onSave() {\r\n        if(!this.MasterService.getRequestOption()){\r\n            return;\r\n          }\r\n\r\n        this.DialogMessage = \"Saving Data please wait...\"\r\n        this.childModal.show();\r\n        this.SumbitSave();\r\n    }\r\n    mode: string = \"add\";\r\n    value:any;\r\n    SumbitSave() {\r\n        ////console.log(\"Submit call\")\r\n        try {\r\n            let am = <TAcList>{}\r\n            am.ACNAME = this.Addform.value.ACNAME;\r\n            am.TYPE = \"G\";\r\n            am.PARENT=\"PA\";\r\n            //console.log({ AddMajor: am });\r\n            let sub = this.MasterService.saveAccount(this.mode, am)\r\n                .subscribe(data => {\r\n                    if (data.status == 'ok') {\r\n                        this.DialogMessage = \"Data Saved Successfully\"\r\n                        setTimeout(() => {\r\n                            this.childModal.hide();\r\n\r\n                            this.router.navigate([this.returnUrl]);\r\n                        }, 1000)\r\n\r\n\r\n                    }\r\n                    else {\r\n                        //alert(data.result);\r\n                        //the ConnectionString in the server is not initialized means the the token 's user is not int the list of database user so it could't make connectionstring. Re authorization is requierd\r\n                        if (data.result._body == \"The ConnectionString property has not been initialized.\") {\r\n                            this.router.navigate(['/login', this.router.url])\r\n                            return;\r\n                        }\r\n                        //Some other issues need to check\r\n                        this.DialogMessage = \"Error in Saving Data:\" + data.result._body;\r\n                        //console.log(data.result._body);\r\n                        setTimeout(() => {\r\n                            this.childModal.hide();\r\n                        }, 3000)\r\n                    }\r\n                },\r\n                error => { alert(error) }\r\n                );\r\n            this.subcriptions.push(sub);\r\n        }\r\n        catch (e) {\r\n            alert(e);\r\n        }\r\n    }\r\n    // ptypeRadioChangeEvent(value)\r\n    // {\r\n    //    this.Addform.controls['PType'].setValue(value);\r\n\r\n    //     //console.log({value:value});\r\n    // }\r\n    hideChildModal() {\r\n        try {\r\n            this.childModal.hide();\r\n        } catch (ex) {\r\n            //console.log(ex);\r\n            alert(ex);\r\n        }\r\n    }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/pages/masters/components/party-ledger/addMajorgrp.component.ts","import { NgModule } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\r\nimport { TreeModule } from \"angular-tree-component\";\r\nimport { NgaModule } from \"../../../../theme/nga.module\";\r\nimport { Ng2SmartTableModule } from \"../../../../node_modules/ng2-smart-table/src/ng2-smart-table.module\";\r\nimport { GenericPopupGridModule } from \"../../../../common/popupLists/generic-grid/generic-popup-grid.module\";\r\nimport { PartyLedgerComponent } from \"./partyLedgerTable.component\";\r\nimport { PartyRoutingModule } from \"./addparty.routing\";\r\nimport { ContextMenuModule } from \"ngx-contextmenu\";\r\nimport { ModalModule } from \"ng2-bootstrap\";\r\nimport { addMajorGrpComponent } from \"./addMajorgrp.component\";\r\nimport { AddPartyLedgerGrpComponent } from \"./addpartygrp.component\";\r\nimport { AddPartyLedgerComponent } from \"./addpartyledger.component\";\r\nimport {SearchPipe} from './search.pipe';\r\nimport { NgxPaginationModule } from 'ngx-pagination';\r\nimport { FileUploaderPopupModule } from \"../../../../common/popupLists/file-uploader/file-uploader-popup.module\";\r\n\r\n@NgModule({\r\n  imports: [\r\n    TreeModule,\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    PartyRoutingModule,\r\n    GenericPopupGridModule.forRoot(),\r\n    NgaModule,\r\n    ContextMenuModule,\r\n    Ng2SmartTableModule,\r\n    ModalModule.forRoot(),\r\n    ContextMenuModule,\r\n    NgxPaginationModule,\r\n    FileUploaderPopupModule.forRoot()\r\n  ],\r\n  declarations: [\r\n    PartyLedgerComponent,addMajorGrpComponent,AddPartyLedgerGrpComponent,AddPartyLedgerComponent,SearchPipe\r\n\r\n  ],\r\n  exports: [\r\n    // PartyLedgerComponent\r\n  ]\r\n})\r\nexport class PartyModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/pages/masters/components/party-ledger/addparty.module.ts","import { Routes, RouterModule } from '@angular/router';\r\nimport { NgModule } from '@angular/core';\r\nimport { PartyLedgerComponent } from './partyLedgerTable.component';\r\n\r\n\r\n\r\nconst routes: Routes = [\r\n    {path: 'PartyTree', component: PartyLedgerComponent}, \r\n    \r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class PartyRoutingModule { }\r\n\r\n\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/pages/masters/components/party-ledger/addparty.routing.ts","import { Component, Input, Output, EventEmitter, OnInit, ViewChild } from '@angular/core';\r\nimport { AcListTree, TAcList } from \"../../../../common/interfaces/Account.interface\";\r\nimport { TreeViewPartyervice } from './partyledger.service'\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { FormGroup, FormControl, FormBuilder, Validators } from '@angular/forms';\r\nimport { ModalDirective } from 'ng2-bootstrap';\r\nimport { Subscription } from \"rxjs/Subscription\";\r\nimport { MasterRepo } from \"../../../../common/repositories/masterRepo.service\";\r\n@Component(\r\n    {\r\n        selector: 'addGrpSelector',\r\n        template: require('./addpartygrp.component.html'),\r\n    }\r\n)\r\nexport class AddPartyLedgerGrpComponent {\r\n    majorParentAcList: any[];\r\n    ParentAcList: any[];\r\n    majorparent: any;\r\n    PARENTACNAME: string;\r\n    acListtree: AcListTree = <AcListTree>{};\r\n    ledgerAcObj: TAcList = <TAcList>{};\r\n    form: FormGroup;\r\n    private returnUrl: string;\r\n    @ViewChild('childModal') childModal: ModalDirective;\r\n    private subcriptions: Array<Subscription> = [];\r\n    DialogMessage: string = \"Saving data please wait ...\"\r\n    router: Router;\r\n    // salesman:Salesman=<Salesman>{};\r\n    ngOnInit() {\r\n        // this.form = this.fb.group({\r\n        //     majorparent: [''],\r\n        //     ACNAME: ['', Validators.required],\r\n        //     hasSub:[''],\r\n        // })\r\n        // this.MasterService.getpartyListTree()\r\n        //     .subscribe(data => {\r\n        //         let p = data.filter(x => x.PARENTID == 'PA');\r\n        //         this.ParentAcList = p;\r\n        //         if (!!this._activatedRoute.snapshot.params['Par']) {\r\n        //             this.majorparent = this._activatedRoute.snapshot.params['Par'];\r\n        //             this.form.get('majorparent').patchValue(this.majorparent);\r\n        //             ////console.log(\"Get\");\r\n        //             //console.log(this.majorparent);\r\n        //         }\r\n\r\n        //     });\r\n\r\n        // let self = this;\r\n        // if (!!this._activatedRoute.snapshot.params['ACID']) {\r\n        //     let ACID = this._activatedRoute.snapshot.params['ACID'];\r\n        // }\r\n\r\n\r\n    }\r\n\r\n    constructor(protected MasterService: MasterRepo, router: Router, private _activatedRoute: ActivatedRoute, private fb: FormBuilder) {\r\n        // this.router = router;\r\n\r\n\r\n    }\r\n    \r\nchangehassubEvent(value)\r\n    {\r\n        if(this.form==null)return;\r\n       this.form.get('hasSub').patchValue(value);\r\n\r\n        ////console.log(\"value:\"+value);\r\n    }\r\n\r\n    onSave() {\r\n        if(!this.MasterService.getRequestOption()){\r\n            return;\r\n          }\r\n\r\n        this.DialogMessage = \"Saving Data please wait...\"\r\n        this.childModal.show();\r\n        this.SumbitSave();\r\n    }\r\n    mode: string = \"add\";\r\n    SumbitSave() {\r\n        try {\r\n            let ap = <TAcList>{}\r\n            ap.ACNAME = this.form.value.ACNAME;\r\n            ap.TYPE = \"G\";\r\n            ap.PARENT = this.form.value.majorparent;\r\n            ap.HASSUBLEDGER=this.form.value.hasSub;\r\n            //console.log({AddPartyGroup:ap})\r\n            let sub = this.MasterService.saveAccount(this.mode, ap)\r\n                .subscribe(data => {\r\n                    if (data.status == 'ok') {\r\n                        //Displaying dialog message for save with timer of 1 secs\r\n                        this.DialogMessage = \"Data Saved Successfully\"\r\n                        setTimeout(() => {\r\n                            this.childModal.hide();\r\n\r\n                            this.router.navigate([this.returnUrl]);\r\n                        }, 1000)\r\n\r\n\r\n                    }\r\n                    else {\r\n                        //alert(data.result);\r\n                        //the ConnectionString in the server is not initialized means the the token 's user is not int the list of database user so it could't make connectionstring. Re authorization is requierd\r\n                        if (data.result._body == \"The ConnectionString property has not been initialized.\") {\r\n                            this.router.navigate(['/login', this.router.url])\r\n                            return;\r\n                        }\r\n                        //Some other issues need to check\r\n                        this.DialogMessage = \"Error in Saving Data:\" + data.result._body;\r\n                        //console.log(data.result._body);\r\n                        setTimeout(() => {\r\n                            this.childModal.hide();\r\n                        }, 3000)\r\n                    }\r\n                },\r\n                error => { alert(error) }\r\n                );\r\n            this.subcriptions.push(sub);\r\n        }\r\n        catch (e) {\r\n            alert(e);\r\n        }\r\n    }\r\n    cancel() {\r\n        this.router.navigate([\"./pages/masters/PartyLedger\"]);\r\n    }\r\n    hideChildModal() {\r\n        try {\r\n            this.childModal.hide();\r\n        } catch (ex) {\r\n            //console.log(ex);\r\n            alert(ex);\r\n        }\r\n    }\r\n\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/pages/masters/components/party-ledger/addpartygrp.component.ts","import { style } from '@angular/animations';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { MdDialog } from '@angular/material';\r\nimport { MessageDialog } from './../../../modaldialogs/messageDialog/messageDialog.component';\r\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\r\nimport { SelectItem } from 'primeng/primeng';\r\n// import { GroupParty } from './partyLedger.service';\r\nimport { Component, Input, Output, EventEmitter, OnInit, ViewChild, ElementRef, HostListener, SimpleChange, SimpleChanges } from '@angular/core';\r\nimport { GroupParty, TreeViewPartyervice } from './partyledger.service'\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { FormGroup, FormControl, FormBuilder, Validators } from '@angular/forms';\r\nimport { Subscription } from \"rxjs/Subscription\";\r\nimport { ModalDirective } from 'ng2-bootstrap';\r\nimport { MasterRepo } from '../../../../common/repositories/masterRepo.service';\r\nimport { AcListTree, TAcList, PartyAdditional, SelectedDivisions, SalesTarget } from \"../../../../common/interfaces/Account.interface\";\r\nimport { AuthService } from '../../../../common/services/permission';\r\nimport { runInThisContext } from 'vm';\r\nimport { Division } from '../../../../common/interfaces';\r\nimport { AlertService } from '../../../../common/services/alert/alert.service';\r\nimport { GenericPopUpComponent, GenericPopUpSettings } from '../../../../common/popupLists/generic-grid/generic-popup-grid.component';\r\nimport { SpinnerService } from '../../../../common/services/spinner/spinner.service';\r\n\r\n@Component(\r\n    {\r\n        selector: 'addPartyLedgerSelector',\r\n        template: require('./addpartyledger.component.html'),\r\n        //  [(ngModel)]=\"PARENTACNAME\"\r\n        // [(ngModel)]=\"RootName\"\r\n        providers: [TreeViewPartyervice],\r\n        styles: [`input:disabled, select:disabled, textarea:disabled {\r\n    cursor: not-allowed !important;\r\n    color: black !important;\r\n    background-color: #EBEBE4 !important;\r\n}\r\n\r\nbutton:disabled{\r\ncursor: not-allowed !important;\r\n}`]\r\n\r\n    }\r\n)\r\nexport class AddPartyLedgerComponent {\r\n    @Output('onClose') onClose = new EventEmitter();\r\n    @Input('acid') ACID: string;\r\n    @Input('parent') Parent: string;\r\n    @Input('PARENTID') PARENTID: any;\r\n    @Input('partyParentName') partyParentName: any;\r\n    @Input() rootID: string;\r\n    @Input() Title: string = '';\r\n    @Input() mode: string;\r\n    @Input() grp: string;\r\n    @ViewChild('childModal') childModal: ModalDirective;\r\n    @Output() SavePartyEmit = new EventEmitter();\r\n    @Output() EditPartyEmit = new EventEmitter();\r\n    @ViewChild('ACNAME') acnameField: ElementRef;\r\n    @Input() parentPartyID:string;\r\n    @Input() parentIdOnEdit:string;\r\n    @Input() mainGroupID:string;\r\n    @ViewChild('DeletePar') DeletePar: ModalDirective;\r\n    @ViewChild('Duplicate') Duplicate: ModalDirective;\r\n    BankList:any[]=[];\r\n\r\n\r\n    // @Output(\"getParentNameEmit\") getParentNameEmit = new EventEmitter();\r\n\r\n    // @Output(\"getParentNameEmit\") getParentNameEmit: EventEmitter<any> = new EventEmitter();\r\n\r\n\r\n    selectednode: any;\r\n    parentid: any;\r\n    majorparent: any;\r\n    majorParentAcList: any[] = [];\r\n    acParentList: any[] = [];\r\n    PARENTACNAME: string;\r\n    RootName: string;\r\n    acListtree: AcListTree = <AcListTree>{};\r\n    ledgerAcObj: TAcList = <TAcList>{};\r\n    ledgerAcList: TAcList[];\r\n    private returnUrl: string;\r\n    router: Router;\r\n    form: FormGroup;\r\n    viewMode = false;\r\n    DialogMessage: string = \"Saving data please wait ...\"\r\n    private subcriptions: Array<Subscription> = [];\r\n    initialTextReadOnly = false;\r\n    ID: string = '';\r\n    modeTitle: string;\r\n    parentGroup: GroupParty;\r\n    acGroups: any[] = [];\r\n    dialogMessageSubject: BehaviorSubject<string> = new BehaviorSubject<string>('');\r\n    dialogMessage$: Observable<string> = this.dialogMessageSubject.asObservable();\r\n    actype: string = '';\r\n    disableActype: boolean = false;\r\n    lastParentID: string;\r\n    userProfile: any;\r\n    GeoList: any[] = [];\r\n    DistrictList: any[] = [];\r\n    areaList: any[] = [];\r\n    parentValueForEditMode: string;\r\n    division: any[] = [];\r\n    createMember: any;\r\n    showDivSelectionTable: boolean;\r\n    enableDivisionMapping: boolean;\r\n    divisionList: any[] = [];\r\n    SelectedDivisionList: SelectedDivisions[] = [];\r\n    DivListForSave: DivList[] = [];\r\n    bankObj:BankCustomerInfo = <BankCustomerInfo>{}\r\n    bankArray:BankDetails[] =[]\r\n    bank:boolean = false;\r\n    DistrictListbyState: any[] = [];\r\n    ISCUSTOMER:boolean;\r\n    PartyCat_List: any[] = [];\r\n    AdditionalBankList:AdditionalBankList[] =[];\r\n    Is_OverseasParty:number;\r\n\r\n    @ViewChild(\"genericGridBankList\") genericGridBankList: GenericPopUpComponent;\r\n  gridBankPopupSettings: GenericPopUpSettings = new GenericPopUpSettings();\r\n\r\n  @ViewChild(\"genericGridAdditionalBankList\") genericGridAdditionalBankList: GenericPopUpComponent;\r\n  gridAdditionalBankPopupSettings: GenericPopUpSettings = new GenericPopUpSettings();\r\n\r\n    @ViewChild(\"genericGridACListParty\") genericGridACListParty: GenericPopUpComponent;\r\n    gridACListPartyPopupSettings: GenericPopUpSettings = new GenericPopUpSettings();\r\n\r\n    @ViewChild(\"genericGridContract\") genericGridContract: GenericPopUpComponent;\r\n    gridPopupSettingsForContractPrice: GenericPopUpSettings = new GenericPopUpSettings();\r\n\r\n   \r\n    @ViewChild(\"genericGridSalesman\") genericGridSalesman: GenericPopUpComponent;\r\n    gridPopupSettingsForSalesmanList: GenericPopUpSettings = new GenericPopUpSettings();\r\n\r\n    constructor(protected MasterService: MasterRepo,\r\n         private PartyService: TreeViewPartyervice,\r\n         router: Router, private _activatedRoute: ActivatedRoute,\r\n        private _fb: FormBuilder, public dialog: MdDialog, \r\n        private _authService: AuthService,  \r\n        private alertSerivces: AlertService,\r\n        public spinnerservice: SpinnerService) {\r\n        this.router = router;\r\n\r\n        // this.service.getNewValues(selectL)\r\n        //     .subscribe(data => {\r\n        //         if (data.status == 'ok') {\r\n\r\n        //             this.ledgerAcObj.PARENT = data.result.parent.ACID;\r\n        //             this.PARENTACNAME = data.result.parent.ACNAME;\r\n        //             this.ledgerAcObj.PType = data.result.parent.PType;\r\n        //         }\r\n\r\n        //     }\r\n        //     , error => {\r\n        //         this.router.navigate([this.returnUrl]);\r\n        //         //console.log(error);\r\n        //     }\r\n        //     );\r\n        this.userProfile = this._authService.getUserProfile();\r\n        this.userSetting = this._authService.getSetting();\r\n        this.Is_OverseasParty=0;\r\n        ////console.log(\"userSetting\", this.userSetting)\r\n        this.PartyService.getHierachy().subscribe(res => {\r\n            if (res.status == \"ok\") {\r\n                this.GeoList = res.result.GEO;\r\n\r\n            }\r\n        });\r\n        this.MasterService.getDistrict().subscribe(res => {\r\n            if (res.status == 'ok') {\r\n                this.DistrictList = res.result;\r\n            }\r\n        })\r\n\r\n        this.MasterService.getAreaDetail().subscribe(res => {\r\n            if (res.status == 'ok') {\r\n                this.areaList = res.result;\r\n            }\r\n        })\r\n\r\n        this.division = [];\r\n        this.MasterService.getAllDivisions()\r\n            .subscribe(res => {\r\n                this.division.push(<Division>res);\r\n            }, error => {\r\n                this.MasterService.resolveError(error, \"divisions - getDivisions\");\r\n            });\r\n           \r\n    }\r\n    userSetting: any;\r\n\r\n\r\n\r\n\r\n\r\n    ngOnInit() {\r\n\r\n        this.PartyService.addGroupSubject.subscribe((res) => {\r\n            //console.log('common');\r\n        })\r\n\r\n        this.MasterService.userSetting.DIVISIONWISEACLISTING == 1 ?\r\n            this.enableDivisionMapping = true :\r\n            this.enableDivisionMapping = false;\r\n\r\n\r\n        this.form = this._fb.group({\r\n            majorparent: [''],\r\n            parentid: [''],\r\n            ACNAME: ['', Validators.required],\r\n            Ptype: [''],\r\n            MAPID: [''],\r\n            ADDRESS: ['', Validators.required],\r\n            PHONE: [''],\r\n            FAX: [''],\r\n            EMAIL: [''],\r\n\r\n            ACCODE: [''],\r\n\r\n            isNotActive: [''],\r\n\r\n            CITY: [''],\r\n            STATE: [''],\r\n            COMMON: [0],\r\n            ISACTIVE: [1],\r\n            VATNO: [''],\r\n            CRPERIOD: [0],\r\n            CRLIMIT: [0],\r\n            GEO: ['111111-1'],\r\n            CNAME: [''],\r\n            ONAME: [''],\r\n            OCONTACT: [''],\r\n            ODESIGNATION: [''],\r\n            CONTACTNAME: [''],\r\n            CCONTACT_A: [''],\r\n            CCONTACT_B: [''],\r\n            CDESIGNATION: [''],\r\n            RELATEDSPERSON_A: [''],\r\n            RELATEDSPERSON_B: [''],\r\n            NOTES: [''],\r\n            Mobile: [''],\r\n            INITIAL: [''],\r\n            IsInitialValue: [0],\r\n            createMember: [''],\r\n            DIV: [this.userProfile.userDivision],\r\n            ShareAccount: [''],\r\n            ShareSelectiveDiv: [''],\r\n            ShareAllDiv: [''],\r\n            enableDivSelectionTable: [0],\r\n            cusName:[''],\r\n            ISCOMMONAC : [0],\r\n            BANKACCOUNTNUMBER: [''],\r\n            BANKCODE:[''],\r\n            BANKNAME:[''],\r\n            ISBRANCH: [''],\r\n            BAISHAKH: [0],\r\n            JESTHA: [0],\r\n            ASHAD: [0],\r\n            SHARWAN: [0],\r\n            BHADRA: [0],\r\n            ASHWIN: [0],\r\n            KARTIK: [0],\r\n            MANGSHIR: [0],\r\n            PAUSH: [0],\r\n            MAGH: [0],\r\n            FALGUN: [0],\r\n            CHAITRA: [0],\r\n            TARGET_AMOUNT: [0],\r\n            DISTRICT: [''],\r\n            ADDITIONALBANKACCOUNTNUMBER: [''],\r\n            ADDITIONALBANKCODE:[''],\r\n            ADDITIONALBANKNAME:[''],\r\n            PCompany:[''],\r\n            PCompanyName:[''],\r\n            IS_OVERSEAS_PARTY: [0],\r\n            SALESMANID: [''],\r\n            SALESMAN:[''],\r\n        })\r\n        if(this.userSetting.Country == 1){\r\n            this.form.get('GEO').setValue('');\r\n        }\r\n        this.form.get('ShareAllDiv').disable();\r\n        this.form.get('ShareSelectiveDiv').disable();\r\n\r\n\r\n        if(this.mode == \"add\"){\r\n            this.getPartyList(this.ACID);\r\n\r\n        }\r\n\r\n\r\n\r\n        if (this.userSetting.AUTOSUPCODE == 1) {\r\n            this.disableACCodeIfAutoSuponeisOne();\r\n        }\r\n\r\n        this.CheckCompanyAndValidate();\r\n        this.getGroups();\r\n        //console.log(\"ACID on ad party\", this.ACID);\r\n\r\n        if(this.ACID == 'PAG01'){\r\n            this.form.get('Ptype').setValue('V');\r\n            this.ISCUSTOMER=false;\r\n            if(this.userSetting.Country == 1){\r\n                if(this.mode == \"add\"){\r\n                this.PartyService.getHierachy().subscribe(res => {\r\n                    if (res.status == \"ok\") {\r\n                        this.GeoList = res.result.GEO;\r\n                        this.PartyCat_List =  this.GeoList.filter(x=>x.PTYPE == 'V');\r\n                            this.form.get('GEO').setValue('111111-1');\r\n                    }\r\n                });\r\n            }\r\n            }\r\n        }else{\r\n            this.form.get('Ptype').setValue('C');\r\n            this.ISCUSTOMER=true;\r\n            if(this.userSetting.Country == 1){\r\n                if(this.mode == \"add\"){\r\n                this.PartyService.getHierachy().subscribe(res => {\r\n                    if (res.status == \"ok\") {\r\n                        this.GeoList = res.result.GEO;\r\n                        this.PartyCat_List =  this.GeoList.filter(x=>x.PTYPE == 'C');\r\n                            this.form.get('GEO').setValue('123456-7');\r\n                    }\r\n                });\r\n            }\r\n            }\r\n        }\r\n\r\n        if (this.userSetting.CREATE_CPROFILE_AS_MEMBER == 1 && this.form.value.Ptype == 'C') {\r\n            this.form.get('createMember').setValue(false);\r\n        }\r\n        // this.MasterService.getAllAccount().subscribe(res => { this.ledgerAcList.push(<TAcList>res); });\r\n        this.MasterService.getpartyListTree()\r\n            .subscribe(data => {\r\n                let l = data.filter(x => x.PARENTID == 'PAG');\r\n                this.majorParentAcList = l;\r\n                if (!!this._activatedRoute.snapshot.params['Par']) {\r\n                    this.majorparent = this._activatedRoute.snapshot.params['Par'];\r\n                    this.form.get('majorparent').setValue(this.majorparent);\r\n                    this.majorgroupChange();\r\n                }\r\n\r\n                if (this.mode == 'edit' || this.mode == 'view') {\r\n                    this.mode == 'edit' ? this.modeTitle = \"Edit Party A/C\" : this.modeTitle = \"View Party Ledger\"\r\n                    this.getParentName(this.mode);\r\n                    this.MasterService.getAllAccount(this.ACID)\r\n                        .subscribe(data => {\r\n                            if (data.status == 'ok') {\r\n                                this.parentValueForEditMode = data.result.PARENT;\r\n                                this.form.get('ACNAME').setValue(data.result.ACNAME);\r\n                                this.form.get('ADDRESS').setValue(data.result.ADDRESS);\r\n                                this.form.get('PHONE').setValue(data.result.PHONE);\r\n                                this.form.get('FAX').setValue(data.result.FAX);\r\n                                this.form.get('EMAIL').setValue(data.result.EMAIL);\r\n                                this.form.get('VATNO').setValue(data.result.VATNO);\r\n                                this.form.get('ACCODE').setValue(data.result.ACCODE);\r\n                                this.form.get('CRLIMIT').setValue(data.result.CRLIMIT);\r\n                                this.form.get('Ptype').setValue(data.result.PType);\r\n                                this.form.get(\"SALESMANID\").setValue(data.result.SALESMANID);\r\n                                this.form.get(\"SALESMAN\").setValue(data.result.SALESMAN);\r\n                                if(data.result.PType=='C'){\r\n                                    this.ISCUSTOMER=true;\r\n                                    if(this.userSetting.Country == 1){\r\n                                        this.PartyCat_List =  this.GeoList.filter(x=>x.PTYPE == 'C')\r\n                                    }\r\n                                }else{\r\n                                    this.ISCUSTOMER=false;\r\n                                    if(this.userSetting.Country == 1){\r\n                                        this.PartyCat_List =  this.GeoList.filter(x=>x.PTYPE == 'V')\r\n                                    }\r\n                                }\r\n                                this.form.get('Mobile').setValue(data.result.MOBILE);\r\n                                this.form.get('GEO').setValue(data.result.GEO);\r\n                                this.form.get('COMMON').setValue(data.result.COMMON);\r\n                                this.form.get('CITY').setValue(data.result.CITY);\r\n                                this.form.get('ISBRANCH').setValue(data.result.ISBRANCH);\r\n\r\n                                this.form.get('CRPERIOD').setValue(data.result.CRPERIOD);\r\n                                this.form.get('STATE').setValue(data.result.STATE);\r\n                                this.form.get('ISACTIVE').setValue(data.result.ISACTIVE);\r\n                                this.form.get('DIV').setValue(data.result.DIV);\r\n                                this.form.get('ISCOMMONAC').setValue(data.result.ISCOMMONAC);\r\n                                this.form.get('BANKNAME').setValue(data.result.BANKNAME);\r\n                                this.form.get('BANKCODE').setValue(data.result.BANKCODE);\r\n                                this.form.get('BANKACCOUNTNUMBER').setValue(data.result.BANKACCOUNTNUMBER);\r\n                                this.displayDistrictOnEdit(data.result.STATE);\r\n                                this.form.get('DISTRICT').setValue(data.result.DISTRICT);\r\n                                this.form.get('IS_OVERSEAS_PARTY').patchValue(data.result.IS_OVERSEAS_PARTY);\r\n                                this.Is_OverseasParty=data.result.IS_OVERSEAS_PARTY;\r\n                                if(this.userSetting.ENABLEPARENTCOMPANY == 1){\r\n                                this.form.get('PCompany').setValue(data.result.PCompany);\r\n                                this.form.get('PCompanyName').setValue(data.result.PCompanyName);\r\n                                this.form.get(\"SALESMANID\").setValue(data.result.SALESMANID);\r\n                                this.form.get(\"SALESMAN\").setValue(data.result.SALESMAN);\r\n                                }\r\n\r\n\r\n                                if(data.result2 && data.result2!=null){\r\n                                    this.form.get('CNAME').setValue(data.result2.CNAME);\r\n                                    this.form.get('ONAME').setValue(data.result2.ONAME);\r\n                                    this.form.get('OCONTACT').setValue(data.result2.OCONTACT);\r\n                                    this.form.get('ODESIGNATION').setValue(data.result2.ODESIGNATION);\r\n                                    this.form.get('CONTACTNAME').setValue(data.result2.CONTACTNAME);\r\n                                    this.form.get('CCONTACT_A').setValue(data.result2.CCONTACT_A);\r\n                                    this.form.get('CCONTACT_B').setValue(data.result2.CCONTACT_B);\r\n                                    this.form.get('CDESIGNATION').setValue(data.result2.CDESIGNATION);\r\n                                    this.form.get('RELATEDSPERSON_A').setValue(data.result2.RELATEDSPERSON_A);\r\n                                    this.form.get('RELATEDSPERSON_B').setValue(data.result2.RELATEDSPERSON_B);\r\n                                    this.form.get('NOTES').setValue(data.result2.NOTES);\r\n                                }\r\n                                this.form.get('NOTES').setValue(data.result.ISCOMMONAC);                       \r\n                                this.form.get('INITIAL').setValue(data.result.INITIAL);\r\n                                if (data.result.INITIAL == null || data.result.INITIAL == \"\") {\r\n                                    this.form.get('IsInitialValue').setValue(0);\r\n                                    this.form.get('INITIAL').disable();\r\n                                } else {\r\n                                    this.form.get('IsInitialValue').setValue(1);\r\n                                    this.form.get('INITIAL').enable();\r\n                                }\r\n                                if(data.result.CTYPE == 'Member Also'){\r\n                                    this.form.get('createMember').setValue(1);\r\n                                }\r\n                                else{\r\n                                    this.form.get('createMember').setValue(0);\r\n                                }\r\n                                if(data.result3.length >0){\r\n                                    this.form.get('ShareAccount').setValue(1);\r\n                                    this.enableShareOptions(1);\r\n                                    if(this.division.length == data.result3.length){\r\n                                        this.form.get('ShareAllDiv').setValue('2');\r\n                                        this.enableDivSelectionTable(2);\r\n                                    }else{\r\n                                        this.form.get('ShareSelectiveDiv').setValue('1');\r\n                                        this.enableDivSelectionTable(1);\r\n                                    }\r\n                                    this.changeDivision(this.MasterService.userProfile.CompanyInfo.INITIAL);\r\n                                    this.division.forEach(x => {\r\n                                        data.result3.forEach(div=>{\r\n                                        x.INITIAL == div.DIV ? x.isCheck = true : '';\r\n                                        })\r\n                                    })                                                                 \r\n                                }\r\n                                if(data.result4 && data.result4!=null){\r\n                                    this.form.get('BAISHAKH').setValue(data.result4.BAISHAKH);\r\n                                    this.form.get('JESTHA').setValue(data.result4.JESTHA);\r\n                                    this.form.get('ASHAD').setValue(data.result4.ASHAD);\r\n                                    this.form.get('SHARWAN').setValue(data.result4.SHARWAN);\r\n                                    this.form.get('BHADRA').setValue(data.result4.BHADRA);\r\n                                    this.form.get('ASHWIN').setValue(data.result4.ASHWIN);\r\n                                    this.form.get('KARTIK').setValue(data.result4.KARTIK);\r\n                                    this.form.get('MANGSHIR').setValue(data.result4.MANGSHIR);\r\n                                    this.form.get('PAUSH').setValue(data.result4.PAUSH);\r\n                                    this.form.get('MAGH').setValue(data.result4.MAGH);\r\n                                    this.form.get('FALGUN').setValue(data.result4.FALGUN);\r\n                                    this.form.get('CHAITRA').setValue(data.result4.CHAITRA);\r\n                                    this.form.get('TARGET_AMOUNT').setValue(data.result4.TARGET_AMOUNT);\r\n                                }\r\n\r\n                                if(data.result5.length >0){\r\n                                    this.AdditionalBankList=data.result5;   \r\n                                    if (data.result.BANKNAME && data.result.BANKACCOUNTNUMBER && data.result.BANKCODE) {\r\n                                        let index = data.result5.length && data.result5.findIndex(x=>x.BANKCODE==data.result.BANKCODE);\r\n                                        this.AdditionalBankList.splice(index,1);\r\n                                    }        \r\n                                }\r\n                            }\r\n\r\n                        },\r\n\r\n                        );\r\n                }\r\n\r\n            });\r\n\r\n            if(this.mode == 'edit' || this.mode == 'view'){\r\n                //console.log(\"edit mode\", this.parentIdOnEdit);\r\n                this.getPartyList(this.parentIdOnEdit);\r\n            }\r\n\r\n        if (this.mode == 'view') {\r\n            this.form.get('ACNAME').disable();\r\n            this.form.get('ADDRESS').disable();\r\n            this.form.get('PHONE').disable();\r\n            this.form.get('FAX').disable();\r\n            this.form.get('EMAIL').disable();\r\n            this.form.get('VATNO').disable();\r\n            this.form.get('ACCODE').disable();\r\n            this.form.get('CRLIMIT').disable();\r\n            this.form.get('Ptype').disable();\r\n\r\n            this.form.get('Mobile').disable();\r\n            this.form.get('CITY').disable();\r\n            this.form.get('CRPERIOD').disable();\r\n            this.form.get('STATE').disable();\r\n            this.form.get('ISACTIVE').disable();\r\n            this.form.get('CNAME').disable();\r\n            this.form.get('ONAME').disable();\r\n            this.form.get('OCONTACT').disable();\r\n            this.form.get('GEO').disable();\r\n            this.form.get('ODESIGNATION').disable();\r\n            this.form.get('CONTACTNAME').disable();\r\n            this.form.get('CCONTACT_A').disable();\r\n            this.form.get('CCONTACT_B').disable();\r\n            this.form.get('CDESIGNATION').disable();\r\n            this.form.get('RELATEDSPERSON_A').disable();\r\n            this.form.get('RELATEDSPERSON_B').disable();\r\n            this.form.get('NOTES').disable();\r\n            this.form.get('COMMON').disable();\r\n            this.form.get('INITIAL').disable();\r\n            this.form.get('IsInitialValue').disable();\r\n            this.form.get('ISBRANCH').disable();\r\n            this.form.get('BANKNAME').disable();\r\n            this.form.get('BANKACCOUNTNUMBER').disable();\r\n            this.form.get('DISTRICT').disable();\r\n\r\n            this.form.get('BAISHAKH').disable();\r\n            this.form.get('JESTHA').disable();\r\n            this.form.get('ASHAD').disable();\r\n            this.form.get('SHARWAN').disable();\r\n            this.form.get('BHADRA').disable();\r\n            this.form.get('ASHWIN').disable();\r\n            this.form.get('KARTIK').disable();\r\n            this.form.get('MANGSHIR').disable();\r\n            this.form.get('PAUSH').disable();\r\n            this.form.get('MAGH').disable();\r\n            this.form.get('FALGUN').disable();\r\n            this.form.get('CHAITRA').disable();\r\n            this.form.get('TARGET_AMOUNT').disable();\r\n\r\n            this.form.get('ADDITIONALBANKNAME').disable();\r\n            this.form.get('ADDITIONALBANKACCOUNTNUMBER').disable();\r\n            this.form.get('PCompanyName').disable();\r\n            this.form.get('IS_OVERSEAS_PARTY').disable();\r\n\r\n            this.form.get(\"SALESMAN\").disable();\r\n            this.form.get(\"SALESMANID\").disable();\r\n        }\r\n\r\n        ////console.log(\"parentname\", this.Parent)\r\n\r\n\r\n        if (this.Title == \"AddLedger\") {\r\n            this.modeTitle = \"Add New Party A/C\";\r\n        }\r\n        else if (this.Title == \"AddGroup\") {\r\n            this.modeTitle = \"Add New Party Group\";\r\n        }\r\n\r\n        if (this.mode == 'edit') {\r\n            this.modeTitle = \"Edit Party A/C\";\r\n        }\r\n\r\n        if (this.mode == 'view') {\r\n            this.modeTitle = \"View Party A/C\";\r\n        }\r\n        \r\n\r\n    }\r\n\r\n    contractPricePopup(){\r\n        this.getContractPriceList();\r\n        this.genericGridContract.show();\r\n    }\r\n    getContractPriceList(){\r\n        this.gridPopupSettingsForContractPrice = {\r\n          title: \"Contract Price List\",\r\n          apiEndpoints: `/getContractPricePagedList`,\r\n          defaultFilterIndex: 0,\r\n        //   useDefinefilterValue: null,\r\n          columns: [\r\n            {\r\n              key: \"CMID\",\r\n              title: \"Price ID\",\r\n              hidden: false,\r\n              noSearch: false\r\n            },\r\n            {\r\n              key: \"PRICENAME\",\r\n              title: \"Price Name\",\r\n              hidden: false,\r\n              noSearch: false\r\n            }\r\n        \r\n          ]\r\n        }\r\n      }\r\n\r\n      onSalesmanEnter(event: Event){\r\n        this.getSalesmanList();\r\n        this.genericGridSalesman.show();\r\n      }\r\n\r\n      getSalesmanList(){\r\n        this.gridPopupSettingsForSalesmanList = {\r\n            title: \"Salesman List\",\r\n            apiEndpoints: `/getSalesmanPagedList`,\r\n            defaultFilterIndex: 0,\r\n            // useDefinefilterValue: null,\r\n            columns: [\r\n              {\r\n                key: \"SALESMANID\",\r\n                title: \"SALESMAN ID\",\r\n                hidden: false,\r\n                noSearch: false\r\n              },\r\n              {\r\n                key: \"NAME\",\r\n                title: \"NAME\",\r\n                hidden: false,\r\n                noSearch: false\r\n              },\r\n              {\r\n                key: \"TELNO\",\r\n                title: \"MOBILE\",\r\n                hidden: false,\r\n                noSearch: false\r\n              }\r\n            ]\r\n          }\r\n      }\r\n\r\n      onSalesmanSelect(value: any){\r\n        console.log(\"salesman details\", value);\r\n        this.form.get('SALESMAN').setValue(value.NAME);\r\n        this.form.get('SALESMANID').setValue(value.SALESMANID);\r\n        this.form.updateValueAndValidity();\r\n      }\r\n\r\n    ngOnChanges(changes:SimpleChanges) {\r\n                //console.log(\"on party change\", this.parentPartyID)\r\n        if(!this.form){\r\n            this.resetForm();\r\n        }\r\n\r\n        if(changes.ACID){\r\n            //console.log(\"from tree\", this.ACID)\r\n            this.getParentName(this.mode);\r\n        }\r\n\r\n        if(changes.parentPartyID){\r\n            if(this.parentPartyID != undefined && this.parentPartyID != \"\"){\r\n                //console.log(\"group changed\", this.parentPartyID);\r\n                if(this.mode == 'add'){\r\n                this.ACID = this.parentPartyID;\r\n                }\r\n                this.MasterService.SelectedGroup = this.parentPartyID;\r\n                this.getParentNameInGroupSelect( this.parentPartyID,\"add\");\r\n            }\r\n            \r\n        }\r\n\r\n        if(changes.mainGroupID){\r\n            //console.log(\"main group changed\", this.mainGroupID);\r\n            if(this.mainGroupID != undefined && this.mainGroupID != \"\"){\r\n                if(this.parentPartyID == 'PAG01'){\r\n                    if(this.form){\r\n                    this.form.get('Ptype').setValue('V');\r\n                    }\r\n                    this.ISCUSTOMER = false;\r\n                    if(this.userSetting.Country == 1){\r\n                        this.PartyCat_List =  this.GeoList.filter(x=>x.PTYPE == 'V')\r\n                    }\r\n                }else{\r\n                    if(this.form){\r\n                    this.form.get('Ptype').setValue('C');\r\n                    }\r\n                    this.ISCUSTOMER = true;\r\n                    if(this.userSetting.Country == 1){\r\n                        this.PartyCat_List =  this.GeoList.filter(x=>x.PTYPE == 'C')\r\n                    }\r\n                }\r\n            }\r\n              \r\n        }\r\n    }\r\n\r\n\r\n    ngAfterViewInit() {\r\n        this.acnameField.nativeElement.focus();\r\n    }\r\n\r\n    getParentName(mode) {\r\n\r\n        this.MasterService.getParentNamebyID(this.ACID, mode).subscribe(\r\n            (res) => {\r\n                ////console.log(\"result1231231231312\", res);\r\n                var parentName = res[0];\r\n                if(this.form){\r\n                this.form.get('parentid').setValue(parentName.ACNAME);\r\n                this.form.get('parentid').disable();\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    getParentNameInGroupSelect(PARENTACID,mode){\r\n        this.MasterService.getParentNamebyID(PARENTACID,mode).subscribe(\r\n            (res) =>{\r\n                var parentName = res[0];\r\n                if(this.form){\r\n                this.form.get('parentid').setValue(parentName.ACNAME);\r\n                this.form.get('parentid').disable();\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    disableACCodeIfAutoSuponeisOne() {\r\n        //console.log('disable')\r\n        this.form.get('ACCODE').disable();\r\n    }\r\n    validationRequired: true;\r\n    CheckCompanyAndValidate() {\r\n\r\n        if (this.userSetting.CompanyType == \"B2B\") {\r\n            this.form.get('VATNO').setValidators([Validators.required]);\r\n            this.form.get('VATNO').updateValueAndValidity;\r\n            // this.form.get('ACCODE').setValidators([Validators.required]);\r\n            // this.form.get('ACCODE').updateValueAndValidity;\r\n            this.form.get('CRPERIOD').setValidators([Validators.required]);\r\n            this.form.get('CRPERIOD').updateValueAndValidity;\r\n            this.form.get('CRLIMIT').setValidators([Validators.required]);\r\n            this.form.get('CRLIMIT').updateValueAndValidity;\r\n            this.form.get('GEO').setValidators([Validators.required]);\r\n            this.form.get('GEO').updateValueAndValidity;\r\n        }\r\n        if (this.userSetting.CompanyType == \"B2C\") {\r\n            this.form.get('ACCODE').clearValidators\r\n            this.form.get('ACCODE').updateValueAndValidity;\r\n            this.form.get('VATNO').clearValidators;\r\n            this.form.get('VATNO').updateValueAndValidity;\r\n            this.form.get('CRPERIOD').clearValidators;\r\n            this.form.get('CRPERIOD').updateValueAndValidity;\r\n            this.form.get('CRLIMIT').clearValidators;\r\n            this.form.get('CRLIMIT').updateValueAndValidity;\r\n            this.form.get('GEO').clearValidators;\r\n            this.form.get('GEO').updateValueAndValidity;\r\n        }\r\n    }\r\n    majorgroupChange() {\r\n        this.filter(this.form.get('majorparent').value);\r\n\r\n\r\n    }\r\n\r\n    filter(majorparent) {\r\n        this.MasterService.getpartyListTree().subscribe(data => {\r\n            var f = data.filter(x => x.ACID == majorparent)[0];\r\n            if (f != null) { this.acParentList = f.children; }\r\n        });\r\n    }\r\n    SumbitSave() {\r\n        if(!this.MasterService.getRequestOption()){\r\n            return;\r\n          }\r\n        if (this.MasterService.validateMasterCreation(\"save\") == false) {\r\n            return;\r\n        }\r\n\r\n        // this.ISCUSTOMER=false;\r\n        // console.log(\"@@value\",  this.ISCUSTOMER);\r\n        \r\n        if((this.ACID == null || this.ACID == undefined) && ( this.form.controls.parentid.value == \"\" || this.form.controls.parentid.value == null || this.form.controls.parentid.value == undefined)){\r\n            this.alertSerivces.warning(\"Please select parent group before save!\");\r\n            return;\r\n\r\n        }\r\n\r\n        if(this.form.value.IsInitialValue == true && this.userSetting.ENABLEINTERCOMPANYPARTY ==1){\r\n            if(this.form.value.INITIAL.length > 3 || this.form.value.INITIAL.length < 3){\r\n                alert(\"Inter Company ID should be 3 characters only!\")\r\n                return\r\n            }\r\n        }\r\n        else{\r\n            this.form.value.INITIAL = '';\r\n        }\r\n        console.log(\"w\",this.form.value.ACCODE)\r\n        if(this.MasterService.userSetting.AUTOSUPCODE ==0 && this.form.value.ACCODE==\"\"){\r\n            this.alertSerivces.warning(\"Accode is mandatory\");\r\n            return;\r\n        }\r\n        //console.log(\"BANKACCOUNTNUMBER\",this.form.value.BANKNAME,this.form.value.BANKACCOUNTNUMBER)\r\n        if (this.form.value.BANKNAME) {\r\n            if (this.form.value.BANKACCOUNTNUMBER == \"\" || this.form.value.BANKACCOUNTNUMBER === null || this.form.value.BANKACCOUNTNUMBER === undefined) {\r\n                this.alertSerivces.info(\"Please Enter Bank Account Number.\");\r\n                return;\r\n            }\r\n\r\n            let additionalbankdetailsObj:AdditionalBankList=<AdditionalBankList>{};\r\n            additionalbankdetailsObj.BANKCODE = this.form.value.BANKCODE;\r\n            additionalbankdetailsObj.BANKNAME = this.form.value.BANKNAME;\r\n            additionalbankdetailsObj.BANKACCOUNTNUMBER = this.form.value.BANKACCOUNTNUMBER;\r\n            this.AdditionalBankList.push(additionalbankdetailsObj);\r\n        }\r\n        \r\n        this.dialogMessageSubject.next(\"Saving Data please wait...\");\r\n        var dialogRef = this.dialog.open(MessageDialog, { hasBackdrop: true, data: { header: 'Information', message: this.dialogMessage$ } })\r\n        if (this.form.value.VATNO) {\r\n            //console.log({ billtotel: parseFloat(this.form.value.VATNO) })\r\n            var pno = parseFloat(this.form.value.VATNO);\r\n            if(this.userSetting.isOverSeas == 0 || this.Is_OverseasParty==0)\r\n            {\r\n            if (pno.toString().length != 9) {\r\n                alert(\"VAT No is not correct\");\r\n                dialogRef.close(); \r\n                return;\r\n            }\r\n        }\r\n        }\r\n        try {\r\n            // if (!this.parentGroup) throw new Error(\"Parent is missing\");\r\n\r\n            let al = <TAcList>{};\r\n            let partyAdditionalInfo = <PartyAdditional>{};\r\n            let SalesTargetData = <SalesTarget>{};\r\n            if (this.Title == 'AddLedger' || this.mode == 'edit' && this.grp == 'A') {\r\n                al.TYPE = \"A\"\r\n                al.CRLIMIT = this.form.value.CRLIMIT;\r\n            }\r\n            else {\r\n                al.CRLIMIT = 0;\r\n                al.TYPE = \"G\"\r\n            }\r\n            if (this.mode != 'edit') {\r\n                al.PARENT = this.ACID;\r\n\r\n            }\r\n            al.ACNAME = this.form.value.ACNAME?this.form.value.ACNAME.trim():this.form.value.ACNAME,\r\n\r\n\r\n                al.MAPID = \"N\",\r\n                al.ADDRESS = this.form.value.ADDRESS,\r\n                al.PHONE = this.form.value.PHONE,\r\n                al.FAX = this.form.value.FAX,\r\n                al.EMAIL = this.form.value.EMAIL,\r\n                al.VATNO = this.form.value.VATNO,\r\n\r\n                al.ACCODE = this.form.value.ACCODE,\r\n                al.PType = this.form.value.Ptype,\r\n                al.ISACTIVE = this.form.value.isNotActive;\r\n            al.ACID = this.ACID;\r\n            al.BANKACCOUNTNUMBER = this.form.value.BANKACCOUNTNUMBER;\r\n            al.BANKNAME = this.form.value.BANKNAME;\r\n            al.BANKCODE = this.form.value.BANKCODE;\r\n            al.DIV = this.ChangedDiv;\r\n            if (al.DIV == '' || al.DIV == null) {\r\n                al.DIV = this.userProfile.userDivision;\r\n            }\r\n\r\n            if (this.mode == 'edit') {\r\n                //console.log(\"in EDIT MODE, acid\", this.ACID,\"parent\",this.parentValueForEditMode )\r\n                al.ACID = this.ACID;\r\n                al.PARENT = this.parentValueForEditMode;\r\n                //console.log({ ACID: al.ACID });\r\n                //console.log({ ID: this.ID });\r\n            }\r\n            if (this.form.value.ShareAccount) {\r\n                al.ISCOMMONAC = 1;\r\n            } else {\r\n                al.ISCOMMONAC = 0;\r\n            }\r\n            al.CITY = this.form.value.CITY;\r\n            al.STATE = this.form.value.STATE;\r\n            al.COMMON = this.form.value.COMMON;\r\n            al.ISACTIVE = this.form.value.ISACTIVE;\r\n            al.GEO = this.form.value.GEO;\r\n            al.CRPERIOD = this.form.value.CRPERIOD;\r\n            al.MOBILE = this.form.value.Mobile;\r\n            al.CATEGORY = this.form.value.GEO;\r\n            al.ISCOMMONAC = this.form.value.ISCOMMONAC;\r\n            al.ISBRANCH = this.form.value.ISBRANCH;\r\n            al.DISTRICT = this.form.value.DISTRICT;\r\n            this.form.value.createMember == 1?al.CTYPE = 'Member Also' :  al.CTYPE = \"\";\r\n            al.IS_OVERSEAS_PARTY = this.form.value.IS_OVERSEAS_PARTY;\r\n               \r\n            \r\n            if (al.CITY != null) {\r\n                let checkAreaID = this.areaList.filter(x => x.AREANAME.toUpperCase() == this.form.value.CITY.toUpperCase());\r\n                // ////console.log(\"@@checkAreaID\",checkAreaID);\r\n                al.AREA_ID = checkAreaID[0] ? checkAreaID[0].AREAID : null;\r\n            }\r\n            al.INITIAL = this.form.value.INITIAL;\r\n            // al.ISCOMMONAC = this.form.value.Sha\r\n            al.PCL = 'pc002';\r\n            al.PCompany=this.form.value.PCompany;\r\n            al.PCompanyName=this.form.value.PCompanyName;\r\n\r\n\r\n            // al.COMMON = this.form.value.common;\r\n            partyAdditionalInfo.CNAME = this.form.value.CNAME;\r\n            partyAdditionalInfo.ONAME = this.form.value.ONAME;\r\n            partyAdditionalInfo.OCONTACT = this.form.value.OCONTACT;\r\n            partyAdditionalInfo.ODESIGNATION = this.form.value.ODESIGNATION;\r\n            partyAdditionalInfo.CONTACTNAME = this.form.value.CONTACTNAME;\r\n            partyAdditionalInfo.CCONTACT_A = this.form.value.CCONTACT_A;\r\n            partyAdditionalInfo.CCONTACT_B = this.form.value.CCONTACT_B;\r\n            partyAdditionalInfo.CDESIGNATION = this.form.value.CDESIGNATION;\r\n            partyAdditionalInfo.RELATEDSPERSON_A = this.form.value.RELATEDSPERSON_A;\r\n            partyAdditionalInfo.RELATEDSPERSON_B = this.form.value.RELATEDSPERSON_B;\r\n            partyAdditionalInfo.NOTES = this.form.value.NOTES;\r\n\r\n            SalesTargetData.BAISHAKH= this.form.value.BAISHAKH;\r\n            SalesTargetData.JESTHA= this.form.value.JESTHA;\r\n            SalesTargetData.ASHAD= this.form.value.ASHAD;\r\n            SalesTargetData.SHARWAN= this.form.value.SHARWAN;\r\n            SalesTargetData.BHADRA= this.form.value.BHADRA;\r\n            SalesTargetData.ASHWIN= this.form.value.ASHWIN;\r\n            SalesTargetData.KARTIK= this.form.value.KARTIK;\r\n            SalesTargetData.MANGSHIR= this.form.value.MANGSHIR;\r\n            SalesTargetData.PAUSH= this.form.value.PAUSH;\r\n            SalesTargetData.MAGH= this.form.value.MAGH;\r\n            SalesTargetData.FALGUN= this.form.value.FALGUN;\r\n            SalesTargetData.CHAITRA= this.form.value.CHAITRA;\r\n            SalesTargetData.TARGET_AMOUNT= this.form.value.TARGET_AMOUNT;\r\n\r\n            let AdditionalBankObj : AdditionalBankObj=<AdditionalBankObj>{};\r\n            AdditionalBankObj.AdditionalBankList = this.AdditionalBankList;\r\n\r\n            // //console.log('saveValue',al)\r\n            this.createMember = this.form.value.createMember;\r\n            // this.selectedSharedDiv = thi\r\n            // ////console.log(\"@@createMember\",this.createMember)\r\n            if (this.Title == \"AddGroup\") {\r\n                this.createMember = false;\r\n            }\r\n            if (al.PType == 'V'  && al.VATNO == '' && this.grp == 'A' && (this.Is_OverseasParty == 0 && this.userSetting.VATNOTCOMPULSORY==1)) {\r\n                console.log(al.PType, this.Is_OverseasParty, this.grp);\r\n               \r\n                    alert(\"Please Enter VATNO First!\")\r\n                    dialogRef.close();\r\n                    return;\r\n                \r\n            }\r\n            if (al.PType == 'V') {\r\n                this.createMember = false;\r\n            }\r\n            if(this.userSetting.Country == 1){\r\n\r\n\r\n                if (al.PType == 'V' && al.VATNO == '' && this.grp == 'A' && (this.Is_OverseasParty == 0 && this.userSetting.VATNOTCOMPULSORY==0)) {\r\n                    console.log(al.PType, this.grp, this.Is_OverseasParty, this.userSetting.VATNOTCOMPULSORY);\r\n                alert(\"Please Enter VATNO First!\");\r\n                dialogRef.close();\r\n                return;\r\n            }\r\n            }\r\n            if (this.userSetting.CREATE_CPROFILE_AS_MEMBER == 1 && this.createMember == true && al.PType == 'C') {\r\n                if (al.MOBILE == '' || al.MOBILE == null || al.MOBILE === undefined) {\r\n                    alert(\"Please Enter Mobile No. First!\");\r\n                    dialogRef.close();\r\n                    return;\r\n                }\r\n            }\r\n\r\n            if (!(al.MOBILE == '' || al.MOBILE == null || al.MOBILE === undefined)) {\r\n                if (al.MOBILE.length != 10) {\r\n                    alert(\"Mobile No. should be ten digit length!\");\r\n                    dialogRef.close();\r\n                    return;\r\n                }\r\n            }\r\n\r\n            if(this.userSetting.ENABLESALES_TARGET == 1 && this.ISCUSTOMER==true && this.form.value.Ptype == 'C' && this.grp == 'A'){\r\n                if(this.calculateMonthBalance() == false){\r\n                    dialogRef.close();\r\n                    return;\r\n                }\r\n\r\n                if(this.calculateTotalMonthBalance() == false){\r\n                    dialogRef.close();\r\n                    return;\r\n                }\r\n            }\r\n\r\n            if (this.userSetting.ENABLEPARENTCOMPANY == 1) {\r\n                if(this.form.value.PCompany === \"\" || this.form.value.PCompany === null || this.form.value.PCompany === undefined){\r\n                    dialogRef.close();\r\n                    this.alertSerivces.info(\"Please select parent company!!\");\r\n                    return;\r\n                }\r\n            }\r\n\r\n            al.enableDivSelectionTable=this.showDivSelectionTable;\r\n\r\n            let divisionObj = <SelectedDivisions>{};\r\n            divisionObj.DIV = this.form.value.MultipleDivision;\r\n\r\n            let DObj : DObj=<DObj>{};\r\n            if (this.showDivSelectionTable == true) {\r\n                al.ISCOMMONAC = 0;\r\n                this.DivListForSave = [];\r\n             for(let i of this.division){\r\n                 ////console.log(\"@@division\",this.division)\r\n                if(i.isCheck==true){\r\n                  let dObj:DivList=<DivList>{};\r\n                  dObj.ACID = i.ACID;\r\n                  dObj.DIV = i.INITIAL;\r\n                  this.DivListForSave.push(dObj);\r\n                }\r\n              }\r\n             \r\n            DObj.DivList = this.DivListForSave;\r\n            }else{\r\n                if( this.form.value.ShareAllDiv == 2 || this.form.value.ShareAllDiv == 1){\r\n                  al.enableDivSelectionTable = true;\r\n                  al.ISCOMMONAC = 1;\r\n                  this.DivListForSave = [];\r\n                  for(let i of this.division){\r\n                       let dObj:DivList=<DivList>{};\r\n                       dObj.ACID = i.ACID;\r\n                       dObj.DIV = i.INITIAL;\r\n                       this.DivListForSave.push(dObj);\r\n                   }\r\n                  \r\n                 DObj.DivList = this.DivListForSave;\r\n                }\r\n              }\r\n              \r\n            //   //console.log(\"PARENT BEFORE SAVE\", al.PARENT,al.PARENT.slice(al.PARENT.length -3) )\r\n              if(this.Title != \"AddGroup\"){\r\n                if( al.PARENT.slice(al.PARENT.length -3) != 'PAG'){\r\n                \tal.PARENT = this.MasterService.SelectedGroup;\r\n                }\r\n              }\r\n            \r\n\r\n            //console.log(\"AL\", al);\r\n            let sub = this.MasterService.saveAccount(this.mode, al, this.createMember, partyAdditionalInfo,DObj,SalesTargetData,AdditionalBankObj)\r\n                .subscribe(data => {\r\n                    if (data.status == 'ok') {\r\n                        //Displaying dialog message for save with timer of 1 secs\r\n                        //console.log('PARTYDATA@@@@', data)\r\n                        var selNode = {}\r\n\r\n                        if (this.grp == 'A') {\r\n                            al.ACID = data.result.acid;\r\n                            this.MasterService.PartialAccountList.push(al);\r\n                            selNode = { type: 'A', value: al };\r\n                            ////console.log(\"TYPE99\", selNode)\r\n                        }\r\n                        else {\r\n                            // alert(\"reached\")\r\n                            selNode = { type: 'G', lastparent: this.ACID, value: { ACID: data.result.ACID, ACNAME: data.result.ACNAME, PARENT: data.result.PARENT, PARENTID: data.result.PARENTID, children: [] } };\r\n                        }\r\n                        if (this.mode == 'edit') {\r\n                            this.EditPartyEmit.emit();\r\n                        } else {\r\n                            //console.log(\"save party emit\",selNode);\r\n                            this.SavePartyEmit.emit(selNode);\r\n                        }\r\n                        //console.log(\"GROUP SAVE\");\r\n                        this.PartyService.loadTableListSubject.next(al);\r\n                        for(let i of this.PartyService.partyList){\r\n                            if(i.ACID == al.PARENT){\r\n                                i.children.push(al);\r\n                            }\r\n                        }\r\n                        \r\n                        this.dialogMessageSubject.next(\"Data Saved Successfully\")\r\n                        setTimeout(() => {\r\n                            //console.log(\"data saved success\");\r\n                            dialogRef.close();\r\n                            this.onClose.emit(this.ACID);\r\n                            this.router.navigate([\"pages/account/AccountLedger/PartyTree\"])\r\n\r\n                        }, 1000)\r\n\r\n\r\n                    }\r\n                    else {\r\n                        //alert(data.result);\r\n                        //the ConnectionString in the server is not initialized means the the token 's user is not int the list of database user so it could't make connectionstring. Re authorization is requierd\r\n                        if (data.result._body == \"The ConnectionString property has not been initialized.\") {\r\n                            this.router.navigate(['/login', this.router.url])\r\n                            return;\r\n                        }\r\n                        //Some other issues need to check\r\n                        this.dialogMessageSubject.next(\"Error in Saving Data:\" + data.result._body);\r\n                        //console.log(data.result._body);\r\n                        setTimeout(() => {\r\n                            dialogRef.close();\r\n                            this.childModal.hide();\r\n                        }, 3000)\r\n                    }\r\n                },\r\n                    error => { alert(error) }\r\n                );\r\n            this.subcriptions.push(sub);\r\n        }\r\n        catch (e) {\r\n            alert(e);\r\n        }\r\n    }\r\n    cancel() {\r\n        let acid= this.mode == 'add'? this.ACID : this.parentIdOnEdit;\r\n        this.onClose.emit(true);\r\n        this.PartyService.subTitle = \" \";\r\n    }\r\n    hideChildModal() {\r\n        try {\r\n            this.childModal.hide();\r\n        } catch (ex) {\r\n            //console.log(ex);\r\n            alert(ex);\r\n        }\r\n    }\r\n\r\n    changePtype(value) {\r\n        // this.form.get('Ptype').patchValue(value);\r\n\r\n        if (value == 'V') {  \r\n            this.form.get('createMember').disable;\r\n            this.ISCUSTOMER=false;    \r\n            if(this.userSetting.Country == 1){\r\n                this.PartyCat_List =  this.GeoList.filter(x=>x.PTYPE == 'V');\r\n                if(this.mode == \"add\"){\r\n                    this.form.get('GEO').setValue('111111-1');\r\n                }\r\n            }\r\n        } else {\r\n            this.form.get('createMember').enable;\r\n            this.ISCUSTOMER=true;\r\n            if(this.userSetting.Country == 1){\r\n                this.PartyCat_List =  this.GeoList.filter(x=>x.PTYPE == 'C');\r\n                if(this.mode == \"add\"){\r\n                    this.form.get('GEO').setValue('123456-7');\r\n                }\r\n            }\r\n        }\r\n    }\r\n    public onGrpChange(event, i, selected) {\r\n        try {\r\n            if (selected) {\r\n                // this.actype = selected.ACTYPE\r\n                // this.changeACtype(selected.ACTYPE);\r\n                // this.disableActype == true;\r\n                //latest selected \r\n                this.parentGroup = selected;\r\n            }\r\n\r\n\r\n            //let newGroup: GroupAccounts = event.value;\r\n            //console.log({ onGrpChangeEvent: event, eventIndex: i, selected: selected });\r\n            let opt: SelectItem[] = [];\r\n            var ind = i;\r\n\r\n            if (event) {\r\n                if (this.acGroups.length > ind + 1) {\r\n                    this.acGroups.splice(ind + 1, this.acGroups.length - 1)\r\n                }\r\n                //console.log({ GroupchageEvent: event, value: event.value.ACNAME });\r\n                this.lastParentID = event.value.ACID;\r\n\r\n                this.PartyService.getChildrenGroups(event.value.ACID)\r\n                    .flatMap(data => data)\r\n                    .subscribe(data => {\r\n                        //console.log({ children: data });\r\n                        if (data.TYPE == 'G')\r\n                            opt.push({ label: data.ACNAME, value: data });\r\n\r\n                    }, Error => //console.log({ groupchangeError: Error })\r\n                         () => {\r\n                            if (opt.length > 0) {\r\n                                this.acGroups.push({ group: event.value.ACNAME, value: event.value, options: opt });\r\n                            }\r\n\r\n                            //this.groupListSubject.next(subjectData);\r\n                            // //console.log({ negroup2: { group: event.value.ACNAME, value: event.value, options: opt }, subjectData2: subjectData });\r\n                        }\r\n                    );\r\n            }\r\n\r\n        }\r\n        catch (ex) {\r\n            //console.log({ onGroupChange: ex })\r\n        }\r\n\r\n    }\r\n\r\n    onChangeArea(event) {\r\n        let userAreaName = event.target.value;\r\n        let checkArea = [];\r\n        if (userAreaName != null) {\r\n            checkArea = this.areaList.filter(x => x.AREANAME.toUpperCase() == userAreaName.toUpperCase());\r\n            if (checkArea.length == 0) {\r\n                if (confirm(\"Do you want to add new Area\")) {\r\n\r\n                } else {\r\n                    this.form.get('CITY').patchValue(\"\");\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    getGroups() {\r\n        //FIRST GET THE MAIN GROUP\r\n        // this.hasSubLedger = 0;\r\n        // this.changehassubEvent(false);\r\n        // this.disableHassubledger = false;\r\n        // alert(\"reached\")\r\n        ////console.log(\"Has SUB is false\")\r\n        this.actype = '';\r\n        this.disableActype = false;\r\n        this.acGroups = [];\r\n        this.getMainGroup();\r\n        if (!this.ACID) return;\r\n        //console.log({ acid: this.ACID });\r\n        this.PartyService.getParentGroups(this.ACID)\r\n            .flatMap(data => data)\r\n            .subscribe(data => {\r\n                try {\r\n                    data.SELECTEDGROUPAC = data.CHILDLIST.find(itm => itm.ACID == data.SELECTEDGROUP);\r\n                    this.parentGroup = data.SELECTEDGROUPAC;\r\n                    //console.log({ selectedGroup: data.SELECTEDGROUP, selectedGroupAC: data.SELECTEDGROUPAC })\r\n                    // this.parentid = data.SELECTEDGROUPAC.SELECTEDGROUPAC.ACNAME;\r\n\r\n                    // if (data.SELECTEDGROUPAC.HASSUBLEDGER == 1 && this.hasSubLedger == 0) {\r\n                    //     this.hasSubLedger = 1;\r\n                    //     this.changehassubEvent(true);\r\n                    //     this.disableHassubledger = true;\r\n                    //     ////console.log(\"Disable AHS SUB\")\r\n                    // }\r\n                    \r\n                    let opt: SelectItem[] = [];\r\n                    data.CHILDLIST.forEach(child => {\r\n                        opt.push({ label: child.ACNAME, value: child });\r\n                    });\r\n                    this.acGroups.push({ group: data.ACNAME, value: data, options: opt });\r\n                }\r\n                catch (ex) {\r\n                    //console.log({ getParentGroups: ex })\r\n                }\r\n            }, error => { //console.log({ getgroupError: error }) }\r\n                () => {\r\n                    if (this.acGroups.length > 1) {\r\n                        let selectedGroup = this.acGroups[0].options.find(itm =>\r\n                            itm.value.ACID == this.acGroups[1].value.ACID\r\n                        )\r\n                        if (selectedGroup) {\r\n                            this.acGroups[0].value.SELECTEDGROUPAC = selectedGroup.value;\r\n                        }\r\n                        //console.log({ selectedGroupValue: selectedGroup.value });\r\n                        // if (selectedGroup.value.Ptype) {\r\n                        //     alert(\"REACHED\")\r\n                        //     this.actype = selectedGroup.value.Ptype\r\n                        //     this.changePtype(selectedGroup.value.Ptype);\r\n                        //     this.disableActype == true;\r\n                        // }\r\n                        // //console.log({groupTofind:this.acGroups[1],options:this.acGroups[0].options,selected:this.acGroups[0].value.SELECTEDGROUPAC,selected2:this.acGroups[1].value.SELECTEDGROUPAC})\r\n                    }\r\n                }});\r\n\r\n        return;\r\n    }\r\n    getMainGroup() {\r\n        let opt: SelectItem[] = [];\r\n        this.PartyService.getTopGroups()\r\n            .flatMap(data => data)\r\n            .subscribe(data => {\r\n                opt.push({ label: data.ACNAME, value: data })\r\n            });\r\n        this.acGroups.push({ group: 'Main Group', value: { ACNAME: 'MAIN GROUP', ACID: null, PARENT: null }, options: opt });\r\n        ////console.log(\"CheckAcGroup\", this.acGroups)\r\n    }\r\n    clickedNotActive(value) {\r\n        if (this.form == null) { return }\r\n        this.form.get('isNotActive').patchValue(value);\r\n    }\r\n    NotActive() {\r\n\r\n    }\r\n\r\n    enableInitial(value) {\r\n        // ////console.log(\"@@value\", value)\r\n        if (value == 0) {\r\n            this.form.get('INITIAL').disable();\r\n        } else {\r\n            this.form.get('INITIAL').enable();\r\n        }\r\n    }\r\n\r\n    enableShareOptions(enableShareDiv) {\r\n        // ////console.log(\"@@enableShareDiv\", enableShareDiv)\r\n        if (enableShareDiv == 1) {\r\n            this.form.get('ShareSelectiveDiv').enable();\r\n            this.form.get('ShareAllDiv').enable();\r\n\r\n            // this.showDivSelectionTable = true;\r\n            \r\n        } else {\r\n            this.form.get('ShareSelectiveDiv').disable();\r\n            this.form.get('ShareAllDiv').disable();\r\n            this.form.get('ShareSelectiveDiv').setValue(0);\r\n            this.form.get('ShareAllDiv').setValue(0);\r\n\r\n            this.showDivSelectionTable = false;\r\n            \r\n        }\r\n        \r\n\r\n    }\r\n\r\n    enableDivSelectionTable(showTable) {\r\n        // ////console.log(\"@@showTable\", showTable)\r\n        if (showTable == 1) {\r\n            this.showDivSelectionTable = true;\r\n            this.form.get('ShareAllDiv').setValue(0);\r\n            this.enableDivision = true;\r\n            this.division.forEach(x => {\r\n                x.INITIAL == this.userProfile.CompanyInfo.INITIAL ? x.isCheck = true : '';\r\n            }) \r\n                    } else {\r\n            this.showDivSelectionTable = false;\r\n            this.enableDivision = false\r\n        }\r\n    }\r\n\r\n    ShareAllDiv(ShareAllDiv) {\r\n        this.showDivSelectionTable = false;\r\n        if (ShareAllDiv == 1) {\r\n            this.form.get('ShareSelectiveDiv').setValue(0);\r\n            this.form.get('ISCOMMONAC').setValue(1);\r\n        }\r\n        else{\r\n            this.form.get('ISCOMMONAC').setValue(0);\r\n        }\r\n        this.form.get('enableDivSelectionTable').setValue(false);\r\n    }\r\n   \r\n\r\n    keyPress(event: any) {\r\n        const pattern = /[0-9]/;\r\n        const inputChar = String.fromCharCode((event as KeyboardEvent).charCode);\r\n        if (!pattern.test(inputChar)) {\r\n            // invalid character, prevent input\r\n            event.preventDefault();\r\n        }\r\n    }\r\n\r\n    @HostListener(\"document : keydown\", [\"$event\"])\r\n    handleKeyDownboardEvent($event: KeyboardEvent) {\r\n        if ($event.code == \"F3\") {\r\n            $event.preventDefault();\r\n            this.cancel();\r\n        }\r\n    }\r\n    check(e) {\r\n        // //console.log('checkValue@!',this.division)\r\n        this.form.value.MultipleDivision = e.target.value;\r\n    }\r\n    activeIndex: any;\r\n    rowClick(i) {\r\n        this.activeIndex = i;\r\n    }\r\n     ChangedDiv : string = '';\r\n    changeDivision(e) {\r\n        // //console.log(\"CheckValue@\",e)\r\n        this.ChangedDiv = e;\r\n        this.division.forEach(x => {\r\n            x.INITIAL == e ? x.isDefault = true : x.isDefault = false;\r\n\r\n        })\r\n        if(this.mode == \"add\"){\r\n            this.division.forEach(x => {\r\n                x.INITIAL == e ? x.isCheck = true : x.isCheck = false;\r\n            })\r\n        }else{\r\n            this.division.forEach(x => {\r\n                x.INITIAL == e ? x.isCheck = true : '';\r\n            })\r\n        }\r\n        \r\n    }\r\n    enableDivision: Boolean;\r\n    ClickShareAccount(value) {\r\n        this.form.value.enableDivSelectionTable = false;\r\n        if (this.form.value.ShareAccount == 1) {\r\n            this.changeDivision(this.MasterService.userProfile.CompanyInfo.INITIAL)\r\n            this.enableDivision = true;\r\n\r\n\r\n        }\r\n        else {\r\n            this.form.get('ShareAllDiv').setValue(0);\r\n            this.form.get('ShareSelectiveDiv').setValue(0);\r\n            this.enableDivision = false;\r\n\r\n        }\r\n        this.form.get('enableDivSelectionTable').setValue(false);\r\n       \r\n    }\r\n\r\n    add(){\r\n        this.bank = true;\r\n        // //console.log(\"form ko value\", this.form.controls.BankName.value)\r\n        let bankobj = <BankDetails>{}\r\n        bankobj.BankName = this.form.get(\"BankName\").value;\r\n        bankobj.BranchName= this.form.get(\"BranchName\").value;\r\n        bankobj.AccountNumber = this.form.get(\"AccountNumber\").value;\r\n       \r\n        this.bankArray.push(bankobj);\r\n        // //console.log(\"sabai value of table\",bankobj);\r\n\r\n    }\r\n\r\n    SaveBankdetail(){\r\n        // let bodyData =  this.bankObj} \r\n        this.bankObj.CUSTOMERNAME = this.form.get(\"cusName\").value;\r\n        this.bankObj.ADDRESS = this.form.get(\"Address\").value; \r\n        this.bankObj.VATNO = this.form.get(\"VatNo\").value;  \r\n        this.bankObj.BankDetails = this.bankArray;\r\n        this.MasterService.saveBankDetail(this.bankObj).subscribe(res=>{\r\n            //console.log(\"result aayo\",res)\r\n            if(res.status == \"ok\"){\r\n\r\n               \r\n                this.alertSerivces.info(\"Saved successfully!\")\r\n            \r\n            }\r\n            else{\r\n                this.alertSerivces.error(res.result);\r\n            }\r\n        }, error =>{\r\n            this.alertSerivces.error(\"Error in savin data. Please try again!\");\r\n        })\r\n      \r\n    }\r\n\r\n    showBankPopup(){\r\n        this.gridBankPopupSettings = {\r\n          title: \"Bank List\",\r\n          apiEndpoints: `/getBankPagedList/`,\r\n          defaultFilterIndex: 1,\r\n          columns: [\r\n            {\r\n              key: \"BANKCODE\",\r\n              title: \"Bank Code\",\r\n              hidden: false,\r\n              noSearch: false\r\n            },\r\n            {\r\n              key: \"BANKNAME\",\r\n              title: \"Bank Name\",\r\n              hidden: false,\r\n              noSearch: false\r\n            }\r\n          ]\r\n        };\r\n        this.genericGridBankList.show();\r\n      }\r\n      onBankSelect(value){\r\n        //console.log(\"ValueCheck\",value)\r\n        this.form.get('BANKCODE').patchValue(value.BANKCODE);\r\n        this.form.get('BANKNAME').patchValue(value.BANKNAME);\r\n      }\r\n\r\n      onAddBankSelect(value){\r\n        this.form.get('ADDITIONALBANKCODE').patchValue(value.BANKCODE);\r\n        this.form.get('ADDITIONALBANKNAME').patchValue(value.BANKNAME);\r\n      }\r\n\r\n      showAddBankPopup(){\r\n        this.gridAdditionalBankPopupSettings = {\r\n            title: \"Bank List\",\r\n            apiEndpoints: `/getBankPagedList/`,\r\n            defaultFilterIndex: 1,\r\n            columns: [\r\n              {\r\n                key: \"BANKCODE\",\r\n                title: \"Bank Code\",\r\n                hidden: false,\r\n                noSearch: false\r\n              },\r\n              {\r\n                key: \"BANKNAME\",\r\n                title: \"Bank Name\",\r\n                hidden: false,\r\n                noSearch: false\r\n              }\r\n            ]\r\n          };\r\n          this.genericGridAdditionalBankList.show();\r\n      }\r\n\r\n      onCLickAddBank(){\r\n          if(this.form.value.ADDITIONALBANKCODE==='' || this.form.value.ADDITIONALBANKCODE===null || this.form.value.ADDITIONALBANKCODE===undefined ||\r\n          this.form.value.ADDITIONALBANKNAME==='' || this.form.value.ADDITIONALBANKNAME===null || this.form.value.ADDITIONALBANKNAME===undefined ||\r\n          this.form.value.ADDITIONALBANKACCOUNTNUMBER==='' || this.form.value.ADDITIONALBANKACCOUNTNUMBER===null || this.form.value.ADDITIONALBANKACCOUNTNUMBER===undefined){\r\n              return;\r\n          }\r\n          let additionalbankdetailsObj:AdditionalBankList=<AdditionalBankList>{};\r\n          additionalbankdetailsObj.BANKCODE = this.form.value.ADDITIONALBANKCODE;\r\n          additionalbankdetailsObj.BANKNAME = this.form.value.ADDITIONALBANKNAME;\r\n          additionalbankdetailsObj.BANKACCOUNTNUMBER = this.form.value.ADDITIONALBANKACCOUNTNUMBER;\r\n        this.AdditionalBankList.push(additionalbankdetailsObj);\r\n        this.form.get('ADDITIONALBANKCODE').setValue('');\r\n        this.form.get('ADDITIONALBANKNAME').setValue('');\r\n        this.form.get('ADDITIONALBANKACCOUNTNUMBER').setValue('');\r\n      }\r\n\r\n      getPartyList(parentACID){\r\n        //console.log(\"get party list\", this.ACID);\r\n        if(parentACID){\r\n            this.PartyService.getPartyHeirarchy(parentACID).subscribe(\r\n                res=>{\r\n                    //console.log(\"result hai\", res);\r\n                    let itemGroup = res[0];\r\n                    //console.log(\"MAIN GROUP LSIR\", this.MasterService.mainGroupList);\r\n                    this.MasterService.groupSelectObj.MGROUP = itemGroup.L1;\r\n                    //console.log(\"main group id\", this.MasterService.groupSelectObj.MGROUP);\r\n                    this.PartyService.getSubPartyList(this.MasterService.groupSelectObj.MGROUP).subscribe((res)=>{\r\n                        if(res.length > 0){\r\n                            this.MasterService.subPartyAList = res;\r\n                            this.MasterService.groupSelectObj.SUBGROUP_A = itemGroup.L2;\r\n                            //console.log(\"SUBGROUP A LIST\", this.MasterService.subPartyAList);\r\n                            this.MasterService.disableSubPartyA = false\r\n                            this.PartyService.getSubPartyList(this.MasterService.groupSelectObj.SUBGROUP_A).subscribe((res)=>{\r\n                                if(res.length> 0){\r\n                                    this.MasterService.subPartyBList = res;\r\n                                    this.MasterService.groupSelectObj.SUBGROUP_B = itemGroup.L3;\r\n                                    this.MasterService.disableSubPartyB = false\r\n                                    this.PartyService.getSubPartyList(this.MasterService.groupSelectObj.SUBGROUP_B).subscribe((res)=>{\r\n                                        if(res.length > 0){\r\n                                            this.MasterService.subPartyCList = res;\r\n                                            this.MasterService.groupSelectObj.SUBGROUP_C = itemGroup.L4;\r\n                                            this.MasterService.disableSubPartyC = false;\r\n\r\n                                        }else{\r\n                                            this.MasterService.disableSubPartyC = true;\r\n                                        }\r\n                                    });\r\n\r\n                                }else{\r\n                                    this.MasterService.disableSubPartyB = true;\r\n                                }\r\n                            });\r\n                        }else{\r\n                            this.MasterService.disableSubPartyA = true;\r\n                        }\r\n                    })\r\n                }\r\n            )\r\n        }\r\n      }\r\n\r\n      DeleteParty(){\r\n        if(!this.MasterService.getRequestOption()){\r\n            return;\r\n          }\r\n          //console.log(\"current party acid\", this.ACID);\r\n          this.DeletePar.show();\r\n      }\r\n\r\n      DeleteYes(){\r\n          \r\n          this.DeletePar.hide();\r\n          this.spinnerservice.show(\"Deleting Party, please wait...\");\r\n          this.MasterService.deleteAccount(this.ACID).subscribe(data =>{\r\n              if(data.status == \"ok\"){\r\n                  this.alertSerivces.success(\"Party deleted !\");\r\n                  this.spinnerservice.hide();\r\n                  this.onClose.emit(this.parentIdOnEdit);\r\n                  this.router.navigate([\"pages/account/AccountLedger/PartyTree\"])\r\n              }else{\r\n                  this.spinnerservice.hide();\r\n                  this.alertSerivces.error(\"Error in deleting data: \"+data.result._body);\r\n              }\r\n          })\r\n      }\r\ns\r\n      DeleteNo(){\r\n          this.DeletePar.hide();\r\n      }\r\n\r\n      checkDuplicateVAT(event){\r\n        //console.log(\"chec duplicte vat\", event, this.MasterService.userSetting.EnableDuplicateVATforParty);\r\n        if(this.MasterService.userSetting.EnableDuplicateVATforParty === 1){\r\n            this.PartyService.checkduplicateVATNO(event.target.value).subscribe((res:any)=>{\r\n                //console.log(\"result checkduplicate\", res);\r\n                if(res == 'DUPLICATE'){\r\n                    this.Duplicate.show();\r\n                }\r\n            });\r\n        }\r\n      }\r\n\r\n      onDuplicateYes(){\r\n        this.Duplicate.hide();\r\n      }\r\n\r\n      onDuplicateNo(){\r\n        this.form.get('VATNO').patchValue(\"\");\r\n        this.Duplicate.hide();\r\n      }\r\n\r\n      onStateChange(event) {\r\n        this.DistrictListbyState = this.DistrictList.filter(x => x.State == event.target.value)\r\n      }\r\n    \r\n      displayDistrictOnEdit(StateCode: any) {\r\n        this.DistrictListbyState = this.DistrictList.filter(x => x.State == StateCode)\r\n      }\r\n\r\n      calculateMonthBalance(){\r\n          let BAISAKH = this.form.value.BAISHAKH;\r\n          let JESTHA = this.form.value.JESTHA;\r\n          let ASHAD = this.form.value.ASHAD;\r\n          let SHARWAN = this.form.value.SHARWAN;\r\n          let BHADRA = this.form.value.BHADRA;\r\n          let ASHWIN = this.form.value.ASHWIN;\r\n          let KARTIK = this.form.value.KARTIK;\r\n          let MANGSHIR = this.form.value.MANGSHIR;\r\n          let PAUSH = this.form.value.PAUSH;\r\n          let MAGH = this.form.value.MAGH;\r\n          let FALGUN = this.form.value.FALGUN;\r\n          let CHAITRA = this.form.value.CHAITRA;\r\n\r\n          if ((BAISAKH + JESTHA + ASHAD + SHARWAN + BHADRA + ASHWIN + KARTIK + MANGSHIR + PAUSH + MAGH + FALGUN + CHAITRA) > 100) {\r\n              this.alertSerivces.info(\"Monthly balance exceed 100% !!\");\r\n              return false;\r\n          }\r\n      }\r\n     \r\n      calculateTotalMonthBalance(){\r\n        let BAISAKH = this.form.value.BAISHAKH;\r\n        let JESTHA = this.form.value.JESTHA;\r\n        let ASHAD = this.form.value.ASHAD;\r\n        let SHARWAN = this.form.value.SHARWAN;\r\n        let BHADRA = this.form.value.BHADRA;\r\n        let ASHWIN = this.form.value.ASHWIN;\r\n        let KARTIK = this.form.value.KARTIK;\r\n        let MANGSHIR = this.form.value.MANGSHIR;\r\n        let PAUSH = this.form.value.PAUSH;\r\n        let MAGH = this.form.value.MAGH;\r\n        let FALGUN = this.form.value.FALGUN;\r\n        let CHAITRA = this.form.value.CHAITRA;\r\n\r\n        if ((BAISAKH + JESTHA + ASHAD + SHARWAN + BHADRA + ASHWIN + KARTIK + MANGSHIR + PAUSH + MAGH + FALGUN + CHAITRA) < 100) {\r\n          this.alertSerivces.info(\"Monthly balance should be 100% !!\");\r\n          return false;\r\n      }\r\n    }\r\n\r\n    RemoveBankFromList(index){\r\n        this.AdditionalBankList.splice(index,1);\r\n    }\r\n\r\n    showParentAccountList(){\r\n    this.gridACListPartyPopupSettings = {\r\n        title: \"Accounts\",\r\n        apiEndpoints: `/getAccountPagedListByMapId/Details/PartyOpeningBalance/`,\r\n        defaultFilterIndex: 1,\r\n        columns: [\r\n          {\r\n            key: \"ACCODE\",\r\n            title: \"AC CODE\",\r\n            hidden: false,\r\n            noSearch: false\r\n          },\r\n          {\r\n            key: \"ACNAME\",\r\n            title: \"A/C NAME\",\r\n            hidden: false,\r\n            noSearch: false\r\n          }\r\n        ]\r\n      };\r\n      this.genericGridACListParty.show();\r\n    }\r\n\r\n    onAddParentCompanySelect(value){\r\n        this.form.get('PCompany').patchValue(value.ACID);\r\n        this.form.get('PCompanyName').patchValue(value.ACNAME);\r\n      }\r\n\r\n      changeIsOverseasParty(value){\r\n        if(value==true){\r\n            this.Is_OverseasParty=1;\r\n        }else{\r\n            this.Is_OverseasParty=0;\r\n        }\r\n      }\r\n\r\n      resetForm(){\r\n        \r\n        this.form = this._fb.group({\r\n            majorparent: [''],\r\n            parentid: [''],\r\n            ACNAME: ['', Validators.required],\r\n            Ptype: [''],\r\n            MAPID: [''],\r\n            ADDRESS: ['', Validators.required],\r\n            PHONE: [''],\r\n            FAX: [''],\r\n            EMAIL: [''],\r\n\r\n            ACCODE: [''],\r\n\r\n            isNotActive: [''],\r\n\r\n            CITY: [''],\r\n            STATE: [''],\r\n            COMMON: [0],\r\n            ISACTIVE: [1],\r\n            VATNO: [''],\r\n            CRPERIOD: [0],\r\n            CRLIMIT: [0],\r\n            GEO: ['111111-1'],\r\n            CNAME: [''],\r\n            ONAME: [''],\r\n            OCONTACT: [''],\r\n            ODESIGNATION: [''],\r\n            CONTACTNAME: [''],\r\n            CCONTACT_A: [''],\r\n            CCONTACT_B: [''],\r\n            CDESIGNATION: [''],\r\n            RELATEDSPERSON_A: [''],\r\n            RELATEDSPERSON_B: [''],\r\n            NOTES: [''],\r\n            Mobile: [''],\r\n            INITIAL: [''],\r\n            IsInitialValue: [0],\r\n            createMember: [''],\r\n            DIV: [this.userProfile.userDivision],\r\n            ShareAccount: [''],\r\n            ShareSelectiveDiv: [''],\r\n            ShareAllDiv: [''],\r\n            enableDivSelectionTable: [0],\r\n            cusName:[''],\r\n            ISCOMMONAC : [0],\r\n            BANKACCOUNTNUMBER: [''],\r\n            BANKCODE:[''],\r\n            BANKNAME:[''],\r\n            ISBRANCH: [''],\r\n            BAISHAKH: [0],\r\n            JESTHA: [0],\r\n            ASHAD: [0],\r\n            SHARWAN: [0],\r\n            BHADRA: [0],\r\n            ASHWIN: [0],\r\n            KARTIK: [0],\r\n            MANGSHIR: [0],\r\n            PAUSH: [0],\r\n            MAGH: [0],\r\n            FALGUN: [0],\r\n            CHAITRA: [0],\r\n            TARGET_AMOUNT: [0],\r\n            DISTRICT: [''],\r\n            ADDITIONALBANKACCOUNTNUMBER: [''],\r\n            ADDITIONALBANKCODE:[''],\r\n            ADDITIONALBANKNAME:[''],\r\n            PCompany:[''],\r\n            PCompanyName:[''],\r\n            IS_OVERSEAS_PARTY: [0]\r\n        })\r\n      }\r\n    }\r\n    \r\n\r\n\r\nexport class DObj {\r\n    DivList: DivList[]\r\n}\r\nexport class DivList {\r\n    ACID: string;\r\n    DIV: string;\r\n    STAMP: number;\r\n    ISACTIVE: number;\r\n}\r\n\r\nexport interface BankCustomerInfo{\r\n    CUSID:string;\r\n    CUSTOMERNAME: string;\r\n    ADDRESS:string;\r\n    VATNO:number;\r\n    BankDetails:BankDetails[]; \r\n}\r\n\r\nexport interface BankDetails{\r\n    CUSID:string;\r\n    BankName: string;\r\n    BranchName: string;\r\n    AccountNumber:number;\r\n\r\n}\r\n\r\nexport class AdditionalBankObj {\r\n    AdditionalBankList: AdditionalBankList[]\r\n}\r\nexport class AdditionalBankList {\r\n    BANKCODE: string;\r\n    BANKNAME: string;\r\n    BANKACCOUNTNUMBER:any;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/pages/masters/components/party-ledger/addpartyledger.component.ts","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({ name: 'searchData', pure: false })\r\n\r\nexport class SearchPipe implements PipeTransform {\r\n  transform(data, query: string,option:string): any {\r\n    if (data) {\r\n      if (query) {\r\n        if(option == \"searchByName\"){\r\n        return data.filter(item => {\r\n          const searchedQuery = query.replace(/[^A-Z0-9]/ig, '').toLowerCase();\r\n          const comId = (item.ACNAME) ? (item.ACNAME).replace(/[^A-Z0-9]/ig, '').toLowerCase() : '';\r\n          if (\r\n            comId.indexOf(searchedQuery) !== -1\r\n          ) {\r\n            // //console.log(\"CheckIten\",item)\r\n            return item;\r\n          }\r\n        });\r\n      }else if(option == \"searchByVat\"){\r\n        return data.filter(item => {\r\n          const searchedQuery = query.replace(/[^A-Z0-9]/ig, '').toLowerCase();\r\n          const comId = (item.VATNO) ? (item.VATNO).replace(/[^A-Z0-9]/ig, '').toLowerCase() : '';\r\n          if (\r\n            comId.indexOf(searchedQuery) !== -1\r\n          ) {\r\n          \r\n            return item;\r\n          }\r\n        });\r\n      }\r\n      else if(option == \"orderByStamp\"){\r\n        return data.filter(item => {\r\n          const searchedQuery = query.replace(/[^A-Z0-9]/ig, '').toLowerCase();\r\n          const comId = (item.VATNO) ? (item.VATNO).replace(/[^A-Z0-9]/ig, '').toLowerCase() : '';\r\n          if (\r\n            comId.indexOf(searchedQuery) !== -1\r\n          ) {\r\n            return item;\r\n          }\r\n        });\r\n      }\r\n     \r\n      } else {\r\n        return data;\r\n      }\r\n    }\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/pages/masters/components/party-ledger/search.pipe.ts","module.exports = \".ng2-smart-table-container table.ng2-smart-table {\\n  color: #000000; }\\n  .ng2-smart-table-container table.ng2-smart-table th, .ng2-smart-table-container table.ng2-smart-table td {\\n    border: 1px solid gainsboro !important;\\n    line-height: 35px;\\n    vertical-align: middle; }\\n  .ng2-smart-table-container table.ng2-smart-table input {\\n    line-height: 1.5 !important; }\\n  .ng2-smart-table-container table.ng2-smart-table tbody tr:hover {\\n    background: rgba(0, 0, 0, 0.03); }\\n  .ng2-smart-table-container table.ng2-smart-table a.ng2-smart-sort-link {\\n    font-size: 14px !important;\\n    color: #000000;\\n    font-weight: 900; }\\n    .ng2-smart-table-container table.ng2-smart-table a.ng2-smart-sort-link.sort {\\n      font-weight: 900 !important; }\\n      .ng2-smart-table-container table.ng2-smart-table a.ng2-smart-sort-link.sort::after {\\n        border-bottom-color: #000000 !important; }\\n  .ng2-smart-table-container table.ng2-smart-table .ng2-smart-actions {\\n    width: 70px;\\n    text-align: center; }\\n    .ng2-smart-table-container table.ng2-smart-table .ng2-smart-actions .actions {\\n      float: none;\\n      text-align: center; }\\n  .ng2-smart-table-container table.ng2-smart-table a.ng2-smart-action {\\n    font-size: 14px !important;\\n    color: #000000;\\n    padding: 0 5px;\\n    display: inline-block; }\\n    .ng2-smart-table-container table.ng2-smart-table a.ng2-smart-action.ng2-smart-action-add-add {\\n      font-size: 25px !important; }\\n\\nnav.ng2-smart-pagination-nav {\\n  display: flex;\\n  justify-content: center; }\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/raw-loader!./~/sass-loader!./src/app/pages/masters/components/ALedger/smartTables.scss\n// module id = 1703\n// module chunks = 12","module.exports = \".ng2-smart-table-container table.ng2-smart-table {\\n  color: #000000; }\\n  .ng2-smart-table-container table.ng2-smart-table th, .ng2-smart-table-container table.ng2-smart-table td {\\n    border: 1px solid gainsboro !important;\\n    line-height: 35px;\\n    vertical-align: middle; }\\n  .ng2-smart-table-container table.ng2-smart-table input {\\n    line-height: 1.5 !important; }\\n  .ng2-smart-table-container table.ng2-smart-table tbody tr:hover {\\n    background: rgba(0, 0, 0, 0.03); }\\n  .ng2-smart-table-container table.ng2-smart-table a.ng2-smart-sort-link {\\n    font-size: 14px !important;\\n    color: #000000;\\n    font-weight: 900; }\\n    .ng2-smart-table-container table.ng2-smart-table a.ng2-smart-sort-link.sort {\\n      font-weight: 900 !important; }\\n      .ng2-smart-table-container table.ng2-smart-table a.ng2-smart-sort-link.sort::after {\\n        border-bottom-color: #000000 !important; }\\n  .ng2-smart-table-container table.ng2-smart-table .ng2-smart-actions {\\n    width: 70px;\\n    text-align: center; }\\n    .ng2-smart-table-container table.ng2-smart-table .ng2-smart-actions .actions {\\n      float: none;\\n      text-align: center; }\\n  .ng2-smart-table-container table.ng2-smart-table a.ng2-smart-action {\\n    font-size: 14px !important;\\n    color: #000000;\\n    padding: 0 5px;\\n    display: inline-block; }\\n    .ng2-smart-table-container table.ng2-smart-table a.ng2-smart-action.ng2-smart-action-add-add {\\n      font-size: 25px !important; }\\n\\nnav.ng2-smart-pagination-nav {\\n  display: flex;\\n  justify-content: center; }\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/raw-loader!./~/sass-loader!./src/app/pages/masters/components/Bank/smartTables.scss\n// module id = 1704\n// module chunks = 12","module.exports = \".ng2-smart-table-container table.ng2-smart-table {\\n  color: #000000; }\\n  .ng2-smart-table-container table.ng2-smart-table th, .ng2-smart-table-container table.ng2-smart-table td {\\n    border: 1px solid gainsboro !important;\\n    line-height: 35px;\\n    vertical-align: middle; }\\n  .ng2-smart-table-container table.ng2-smart-table input {\\n    line-height: 1.5 !important; }\\n  .ng2-smart-table-container table.ng2-smart-table tbody tr:hover {\\n    background: rgba(0, 0, 0, 0.03); }\\n  .ng2-smart-table-container table.ng2-smart-table a.ng2-smart-sort-link {\\n    font-size: 14px !important;\\n    color: #000000;\\n    font-weight: 900; }\\n    .ng2-smart-table-container table.ng2-smart-table a.ng2-smart-sort-link.sort {\\n      font-weight: 900 !important; }\\n      .ng2-smart-table-container table.ng2-smart-table a.ng2-smart-sort-link.sort::after {\\n        border-bottom-color: #000000 !important; }\\n  .ng2-smart-table-container table.ng2-smart-table .ng2-smart-actions {\\n    width: 70px;\\n    text-align: center; }\\n    .ng2-smart-table-container table.ng2-smart-table .ng2-smart-actions .actions {\\n      float: none;\\n      text-align: center; }\\n  .ng2-smart-table-container table.ng2-smart-table a.ng2-smart-action {\\n    font-size: 14px !important;\\n    color: #000000;\\n    padding: 0 5px;\\n    display: inline-block; }\\n    .ng2-smart-table-container table.ng2-smart-table a.ng2-smart-action.ng2-smart-action-add-add {\\n      font-size: 25px !important; }\\n\\nnav.ng2-smart-pagination-nav {\\n  display: flex;\\n  justify-content: center; }\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/raw-loader!./~/sass-loader!./src/app/pages/masters/components/Companies/smartTables.scss\n// module id = 1706\n// module chunks = 12","module.exports = \".ng2-smart-table-container table.ng2-smart-table {\\n  color: #000000; }\\n  .ng2-smart-table-container table.ng2-smart-table th, .ng2-smart-table-container table.ng2-smart-table td {\\n    border: 1px solid gainsboro !important;\\n    line-height: 35px;\\n    vertical-align: middle; }\\n  .ng2-smart-table-container table.ng2-smart-table input {\\n    line-height: 1.5 !important; }\\n  .ng2-smart-table-container table.ng2-smart-table tbody tr:hover {\\n    background: rgba(0, 0, 0, 0.03); }\\n  .ng2-smart-table-container table.ng2-smart-table a.ng2-smart-sort-link {\\n    font-size: 14px !important;\\n    color: #000000;\\n    font-weight: 900; }\\n    .ng2-smart-table-container table.ng2-smart-table a.ng2-smart-sort-link.sort {\\n      font-weight: 900 !important; }\\n      .ng2-smart-table-container table.ng2-smart-table a.ng2-smart-sort-link.sort::after {\\n        border-bottom-color: #000000 !important; }\\n  .ng2-smart-table-container table.ng2-smart-table .ng2-smart-actions {\\n    width: 70px;\\n    text-align: center; }\\n    .ng2-smart-table-container table.ng2-smart-table .ng2-smart-actions .actions {\\n      float: none;\\n      text-align: center; }\\n  .ng2-smart-table-container table.ng2-smart-table a.ng2-smart-action {\\n    font-size: 14px !important;\\n    color: #000000;\\n    padding: 0 5px;\\n    display: inline-block; }\\n    .ng2-smart-table-container table.ng2-smart-table a.ng2-smart-action.ng2-smart-action-add-add {\\n      font-size: 25px !important; }\\n\\nnav.ng2-smart-pagination-nav {\\n  display: flex;\\n  justify-content: center; }\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/raw-loader!./~/sass-loader!./src/app/pages/masters/components/PLedger/smartTables.scss\n// module id = 1708\n// module chunks = 12","module.exports = \"<style>\\r\\n  .modal-content {\\r\\n    padding: 1px;\\r\\n    margin: 0px;\\r\\n    float: right;\\r\\n  }\\r\\n\\r\\n  .table-scroll {\\r\\n    overflow-y: scroll;\\r\\n    overflow-x: hidden;\\r\\n  }\\r\\n\\r\\n  tbody>tr:hover {\\r\\n    background-color: #f3f5f4;\\r\\n    cursor: pointer;\\r\\n  }\\r\\n\\r\\n  tr {\\r\\n    font-size: 11px;\\r\\n  }\\r\\n\\r\\n  .selected-row {\\r\\n    background-color: #ced6d3 !important;\\r\\n  }\\r\\n\\r\\n  .modal-sticky-account {\\r\\n    position: fixed;\\r\\n    right: 5px;\\r\\n    width: 50%;\\r\\n    height: 74%;\\r\\n    z-index: 9999999;\\r\\n  }\\r\\n\\r\\n  .table>tbody>tr>td {\\r\\n    line-height: 30px !important;\\r\\n  }\\r\\n</style>\\r\\n<div class=\\\"modal-sticky-account\\\" [class.modal-sticky-hide]=\\\"!isActive\\\"\\r\\n  style=\\\"display : block; padding: 0px;margin-top: -14px;\\\">\\r\\n  <!-- Modal content -->\\r\\n  <div class=\\\"modal-content\\\" *ngIf=\\\"popupsettings\\\" style=\\\"\\r\\n            background-color: #f5f5f5 !important\\\">\\r\\n    <div class=\\\"modal-header\\\" style=\\\"padding: 0px;\\\">\\r\\n      <h4 class=\\\"modal-title\\\" style=\\\"text-align: center;\\\">\\r\\n        {{ popupsettings.title }}\\r\\n      </h4>\\r\\n    </div>\\r\\n    <div class=\\\"row clearfix\\\">\\r\\n      <div class=\\\"col-md-12\\\">\\r\\n        <div class=\\\"col-md-6\\\" style=\\\"margin: 2px 0px;\\\">\\r\\n          <select style=\\\"width: 100%;\\\" [(ngModel)]=\\\"filterOption\\\" (ngModelChange)=\\\"triggerSearch($event)\\\">\\r\\n            <option [value]=\\\"\\\" selected>Select Filter Option</option>\\r\\n            <option [value]=\\\"item.key\\\" *ngFor=\\\"let item of popupsettings.columns\\\">{{ item.title }}</option>\\r\\n          </select>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-6\\\" style=\\\"margin: 2px 0px;\\\">\\r\\n          <input #inputBox type=\\\"text\\\" style=\\\"width: 100%;\\\" placeholder=\\\"enter text for search\\\"\\r\\n            [(ngModel)]=\\\"filterValue\\\" (ngModelChange)=\\\"triggerSearch($event)\\\" />\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-12 table-scroll\\\" style=\\\"height: 30%;max-height: 380px\\\">\\r\\n      <table class=\\\"table\\\">\\r\\n        <thead>\\r\\n          <tr style=\\\"    background: #63bbb2;\\\">\\r\\n            <th *ngFor=\\\"let item of popupsettings.columns\\\">{{ item.title }}</th>\\r\\n          </tr>\\r\\n        </thead>\\r\\n        <tbody *ngIf=\\\"itemList\\\">\\r\\n          <!-- (dblclick)=\\\"doubleClick(itemObj)\\\" -->\\r\\n          <tr class=\\\"highlight\\\" [class.selected-row]=\\\"selectedRowIndex == i\\\" *ngFor=\\\"\\r\\n                    let itemObj of itemList \\r\\n                      | filter: filterOption :filterValue  \\r\\n                      | paginate\\r\\n                        : {\\r\\n                            id: tabindex,\\r\\n                            itemsPerPage: pageSize,\\r\\n                            currentPage: pageNumber \\r\\n                          };\\r\\n                    let i = index\\r\\n                  \\\" (click)=\\\"singleClick(i,itemObj)\\\" title=\\\"click for detail view\\\">\\r\\n            <td *ngFor=\\\"let item of popupsettings.columns\\\" style=\\\"text-align: left !important;\\\">\\r\\n              {{ itemObj[item.key] }}\\r\\n            </td>\\r\\n          </tr>\\r\\n        </tbody>\\r\\n      </table>\\r\\n      <div class=\\\"row clearfix\\\" style=\\\"float: center; margin : 4px 0px;\\\">\\r\\n        <div class=\\\"col-md-12\\\" style=\\\"width:100%\\\" *ngIf=\\\"itemList.length\\\">\\r\\n          <pagination-controls [id]=\\\"tabindex\\\" (pageChange)=\\\"onPageChange($event)\\\" maxSize=\\\"5\\\" directionLinks=\\\"true\\\"\\r\\n            autoHide=\\\"true\\\" responsive=\\\"true\\\" previousLabel=\\\"Previous\\\" nextLabel=\\\"Next\\\"\\r\\n            screenReaderPaginationLabel=\\\"Pagination\\\" screenReaderPageLabel=\\\"page\\\"\\r\\n            screenReaderCurrentLabel=\\\"Account List\\\"></pagination-controls>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/common/popupLists/AGroupPopup/ForAccountLedger.component.html\n// module id = 1716\n// module chunks = 12","module.exports = \"<style>\\r\\n  .modal-content {\\r\\n    padding: 1px;\\r\\n    margin: 0px;\\r\\n    float: right;\\r\\n  }\\r\\n  .table-scroll {\\r\\n    overflow-y: scroll;\\r\\n    overflow-x: hidden;\\r\\n  }\\r\\n\\r\\n  tbody > tr:hover {\\r\\n    background-color: #f3f5f4;\\r\\n    cursor: pointer;\\r\\n  }\\r\\n  tr{\\r\\n    font-size: 11px;\\r\\n  }\\r\\n  .selected-row{\\r\\n    background-color: #ced6d3 !important;\\r\\n  }\\r\\n  .td{\\r\\n    text-align: left;\\r\\n  }\\r\\n</style>\\r\\n<div\\r\\n  class=\\\"modal-sticky\\\"\\r\\n  [class.modal-sticky-hide]=\\\"!isActive\\\"\\r\\n  style=\\\"display : block; padding: 0px;\\\"\\r\\n>\\r\\n  <!-- Modal content -->\\r\\n  <div\\r\\n    class=\\\"modal-content\\\"\\r\\n    style=\\\"box-shadow: -10px 0px 10px 1px #aaaaaa;\\\"\\r\\n    *ngIf=\\\"popupsettings\\\"\\r\\n  >\\r\\n    <div class=\\\"modal-header\\\" style=\\\"padding: 0px;background: #8cccfb;\\\">\\r\\n      <button class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"hide()\\\">\\r\\n        <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n      </button>\\r\\n      <h4 class=\\\"modal-title\\\" style=\\\"text-align: center;\\\">\\r\\n        {{ popupsettings.title }}\\r\\n      </h4>\\r\\n    </div>\\r\\n    <div class=\\\"row clearfix\\\">\\r\\n      <div class=\\\"col-md-12\\\">\\r\\n        <div class=\\\"col-md-6\\\" style=\\\"margin: 2px 0px;\\\">\\r\\n          <select\\r\\n            style=\\\"width: 100%;\\\"\\r\\n            [(ngModel)]=\\\"filterOption\\\"\\r\\n            (ngModelChange)=\\\"triggerSearch($event)\\\"\\r\\n          >\\r\\n            <option [value]=\\\"\\\" selected>Select Filter Option</option>\\r\\n            <option\\r\\n              [value]=\\\"item.key\\\"\\r\\n              *ngFor=\\\"let item of popupsettings.columns\\\"\\r\\n              >{{ item.title }}</option\\r\\n            >\\r\\n          </select>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-6\\\" style=\\\"margin: 2px 0px;\\\">\\r\\n          <input\\r\\n            #inputBox\\r\\n            type=\\\"text\\\"\\r\\n            style=\\\"width: 100%;\\\"\\r\\n            placeholder=\\\"enter text for search\\\"\\r\\n            [(ngModel)]=\\\"filterValue\\\"\\r\\n            (ngModelChange)=\\\"triggerSearch($event)\\\"\\r\\n          />\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-12 table-scroll\\\" style=\\\"height: 30%;\\\">\\r\\n      <table class=\\\"table\\\">\\r\\n        <thead>\\r\\n          <tr style=\\\"background: #8cccfb;\\\">\\r\\n            <th *ngFor=\\\"let item of popupsettings.columns\\\">{{ item.title }}</th>\\r\\n          </tr>\\r\\n        </thead>\\r\\n        <tbody *ngIf=\\\"itemList\\\">\\r\\n          <tr\\r\\n            class=\\\"highlight\\\"\\r\\n            [class.selected-row]= \\\"selectedRowIndex == i\\\"\\r\\n            *ngFor=\\\"\\r\\n              let itemObj of itemList\\r\\n                | filter: filterOption :filterValue\\r\\n                | paginate\\r\\n                  : {\\r\\n                      id: tabindex,\\r\\n                      itemsPerPage: pageSize,\\r\\n                      currentPage: pageNumber\\r\\n                    };\\r\\n              let i = index\\r\\n            \\\"\\r\\n            (dblclick)=\\\"doubleClick(itemObj)\\\"\\r\\n            (click)=\\\"singleClick(i)\\\"\\r\\n            title=\\\"double click for detail view\\\"\\r\\n          >\\r\\n            <td *ngFor=\\\"let item of popupsettings.columns\\\">\\r\\n              {{ itemObj[item.key] }}\\r\\n            </td>\\r\\n          </tr>\\r\\n        </tbody>\\r\\n      </table>\\r\\n      <div class=\\\"row clearfix\\\" style=\\\"float: center; margin : 4px 0px;\\\">\\r\\n        <div class=\\\"col-md-12\\\" style=\\\"width:100%\\\" *ngIf=\\\"itemList.length\\\">\\r\\n          <pagination-controls\\r\\n            [id]=\\\"tabindex\\\"\\r\\n            (pageChange)=\\\"onPageChange($event)\\\"\\r\\n            maxSize=\\\"9\\\"\\r\\n            directionLinks=\\\"true\\\"\\r\\n            autoHide=\\\"true\\\"\\r\\n            responsive=\\\"true\\\"\\r\\n            previousLabel=\\\"Previous\\\"\\r\\n            nextLabel=\\\"Next\\\"\\r\\n            screenReaderPaginationLabel=\\\"Pagination\\\"\\r\\n            screenReaderPageLabel=\\\"page\\\"\\r\\n            screenReaderCurrentLabel=\\\"You're on page\\\"\\r\\n          ></pagination-controls>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/common/popupLists/AGroupPopup/account-group-popup-grid.component.html\n// module id = 1717\n// module chunks = 12","module.exports = \"<style>\\r\\n  label {\\r\\n    width: 150px;\\r\\n    font-size: 15px;\\r\\n    color: #403c3c;\\r\\n  }\\r\\n\\r\\n  input {\\r\\n    height: 30px;\\r\\n  }\\r\\n\\r\\n \\r\\n</style>\\r\\n\\r\\n<div class=\\\"sticky-top\\\">\\r\\n  <div class=\\\"row clearfix\\\" style=\\\" padding: 0px 20px;\\\">\\r\\n    <div class=\\\"col-md-6\\\">\\r\\n      <h3 class=\\\"page-title\\\">{{ Title }}</h3>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-6\\\" style=\\\"float: right;\\\"></div>\\r\\n    <button type=\\\"button \\\" class=\\\"btn btn-info pull-right\\\" (click)=\\\"cancel()\\\" style=\\\"margin-right : 10px;\\\">\\r\\n      Back\\r\\n    </button>\\r\\n    <button type=\\\"button\\\" (click)=\\\"SumbitSave()\\\" title=\\\"onSave\\\" class=\\\"btn btn-info pull-right\\\"\\r\\n      style=\\\"margin-right : 10px;\\\">\\r\\n      Save\\r\\n    </button>\\r\\n    <button type=\\\"button\\\" (click)=\\\"SumbitSave()\\\" title=\\\"onSave\\\" class=\\\"btn btn-info pull-right\\\"\\r\\n      [disabled]=\\\"!this.parentGroup\\\" *ngIf=\\\"grp == 'G'\\\" style=\\\"margin-right : 10px;\\\">\\r\\n      Save\\r\\n    </button>\\r\\n  </div>\\r\\n</div>\\r\\n<div class=\\\"main-container\\\" style=\\\"padding-top : 10px; margin-bottom: 0px\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n      <div class=\\\"tabbable\\\" id=\\\"ALEDGER-tabs\\\">\\r\\n        <ul class=\\\"nav nav-tabs\\\">\\r\\n          <li class=\\\"nav-item\\\">\\r\\n            <a class=\\\"nav-link active\\\" href=\\\"#general-info1\\\" data-toggle=\\\"tab\\\">General Info</a>\\r\\n          </li>\\r\\n         \\r\\n          <li class=\\\"nav-item\\\">\\r\\n              <a class=\\\"nav-link\\\" *ngIf='showBank==1 && isGroup == 0 && isGroup == 0' href=\\\"#tab2\\\" data-toggle=\\\"tab\\\">Bank</a>\\r\\n            </li>\\r\\n            <li class=\\\"nav-item\\\">\\r\\n                <a class=\\\"nav-link\\\"  *ngIf='showPLedgerInfo==1 && isGroup == 0 && MasterService.PType == \\\"C\\\"' href=\\\"#tab3\\\" data-toggle=\\\"tab\\\">Customer</a>\\r\\n              </li>\\r\\n              <li class=\\\"nav-item\\\">\\r\\n                  <a class=\\\"nav-link\\\"  *ngIf='showPLedgerInfo==1 && isGroup == 0 && MasterService.PType == \\\"V\\\"' href=\\\"#tab4\\\" data-toggle=\\\"tab\\\">Supplier</a>\\r\\n                </li>\\r\\n        </ul>\\r\\n        <div class=\\\"tab-content\\\">\\r\\n          <div class=\\\"tab-pane active\\\" id=\\\"general-info1\\\">\\r\\n            <form [formGroup]=\\\"form\\\">\\r\\n              <div class=\\\"form-group row\\\">\\r\\n                <div class=\\\"col-sm-12\\\">\\r\\n                  <div class=\\\"col-md-8\\\">\\r\\n                    <div class=\\\"form-group row\\\">\\r\\n                      <label class=\\\"col-sm-3 form-control-label\\\">Group Name*</label>\\r\\n                      <div class=\\\"col-sm-9\\\">\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"ACNAME\\\" placeholder=\\\"Name\\\" />\\r\\n                      </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group row\\\">\\r\\n                      <label class=\\\"col-sm-3 form-control-label\\\">Primary Group*</label>\\r\\n                      <div class=\\\"col-sm-9\\\">\\r\\n                        <select class=\\\"form-control\\\" name=\\\"MainGroup\\\" (change)=\\\"SelectMainGrp()\\\" [(ngModel)]=\\\"Prefix\\\"\\r\\n                          [ngModelOptions]=\\\"{standalone:true}\\\">\\r\\n                          <option *ngFor=\\\"let i of MainGrpList\\\" value=\\\"{{i.ACID}}\\\">{{i.ACNAME}}</option>\\r\\n                        </select>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group row\\\">\\r\\n                      <label class=\\\"col-sm-3 form-control-label\\\">Under:</label>\\r\\n                      <div class=\\\"col-sm-9\\\">\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" [formControl]=\\\"PARENTNAME\\\"\\r\\n                          (keydown.tab)=\\\"onAcGroupPopupTab()\\\" (keydown.enter)=\\\"onAcGroupPopupTab()\\\"\\r\\n                          placeholder=\\\"Press ENTER or TAB to Choose Group\\\" />\\r\\n                      </div>\\r\\n                    </div>\\r\\n                    <!-- <div class=\\\"form-group row\\\">\\r\\n                      <label class=\\\"col-sm-3 form-control-label\\\">ACCode</label>\\r\\n                      <div class=\\\"col-sm-9\\\">\\r\\n                        <input\\r\\n                          type=\\\"text\\\"\\r\\n                          class=\\\"form-control\\\"\\r\\n                          formControlName=\\\"ACCODE\\\"\\r\\n                          placeholder=\\\"CODE\\\"\\r\\n                        />\\r\\n                      </div>\\r\\n                    </div> -->\\r\\n\\r\\n                    <ng-container>\\r\\n                      <div class=\\\"form-group row\\\">\\r\\n                        <label class=\\\"col-sm-3 form-control-label\\\">Has Sub Ledger</label>\\r\\n                        <div class=\\\"col-sm-9\\\">\\r\\n                          <input type=\\\"checkbox\\\" formControlName=\\\"HASSUBLEDGER\\\">\\r\\n\\r\\n                        </div>\\r\\n                      </div>\\r\\n\\r\\n                    </ng-container>\\r\\n                    <!-- <div *ngIf=\\\"showAssets==1\\\" class=\\\"form-group row\\\">\\r\\n                        <label class=\\\"col-sm-3 form-control-label\\\"\\r\\n                          >Assets Type</label\\r\\n                        >\\r\\n                        <div class=\\\"col-sm-9\\\">\\r\\n                          <select\\r\\n                            class=\\\"form-control\\\"\\r\\n                            formControlName=\\\"MAPID\\\"\\r\\n                            style=\\\"height:30px;padding-bottom: 0px;\\\"\\r\\n                          >\\r\\n                            <option value=\\\"C\\\">Cash</option>\\r\\n                            <option value=\\\"O\\\">Others</option>\\r\\n                          </select>\\r\\n                        </div>\\r\\n                      </div>  -->\\r\\n                    <!-- <div class=\\\"form-group row\\\">\\r\\n                        <label class=\\\"col-sm-3 form-control-label\\\"\\r\\n                          >Status*</label\\r\\n                        >\\r\\n                        <div class=\\\"col-sm-9\\\">\\r\\n                          <select\\r\\n                            class=\\\"form-control\\\"\\r\\n                            formControlName=\\\"ISACTIVE\\\"\\r\\n                            style=\\\"height:30px;padding-bottom: 0px;\\\"\\r\\n                          >\\r\\n                            <option value=1>Active</option>\\r\\n                            <option value=0>Inactive</option>\\r\\n                          </select>\\r\\n                        </div>\\r\\n                      </div> -->\\r\\n                    <!-- *ngIf=\\\"AccCurrentSelectedGroup\\\" -->\\r\\n                  </div>\\r\\n                  <div class=\\\"col-md-4\\\">\\r\\n                      <for-account-group-popup-grid #acPopupGrid (onItemDoubleClick)=\\\"onItemDoubleClick($event)\\\" [Prefix]=\\\"Prefix\\\">\\r\\n                        </for-account-group-popup-grid>\\r\\n                  </div>\\r\\n\\r\\n                </div>\\r\\n              </div>\\r\\n            </form>\\r\\n          </div>\\r\\n          \\r\\n          <div class=\\\"tab-pane\\\" id=\\\"tab2\\\" >\\r\\n              <h4>Bank Information</h4>\\r\\n              <bankdetails></bankdetails>\\r\\n            </div>\\r\\n            <div class=\\\"tab-pane\\\" id=\\\"tab3\\\">\\r\\n                <h4>Customer Information</h4>\\r\\n                <PLedger #PLedgerChild [PType]='PTypeForParty'></PLedger>\\r\\n              </div>\\r\\n              <div class=\\\"tab-pane\\\" id=\\\"tab4\\\">\\r\\n                  <h4>Supplier Information</h4>\\r\\n                  <PLedger #PLedgerChild [PType]='PTypeForParty'></PLedger>\\r\\n                </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n</div>\\r\\n\\r\\n\\r\\n<!-- <div bsModal #lgModal=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myLargeModalLabel\\\" aria-hidden=\\\"true\\\">\\r\\n    <div class=\\\"modal-dialog modal-lg\\\">\\r\\n      <div class=\\\"modal-content\\\" style=\\\"margin-top: -210px;width: 106%;height: 480px;margin-left:0px\\\">\\r\\n          <button class=\\\"close\\\" (click)=\\\"CloseParty()\\\" aria-label=\\\"Close\\\">\\r\\n              <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n            </button>\\r\\n        <div class=\\\"modal-body\\\">\\r\\n          <PLedger [title]=\\\"Acctitle\\\"></PLedger>\\r\\n        </div>\\r\\n\\r\\n      </div>\\r\\n    </div>\\r\\n  </div> -->\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/masters/components/ALedger/ALedger.html\n// module id = 1831\n// module chunks = 12","module.exports = \"<div class=\\\"widgets\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n          <button class=\\\"btn btn-info\\\" style=\\\"margin-bottom: 10px;margin-left:18px\\\" (click)=\\\"onAddClick()\\\" >New Account</button>\\r\\n          <button class=\\\"btn btn-info\\\" style=\\\"margin-bottom: 10px;margin-left:18px\\\" (click)=\\\"onGrpAddClick()\\\" >Create Group</button>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\">\\r\\n          <ba-card baCardClass=\\\"with-scroll\\\">\\r\\n            <ng2-smart-table [settings]=\\\"settings\\\" [source]=\\\"source\\\" (edit)=\\\"onEditClick($event)\\\" (deleteConfirm)=\\\"onDeleteConfirm($event)\\\" (view)=\\\"onViewClick($event)\\\"></ng2-smart-table>\\r\\n          </ba-card>\\r\\n        </div>\\r\\n</div>\\r\\n    \"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/masters/components/ALedger/ALedgerTable.html\n// module id = 1832\n// module chunks = 12","module.exports = \"\\r\\n  .table td, .table th{\\r\\n    padding: 0px !important;\\r\\n  }\\r\\n  \\r\\n\\r\\n  tbody {\\r\\n    display:block;\\r\\n    height:62vh;\\r\\n    overflow:auto;\\r\\n}\\r\\n\\r\\nthead, tbody tr {\\r\\n  display:table;\\r\\n  width:100%;\\r\\n  table-layout:fixed;/* even columns width , fix width of table too*/\\r\\n}\\r\\n\\r\\nth{\\r\\n  font-size: 15px;\\r\\n  font-weight: bold;\\r\\n  font-family: Roboto,Arial,sans-serif;\\r\\n}\\r\\n\\r\\ntd{\\r\\n  font-size: 13px;\\r\\n  font-family: Roboto,Arial,sans-serif;\\r\\n\\r\\n}\\r\\n\\r\\n.table tbody tr td{\\r\\n  line-height: 24px;\\r\\n}\\r\\n\\r\\n.btn-sm{\\r\\n  line-height: 3px;\\r\\n}\\r\\n\\r\\n.btn-info{\\r\\n    margin: auto 1px;\\r\\n}\\r\\n\\r\\n.form-control{\\r\\n  font-size: 12px !important;\\r\\n}\\r\\n\\r\\n\\r\\n.searchBy{\\r\\n  font-size: 13px;\\r\\n  margin-left: 18rem;\\r\\n}\\r\\n\\r\\n.selectrow{\\r\\n  padding: 0px 15px;\\r\\n}\\r\\n\\r\\n.plainBackGround{\\r\\n  border: 2px solid #dcdcdc;\\r\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/masters/components/Account-Ledger-New/AccLedgerTable.component.css\n// module id = 1833\n// module chunks = 12","module.exports = \"<div class=\\\"row\\\">\\r\\n  <!-- <ba-card style=\\\"background-color: #6b5656;max-height: 650px !important;\\\" baCardClass=\\\"with-scroll\\\"> -->\\r\\n\\r\\n  <div [ngBusy]=\\\"busy\\\">\\r\\n    <div class=\\\"sticky-top\\\">\\r\\n      <div class=\\\"row clearfix\\\" style=\\\" padding: 0px 20px;\\\">\\r\\n        <div class=\\\"col-md-6\\\">\\r\\n          <label\\r\\n            style=\\\"font-family: Segoe UI Light;font-weight: bold;font-size: 18px;padding-top: 3px;width:152px !important;\\\">ACCOUNT\\r\\n            MASTER</label>\\r\\n          <label *ngIf=\\\"this.AccountService.subTitle\\\"\\r\\n            style=\\\"font-family: Segoe UI Light;font-weight: bold;font-size: 17px;padding-top: 3px;width:auto;\\\">\\r\\n            {{this.AccountService.subTitle}}</label>\\r\\n\\r\\n\\r\\n        </div>\\r\\n        <div class=\\\"col-md-2\\\"></div>\\r\\n\\r\\n        <div class=\\\"col-md-4\\\" style=\\\"float: right;\\\">\\r\\n          <button type=\\\"button \\\" class=\\\"btn btn-info pull-right\\\" (click)=\\\"backToDashboard()\\\"\\r\\n            style=\\\" margin-bottom: 10px;  margin-left: 10px;\\\">\\r\\n            F10 Back\\r\\n          </button>\\r\\n          <button *ngIf=\\\"userSetting.enableMaster_AddEdit==1\\\" [disabled]=\\\"addMode || this.selectedNode==undefined\\\" type=\\\"button\\\" class=\\\"btn btn-info pull-right\\\"\\r\\n            (click)=\\\"AddLedger()\\\" style=\\\" margin-bottom: 10px;  margin-left: 10px;\\\">Add Account</button>\\r\\n          <button *ngIf=\\\"userSetting.enableMaster_AddEdit==1\\\" [disabled]=\\\"addMode || this.selectedNode==undefined\\\" type=\\\"button\\\" class=\\\"btn btn-info pull-right\\\" (click)=\\\"AddGroup(Tree)\\\"\\r\\n            style=\\\"margin-bottom: 10px;\\\">Add Group</button>\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-info pull-right\\\" (click)=\\\"ExportAccountLedger()\\\" style=\\\"margin-right : 10px;width:100px\\\">Export Account</button>\\r\\n          <!-- <button [disabled]=\\\"addMode\\\" type=\\\"button\\\" class=\\\"btn btn-info pull-right\\\" (click)=\\\"ExportPartyLedger()\\\"\\r\\n            style=\\\"margin-bottom: 10px;margin-right: 11px;\\\">Export Account</button> -->\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"col-md-3 \\\" style=\\\"padding-top: 40px; \\\">\\r\\n    <div class=\\\"col-md-12\\\" style=\\\"padding: 0px\\\">\\r\\n      <!-- <button [disabled]=\\\"addMode\\\" type=\\\"button\\\" class=\\\"btn btn-info right\\\" (click)=\\\"AddGroup(Tree)\\\" style=\\\"margin-bottom: 10px;\\\">Add Group</button>\\r\\n                <button [disabled]=\\\"addMode || this.selectedNode==undefined\\\" type=\\\"button\\\" class=\\\"btn btn-info right\\\" (click)=\\\"AddLedger()\\\" style=\\\" margin-bottom: 10px;  margin-left: 10px;\\\">Add Party</button> -->\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"plainBackGround\\\">\\r\\n      <form>\\r\\n        <fieldset [class.disabledbutton]=\\\"addMode\\\" [disabled]=\\\"addMode\\\"\\r\\n          style=\\\"border:0px solid;border-color:#dcdcdc; margin-top: -10px;\\\" *ngIf=\\\"mode != 'add' && mode != 'edit'\\\">\\r\\n          <input name=\\\"filter\\\" #filter (keyup)=\\\"filterNodes(filter.value, tree)\\\" placeholder=\\\"&nbsp; Search Account\\\"\\r\\n            class=\\\"filterclass\\\" />\\r\\n          <div id=treediv>\\r\\n            <div\\r\\n              style=\\\"overflow: auto; border: black;border-width: 2px;height: 500px;background:white;font-size:12px; margin-left: -8px; width: 106%;\\\">\\r\\n              <Tree #tree [nodes]=\\\"nodes\\\" [focused]=\\\"true\\\" [options]=\\\"customTemplateStringOptions\\\"\\r\\n                (onEvent)=\\\"onEvent($event)\\\" (onActivate)=\\\"onselect(tree,$event)\\\">\\r\\n                <ng-template #treeNodeTemplate let-node>\\r\\n                  <!-- <span title=\\\"{{node.data.subTitle}}\\\" [contextMenu]=\\\"myContextMenu\\\" [contextMenuSubject]=\\\"node.data\\\">{{ node.data.ACNAME }}{{ childrenCount(node) }}</span> -->\\r\\n                  <span title=\\\"{{node.data.subTitle}} \\\" [contextMenu]=\\\"myContextMenu\\\" [contextMenuSubject]=\\\"node.data \\\"\\r\\n                    style=\\\"margin-left:24px\\\"><img src=\\\"../../../assets/img/Folder.jpg\\\" alt=\\\"Group\\\" height=\\\"20\\\"\\r\\n                      width=\\\"20\\\" style=\\\"margin-top:-2px\\\">\\r\\n                    {{ node.data.ACNAME }}\\r\\n                  </span>\\r\\n                </ng-template>\\r\\n                <ng-template #loadingTemplate>Loading, please hold....</ng-template>\\r\\n              </Tree>\\r\\n\\r\\n            </div>\\r\\n            <br>\\r\\n          </div>\\r\\n        </fieldset>\\r\\n\\r\\n        <!--select field-->\\r\\n        <fieldset \\r\\n          style=\\\"border:2px solid;border-color:#dcdcdc; padding: 5px 5px; height:77vh\\\"\\r\\n           *ngIf=\\\"mode == 'add' || mode == 'edit'\\\"\\r\\n           [disabled]=\\\"masterService.disableGroupSelection\\\">\\r\\n          \\r\\n          <div class=\\\"row\\\">\\r\\n            <label class=\\\"form-control-label col-md-4 \\\" style=\\\"width: auto;\\\">Main Group :</label>\\r\\n            <div class=\\\"col-md-7\\\">\\r\\n                <hr>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"row selectrow\\\">\\r\\n            <select id=\\\"mainGroup\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"masterService.groupSelectObj.MGROUP\\\" [ngModelOptions]=\\\"{standalone: true}\\\" (change)=\\\"getSubgroupA($event)\\\">\\r\\n                <option [value]=\\\"\\\"></option>\\r\\n                <option *ngFor=\\\"let main of masterService.mainGroupList;let i=index\\\" [value]=\\\"main.ACID\\\">{{main?.ACNAME}}</option>\\r\\n            </select>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\">\\r\\n            <label class=\\\"form-control-label col-md-4 \\\" style=\\\"width: auto;\\\">Sub Group (A) :</label>\\r\\n            <div class=\\\"col-md-7\\\">\\r\\n                <hr>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"row selectrow\\\">\\r\\n            <select class=\\\"form-control\\\" [(ngModel)]=\\\"masterService.groupSelectObj.SUBGROUP_A\\\" [disabled]=\\\"masterService.disableSubGroupA\\\" [ngModelOptions]=\\\"{standalone: true}\\\" (change)=\\\"getSubgroupB($event)\\\" >\\r\\n                <option [value]=\\\"\\\"></option>\\r\\n                <option *ngFor=\\\"let sub of masterService.subGroupAList;let i=index\\\" [value]=\\\"sub.ACID\\\">{{sub?.ACNAME}}</option>\\r\\n            </select>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\">\\r\\n            <label class=\\\"form-control-label col-md-4 \\\" style=\\\"width: auto;\\\" >Sub Group (B) :</label>\\r\\n            <div class=\\\"col-md-7\\\">\\r\\n                <hr>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"row selectrow\\\">\\r\\n            <select class=\\\"form-control\\\" [(ngModel)]=\\\"masterService.groupSelectObj.SUBGROUP_B\\\" [disabled]=\\\"masterService.disableSubGroupB\\\" [ngModelOptions]=\\\"{standalone: true}\\\" (change)=\\\"getSubgroupC($event)\\\">\\r\\n                <option [value]=\\\"\\\"></option>\\r\\n                <option *ngFor=\\\"let sub of masterService.subGroupBList; let i=index\\\" [value]=\\\"sub.ACID\\\">{{sub?.ACNAME}}</option>\\r\\n            </select>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\">\\r\\n            <label class=\\\"form-control-label col-md-4 \\\" style=\\\"width: auto;\\\" >Sub Group (C) :</label>\\r\\n            <div class=\\\"col-md-7 pd0\\\">\\r\\n                <hr>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"row selectrow\\\">\\r\\n            <select class=\\\"form-control\\\"  [(ngModel)]=\\\"masterService.groupSelectObj.SUBGROUP_C\\\" [disabled]=\\\"masterService.disableSubGroupC\\\" [ngModelOptions]=\\\"{standalone: true}\\\" (change)=\\\"selectSubgroupC($event)\\\">\\r\\n                <option *ngFor=\\\"let sub of masterService.subGroupCList; let i = index\\\" [value]=\\\"sub.ACID\\\">{{sub?.ACNAME}}</option>\\r\\n            </select>\\r\\n        </div>\\r\\n        </fieldset>\\r\\n      </form>\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n\\r\\n\\r\\n  <!-- </ba-card> -->\\r\\n\\r\\n  <div *ngIf=\\\"!addMode\\\" class=\\\"col-md-9\\\" style=\\\"padding-left: 5px;padding-top: 40px;background-color: white;\\\">\\r\\n    <!-- <ng2-smart-table [settings]=\\\"settings\\\" [source]=\\\"source\\\" (edit)=\\\"onEditClick($event)\\\" (delete)=\\\"onDeleteConfirm($event)\\\"\\r\\n          (view)=\\\"onViewClick($event)\\\"></ng2-smart-table> -->\\r\\n    <div class=\\\"row\\\" style=\\\"margin:10px 12px\\\">\\r\\n      <div class=\\\"col-md-4\\\" style=\\\"margin-top: 3px;\\\">\\r\\n        <input type=\\\"radio\\\" name=\\\"item\\\" [(ngModel)]=\\\"searchParty\\\" #searchPartyByName=\\\"ngModel\\\"\\r\\n          value=\\\"searchByName\\\">&nbsp; Search By Name &nbsp;&nbsp;\\r\\n        <input type=\\\"radio\\\" name=\\\"item\\\" [(ngModel)]=\\\"searchParty\\\" #searchPartyByVat=\\\"ngModel\\\" value=\\\"searchByVat\\\">&nbsp;\\r\\n        Search By Acc Code. &nbsp;&nbsp;\\r\\n        \\r\\n      </div>\\r\\n      <div class=\\\"col-md-4\\\" style=\\\"padding-left: 0px;\\\">\\r\\n        <input type=\\\"text\\\" name=\\\"search\\\" [(ngModel)]=\\\"partyFilter\\\" #searchFilter=\\\"ngModel\\\" class=\\\"form-control\\\"\\r\\n          placeholder=\\\"Search...\\\" style=\\\"width: 95%; height: 1.7rem; padding: 0px 6px;\\\">\\r\\n      </div>\\r\\n      <div class=\\\"col-md-4\\\" style=\\\"padding-left: 0px;\\\">\\r\\n      <input type=\\\"radio\\\" name=\\\"sortItem\\\" [(ngModel)]=\\\"AccountService.sortAccount\\\"  value=\\\"sortByName\\\" (change)=\\\"sortAccountListByName()\\\">&nbsp;\\r\\n        Sort By Name &nbsp;\\r\\n        <input type=\\\"radio\\\" name=\\\"sortItem\\\" [(ngModel)]=\\\"AccountService.sortAccount\\\" value=\\\"sortByDate\\\" (change)=\\\"sortAccountListByDate()\\\">&nbsp;\\r\\n        Sort By Date &nbsp;\\r\\n        <button class=\\\"btn btn-info\\\" (click)=\\\"showAllAccountList()\\\">Show All</button>\\r\\n        <!-- <input type=\\\"radio\\\" name=\\\"sortItem\\\" [(ngModel)]=\\\"AccountService.sortAccount\\\" value=\\\"showAll\\\" (change)=\\\"showAllAccountList()\\\">&nbsp;\\r\\n        Show All &nbsp; -->\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n      <table class=\\\"table table-striped\\\" style=\\\"margin-left: 1rem; width: 97%;\\\">\\r\\n        <thead>\\r\\n          <tr style=\\\"position: sticky; top:0;line-height: 2.4rem;\\\">\\r\\n            <th scope=\\\"col\\\" style=\\\"width:2%\\\">S.N</th>\\r\\n            <th scope=\\\"col\\\" style=\\\"width:12%\\\">Account Name</th>\\r\\n            <th scope=\\\"col\\\" style=\\\"width:8%\\\">Account Code</th>\\r\\n            <th scope=\\\"col\\\" style=\\\"width:8%\\\">Account Type</th>\\r\\n            <th scope=\\\"col\\\" style=\\\"width:8%\\\">Parent Group</th>\\r\\n\\r\\n            <th scope=\\\"col\\\" style=\\\"width:10%; text-align: center;\\\">Action</th>\\r\\n          </tr>\\r\\n        </thead>\\r\\n        <tbody>\\r\\n          <ng-container *ngIf=\\\"this.AccountService.partyList && this.AccountService.partyList.length >0\\\">\\r\\n            <tr\\r\\n              *ngFor=\\\"let party of (this.AccountService.partyList|searchData:partyFilter:searchParty|paginate:{itemsPerPage:itemsPerPage,currentPage: currentPage,totalItems: totalCount}); let i=index\\\">\\r\\n              <td style=\\\"width:2%\\\">{{i+1}}</td>\\r\\n              <td style=\\\"width:12%\\\">{{party.ACNAME}}</td>\\r\\n              <td style=\\\"width:8%\\\">{{party.ACCODE}}</td>\\r\\n              <td style=\\\"width:8%\\\">{{party.ACTYPE_NAME}}</td>\\r\\n             <td style=\\\"width:8%\\\">{{party.PARENT_NAME}}</td>\\r\\n\\r\\n             \\r\\n              <td style=\\\"width:10%; text-align: center;\\\">\\r\\n\\r\\n                <a data-toggle=\\\"modal\\\" (click)=\\\"onViewClick(party)\\\">View&nbsp;&nbsp;</a>\\r\\n                <a *ngIf=\\\"userSetting.enableMaster_AddEdit==1\\\" data-toggle=\\\"modal\\\" (click)=\\\"onEditClick(party)\\\">Edit</a>\\r\\n\\r\\n              </td>\\r\\n            </tr>\\r\\n          </ng-container>\\r\\n\\r\\n          <ng-container *ngIf=\\\"this.AccountService.partyList && (this.AccountService.partyList|searchData:partyFilter:searchParty).length === 0\\\">\\r\\n            <tr>\\r\\n              <td colspan=\\\"8\\\">\\r\\n                <div class=\\\"font-weight-bold\\\">Account Ledger Information are unavailable.</div>\\r\\n              </td>\\r\\n            </tr>\\r\\n          </ng-container>\\r\\n        </tbody>\\r\\n      </table>\\r\\n      <div class=\\\"pagination\\\"\\r\\n        *ngIf=\\\"this.AccountService.partyList && (this.AccountService.partyList|searchData:partyFilter:searchParty).length > itemsPerPage\\\">\\r\\n        <div style=\\\"margin-left: 18rem;\\\">\\r\\n          <pagination-controls (pageChange)=\\\"partyPagination($event)\\\"></pagination-controls>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div *ngIf=\\\"addMode\\\" class=\\\"col-md-9\\\" style=\\\"padding-left: 5px;padding-top: 30px;overflow: scroll;height: 600px;\\\">\\r\\n    <addAccLedgerSelector [Title]=\\\"modeTitle\\\" [acid]=\\\"selectedNode?.ACID\\\" [PARENTID]=\\\"selectedNode?.PARENT\\\"\\r\\n       [rootID]=\\\"root\\\" (onClose)=\\\"onAddClose($event)\\\" [mode]=\\\"mode\\\" [grp]=\\\"grp\\\"\\r\\n      (EditPartyEmit)=\\\"EditPartyEmit()\\\" (SavePartyEmit)=\\\"SavePartyEmit($event)\\\" [parentGroupID] = \\\"parentGroupID\\\" [parentIdOnEdit]=\\\"selectedNode?.PARENT_CODE\\\" [selectedNode]=\\\"selectedNode\\\" [nodes]=\\\"nodes\\\" [overdraft]=\\\"overdraftIs\\\" [isBank]=\\\"isBank\\\" ></addAccLedgerSelector>\\r\\n  </div>\\r\\n  <context-menu #myContextMenu>\\r\\n    <ng-template *ngFor=\\\"let action of contextMenuActions\\\" contextMenuItem let-item [visible]=\\\"action.visible\\\"\\r\\n      [enabled]=\\\"action.enabled\\\" [divider]=\\\"action.divider\\\" (execute)=\\\"contextMenuClick($event.item,action)\\\">\\r\\n      {{ action.html(item) }}\\r\\n    </ng-template>\\r\\n  </context-menu>\\r\\n</div>\\r\\n\\r\\n\\r\\n\\r\\n<div>\\r\\n  <div class=\\\"modal fade\\\" bsModal #DeleteAcc=\\\"bs-modal\\\" [config]=\\\"{backdrop: 'static'}\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\"\\r\\n    aria-labelledby=\\\"mySmallModalLabel\\\" aria-hidden=\\\"true\\\" style=\\\"margin:-10rem;height:34rem\\\">\\r\\n    <div class=\\\"modal-dialog modal-sm\\\">\\r\\n      <div class=\\\"modal-content\\\" style=\\\"width: 420px;\\\">\\r\\n        <div class=\\\"modal-header\\\">\\r\\n          <button class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"onClickNo()\\\">\\r\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n\\r\\n          </button>\\r\\n          <h4 class=\\\"modal-title\\\">Delete Account</h4>\\r\\n        </div>\\r\\n        <div class=\\\"modal-body\\\">\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-12\\\" style=\\\"margin-top: -10px;margin-bottom: 12px;\\\">\\r\\n              Are you sure you want to delete this account?\\r\\n            </div>\\r\\n            <div class=\\\"col-md-12\\\">\\r\\n              <button (click)=\\\"DeleteYes()\\\" style=\\\"margin-right: 4px;\\\" class=\\\"btn btn-danger \\\">Yes</button>\\r\\n              <button (click)=\\\"DeleteNo()\\\" type=\\\"button \\\" class=\\\"btn btn-warning\\\">No</button>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n<style>\\r\\n  .filterclass {\\r\\n    margin: 10px;\\r\\n    margin-left: -8px;\\r\\n    height: 28px;\\r\\n    width: 284px;\\r\\n    color: #666666;\\r\\n    border: 1px solid #cbcbcb;\\r\\n    border-radius: 5px;\\r\\n    background-color: #ffffff;\\r\\n    box-shadow: none;\\r\\n    font-size: 14px;\\r\\n  }\\r\\n</style>\\r\\n<!-- <div class=\\\"modal-sticky\\\" *ngIf=\\\"showPartyLedgerFilterpopUp\\\" style=\\\"display: block;\\r\\npadding: 0px;\\r\\nmargin-bottom: 159px;\\r\\nheight: 241px;\\r\\nposition: absolute;\\r\\nright: 30%;\\r\\n/* top: 5px; */\\r\\nwidth: 550px;\\r\\nz-index: 9999999;\\r\\nborder: 1px solid;background: white;\\\">\\r\\n\\r\\n  <div class=\\\"modal-content modal-content-main-area\\\">\\r\\n    <div class=\\\"modal-header\\\" style=\\\"height: 40px;padding-bottom: 6%;\\\">\\r\\n      <h4 class=\\\"modal-title\\\" id=\\\"myModalLabel\\\">Ledger filter </h4>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"col-md-12\\\" style=\\\"height: 226px; margin-top : 10px;    margin-left: 3%;\\\">\\r\\n\\r\\n      <div class=\\\"row\\\" style=\\\"margin-top: 8px;\\\">\\r\\n        <div class=\\\"col-sm-4\\\">\\r\\n          <label class=\\\"form-control-label\\\">Party Group : </label>\\r\\n        </div>\\r\\n\\r\\n        <select class=\\\"col-sm-8\\\" style=\\\"width: 56%;\\\" [(ngModel)] = \\\"LedgerFilterObj.type\\\" (change)=\\\"changeType()\\\">\\r\\n          <option value =\\\"Customer\\\">Customer</option>\\r\\n          <option value =\\\"Supplier\\\">Supplier</option>\\r\\n        </select>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"row\\\" style=\\\"margin-top: 8px;\\\">\\r\\n        <div class=\\\"col-sm-4\\\">\\r\\n          <label class=\\\"form-control-label\\\">Party Type : </label>\\r\\n        </div>\\r\\n\\r\\n\\r\\n        <select class=\\\"col-sm-8\\\" style=\\\"width: 56%;\\\" [(ngModel)] = \\\"LedgerFilterObj.accountType\\\">\\r\\n          <option *ngFor=\\\"let i of GeoList\\\" value=\\\"{{i.OrgTypeCode}}\\\" >{{\\r\\n            i.OrgTypeName\\r\\n            }}</option>\\r\\n        </select>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"row\\\" style=\\\"margin-top: 8px;\\\">\\r\\n        <div class=\\\"col-sm-4\\\">\\r\\n          <label class=\\\"form-control-label\\\">Party Name : </label>\\r\\n        </div>\\r\\n        <div class=\\\"col-sm-8\\\">\\r\\n          <input type=\\\"text\\\" [(ngModel)]=\\\"LedgerFilterObj.accountName\\\" style=\\\"height:24px;width: 92% !important;margin-left: -5%;\\\"\\r\\n          (keydown.Enter)=\\\"showAcList(i);\\\"\\r\\n           placeholder=\\\"Press Enter to select\\\" autocomplete=\\\"off\\\">\\r\\n\\r\\n        </div>\\r\\n      </div>\\r\\n      <div style=\\\"float: right;\\r\\n      margin-top: 14px;\\r\\n      margin-right: 9%;\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" style=\\\"background: #3caed0;border-color: #2dacd1;\\\" (click)=\\\"OkCommand()\\\">Apply</button>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" style=\\\"background: #3caed0;border-color: #2dacd1;\\\" (click)=\\\"ExportAll()\\\">Export\\r\\n          All</button>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" style=\\\"background: #3caed0;border-color: #2dacd1;\\\" (click)=\\\"CancelCommand()\\\">Cancel</button>\\r\\n      </div>\\r\\n\\r\\n\\r\\n    </div>\\r\\n\\r\\n\\r\\n  </div>\\r\\n\\r\\n</div> -->\\r\\n\\r\\n<div class=\\\"modal-sticky\\\" *ngIf=\\\"showAccountLedgerFilterpopUp\\\" style=\\\"display: block;\\r\\npadding: 0px;\\r\\nmargin-bottom: 159px;\\r\\nheight: 241px;\\r\\nposition: absolute;\\r\\nright: 30%;\\r\\n/* top: 5px; */\\r\\nwidth: 550px;\\r\\nz-index: 9999999;\\r\\nborder: 1px solid;background: white;\\\">\\r\\n\\r\\n  <div class=\\\"modal-content modal-content-main-area\\\">\\r\\n    <div class=\\\"modal-header\\\" style=\\\"height: 40px;padding-bottom: 6%;\\\">\\r\\n      <h4 class=\\\"modal-title\\\" id=\\\"myModalLabel\\\">Ledger filter </h4>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"col-md-12\\\" style=\\\"height: 226px; margin-top : 10px;    margin-left: 3%;\\\">\\r\\n\\r\\n      <div class=\\\"row\\\" style=\\\"margin-top: 8px;\\\">\\r\\n        <div class=\\\"col-sm-4\\\">\\r\\n          <label class=\\\"form-control-label\\\">Account Group : </label>\\r\\n        </div>\\r\\n        <select class=\\\"col-sm-8\\\" style=\\\"width: 56%;\\\" [(ngModel)] = \\\"LedgerFilterObj.MAINGROUP\\\" (ngModelChange)=\\\"changeAccountGroup($event)\\\">\\r\\n          <option *ngFor=\\\"let parent of ParentList\\\" value=\\\"{{parent.ACID}}\\\">{{parent.ACNAME}}</option>\\r\\n        </select>\\r\\n      </div>\\r\\n      <div class=\\\"row\\\" style=\\\"margin-top: 8px;\\\">\\r\\n        <div class=\\\"col-sm-4\\\">\\r\\n          <label class=\\\"form-control-label\\\">Account Type: </label>\\r\\n        </div>\\r\\n        <select class=\\\"col-sm-8\\\" style=\\\"width: 56%;\\\" [(ngModel)] = \\\"LedgerFilterObj.ACCOUNTTYPE\\\" (change)=\\\"changeAccountType()\\\">\\r\\n          <option value=\\\"Group\\\">Group</option>\\r\\n          <option value=\\\"Account\\\">Account</option>\\r\\n        </select>\\r\\n      </div>\\r\\n      <div class=\\\"row\\\" style=\\\"margin-top: 8px;\\\" *ngIf=\\\"LedgerFilterObj.ACCOUNTTYPE == 'Group'\\\">\\r\\n        <div class=\\\"col-sm-4\\\">\\r\\n          <label class=\\\"form-control-label\\\">Sub Account Group : </label>\\r\\n        </div>\\r\\n        <select class=\\\"col-sm-8\\\" style=\\\"width: 56%;\\\" [(ngModel)] = \\\"LedgerFilterObj.SUBGROUP\\\">\\r\\n          <option *ngFor=\\\"let parent of SubGroupAccountMaster\\\" value=\\\"{{parent.ACID}}\\\">{{parent.ACNAME}}</option>\\r\\n        </select>\\r\\n      </div>\\r\\n      <div class=\\\"row\\\" style=\\\"margin-top: 8px;\\\" *ngIf=\\\"LedgerFilterObj.ACCOUNTTYPE == 'Account'\\\">\\r\\n        <div class=\\\"col-sm-4\\\">\\r\\n          <label class=\\\"form-control-label\\\">Account Name : </label>\\r\\n        </div>\\r\\n        <select class=\\\"col-sm-8\\\" style=\\\"width: 56%;\\\" [(ngModel)] = \\\"LedgerFilterObj.ACID\\\">\\r\\n          <option *ngFor=\\\"let parent of ChildrenList\\\" value=\\\"{{parent.ACID}}\\\">{{parent.ACNAME}}</option>\\r\\n        </select>\\r\\n      </div>\\r\\n\\r\\n      <div style=\\\"float: right;\\r\\n      margin-top: 14px;\\r\\n      margin-right: 9%;\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" style=\\\"background: #3caed0;border-color: #2dacd1;\\\" (click)=\\\"OkCommand()\\\">Apply</button>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" style=\\\"background: #3caed0;border-color: #2dacd1;\\\" (click)=\\\"ExportAll()\\\">Export\\r\\n          All</button>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" style=\\\"background: #3caed0;border-color: #2dacd1;\\\" (click)=\\\"CancelCommand()\\\">Cancel</button>\\r\\n      </div>\\r\\n\\r\\n\\r\\n    </div>\\r\\n\\r\\n\\r\\n  </div>\\r\\n\\r\\n</div>\\r\\n\\r\\n<generic-popup-grid #genericGridACList [popupsettings]=\\\"gridACListPopupSettings\\\"\\r\\n  (onItemDoubleClick)=\\\"onAcSelect($event)\\\"></generic-popup-grid>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/masters/components/Account-Ledger-New/AccLedgerTable.component.html\n// module id = 1834\n// module chunks = 12","module.exports = \"<form [formGroup]=\\\"Addform\\\">\\r\\n<div class=\\\"row\\\" class=\\\"form-horizontal\\\">\\r\\n    <ba-card [title]=\\\"modeTitle\\\" baCardClass=\\\"with-scroll\\\">\\r\\n    <div class=\\\"form-group row\\\">\\r\\n    <label class=\\\"col-sm-2 form-control-label\\\">Group Name:</label>\\r\\n    <div class=\\\"col-sm-5\\\">\\r\\n       <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"ACNAME\\\" placeholder=\\\"Group Name\\\">\\r\\n        <div class=\\\"alert alert-danger\\\" *ngIf=\\\"Addform.controls['ACNAME'].touched && !Addform.controls['ACNAME'].valid\\\">GroupName is Required.</div>\\r\\n     \\r\\n    </div> \\r\\n  </div>\\r\\n \\r\\n  </ba-card>\\r\\n    </div>\\r\\n    \\r\\n  <button type=\\\"button\\\" (click)=\\\"onSave()\\\" title=\\\"Save\\\" class=\\\"btn btn-info\\\">Save</button>\\r\\n\\r\\n  <button type=\\\"button\\\" (click)=\\\"cancel()\\\" title=\\\"Cancel\\\" class=\\\"btn btn-info\\\">Back</button>\\r\\n  </form>\\r\\n  <div class=\\\"modal fade\\\" bsModal #childModal=\\\"bs-modal\\\" [config]=\\\"{backdrop: 'static'}\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"mySmallModalLabel\\\"\\r\\n            aria-hidden=\\\"true\\\">\\r\\n            <div class=\\\"modal-dialog modal-sm\\\">\\r\\n                <div class=\\\"modal-content\\\">\\r\\n                    <div class=\\\"modal-header\\\">\\r\\n                        <button class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"hideChildModal()\\\">\\r\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n          \\r\\n        </button>\\r\\n                        <h4 class=\\\"modal-title\\\">Information</h4>\\r\\n                    </div>\\r\\n                    <div class=\\\"modal-body\\\">\\r\\n                        {{DialogMessage}}\\r\\n                    </div>\\r\\n                    <!--<div class=\\\"modal-footer\\\">\\r\\n                        <button class=\\\"btn btn-info confirm-btn\\\" (click)=\\\"hideChildModal()\\\">Save changes</button>\\r\\n                        <button class=\\\"btn btn-info confirm-btn\\\" type=\\\"button\\\" (click)=onsubmit()>Save</button>\\r\\n                    </div>!-->\\r\\n\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n     <div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/masters/components/Account-Ledger-New/addAccMajorgrp.component.html\n// module id = 1835\n// module chunks = 12","module.exports = \"<form [formGroup]=\\\"form\\\">\\r\\n<div class=\\\"row\\\" class=\\\"form-horizontal\\\">\\r\\n    <ba-card [title]=\\\"modeTitle\\\" baCardClass=\\\"with-scroll\\\">\\r\\n    <div class=\\\"form-group row\\\">\\r\\n    <label class=\\\"col-sm-2 form-control-label\\\">Group Name:</label>\\r\\n    <div class=\\\"col-sm-2\\\">\\r\\n        <select style=\\\"width:130px; height:28px;\\\" formControlName=\\\"majorparent\\\">\\r\\n       <option *ngFor=\\\"let code of ParentAcList\\\" [ngValue]=\\\"code.ACID\\\">{{code.ACNAME}}</option>\\r\\n         <!--<div class=\\\"alert alert-danger\\\" *ngIf=\\\"form.controls['ACNAME'].touched && !Addform.controls['ACNAME'].valid\\\">GroupName is Required.</div>-->\\r\\n      </select>\\r\\n     </div>\\r\\n  </div>\\r\\n  <div class=\\\"form-group row\\\">\\r\\n    <label class=\\\"col-sm-2 form-control-label\\\">New SubGroup:</label>\\r\\n    <div class=\\\"col-sm-2\\\">\\r\\n      <input type=\\\"text\\\" class=\\\"form-control\\\"formControlName=\\\"ACNAME\\\">\\r\\n        <div class=\\\"alert alert-danger\\\" *ngIf=\\\"form.controls['ACNAME'].touched && !form.controls['ACNAME'].valid\\\">GroupName is Required.</div>\\r\\n    </div>\\r\\n  </div>\\r\\n <div class=\\\"form-group row\\\">\\r\\n    <label class=\\\"col-sm-2 form-control-label\\\">Has Subledger:</label>\\r\\n    <div class=\\\"col-sm-2\\\">\\r\\n      <input  [value]=1 name=\\\"hasSub\\\" type=\\\"checkbox\\\" (change)=\\\"changehassubEvent(1)\\\">\\r\\n        \\r\\n    </div>\\r\\n  </div>\\r\\n \\r\\n    </ba-card>\\r\\n    </div>\\r\\n    \\r\\n  <button type=\\\"button\\\" (click)=\\\"onSave()\\\" title=\\\"Save\\\" class=\\\"btn btn-info\\\">Save</button>\\r\\n\\r\\n  <button type=\\\"button\\\" (click)=\\\"cancel()\\\" title=\\\"Cancel\\\" class=\\\"btn btn-info\\\">Back</button>\\r\\n </form>\\r\\n  <div class=\\\"modal fade\\\" bsModal #childModal=\\\"bs-modal\\\" [config]=\\\"{backdrop: 'static'}\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"mySmallModalLabel\\\"\\r\\n            aria-hidden=\\\"true\\\">\\r\\n            <div class=\\\"modal-dialog modal-sm\\\">\\r\\n                <div class=\\\"modal-content\\\">\\r\\n                    <div class=\\\"modal-header\\\">\\r\\n                        <button class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"hideChildModal()\\\">\\r\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n          \\r\\n        </button>\\r\\n                        <h4 class=\\\"modal-title\\\">Information</h4>\\r\\n                    </div>\\r\\n                    <div class=\\\"modal-body\\\">\\r\\n                        {{DialogMessage}}\\r\\n                    </div>\\r\\n                    <!--<div class=\\\"modal-footer\\\">\\r\\n                        <button class=\\\"btn btn-info confirm-btn\\\" (click)=\\\"hideChildModal()\\\">Save changes</button>\\r\\n                        <button class=\\\"btn btn-info confirm-btn\\\" type=\\\"button\\\" (click)=onsubmit()>Save</button>\\r\\n                    </div>!-->\\r\\n\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n     <div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/masters/components/Account-Ledger-New/addAccgrp.component.html\n// module id = 1836\n// module chunks = 12","module.exports = \"<style>\\r\\n  label {\\r\\n    width: 150px;\\r\\n    font-size: 15px;\\r\\n    color: #403c3c;\\r\\n  }\\r\\n\\r\\n  input {\\r\\n    height: 30px;\\r\\n  }\\r\\n\\r\\n  label{\\r\\n    font-size: 14px;\\r\\n  }\\r\\n</style>\\r\\n<!-- begin form here -->\\r\\n<form [formGroup]=\\\"form\\\">\\r\\n  \\r\\n  <div class=\\\"main-container\\\" style=\\\"padding-top : 10px; margin-bottom: 0px; margin-top: 0px !important;\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-12\\\">\\r\\n        <div class=\\\"tabbable\\\" id=\\\"warehouse-tabs\\\">\\r\\n          <ul class=\\\"nav nav-tabs\\\">\\r\\n            <li class=\\\"nav-item\\\">\\r\\n              <a class=\\\"nav-link active\\\" href=\\\"#general-info4\\\" data-toggle=\\\"tab\\\">Account Information</a>\\r\\n            </li>\\r\\n           \\r\\n           \\r\\n            <li class=\\\"nav-item\\\">\\r\\n              <a class=\\\"nav-link\\\" href=\\\"#divisionwise-setting\\\" *ngIf=\\\"grp =='A' && enableDivisionMapping == true\\\" data-toggle=\\\"tab\\\">Division Wise Setting</a>\\r\\n            </li>\\r\\n\\r\\n            <!-- <li class=\\\"nav-item\\\">\\r\\n              <a class=\\\"nav-link\\\" href=\\\"#bank-setting\\\" *ngIf=\\\"grp =='A' \\\" data-toggle=\\\"tab\\\">Bank Setting</a>\\r\\n            </li> -->\\r\\n           \\r\\n            <!-- <li class=\\\"nav-item\\\">\\r\\n              <a class=\\\"nav-link\\\" href=\\\"#route\\\" data-toggle=\\\"tab\\\">Route</a>\\r\\n            </li> -->\\r\\n          </ul>\\r\\n                  <!-- <label *ngIf=\\\"modeTitle\\\" style=\\\"font-weight: bold;font-size: 16px;width: 200px;padding-top: 1%;\\\">&nbsp;>> {{ modeTitle}}</label> -->\\r\\n          \\r\\n            <div style=\\\"float: right;padding-top: 8px;padding-right: 8px;\\\">\\r\\n              <button type=\\\"button\\\" (click)=\\\"SumbitSave()\\\" title=\\\"onSave\\\" class=\\\"btn btn-info\\\" \\r\\n      *ngIf=\\\"grp=='A'\\\" [disabled]=\\\"!form.valid || mode=='view'\\\" style=\\\"width:80px;margin-right: 10px;\\\">Save</button>\\r\\n    <button type=\\\"button\\\" (click)=\\\"SumbitSave()\\\" title=\\\"onSave\\\" class=\\\"btn btn-info\\\" *ngIf=\\\"grp=='G'\\\" style=\\\"width:80px;margin-right: 10px;\\\">Save</button>\\r\\n    <button type=\\\"button\\\" (click)=\\\"DeleteLedger()\\\" class=\\\"btn btn-info\\\" *ngIf=\\\"grp ==  'A' && mode == 'view'\\\" style=\\\"width: 80px;margin-right: 10px;\\\">Delete</button>\\r\\n    <button type=\\\"button\\\" (click)=\\\"cancel()\\\" title=\\\"Cancel\\\" class=\\\"btn btn-info\\\" style=\\\"width:80px;\\\">F3 Reset</button>\\r\\n            </div>\\r\\n         \\r\\n          <div class=\\\"tab-content\\\">\\r\\n              <div class=\\\"tab-pane active\\\" id=\\\"general-info4\\\">\\r\\n                <!-- General Info -->\\r\\n                <div class=\\\"form-group row\\\">\\r\\n                  <div class=\\\"col-sm-12\\\">\\r\\n                   <div class=\\\"form-group row\\\" style=\\\"margin-bottom: 10px !important;\\\">\\r\\n                    \\r\\n                        <label class=\\\"col-sm-2 form-control-label\\\" style=\\\"padding-top: 7px;\\\">Parent:</label>\\r\\n                        <!-- [(ngModel)]=\\\"g.value.SELECTEDGROUPAC\\\" [ngModelOptions]=\\\"{standalone: true}\\\" -->\\r\\n                        <div class=\\\"col-sm-3\\\">\\r\\n                          <input type=\\\"text\\\" style=\\\"font-size: 12px !important;\\\" class=\\\"form-control\\\"  placeholder=\\\"Parent\\\" formControlName=\\\"parentid\\\"/>\\r\\n                        </div> \\r\\n                     </div>\\r\\n                     <div *ngIf=\\\"Title == 'AddLedger' || mode=='edit' && grp=='A' || mode=='view' \\\">\\r\\n                      <div class=\\\"form-group row\\\" style=\\\"margin-bottom: 10px !important;\\\">\\r\\n                        <label class=\\\"col-sm-2 form-control-label\\\" style=\\\"padding-top: 7px;\\\">Account Name:</label>\\r\\n                        <div class=\\\"col-sm-8\\\">\\r\\n                          <input *ngIf=\\\"isBank != true\\\" type=\\\"text\\\" #ACNAME style=\\\"font-size: 12px !important;width: 97%;\\\" class=\\\"form-control\\\" formControlName=\\\"ACNAME\\\" placeholder=\\\"Account Name\\\">\\r\\n                          <input *ngIf=\\\"isBank == true\\\" type=\\\"text\\\" #ACNAME style=\\\"font-size: 12px !important;width: 97%;\\\" class=\\\"form-control\\\" formControlName=\\\"ACNAME\\\" \\r\\n                          placeholder=\\\"Type bank name or enter to select Bank name\\\" (keydown.Enter)=\\\"showBankPopup();\\\" >\\r\\n\\r\\n                        </div>\\r\\n                      </div>\\r\\n                      <!-- <div class=\\\"alert alert-danger\\\" *ngIf=\\\"form.controls['ACNAME'].touched && !form.controls['ACNAME'].valid\\\">PartyLedger Name is Required.</div> -->\\r\\n              \\r\\n                     \\r\\n                      <!-- <div class=\\\"alert alert-danger\\\" *ngIf=\\\"form.controls['ADDRESS'].touched && !form.controls['ADDRESS'].valid\\\">Address is Required.</div> -->\\r\\n                    </div>\\r\\n                    <div *ngIf=\\\"Title == 'AddGroup' || mode=='edit'  && grp!='A'\\\" class=\\\"form-group row\\\" style=\\\"margin-bottom: 10px !important;\\\">\\r\\n                      <label class=\\\"col-sm-2 form-control-label\\\" style=\\\"padding-top: 7px;\\\">GroupName:</label>\\r\\n                      <div class=\\\"col-sm-8\\\">\\r\\n                        <input type=\\\"text\\\" #ACNAME formControlName=\\\"ACNAME\\\" style=\\\"font-size: 12px !important;width: 97%;\\\" class=\\\"form-control\\\" placeholder=\\\"Group Name\\\" />\\r\\n                      </div>\\r\\n                    </div>\\r\\n                    \\r\\n                    \\r\\n                    <div class=\\\"form-group row\\\" style=\\\"margin-bottom: 10px !important;\\\">                  \\r\\n                    <label *ngIf=\\\"((Title == 'AddLedger' ||  grp=='A') && MasterService.userSetting.AUTOACCODE ==0) ||(MasterService.userSetting.AUTOACCODE ==1)\\\" class=\\\"col-sm-2 form-control-label\\\" style=\\\"padding-top: 7px;\\\">A/C Code:</label>\\r\\n                    <div *ngIf=\\\"((Title == 'AddLedger' ||  grp=='A') && MasterService.userSetting.AUTOACCODE ==0) ||(MasterService.userSetting.AUTOACCODE ==1)\\\" class=\\\"col-sm-3\\\">\\r\\n                      <input type=\\\"text\\\" id=\\\"ACCODE\\\" style=\\\"font-size: 12px !important;\\\" class=\\\"form-control\\\" formControlName=\\\"ACCODE\\\" placeholder=\\\"Account Code\\\">\\r\\n                      <div class=\\\"alert alert-danger\\\" *ngIf=\\\"form.controls['ACCODE'].touched && !form.controls['ACCODE'].valid\\\">Account Code is Required.</div>\\r\\n                    </div>\\r\\n                    <div *ngIf=\\\"(grp == 'A' && MasterService.userSetting.ENABLESUBLEDGER == 1) || (grp == 'G' && MasterService.userSetting.ENABLESUBLEDGER == 2)\\\" class=\\\"form-group row\\\" style=\\\"margin-bottom: 10px !important;\\\">\\r\\n                      <div class=\\\"col-sm-3\\\">\\r\\n                        <input style=\\\"margin-left:1rem;\\\" type=\\\"checkbox\\\" formControlName=\\\"HASSUBLEDGER\\\">\\r\\n                        <label class=\\\"col-sm-3 form-control-label\\\" style=\\\"padding-top: 7px;\\\">Has Sub Ledger</label>\\r\\n                      </div>\\r\\n                      </div>\\r\\n                   </div>\\r\\n\\r\\n                   <div *ngIf=\\\"(Title == 'AddLedger' || mode=='edit' && grp=='A' || mode=='view') && overdraft == 'OD' \\\">\\r\\n                    <div class=\\\"form-group row\\\" style=\\\"margin-bottom: 10px !important;\\\">\\r\\n                      <label class=\\\"col-sm-2 form-control-label\\\" style=\\\"padding-top: 7px;\\\">Credit Limit :</label>\\r\\n                      <div class=\\\"col-sm-3\\\">\\r\\n                        <input type=\\\"text\\\" style=\\\"font-size: 12px !important;\\\" class=\\\"form-control\\\"  placeholder=\\\"Credit limit\\\" formControlName=\\\"CRLIMIT\\\"/>\\r\\n                      </div> \\r\\n                      </div>\\r\\n                    </div>\\r\\n\\r\\n                   <div *ngIf=\\\"Title == 'AddLedger' || mode=='edit' && grp=='A' || mode=='view' \\\">\\r\\n                    <div class=\\\"form-group row\\\" style=\\\"margin-bottom: 10px !important;\\\">\\r\\n                      <label class=\\\"col-sm-2 form-control-label\\\" style=\\\"padding-top: 7px;\\\">Account Type:</label>\\r\\n                      <div class=\\\"col-sm-3\\\">\\r\\n                        <input type=\\\"text\\\" style=\\\"font-size: 12px !important;\\\" class=\\\"form-control\\\"  placeholder=\\\"AC type\\\" formControlName=\\\"ACTYPE\\\"/>\\r\\n                      </div> \\r\\n                      </div>\\r\\n                      </div>\\r\\n\\r\\n                      <div *ngIf=\\\"(Title == 'AddLedger' || mode=='edit' && grp=='A' || mode=='view') && \\r\\n                      (ACID == MasterService.userSetting.TDS_PAYABLE || \\r\\n                      ACID == MasterService.userSetting.TDS_RECEIVABLE || \\r\\n                      parentValueForEditMode == MasterService.userSetting.TDS_PAYABLE || \\r\\n                      parentValueForEditMode == MasterService.userSetting.TDS_RECEIVABLE ||\\r\\n                      MasterService.groupSelectObj.SUBGROUP_A == MasterService.userSetting.TDS_PAYABLE || \\r\\n                      MasterService.groupSelectObj.SUBGROUP_A == MasterService.userSetting.TDS_RECEIVABLE ||\\r\\n                      MasterService.groupSelectObj.SUBGROUP_B == MasterService.userSetting.TDS_PAYABLE || \\r\\n                      MasterService.groupSelectObj.SUBGROUP_B == MasterService.userSetting.TDS_RECEIVABLE ||\\r\\n                      MasterService.groupSelectObj.SUBGROUP_C == MasterService.userSetting.TDS_PAYABLE || \\r\\n                      MasterService.groupSelectObj.SUBGROUP_C == MasterService.userSetting.TDS_RECEIVABLE)\\\">\\r\\n                        <div class=\\\"form-group row\\\" style=\\\"margin-bottom: 10px !important;\\\">\\r\\n                          <label class=\\\"col-sm-2 form-control-label\\\" style=\\\"padding-top: 7px;\\\">TDS Type:</label>\\r\\n                          <div class=\\\"col-sm-3\\\">\\r\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\"  style=\\\"font-size: 12px !important;\\\" id=\\\"tdstype\\\" formControlName=\\\"TDS_TYPE\\\" name=\\\"tdstype\\\" list=\\\"tdstypelist\\\" (change)=\\\"onChangeTDSType($event)\\\"  \\r\\n                            placeholder=\\\"TDS Type\\\" maxlength=\\\"50\\\" minlength=\\\"2\\\" autocomplete=\\\"off\\\"/>\\r\\n                            <datalist id=\\\"tdstypelist\\\">\\r\\n                              <option *ngFor=\\\"let i of TDSType_List\\\" value=\\\"{{i.TDS_TYPE}}\\\">{{i.TDS_TYPE}}</option>\\r\\n                            </datalist>\\r\\n                          </div> \\r\\n                          </div>\\r\\n                          </div>\\r\\n\\r\\n                      <!-- <div *ngIf=\\\"(Title == 'AddLedger' || mode=='edit' && grp=='A' || mode=='view') && isBank==true\\\">\\r\\n                        <div class=\\\"form-group row\\\" style=\\\"margin-bottom: 10px !important;\\\">\\r\\n                          <label class=\\\"col-sm-2 form-control-label\\\" style=\\\"padding-top: 7px;\\\">Account No:</label>\\r\\n                          <div class=\\\"col-sm-3\\\">\\r\\n                            <input type=\\\"text\\\" style=\\\"font-size: 12px !important;\\\" class=\\\"form-control\\\" placeholder=\\\"Bank Account Number\\\"\\r\\n                              formControlName=\\\"BANKACCOUNTNUMBER\\\" />\\r\\n                          </div>\\r\\n                        </div>\\r\\n                      </div> -->\\r\\n\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n          \\r\\n              </div> <!--general info tab end-->\\r\\n\\r\\n            \\r\\n\\r\\n              <div class=\\\"tab-pane\\\" id=\\\"divisionwise-setting\\\">\\r\\n                <div class=\\\"form-group row\\\">\\r\\n                  <div class=\\\"col-md-12\\\">\\r\\n                      <div class=\\\"col-md-6width: 42%;\\\">\\r\\n                        <fieldset style=\\\"background-color: #e2eaea;\\\">\\r\\n                          <legend style=\\\"font-size: 15px !important;width: 51%;\\\">Associated Division Mapping :</legend>\\r\\n                          <div class=\\\"col-md-12\\\">\\r\\n                            <div class=\\\"col-sm-3\\\">\\r\\n                              <label class=\\\"form-control-label\\\">Division :</label>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-sm-9\\\">\\r\\n                              <select class=\\\"form-control\\\" formControlName=\\\"DIV\\\" (change)=\\\"changeDivision($event.target.value)\\\">\\r\\n                                <option *ngFor=\\\"let div of division\\\" value=\\\"{{ div.INITIAL }}\\\">\\r\\n                                  {{ div.NAME }}\\r\\n                              </option>      </select>\\r\\n                            </div>\\r\\n                          </div>\\r\\n\\r\\n                          <div class=\\\"col-md-6\\\" style=\\\"margin-top: 3%;\\\">\\r\\n                            <fieldset >\\r\\n                              <legend style=\\\"font-size: 15px !important;width: 51%;\\\">\\r\\n                              <div>\\r\\n                                <!-- <input type=\\\"checkbox\\\" formControlName=\\\"createMember\\\" style=\\\"height:13px;\\\"> -->\\r\\n                              </div>\\r\\n                              \\r\\n                                <input type=\\\"checkbox\\\" style=\\\"height: 13px !important;\\\" name=\\\"checkDivision\\\" id=\\\"checkDivision\\\" formControlName=\\\"ShareAccount\\\" (change)=\\\"enableShareOptions($event.target.checked==1?1:0)\\\">\\r\\n                                Shared This Account :</legend>\\r\\n                                  <input type=\\\"radio\\\" style=\\\"height: 13px !important;\\\" formControlName=\\\"ShareSelectiveDiv\\\" value=1 (change)=\\\"enableDivSelectionTable($event.target.checked==1?1:0)\\\">&nbsp;Share To Selective Division\\r\\n                                <!-- </div> -->\\r\\n                                <br>\\r\\n                                <!-- <div class=\\\"col-sm-6\\\"> -->\\r\\n                                  <input type=\\\"radio\\\" style=\\\"height: 13px !important;\\\" formControlName=\\\"ShareAllDiv\\\" value=2 (change)=\\\"ShareAllDiv($event.target.checked==1?1:0)\\\">&nbsp;Share To All Division\\r\\n                              \\r\\n                            </fieldset>\\r\\n                          </div>\\r\\n                          <div class=\\\"col-md-6\\\"  style=\\\"margin-top: 3%;\\\">\\r\\n                            <fieldset *ngIf=\\\"showDivSelectionTable\\\" style=\\\"background-color: #e2eaea;height :173px;\\\">\\r\\n                              <legend style=\\\"font-size: 15px !important;width: 60%;\\\">\\r\\n                                Account Sharing Division Selection :</legend>\\r\\n                              <div style=\\\"overflow-y: auto;height: 132px;\\\">\\r\\n                                <table>\\r\\n                                  <tr *ngFor=\\\"let d of division;let i = index\\\" >\\r\\n                                    <td style=\\\"border:1px solid #e0e0e0;width: 1%;\\\">\\r\\n                                      <input type=\\\"checkbox\\\" [(ngModel)]=\\\"d.isCheck\\\" [ngModelOptions]=\\\"{standalone: true}\\\"\\r\\n                                        (change)=\\\"check($event)\\\" value=\\\"{{d}}\\\" (click)='rowClick(i)' *ngIf = '!d.isDefault'>\\r\\n                                        <input type=\\\"checkbox\\\" [(ngModel)]=\\\"d.isCheck\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [checked] *ngIf = 'd.isDefault' disabled>\\r\\n                                    </td>\\r\\n                                    <td style=\\\"border:1px solid #e0e0e0;padding-left: 24px;width:100%\\\">{{d.NAME}}</td>\\r\\n                                  </tr>\\r\\n        \\r\\n        \\r\\n        \\r\\n                                </table>\\r\\n                              </div>\\r\\n                            \\r\\n                            </fieldset>\\r\\n                            </div>\\r\\n                          \\r\\n                        </fieldset>\\r\\n                        \\r\\n                      </div>\\r\\n                    <!-- <div class=\\\"col-md-6\\\">\\r\\n                    <fieldset *ngIf=\\\"showDivSelectionTable\\\" style=\\\"background-color: #e2eaea;height :173px\\\">\\r\\n                      <legend style=\\\"font-size: 15px !important;width: 60%;\\\">\\r\\n                        Account Sharing Division Selection :</legend>\\r\\n                      <div style=\\\"overflow-y: auto;height: 132px;\\\">\\r\\n                        <table>\\r\\n                          <tr *ngFor=\\\"let d of division;let i = index\\\" >\\r\\n                            <td style=\\\"border:1px solid #e0e0e0;width: 1%;\\\">\\r\\n                              <input type=\\\"checkbox\\\" [(ngModel)]=\\\"d.isCheck\\\" [ngModelOptions]=\\\"{standalone: true}\\\"\\r\\n                                (change)=\\\"check($event)\\\" value=\\\"{{d}}\\\" (click)='rowClick(i)' *ngIf = '!d.isDefault'>\\r\\n                                <input type=\\\"checkbox\\\" [(ngModel)]=\\\"d.isCheck\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [checked] *ngIf = 'd.isDefault' disabled>\\r\\n                            </td>\\r\\n                            <td style=\\\"border:1px solid #e0e0e0;padding-left: 24px;width:100%\\\">{{d.NAME}}</td>\\r\\n                          </tr>\\r\\n\\r\\n\\r\\n\\r\\n                        </table>\\r\\n                      </div>\\r\\n                    \\r\\n                    </fieldset>\\r\\n                    </div> -->\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"tab-pane\\\" id=\\\"bank-setting\\\">\\r\\n                <div class=\\\"form-group row\\\" style=\\\"margin-top:40px;\\\">\\r\\n                  <div class=\\\"col-md-12\\\">\\r\\n                    <div class=\\\"col-md-6\\\">\\r\\n                      <div class=\\\"row\\\">\\r\\n                        <label class=\\\"col-sm-2 form-control-label\\\" style=\\\"margin-top: 14px;\\\">Customer Name:</label>\\r\\n                        <div class=\\\"col-sm-8\\\" style=\\\"margin-left: -27px;\\\">\\r\\n                          <input type=\\\"text\\\" style=\\\"font-size: 12px !important; margin-top: 10px;\\\" class=\\\"form-control\\\" formControlName=\\\"cusName\\\" placeholder=\\\"Customer Name\\\">\\r\\n                        </div>\\r\\n\\r\\n                        <label class=\\\"col-sm-2 form-control-label\\\" style=\\\"margin-top: 14px;;\\\">Address:</label>\\r\\n                        <div class=\\\"col-sm-8\\\" style=\\\"margin-left: -27px;\\\">\\r\\n                          <input type=\\\"text\\\" style=\\\"font-size: 12px !important; margin-top: 10px;\\\" class=\\\"form-control\\\"  placeholder=\\\"Address\\\">\\r\\n                        </div>\\r\\n                        <label class=\\\"col-sm-2 form-control-label\\\" style=\\\"margin-top: 14px;\\\">VAT No.:</label>\\r\\n                        <div class=\\\"col-sm-8\\\" style=\\\"margin-left: -27px;\\\">\\r\\n                          <input type=\\\"number\\\" style=\\\"font-size: 12px !important; margin-top: 10px;\\\" class=\\\"form-control\\\"  placeholder=\\\"VAT NO.\\\">\\r\\n                        </div>\\r\\n\\r\\n                      </div>\\r\\n\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"col-md-6\\\">\\r\\n                      <div class=\\\"row\\\">\\r\\n                        <label class=\\\"col-sm-2 form-control-label\\\" style=\\\"margin-top: 14px;\\\">Bank Name:</label>\\r\\n                        <div class=\\\"col-sm-8\\\" style=\\\"margin-left: -27px;\\\">\\r\\n                          <input type=\\\"text\\\" style=\\\"font-size: 12px !important; margin-top: 10px;\\\" class=\\\"form-control\\\"  placeholder=\\\"Bank Name\\\">\\r\\n                        </div>\\r\\n\\r\\n                        <label class=\\\"col-sm-2 form-control-label\\\" style=\\\"margin-top: 14px;\\\">Branch:</label>\\r\\n                        <div class=\\\"col-sm-8\\\" style=\\\"margin-left: -27px;\\\">\\r\\n                          <input type=\\\"text\\\" style=\\\"font-size: 12px !important; margin-top: 10px;\\\" class=\\\"form-control\\\"  placeholder=\\\"Branch Name\\\">\\r\\n                        </div>\\r\\n\\r\\n                        <label class=\\\"col-sm-2 form-control-label\\\" style=\\\"margin-top: 14px;\\\">Account Number:</label>\\r\\n                        <div class=\\\"col-sm-8\\\" style=\\\"margin-left: -27px;\\\">\\r\\n                          <input type=\\\"number\\\" style=\\\"font-size: 12px !important; margin-top: 10px;\\\" class=\\\"form-control\\\"  placeholder=\\\"Account Number\\\">\\r\\n                        </div>\\r\\n\\r\\n                      </div>\\r\\n\\r\\n                    </div>\\r\\n\\r\\n                    <div style=\\\"float: right;padding-top: 8px;padding-right: 8px; margin-bottom: 7px;\\\">\\r\\n                      <button type=\\\"button\\\"  title=\\\"Cancel\\\" class=\\\"btn btn-info\\\" style=\\\"width:80px;\\\">ADD</button>\\r\\n                    </div>\\r\\n\\r\\n                      <div>\\r\\n                        <table style=\\\"margin-bottom: 5px; font-size: 13px; width: 100%\\\">\\r\\n                          <thead>\\r\\n                            <tr\\r\\n                              style=\\\"\\r\\n                                border-bottom: 2px solid #e6e6e6;\\r\\n                                border-top: 2px solid #e6e6e6;\\r\\n                                height: 30px;\\r\\n                                background: #63bbb2;\\r\\n                                color: black;\\r\\n                              \\\"\\r\\n                            >\\r\\n                              <th style=\\\"width: 1%; text-align:center;\\\">SNo.</th>\\r\\n                              <th style=\\\"width: 10%; padding-left: 1%; text-align:center;\\\">Bank Name</th>\\r\\n                              <th style=\\\"width: 7%; padding-left: 1% ;text-align:center;\\\">Branch</th>\\r\\n                              <th style=\\\"width: 7%; padding-left: 1%; text-align:center;\\\">Account Number</th>\\r\\n\\r\\n                            </tr>\\r\\n                          </thead>\\r\\n                          <tbody>\\r\\n                            <tr style=\\\"border: 1px; max-height: 25px\\\">\\r\\n\\r\\n                              <td style=\\\"line-height: 21px; text-align: center; border: 1px solid #e6e6e6;\\\">\\r\\n                              1\\r\\n                              </td>\\r\\n                  \\r\\n                              <td style=\\\"line-height: 21px; text-align: center; border: 1px solid #e6e6e6;\\\">\\r\\n                                <input class=\\\"form-control\\\"\\r\\n                                  style=\\\"height: 25px; width: 95% !important\\\"/>\\r\\n                              </td>\\r\\n                              <td style=\\\"line-height: 21px; text-align: center; border: 1px solid #e6e6e6;\\\">\\r\\n                                <input class=\\\"form-control\\\" style=\\\"height: 25px; width: 95% !important\\\"/>\\r\\n                              </td>\\r\\n                              <td style=\\\"line-height: 21px; text-align: center; border: 1px solid #e6e6e6;\\\">\\r\\n                                <input class=\\\"form-control\\\" style=\\\"height: 25px; width: 95% !important\\\"\\r\\n                                  type=\\\"text\\\"/>\\r\\n                              </td>\\r\\n                              \\r\\n                              \\r\\n                              \\r\\n                            </tr>\\r\\n                          </tbody>\\r\\n                        </table>\\r\\n\\r\\n                      </div>\\r\\n\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n              </div>  <!--banl setting tab content end-->\\r\\n         \\r\\n         \\r\\n          </div> <!--tab content-->\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</form>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n<form [formGroup]='form'>\\r\\n  <!-- <div class=\\\"row\\\" class=\\\"form-horizontal\\\">\\r\\n    <div style=\\\"background-color:#ffffff; border:1px solid;border-color:#dcdcdc; padding:20px; margin-bottom: 10px;\\\">\\r\\n      <div class=\\\"com-sm-12\\\" style=\\\"padding:5px;border-bottom: solid 1px #dcdcdc; margin-bottom: 10px;\\\">\\r\\n        <h5>{{modeTitle}}</h5>\\r\\n      </div>\\r\\n    \\r\\n    </div>\\r\\n  </div> -->\\r\\n\\r\\n  <!--  -->\\r\\n  <!-- <button type=\\\"button\\\" (click)=\\\"SumbitSave()\\\" title=\\\"onSave\\\" class=\\\"btn btn-info\\\" \\r\\n    *ngIf=\\\"grp=='A'\\\" [disabled]=\\\"!form.valid || mode=='view'\\\">Save</button>\\r\\n  <button type=\\\"button\\\" (click)=\\\"SumbitSave()\\\" title=\\\"onSave\\\" class=\\\"btn btn-info\\\" *ngIf=\\\"grp=='G'\\\">Save</button>\\r\\n  <button type=\\\"button\\\" (click)=\\\"cancel()\\\" title=\\\"Cancel\\\" class=\\\"btn btn-info\\\">Back</button> -->\\r\\n</form>\\r\\n<div class=\\\"modal fade\\\" bsModal #childModal=\\\"bs-modal\\\" [config]=\\\"{backdrop: 'static'}\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"mySmallModalLabel\\\"\\r\\n  aria-hidden=\\\"true\\\">\\r\\n  <div class=\\\"modal-dialog modal-sm\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <div class=\\\"modal-header\\\">\\r\\n        <button class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"hideChildModal()\\\">\\r\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n          \\r\\n        </button>\\r\\n        <h4 class=\\\"modal-title\\\">Information</h4>\\r\\n      </div>\\r\\n      <div class=\\\"modal-body\\\">\\r\\n        {{DialogMessage}}\\r\\n      </div>\\r\\n     \\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n<div>\\r\\n  <div class=\\\"modal fade\\\" bsModal #DeleteAcc=\\\"bs-modal\\\" [config]=\\\"{backdrop: 'static'}\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\"\\r\\n    aria-labelledby=\\\"mySmallModalLabel\\\" aria-hidden=\\\"true\\\" style=\\\"margin:-100px;height:460px\\\">\\r\\n    <div class=\\\"modal-dialog modal-sm\\\">\\r\\n      <div class=\\\"modal-content\\\" style=\\\"width: 420px;\\\">\\r\\n        <div class=\\\"modal-header\\\">\\r\\n          <button class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"onClickNo()\\\">\\r\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n\\r\\n          </button>\\r\\n          <h4 class=\\\"modal-title\\\">Delete Account</h4>\\r\\n        </div>\\r\\n        <div class=\\\"modal-body\\\">\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-12\\\" style=\\\"margin-top: -10px;margin-bottom: 12px;\\\">\\r\\n              Are you sure you want to delete this account?\\r\\n            </div>\\r\\n            <div class=\\\"col-md-12\\\">\\r\\n              <button (click)=\\\"DeleteYes()\\\" style=\\\"margin-right: 4px;\\\" class=\\\"btn btn-danger \\\">Yes</button>\\r\\n              <button (click)=\\\"DeleteNo()\\\" type=\\\"button \\\" class=\\\"btn btn-warning\\\">No</button>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n<generic-popup-grid #genericGridBankList [popupsettings]=\\\"gridBankPopupSettings\\\"\\r\\n  (onItemDoubleClick)=\\\"onBankSelect($event)\\\"></generic-popup-grid>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/masters/components/Account-Ledger-New/addAccledger.component.html\n// module id = 1837\n// module chunks = 12","module.exports = \"<div class=\\\"widgets\\\">\\r\\n        <div class =\\\"row\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-info\\\" (click)=\\\"addNewBank()\\\" style=\\\"margin-left:18px; margin-bottom: 10px;\\\">New Bank </button>\\r\\n            </div>\\r\\n        \\r\\n          <div class=\\\"row\\\">\\r\\n            <ba-card  title=\\\"Bank\\\" baCardClass=\\\"with-scroll\\\">\\r\\n              <ng2-smart-table [settings]=\\\"settings\\\" [source]=\\\"source\\\" (edit)=\\\"onEditClick($event)\\\" (view)=\\\"onViewClick($event)\\\" (deleteConfirm)=\\\"onDeleteConfirm($event)\\\"></ng2-smart-table>\\r\\n            </ba-card>\\r\\n          </div>  \\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/masters/components/Bank/bank-list.component.html\n// module id = 1838\n// module chunks = 12","module.exports = \"<div class=\\\"sticky-top\\\">\\r\\n  <div class=\\\"row clearfix\\\" style=\\\" padding: 0px 20px;\\\">\\r\\n    <div class=\\\"col-md-6\\\">\\r\\n      <h3 class=\\\"page-title\\\">{{ modeTitle }}</h3>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-6\\\" style=\\\"float: right;\\\">\\r\\n      <button type=\\\"button \\\" class=\\\"btn btn-info pull-right\\\" (click)=\\\"cancel()\\\" style=\\\"margin-right : 10px;\\\">\\r\\n        Back\\r\\n      </button>\\r\\n      <button *ngIf=\\\"viewMode == false\\\" (click)=\\\"onSave()\\\" class=\\\"btn btn-info pull-right\\\" style=\\\"margin-right : 10px;\\\">\\r\\n        Save\\r\\n      </button>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<div class=\\\"main-container\\\" style=\\\"padding-top : 10px; margin-bottom: 0px\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n      <div class=\\\"tabbable\\\" id=\\\"warehouse-tabs\\\">\\r\\n        <ul class=\\\"nav nav-tabs\\\">\\r\\n          <li class=\\\"nav-item\\\">\\r\\n            <a class=\\\"nav-link active\\\" href=\\\"#general-info3\\\" data-toggle=\\\"tab\\\">General Info</a>\\r\\n          </li>\\r\\n          <!-- <li class=\\\"nav-item\\\">\\r\\n                      <a class=\\\"nav-link\\\" href=\\\"#tab2\\\" data-toggle=\\\"tab\\\">Section 2</a>\\r\\n                    </li> -->\\r\\n        </ul>\\r\\n        <div class=\\\"tab-content\\\">\\r\\n          <div class=\\\"tab-pane active\\\" id=\\\"general-info3\\\">\\r\\n            <form class=\\\"row\\\" class=\\\"form-horizontal\\\" [formGroup]=\\\"form\\\">\\r\\n              <!-- <ba-card baCardClass=\\\"with-scroll\\\">  -->\\r\\n              <div class=\\\"col-md-6\\\">\\r\\n                <!-- <div class=\\\"form-group row\\\">\\r\\n                                            <label class=\\\"col-sm-4 form-control-label\\\">Location Name</label>\\r\\n                                            <div class=\\\"col-sm-8\\\">\\r\\n                                                <input type=\\\"text\\\" [style.background-color]=\\\"disabled()\\\"\\r\\n                                                    [style.background-color]=\\\"editDisabled()\\\" style=\\\"color:black\\\"\\r\\n                                                    class=\\\"form-control\\\" id=\\\"brandTypeName\\\" name=\\\"brandTypeName\\\"\\r\\n                                                    formControlName=\\\"ADDRESS\\\" placeholder=\\\"Location Name\\\" />\\r\\n                                                                                                                          \\r\\n                                            </div>\\r\\n                                    </div> -->\\r\\n                <div class=\\\"form-group row\\\">\\r\\n                  <label class=\\\"col-sm-4 form-control-label\\\">Bank Name*</label>\\r\\n                  <div class=\\\"col-sm-8\\\">\\r\\n                    <input type=\\\"text\\\" [style.background-color]=\\\"disabled()\\\" [style.background-color]=\\\"editDisabled()\\\"\\r\\n                      style=\\\"color:black\\\" class=\\\"form-control\\\" id=\\\"brandTypeName\\\" name=\\\"brandTypeName\\\"\\r\\n                      formControlName=\\\"ACNAME\\\" placeholder=\\\"Account Name\\\" />\\r\\n\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"form-group row\\\">\\r\\n                    <label class=\\\"col-sm-4 form-control-label\\\">Account Type* </label>\\r\\n                    <div class=\\\"col-sm-8\\\">\\r\\n                      <select class=\\\"form-control\\\" formControlName=\\\"CTYPE\\\">\\r\\n  \\r\\n                        <option value='Saving account'>Saving account</option>\\r\\n                        <option value='Current account'>Current account</option>\\r\\n                        <option value='Bank OCC account'>Bank OCC account</option>\\r\\n  \\r\\n                      </select>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                <div class=\\\"form-group row\\\">\\r\\n                  <label class=\\\"col-sm-4 form-control-label\\\">Branch Name</label>\\r\\n                  <div class=\\\"col-sm-8\\\">\\r\\n                    <input type=\\\"text\\\" [style.background-color]=\\\"disabled()\\\" [style.background-color]=\\\"editDisabled()\\\"\\r\\n                      style=\\\"color:black\\\" class=\\\"form-control\\\" id=\\\"branchNameId\\\" name=\\\"BranchName\\\"\\r\\n                      formControlName=\\\"ADDRESS\\\" placeholder=\\\"Branch Name\\\" />\\r\\n\\r\\n                  </div>\\r\\n                </div>\\r\\n                \\r\\n                <div class=\\\"form-group row\\\">\\r\\n                  <label class=\\\"col-sm-4 form-control-label\\\">Branch Code</label>\\r\\n                  <div class=\\\"col-sm-8\\\">\\r\\n                    <input type=\\\"text\\\" [style.background-color]=\\\"disabled()\\\" [style.background-color]=\\\"editDisabled()\\\"\\r\\n                      style=\\\"color:black\\\" class=\\\"form-control\\\" id=\\\"branchCodeId\\\" name=\\\"BranchCode\\\"\\r\\n                      formControlName=\\\"ACCODE\\\" placeholder=\\\"Branch Code\\\" />\\r\\n\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"form-group row\\\">\\r\\n                  <label class=\\\"col-sm-4 form-control-label\\\">IFSC code</label>\\r\\n                  <div class=\\\"col-sm-8\\\">\\r\\n                    <input type=\\\"text\\\" [style.background-color]=\\\"disabled()\\\" [style.background-color]=\\\"editDisabled()\\\"\\r\\n                      style=\\\"color:black\\\" class=\\\"form-control\\\" id=\\\"IFCS_CODE\\\" name=\\\"IFCS_CODE\\\"\\r\\n                      formControlName=\\\"IFCS_CODE\\\" placeholder=\\\"IFCS CODE\\\" />\\r\\n\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n                <div class=\\\"form-group row\\\">\\r\\n                  <label class=\\\"col-sm-4 form-control-label\\\">Account Credit Limit</label>\\r\\n                  <div class=\\\"col-sm-8\\\">\\r\\n                    <input type=\\\"number\\\" [style.background-color]=\\\"disabled()\\\" [style.background-color]=\\\"editDisabled()\\\"\\r\\n                      style=\\\"color:black\\\" class=\\\"form-control\\\" id=\\\"brandTypeName\\\" name=\\\"brandTypeName\\\"\\r\\n                      formControlName=\\\"CRLIMIT\\\" placeholder=\\\"Account Credit Limit\\\" />\\r\\n\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"form-group row\\\">\\r\\n                  <label class=\\\"col-sm-4 form-control-label\\\">Account Number</label>\\r\\n                  <div class=\\\"col-sm-8\\\">\\r\\n                    <input type=\\\"text\\\" [style.background-color]=\\\"disabled()\\\" [style.background-color]=\\\"editDisabled()\\\"\\r\\n                      style=\\\"color:black\\\" class=\\\"form-control\\\" id=\\\"brandTypeName\\\" name=\\\"brandTypeName\\\"\\r\\n                      formControlName=\\\"BANKACCOUNTNUMBER\\\" placeholder=\\\"Account Number\\\" />\\r\\n\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n                <!-- <div class=\\\"form-group row\\\">\\r\\n                                                <label class=\\\"col-sm-4 form-control-label\\\">Building</label>\\r\\n                                                <div class=\\\"col-sm-8\\\">\\r\\n                                                    <input type=\\\"text\\\" [style.background-color]=\\\"disabled()\\\"\\r\\n                                                        [style.background-color]=\\\"editDisabled()\\\" style=\\\"color:black\\\"\\r\\n                                                        class=\\\"form-control\\\" id=\\\"brandTypeName\\\" name=\\\"brandTypeName\\\"\\r\\n                                                        formControlName=\\\"BANKBUILDING\\\" placeholder=\\\"Building\\\" />\\r\\n                                                                                                                              \\r\\n                                                </div>\\r\\n                                        </div> -->\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"col-md-6\\\">\\r\\n                <div class=\\\"form-group row\\\">\\r\\n                  <label class=\\\"col-sm-4 form-control-label\\\">City</label>\\r\\n                  <div class=\\\"col-sm-8\\\">\\r\\n                    <input type=\\\"text\\\" [style.background-color]=\\\"disabled()\\\" [style.background-color]=\\\"editDisabled()\\\"\\r\\n                      style=\\\"color:black\\\" class=\\\"form-control\\\" id=\\\"brandTypeName\\\" name=\\\"brandTypeName\\\"\\r\\n                      formControlName=\\\"CITY\\\" placeholder=\\\"City\\\" />\\r\\n\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"form-group row\\\">\\r\\n                  <label class=\\\"col-sm-4 form-control-label\\\">Phone No</label>\\r\\n                  <div class=\\\"col-sm-8\\\">\\r\\n                    <input type=\\\"text\\\" [style.background-color]=\\\"disabled()\\\" [style.background-color]=\\\"editDisabled()\\\"\\r\\n                      style=\\\"color:black\\\" class=\\\"form-control\\\" id=\\\"brandTypeName\\\" name=\\\"brandTypeName\\\"\\r\\n                      formControlName=\\\"PHONE\\\" placeholder=\\\"Phone No\\\" />\\r\\n\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n                <!-- <div class=\\\"form-group row\\\">\\r\\n                  <label class=\\\"col-sm-4 form-control-label\\\">GST No</label>\\r\\n                  <div class=\\\"col-sm-8\\\">\\r\\n                    <input type=\\\"text\\\" [style.background-color]=\\\"disabled()\\\" [style.background-color]=\\\"editDisabled()\\\"\\r\\n                      style=\\\"color:black\\\" class=\\\"form-control\\\" id=\\\"brandTypeName\\\" name=\\\"brandTypeName\\\"\\r\\n                      formControlName=\\\"GSTNO\\\" placeholder=\\\"GST NO\\\" />\\r\\n\\r\\n                  </div>\\r\\n                </div> -->\\r\\n\\r\\n                <div class=\\\"form-group row\\\">\\r\\n                  <label class=\\\"col-sm-4 form-control-label\\\">Location Type</label>\\r\\n                  <div class=\\\"col-sm-8\\\">\\r\\n                    <select class=\\\"form-control\\\" formControlName=\\\"PSTYPE\\\">\\r\\n                      <option value='local'>Local</option>\\r\\n                      <option value='interstate'>Interstate</option>\\r\\n                      <option value='import'>Import</option>\\r\\n                      <option value='unregistered'>Unregistered</option>\\r\\n                    </select>\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n                <!-- <div class=\\\"form-group row\\\">\\r\\n                                                <label class=\\\"col-sm-4 form-control-label\\\">Cost Center  Enables</label>\\r\\n                                                <div class=\\\"col-sm-8\\\">\\r\\n                                                  <select class=\\\"form-control\\\" formControlName=\\\"BANKCOSTCENTER\\\">\\r\\n                                                      <option value=1>Yes</option>\\r\\n                                                      <option value=0>No</option>\\r\\n                                                  </select>                                                                                                                            \\r\\n                                                </div>\\r\\n                                        </div> -->\\r\\n                                        <div class=\\\"form-group row\\\">\\r\\n                                          <label class=\\\"col-sm-4 form-control-label\\\">State </label>\\r\\n                                          <div class=\\\"col-sm-8\\\">\\r\\n                      \\r\\n                                            <select class=\\\"form-control\\\"  formControlName=\\\"STATE\\\">\\r\\n                                              <option *ngFor=\\\"let i of StateList\\\" value={{i.StateCode}}>{{i.StateName}}</option>\\r\\n                                            </select>\\r\\n                                          \\r\\n                                          </div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"form-group row\\\">\\r\\n                                          <label class=\\\"col-sm-4 form-control-label\\\">Country</label>\\r\\n                                          <div class=\\\"col-sm-8\\\">\\r\\n                                            <input type=\\\"text\\\" \\r\\n                                              style=\\\"color:black\\\" class=\\\"form-control\\\" id=\\\"COUNTRY\\\" name=\\\"COUNTRY\\\"\\r\\n                                              formControlName=\\\"BANKBUILDING\\\" placeholder=\\\"Country Name\\\" />\\r\\n                        \\r\\n                                          </div>\\r\\n                                        </div>\\r\\n\\r\\n                <div class=\\\"form-group row\\\">\\r\\n                  <label class=\\\"col-sm-4 form-control-label\\\">Bank Account Status</label>\\r\\n                  <div class=\\\"col-sm-8\\\">\\r\\n                    <select class=\\\"form-control\\\" formControlName=\\\"ISACTIVE\\\">\\r\\n                      <option value=1>Active</option>\\r\\n                      <option value=0>InActive</option>\\r\\n                    </select>\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n\\r\\n              </div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n              <!-- </ba-card>  -->\\r\\n            </form>\\r\\n          </div>\\r\\n          <!-- <div class=\\\"tab-pane\\\" id=\\\"tab2\\\">\\r\\n                      <p>\\r\\n                        Howdy, I'm in Section 2.\\r\\n                      </p>\\r\\n                    </div> -->\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/masters/components/Bank/bank.component.html\n// module id = 1839\n// module chunks = 12","module.exports = \"<div class=\\\"widgets\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n          <button class=\\\"btn btn-info\\\" style=\\\"margin-bottom: 10px;margin-left:18px\\\" (click)=\\\"onAddClick()\\\" >{{partyName}}</button>\\r\\n          <!-- <button class=\\\"btn btn-info\\\" style=\\\"margin-bottom: 10px;margin-left:18px\\\" (click)=\\\"onGrpAddClick()\\\" >Create Group</button> -->\\r\\n        </div>\\r\\n        <div class=\\\"row\\\">\\r\\n          <ba-card baCardClass=\\\"with-scroll\\\">\\r\\n            <ng2-smart-table [settings]=\\\"settings\\\" [source]=\\\"source\\\" (edit)=\\\"onEditClick($event)\\\" (deleteConfirm)=\\\"onDeleteConfirm($event)\\\" (view)=\\\"onViewClick($event)\\\"></ng2-smart-table>\\r\\n          </ba-card>\\r\\n        </div>\\r\\n      </div>\\r\\n    \"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/masters/components/PLedger/PLedgerTable.html\n// module id = 1850\n// module chunks = 12","module.exports = \"<style>\\r\\n  label {\\r\\n    width: 150px;\\r\\n    font-size: 15px;\\r\\n    color: #403c3c;\\r\\n  }\\r\\n\\r\\n  input {\\r\\n    height: 30px;\\r\\n  }\\r\\n</style>\\r\\n\\r\\n<div class=\\\"sticky-top\\\">\\r\\n  <div class=\\\"row clearfix\\\" style=\\\" padding: 0px 20px;\\\">\\r\\n    <div class=\\\"col-md-6\\\">\\r\\n      <!-- <h3 class=\\\"page-title\\\">{{ modeTitle }}</h3> -->\\r\\n      <label style=\\\"font-family: Segoe UI Light;font-weight: bold;font-size: 18px;padding-top: 1%;\\\">ACCOUNT\\r\\n        MASTER</label>\\r\\n      <label *ngIf=\\\"modeTitle\\\" style=\\\"font-weight: bold;font-size: 16px;\\\">&nbsp;>>{{ modeTitle}}</label>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-6\\\" style=\\\"float: right;\\\"></div>\\r\\n\\r\\n    <button type=\\\"button \\\" class=\\\"btn btn-info pull-right\\\" (click)=\\\"backToDashboard()\\\"\\r\\n      style=\\\"margin-right : 10px;width:80px\\\">\\r\\n      F10 Back\\r\\n    </button>\\r\\n\\r\\n    <button type=\\\"button \\\" class=\\\"btn btn-info pull-right\\\" (click)=\\\"cancel()\\\" style=\\\"margin-right : 10px;width:80px\\\">\\r\\n      F3 Reset\\r\\n    </button>\\r\\n\\r\\n    <button type=\\\"button\\\" (click)=\\\"SumbitSave()\\\" title=\\\"onSave\\\" class=\\\"btn btn-info pull-right\\\"\\r\\n      [disabled]=\\\"!this.parentGroup || this.ViewMode == true\\\"\\r\\n      *ngIf=\\\"grp == 'G' && (this.nodeObj.ACID!='AG01001' || this.nodeObj.ACID=='AG01002')  \\\"\\r\\n      style=\\\"margin-right : 10px;width:80px\\\">\\r\\n      F6 Save\\r\\n    </button>\\r\\n    <button type=\\\"button\\\" (click)=\\\"DeleteItem()\\\" [disabled]=\\\"mode == 'edit'\\\" *ngIf=\\\"mode != 'add'\\\" title=\\\"onSave\\\"\\r\\n      class=\\\"btn btn-info pull-right\\\" style=\\\"margin-right : 10px;width:80px\\\">\\r\\n      Delete\\r\\n    </button>\\r\\n    <button type=\\\"button\\\" *ngIf=\\\"mode != 'add' && (this.nodeObj.ACID!='AG01001' || this.nodeObj.ACID=='AG01002')  \\\"\\r\\n      (click)=\\\"EditItem()\\\" title=\\\"onSave\\\" class=\\\"btn btn-info pull-right\\\" style=\\\"margin-right : 10px;width:80px\\\">\\r\\n      F5 Edit\\r\\n    </button>\\r\\n\\r\\n    <!-- <button type=\\\"button\\\" *ngIf=\\\"mode !='add'\\\" (click)=\\\"Refresh()\\\" title=\\\"onSave\\\" class=\\\"btn btn-info pull-right\\\"\\r\\n      style=\\\"margin-right : 10px;width:80px\\\">\\r\\n      Refresh\\r\\n    </button> -->\\r\\n    <button type=\\\"button\\\" (click)=\\\"SumbitSave()\\\" [disabled]=\\\"this.ViewMode == true\\\" title=\\\"onSave\\\"\\r\\n      class=\\\"btn btn-info pull-right\\\" style=\\\"margin-right : 10px;width:80px\\\"\\r\\n      *ngIf=\\\" this.mode != 'VIEW'  && (this.nodeObj.ACID!='AG01001' || this.nodeObj.ACID=='AG01002' ) \\\">\\r\\n      F6 Save\\r\\n    </button>\\r\\n    <button *ngIf=\\\"showShiftParentButton\\\" type=\\\"button\\\" class=\\\"btn btn-info pull-right\\\" style=\\\"margin-right : 10px;width:80px\\\" (click)=\\\"shiftParent()\\\">Shift Parent</button>\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-info pull-right\\\" (click)=\\\"ExportAccountLedger()\\\" style=\\\"margin-right : 10px;width:100px\\\">Export Account</button>\\r\\n\\r\\n  </div>\\r\\n</div>\\r\\n<div class=\\\"main-container\\\" style=\\\"padding-top : 10px; margin-bottom: 0px\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n      <div class=\\\"tabbable\\\" id=\\\"ALEDGER-tabs\\\">\\r\\n        <ul class=\\\"nav nav-tabs\\\">\\r\\n          <li class=\\\"nav-item\\\">\\r\\n            <a class=\\\"nav-link active\\\" href=\\\"#general-info1\\\" id=\\\"generalInfo\\\" data-toggle=\\\"tab\\\">General Info</a>\\r\\n          </li>\\r\\n\\r\\n          <!-- <li class=\\\"nav-item\\\">\\r\\n            <a class=\\\"nav-link\\\" *ngIf='showBank==1 && isGroup == 0' href=\\\"#tab2\\\" data-toggle=\\\"tab\\\">Bank</a>\\r\\n          </li>\\r\\n          <li class=\\\"nav-item\\\">\\r\\n            <a class=\\\"nav-link\\\" href=\\\"#tab3\\\" id=\\\"customerTab\\\" data-toggle=\\\"tab\\\"\\r\\n              *ngIf='showPLedgerInfo==1 && isGroup == 0'>{{Party}}</a>\\r\\n          </li> -->\\r\\n          <!-- <li class=\\\"nav-item\\\">\\r\\n                      <a class=\\\"nav-link\\\" *ngIf='showPLedgerInfo==1 && isGroup == 0 && showCustomer == 0' href=\\\"#tab4\\\" data-toggle=\\\"tab\\\">Supplier</a>\\r\\n                  </li> -->\\r\\n        </ul>\\r\\n        <div [ngBusy]=\\\"busy\\\"></div>\\r\\n        <div class=\\\"tab-content\\\">\\r\\n          <div class=\\\"tab-pane active\\\" id=\\\"general-info1\\\">\\r\\n\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"col-md-3\\\">\\r\\n\\r\\n                <div class=\\\"plainBackGround\\\">\\r\\n\\r\\n                  <!-- <fieldset style=\\\"border:1px solid;border-color:#dcdcdc;height:440px;margin-left:20px\\\"> -->\\r\\n                  <fieldset [class.disabledbutton]=\\\"addMode\\\" [disabled]=\\\"addMode\\\"\\r\\n                    style=\\\"border:1px solid;border-color:#dcdcdc;height:550px;margin-left:-25px;overflow: auto;\\\">\\r\\n\\r\\n                    <div id=treediv>\\r\\n                      <h4>Account Ledger</h4>\\r\\n                      <input name=\\\"filter\\\" #filter (keyup)=\\\"filterNodes(filter.value, tree)\\\"\\r\\n                        placeholder=\\\"&nbsp;Search Account\\\" class=\\\"filterclass\\\" />\\r\\n                      <div\\r\\n                        style=\\\" overflow: auto; border: black;border-width: 2px;background:#f0f3f4;margin:10px;font-size:12px;\\\">\\r\\n                        <Tree #tree [nodes]=\\\"nodes \\\" [focused]=\\\"true \\\" [options]=\\\"customTemplateStringOptions\\r\\n                                                              \\\" (onEvent)=\\\"onEvent($event) \\\"\\r\\n                          (onActivate)=\\\"onselect(tree,$event) \\\">\\r\\n                          <ng-template #treeNodeTemplate let-node>\\r\\n                            <span *ngIf=\\\"node.data.TYPE=='G' && node.children.length>0\\\" title=\\\"{{node.data.subTitle}} \\\"\\r\\n                              [contextMenu]=\\\"myContextMenu\\\" [contextMenuSubject]=\\\"node.data \\\"\\r\\n                              style=\\\"margin-left:24px\\\"><img src=\\\"../../../assets/img/Folder.jpg\\\" alt=\\\"Group\\\" height=\\\"20\\\"\\r\\n                                width=\\\"20\\\" style=\\\"margin-top:-2px\\\">\\r\\n                              {{ node.data.ACNAME }}{{ childrenCount(node) }}\\r\\n                            </span>\\r\\n\\r\\n                            <span *ngIf=\\\"node.data.TYPE=='G' && node.children.length==0\\\" title=\\\"{{node.data.subTitle}} \\\"\\r\\n                              [contextMenu]=\\\"myContextMenu\\\" [contextMenuSubject]=\\\"node.data \\\">\\r\\n                              <img src=\\\"../../../assets/img/Folder.jpg\\\" alt=\\\"Group\\\" height=\\\"20\\\" width=\\\"20\\\"\\r\\n                                style=\\\"margin-top:-2px\\\">\\r\\n                              {{ node.data.ACNAME }}{{ childrenCount(node) }}\\r\\n                            </span>\\r\\n                            <span *ngIf=\\\"node.data.TYPE=='A'\\\" title=\\\"{{node.data.subTitle}} \\\"\\r\\n                              [contextMenu]=\\\"myContextMenu\\\" [contextMenuSubject]=\\\"node.data \\\"><img\\r\\n                                src=\\\"../../../assets/img/File.png\\\" alt=\\\"ListItem\\\" height=\\\"20\\\" width=\\\"15\\\"\\r\\n                                style=\\\"margin-top:-2px\\\">\\r\\n                              {{ node.data.ACNAME }}</span>\\r\\n                          </ng-template>\\r\\n                          <ng-template #loadingTemplate>Loading, please hold....</ng-template>\\r\\n                        </Tree>\\r\\n\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </fieldset>\\r\\n\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"col-md-9\\\">\\r\\n                <div class=\\\"row\\\">\\r\\n\\r\\n                  <button type=\\\"button \\\" class=\\\"btn btn-info pull-right\\\" [disabled]=\\\"this.mode == 'edit'\\\"\\r\\n                    (click)=\\\"NewGroup()\\\" style=\\\"margin-right : 10px;width:100px\\\"\\r\\n                    *ngIf=\\\"(this.nodeObj.ACID!='AG01001' || this.nodeObj.ACID!='AG01002')\\\">\\r\\n                    New Group\\r\\n                  </button>\\r\\n                  <button type=\\\"button\\\" [disabled]=\\\"this.mode == 'edit'\\\" (click)=\\\"NewItem()\\\" title=\\\"onSave\\\"\\r\\n                    class=\\\"btn btn-info pull-right\\\" style=\\\"margin-right : 10px;width:100px\\\"\\r\\n                    *ngIf=\\\"(this.nodeObj.ACID!='AG01001' || this.nodeObj.ACID!='AG01002')\\\">\\r\\n                    New Account\\r\\n                  </button>\\r\\n                </div>\\r\\n                <div class=\\\"row\\\" style=\\\"margin-top:20px\\\">\\r\\n                  <div class=\\\"form-group row\\\">\\r\\n                    <label class=\\\"col-sm-3 form-control-label\\\">Primary Group*</label>\\r\\n                    <div class=\\\"col-sm-9\\\">\\r\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"Parent.Primary\\\" disabled\\r\\n                        style=\\\"color: #000000 !important;\\\" />\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <div class=\\\"form-group row\\\">\\r\\n                    <label class=\\\"col-sm-3 form-control-label\\\">Under:</label>\\r\\n                    <div class=\\\"col-sm-9\\\">\\r\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"Parent.Under\\\" disabled\\r\\n                        style=\\\"color: #000000 !important;\\\" />\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <div class=\\\"form-group row\\\" *ngIf=\\\"isAccount == true \\r\\n                  &&  this.tagForDisplayingAccname !='G'\\r\\n                  &&  isParentBank == false\\r\\n                  \\\">\\r\\n                    <label class=\\\"col-sm-3 form-control-label\\\">A/C Code:</label>\\r\\n                    <div class=\\\"col-sm-9\\\">\\r\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\"  [(ngModel)]=\\\"formObj.ACCODE\\\"\\r\\n                        style=\\\"color: #000000 !important;\\\" />\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <div class=\\\"form-group row\\\" *ngIf=\\\"isAccount == true \\r\\n                  &&  this.tagForDisplayingAccname !='G'\\r\\n                  &&  isParentBank == true\\r\\n                  \\\">\\r\\n\\r\\n                  <!-- //For Bank -->\\r\\n                    <label class=\\\"col-sm-3 form-control-label\\\">A/C Code:</label>\\r\\n                    <div class=\\\"col-sm-9\\\">\\r\\n\\r\\n                      <input type=\\\"text\\\" (keydown.Enter)=\\\"showBankPopup(); ACCODE.blur();\\\" class=\\\"form-control\\\"  [(ngModel)]=\\\"formObj.ACCODE\\\" #ACCODE\\r\\n                        style=\\\"color: #000000 !important;\\\" placeholder=\\\"Enter to Select Bank Code\\\" />\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  \\r\\n                  <div class=\\\"form-group row\\\">\\r\\n                    <label *ngIf=\\\"isAccount == false || this.tagForDisplayingAccname =='G'\\\"\\r\\n                      class=\\\"col-sm-3 form-control-label\\\">Group Name*\\r\\n                    </label>\\r\\n                    <label *ngIf=\\\"isAccount == true &&  this.tagForDisplayingAccname !='G'\\\"\\r\\n                      class=\\\"col-sm-3 form-control-label\\\">Account Name*\\r\\n                    </label>\\r\\n                    <div class=\\\"col-sm-9\\\"  *ngIf=\\\"isParentBank == false\\\">\\r\\n                      <input type=\\\"text\\\" id=\\\"Name\\\" class=\\\"form-control\\\" placeholder=\\\"ACNAME\\\" #Name\\r\\n                        [(ngModel)]=\\\"formObj.ACNAME\\\"\\r\\n                        [disabled]=\\\"this.nodeObj.ACID=='AG01001' || this.nodeObj.ACID=='AG01002' || this.ViewMode == true \\\"\\r\\n                        style=\\\"color: #000000 !important;\\\" />\\r\\n                    </div>\\r\\n                    <div class=\\\"col-sm-9\\\" *ngIf=\\\"isParentBank == true\\\">\\r\\n                      <input type=\\\"text\\\" id=\\\"Name\\\" class=\\\"form-control\\\" placeholder=\\\"ACNAME\\\" #Name\\r\\n                        [(ngModel)]=\\\"formObj.ACNAME\\\"\\r\\n                        [disabled]=\\\"this.nodeObj.ACID=='AG01001' || this.nodeObj.ACID=='AG01002' || this.ViewMode == true \\\"\\r\\n                        style=\\\"color: #000000 !important;\\\"  placeholder=\\\"Enter to Select Bank\\\" (keydown.Enter)=\\\"showBankPopup(); Name.blur();\\\" />\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <div class=\\\"form-group row\\\" *ngIf=\\\"this.nodeObj.ACID=='AG01001' || this.nodeObj.ACID=='AG01002'\\\"\\r\\n                    style=\\\"margin-left: 0px;color: #2dacd1;\\\">\\r\\n                    Note : *cannot create Group/Account under this.\\r\\n                  </div>\\r\\n                  <ng-container>\\r\\n                    <div class=\\\"form-group row\\\"\\r\\n                      *ngIf=\\\"((isAccount == true && _transactionService.userSetting.ENABLESUBLEDGER == 2 && this.GroupStatus != 'G') || (this.GroupStatus == 'G' && _transactionService.userSetting.ENABLESUBLEDGER == 2)) && this.parentHasSubLedger ==false;\\\">\\r\\n                      <label class=\\\"col-sm-3 form-control-label\\\">Has Sub Ledger</label>\\r\\n                      <div class=\\\"col-sm-9\\\">\\r\\n                        <input type=\\\"checkbox\\\" [disabled]=\\\"this.ViewMode == true\\\" value=1\\r\\n                          [(ngModel)]=\\\"formObj.HASSUBLEDGER\\\">\\r\\n\\r\\n                      </div>\\r\\n                    </div>\\r\\n\\r\\n                  </ng-container>\\r\\n                  <div class=\\\"form-group row\\\">\\r\\n                    <label *ngIf=\\\"isAccount == true &&  this.tagForDisplayingAccname !='G' && OverdraftIs == 'OD'\\\"\\r\\n                      class=\\\"col-sm-3 form-control-label\\\">Credit Limit*\\r\\n                    </label>\\r\\n                    <div class=\\\"col-sm-9\\\">\\r\\n                      <input *ngIf=\\\"isAccount == true &&  this.tagForDisplayingAccname !='G' && OverdraftIs == 'OD'\\\"\\r\\n                        type=\\\"number\\\" id=\\\"crlimit\\\" class=\\\"form-control\\\" placeholder=\\\"Credit Limit\\\" #Name\\r\\n                        [(ngModel)]=\\\"formObj.CRLIMIT\\\" [disabled]=\\\"this.ViewMode == true \\\"\\r\\n                        style=\\\"color: #000000 !important;\\\" autocomplete=\\\"off\\\" />\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <!-- <div *ngIf='HSN_Active==1' class=\\\"form-group row\\\">\\r\\n                    <label class=\\\"col-sm-3 form-control-label\\\">HSN/SAC</label>\\r\\n                    <div class=\\\"col-sm-9\\\">\\r\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"HSN/SAC\\\" [(ngModel)]=\\\"formObj.HSN_SACCODE\\\" />\\r\\n                    </div>\\r\\n                  </div> -->\\r\\n                </div>\\r\\n                <div class=\\\"row\\\">\\r\\n\\r\\n                  <!-- <div class=\\\"form-inline\\\" style=\\\"margin:5px;\\\">\\r\\n                      <div class=\\\"checkbox\\\">\\r\\n                        <label>RCM Applicable:</label>\\r\\n                        <input type=\\\"checkbox\\\" name=\\\"rcmapplicable\\\" (change)=\\\"rcmChangeEvent($event)\\\"\\r\\n                          [checked]=\\\"formObj.isRCMApplicable==1\\\" style=\\\"vertical-align: middle;\\\">\\r\\n                      </div>\\r\\n                    </div> -->\\r\\n                  <!-- <div class=\\\"form-inline\\\" style=\\\"margin:5px;\\\">\\r\\n                  <div class=\\\"checkbox\\\">\\r\\n                    <label>GST Applicable:</label>\\r\\n                    <input type=\\\"checkbox\\\" name=\\\"isAutoGSTApplicable\\\" (change)=\\\"autoCalculationevent($event)\\\"\\r\\n                      [checked]=\\\"formObj.isAutoGSTApplicable==1\\\" style=\\\"vertical-align: middle;\\\">\\r\\n                  </div>\\r\\n                </div> -->\\r\\n                  <ng-container *ngIf=\\\"formObj.isAutoGSTApplicable==1\\\">\\r\\n                    <fieldset>\\r\\n                      <div class=\\\"form-inline\\\" style=\\\"margin:5px;\\\">\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                          <label for=\\\"taxtype\\\"><strong>Tax Type</strong></label>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                          <label for=\\\"rate\\\"><strong>Rate%</strong></label>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                      <div class=\\\"form-inline\\\" style=\\\"margin:5px;\\\">\\r\\n                        <div class=\\\"\\\">\\r\\n                          <label for=\\\"igst\\\">Integrated Tax</label>\\r\\n                          <input type=\\\"text\\\" name=\\\"igst\\\" #igst class=\\\"form-control\\\"\\r\\n                            [(ngModel)]=\\\"autoCalculationParam.igst\\\" (keydown.enter)=\\\"cgst.focus()\\\">\\r\\n                        </div>\\r\\n                      </div>\\r\\n                      <div class=\\\"form-inline\\\" style=\\\"margin:5px;\\\">\\r\\n                        <div class=\\\"\\\">\\r\\n                          <label for=\\\"cgst\\\">Central Tax</label>\\r\\n                          <input type=\\\"text\\\" name=\\\"cgst\\\" #cgst class=\\\"form-control\\\"\\r\\n                            [(ngModel)]=\\\"autoCalculationParam.cgst\\\" (keydown.enter)=\\\"sgst.focus()\\\">\\r\\n                        </div>\\r\\n                      </div>\\r\\n                      <div class=\\\"form-inline\\\" style=\\\"margin:5px;\\\">\\r\\n                        <div class=\\\"\\\">\\r\\n                          <label for=\\\"sgst\\\">UT Tax</label>\\r\\n                          <input type=\\\"text\\\" #sgst name=\\\"sgst\\\" class=\\\"form-control\\\"\\r\\n                            [(ngModel)]=\\\"autoCalculationParam.sgst\\\" (keydown.enter)=\\\"cess.focus()\\\">\\r\\n                        </div>\\r\\n                      </div>\\r\\n                      <div class=\\\"form-inline\\\" style=\\\"margin:5px;\\\">\\r\\n                        <div class=\\\"\\\">\\r\\n                          <label for=\\\"exampleInputName2\\\">Cess</label>\\r\\n                          <input type=\\\"text\\\" #cess name=\\\"cess\\\" class=\\\"form-control\\\"\\r\\n                            [(ngModel)]=\\\"autoCalculationParam.cess\\\" (keydown.enter)=\\\"igst.focus()\\\">\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </fieldset>\\r\\n                  </ng-container>\\r\\n\\r\\n                  <!-- divisiowisemappting -->\\r\\n                  <div *ngIf='enableDivisionMapping' class=\\\"form-group row\\\">\\r\\n                    <div class=\\\"col-md-12\\\">\\r\\n                      <div class=\\\"col-md-6\\\">\\r\\n                        <fieldset style=\\\"background-color: #e2eaea;\\\">\\r\\n                          <legend style=\\\"font-size: 15px !important;width: 51%;\\\">Associated Division Mapping :</legend>\\r\\n                          <div class=\\\"col-md-12\\\">\\r\\n                            <div class=\\\"col-sm-3\\\">\\r\\n                              <label class=\\\"form-control-label\\\">Division :</label>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-sm-9\\\">\\r\\n                              <select class=\\\"form-control\\\" [(ngModel)]=\\\"formObj.DIV\\\" (change)=\\\"changeDivision($event.target.value)\\\">\\r\\n                                <option *ngFor=\\\"let div of division\\\" value=\\\"{{ div.INITIAL }}\\\">\\r\\n                                  {{ div.NAME }}\\r\\n                                </option>\\r\\n                              </select>\\r\\n                            </div>\\r\\n                          </div>\\r\\n\\r\\n                          <div class=\\\"col-md-12\\\" style=\\\"margin-top: 3%;\\\">\\r\\n                            <fieldset>\\r\\n                              <legend style=\\\"font-size: 15px !important;width: 51%;\\\">\\r\\n                                <input type=\\\"checkbox\\\" value=0 [(ngModel)]=\\\"divisioncheckObj.ShareAccount\\\" (change)=\\\"ClickShareAccount($event.target.value)\\\">\\r\\n                                <label>Shared This Account :</label>\\r\\n\\r\\n                              </legend>\\r\\n                              <div>\\r\\n                                <div class=\\\"col-sm-6\\\">\\r\\n                                  <input type=\\\"radio\\\" style=\\\"height: 13px !important;\\\" name=\\\"ShareDivision\\\" value=1\\r\\n                                    [(ngModel)]=\\\"divisioncheckObj.ShareSelectiveDiv\\\"\\r\\n                                    (change)=\\\"enableDivSelectionTable($event.target.checked==1?1:0)\\\" [disabled]=\\\"enableDivision == false\\\">&nbsp;Share To\\r\\n                                  Selective Division\\r\\n                                </div>\\r\\n                                <div class=\\\"col-sm-6\\\">\\r\\n                                  <input type=\\\"radio\\\" style=\\\"height: 13px !important;\\\" name=\\\"ShareDivision\\\" value=2\\r\\n                                    [(ngModel)]=\\\"divisioncheckObj.ShareAllDiv\\\"\\r\\n                                    (change)=\\\"ShareAllDiv($event.target.checked==1?1:0)\\\" [disabled]=\\\"enableDivision == false\\\">&nbsp;Share To All Division\\r\\n                                </div>\\r\\n                              </div>\\r\\n                            </fieldset>\\r\\n                          </div>\\r\\n\\r\\n                        </fieldset>\\r\\n                      </div>\\r\\n                      <div class=\\\"col-md-6\\\">\\r\\n                        <fieldset *ngIf=\\\"showDivSelectionTable\\\" style=\\\"background-color: #e2eaea;\\\">\\r\\n                          <legend style=\\\"font-size: 15px !important\\\">\\r\\n                            Account Sharing Division Selection :</legend>\\r\\n                          <div style=\\\"overflow-y: auto;height: 120px;\\\">\\r\\n                            <table>\\r\\n                              <tr *ngFor=\\\"let d of division;let i = index\\\" >\\r\\n                                <td style=\\\"border:1px solid #e0e0e0;width: 1%;\\\">\\r\\n                                  <input type=\\\"checkbox\\\" [(ngModel)]=\\\"d.isCheck\\\"\\r\\n                                    (change)=\\\"check($event)\\\" value=\\\"{{d}}\\\" (click)='rowClick(i)' *ngIf = '!d.isDefault'>\\r\\n                                    <input type=\\\"checkbox\\\" [(ngModel)]=\\\"d.isCheck\\\" [checked] *ngIf = 'd.isDefault' disabled>\\r\\n                                </td>\\r\\n                                <td style=\\\"border:1px solid #e0e0e0;padding-left: 24px;width:100%\\\">{{d.NAME}}</td>\\r\\n                              </tr>\\r\\n\\r\\n\\r\\n\\r\\n                            </table>\\r\\n                          </div>\\r\\n\\r\\n                        </fieldset>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <!-- divisiowisemappting -->\\r\\n\\r\\n\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n          </div>\\r\\n\\r\\n          <!-- <div class=\\\"tab-pane\\\" id=\\\"tab2\\\">\\r\\n            <h4>Bank Information</h4>\\r\\n            <bankdetails></bankdetails>\\r\\n          </div>\\r\\n          <div class=\\\"tab-pane\\\" id=\\\"tab3\\\">\\r\\n            <h4> Information</h4>\\r\\n            <PLedger #PLedgerChild [PType]='PTypeForParty' [fromTree]='fromTreeTag'></PLedger>\\r\\n          </div> -->\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n</div>\\r\\n\\r\\n<style>\\r\\n  .filterclass {\\r\\n    margin: 10px;\\r\\n    height: 25px;\\r\\n    width: 220px;\\r\\n    color: #666666;\\r\\n    border: 1px solid #cbcbcb;\\r\\n    border-radius: 5px;\\r\\n    background-color: #ffffff;\\r\\n    box-shadow: none;\\r\\n    font-size: 14px;\\r\\n  }\\r\\n</style>\\r\\n\\r\\n<div>\\r\\n  <div class=\\\"modal fade\\\" bsModal #DeleteAcc=\\\"bs-modal\\\" [config]=\\\"{backdrop: 'static'}\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\"\\r\\n    aria-labelledby=\\\"mySmallModalLabel\\\" aria-hidden=\\\"true\\\" style=\\\"margin:-100px;height:460px\\\">\\r\\n    <div class=\\\"modal-dialog modal-sm\\\">\\r\\n      <div class=\\\"modal-content\\\" style=\\\"width: 420px;\\\">\\r\\n        <div class=\\\"modal-header\\\">\\r\\n          <button class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"onClickNo()\\\">\\r\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n\\r\\n          </button>\\r\\n          <h4 class=\\\"modal-title\\\">Delete Account</h4>\\r\\n        </div>\\r\\n        <div class=\\\"modal-body\\\">\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-12\\\" style=\\\"margin-top: -10px;margin-bottom: 12px;\\\">\\r\\n              Are you sure you want to delete this account?\\r\\n            </div>\\r\\n            <div class=\\\"col-md-12\\\">\\r\\n              <button (click)=\\\"DeleteYes()\\\" style=\\\"margin-right: 4px;\\\" class=\\\"btn btn-danger \\\">Yes</button>\\r\\n              <button (click)=\\\"DeleteNo()\\\" type=\\\"button \\\" class=\\\"btn btn-warning\\\">No</button>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n<div class=\\\"modal fade\\\" bsModal #childModal=\\\"bs-modal\\\" [config]=\\\"{backdrop: 'static'}\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\"\\r\\n  aria-labelledby=\\\"mySmallModalLabel\\\" aria-hidden=\\\"true\\\">\\r\\n  <div class=\\\"modal-dialog modal-sm\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <div class=\\\"modal-header\\\">\\r\\n        <button class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"hideChildModal()\\\">\\r\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n\\r\\n        </button>\\r\\n        <h4 class=\\\"modal-title\\\">Information</h4>\\r\\n      </div>\\r\\n      <div class=\\\"modal-body\\\">\\r\\n        {{DialogMessage}}\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div >\\r\\n  <div class=\\\"modal fade\\\" bsModal #ShiftParent=\\\"bs-modal\\\" [config]=\\\"{backdrop: 'static'}\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\"\\r\\n    aria-labelledby=\\\"mySmallModalLabel\\\" aria-hidden=\\\"true\\\" style=\\\"margin:-100px;\\\">\\r\\n    <div class=\\\"modal-dialog modal-sm\\\">\\r\\n      <div class=\\\"modal-content\\\" style=\\\"width: 420px;\\\">\\r\\n        <div class=\\\"modal-header\\\">\\r\\n          <button class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"onClose()\\\">\\r\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n\\r\\n          </button>\\r\\n          <h4 class=\\\"modal-title\\\">Shift Parent</h4>\\r\\n        </div>\\r\\n        <div class=\\\"modal-body\\\">\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-12\\\" style=\\\"margin-top: -10px;margin-bottom: 12px;\\\">\\r\\n                <div class=\\\"row\\\">\\r\\n                  <div class=\\\"col-md-3\\\">\\r\\n                    <label>From Parent</label>\\r\\n                  </div>\\r\\n                  <div class=\\\"col-md-6\\\">\\r\\n                    <select class=\\\"form-control\\\" style=\\\"margin-bottom: 5px;\\\" [(ngModel)]=\\\"ShiftParentObj.FROMPARENT\\\" disabled>\\r\\n                      <option *ngFor=\\\"let parent of ParentList\\\" value=\\\"{{parent.ACID}}\\\">{{parent.ACNAME}}</option>\\r\\n                    </select >\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-md-3\\\">\\r\\n                  <label>To Parent</label>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-6\\\">\\r\\n                  <select class=\\\"form-control\\\" [(ngModel)]=\\\"ShiftParentObj.TOPARENT\\\">\\r\\n                    <option *ngFor=\\\"let parent of ParentList\\\" value=\\\"{{parent.ACID}}\\\">{{parent.ACNAME}}</option>\\r\\n                  </select>\\r\\n              </div>\\r\\n            </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-12\\\">\\r\\n              <button type=\\\"button\\\" (click)=\\\"ConfirmShiftParent()\\\" style=\\\"margin-right: 4px;\\\" class=\\\"btn btn-info \\\">Ok</button>\\r\\n              <button (click)=\\\"onClose()\\\" type=\\\"button\\\" class=\\\"btn btn-info\\\">Cancel</button>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"modal-sticky\\\" *ngIf=\\\"showAccountLedgerFilterpopUp\\\" style=\\\"display: block;\\r\\npadding: 0px;\\r\\nmargin-bottom: 159px;\\r\\nheight: 241px;\\r\\nposition: absolute;\\r\\nright: 30%;\\r\\n/* top: 5px; */\\r\\nwidth: 550px;\\r\\nz-index: 9999999;\\r\\nborder: 1px solid;background: white;\\\">\\r\\n\\r\\n  <div class=\\\"modal-content modal-content-main-area\\\">\\r\\n    <div class=\\\"modal-header\\\" style=\\\"height: 40px;padding-bottom: 6%;\\\">\\r\\n      <h4 class=\\\"modal-title\\\" id=\\\"myModalLabel\\\">Ledger filter </h4>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"col-md-12\\\" style=\\\"height: 226px; margin-top : 10px;    margin-left: 3%;\\\">\\r\\n\\r\\n      <div class=\\\"row\\\" style=\\\"margin-top: 8px;\\\">\\r\\n        <div class=\\\"col-sm-4\\\">\\r\\n          <label class=\\\"form-control-label\\\">Account Group : </label>\\r\\n        </div>\\r\\n        <select class=\\\"col-sm-8\\\" style=\\\"width: 56%;\\\" [(ngModel)] = \\\"LedgerFilterObj.MAINGROUP\\\" (change)=\\\"changeAccountGroup()\\\">\\r\\n          <option *ngFor=\\\"let parent of ParentList\\\" value=\\\"{{parent.ACID}}\\\">{{parent.ACNAME}}</option>\\r\\n        </select>\\r\\n      </div>\\r\\n      <div class=\\\"row\\\" style=\\\"margin-top: 8px;\\\">\\r\\n        <div class=\\\"col-sm-4\\\">\\r\\n          <label class=\\\"form-control-label\\\">Account Type: </label>\\r\\n        </div>\\r\\n        <select class=\\\"col-sm-8\\\" style=\\\"width: 56%;\\\" [(ngModel)] = \\\"LedgerFilterObj.ACCOUNTTYPE\\\" (change)=\\\"changeAccountType()\\\">\\r\\n          <option value=\\\"Group\\\">Group</option>\\r\\n          <option value=\\\"Account\\\">Account</option>\\r\\n        </select>\\r\\n      </div>\\r\\n      <div class=\\\"row\\\" style=\\\"margin-top: 8px;\\\" *ngIf=\\\"LedgerFilterObj.ACCOUNTTYPE == 'Group'\\\">\\r\\n        <div class=\\\"col-sm-4\\\">\\r\\n          <label class=\\\"form-control-label\\\">Sub Account Group : </label>\\r\\n        </div>\\r\\n        <select class=\\\"col-sm-8\\\" style=\\\"width: 56%;\\\" [(ngModel)] = \\\"LedgerFilterObj.SUBGROUP\\\">\\r\\n          <option *ngFor=\\\"let parent of SubGroupAccountMaster\\\" value=\\\"{{parent.ACID}}\\\">{{parent.ACNAME}}</option>\\r\\n        </select>\\r\\n      </div>\\r\\n      <div class=\\\"row\\\" style=\\\"margin-top: 8px;\\\" *ngIf=\\\"LedgerFilterObj.ACCOUNTTYPE == 'Account'\\\">\\r\\n        <div class=\\\"col-sm-4\\\">\\r\\n          <label class=\\\"form-control-label\\\">Account Name : </label>\\r\\n        </div>\\r\\n        <select class=\\\"col-sm-8\\\" style=\\\"width: 56%;\\\" [(ngModel)] = \\\"LedgerFilterObj.ACID\\\">\\r\\n          <option *ngFor=\\\"let parent of ChildrenList\\\" value=\\\"{{parent.ACID}}\\\">{{parent.ACNAME}}</option>\\r\\n        </select>\\r\\n      </div>\\r\\n\\r\\n      <div style=\\\"float: right;\\r\\n      margin-top: 14px;\\r\\n      margin-right: 9%;\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" style=\\\"background: #3caed0;border-color: #2dacd1;\\\" (click)=\\\"OkCommand()\\\">Apply</button>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" style=\\\"background: #3caed0;border-color: #2dacd1;\\\" (click)=\\\"ExportAll()\\\">Export\\r\\n          All</button>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" style=\\\"background: #3caed0;border-color: #2dacd1;\\\" (click)=\\\"CancelCommand()\\\">Cancel</button>\\r\\n      </div>\\r\\n\\r\\n\\r\\n    </div>\\r\\n\\r\\n\\r\\n  </div>\\r\\n\\r\\n</div>\\r\\n\\r\\n<generic-popup-grid #genericGridBankList [popupsettings]=\\\"gridBankPopupSettings\\\"\\r\\n  (onItemDoubleClick)=\\\"onBankSelect($event)\\\"></generic-popup-grid>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/masters/components/account-ledger/accountLedgerTable.component.html\n// module id = 1857\n// module chunks = 12","module.exports = \"<form [formGroup]=\\\"AddLedger\\\">\\r\\n    <div class=\\\"row\\\" class=\\\"form-horizontal\\\">\\r\\n\\r\\n        <div style=\\\" border:1px solid;border-color:#dcdcdc; padding:20px; margin-bottom: 10px;\\\">\\r\\n            <div class=\\\"com-sm-12\\\" style=\\\"padding:5px;border-bottom: solid 1px #dcdcdc; margin-bottom: 10px;\\\">\\r\\n                <h5>{{modeTitle}}</h5>\\r\\n            </div>\\r\\n\\r\\n            <!-- <div *ngFor=\\\"let g of acGroups;let k = index\\\" class=\\\"form-group row\\\">\\r\\n                <label class=\\\"col-sm-2 form-control-label\\\"> {{g.group}} </label>\\r\\n                 <div class=\\\"col-sm-6\\\">\\r\\n                    <p-dropdown [style]=\\\"{'width':'350px'}\\\" [options]=\\\"g.options\\\" [(ngModel)]=\\\"g.value.SELECTEDGROUPAC\\\" [ngModelOptions]=\\\"{standalone: true}\\\"\\r\\n                        (onChange)=\\\"onGrpChange($event,k,g.value.SELECTEDGROUPAC)\\\" placeholder=\\\"Select a group\\\"></p-dropdown>\\r\\n                </div> \\r\\n            </div> -->\\r\\n            <div class=\\\"form-group row\\\">\\r\\n\\r\\n                    <label class=\\\"col-sm-2 form-control-label\\\">Primary Group:</label>\\r\\n                    <div class=\\\"col-sm-6\\\">\\r\\n                        <input type=\\\"text\\\" placeholder=\\\"Group Name\\\" formControlName=\\\"ACNAME\\\" class=\\\"form-control\\\" />\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"form-group row\\\">\\r\\n\\r\\n                        <label class=\\\"col-sm-2 form-control-label\\\">Under:</label>\\r\\n                        <div class=\\\"col-sm-6\\\">\\r\\n                            <input type=\\\"text\\\" placeholder=\\\"Group Name\\\" formControlName=\\\"ACNAME\\\" class=\\\"form-control\\\" />\\r\\n                        </div>\\r\\n                    </div>\\r\\n            <div class=\\\"form-group row\\\">\\r\\n\\r\\n                <label class=\\\"col-sm-2 form-control-label\\\">LedgerName:</label>\\r\\n                <div class=\\\"col-sm-6\\\">\\r\\n                    <input type=\\\"text\\\"placeholder=\\\"Ledger Name\\\" formControlName=\\\"ACNAME\\\" class=\\\"form-control\\\" />\\r\\n                </div>\\r\\n            </div>\\r\\n             <div class=\\\"alert alert-danger\\\" *ngIf=\\\"AddLedger.controls['ACCODE'].touched && !AddLedger.controls['ACCODE'].valid\\\">LedgerName is Required.</div>\\r\\n            \\r\\n           \\r\\n            \\r\\n          \\r\\n            <div class=\\\"form-group row\\\">\\r\\n                <label class=\\\"col-sm-2 form-control-label\\\">Has Subledger:</label>\\r\\n                <div class=\\\"col-sm-2\\\" style=\\\"margin-top:10px;\\\">\\r\\n                    <!-- <input [value]=1 formControlName=\\\"hasSub\\\" type=\\\"checkbox\\\" (change)=\\\"changehassubEvent(1)\\\"> -->\\r\\n                    <input type=\\\"checkbox\\\"  (change)=\\\"check($event.target.checked==1?1:0)\\\" formControlName=\\\"hasSub\\\" name=\\\"hasSubLedger\\\" >\\r\\n                </div>\\r\\n\\r\\n            </div>\\r\\n           \\r\\n            \\r\\n            <!-- <fieldset style=\\\"border:1px solid #dcdcdc; margin-top:30px;\\\">\\r\\n                <label style=\\\"background-color:white; position: absolute; margin-top:-22px; margin-left: 20px; padding:5px;\\\">ACType</label>\\r\\n\\r\\n                <table>\\r\\n                    <tr>\\r\\n                        <td>\\r\\n                            <p-radioButton class=\\\"radioMargin\\\" name=\\\"Actype\\\" value=\\\"AT\\\" (onClick)=\\\"changeACtype('AT')\\\" formControlName=\\\"ACType\\\" label=\\\"Assets\\\"\\r\\n                                disabled=\\\"disableActype==true\\\"></p-radioButton>\\r\\n\\r\\n                        </td>\\r\\n                        <td>\\r\\n                            <p-radioButton class=\\\"radioMargin\\\" name=\\\"Actype\\\" value=\\\"LB\\\" (onClick)=\\\"changeACtype('LB')\\\" formControlName=\\\"ACType\\\" label=\\\"Liabilities\\\"\\r\\n                                disabled=\\\"disableActype==true\\\"></p-radioButton>\\r\\n                        </td>\\r\\n                        <td>\\r\\n                            <p-radioButton class=\\\"radioMargin\\\" name=\\\"Actype\\\" value=\\\"DE\\\" (onClick)=\\\"changePtype('DE')\\\" formControlName=\\\"ACType\\\" label=\\\"Direct Expenses\\\"\\r\\n                                disabled=\\\"disableActype==true\\\"></p-radioButton>\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                    <tr>\\r\\n                        <td>\\r\\n                            <p-radioButton class=\\\"radioMargin\\\" name=\\\"Actype\\\" value=\\\"IE\\\" (onClick)=\\\"changeACtype('IE')\\\" formControlName=\\\"ACType\\\" label=\\\"Indirect Expenses\\\"\\r\\n                                disabled=\\\"disableActype==true\\\"></p-radioButton>\\r\\n                        </td>\\r\\n                        <td>\\r\\n                            <p-radioButton class=\\\"radioMargin\\\" name=\\\"Actype\\\" value=\\\"DI\\\" (onClick)=\\\"changeACtype('DI')\\\" formControlName=\\\"ACType\\\" label=\\\"Direct Income\\\"\\r\\n                                disabled=\\\"disableActype==true\\\"></p-radioButton>\\r\\n                        </td>\\r\\n                        <td>\\r\\n                            <p-radioButton class=\\\"radioMargin\\\" name=\\\"Actype\\\" value=\\\"II\\\" (onClick)=\\\"changeACtype('II')\\\" formControlName=\\\"ACType\\\" label=\\\"Indirect Income\\\"\\r\\n                                disabled=\\\"disableActype==true\\\"></p-radioButton>\\r\\n                        </td>\\r\\n                    </tr>\\r\\n\\r\\n                </table>\\r\\n\\r\\n            </fieldset> -->\\r\\n\\r\\n            <fieldset *ngIf=\\\"value==true\\\" style=\\\"border:1px solid #dcdcdc; margin-top:30px;\\\">\\r\\n                <label style=\\\"background-color:white; position: absolute; margin-top:-22px; margin-left: 20px; padding:5px;\\\">ASSETS</label>\\r\\n\\r\\n                <!-- <table>\\r\\n                    <tr>\\r\\n                        <td>\\r\\n                            <p-radioButton class=\\\"radioMargin\\\" name=\\\"Assets\\\" formControlName=\\\"ASSETTYPE\\\" label=\\\"Cash\\\" disabled=\\\"disableActype==true\\\"></p-radioButton>\\r\\n                        </td>\\r\\n                        <td>\\r\\n                            <p-radioButton class=\\\"radioMargin\\\" name=\\\"Assets\\\" formControlName=\\\"ASSETTYPE\\\" label=\\\"Bank\\\" disabled=\\\"disableActype==true\\\"></p-radioButton>\\r\\n                        </td>\\r\\n                        <td>\\r\\n                            <p-radioButton class=\\\"radioMargin\\\" name=\\\"Assets\\\" formControlName=\\\"ASSETTYPE\\\" label=\\\"Others\\\" disabled=\\\"disableActype==true\\\"></p-radioButton>\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                </table> -->\\r\\n\\r\\n            </fieldset>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n\\r\\n\\r\\n    <button type=\\\"button\\\" (click)=\\\"onSave()\\\" title=\\\"onSave\\\" class=\\\"btn btn-info\\\" [disabled]=\\\"!parentGroup || !AddLedger.valid\\\" >Save</button>\\r\\n\\r\\n    <button type=\\\"button\\\" (click)=\\\"cancel()\\\" title=\\\"Cancel\\\" class=\\\"btn btn-info\\\">Back</button>\\r\\n</form>\\r\\n\\r\\n<div class=\\\"modal fade\\\" bsModal #childModal=\\\"bs-modal\\\" [config]=\\\"{backdrop: 'static'}\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"mySmallModalLabel\\\"\\r\\n    aria-hidden=\\\"true\\\">\\r\\n    <div class=\\\"modal-dialog modal-sm\\\">\\r\\n        <div class=\\\"modal-content\\\">\\r\\n            <div class=\\\"modal-header\\\">\\r\\n                <button class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"hideChildModal()\\\">\\r\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n          \\r\\n        </button>\\r\\n                <h4 class=\\\"modal-title\\\">Information</h4>\\r\\n            </div>\\r\\n            <div class=\\\"modal-body\\\">\\r\\n                {{DialogMessage}}\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n<style>\\r\\n    .inputLenght {\\r\\n        width: 350px;\\r\\n        height: 30px;\\r\\n    }\\r\\n\\r\\n    .radioMargin {\\r\\n        margin-left: 100px;\\r\\n    }\\r\\n\\r\\n    .ui-dropdown .ui-dropdown-label {\\r\\n        display: block;\\r\\n        border: 0;\\r\\n        white-space: nowrap;\\r\\n        overflow: hidden;\\r\\n        font-weight: normal;\\r\\n        width: 100%;\\r\\n        padding-right: 1.5em;\\r\\n        height: 20px;\\r\\n    }\\r\\n</style>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/masters/components/account-ledger/addledger.component.html\n// module id = 1858\n// module chunks = 12","module.exports = \"<form [formGroup]='AddACGrpForm'>\\r\\n    <div class=\\\"row\\\" class=\\\"form-horizontal\\\">\\r\\n        <ba-card [title]=\\\"modeTitle\\\" baCardClass=\\\"with-scroll\\\">\\r\\n            <div class=\\\"form-group row\\\">\\r\\n                <label class=\\\"col-sm-2 form-control-label\\\">Group Name:</label>\\r\\n                <div class=\\\"col-sm-2\\\">\\r\\n                    <select style=\\\"width:130px; height:28px;\\\" formControlName=\\\"majorparent\\\">\\r\\n       <option *ngFor=\\\"let code of ParentAcList\\\" [ngValue]=\\\"code.ACID\\\">{{code.ACNAME}}</option>\\r\\n      </select>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group row\\\">\\r\\n                <label class=\\\"col-sm-2 form-control-label\\\">New Group:</label>\\r\\n                <div class=\\\"col-sm-2\\\">\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"ACNAME\\\">\\r\\n                    <div class=\\\"alert alert-danger\\\" *ngIf=\\\"AddACGrpForm.controls['ACNAME'].touched && !AddACGrpForm.controls['ACNAME'].valid\\\">New Group is Required.</div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group row\\\">\\r\\n                <label class=\\\"col-sm-2 form-control-label\\\">Has Subledger:</label>\\r\\n                <div class=\\\"col-sm-2\\\">\\r\\n                    <input [value]=1 formControlName=\\\"hasSub\\\" type=\\\"checkbox\\\" (change)=\\\"changehassubEvent(1)\\\">\\r\\n\\r\\n                </div>\\r\\n            </div>\\r\\n           <fieldset style=\\\"border:1px solid black; margin-top:30px;\\\">\\r\\n                <label style=\\\"background-color:white; position: absolute; margin-top:-17px; margin-left: 20px; padding:5px;\\\">PType</label>\\r\\n\\r\\n                <table>\\r\\n                    <tr>\\r\\n                        <td> <label style=\\\"width:200px; padding:5px; margin-top:10px; margin-left:50px;\\\">Assets: </label><input  [value]=\\\"A\\\" type=\\\"radio\\\" (change)=\\\"changePtype('A')\\\" formControlName=\\\"Ptype\\\">\\r\\n                        <td> <label style=\\\"width:200px; padding:5px; margin-top:10px; margin-left:30px;\\\">Liabilities: </label><input  type=\\\"radio\\\" [value]=\\\"L\\\"  (change)=\\\"changePtype('L')\\\" formControlName=\\\"Ptype\\\">\\r\\n                    </tr>\\r\\n                    <tr>\\r\\n                        <td> <label style=\\\"width:200px; padding:5px; margin-top:10px; margin-left:50px;\\\">Direct Income: </label><input  [value]=\\\"D\\\" type=\\\"radio\\\"  (change)=\\\"changePtype('D')\\\" formControlName=\\\"Ptype\\\">\\r\\n                         <td> <label style=\\\"width:200px; padding:5px; margin-top:10px; margin-left:30px;\\\">Indirect Income: </label><input  [value]=\\\"I\\\" type=\\\"radio\\\"  (change)=\\\"changePtype('I')\\\" formControlName=\\\"Ptype\\\">   \\r\\n                    </tr>\\r\\n\\r\\n                </table>\\r\\n\\r\\n            </fieldset>\\r\\n\\r\\n        </ba-card>\\r\\n    </div>\\r\\n\\r\\n    <button type=\\\"button\\\" (click)=\\\"onSave()\\\" title=\\\"Save\\\" class=\\\"btn btn-info\\\">Save</button>\\r\\n\\r\\n    <button type=\\\"button\\\" (click)=\\\"cancel()\\\" title=\\\"Cancel\\\" class=\\\"btn btn-info\\\">Back</button>\\r\\n</form>\\r\\n\\r\\n<div class=\\\"modal fade\\\" bsModal #childModal=\\\"bs-modal\\\" [config]=\\\"{backdrop: 'static'}\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"mySmallModalLabel\\\"\\r\\n    aria-hidden=\\\"true\\\">\\r\\n    <div class=\\\"modal-dialog modal-sm\\\">\\r\\n        <div class=\\\"modal-content\\\">\\r\\n            <div class=\\\"modal-header\\\">\\r\\n                <button class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"hideChildModal()\\\">\\r\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n          \\r\\n        </button>\\r\\n                <h4 class=\\\"modal-title\\\">Information</h4>\\r\\n            </div>\\r\\n            <div class=\\\"modal-body\\\">\\r\\n                {{DialogMessage}}\\r\\n            </div>\\r\\n            <!--<div class=\\\"modal-footer\\\">\\r\\n                        <button class=\\\"btn btn-info confirm-btn\\\" (click)=\\\"hideChildModal()\\\">Save changes</button>\\r\\n                        <button class=\\\"btn btn-info confirm-btn\\\" type=\\\"button\\\" (click)=onsubmit()>Save</button>\\r\\n                    </div>!-->\\r\\n\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n<div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/masters/components/account-ledger/addsubgrps.component.html\n// module id = 1859\n// module chunks = 12","module.exports = \"<form [formGroup]=\\\"Addform\\\">\\r\\n<div class=\\\"row\\\" class=\\\"form-horizontal\\\">\\r\\n    <ba-card [title]=\\\"modeTitle\\\" baCardClass=\\\"with-scroll\\\">\\r\\n    <div class=\\\"form-group row\\\">\\r\\n    <label class=\\\"col-sm-2 form-control-label\\\">Group Name:</label>\\r\\n    <div class=\\\"col-sm-5\\\">\\r\\n       <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"ACNAME\\\" placeholder=\\\"Group Name\\\">\\r\\n        <div class=\\\"alert alert-danger\\\" *ngIf=\\\"Addform.controls['ACNAME'].touched && !Addform.controls['ACNAME'].valid\\\">GroupName is Required.</div>\\r\\n     \\r\\n    </div> \\r\\n  </div>\\r\\n \\r\\n  </ba-card>\\r\\n    </div>\\r\\n    \\r\\n  <button type=\\\"button\\\" (click)=\\\"onSave()\\\" title=\\\"Save\\\" class=\\\"btn btn-info\\\">Save</button>\\r\\n\\r\\n  <button type=\\\"button\\\" (click)=\\\"cancel()\\\" title=\\\"Cancel\\\" class=\\\"btn btn-info\\\">Back</button>\\r\\n  </form>\\r\\n  <div class=\\\"modal fade\\\" bsModal #childModal=\\\"bs-modal\\\" [config]=\\\"{backdrop: 'static'}\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"mySmallModalLabel\\\"\\r\\n            aria-hidden=\\\"true\\\">\\r\\n            <div class=\\\"modal-dialog modal-sm\\\">\\r\\n                <div class=\\\"modal-content\\\">\\r\\n                    <div class=\\\"modal-header\\\">\\r\\n                        <button class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"hideChildModal()\\\">\\r\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n          \\r\\n        </button>\\r\\n                        <h4 class=\\\"modal-title\\\">Information</h4>\\r\\n                    </div>\\r\\n                    <div class=\\\"modal-body\\\">\\r\\n                        {{DialogMessage}}\\r\\n                    </div>\\r\\n                    <!--<div class=\\\"modal-footer\\\">\\r\\n                        <button class=\\\"btn btn-info confirm-btn\\\" (click)=\\\"hideChildModal()\\\">Save changes</button>\\r\\n                        <button class=\\\"btn btn-info confirm-btn\\\" type=\\\"button\\\" (click)=onsubmit()>Save</button>\\r\\n                    </div>!-->\\r\\n\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n     <div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/masters/components/party-ledger/addMajorgrp.component.html\n// module id = 1863\n// module chunks = 12","module.exports = \"<form [formGroup]=\\\"form\\\">\\r\\n<div class=\\\"row\\\" class=\\\"form-horizontal\\\">\\r\\n    <ba-card [title]=\\\"modeTitle\\\" baCardClass=\\\"with-scroll\\\">\\r\\n    <div class=\\\"form-group row\\\">\\r\\n    <label class=\\\"col-sm-2 form-control-label\\\">Group Name:</label>\\r\\n    <div class=\\\"col-sm-2\\\">\\r\\n        <select style=\\\"width:130px; height:28px;\\\" formControlName=\\\"majorparent\\\">\\r\\n       <option *ngFor=\\\"let code of ParentAcList\\\" [ngValue]=\\\"code.ACID\\\">{{code.ACNAME}}</option>\\r\\n         <!--<div class=\\\"alert alert-danger\\\" *ngIf=\\\"form.controls['ACNAME'].touched && !Addform.controls['ACNAME'].valid\\\">GroupName is Required.</div>-->\\r\\n      </select>\\r\\n     </div>\\r\\n  </div>\\r\\n  <div class=\\\"form-group row\\\">\\r\\n    <label class=\\\"col-sm-2 form-control-label\\\">New SubGroup:</label>\\r\\n    <div class=\\\"col-sm-2\\\">\\r\\n      <input type=\\\"text\\\" class=\\\"form-control\\\"formControlName=\\\"ACNAME\\\">\\r\\n        <div class=\\\"alert alert-danger\\\" *ngIf=\\\"form.controls['ACNAME'].touched && !form.controls['ACNAME'].valid\\\">GroupName is Required.</div>\\r\\n    </div>\\r\\n  </div>\\r\\n <div class=\\\"form-group row\\\">\\r\\n    <label class=\\\"col-sm-2 form-control-label\\\">Has Subledger:</label>\\r\\n    <div class=\\\"col-sm-2\\\">\\r\\n      <input  [value]=1 name=\\\"hasSub\\\" type=\\\"checkbox\\\" (change)=\\\"changehassubEvent(1)\\\">\\r\\n        \\r\\n    </div>\\r\\n  </div>\\r\\n \\r\\n    </ba-card>\\r\\n    </div>\\r\\n    \\r\\n  <button type=\\\"button\\\" (click)=\\\"onSave()\\\" title=\\\"Save\\\" class=\\\"btn btn-info\\\">Save</button>\\r\\n\\r\\n  <button type=\\\"button\\\" (click)=\\\"cancel()\\\" title=\\\"Cancel\\\" class=\\\"btn btn-info\\\">Back</button>\\r\\n </form>\\r\\n  <div class=\\\"modal fade\\\" bsModal #childModal=\\\"bs-modal\\\" [config]=\\\"{backdrop: 'static'}\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"mySmallModalLabel\\\"\\r\\n            aria-hidden=\\\"true\\\">\\r\\n            <div class=\\\"modal-dialog modal-sm\\\">\\r\\n                <div class=\\\"modal-content\\\">\\r\\n                    <div class=\\\"modal-header\\\">\\r\\n                        <button class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"hideChildModal()\\\">\\r\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n          \\r\\n        </button>\\r\\n                        <h4 class=\\\"modal-title\\\">Information</h4>\\r\\n                    </div>\\r\\n                    <div class=\\\"modal-body\\\">\\r\\n                        {{DialogMessage}}\\r\\n                    </div>\\r\\n                    <!--<div class=\\\"modal-footer\\\">\\r\\n                        <button class=\\\"btn btn-info confirm-btn\\\" (click)=\\\"hideChildModal()\\\">Save changes</button>\\r\\n                        <button class=\\\"btn btn-info confirm-btn\\\" type=\\\"button\\\" (click)=onsubmit()>Save</button>\\r\\n                    </div>!-->\\r\\n\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n     <div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/masters/components/party-ledger/addpartygrp.component.html\n// module id = 1864\n// module chunks = 12","module.exports = \"<style>\\r\\n  label {\\r\\n    width: 150px;\\r\\n    font-size: 15px;\\r\\n    color: #403c3c;\\r\\n  }\\r\\n\\r\\n  input {\\r\\n    height: 30px;\\r\\n  }\\r\\n\\r\\n  label{\\r\\n    font-size: 14px;\\r\\n  }\\r\\n  .req-red {\\r\\n  color: #ff0d0d;\\r\\n}\\r\\n</style>\\r\\n<!-- begin form here -->\\r\\n<form [formGroup]=\\\"form\\\">\\r\\n  \\r\\n  <div class=\\\"main-container\\\" style=\\\"padding-top : 10px; margin-bottom: 0px; margin-top: 0px !important;\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-12\\\">\\r\\n        <div class=\\\"tabbable\\\" id=\\\"warehouse-tabs\\\">\\r\\n          <ul class=\\\"nav nav-tabs\\\">\\r\\n            <li class=\\\"nav-item\\\">\\r\\n              <a class=\\\"nav-link active\\\" href=\\\"#general-info4\\\" data-toggle=\\\"tab\\\">Party a/c Information</a>\\r\\n            </li>\\r\\n            <li class=\\\"nav-item\\\">\\r\\n              <a class=\\\"nav-link\\\" href=\\\"#contact-details\\\" *ngIf=\\\"grp =='A'\\\" data-toggle=\\\"tab\\\">Additional Information</a>\\r\\n            </li>\\r\\n            <li class=\\\"nav-item\\\">\\r\\n              <a class=\\\"nav-link\\\" href=\\\"#bank-details\\\" *ngIf=\\\"grp =='A'\\\" data-toggle=\\\"tab\\\">Bank Details</a>\\r\\n            </li>\\r\\n            <li class=\\\"nav-item\\\">\\r\\n              <a class=\\\"nav-link\\\" href=\\\"#divisionwise-setting\\\" *ngIf=\\\"grp =='A' && enableDivisionMapping == true\\\" data-toggle=\\\"tab\\\">Division Wise Setting</a>\\r\\n            </li>\\r\\n            <li class=\\\"nav-item\\\">\\r\\n              <a class=\\\"nav-link\\\" href=\\\"#sales-target\\\" *ngIf=\\\"grp =='A' && userSetting.ENABLESALES_TARGET == 1 && ISCUSTOMER==true\\\" data-toggle=\\\"tab\\\">Sales Target</a>\\r\\n            </li>\\r\\n\\r\\n           \\r\\n           \\r\\n            <!-- <li class=\\\"nav-item\\\">\\r\\n              <a class=\\\"nav-link\\\" href=\\\"#route\\\" data-toggle=\\\"tab\\\">Route</a>\\r\\n            </li> -->\\r\\n          </ul>\\r\\n                  <!-- <label *ngIf=\\\"modeTitle\\\" style=\\\"font-weight: bold;font-size: 16px;width: 200px;padding-top: 1%;\\\">&nbsp;>> {{ modeTitle}}</label> -->\\r\\n          \\r\\n            <div style=\\\"float: right;padding-top: 8px;padding-right: 8px;\\\">\\r\\n              <button type=\\\"button\\\" (click)=\\\"SumbitSave()\\\" title=\\\"onSave\\\" class=\\\"btn btn-info\\\" \\r\\n      *ngIf=\\\"grp=='A' && Is_OverseasParty==0\\\" [disabled]=\\\"!form.valid || mode=='view'\\\" style=\\\"width:80px;margin-right: 10px;\\\">Save</button>\\r\\n      \\r\\n      <button type=\\\"button\\\" (click)=\\\"SumbitSave()\\\" title=\\\"onSave\\\" class=\\\"btn btn-info\\\" \\r\\n      *ngIf=\\\"grp=='A' && Is_OverseasParty==1\\\" [disabled]=\\\" mode=='view'\\\" style=\\\"width:80px;margin-right: 10px;\\\">Save</button>\\r\\n    \\r\\n      <button type=\\\"button\\\" (click)=\\\"SumbitSave()\\\" title=\\\"onSave\\\" class=\\\"btn btn-info\\\" *ngIf=\\\"grp=='G'\\\" style=\\\"width:80px;margin-right: 10px;\\\">Save</button>\\r\\n    <button type=\\\"button\\\" (click)=\\\"DeleteParty()\\\" class=\\\"btn btn-info\\\" *ngIf=\\\"grp == 'A' && mode == 'view'\\\" style=\\\"width: 80px;margin-right: 10px;\\\">Delete</button>\\r\\n    <button type=\\\"button\\\" (click)=\\\"cancel()\\\" title=\\\"Cancel\\\" class=\\\"btn btn-info\\\" style=\\\"width:80px;\\\">F3 Reset</button>\\r\\n            </div>\\r\\n         \\r\\n          <div class=\\\"tab-content\\\">\\r\\n              <div class=\\\"tab-pane active\\\" id=\\\"general-info4\\\">\\r\\n                <!-- General Info -->\\r\\n                <div class=\\\"form-group row\\\">\\r\\n                  <div class=\\\"col-sm-12\\\">\\r\\n                  \\r\\n                    <div class=\\\"form-group row\\\" style=\\\"margin-bottom: 10px !important;\\\">\\r\\n                    \\r\\n                        <label class=\\\"col-sm-2 form-control-label\\\" style=\\\"padding-top: 7px;\\\">Parent: <span class=\\\"req-red\\\">*</span></label>\\r\\n                        <!-- [(ngModel)]=\\\"g.value.SELECTEDGROUPAC\\\" [ngModelOptions]=\\\"{standalone: true}\\\" -->\\r\\n                        <div class=\\\"col-sm-3\\\">\\r\\n                          <input type=\\\"text\\\" style=\\\"font-size: 12px !important;\\\" class=\\\"form-control\\\"  placeholder=\\\"Parent\\\" formControlName=\\\"parentid\\\"/>\\r\\n                        </div> \\r\\n                    \\r\\n                      <label *ngIf=\\\"Title == 'AddLedger' ||  grp=='A'\\\" class=\\\"col-sm-2 form-control-label\\\" style=\\\"padding-top: 7px;\\\">A/C Code:</label>\\r\\n                      <div *ngIf=\\\"Title == 'AddLedger' ||  grp=='A'\\\" class=\\\"col-sm-3\\\">\\r\\n                        <input type=\\\"text\\\" id=\\\"ACCODE\\\" style=\\\"font-size: 12px !important;\\\" class=\\\"form-control\\\" formControlName=\\\"ACCODE\\\" placeholder=\\\"Account Code\\\">\\r\\n                        <!-- <div class=\\\"alert alert-danger\\\" *ngIf=\\\"form.controls['ACCODE'].touched && !form.controls['ACCODE'].valid\\\">Account Code is Required.</div> -->\\r\\n                      </div>\\r\\n                    \\r\\n                    </div>\\r\\n                    <div *ngIf=\\\"Title == 'AddGroup' || mode=='edit'  && grp!='A'\\\" class=\\\"form-group row\\\" style=\\\"margin-bottom: 10px !important;\\\">\\r\\n                      <label class=\\\"col-sm-2 form-control-label\\\" style=\\\"padding-top: 7px;\\\">GroupName:</label>\\r\\n                      <div class=\\\"col-sm-8\\\">\\r\\n                        <input type=\\\"text\\\" #ACNAME formControlName=\\\"ACNAME\\\" style=\\\"font-size: 12px !important;width: 97%;\\\" class=\\\"form-control\\\" placeholder=\\\"Group Name\\\" />\\r\\n                      </div>\\r\\n                    </div>\\r\\n                    <div *ngIf=\\\"Title == 'AddLedger' || mode=='edit' && grp=='A' || mode=='view' \\\">\\r\\n                      <div class=\\\"form-group row\\\" style=\\\"margin-bottom: 10px !important;\\\" *ngIf=\\\"userSetting.ENABLEPARENTCOMPANY == 1\\\">\\r\\n                        <label class=\\\"col-sm-2 form-control-label\\\" style=\\\"padding-top: 7px;\\\">Parent Company:</label>\\r\\n                        <div class=\\\"col-sm-8\\\">\\r\\n                        <input type=\\\"text\\\" style=\\\"font-size: 12px !important;width: 97%;\\\" class=\\\"form-control\\\" \\r\\n                        placeholder=\\\"Press Enter to Select Parent Company\\\" formControlName=\\\"PCompanyName\\\" #ParentCompany (keydown.Enter)=\\\"showParentAccountList();\\\">\\r\\n                        </div>\\r\\n                      </div>\\r\\n                      <div class=\\\"form-group row\\\" style=\\\"margin-bottom: 10px !important;\\\">\\r\\n                        <label class=\\\"col-sm-2 form-control-label\\\" style=\\\"padding-top: 7px;\\\">Ledger Name: <span class=\\\"req-red\\\">*</span></label>\\r\\n                        <div class=\\\"col-sm-8\\\">\\r\\n                          <input type=\\\"text\\\" #ACNAME style=\\\"font-size: 12px !important;width: 97%;\\\" class=\\\"form-control\\\" formControlName=\\\"ACNAME\\\" placeholder=\\\"Ledger Name\\\">\\r\\n                        </div>\\r\\n                      </div>\\r\\n                      <!-- <div class=\\\"alert alert-danger\\\" *ngIf=\\\"form.controls['ACNAME'].touched && !form.controls['ACNAME'].valid\\\">PartyLedger Name is Required.</div> -->\\r\\n              \\r\\n                      <div class=\\\"form-group row\\\" style=\\\"margin-bottom: 10px !important;\\\">\\r\\n                        <label class=\\\"col-sm-2 form-control-label\\\" style=\\\"padding-top: 7px;\\\">Address: <span class=\\\"req-red\\\">*</span></label>\\r\\n                        <div class=\\\"col-sm-8\\\">\\r\\n                          <input type=\\\"textarea\\\"  style=\\\"height: 45px !important;font-size: 12px !important; width:97%;\\\" rows=\\\"2\\\" cols=\\\"50\\\" class=\\\"form-control\\\" formControlName=\\\"ADDRESS\\\" placeholder=\\\"Address\\\">\\r\\n                        </div>\\r\\n                      </div>\\r\\n                      <!-- <div class=\\\"alert alert-danger\\\" *ngIf=\\\"form.controls['ADDRESS'].touched && !form.controls['ADDRESS'].valid\\\">Address is Required.</div> -->\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"row\\\">\\r\\n                  <div *ngIf=\\\"Title == 'AddLedger' || mode=='edit' && grp=='A' || mode=='view' \\\">\\r\\n                    <div class=\\\"col-md-5\\\">\\r\\n\\r\\n                      <div *ngIf=\\\"userSetting.isOverSeas == 1\\\" class=\\\"form-group row\\\" style=\\\"margin-bottom: 10px !important;\\\">\\r\\n                        <div class=\\\"col-sm-2\\\"></div>\\r\\n                          <div class=\\\"col-sm-7\\\" style=\\\"margin-left: 31%;\\\">\\r\\n                            <div class=\\\"row\\\">\\r\\n                            <input type=\\\"checkbox\\\" formControlName=\\\"IS_OVERSEAS_PARTY\\\" style=\\\"height:15px;\\\" class=\\\"col-sm-1\\\" \\r\\n                            (change)=\\\"changeIsOverseasParty(form.value.IS_OVERSEAS_PARTY)\\\">\\r\\n                            <label class=\\\"col-sm-6\\\">Is Overseas party</label>\\r\\n                            </div>\\r\\n                          </div>\\r\\n                        </div>\\r\\n\\r\\n\\r\\n                      <div *ngIf=\\\"userSetting.Country == 1\\\" class=\\\"form-group row\\\" style=\\\"margin-bottom: 10px !important;\\\">\\r\\n                        <label class=\\\"col-sm-2 form-control-label\\\" style=\\\"padding-top: 7px;\\\">VAT No: <span *ngIf=\\\"((this.userSetting.CompanyType == 'B2B'  || (this.userSetting.CompanyType == 'B2C' && !ISCUSTOMER)) && this.Is_OverseasParty != 1 && this.MasterService.userSetting.EnableDuplicateVATforParty != 1) \\\" class=\\\"req-red\\\">*</span> </label>\\r\\n                        <div class=\\\"col-sm-7\\\" *ngIf=\\\"Is_OverseasParty == 1 || (userSetting.VATNOTCOMPULSORY == 1 && ISCUSTOMER==false)\\\">\\r\\n                          <input type=\\\"text\\\" style=\\\"font-size: 12px !important;\\\" class=\\\"form-control\\\" formControlName=\\\"VATNO\\\" placeholder=\\\"VAT No .\\\" (change)=\\\"checkDuplicateVAT($event)\\\">\\r\\n                         \\r\\n                        </div>\\r\\n                        <div class=\\\"col-sm-7\\\" *ngIf=\\\"(Is_OverseasParty == 0 && (userSetting.VATNOTCOMPULSORY == 0 || (userSetting.VATNOTCOMPULSORY == 1 && ISCUSTOMER==true)))\\\">\\r\\n                          <input type=\\\"text\\\" style=\\\"font-size: 12px !important;\\\" class=\\\"form-control\\\" formControlName=\\\"VATNO\\\" placeholder=\\\"VAT No.\\\" (keypress)=\\\"keyPress($event)\\\" maxlength=\\\"9\\\" minlength=\\\"9\\\" (change)=\\\"checkDuplicateVAT($event)\\\">\\r\\n                          <div class=\\\"alert alert-danger\\\" *ngIf=\\\"form.controls['VATNO'].touched && !form.controls['VATNO'].valid\\\">VATNO is Required.</div>\\r\\n                        </div>\\r\\n\\r\\n                        \\r\\n                      </div>\\r\\n\\r\\n                      <div class=\\\"form-group row\\\" style=\\\"margin-bottom: 10px !important\\\">\\r\\n                        <label class=\\\"col-sm-2 form-control-label\\\" style=\\\"padding-top: 7px;\\\">Tel no:</label>\\r\\n                        <div class=\\\"col-sm-7\\\">\\r\\n                          <input type=\\\"text\\\" style=\\\"font-size: 12px !important;\\\" class=\\\"form-control\\\" formControlName=\\\"PHONE\\\" placeholder=\\\"Tel No.\\\">\\r\\n                        </div>\\r\\n                      </div>\\r\\n\\r\\n                      <div class=\\\"form-group row\\\" style=\\\"margin-bottom: 10px !important\\\">\\r\\n                        <label class=\\\"col-sm-2 form-control-label\\\" style=\\\"padding-top: 7px;\\\">Mobile:</label>\\r\\n                        <div class=\\\"col-sm-7\\\">\\r\\n                          <input type=\\\"text\\\" style=\\\"font-size: 12px !important;\\\" class=\\\"form-control\\\" formControlName=\\\"Mobile\\\" placeholder=\\\"Phone No.\\\" (keypress)=\\\"keyPress($event)\\\" maxlength=\\\"10\\\" minlength=\\\"10\\\">\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group row\\\" style=\\\"margin-bottom: 10px !important;\\\">\\r\\n                      <label class=\\\"col-sm-2 form-control-label\\\" style=\\\"padding-top: 7px;\\\">Email:</label>\\r\\n                      <div class=\\\"col-sm-7\\\">\\r\\n                        <input type=\\\"text\\\" style=\\\"font-size: 12px !important;\\\" class=\\\"form-control\\\" formControlName=\\\"EMAIL\\\" placeholder=\\\"Email Address\\\">\\r\\n                      </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group row\\\" style=\\\"margin-bottom: 10px !important;\\\">\\r\\n                      <label class=\\\"col-sm-2 form-control-label\\\" style=\\\"padding-top: 7px;\\\">Area:</label>\\r\\n                      <div class=\\\"col-sm-7\\\">\\r\\n                      <input type=\\\"text\\\" style=\\\"font-size: 12px !important;\\\" name=\\\"product\\\" list=\\\"productName\\\" (change)=\\\"onChangeArea($event)\\\"  class=\\\"form-control\\\" formControlName=\\\"CITY\\\"/>\\r\\n                      <datalist id=\\\"productName\\\">\\r\\n                        <option *ngFor=\\\"let i of areaList\\\" value=\\\"{{i.AREANAME}}\\\">{{\\r\\n                          i.AREANAME\\r\\n                        }}</option>\\r\\n                      </datalist>\\r\\n                      <div class=\\\"alert alert-danger\\\" *ngIf=\\\"form.controls['CITY'].touched && !form.controls['CITY'].valid\\\">Area is Required</div>\\r\\n                      </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group row\\\" style=\\\"margin-bottom: 10px !important;\\\" *ngIf=\\\"userSetting.Country == 1\\\">\\r\\n                      <label class=\\\"col-sm-2 form-control-label\\\" style=\\\"padding-top: 7px;\\\">Province</label>\\r\\n                        <div class=\\\"col-sm-7\\\">\\r\\n                          <select  style=\\\"font-size: 12px !important;\\\" class=\\\"form-control\\\" formControlName=\\\"STATE\\\" (change)=\\\"onStateChange($event)\\\">\\r\\n                            <option value=\\\"\\\"></option>\\r\\n                            <option value=\\\"1\\\">1</option>\\r\\n                            <option value=\\\"2\\\">2</option>\\r\\n                            <option value=\\\"3\\\">3</option>\\r\\n                            <option value=\\\"4\\\">4</option>\\r\\n                            <option value=\\\"5\\\">5</option>\\r\\n                            <option value=\\\"6\\\">6</option>\\r\\n                            <option value=\\\"7\\\">7</option>\\r\\n                            <option  *ngIf=\\\"userSetting.Country == 1\\\" value=\\\"8\\\">8</option>\\r\\n                          </select>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group row\\\" style=\\\"margin-bottom: 10px !important;\\\" *ngIf=\\\"userSetting.Country == 1\\\">\\r\\n                      <label class=\\\"col-sm-2 form-control-label\\\" style=\\\"padding-top: 7px;\\\">District</label>\\r\\n                        <div class=\\\"col-sm-7\\\">\\r\\n                          <select  style=\\\"font-size: 12px !important;\\\" class=\\\"form-control\\\" formControlName=\\\"DISTRICT\\\">\\r\\n                            <option value=\\\"\\\"></option>\\r\\n                            <option *ngFor=\\\"let i of DistrictListbyState\\\" value={{i.Name}} >{{i.Name}}</option>\\r\\n                          </select>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <!-- <div class=\\\"form-group row\\\" style=\\\"margin-bottom: 10px !important;\\\">\\r\\n                      <label class=\\\"col-sm-2 form-control-label\\\" style=\\\"padding-top: 7px;\\\">Status:</label>\\r\\n                      <div class=\\\"col-sm-7\\\"> -->\\r\\n                        <!-- <input type=\\\"checkbox\\\" class=\\\"form-control\\\" (change)=\\\"clickedNotActive(1)\\\" formControlName=\\\"isNotActive\\\"> -->\\r\\n                    \\r\\n                          <!-- <select formControlName=\\\"ISACTIVE\\\"  style=\\\"font-size: 12px !important;\\\" class=\\\"form-control\\\">\\r\\n                            <option value=\\\"1\\\">ACTIVE</option>\\r\\n                            <option value=\\\"0\\\">INACTIVE</option>\\r\\n                            \\r\\n                          </select> -->\\r\\n                          \\r\\n                        <!-- <input type=\\\"checkbox\\\"  (change)=\\\"NotActive($event.target.checked==1?1:0)\\\" formControlName=\\\"ISACTIVE\\\"> -->\\r\\n                      <!-- </div> -->\\r\\n                    <!-- </div> -->\\r\\n                  </div>\\r\\n\\r\\n                  <!--right column-->\\r\\n                  <div class=\\\"col-md-5\\\">\\r\\n                    <!-- <div class=\\\"form-group row \\\">\\r\\n                      <label class=\\\"col-sm-2 form-control-label\\\" style=\\\"padding-top: 7px; white-space: nowrap;\\\">Contract Price:</label>\\r\\n                      <div class=\\\"col-sm-7\\\">\\r\\n                        <input type=\\\"text\\\"   style=\\\"font-size: 12px !important;width:95%; \\\" class=\\\"form-control\\\" placeholder=\\\"Please Enter to Select\\\"  (keydown.enter)=\\\"contractPricePopup($event)\\\"/>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group row \\\">\\r\\n                      <label class=\\\"col-sm-2 form-control-label\\\" style=\\\"padding-top: 7px; white-space: nowrap;\\\">Salesman:</label>\\r\\n                      <div class=\\\"col-sm-7\\\">\\r\\n                        <input type=\\\"text\\\"   style=\\\"font-size: 12px !important;width:95%; \\\" class=\\\"form-control\\\" formControlName=\\\"SALESMAN\\\" placeholder=\\\"Please Enter to Select\\\" (keydown.enter)=\\\"onSalesmanEnter($event)\\\" autocomplete=\\\"off\\\"  />\\r\\n                      </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group row \\\">\\r\\n                      <label class=\\\"col-sm-2 form-control-label\\\" style=\\\"padding-top: 7px; white-space: nowrap;\\\">Term and Condition:</label>\\r\\n                      <div class=\\\"col-sm-7\\\">\\r\\n                        <input type=\\\"text\\\"   style=\\\"font-size: 12px !important;width:95%; \\\" class=\\\"form-control\\\" placeholder=\\\"Please Enter to Select\\\" />\\r\\n                      </div>\\r\\n                    </div> -->\\r\\n\\r\\n                    <div class=\\\"form-group row\\\" style=\\\"margin-bottom: 10px !important;\\\">\\r\\n                      <label class=\\\"col-sm-2 form-control-label\\\" style=\\\"padding-top: 7px;\\\">Party Category:</label>\\r\\n                      <div class=\\\"col-sm-7\\\">\\r\\n                        <select *ngIf=\\\"userSetting.Country != 1\\\" class=\\\"form-control\\\" formControlName=\\\"GEO\\\"\\r\\n                        style=\\\"height:30px;padding-bottom: 0px;font-size: 12px !important;width:95%;\\\">\\r\\n                        <option *ngFor=\\\"let i of GeoList\\\" value=\\\"{{i.OrgTypeCode}}\\\">{{\\r\\n                          i.OrgTypeName\\r\\n                        }}</option>\\r\\n                      </select>\\r\\n                      <select *ngIf=\\\"userSetting.Country == 1\\\" class=\\\"form-control\\\" formControlName=\\\"GEO\\\"\\r\\n                        style=\\\"height:30px;padding-bottom: 0px;font-size: 12px !important;width:95%;\\\">\\r\\n                        <option *ngFor=\\\"let i of PartyCat_List\\\" value=\\\"{{i.OrgTypeCode}}\\\">{{\\r\\n                          i.OrgTypeName\\r\\n                        }}</option>\\r\\n                      </select>\\r\\n                      <div class=\\\"alert alert-danger\\\" *ngIf=\\\"form.controls['GEO'].touched && !form.controls['GEO'].valid\\\">Please select Party Category</div>\\r\\n                      </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group row\\\" style=\\\"margin-bottom:10px !important;\\\">\\r\\n                      <label class=\\\"col-sm-2 form-control-label\\\" style=\\\"padding-top: 7px;\\\">Party type:</label>\\r\\n                      <div class=\\\"col-sm-7\\\" style=\\\"padding-top: 7px;\\\">\\r\\n                        <input type=\\\"radio\\\" style=\\\"height:13px;font-size: 12px !important;\\\" formControlName=\\\"Ptype\\\"  value=\\\"C\\\" (change)=\\\"changePtype('C')\\\">&nbsp;Customer&nbsp;\\r\\n                        <input type=\\\"radio\\\" style=\\\"height:13px;\\\" formControlName=\\\"Ptype\\\"  value=\\\"V\\\" (change)=\\\"changePtype('V')\\\">&nbsp;Supplier  \\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group row\\\" style=\\\"margin-bottom: 10px !important;\\\">\\r\\n                      <label class=\\\"col-sm-2 form-control-label\\\" style=\\\"padding-top: 7px;\\\">Credit Limit:</label>\\r\\n                      <div class=\\\"col-sm-7\\\">\\r\\n                        <input type=\\\"number\\\" style=\\\"font-size: 12px !important;width:95%;\\\" class=\\\"form-control\\\" formControlName=\\\"CRLIMIT\\\" placeholder=\\\"Credit Limit\\\">\\r\\n                        <div class=\\\"alert alert-danger\\\" *ngIf=\\\"form.controls['CRLIMIT'].touched && !form.controls['CRLIMIT'].valid\\\">Credit limit is required</div>\\r\\n                      </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group row\\\" style=\\\"margin-bottom: 10px !important;\\\">\\r\\n                      <label class=\\\"col-sm-2 form-control-label\\\" style=\\\"padding-top: 7px;\\\">Credit Days:</label>\\r\\n                      <div class=\\\"col-sm-3\\\">\\r\\n                        <input type=\\\"number\\\" style=\\\"font-size: 12px !important;\\\" class=\\\"form-control\\\"  placeholder=\\\"Credit Days\\\" formControlName=\\\"CRPERIOD\\\">\\r\\n                        <div class=\\\"alert alert-danger\\\" *ngIf=\\\"form.controls['CRPERIOD'].touched && !form.controls['CRPERIOD'].valid\\\">Credit Days is required</div>\\r\\n                      </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group row\\\" style=\\\"margin-bottom: 10px !important;\\\">\\r\\n                    <div class=\\\"col-sm-2\\\"></div>\\r\\n                      <div class=\\\"col-sm-9\\\" style=\\\"margin-left: 31%;\\\">\\r\\n                        <div class=\\\"row\\\">\\r\\n                        <input type=\\\"checkbox\\\" value=1 formControlName=\\\"COMMON\\\" style=\\\"height:15px;\\\" class=\\\"col-sm-1\\\">\\r\\n                        <label style=\\\"width: 230px !important;\\\" class=\\\"col-sm-5\\\">is Common Nature Party A/C</label>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group row\\\" style=\\\"margin-bottom: 10px !important;\\\">\\r\\n                      <div class=\\\"col-sm-2\\\"></div>\\r\\n                        <div class=\\\"col-sm-9\\\" style=\\\"margin-left: 31%;\\\">\\r\\n                          <div class=\\\"row\\\">\\r\\n                          <input type=\\\"checkbox\\\" value=1 formControlName=\\\"ISBRANCH\\\" style=\\\"height:15px;\\\" class=\\\"col-sm-1\\\">\\r\\n                          <label style=\\\"width: 230px !important;\\\" class=\\\"col-sm-5\\\">is Branch Party A/C</label>\\r\\n                          </div>\\r\\n                        </div>\\r\\n                      </div>\\r\\n\\r\\n                    <div class=\\\"form-group row\\\" *ngIf=\\\"userSetting.CREATE_CPROFILE_AS_MEMBER == 1 && form.value.Ptype == 'C'\\\" style=\\\"margin-bottom: 10px !important;\\\">\\r\\n                      <div class=\\\"col-sm-2\\\">\\r\\n                      </div>\\r\\n                      <div class=\\\"col-sm-9\\\" style=\\\"margin-left: 31%;\\\">\\r\\n                        <div class=\\\"row\\\">\\r\\n                        <input type=\\\"checkbox\\\" formControlName=\\\"createMember\\\" style=\\\"height:15px;\\\" class=\\\"col-sm-1\\\">\\r\\n                        <label style=\\\"width: 220px !important;\\\" class=\\\"col-sm-5\\\">Create A/C as Member Also</label>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group row\\\" *ngIf=\\\"userSetting.ENABLEINTERCOMPANYPARTY == 1\\\"  style=\\\"margin-top: 0px;\\\">\\r\\n                      <div class=\\\"col-sm-2\\\">\\r\\n                      </div>\\r\\n                      <div class=\\\"col-sm-9\\\" style=\\\"margin-left: 24%;\\\">\\r\\n                        <fieldset style=\\\"width: 90%;\\\">\\r\\n                          <legend style=\\\"font-size: 15px !important;width: 90%;\\\">\\r\\n                            <input type=\\\"checkbox\\\" class=\\\"form-control col-sm-1\\\" style=\\\"height: 14px; width: 14px;margin-bottom: -14px;margin-left: 10px;\\\" id=\\\"interparty\\\" name=\\\"interparty\\\" formControlName=\\\"IsInitialValue\\\" (change)=\\\"enableInitial($event.target.checked==1?1:0)\\\">\\r\\n                            <label class=\\\"form-control-label col-sm-4\\\" style=\\\"width: 100% ;margin-left: 10%;\\\">Is Intercompany Party A/C</label>\\r\\n                          </legend>\\r\\n                          <div class=\\\"col-sm-6\\\" style=\\\"margin-top: -5px;\\\">\\r\\n                            <label class=\\\"form-control-label\\\" style=\\\"width: 220px !important;\\\">Inter Company ID</label>\\r\\n                          </div>\\r\\n                          <div class=\\\"col-sm-6\\\" style=\\\"margin-top: -10px;\\\">\\r\\n                            <input type=\\\"text\\\" style=\\\"font-size: 12px !important;margin-left: 12px;\\\" class=\\\"form-control\\\" placeholder=\\\"Initial\\\" formControlName=\\\"INITIAL\\\">\\r\\n                            <!-- <select class=\\\"form-control\\\" formControlName=\\\"INITIAL\\\" style=\\\"font-size: 12px !important;width: 122%; margin-left: -15%; margin-top: -3%;\\\">\\r\\n                              <option value=\\\" \\\"></option>\\r\\n                              <option *ngFor=\\\"let div of division\\\" value=\\\"{{ div.INITIAL }}\\\" >\\r\\n                                {{ div.NAME }}\\r\\n                            </option>\\r\\n                            </select> -->\\r\\n                          </div>\\r\\n                        </fieldset>\\r\\n                      </div>\\r\\n                    </div>\\r\\n\\r\\n\\r\\n                  </div>\\r\\n                  <!--right column end-->\\r\\n\\r\\n\\r\\n                  </div>\\r\\n\\r\\n                </div> <!--bottom half end-->\\r\\n\\r\\n                    \\r\\n              </div> <!--general info tab end-->\\r\\n\\r\\n              <div class=\\\"tab-pane\\\" id=\\\"contact-details\\\">\\r\\n                <!-- Contact Details -->\\r\\n                <div class=\\\"form-group row\\\" style=\\\"margin-bottom: 10px !important;\\\">\\r\\n                  <div class=\\\"col-sm-12\\\">\\r\\n                    <div class=\\\"form-group row\\\" style=\\\"margin-bottom: 10px !important;\\\">\\r\\n                      <label class=\\\"col-sm-2 form-control-label\\\" style=\\\"padding-top: 5px;\\\">Company Name:</label>\\r\\n                      <div class=\\\"col-sm-8\\\">\\r\\n                        <input type=\\\"text\\\" style=\\\"font-size: 12px !important;\\\" class=\\\"form-control\\\" placeholder=\\\"Company Name\\\" formControlName=\\\"CNAME\\\" >\\r\\n                      </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"row\\\">\\r\\n                      <div class=\\\"col-md-6\\\">\\r\\n                        <fieldset style=\\\"border:1px solid #dcdcdc; margin-top:15px;\\\">\\r\\n                          <legend style=\\\"font-size:15px;font-weight: bold; width: auto;\\\">Owner Info</legend>\\r\\n              \\r\\n                          <div class=\\\"form-group row\\\" style=\\\"margin-left: 0px;margin-bottom: 10px !important;\\\">\\r\\n                            <label class=\\\"col-sm-2 form-control-label\\\" style=\\\"padding-top: 5px;\\\">Name :</label>\\r\\n                            <div class=\\\"col-sm-8\\\">\\r\\n                              <input type=\\\"text\\\" style=\\\"font-size: 12px !important;\\\" class=\\\"form-control\\\" placeholder=\\\"Name\\\" formControlName=\\\"ONAME\\\" >\\r\\n                            </div>\\r\\n                          </div>\\r\\n                          <div class=\\\"form-group row\\\" style=\\\"margin-left: 0px;margin-bottom: 10px !important;\\\">\\r\\n                            <label class=\\\"col-sm-2 form-control-label\\\" style=\\\"padding-top: 5px;\\\">Contact No :</label>\\r\\n                            <div class=\\\"col-sm-6\\\">\\r\\n                              <input type=\\\"text\\\" style=\\\"font-size: 12px !important;\\\" class=\\\"form-control\\\" placeholder=\\\"Contact No\\\" formControlName=\\\"OCONTACT\\\">\\r\\n                            </div>\\r\\n                          </div>\\r\\n\\r\\n                          <div class=\\\"form-group row\\\" style=\\\"margin-left: 0px;margin-bottom: 10px !important;\\\">\\r\\n                            <label class=\\\"col-sm-2 form-control-label\\\" style=\\\"padding-top: 5px;\\\">Designation :</label>\\r\\n                            <div class=\\\"col-sm-6\\\">\\r\\n                              <input type=\\\"text\\\" style=\\\"font-size: 12px !important;\\\" class=\\\"form-control\\\" placeholder=\\\"Designation\\\" formControlName=\\\"ODESIGNATION\\\" >\\r\\n                            </div>\\r\\n                          </div>\\r\\n                        </fieldset>\\r\\n\\r\\n                      </div>\\r\\n\\r\\n                      <div class=\\\"col-md-6\\\">\\r\\n                        <fieldset style=\\\"border:1px solid #dcdcdc; margin-top:15px;\\\">\\r\\n                          <legend style=\\\"font-size:15px;font-weight: bold; width: auto;\\\">Contact Person Information</legend>\\r\\n\\r\\n                          <div class=\\\"form-group row\\\" style=\\\"margin-left: 0px;margin-bottom: 10px !important;\\\">\\r\\n                            <label class=\\\"col-sm-2 form-control-label\\\" style=\\\"padding-top: 5px;\\\">Name :</label>\\r\\n                            <div class=\\\"col-sm-8\\\">\\r\\n                              <input type=\\\"text\\\" style=\\\"font-size: 12px !important;\\\" class=\\\"form-control\\\" placeholder=\\\"Name\\\" formControlName=\\\"CONTACTNAME\\\">\\r\\n                            </div>\\r\\n                          </div>\\r\\n\\r\\n                          <div class=\\\"form-group row\\\" style=\\\"margin-left: 0px;margin-bottom: 10px !important;\\\">\\r\\n                            <label class=\\\"col-sm-2 form-control-label\\\" style=\\\"padding-top: 5px;\\\">Contact No (A) :</label>\\r\\n                            <div class=\\\"col-sm-4\\\" style=\\\"padding-right: 0px;\\\">\\r\\n                              <input type=\\\"text\\\" style=\\\"font-size: 12px !important;\\\" class=\\\"form-control\\\" placeholder=\\\"Contact No (A)\\\" formControlName=\\\"CCONTACT_A\\\">\\r\\n                            </div>\\r\\n                            <div class=\\\"col-sm-4\\\" style=\\\"padding-left: 0px;\\\">\\r\\n                              <input type=\\\"text\\\" style=\\\"font-size: 12px !important;\\\" class=\\\"form-control\\\" placeholder=\\\"Contact No (B)\\\" formControlName=\\\"CCONTACT_B\\\">\\r\\n                            </div>\\r\\n                          \\r\\n                          </div>\\r\\n\\r\\n\\r\\n                          <div class=\\\"form-group row\\\" style=\\\"margin-left: 0px;margin-bottom: 10px !important;\\\">\\r\\n                            <label class=\\\"col-sm-2 form-control-label\\\" style=\\\"padding-top: 5px;\\\">Designation :</label>\\r\\n                            <div class=\\\"col-sm-6\\\">\\r\\n                              <input type=\\\"text\\\" style=\\\"font-size: 12px !important;\\\" class=\\\"form-control\\\" placeholder=\\\"Designation\\\" formControlName=\\\"CDESIGNATION\\\">\\r\\n                            </div>\\r\\n                          </div>\\r\\n                          \\r\\n                \\r\\n                        </fieldset>\\r\\n                      </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"row\\\">\\r\\n                      <div class=\\\"col-md-6\\\">\\r\\n                        <fieldset style=\\\"border:1px solid #dcdcdc; margin-top:15px;\\\">\\r\\n                          <legend style=\\\"font-size:15px; font-weight:bold; width: auto;\\\">Dealing Sales Executive Information :</legend>\\r\\n                          <div class=\\\"form-group row\\\" style=\\\"margin-left: 0px;margin-bottom: 10px !important;\\\">\\r\\n                            <label class=\\\"col-sm-2 form-control-label\\\" style=\\\"padding-top: 5px;\\\">Name(Primary) :</label>\\r\\n                            <div class=\\\"col-sm-8\\\">\\r\\n                              <input type=\\\"text\\\" style=\\\"font-size: 12px !important;\\\" class=\\\"form-control\\\" placeholder=\\\"Name(Primary)\\\" formControlName=\\\"RELATEDSPERSON_A\\\">\\r\\n                            </div>\\r\\n                          </div>\\r\\n\\r\\n                          <div class=\\\"form-group row\\\" style=\\\"margin-left: 0px; margin-bottom: 10px !important;\\\">\\r\\n\\r\\n                            <label class=\\\"col-sm-2 form-control-label\\\" style=\\\"padding-top: 5px;width: 161px !important;\\\">Name(Secondary) :</label>\\r\\n                            <div class=\\\"col-sm-7\\\" style=\\\"padding-left: 3px;\\\"> \\r\\n                              <input type=\\\"text\\\" style=\\\"font-size: 12px !important; width: 110%;\\\" class=\\\"form-control\\\" placeholder=\\\"Name(Secondary)\\\" formControlName=\\\"RELATEDSPERSON_B\\\">\\r\\n                            </div>\\r\\n                          </div>\\r\\n                        \\r\\n                \\r\\n                        </fieldset>\\r\\n                      </div>\\r\\n\\r\\n                      <div class=\\\"col-md-6\\\">\\r\\n                        <div class=\\\"form-group row\\\" style=\\\"margin-top:55px;\\\">\\r\\n                          <div class=\\\"row\\\">\\r\\n                          <label class=\\\"col-sm-2 form-control-label\\\" style=\\\"padding-top: 5px; padding-left: 2rem;\\\">Notes:</label>\\r\\n                          </div>\\r\\n                          <div class=\\\"row\\\">\\r\\n                            <input type=\\\"textarea\\\"  style=\\\" height: 55px !important;font-size: 12px !important; margin-left: 2rem; width: 90%;\\\" rows=\\\"2\\\" cols=\\\"100\\\" class=\\\"form-control\\\" formControlName=\\\"NOTES\\\" placeholder=\\\"NOTES\\\">\\r\\n                          </div>\\r\\n                        </div>\\r\\n                      </div>\\r\\n\\r\\n                    </div>\\r\\n                    \\r\\n                    \\r\\n                  </div>\\r\\n                </div>\\r\\n              </div> <!--additional info tab end-->\\r\\n              <div class=\\\"tab-pane\\\" id=\\\"bank-details\\\">\\r\\n                <!-- Contact Details -->\\r\\n                <div class=\\\"form-group row\\\" style=\\\"margin-bottom: 10px !important;\\\">\\r\\n                  <div class=\\\"col-sm-12\\\">\\r\\n                    <div class=\\\"form-group row\\\" style=\\\"margin-bottom: 10px !important;\\\">\\r\\n                      <label class=\\\"col-sm-2 form-control-label\\\" style=\\\"padding-top: 5px;\\\">Default Bank:</label>\\r\\n                      <div class=\\\"col-sm-8\\\">\\r\\n                        <input type=\\\"text\\\" style=\\\"font-size: 12px !important;width: 48%;\\\" class=\\\"form-control\\\" \\r\\n                        placeholder=\\\"Press Enter to Select\\\" formControlName=\\\"BANKNAME\\\" #BankName (keydown.Enter)=\\\"showBankPopup(); BankName.blur();\\\">\\r\\n                      </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group row\\\" style=\\\"margin-bottom: 10px !important;\\\">\\r\\n                      <label class=\\\"col-sm-2 form-control-label\\\" style=\\\"padding-top: 5px;\\\">Bank Code:</label>\\r\\n                      <div class=\\\"col-sm-8\\\">\\r\\n                        <input type=\\\"text\\\" style=\\\"font-size: 12px !important;width: 48%;\\\" class=\\\"form-control\\\" placeholder=\\\"Bank Code\\\" formControlName=\\\"BANKCODE\\\" disabled>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group row\\\" style=\\\"margin-bottom: 10px !important;\\\">\\r\\n                      <label class=\\\"col-sm-2 form-control-label\\\" style=\\\"padding-top: 5px;\\\">Account number:</label>\\r\\n                      <div class=\\\"col-sm-8\\\">\\r\\n                        <input type=\\\"text\\\" style=\\\"font-size: 12px !important;width: 48%;\\\" class=\\\"form-control\\\" placeholder=\\\"Account Number\\\" formControlName=\\\"BANKACCOUNTNUMBER\\\" >\\r\\n                      </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"row\\\">\\r\\n                      <div class=\\\"col-md-6\\\">\\r\\n                        <fieldset style=\\\"border:1px solid #dcdcdc; margin-top:15px;\\\">\\r\\n                          <legend style=\\\"font-size:15px;font-weight: bold; width: auto;\\\">Additional Bank (Optional)</legend>\\r\\n              \\r\\n                          <div class=\\\"form-group row\\\" style=\\\"margin-left: 0px;margin-bottom: 10px !important;\\\">\\r\\n                            <label class=\\\"col-sm-2 form-control-label\\\" style=\\\"padding-top: 5px;\\\">Bank Name :</label>\\r\\n                            <div class=\\\"col-sm-8\\\">\\r\\n                              <input type=\\\"text\\\" style=\\\"font-size: 12px !important;\\\" class=\\\"form-control\\\" placeholder=\\\"Press Enter to Select\\\" (keydown.Enter)=\\\"showAddBankPopup()\\\" formControlName=\\\"ADDITIONALBANKNAME\\\" >\\r\\n                            </div>\\r\\n                          </div>\\r\\n                          <div class=\\\"form-group row\\\" style=\\\"margin-left: 0px;margin-bottom: 10px !important;\\\">\\r\\n                            <label class=\\\"col-sm-2 form-control-label\\\" style=\\\"padding-top: 5px;\\\">Bank Code :</label>\\r\\n                            <div class=\\\"col-sm-6\\\">\\r\\n                              <input type=\\\"text\\\" style=\\\"font-size: 12px !important;\\\" class=\\\"form-control\\\" placeholder=\\\"Bank Code\\\" formControlName=\\\"ADDITIONALBANKCODE\\\" disabled>\\r\\n                            </div>\\r\\n                          </div>\\r\\n\\r\\n                          <div class=\\\"form-group row\\\" style=\\\"margin-left: 0px;margin-bottom: 10px !important;\\\">\\r\\n                            <label class=\\\"col-sm-2 form-control-label\\\" style=\\\"padding-top: 5px;\\\">Account number :</label>\\r\\n                            <div class=\\\"col-sm-6\\\">\\r\\n                              <input type=\\\"text\\\" style=\\\"font-size: 12px !important;\\\" class=\\\"form-control\\\" placeholder=\\\"Account Number\\\" formControlName=\\\"ADDITIONALBANKACCOUNTNUMBER\\\">\\r\\n                            </div>\\r\\n                          </div>\\r\\n                          <button  class=\\\"btn btn-primary\\\" (click)=\\\"onCLickAddBank()\\\" [disabled]=\\\"mode=='view'\\\">Add</button>\\r\\n                        </fieldset>\\r\\n\\r\\n                      </div>\\r\\n\\r\\n                      <div class=\\\"col-md-6\\\">\\r\\n                        <fieldset style=\\\"border:1px solid #dcdcdc; margin-top:15px;\\\">\\r\\n                          <legend style=\\\"font-size:15px;font-weight: bold; width: auto;\\\">Details</legend>\\r\\n                          <table>\\r\\n                            <tr>\\r\\n                              <th style=\\\"width: 40%;background-color: #63bbb2;\\\">\\r\\n                                Bank Name\\r\\n                              </th>\\r\\n                              <th style=\\\"width: 20%;background-color: #63bbb2;\\\">\\r\\n                                Bank Code\\r\\n                              </th>\\r\\n                              <th style=\\\"width: 40%;background-color: #63bbb2;height: 37px;\\\">\\r\\n                                Account number\\r\\n                              </th>\\r\\n                              <th style=\\\"width: 20%;background-color: #63bbb2;\\\"></th>\\r\\n                              </tr>\\r\\n                              <tr style=\\\"height: 30px;\\\" *ngFor=\\\"let i of AdditionalBankList;let i = index\\\">\\r\\n                                <td style=\\\"width: 50%;\\\">{{i.BANKNAME}}</td>\\r\\n                                <td style=\\\"width: 34%;\\\">{{i.BANKCODE}}</td>\\r\\n                                <td>{{i.BANKACCOUNTNUMBER}}</td>\\r\\n                                <td><button class=\\\"btn btn-danger\\\" (click)=\\\"RemoveBankFromList(i)\\\" [disabled]=\\\"mode=='view'\\\">-</button></td>\\r\\n                              </tr>\\r\\n                          </table>\\r\\n                       \\r\\n\\r\\n                          \\r\\n\\r\\n\\r\\n                          \\r\\n                          \\r\\n                \\r\\n                        </fieldset>\\r\\n                      </div>\\r\\n                    </div>\\r\\n\\r\\n                    \\r\\n                    \\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"tab-pane\\\" id=\\\"divisionwise-setting\\\">\\r\\n                <div class=\\\"form-group row\\\">\\r\\n                  <div class=\\\"col-md-12\\\">\\r\\n                      <div class=\\\"col-md-6width: 42%;\\\">\\r\\n                        <fieldset style=\\\"background-color: #e2eaea;\\\">\\r\\n                          <legend style=\\\"font-size: 15px !important;width: 51%;\\\">Associated Division Mapping :</legend>\\r\\n                          <div class=\\\"col-md-12\\\">\\r\\n                            <div class=\\\"col-sm-3\\\">\\r\\n                              <label class=\\\"form-control-label\\\">Division :</label>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-sm-9\\\">\\r\\n                              <select class=\\\"form-control\\\" formControlName=\\\"DIV\\\" (change)=\\\"changeDivision($event.target.value)\\\">\\r\\n                                <option *ngFor=\\\"let div of division\\\" value=\\\"{{ div.INITIAL }}\\\">\\r\\n                                  {{ div.NAME }}\\r\\n                              </option>      </select>\\r\\n                            </div>\\r\\n                          </div>\\r\\n\\r\\n                          <div class=\\\"col-md-12\\\" style=\\\"margin-top: 3%;\\\">\\r\\n                            <fieldset >\\r\\n                              <legend style=\\\"font-size: 15px !important;width: 51%;\\\">\\r\\n                              <div>\\r\\n                                <!-- <input type=\\\"checkbox\\\" formControlName=\\\"createMember\\\" style=\\\"height:13px;\\\"> -->\\r\\n                              </div> \\r\\n\\r\\n                                <input type=\\\"checkbox\\\" style=\\\"height: 13px !important;\\\" name=\\\"checkDivision\\\" id=\\\"checkDivision\\\" formControlName=\\\"ShareAccount\\\" (change)=\\\"enableShareOptions($event.target.checked==1?1:0)\\\">\\r\\n                                Shared This Account :</legend>\\r\\n                                <div class=\\\"col-sm-6\\\">\\r\\n                                  <input type=\\\"radio\\\" style=\\\"height: 13px !important;\\\" formControlName=\\\"ShareSelectiveDiv\\\" value=1 (change)=\\\"enableDivSelectionTable($event.target.checked==1?1:0)\\\">&nbsp;Share To Selective Division\\r\\n                                </div>\\r\\n                                <div class=\\\"col-sm-6\\\">\\r\\n                                  <input type=\\\"radio\\\" style=\\\"height: 13px !important;\\\" formControlName=\\\"ShareAllDiv\\\" value=2 (change)=\\\"ShareAllDiv($event.target.checked==1?1:0)\\\">&nbsp;Share To All Division\\r\\n                                </div>\\r\\n                            </fieldset>\\r\\n                          </div>\\r\\n                          \\r\\n                        </fieldset>\\r\\n                      </div>\\r\\n                    <div class=\\\"col-md-6\\\">\\r\\n                    <fieldset *ngIf=\\\"showDivSelectionTable\\\" style=\\\"background-color: #e2eaea;height :173px\\\">\\r\\n                      <legend style=\\\"font-size: 15px !important;width: 60%;\\\">\\r\\n                        Account Sharing Division Selection :</legend>\\r\\n                      <div style=\\\"overflow-y: auto;height: 132px;\\\">\\r\\n                        <table>\\r\\n                          <tr *ngFor=\\\"let d of division;let i = index\\\" >\\r\\n                            <td style=\\\"border:1px solid #e0e0e0;width: 1%;\\\">\\r\\n                              <input type=\\\"checkbox\\\" [(ngModel)]=\\\"d.isCheck\\\" [ngModelOptions]=\\\"{standalone: true}\\\"\\r\\n                                (change)=\\\"check($event)\\\" value=\\\"{{d}}\\\" (click)='rowClick(i)' *ngIf = '!d.isDefault'>\\r\\n                                <input type=\\\"checkbox\\\" [(ngModel)]=\\\"d.isCheck\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [checked] *ngIf = 'd.isDefault' disabled>\\r\\n                            </td>\\r\\n                            <td style=\\\"border:1px solid #e0e0e0;padding-left: 24px;width:100%\\\">{{d.NAME}}</td>\\r\\n                          </tr>\\r\\n\\r\\n\\r\\n\\r\\n                        </table>\\r\\n                      </div>\\r\\n                    \\r\\n                    </fieldset>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              \\r\\n              <div class=\\\"tab-pane\\\" id=\\\"sales-target\\\">\\r\\n                <!-- Sales Target -->\\r\\n                <div class=\\\"col-sm-12\\\">\\r\\n                  <div class=\\\"form-group row\\\" style=\\\"margin-top: 10px !important;\\\">\\r\\n                    <label class=\\\"col-sm-2 form-control-label\\\" style=\\\"padding-top: 5px;margin-left: 0px;\\\">Yearly Target:</label>\\r\\n                    <div class=\\\"col-sm-8\\\">\\r\\n                      <input type=\\\"number\\\" style=\\\"font-size: 12px !important;width: 23%;\\\" class=\\\"form-control\\\" placeholder=\\\"Target Amount\\\" formControlName=\\\"TARGET_AMOUNT\\\" >\\r\\n                    </div>\\r\\n                  </div>  \\r\\n                </div>\\r\\n                <fieldset>\\r\\n                  <legend style=\\\"font-size:16px;font-weight: bold; width:auto;margin-bottom: -4px;\\\">Monthly Balance</legend>\\r\\n                <div class=\\\"form-group row\\\" style=\\\"margin-bottom: 10px !important;\\\">\\r\\n                  <div class=\\\"col-sm-12\\\">\\r\\n                    <div class=\\\"col-sm-6\\\">\\r\\n                      <div class=\\\"form-group row\\\" style=\\\"margin-bottom: 10px !important;\\\">\\r\\n                        <label class=\\\"col-sm-2 form-control-label\\\" style=\\\"padding-top: 5px;\\\">Shrawan Target:</label>\\r\\n                        <div class=\\\"col-sm-3\\\">\\r\\n                          <input type=\\\"number\\\" style=\\\"font-size: 12px !important;width:100%\\\" class=\\\"form-control\\\" placeholder=\\\"Shrawan Target\\\" formControlName=\\\"SHARWAN\\\" (input)=\\\"calculateMonthBalance()\\\">\\r\\n                        </div>\\r\\n                        <div class=\\\"col-sm-1\\\">\\r\\n                          <label style=\\\"margin-top: 5px;margin-left: -21px;\\\">%</label>\\r\\n                        </div>\\r\\n                      </div> \\r\\n                      <div class=\\\"form-group row\\\" style=\\\"margin-bottom: 10px !important;\\\">\\r\\n                        <label class=\\\"col-sm-2 form-control-label\\\" style=\\\"padding-top: 5px;\\\">Bhadra Target:</label>\\r\\n                        <div class=\\\"col-sm-3\\\">\\r\\n                          <input type=\\\"number\\\" style=\\\"font-size: 12px !important;width:100%\\\" class=\\\"form-control\\\" placeholder=\\\"Bhadra Target\\\" formControlName=\\\"BHADRA\\\" (input)=\\\"calculateMonthBalance()\\\">\\r\\n                        </div>\\r\\n                        <div class=\\\"col-sm-1\\\">\\r\\n                          <label style=\\\"margin-top: 5px;margin-left: -21px;\\\">%</label>\\r\\n                        </div>\\r\\n                      </div> \\r\\n                      <div class=\\\"form-group row\\\" style=\\\"margin-bottom: 10px !important;\\\">\\r\\n                        <label class=\\\"col-sm-2 form-control-label\\\" style=\\\"padding-top: 5px;\\\">Ashwin Target:</label>\\r\\n                        <div class=\\\"col-sm-3\\\">\\r\\n                          <input type=\\\"number\\\" style=\\\"font-size: 12px !important;width:100%\\\" class=\\\"form-control\\\" placeholder=\\\"Ashwin Target\\\" formControlName=\\\"ASHWIN\\\" (input)=\\\"calculateMonthBalance()\\\">\\r\\n                        </div>\\r\\n                        <div class=\\\"col-sm-1\\\">\\r\\n                          <label style=\\\"margin-top: 5px;margin-left: -21px;\\\">%</label>\\r\\n                        </div>\\r\\n                      </div> \\r\\n                      <div class=\\\"form-group row\\\" style=\\\"margin-bottom: 10px !important;\\\">\\r\\n                        <label class=\\\"col-sm-2 form-control-label\\\" style=\\\"padding-top: 5px;\\\">Kartik Target:</label>\\r\\n                        <div class=\\\"col-sm-3\\\">\\r\\n                          <input type=\\\"number\\\" style=\\\"font-size: 12px !important;width:100%\\\" class=\\\"form-control\\\" placeholder=\\\"Kartik Target\\\" formControlName=\\\"KARTIK\\\" (input)=\\\"calculateMonthBalance()\\\">\\r\\n                        </div>\\r\\n                        <div class=\\\"col-sm-1\\\">\\r\\n                          <label style=\\\"margin-top: 5px;margin-left: -21px;\\\">%</label>\\r\\n                        </div>\\r\\n                      </div> \\r\\n                      <div class=\\\"form-group row\\\" style=\\\"margin-bottom: 10px !important;\\\">\\r\\n                        <label class=\\\"col-sm-2 form-control-label\\\" style=\\\"padding-top: 5px;\\\">Mangsir Target:</label>\\r\\n                        <div class=\\\"col-sm-3\\\">\\r\\n                          <input type=\\\"number\\\" style=\\\"font-size: 12px !important;width:100%\\\" class=\\\"form-control\\\" placeholder=\\\"Mangsir Target\\\" formControlName=\\\"MANGSHIR\\\" (input)=\\\"calculateMonthBalance()\\\">\\r\\n                        </div>\\r\\n                        <div class=\\\"col-sm-1\\\">\\r\\n                          <label style=\\\"margin-top: 5px;margin-left: -21px;\\\">%</label>\\r\\n                        </div>\\r\\n                      </div> \\r\\n                      <div class=\\\"form-group row\\\" style=\\\"margin-bottom: 10px !important;\\\">\\r\\n                        <label class=\\\"col-sm-2 form-control-label\\\" style=\\\"padding-top: 5px;\\\">Poush Target:</label>\\r\\n                        <div class=\\\"col-sm-3\\\">\\r\\n                          <input type=\\\"number\\\" style=\\\"font-size: 12px !important;width:100%\\\" class=\\\"form-control\\\" placeholder=\\\"Poush Target\\\" formControlName=\\\"PAUSH\\\" (input)=\\\"calculateMonthBalance()\\\">\\r\\n                        </div>\\r\\n                        <div class=\\\"col-sm-1\\\">\\r\\n                          <label style=\\\"margin-top: 5px;margin-left: -21px;\\\">%</label>\\r\\n                        </div>\\r\\n                      </div> \\r\\n                    </div>\\r\\n                    <div class=\\\"col-sm-6\\\">\\r\\n                      <div class=\\\"form-group row\\\" style=\\\"margin-bottom: 10px !important;\\\">\\r\\n                        <label class=\\\"col-sm-2 form-control-label\\\" style=\\\"padding-top: 5px;\\\">Magh Target:</label>\\r\\n                        <div class=\\\"col-sm-3\\\">\\r\\n                          <input type=\\\"number\\\" style=\\\"font-size: 12px !important;width:100%\\\" class=\\\"form-control\\\" placeholder=\\\"Magh Target\\\" formControlName=\\\"MAGH\\\" (input)=\\\"calculateMonthBalance()\\\">\\r\\n                        </div>\\r\\n                        <div class=\\\"col-sm-1\\\">\\r\\n                          <label style=\\\"margin-top: 5px;margin-left: -21px;\\\">%</label>\\r\\n                        </div>\\r\\n                      </div> \\r\\n                      <div class=\\\"form-group row\\\" style=\\\"margin-bottom: 10px !important;\\\">\\r\\n                        <label class=\\\"col-sm-2 form-control-label\\\" style=\\\"padding-top: 5px;\\\">Falgun Target:</label>\\r\\n                        <div class=\\\"col-sm-3\\\">\\r\\n                          <input type=\\\"number\\\" style=\\\"font-size: 12px !important;width:100%\\\" class=\\\"form-control\\\" placeholder=\\\"Falgun Target\\\" formControlName=\\\"FALGUN\\\" (input)=\\\"calculateMonthBalance()\\\"> \\r\\n                        </div>\\r\\n                        <div class=\\\"col-sm-1\\\">\\r\\n                          <label style=\\\"margin-top: 5px;margin-left: -21px;\\\">%</label>\\r\\n                        </div>\\r\\n                      </div> \\r\\n                      <div class=\\\"form-group row\\\" style=\\\"margin-bottom: 10px !important;\\\">\\r\\n                        <label class=\\\"col-sm-2 form-control-label\\\" style=\\\"padding-top: 5px;\\\">Chaitra Target:</label>\\r\\n                        <div class=\\\"col-sm-3\\\">\\r\\n                          <input type=\\\"number\\\" style=\\\"font-size: 12px !important;width:100%\\\" class=\\\"form-control\\\" placeholder=\\\"Chaitra Target\\\" formControlName=\\\"CHAITRA\\\" (input)=\\\"calculateMonthBalance()\\\">\\r\\n                        </div>\\r\\n                        <div class=\\\"col-sm-1\\\">\\r\\n                          <label style=\\\"margin-top: 5px;margin-left: -21px;\\\">%</label>\\r\\n                        </div>\\r\\n                      </div> \\r\\n                      <div class=\\\"form-group row\\\" style=\\\"margin-bottom: 10px !important;\\\">\\r\\n                        <label class=\\\"col-sm-2 form-control-label\\\" style=\\\"padding-top: 5px;\\\">Baisakh Target:</label>\\r\\n                        <div class=\\\"col-sm-3\\\">\\r\\n                          <input type=\\\"number\\\" style=\\\"font-size: 12px !important;width:100%\\\" class=\\\"form-control\\\" placeholder=\\\"Baisakh Target\\\" formControlName=\\\"BAISHAKH\\\" (input)=\\\"calculateMonthBalance()\\\" >\\r\\n                        </div>\\r\\n                        <div class=\\\"col-sm-1\\\">\\r\\n                          <label style=\\\"margin-top: 5px;margin-left: -21px;\\\">%</label>\\r\\n                        </div>\\r\\n                      </div>   \\r\\n                      <div class=\\\"form-group row\\\" style=\\\"margin-bottom: 10px !important;\\\">\\r\\n                        <label class=\\\"col-sm-2 form-control-label\\\" style=\\\"padding-top: 5px;\\\">Jestha Target:</label>\\r\\n                        <div class=\\\"col-sm-3\\\">\\r\\n                          <input type=\\\"number\\\" style=\\\"font-size: 12px !important;width:100%\\\" class=\\\"form-control\\\" placeholder=\\\"Jestha Target\\\" formControlName=\\\"JESTHA\\\" (input)=\\\"calculateMonthBalance()\\\" >\\r\\n                        </div>\\r\\n                        <div class=\\\"col-sm-1\\\">\\r\\n                          <label style=\\\"margin-top: 5px;margin-left: -21px;\\\">%</label>\\r\\n                        </div>\\r\\n                      </div> \\r\\n                      <div class=\\\"form-group row\\\" style=\\\"margin-bottom: 10px !important;\\\">\\r\\n                        <label class=\\\"col-sm-2 form-control-label\\\" style=\\\"padding-top: 5px;\\\">Asadh Target:</label>\\r\\n                        <div class=\\\"col-sm-3\\\">\\r\\n                          <input type=\\\"number\\\" style=\\\"font-size: 12px !important;width:100%\\\" class=\\\"form-control\\\" placeholder=\\\"Asadh Target\\\" formControlName=\\\"ASHAD\\\" (input)=\\\"calculateMonthBalance()\\\">\\r\\n                        </div>\\r\\n                        <div class=\\\"col-sm-1\\\">\\r\\n                          <label style=\\\"margin-top: 5px;margin-left: -21px;\\\">%</label>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </div>  \\r\\n                  </div>\\r\\n                 \\r\\n                </div>\\r\\n              </fieldset>\\r\\n              </div>\\r\\n               <!--sales target tab end-->\\r\\n\\r\\n      \\r\\n         \\r\\n         \\r\\n          </div> <!--tab content-->\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</form>\\r\\n<!-- ////////////////////////////////BANKSETTING TABLE////////////////////////////////////////   -->\\r\\n<div *ngIf =\\\"bank\\\">\\r\\n  <table style=\\\"margin-bottom: 5px; font-size: 13px; width: 100%\\\">\\r\\n    <thead>\\r\\n      <tr\\r\\n        style=\\\"\\r\\n          border-bottom: 2px solid #e6e6e6;\\r\\n          border-top: 2px solid #e6e6e6;\\r\\n          height: 30px;\\r\\n          background: #63bbb2;\\r\\n          color: black;\\r\\n        \\\"\\r\\n      >\\r\\n        <th style=\\\"width: 1%; text-align:center;\\\">SNo.</th>\\r\\n        <th style=\\\"width: 10%; padding-left: 1%; text-align:center;\\\">Bank Name</th>\\r\\n        <th style=\\\"width: 7%; padding-left: 1% ;text-align:center;\\\">Branch</th>\\r\\n        <th style=\\\"width: 7%; padding-left: 1%; text-align:center;\\\">Account Number</th>\\r\\n\\r\\n      </tr>\\r\\n    </thead>\\r\\n    <tbody>\\r\\n      <tr *ngFor= \\\"let bankobj of bankArray; let i = index\\\" style=\\\"border: 1px; max-height: 25px\\\">\\r\\n\\r\\n        <td style=\\\"line-height: 21px; text-align: center; border: 1px solid #e6e6e6;\\\">\\r\\n        {{i+1}}\\r\\n        </td>\\r\\n\\r\\n        <td style=\\\"line-height: 21px; text-align: center; border: 1px solid #e6e6e6;\\\">\\r\\n          <input class=\\\"form-control\\\"  [(ngModel)]=\\\"bankobj.BankName\\\"\\r\\n            style=\\\"height: 25px; width: 95% !important\\\"/>\\r\\n            <!-- {{bankobj.BankName}} -->\\r\\n        </td>\\r\\n        <td style=\\\"line-height: 21px; text-align: center; border: 1px solid #e6e6e6;\\\">\\r\\n          <input class=\\\"form-control\\\"  [(ngModel)]=\\\"bankobj.BranchName\\\" style=\\\"height: 25px; width: 95% !important\\\"/>\\r\\n        </td>\\r\\n        <td style=\\\"line-height: 21px; text-align: center; border: 1px solid #e6e6e6;\\\">\\r\\n          <input class=\\\"form-control\\\"  [(ngModel)]=\\\"bankobj.AccountNumber\\\" style=\\\"height: 25px; width: 95% !important\\\"\\r\\n            type=\\\"text\\\"/>\\r\\n        </td>\\r\\n        \\r\\n        \\r\\n        \\r\\n      </tr>\\r\\n    </tbody>\\r\\n  </table>\\r\\n\\r\\n</div>\\r\\n<!-- ////////////////////////////////BANKSETTING TABLE End////////////////////////////////////////   -->\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n<form [formGroup]='form'>\\r\\n  <!-- <div class=\\\"row\\\" class=\\\"form-horizontal\\\">\\r\\n    <div style=\\\"background-color:#ffffff; border:1px solid;border-color:#dcdcdc; padding:20px; margin-bottom: 10px;\\\">\\r\\n      <div class=\\\"com-sm-12\\\" style=\\\"padding:5px;border-bottom: solid 1px #dcdcdc; margin-bottom: 10px;\\\">\\r\\n        <h5>{{modeTitle}}</h5>\\r\\n      </div>\\r\\n    \\r\\n    </div>\\r\\n  </div> -->\\r\\n\\r\\n  <!--  -->\\r\\n  <!-- <button type=\\\"button\\\" (click)=\\\"SumbitSave()\\\" title=\\\"onSave\\\" class=\\\"btn btn-info\\\" \\r\\n    *ngIf=\\\"grp=='A'\\\" [disabled]=\\\"!form.valid || mode=='view'\\\">Save</button>\\r\\n  <button type=\\\"button\\\" (click)=\\\"SumbitSave()\\\" title=\\\"onSave\\\" class=\\\"btn btn-info\\\" *ngIf=\\\"grp=='G'\\\">Save</button>\\r\\n  <button type=\\\"button\\\" (click)=\\\"cancel()\\\" title=\\\"Cancel\\\" class=\\\"btn btn-info\\\">Back</button> -->\\r\\n</form>\\r\\n\\r\\n<div class=\\\"modal fade\\\" bsModal #childModal=\\\"bs-modal\\\" [config]=\\\"{backdrop: 'static'}\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"mySmallModalLabel\\\"\\r\\n  aria-hidden=\\\"true\\\">\\r\\n  <div class=\\\"modal-dialog modal-sm\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <div class=\\\"modal-header\\\">\\r\\n        <button class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"hideChildModal()\\\">\\r\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n          \\r\\n        </button>\\r\\n        <h4 class=\\\"modal-title\\\">Information</h4>\\r\\n      </div>\\r\\n      <div class=\\\"modal-body\\\">\\r\\n        {{DialogMessage}}\\r\\n      </div>\\r\\n     \\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<generic-popup-grid #genericGridBankList [popupsettings]=\\\"gridBankPopupSettings\\\"\\r\\n  (onItemDoubleClick)=\\\"onBankSelect($event)\\\"></generic-popup-grid>\\r\\n\\r\\n  <generic-popup-grid #genericGridAdditionalBankList [popupsettings]=\\\"gridAdditionalBankPopupSettings\\\"\\r\\n  (onItemDoubleClick)=\\\"onAddBankSelect($event)\\\"></generic-popup-grid>\\r\\n  \\r\\n  <generic-popup-grid #genericGridACListParty [popupsettings]=\\\"gridACListPartyPopupSettings\\\"\\r\\n  (onItemDoubleClick)=\\\"onAddParentCompanySelect($event)\\\"></generic-popup-grid>\\r\\n\\r\\n\\r\\n  <generic-popup-grid #genericGridContract [popupsettings]=\\\"gridPopupSettingsForContractPrice\\\" (onItemDoubleClick)=\\\"onContactPriceSelected($event)\\\">\\r\\n  </generic-popup-grid>\\r\\n\\r\\n  <generic-popup-grid #genericGridSalesman [popupsettings]=\\\"gridPopupSettingsForSalesmanList\\\" (onItemDoubleClick)=\\\"onSalesmanSelect($event)\\\">\\r\\n  </generic-popup-grid>\\r\\n\\r\\n  <div>\\r\\n    <div class=\\\"modal fade\\\" bsModal #DeletePar=\\\"bs-modal\\\" [config]=\\\"{backdrop: 'static'}\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\"\\r\\n      aria-labelledby=\\\"mySmallModalLabel\\\" aria-hidden=\\\"true\\\" style=\\\"margin:-100px;height:460px\\\">\\r\\n      <div class=\\\"modal-dialog modal-sm\\\">\\r\\n        <div class=\\\"modal-content\\\" style=\\\"width: 420px;\\\">\\r\\n          <div class=\\\"modal-header\\\">\\r\\n            <button class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"onClickNo()\\\">\\r\\n              <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n  \\r\\n            </button>\\r\\n            <h4 class=\\\"modal-title\\\">Delete Party</h4>\\r\\n          </div>\\r\\n          <div class=\\\"modal-body\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"col-md-12\\\" style=\\\"margin-top: -10px;margin-bottom: 12px;\\\">\\r\\n                Are you sure you want to delete this party?\\r\\n              </div>\\r\\n              <div class=\\\"col-md-12\\\">\\r\\n                <button (click)=\\\"DeleteYes()\\\" style=\\\"margin-right: 4px;\\\" class=\\\"btn btn-danger \\\">Yes</button>\\r\\n                <button (click)=\\\"DeleteNo()\\\" type=\\\"button \\\" class=\\\"btn btn-warning\\\">No</button>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div>\\r\\n    <div class=\\\"modal fade\\\" bsModal #Duplicate=\\\"bs-modal\\\" [config]=\\\"{backdrop: 'static'}\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\"\\r\\n      aria-labelledby=\\\"mySmallModalLabel\\\" aria-hidden=\\\"true\\\" style=\\\"margin:-100px;height:460px\\\">\\r\\n      <div class=\\\"modal-dialog modal-sm\\\">\\r\\n        <div class=\\\"modal-content\\\" style=\\\"width: 420px;\\\">\\r\\n          <div class=\\\"modal-header\\\">\\r\\n            <button class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"onClickNo()\\\">\\r\\n              <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n  \\r\\n            </button>\\r\\n            <h4 class=\\\"modal-title\\\">Duplicate VAT No.</h4>\\r\\n          </div>\\r\\n          <div class=\\\"modal-body\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"col-md-12\\\" style=\\\"margin-top: -10px;margin-bottom: 12px;\\\">\\r\\n                Duplicate VAT No. Encountered. Do you want to Proceed or Not?\\r\\n              </div>\\r\\n              <div class=\\\"col-md-12\\\">\\r\\n                <button (click)=\\\"onDuplicateYes()\\\" style=\\\"margin-right: 4px;\\\" class=\\\"btn btn-info \\\">Yes</button>\\r\\n                <button (click)=\\\"onDuplicateNo()\\\" type=\\\"button \\\" class=\\\"btn\\\">No</button>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/masters/components/party-ledger/addpartyledger.component.html\n// module id = 1865\n// module chunks = 12","module.exports = \"\\r\\n  .table td, .table th{\\r\\n    padding: 0px !important;\\r\\n  }\\r\\n  \\r\\n\\r\\n  tbody {\\r\\n    display:block;\\r\\n    height:62vh;\\r\\n    overflow:auto;\\r\\n}\\r\\n\\r\\nthead, tbody tr {\\r\\n  display:table;\\r\\n  width:100%;\\r\\n  table-layout:fixed;/* even columns width , fix width of table too*/\\r\\n}\\r\\n\\r\\nth{\\r\\n  font-size: 15px;\\r\\n  font-weight: bold;\\r\\n  font-family: Roboto,Arial,sans-serif;\\r\\n}\\r\\n\\r\\ntd{\\r\\n  font-size: 13px;\\r\\n  font-family: Roboto,Arial,sans-serif;\\r\\n\\r\\n}\\r\\n\\r\\n.table tbody tr td{\\r\\n  line-height: 24px;\\r\\n}\\r\\n\\r\\n.btn-sm{\\r\\n  line-height: 3px;\\r\\n}\\r\\n\\r\\n.btn-info{\\r\\n    margin: auto 1px;\\r\\n}\\r\\n\\r\\n.form-control{\\r\\n  font-size: 12px !important;\\r\\n}\\r\\n\\r\\n\\r\\n.searchBy{\\r\\n  font-size: 13px;\\r\\n  margin-left: 18rem;\\r\\n}\\r\\n\\r\\n.selectrow{\\r\\n  padding: 0px 15px;\\r\\n}\\r\\n\\r\\n.plainBackGround{\\r\\n  border: 2px solid #dcdcdc;\\r\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/masters/components/party-ledger/partyLedgerTable.component.css\n// module id = 1866\n// module chunks = 12","module.exports = \"<div class=\\\"row\\\">\\r\\n  <!-- <ba-card style=\\\"background-color: #6b5656;max-height: 650px !important;\\\" baCardClass=\\\"with-scroll\\\"> -->\\r\\n\\r\\n  <div [ngBusy]=\\\"busy\\\">\\r\\n    <div class=\\\"sticky-top\\\">\\r\\n      <div class=\\\"row clearfix\\\" style=\\\" padding: 0px 20px;\\\">\\r\\n        <div class=\\\"col-md-6\\\">\\r\\n          <label\\r\\n            style=\\\"font-family: Segoe UI Light;font-weight: bold;font-size: 18px;padding-top: 3px;width:117px !important;\\\">PARTY\\r\\n            MASTER</label>\\r\\n          <label *ngIf=\\\"this.partyservice.subTitle\\\"\\r\\n            style=\\\"font-family: Segoe UI Light;font-weight: bold;font-size: 17px;padding-top: 3px;width:190px !important;\\\">\\r\\n            {{this.partyservice.subTitle}}</label>\\r\\n\\r\\n\\r\\n        </div>\\r\\n        <div class=\\\"col-md-1\\\"></div>\\r\\n\\r\\n        <div class=\\\"col-md-5\\\" style=\\\"float: right;\\\">\\r\\n          <button type=\\\"button \\\" class=\\\"btn btn-info pull-right\\\" (click)=\\\"backToDashboard()\\\"\\r\\n            style=\\\" margin-bottom: 10px;  margin-left: 10px;\\\">\\r\\n            F10 Back\\r\\n          </button>\\r\\n          <button *ngIf=\\\"userSetting.enableMaster_AddEdit==1\\\" [disabled]=\\\"addMode || this.selectedNode==undefined\\\" type=\\\"button\\\" class=\\\"btn btn-info pull-right\\\"\\r\\n            (click)=\\\"AddLedger()\\\" style=\\\" margin-bottom: 10px;  margin-left: 10px;\\\">Add Party</button>\\r\\n          <button *ngIf=\\\"userSetting.enableMaster_AddEdit==1\\\" [disabled]=\\\"addMode\\\" type=\\\"button\\\" class=\\\"btn btn-info pull-right\\\" (click)=\\\"AddGroup(Tree)\\\"\\r\\n            style=\\\"margin-bottom: 10px;\\\">Add Group</button>\\r\\n          <button [disabled]=\\\"addMode\\\" type=\\\"button\\\" class=\\\"btn btn-info pull-right\\\" (click)=\\\"ExportPartyLedger()\\\"\\r\\n            style=\\\"margin-bottom: 10px;margin-right: 11px;\\\">Export Party</button>\\r\\n            <button [disabled]=\\\"addMode\\\" type=\\\"button\\\" class=\\\"btn btn-info pull-right\\\" (click)=\\\"ExcelUploadPartyLedger()\\\"\\r\\n            style=\\\"margin-bottom: 10px;margin-right: 11px;\\\">Excel Upload</button>\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"col-md-3 \\\" style=\\\"padding-top: 40px; \\\">\\r\\n    <div class=\\\"col-md-12\\\" style=\\\"padding: 0px\\\">\\r\\n      <!-- <button [disabled]=\\\"addMode\\\" type=\\\"button\\\" class=\\\"btn btn-info right\\\" (click)=\\\"AddGroup(Tree)\\\" style=\\\"margin-bottom: 10px;\\\">Add Group</button>\\r\\n                <button [disabled]=\\\"addMode || this.selectedNode==undefined\\\" type=\\\"button\\\" class=\\\"btn btn-info right\\\" (click)=\\\"AddLedger()\\\" style=\\\" margin-bottom: 10px;  margin-left: 10px;\\\">Add Party</button> -->\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"plainBackGround\\\">\\r\\n      <form>\\r\\n        <fieldset [class.disabledbutton]=\\\"addMode\\\" [disabled]=\\\"addMode\\\"\\r\\n          style=\\\"border:0px solid;border-color:#dcdcdc; margin-top: -10px;\\\" *ngIf=\\\"mode != 'add' && mode != 'edit'\\\">\\r\\n          <input name=\\\"filter\\\" #filter (keyup)=\\\"filterNodes(filter.value, tree)\\\" placeholder=\\\"&nbsp; Search Party\\\"\\r\\n            class=\\\"filterclass\\\" />\\r\\n          <div id=treediv>\\r\\n            <div\\r\\n              style=\\\"overflow: auto; border: black;border-width: 2px;height: 500px;background:white;font-size:12px; margin-left: -8px; width: 106%;\\\">\\r\\n              <Tree #tree [nodes]=\\\"nodes\\\" [focused]=\\\"true\\\" [options]=\\\"customTemplateStringOptions\\\"\\r\\n                (onEvent)=\\\"onEvent($event)\\\" (onActivate)=\\\"onselect(tree,$event)\\\">\\r\\n                <ng-template #treeNodeTemplate let-node>\\r\\n                  <!-- <span title=\\\"{{node.data.subTitle}}\\\" [contextMenu]=\\\"myContextMenu\\\" [contextMenuSubject]=\\\"node.data\\\">{{ node.data.ACNAME }}{{ childrenCount(node) }}</span> -->\\r\\n                  <span title=\\\"{{node.data.subTitle}} \\\" [contextMenu]=\\\"myContextMenu\\\" [contextMenuSubject]=\\\"node.data \\\"\\r\\n                    style=\\\"margin-left:24px\\\"><img src=\\\"../../../assets/img/Folder.jpg\\\" alt=\\\"Group\\\" height=\\\"20\\\"\\r\\n                      width=\\\"20\\\" style=\\\"margin-top:-2px\\\">\\r\\n                    {{ node.data.ACNAME }}\\r\\n                  </span>\\r\\n                </ng-template>\\r\\n                <ng-template #loadingTemplate>Loading, please hold....</ng-template>\\r\\n              </Tree>\\r\\n\\r\\n            </div>\\r\\n            <br>\\r\\n          </div>\\r\\n        </fieldset>\\r\\n\\r\\n        <!--select field-->\\r\\n        <fieldset \\r\\n          style=\\\"border:2px solid;border-color:#dcdcdc; padding: 5px 5px; height:77vh\\\"\\r\\n           *ngIf=\\\"mode == 'add' || mode == 'edit'\\\">\\r\\n          \\r\\n          <div class=\\\"row\\\">\\r\\n            <label class=\\\"form-control-label col-md-4 \\\" style=\\\"width: auto;\\\">Main Group :</label>\\r\\n            <div class=\\\"col-md-7\\\">\\r\\n                <hr>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"row selectrow\\\">\\r\\n            <select id=\\\"mainGroup\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"masterService.groupSelectObj.MGROUP\\\" [ngModelOptions]=\\\"{standalone: true}\\\" (change)=\\\"getSubPartyA($event)\\\">\\r\\n                <option [value]=\\\"\\\"></option>\\r\\n                <option *ngFor=\\\"let main of masterService.partyGroupList;let i=index\\\" [value]=\\\"main.ACID\\\">{{main?.ACNAME}}</option>\\r\\n            </select>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\">\\r\\n            <label class=\\\"form-control-label col-md-4 \\\" style=\\\"width: auto;\\\">Sub Group (A) :</label>\\r\\n            <div class=\\\"col-md-7\\\">\\r\\n                <hr>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"row selectrow\\\">\\r\\n            <select class=\\\"form-control\\\" [(ngModel)]=\\\"masterService.groupSelectObj.SUBGROUP_A\\\" [disabled]=\\\"masterService.disableSubPartyA\\\" [ngModelOptions]=\\\"{standalone: true}\\\" (change)=\\\"getSubPartyB($event)\\\" >\\r\\n                <option [value]=\\\"\\\"></option>\\r\\n                <option *ngFor=\\\"let sub of masterService.subPartyAList;let i=index\\\" [value]=\\\"sub.ACID\\\">{{sub?.ACNAME}}</option>\\r\\n            </select>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\">\\r\\n            <label class=\\\"form-control-label col-md-4 \\\" style=\\\"width: auto;\\\" >Sub Group (B) :</label>\\r\\n            <div class=\\\"col-md-7\\\">\\r\\n                <hr>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"row selectrow\\\">\\r\\n            <select class=\\\"form-control\\\" [(ngModel)]=\\\"masterService.groupSelectObj.SUBGROUP_B\\\" [disabled]=\\\"masterService.disableSubPartyB\\\" [ngModelOptions]=\\\"{standalone: true}\\\" (change)=\\\"getSubPartyC($event)\\\">\\r\\n                <option [value]=\\\"\\\"></option>\\r\\n                <option *ngFor=\\\"let sub of masterService.subPartyBList; let i=index\\\" [value]=\\\"sub.ACID\\\">{{sub?.ACNAME}}</option>\\r\\n            </select>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\">\\r\\n            <label class=\\\"form-control-label col-md-4 \\\" style=\\\"width: auto;\\\" >Sub Group (C) :</label>\\r\\n            <div class=\\\"col-md-7 pd0\\\">\\r\\n                <hr>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"row selectrow\\\">\\r\\n            <select class=\\\"form-control\\\"  [(ngModel)]=\\\"masterService.groupSelectObj.SUBGROUP_C\\\" [disabled]=\\\"masterService.disableSubPartyC\\\" [ngModelOptions]=\\\"{standalone: true}\\\" (change)=\\\"selectSubPartyC($event)\\\" >\\r\\n              <option [value]=\\\"\\\"></option>\\r\\n              <option *ngFor=\\\"let sub of masterService.subPartyCList; let i = index\\\" [value]=\\\"sub.ACID\\\">{{sub?.ACNAME}}</option>\\r\\n            </select>\\r\\n        </div>\\r\\n        </fieldset>\\r\\n      </form>\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n\\r\\n\\r\\n  <!-- </ba-card> -->\\r\\n\\r\\n  <div *ngIf=\\\"!addMode\\\" class=\\\"col-md-9\\\" style=\\\"padding-left: 5px;padding-top: 40px;background-color: white;\\\">\\r\\n    <!-- <ng2-smart-table [settings]=\\\"settings\\\" [source]=\\\"source\\\" (edit)=\\\"onEditClick($event)\\\" (delete)=\\\"onDeleteConfirm($event)\\\"\\r\\n          (view)=\\\"onViewClick($event)\\\"></ng2-smart-table> -->\\r\\n    <div class=\\\"row\\\" style=\\\"margin:10px 12px\\\">\\r\\n      <div class=\\\"col-md-4\\\" style=\\\"margin-top: 3px;\\\">\\r\\n        <input type=\\\"radio\\\" name=\\\"item\\\" [(ngModel)]=\\\"searchParty\\\" #searchPartyByName=\\\"ngModel\\\"\\r\\n          value=\\\"searchByName\\\">&nbsp; Search By Name &nbsp;&nbsp;\\r\\n        <input type=\\\"radio\\\" name=\\\"item\\\" [(ngModel)]=\\\"searchParty\\\" #searchPartyByVat=\\\"ngModel\\\" value=\\\"searchByVat\\\">&nbsp;\\r\\n        Search By VAT No. &nbsp;&nbsp;\\r\\n        \\r\\n      </div>\\r\\n      <div class=\\\"col-md-4\\\" style=\\\"padding-left: 0px;\\\">\\r\\n        <input type=\\\"text\\\" name=\\\"search\\\" [(ngModel)]=\\\"partyFilter\\\" #searchFilter=\\\"ngModel\\\" class=\\\"form-control\\\"\\r\\n          placeholder=\\\"Search...\\\" style=\\\"width: 95%; height: 1.7rem; padding: 0px 6px;\\\">\\r\\n      </div>\\r\\n      <div class=\\\"col-md-4\\\" style=\\\"padding-left: 0px;\\\">\\r\\n      <input type=\\\"radio\\\" name=\\\"sortItem\\\" [(ngModel)]=\\\"partyservice.sortParty\\\"   value=\\\"sortByName\\\" (change)=\\\"sortPartyListByName()\\\">&nbsp;\\r\\n        Sort By Name\\r\\n        <input type=\\\"radio\\\" name=\\\"sortItem\\\" [(ngModel)]=\\\"partyservice.sortParty\\\"  value=\\\"sortByDate\\\" (change)=\\\"sortPartyListByDate()\\\">&nbsp;\\r\\n        Sort By Date\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n      <table class=\\\"table table-striped\\\" style=\\\"margin-left: 1rem; width: 97%;\\\">\\r\\n        <thead>\\r\\n          <tr style=\\\"position: sticky; top:0;line-height: 2.4rem;\\\">\\r\\n            <th scope=\\\"col\\\" style=\\\"width:3%\\\">S.N</th>\\r\\n            <th scope=\\\"col\\\" style=\\\"width:18%\\\">Party Name</th>\\r\\n            <th scope=\\\"col\\\" style=\\\"width:12%\\\">Address</th>\\r\\n            <th scope=\\\"col\\\" style=\\\"width:8%\\\">VAT No.</th>\\r\\n            <th scope=\\\"col\\\" style=\\\"width:7%\\\">Party Type</th>\\r\\n            <th scope=\\\"col\\\" style=\\\"width:6%\\\">Category</th>\\r\\n            <th scope=\\\"col\\\" style=\\\"width:10%\\\">Party Group</th>\\r\\n            <th scope=\\\"col\\\" style=\\\"width:10%; text-align: center;\\\">Action</th>\\r\\n          </tr>\\r\\n        </thead>\\r\\n        <tbody>\\r\\n          <ng-container *ngIf=\\\"this.partyservice.partyList && this.partyservice.partyList.length >0\\\">\\r\\n            <tr\\r\\n              *ngFor=\\\"let party of (this.partyservice.partyList|searchData:partyFilter:searchParty|paginate:{itemsPerPage:itemsPerPage,currentPage: currentPage,totalItems: totalCount}); let i=index\\\">\\r\\n              <td style=\\\"width:3%\\\">{{i+1}}</td>\\r\\n              <td style=\\\"width:18%\\\">{{party.ACNAME}}</td>\\r\\n              <td style=\\\"width:12%\\\">{{party.ADDRESS}}</td>\\r\\n              <td style=\\\"width:8%\\\">{{party.VATNO}}</td>\\r\\n              <td style=\\\"width:7%\\\">{{party.PARTYTYPE}}</td>\\r\\n              <td style=\\\"width:6%\\\">{{party.CATEGORY}}</td>\\r\\n              <td style=\\\"width:10%\\\">{{party.PARENT}}</td>\\r\\n              <td style=\\\"width:10%; text-align: center;\\\">\\r\\n\\r\\n                <a data-toggle=\\\"modal\\\" (click)=\\\"onViewClick(party)\\\">View&nbsp;&nbsp;</a>\\r\\n                <a  *ngIf=\\\"userSetting.enableMaster_AddEdit==1\\\"  data-toggle=\\\"modal\\\" (click)=\\\"onEditClick(party)\\\">Edit</a>\\r\\n\\r\\n              </td>\\r\\n            </tr>\\r\\n          </ng-container>\\r\\n\\r\\n          <ng-container *ngIf=\\\"this.partyservice.partyList && (this.partyservice.partyList|searchData:partyFilter:searchParty).length === 0\\\">\\r\\n            <tr>\\r\\n              <td colspan=\\\"8\\\">\\r\\n                <div class=\\\"font-weight-bold\\\">Party Ledger Information are unavailable.</div>\\r\\n              </td>\\r\\n            </tr>\\r\\n          </ng-container>\\r\\n        </tbody>\\r\\n      </table>\\r\\n      <div class=\\\"pagination\\\"\\r\\n        *ngIf=\\\"this.partyservice.partyList && (this.partyservice.partyList|searchData:partyFilter:searchParty).length > itemsPerPage\\\">\\r\\n        <div style=\\\"margin-left: 18rem;\\\">\\r\\n          <pagination-controls (pageChange)=\\\"partyPagination($event)\\\"></pagination-controls>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div *ngIf=\\\"addMode\\\" class=\\\"col-md-9\\\" style=\\\"padding-left: 5px;padding-top: 30px;overflow: scroll;height: 600px;\\\">\\r\\n    <addPartyLedgerSelector [Title]=\\\"modeTitle\\\" [acid]=\\\"selectedNode?.ACID\\\" [PARENTID]=\\\"selectedNode?.PARENT\\\"\\r\\n      [parent]=\\\"selectedNode?.ACNAME\\\" [rootID]=\\\"root\\\" (onClose)=\\\"onAddClose($event)\\\" [mode]=\\\"mode\\\" [grp]=\\\"grp\\\"\\r\\n      (EditPartyEmit)=\\\"EditPartyEmit()\\\" (SavePartyEmit)=\\\"SavePartyEmit($event)\\\" [parentPartyID] = \\\"parentPartyID\\\" [mainGroupID]=\\\"mainGroupID\\\" [parentIdOnEdit]=\\\"selectedNode?.PARENT_CODE\\\"></addPartyLedgerSelector>\\r\\n  </div>\\r\\n  <context-menu #myContextMenu>\\r\\n    <ng-template *ngFor=\\\"let action of contextMenuActions\\\" contextMenuItem let-item [visible]=\\\"action.visible\\\"\\r\\n      [enabled]=\\\"action.enabled\\\" [divider]=\\\"action.divider\\\" (execute)=\\\"contextMenuClick($event.item,action)\\\">\\r\\n      {{ action.html(item) }}\\r\\n    </ng-template>\\r\\n  </context-menu>\\r\\n</div>\\r\\n\\r\\n\\r\\n\\r\\n<div>\\r\\n  <div class=\\\"modal fade\\\" bsModal #DeleteAcc=\\\"bs-modal\\\" [config]=\\\"{backdrop: 'static'}\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\"\\r\\n    aria-labelledby=\\\"mySmallModalLabel\\\" aria-hidden=\\\"true\\\" style=\\\"margin:-10rem;height:34rem\\\">\\r\\n    <div class=\\\"modal-dialog modal-sm\\\">\\r\\n      <div class=\\\"modal-content\\\" style=\\\"width: 420px;\\\">\\r\\n        <div class=\\\"modal-header\\\">\\r\\n          <button class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"onClickNo()\\\">\\r\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n\\r\\n          </button>\\r\\n          <h4 class=\\\"modal-title\\\">Delete Party</h4>\\r\\n        </div>\\r\\n        <div class=\\\"modal-body\\\">\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-12\\\" style=\\\"margin-top: -10px;margin-bottom: 12px;\\\">\\r\\n              Are you sure you want to delete this party?\\r\\n            </div>\\r\\n            <div class=\\\"col-md-12\\\">\\r\\n              <button (click)=\\\"DeleteYes()\\\" style=\\\"margin-right: 4px;\\\" class=\\\"btn btn-danger \\\">Yes</button>\\r\\n              <button (click)=\\\"DeleteNo()\\\" type=\\\"button \\\" class=\\\"btn btn-warning\\\">No</button>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n<style>\\r\\n  .filterclass {\\r\\n    margin: 10px;\\r\\n    margin-left: -8px;\\r\\n    height: 28px;\\r\\n    width: 284px;\\r\\n    color: #666666;\\r\\n    border: 1px solid #cbcbcb;\\r\\n    border-radius: 5px;\\r\\n    background-color: #ffffff;\\r\\n    box-shadow: none;\\r\\n    font-size: 14px;\\r\\n  }\\r\\n</style>\\r\\n<div class=\\\"modal-sticky\\\" *ngIf=\\\"showPartyLedgerFilterpopUp\\\" style=\\\"display: block;\\r\\npadding: 0px;\\r\\nmargin-bottom: 159px;\\r\\nheight: 241px;\\r\\nposition: absolute;\\r\\nright: 30%;\\r\\n/* top: 5px; */\\r\\nwidth: 550px;\\r\\nz-index: 9999999;\\r\\nborder: 1px solid;background: white;\\\">\\r\\n\\r\\n  <div class=\\\"modal-content modal-content-main-area\\\">\\r\\n    <div class=\\\"modal-header\\\" style=\\\"height: 40px;padding-bottom: 6%;\\\">\\r\\n      <h4 class=\\\"modal-title\\\" id=\\\"myModalLabel\\\">Ledger filter </h4>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"col-md-12\\\" style=\\\"height: 226px; margin-top : 10px;    margin-left: 3%;\\\">\\r\\n\\r\\n      <div class=\\\"row\\\" style=\\\"margin-top: 8px;\\\">\\r\\n        <div class=\\\"col-sm-4\\\">\\r\\n          <label class=\\\"form-control-label\\\">Party Group : </label>\\r\\n        </div>\\r\\n\\r\\n        <select class=\\\"col-sm-8\\\" style=\\\"width: 56%;\\\" [(ngModel)] = \\\"LedgerFilterObj.type\\\" (change)=\\\"changeType()\\\">\\r\\n          <option value =\\\"Customer\\\">Customer</option>\\r\\n          <option value =\\\"Supplier\\\">Supplier</option>\\r\\n        </select>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"row\\\" style=\\\"margin-top: 8px;\\\">\\r\\n        <div class=\\\"col-sm-4\\\">\\r\\n          <label class=\\\"form-control-label\\\">Party Type : </label>\\r\\n        </div>\\r\\n\\r\\n\\r\\n        <select class=\\\"col-sm-8\\\" style=\\\"width: 56%;\\\" [(ngModel)] = \\\"LedgerFilterObj.accountType\\\">\\r\\n          <option *ngFor=\\\"let i of GeoList\\\" value=\\\"{{i.OrgTypeCode}}\\\" >{{\\r\\n            i.OrgTypeName\\r\\n            }}</option>\\r\\n        </select>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"row\\\" style=\\\"margin-top: 8px;\\\">\\r\\n        <div class=\\\"col-sm-4\\\">\\r\\n          <label class=\\\"form-control-label\\\">Party Name : </label>\\r\\n        </div>\\r\\n        <div class=\\\"col-sm-8\\\">\\r\\n          <input type=\\\"text\\\" [(ngModel)]=\\\"LedgerFilterObj.accountName\\\" style=\\\"height:24px;width: 92% !important;margin-left: -5%;\\\"\\r\\n          (keydown.Enter)=\\\"showAcList(i);\\\"\\r\\n           placeholder=\\\"Press Enter to select\\\" autocomplete=\\\"off\\\">\\r\\n\\r\\n        </div>\\r\\n      </div>\\r\\n      <div style=\\\"float: right;\\r\\n      margin-top: 14px;\\r\\n      margin-right: 9%;\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" style=\\\"background: #3caed0;border-color: #2dacd1;\\\" (click)=\\\"OkCommand()\\\">Apply</button>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" style=\\\"background: #3caed0;border-color: #2dacd1;\\\" (click)=\\\"ExportAll()\\\">Export\\r\\n          All</button>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" style=\\\"background: #3caed0;border-color: #2dacd1;\\\" (click)=\\\"CancelCommand()\\\">Cancel</button>\\r\\n      </div>\\r\\n\\r\\n\\r\\n    </div>\\r\\n\\r\\n\\r\\n  </div>\\r\\n\\r\\n</div>\\r\\n\\r\\n<generic-popup-grid #genericGridACList [popupsettings]=\\\"gridACListPopupSettings\\\"\\r\\n  (onItemDoubleClick)=\\\"onAcSelect($event)\\\"></generic-popup-grid>\\r\\n\\r\\n  <file-uploader-popup #fileUploadPopup [popupsettings]=\\\"fileUploadPopupSettings\\\"\\r\\n    (onUploaded)=\\\"fileUploadSuccess($event)\\\">\\r\\n  </file-uploader-popup>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/masters/components/party-ledger/partyLedgerTable.component.html\n// module id = 1867\n// module chunks = 12","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../node_modules/raw-loader/index.js!../../../../../../node_modules/sass-loader/index.js!./smartTables.scss\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = require(\"!../../../../../../node_modules/style-loader/addStyles.js\")(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../../../../../node_modules/raw-loader/index.js!../../../../../../node_modules/sass-loader/index.js!./smartTables.scss\", function() {\n\t\t\tvar newContent = require(\"!!../../../../../../node_modules/raw-loader/index.js!../../../../../../node_modules/sass-loader/index.js!./smartTables.scss\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/style-loader!./src/app/pages/masters/components/Bank/smartTables.scss\n// module id = 1893\n// module chunks = 12","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../node_modules/raw-loader/index.js!../../../../../../node_modules/sass-loader/index.js!./smartTables.scss\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = require(\"!../../../../../../node_modules/style-loader/addStyles.js\")(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../../../../../node_modules/raw-loader/index.js!../../../../../../node_modules/sass-loader/index.js!./smartTables.scss\", function() {\n\t\t\tvar newContent = require(\"!!../../../../../../node_modules/raw-loader/index.js!../../../../../../node_modules/sass-loader/index.js!./smartTables.scss\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/style-loader!./src/app/pages/masters/components/Companies/smartTables.scss\n// module id = 1894\n// module chunks = 12"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACZA;AAGA;AACA;AACA;AAEA;AAKA;AACA;AACA;AACA;AACA;AACA;AAWA;AAiDA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AA3DA;AAMA;AAMA;AACA;AAGA;AACA;AAKA;AACA;AACA;AACA;AAGA;AACA;AACA;AAGA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAwNA;AA6WA;AACA;AACA;AAzjsBA;AAAA;;AAAA;AAEA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AARA;AANA;AACA;AACA;AACA;AACA;AACA;AAmDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA5DA;AAAA;;;;;;;;;;;;;;;;;;;;;AC5BA;AAEA;AACA;AACA;AACA;AACA;AAIA;AACA;AAIA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;;;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAGA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AArZA;AAFA;AAGA;AADA;AAAA;;;;;;;;;;;;;;;;;;;;ACfA;AAoBA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;;AA/BA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACRA;AACA;AAIA;AACA;AAGA;AAAA;AAMA;AAAA;AAAA;AAAA;AAFA;AAIA;AACA;AACA;AACA;;AACA;AAEA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;;;;AAIA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAGA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;;;;;;;;;;;;;;;AC/IA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACXA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AAIA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AACA;AATA;AACA;AAAA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;;;AAAA;AAGA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAGA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAAA;AAhPA;AAFA;AAGA;AADA;AAAA;;;;;;;;;;;;;;;;;;;;ACfA;AAEA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAQA;AA2BA;AAAA;AAAA;AAAA;AAAA;AAAA;AA1BA;AAWA;AAEA;AAMA;AACA;AACA;AACA;AACA;AAsUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAlVA;AACA;AACA;AAvBA;AANA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AADA;AA0BA;AAAA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;;;AAAA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAGA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAGA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAoBA;AAAA;AArWA;AAAA;AAAA;AAAA;AAKA;AADA;AACA;AAAA;AAhBA;AADA;AA4BA;AA3BA;AAAA;;;;;;;;;;;;;;;;;;;;;;;AC5CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAyBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/CA;AAMA;AAAA;AAYA;AAXA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAFA;AAGA;AACA;AACA;AAAA;AAZA;AAJA;AACA;AACA;AACA;AACA;AAAA;AAiBA;AAAA;AAKA;AAJA;AACA;AACA;AACA;AACA;AAAA;AALA;AAHA;AACA;AACA;AACA;AAAA;AAQA;AAAA;AAQA;AAPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AARA;AADA;AACA;AAAA;;;;;;;;;;;;AC/BA;;;;;;;;ACAA;AAQA;AACA;AAEA;AAOA;AAAA;AAiBA;AAAA;AACA;AACA;AACA;AAnBA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;AAEA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAGA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AA3JA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AAkHA;AADA;;AACA;;AAkCA;AAhKA;AALA;AACA;AACA;AACA;AACA;AAmBA;AACA;AACA;AApBA;AAAA;;;;;;;;;;;;;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAcA;AAAA;AAOA;AANA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAPA;AAZA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;;;;;;;;;;;;;;;;;;;;ACtBA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AASA;AAuIA;AAAA;AAAA;AAAA;AAAA;AAnxOA;AANA;AACA;AACA;AACA;AACA;AACA;AAwIA;AAvIA;AAAA;AAyOA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmCA;;;;;;;;;;;;;;;;;;;;;AC9RA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAUA;AAAA;AAkHA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AApHA;AAEA;AACA;AAIA;AACA;AACA;AAIA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAEA;AACA;AACA;AACA;AAQA;AAGA;AAEA;AACA;AACA;AAEA;AACA;AAqKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA4BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAsLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA1YA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;;AACA;AA7EA;AAAA;AAEA;;;AAFA;AA+EA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAGA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAIA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAGA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAYA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAWA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AAGA;AAIA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AAoBA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAKA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAIA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AAGA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AA76BA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAmGA;AADA;AACA;AAAA;AAwlBA;AADA;;AACA;;AAKA;AApsBA;AARA;AACA;AACA;AACA;AACA;AAEA;AAoHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAzHA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;ACjDA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAQA;AAAA;AAiEA;AACA;AACA;AAFA;AAEA;AACA;AACA;AAnEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAQA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;;AACA;AAEA;AACA;AAEA;AAEA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AA9IA;AANA;AACA;AACA;AACA;AACA;AACA;AAoEA;AACA;AACA;AArEA;AAAA;;;;;;;;;;;;;;;;;;;;;;;ACnBA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AASA;AAWA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAlBA;AACA;AAGA;AACA;AACA;AACA;AACA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAAA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AAEA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAGA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AAAA;AA/OA;AANA;AACA;AACA;AACA;AACA;AACA;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AApBA;AAAA;;;;;;;;;;;;;;;;;;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAwBA;AAAA;AAAA;AAAA;AAAA;AAAA;AApBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;;;;;;;;;;;;;;;;;;;;;ACjCA;AACA;AACA;AACA;AAEA;AACA;AAGA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAAA;AA9CA;AAFA;AAIA;AAFA;AAAA;;;;;;;;;;;;;;;;;ACTA;AACA;AAUA;AACA;AACA;AAAA;AACA;AACA;AACA;AASA;AAAA;AAdA;AARA;AAEA;AACA;AACA;AAEA;AAIA;AAFA;AAAA;;;;;;;;;;;;ACXA;AACA;AAUA;AACA;AACA;AAAA;AACA;AACA;AACA;AASA;AAAA;AAdA;AARA;AAEA;AACA;AACA;AAEA;AAIA;AAFA;AAAA;;;;;;;;;;;;ACVA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAUA;AA4GA;AAMA;AANA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAnGA;AAGA;AACA;AACA;AACA;AACA;AAKA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAEA;AACA;AAEA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAGA;AACA;AAEA;AACA;AAEA;AACA;AAGA;AACA;AACA;AACA;AAmKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA+BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA6TA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAuPA;AA2hBA;AAvyCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAGA;AAzIA;AAAA;AACA;;;AADA;AA0IA;AAAA;AACA;AACA;AACA;AACA;AAEA;AAIA;AACA;AACA;AACA;AAGA;AACA;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AAEA;AAEA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAUA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AAIA;AACA;AACA;AAAA;AACA;AAAA;AAGA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AAAA;AAEA;AACA;AAGA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAocp7CA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AADA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAgxCA;AADA;;AACA;;AAiBA;AA6GA;AAAA;AAAA;AAAA;AA15CA;AARA;AACA;AACA;AACA;AACA;AAEA;AA8GA;AACA;AACA;AACA;AACA;AACA;AAjHA;AAAA;AAy7CA;AAAA;AAEA;AAAA;AAAA;;AACA;AAAA;AAKA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACx/CA;AACA;AAGA;AACA;AACA;AAEA;AACA;AAEA;AAGA;AACA;AACA;AASA;AAmGA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAnGA;AAIA;AAGA;AAIA;AACA;AACA;AAGA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAsDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AA1DA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAcA;AACA;AACA;AAEA;AAEA;AAEA;AAAA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AA1aA;AAAA;;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AATA;AARA;AAEA;AACA;AACA;AAEA;AAqGA;AACA;AApGA;AAAA;;;;;;;;;;;;;;;;;;;;;;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAUA;AAAA;AA4GA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA9GA;AAEA;AACA;AAIA;AACA;AACA;AAIA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAEA;AACA;AAMA;AAGA;AAEA;AACA;AAGA;AAyKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA4BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA8JA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAtXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AAxEA;AAAA;AAEA;;;AAFA;AA0EA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAIA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAGA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAYA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAWA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAGA;AAIA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AAoBA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAKA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAIA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAGA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AAAA;AAh3BA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AA+FA;AADA;AACA;AAAA;AAMA;AAAA;AAAA;AAAA;AA8jBA;AADA;;AACA;;AAKA;AA5qBA;AARA;AACA;AACA;AACA;AACA;AAEA;AA8GA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAnHA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;AClDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACpBA;AAQA;AACA;AAEA;AAOA;AAAA;AAiBA;AAAA;AACA;AACA;AACA;AAnxIA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AA+FA;AADA;;AACA;;AAkCA;AA7IA;AALA;AACA;AACA;AACA;AACA;AAmBA;AACA;AACA;AApBA;AAAA;;;;;;;;;;;;;;ACjBA;AAEA;AACA;AAQA;AACA;AAGA;AAKA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAQA;AAsDA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AA9DA;AAKA;AAGA;AACA;AAIA;AACA;AAGA;AACA;AAKA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAGA;AACA;AACA;AAGA;AACA;AAKA;AACA;AACA;AACA;AAEA;AA2HA;AACA;AACA;AA4PA;AA5WA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAKA;AAAA;AArbA;AAAA;AAAA;AAAA;AACA;AAAA;;AAAA;AAEA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AATA;AANA;AACA;AACA;AACA;AACA;AACA;AAwDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAhEA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;ACtCA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJA;AACA;AACA;AACA;AACA;AAAA;;;;;;;;;;;;;;;AC3BA;AACA;AACA;AACA;AACA;AAEA;AAGA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAwBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAGA;AACA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;AC5CA;AACA;AACA;AAKA;AACA;AAEA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJA;AACA;AACA;AACA;AACA;AAAA;;;;;;;;;;;;;AChBA;AAEA;AACA;AAEA;AACA;AACA;AASA;AA6BA;AACA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AA3BA;AACA;AAEA;AACA;AAGA;AACA;AAqCA;AAZA;AAvBA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AASA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAGA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AAAA;AApGA;AAAA;AAAA;AAAA;AAPA;AARA;AAEA;AACA;AACA;AAEA;AA+BA;AA7BA;AAAA;;;;;;;;;;;;;;;;AChBA;AAGA;AACA;AACA;AAEA;AAOA;AAyCA;AACA;AADA;AAAA;AAAA;AApCA;AACA;AAIA;AACA;AAqDA;AAnBA;AAhCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAGA;AAQA;AAEA;AAAA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAGA;AAAA;AAjHA;AAAA;AAAA;AAAA;AATA;AANA;AAEA;AACA;AACA;AA2CA;AAzCA;AAAA;;;;;;;;;;;;;;;ACZA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAsBA;AA6EA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AApFA;AAEA;AACA;AAIA;AAIA;AACA;AAWA;AAYA;AACA;AAGA;AACA;AAKA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AAIA;AA4ZA;AA6bA;AAsFA;AAEA;AAr6BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAIA;AAGA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AAGA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAGA;AAKA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AAIA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAGA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAGA;AAGA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAGA;AACA;AACA;AAEA;AAAA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAEA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAWA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAPA;AASA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAAA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAGA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AAEA;AAFA;AAIA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AAIA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AAAA;AAEA;AACA;AAGA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAGA;AAEA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAEA;AACA;AACA;AAEA;AACA;AAAA;AA3qCA;AAAA;;AAAA;AACA;AAAA;;AAAA;AAGA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AA83BA;AADA;;AACA;;AAKA;AA15BA;AAnBA;AAEA;AACA;AACA;AACA;AACA;AACA;AAUA;AA+EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AArFA;AAAA;AA+qCA;AAAA;AAEA;AAAA;AAAA;;AACA;AAAA;AAKA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;AChuCA;AAIA;AAAA;AA4CA;AA3CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AA5CA;AAFA;AAEA;AAAA;;;;;;;;;;;ACJA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJA;AACA;AACA;AACA;AACA;AAAA;;;;;;;;;;;;;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAQA;AA+DA;AAAA;AAAA;AAAA;AAAA;AAAA;AA5DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAGA;AAEA;AACA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AA3KA;AALA;AACA;AACA;AACA;AACA;AAgEA;AA/DA;AAAA;AA4KA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmCA;;;;;;;;;;;;;;;;;;;;;;ACjOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAwBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;ACrCA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAIA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJA;AACA;AACA;AACA;AACA;AAAA;;;;;;;;;;;;;;;ACpBA;AACA;AACA;AAGA;AACA;AAEA;AA4FA;AA+CA;AAAA;AAAA;AAAA;AA5CA;AACA;AACA;AAGA;AACA;AAKA;AACA;AACA;AACA;AAiFA;AAlDA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAGA;AAnDA;AAAA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAGA;AA2BA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AAAA;AApJA;AAAA;AAAA;AAAA;AAbA;AAzFA;AAEA;AACA;AA+EA;AACA;AAEA;AAEA;AAiDA;AA/CA;AAAA;;;;;;;;;;;;;;;;;ACpGA;AAEA;AACA;AACA;AACA;AAEA;AAUA;AAmBA;AAAA;AAAA;AAAA;AAAA;AAdA;AACA;AAIA;AACA;AAEA;AAEA;AACA;AAmEA;AA/DA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAGA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAGA;AAAA;AA7IA;AAAA;AAAA;AAAA;AATA;AATA;AAEA;AACA;AAEA;AAEA;AAqBA;AAnBA;AAAA;;;;;;;;;;;;;;;;ACjBA;AAEA;AACA;AACA;AAEA;AACA;AASA;AA6BA;AACA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AA3BA;AACA;AAEA;AACA;AAGA;AACA;AAwCA;AAfA;AAvBA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AASA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAGA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAvGA;AAAA;AAAA;AAAA;AAPA;AARA;AAEA;AACA;AACA;AAEA;AA+BA;AA7BA;AAAA;;;;;;;;;;;;;;;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA0BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAGA;AACA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1CA;AACA;AACA;AAIA;AACA;AAEA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJA;AACA;AACA;AACA;AACA;AAAA;;;;;;;;;;;;;ACfA;AAGA;AACA;AACA;AAEA;AAOA;AAyCA;AACA;AADA;AAAA;AAAA;AApCA;AACA;AAIA;AACA;AAqDA;AAnBA;AAhCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAGA;AAQA;AAEA;AAAA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAGA;AAAA;AAjHA;AAAA;AAAA;AAAA;AATA;AANA;AAEA;AACA;AACA;AA2CA;AAzCA;AAAA;;;;;;;;;;;;;;;ACZA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAGA;AACA;AACA;AAqBA;AA0FA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AA/FA;AAMA;AAIA;AACA;AAOA;AAWA;AACA;AAGA;AACA;AAKA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAIA;AAGA;AAGA;AAGA;AAIA;AA0sCA;AAjsCA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAOA;AAAA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AAIA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAGA;AACA;AACA;AAEA;AAAA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAEA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAPA;AASA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAAA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAGA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAnrDA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAwDA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AA6rCA;AADA;;AACA;;AAKA;AAzxCA;AAnBA;AAEA;AACA;AACA;AACA;AACA;AACA;AAUA;AA4FA;AACA;AACA;AACA;AACA;AACA;AACA;AAhGA;AAAA;AAwrDA;AAAA;AAEA;AAAA;AAAA;;AACA;AAAA;AAKA;AAAA;AAAA;;AAkBA;AAAA;AAEA;AAAA;AAAA;;AACA;AAAA;AAIA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClwDA;AAIA;AAAA;AA4CA;AA3CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AA5CA;AAFA;AAEA;AAAA;;;;;;;;;;ACJA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;","sourceRoot":""}