{"version":3,"file":"0.chunk.js","sources":["webpack:///./src/app/pages/Reports/reportStyle.css","webpack:///./src/app/pages/masters/components/PLedger/PLedger.component.ts","webpack:///./src/app/pages/masters/components/PLedger/PLedger.service.ts","webpack:///./src/app/pages/masters/components/account-ledger/accountLedger.service.ts","webpack:///./src/app/pages/masters/components/PLedger/PLedger.html","webpack:///./src/app/pages/ReportDialogs/MasterDialogReport/MasterDialogReport.ts","webpack:///./src/app/pages/Reports/Reports.component.ts","webpack:///./src/app/pages/Reports/components/ReportMain/ReportMain.ts","webpack:///./src/app/pages/Reports/context-menu/context-menu-data.ts","webpack:///./~/util/util.js","webpack:///./src/app/pages/ReportDialogs/AccountLedgerReport/account-ledger-report.component.ts","webpack:///./src/app/pages/ReportDialogs/ActualVsBudget-Report/actualvsbudget-report.component.ts","webpack:///./src/app/pages/ReportDialogs/AdditionalCost-Itemwise-Report/additionalcost-itemwise-report.component.ts","webpack:///./src/app/pages/ReportDialogs/AdditionalCost-Voucherwise-Report/additionalcost-voucherwise-report.component.ts","webpack:///./src/app/pages/ReportDialogs/BalanceSheetReport/balance-sheet-report.component.ts","webpack:///./src/app/pages/ReportDialogs/BillTrackingReport/billtracking-report.component.ts","webpack:///./src/app/pages/ReportDialogs/Cash-Collection-Voucher-Report/cash-collection-voucher-report.component.ts","webpack:///./src/app/pages/ReportDialogs/CashAndBankBookReport/cash-and-bank-book-report.component.ts","webpack:///./src/app/pages/ReportDialogs/CashBookReport/cashbookreport.component.ts","webpack:///./src/app/pages/ReportDialogs/Consolidated-Balance-Sheet-Report/consolidated-balance-sheet-report.component.ts","webpack:///./src/app/pages/ReportDialogs/Consolidated-Profit&Loss-Report/consolidated-profit-loss-report.component.ts","webpack:///./src/app/pages/ReportDialogs/Consolidated-Trial-Report/consolidated-trial-balance-report.component.ts","webpack:///./src/app/pages/ReportDialogs/Creditors Report/creditorsreport.component.ts","webpack:///./src/app/pages/ReportDialogs/CreditorsBillTrackingReport/creditors-billtracking-report.component.ts","webpack:///./src/app/pages/ReportDialogs/CurrentStockWarehousewiseReportAccount/currentstock-warehousewisereport-account.component.ts","webpack:///./src/app/pages/ReportDialogs/DateFilters/date-filters.component.ts","webpack:///./src/app/pages/ReportDialogs/DayBookReport/day-book-report.component.ts","webpack:///./src/app/pages/ReportDialogs/Debit-Note-Register-Report/debitnote-register-report.component.ts","webpack:///./src/app/pages/ReportDialogs/Debtors Report/debtorsreport.component.ts","webpack:///./src/app/pages/ReportDialogs/DueVoucherReport/duevoucherreport.ts","webpack:///./src/app/pages/ReportDialogs/GST-Purchase-Summary/gst-purchase-summary.component.ts","webpack:///./src/app/pages/ReportDialogs/GST-Sales-Summary/gst-sales-summary.component.ts","webpack:///./src/app/pages/ReportDialogs/IncomeTax-Depreciation-Report/incometax-depreciation-report.component.ts","webpack:///./src/app/pages/ReportDialogs/JournalBook/journalbook.component.ts","webpack:///./src/app/pages/ReportDialogs/LocalPurchasecost-allocation-report/localpurchasecost-allocation-report.component.ts","webpack:///./src/app/pages/ReportDialogs/MonthlySalesPaymentReport/monthly-sales-payement-report.component.ts","webpack:///./src/app/pages/ReportDialogs/One-Lakh-Above-SALES-Report/one-lakh-above-SALES-report.component.ts","webpack:///./src/app/pages/ReportDialogs/PartyLedgerReport/party-ledger-report.component.ts","webpack:///./src/app/pages/ReportDialogs/PartyLedger/partyLedger.component.ts","webpack:///./src/app/pages/ReportDialogs/PostDatedChequeVoucherReport/post-dated-chequereport.component.ts","webpack:///./src/app/pages/ReportDialogs/ProfitLossReport/profit-loss-report.component.ts","webpack:///./src/app/pages/ReportDialogs/PurchaseBookReport/PurchaseBookReport.ts","webpack:///./src/app/pages/ReportDialogs/SalesBookReport/salesbookreport.ts","webpack:///./src/app/pages/ReportDialogs/SalesReturnReportDetail/salesreturn-reportdetail.component.ts","webpack:///./src/app/pages/ReportDialogs/SalesReturnSummaryReport/salesreturn-summary-report.component.ts","webpack:///./src/app/pages/ReportDialogs/SalesReturnSummaryRetailerReport/salesreturnsummary-retailerreport.component.ts","webpack:///./src/app/pages/ReportDialogs/StockAbcAnalysisReportAccount/stockabc-analysisreport-account.component.ts","webpack:///./src/app/pages/ReportDialogs/StockLedgerReportAcc/stock-ledger-report-account.component.ts","webpack:///./src/app/pages/ReportDialogs/StockSummaryReportAccount/stocksummary-report-account.component.ts","webpack:///./src/app/pages/ReportDialogs/StockValuationReport/stock-valuation-report.component.ts","webpack:///./src/app/pages/ReportDialogs/SubLedgerAcbaseReport/sub-ledger-acbase-report.component.ts","webpack:///./src/app/pages/ReportDialogs/SubLedgerReport/sub-ledger-report.component.ts","webpack:///./src/app/pages/ReportDialogs/SummaryLedgerReport/summaryledgerreport.component.ts","webpack:///./src/app/pages/ReportDialogs/SummaryPartyLedger/summary-party-ledger.component.ts","webpack:///./src/app/pages/ReportDialogs/TDS Report/tds-report.comnponent.ts","webpack:///./src/app/pages/ReportDialogs/Trial-Balance-Report/trial-balance-report.component.ts","webpack:///./src/app/pages/ReportDialogs/VAT-Purchase-Register-Report/vat-purchase-register-report.component.ts","webpack:///./src/app/pages/ReportDialogs/account-filters/account-filters.component.ts","webpack:///./src/app/pages/ReportDialogs/account-list/account-list.component.ts","webpack:///./src/app/pages/ReportDialogs/account-payable/account-payable.component.ts","webpack:///./src/app/pages/ReportDialogs/account-receivable/account-receivable.component.ts","webpack:///./src/app/pages/ReportDialogs/aging-payable/aging-payable.component.ts","webpack:///./src/app/pages/ReportDialogs/aging-receivable/aging-receivable.component.ts","webpack:///./src/app/pages/ReportDialogs/area-filters/area-filters.component.ts","webpack:///./src/app/pages/ReportDialogs/area-list/area-list.component.ts","webpack:///./src/app/pages/ReportDialogs/companynorms-depreciation-report/companynorms-deprecaition-report.component.ts","webpack:///./src/app/pages/ReportDialogs/costcenter-filter/costcenter-filters.component.ts","webpack:///./src/app/pages/ReportDialogs/costcenter-list/costcenter-list.component.ts","webpack:///./src/app/pages/ReportDialogs/creditors-aging-report/creditors-aging-report.component.ts","webpack:///./src/app/pages/ReportDialogs/creditors-outstanding-report/creditors-outstanding-report.component.ts","webpack:///./src/app/pages/ReportDialogs/debotrs-aging-report/debtors-aging-report.component.ts","webpack:///./src/app/pages/ReportDialogs/debtors-outstanding-report/debtors-outstanding-report.component.ts","webpack:///./src/app/pages/ReportDialogs/division/division.component.ts","webpack:///./src/app/pages/ReportDialogs/faarasset-depreciation-report/faarasset-depreciation-report.component.ts","webpack:///./src/app/pages/ReportDialogs/one-lakh-above-PURCHASE-report/one-lakh-above-PURCHASE-report.component.ts","webpack:///./src/app/pages/ReportDialogs/voucher-register-report/voucher-register-report.component.ts","webpack:///./src/app/pages/Reports/Reports.routing.ts","webpack:///./src/app/pages/Reports/context-menu/context-menu.component.ts","webpack:///./~/inherits/inherits_browser.js","webpack:///./src/app/pages/Reports/context-menu/context-menu.component.scss","webpack:///./src/app/pages/ReportDialogs/AccountLedgerReport/account-ledger-report.component.html","webpack:///./src/app/pages/ReportDialogs/ActualVsBudget-Report/actualvsbudget-report.component.html","webpack:///./src/app/pages/ReportDialogs/AdditionalCost-Itemwise-Report/additionalcost-itemwise-report.component.html","webpack:///./src/app/pages/ReportDialogs/AdditionalCost-Voucherwise-Report/additionalcost-voucherwise-report.component.html","webpack:///./src/app/pages/ReportDialogs/BalanceSheetReport/balance-sheet-report.component.html","webpack:///./src/app/pages/ReportDialogs/BillTrackingReport/billtracking-report.component.html","webpack:///./src/app/pages/ReportDialogs/Cash-Collection-Voucher-Report/cash-collection-voucher-report.component.html","webpack:///./src/app/pages/ReportDialogs/CashAndBankBookReport/cash-and-bank-book-report.component.html","webpack:///./src/app/pages/ReportDialogs/CashBookReport/cashbookreport.component.html","webpack:///./src/app/pages/ReportDialogs/Consolidated-Balance-Sheet-Report/consolidated-balance-sheet-report.component.html","webpack:///./src/app/pages/ReportDialogs/Consolidated-Profit&Loss-Report/consolidated-profit-loss-report.component.html","webpack:///./src/app/pages/ReportDialogs/Consolidated-Trial-Report/consolidated-trial-balance-report.component.html","webpack:///./src/app/pages/ReportDialogs/Creditors Report/creditorsreport.component.html","webpack:///./src/app/pages/ReportDialogs/CreditorsBillTrackingReport/creditors-billtracking-report.component.html","webpack:///./src/app/pages/ReportDialogs/CurrentStockWarehousewiseReportAccount/currentstock-warehousewisereport-account.component.html","webpack:///./src/app/pages/ReportDialogs/DateFilters/date-filters.component.html","webpack:///./src/app/pages/ReportDialogs/DayBookReport/day-book-report.component.html","webpack:///./src/app/pages/ReportDialogs/Debit-Note-Register-Report/debitnote-register-report.component.html","webpack:///./src/app/pages/ReportDialogs/Debtors Report/debtorsreport.component.html","webpack:///./src/app/pages/ReportDialogs/DueVoucherReport/duevoucherreport.component.html","webpack:///./src/app/pages/ReportDialogs/GST-Purchase-Summary/gst-purchase-summary.component.html","webpack:///./src/app/pages/ReportDialogs/GST-Sales-Summary/gst-sales-summary.component.html","webpack:///./src/app/pages/ReportDialogs/IncomeTax-Depreciation-Report/incometax-depreciation-report.component.html","webpack:///./src/app/pages/ReportDialogs/JournalBook/journalbook.component.html","webpack:///./src/app/pages/ReportDialogs/LocalPurchasecost-allocation-report/localpurchasecost-allocation-report.component.html","webpack:///./src/app/pages/ReportDialogs/MasterDialogReport/MasterDialogReport.html","webpack:///./src/app/pages/ReportDialogs/MonthlySalesPaymentReport/monthly-sales-payement-report.component.html","webpack:///./src/app/pages/ReportDialogs/One-Lakh-Above-SALES-Report/one-lakh-above-SALES-report.component.html","webpack:///./src/app/pages/ReportDialogs/PartyLedgerReport/party-ledger-report.component.html","webpack:///./src/app/pages/ReportDialogs/PartyLedger/partyLedger.component.html","webpack:///./src/app/pages/ReportDialogs/PostDatedChequeVoucherReport/post-dated-chequereport.component.html","webpack:///./src/app/pages/ReportDialogs/ProfitLossReport/profit-loss-report.component.html","webpack:///./src/app/pages/ReportDialogs/PurchaseBookReport/purchasebookreport.component.html","webpack:///./src/app/pages/ReportDialogs/SalesBookReport/salesbookreport.component.html","webpack:///./src/app/pages/ReportDialogs/SalesReturnReportDetail/salesreturn-reportdetail.component.html","webpack:///./src/app/pages/ReportDialogs/SalesReturnSummaryReport/salesreturn-summary-report.component.html","webpack:///./src/app/pages/ReportDialogs/SalesReturnSummaryRetailerReport/salesreturnsummary-retailerreport.component.html","webpack:///./src/app/pages/ReportDialogs/StockAbcAnalysisReportAccount/stockabc-analysisreport-account.component.html","webpack:///./src/app/pages/ReportDialogs/StockLedgerReportAcc/stock-ledger-report-account.component.html","webpack:///./src/app/pages/ReportDialogs/StockSummaryReportAccount/stocksummary-report-account.component.html","webpack:///./src/app/pages/ReportDialogs/StockValuationReport/stock-valuation-report.component.html","webpack:///./src/app/pages/ReportDialogs/SubLedgerAcbaseReport/sub-ledger-acbase-report.component.html","webpack:///./src/app/pages/ReportDialogs/SubLedgerReport/sub-ledger-report.component.html","webpack:///./src/app/pages/ReportDialogs/SummaryLedgerReport/summaryledgerreport.component.html","webpack:///./src/app/pages/ReportDialogs/SummaryPartyLedger/summary-party-ledger.component.html","webpack:///./src/app/pages/ReportDialogs/TDS Report/tds-report.comnponent.html","webpack:///./src/app/pages/ReportDialogs/Trial-Balance-Report/trial-balance-report.component.html","webpack:///./src/app/pages/ReportDialogs/VAT-Purchase-Register-Report/vat-purchase-register-report.component.html","webpack:///./src/app/pages/ReportDialogs/account-filters/account-filters.component.html","webpack:///./src/app/pages/ReportDialogs/account-list/account-list.component.html","webpack:///./src/app/pages/ReportDialogs/account-payable/account-payable.component.html","webpack:///./src/app/pages/ReportDialogs/account-receivable/account-receivable.component.html","webpack:///./src/app/pages/ReportDialogs/aging-payable/aging-payable.component.html","webpack:///./src/app/pages/ReportDialogs/aging-receivable/aging-receivable.component.html","webpack:///./src/app/pages/ReportDialogs/area-filters/area-filters.component.html","webpack:///./src/app/pages/ReportDialogs/area-list/area-list.component.html","webpack:///./src/app/pages/ReportDialogs/companynorms-depreciation-report/companynorms-depreciation-report.component.html","webpack:///./src/app/pages/ReportDialogs/costcenter-filter/costcenter-filters.component.html","webpack:///./src/app/pages/ReportDialogs/costcenter-list/costcenter-list.component.html","webpack:///./src/app/pages/ReportDialogs/creditors-aging-report/creditors-aging-report.component.html","webpack:///./src/app/pages/ReportDialogs/creditors-outstanding-report/creditors-outstanding-report.component.html","webpack:///./src/app/pages/ReportDialogs/debotrs-aging-report/debtors-aging-report.component.html","webpack:///./src/app/pages/ReportDialogs/debtors-outstanding-report/debtors-outstanding-report.component.html","webpack:///./src/app/pages/ReportDialogs/division/division.component.html","webpack:///./src/app/pages/ReportDialogs/faarasset-depreciation-report/faarasset-depreciation-report.component.html","webpack:///./src/app/pages/ReportDialogs/one-lakh-above-PURCHASE-report/one-lakh-above-PURCHASE-report.component.html","webpack:///./src/app/pages/ReportDialogs/voucher-register-report/voucher-register-report.component.html","webpack:///./src/app/pages/Reports/components/ReportMain/ReportMain.html","webpack:///./src/app/pages/Reports/context-menu/context-menu.component.html","webpack:///./~/util/support/isBufferBrowser.js","webpack:///./src/app/pages/Reports/Reports.module.ts"],"sourcesContent":["module.exports = \".container{\\r\\n  width: 60% !important;\\r\\n}\\r\\n\\r\\nth {\\r\\n    background: skyblue;\\r\\n    border: 1px solid #dbd7d7;\\r\\n  \\r\\n  }\\r\\n  \\r\\n  td {\\r\\n    height: 30px;\\r\\n    border: 1px solid #dbd7d7;\\r\\n  }\\r\\n  \\r\\n  .borderdiv {\\r\\n    border: 1px solid rgba(119, 119, 119, 0.15)\\r\\n  }\\r\\n  \\r\\n  .rowdiv {\\r\\n    border: 1px solid rgba(119, 119, 119, 0.15);\\r\\n    text-align: center;\\r\\n  }\\r\\n  \\r\\n  .smalllabeldiv {\\r\\n    height: 16px;\\r\\n  }\\r\\n  \\r\\n  .smallHeader {\\r\\n    font-size: 11px;\\r\\n    font-weight: bold;\\r\\n    margin: 0px;\\r\\n  \\r\\n  }\\r\\n  \\r\\n  \\r\\n  .scrolldiv {\\r\\n    max-height: 75px;\\r\\n    padding-right: 30px;\\r\\n    overflow: auto;\\r\\n    scrollbar-3dlight-color: #FFFFFF;\\r\\n    scrollbar-arrow-color: #000000;\\r\\n    scrollbar-base-color: #FF9999;\\r\\n    scrollbar-darkshadow-color: #000000;\\r\\n    scrollbar-face-color: #000000;\\r\\n    scrollbar-highlight-color: #000000;\\r\\n    scrollbar-shadow-color: #0033CC;\\r\\n  }\\r\\n  \\r\\n  .multiboxspan {\\r\\n    font-size: 11px;\\r\\n    font-weight: bold;\\r\\n    position: relative;\\r\\n    float: left;\\r\\n    display: block;\\r\\n    margin: 2px;\\r\\n    border: 1px solid silver;\\r\\n    border-radius: 5px;\\r\\n    background-color: lavenderblush;\\r\\n  }\\r\\n  \\r\\n  .smallBoldLabel {\\r\\n    font-size: 11px;\\r\\n    font-weight: bold;\\r\\n    margin: 0px;\\r\\n    /* float: left; */\\r\\n    /* margin-left: 10px; */\\r\\n    color: #222;\\r\\n    /* font-family: arial; */\\r\\n  \\r\\n  }\\r\\n  \\r\\n  .table-container {\\r\\n    height: 87vh;\\r\\n  \\r\\n  }\\r\\n  \\r\\n  table {\\r\\n    display: flex;\\r\\n    flex-flow: column;\\r\\n    height: 95%;\\r\\n  \\r\\n  }\\r\\n  \\r\\n  table thead\\r\\n  table tfoot {\\r\\n    /* head takes the height it requires, \\r\\n      and it's not scaled when table is resized */\\r\\n    flex: 0 0 auto;\\r\\n    width: calc(100% - 0.9em);\\r\\n  \\r\\n  }\\r\\n  \\r\\n  table tbody {\\r\\n    /* body takes all the remaining available space */\\r\\n    flex: 1 1 auto;\\r\\n    display: block;\\r\\n    /* overflow-y: scroll; */\\r\\n  }\\r\\n  \\r\\n  table tbody tr {\\r\\n    width: 100.4%;\\r\\n  }\\r\\n  \\r\\n  table thead,\\r\\n  table tfoot,\\r\\n  table tbody tr {\\r\\n    display: table;\\r\\n    table-layout: fixed;\\r\\n  }\\r\\n  \\r\\n  .reportTabel tr:hover {\\r\\n    background-color: #e0e0e0;\\r\\n  }\\r\\n  \\r\\n  .reportTabel tr.active td {\\r\\n    background-color: #ABDCFB !important;\\r\\n    color: white;\\r\\n  }\\r\\n  \\r\\n  .reportTabel tr:nth-child(odd) {\\r\\n    background-color: #F2F2F2;\\r\\n  }\\r\\n  \\r\\n  .reportTabel tr:nth-child(even) {\\r\\n    background-color: #FFFFFF;\\r\\n  }\\r\\n  \\r\\n  /* New */\\r\\n  \\r\\n  legend {\\r\\n    font-size: 13px;\\r\\n    font-weight: bold;\\r\\n    color: #222;\\r\\n    width: auto;\\r\\n  }\\r\\n  \\r\\n  fieldset {\\r\\n    margin-bottom: 1%;\\r\\n  }\\r\\n\\r\\n  .table-first-header{\\r\\n    position: sticky;\\r\\n    top: 0;\\r\\n  }\\r\\n\\r\\n  .table-second-header{\\r\\n    position: sticky;\\r\\n    top: 20px;\\r\\n  }\\r\\n  \"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/Reports/reportStyle.css\n// module id = 1163\n// module chunks = 0","import { MdDialog } from \"@angular/material\";\r\nimport { SelectItem } from \"primeng/primeng\";\r\nimport { GroupParty } from \"./PLedger.service\";\r\nimport { Component, Input, Output, EventEmitter } from \"@angular/core\";\r\nimport { ActivatedRoute, Router } from \"@angular/router\";\r\nimport { FormGroup, FormBuilder, Validators } from \"@angular/forms\";\r\nimport { Subscription } from \"rxjs/Subscription\";\r\nimport { MasterRepo } from \"../../../../common/repositories/masterRepo.service\";\r\nimport {\r\n  AcListTree,\r\n  TAcList\r\n} from \"../../../../common/interfaces/Account.interface\";\r\nimport { AuthService } from \"../../../../common/services/permission\";\r\nimport { PLedgerservice } from \"./PLedger.service\";\r\nimport { TransactionService } from \"../../../../common/Transaction Components/transaction.service\";\r\nimport { PreventNavigationService } from \"../../../../common/services/navigation-perventor/navigation-perventor.service\";\r\nimport { AlertService } from \"../../../../common/services/alert/alert.service\";\r\nimport { SpinnerService } from \"../../../../common/services/spinner/spinner.service\";\r\nimport { subscribeOn } from \"rxjs/operator/subscribeOn\";\r\nimport { TrnMain } from \"../../../../common/interfaces\";\r\nimport { relativeTimeRounding } from \"moment\";\r\n\r\n@Component({\r\n  selector: \"PLedger\",\r\n  template: require('./PLedger.html'),\r\n  providers: [PLedgerservice, TransactionService],\r\n  styles: [require('../../../Style.css'), require('../../../../common/popupLists/pStyle.css')]\r\n})\r\nexport class PLedgerComponent {\r\n  @Output(\"onClose\") onClose = new EventEmitter();\r\n  ACID: string;\r\n  @Input() rootID: string;\r\n  @Input() PType: string;\r\n  @Input() mode: string;\r\n  @Input() grp: string;\r\n  @Output() SavePartyEmit = new EventEmitter();\r\n  @Input() fromTree: number;\r\n  \r\n  selectednode: any;\r\n  parentid: any;\r\n  majorparent: any;\r\n  majorParentAcList: any[] = [];\r\n  acParentList: any[] = [];\r\n  PARENTACNAME: string;\r\n  RootName: string;\r\n  acListtree: AcListTree = <AcListTree>{};\r\n  ledgerAcObj: TAcList = <TAcList>{};\r\n  ledgerAcList: TAcList[];\r\n  private returnUrl: string;\r\n  router: Router;\r\n  form: FormGroup;\r\n  viewMode = false;\r\n  private subcriptions: Array<Subscription> = [];\r\n  initialTextReadOnly = false;\r\n  ID: string = \"\";\r\n  modeTitle: string;\r\n  parentGroup: GroupParty;\r\n  acGroups: any[] = [];\r\n  actype: string = \"\";\r\n  disableActype: boolean = false;\r\n  lastParentID: string;\r\n  userProfile: any;\r\n  formObj: any = <any>{};\r\n  Title: string = \"\";\r\n  // PType: string;\r\n  isGroup: number;\r\n  PartyGrpList: any[] = [];\r\n  ChannelList: any[] = [];\r\n  GeoList: any[] = [];\r\n  RouteList: any[] = [];\r\n  BranchList: any[] = [];\r\n  editModel: any = <any>{}\r\n  geo: any;\r\n  CardName: any[] = [];\r\n  StateList: any[] = [];\r\n  DistrictList:any[]=[];\r\n  TrnMainObj: TrnMain = <TrnMain>{};\r\n  constructor(\r\n    private preventNavigationService: PreventNavigationService,\r\n    private alertService: AlertService,\r\n    private loadingService: SpinnerService,\r\n    protected MasterService: MasterRepo,\r\n    private PartyService: PLedgerservice,\r\n    router: Router,\r\n    private _activatedRoute: ActivatedRoute,\r\n    private _fb: FormBuilder,\r\n    public dialog: MdDialog,\r\n    private _authService: AuthService,\r\n    private _trnMainService: TransactionService\r\n  ) {\r\n    this.router = router;\r\n    this.TrnMainObj = this._trnMainService.TrnMainObj;\r\n    // this.service.getNewValues(selectL)\r\n    //     .subscribe(data => {\r\n    //         if (data.status == 'ok') {\r\n\r\n    //             this.ledgerAcObj.PARENT = data.result.parent.ACID;\r\n    //             this.PARENTACNAME = data.result.parent.ACNAME;\r\n    //             this.ledgerAcObj.PType = data.result.parent.PType;\r\n    //         }\r\n\r\n    //     }\r\n    //     , error => {\r\n    //         this.router.navigate([this.returnUrl]);\r\n    //         console.log(error);\r\n    //     }\r\n    //     );\r\n\r\n    \r\n    \r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.HideACNAME=false;\r\n    this.AfterView()\r\n  }\r\n  AfterView(){\r\n    //console.log(\"CheckPtype\", this.PType, this.isGroup);\r\n    // if (this.PType == 'C' && (this.isGroup == false || this.isGroup == 'false')) {\r\n    if (this.PType == \"C\" && this.isGroup == 0) {\r\n      \r\n      this.formObj.Name = \"Customer Name\";\r\n      this.formObj.PSType = \"Sales Type\";\r\n      this.formObj.PMode = \"Payment Mode\";\r\n      this.form.patchValue({\r\n        PType: \"C\",\r\n        TYPE: \"A\"\r\n      });\r\n    } else if (this.PType == \"C\" && this.isGroup == 1) {\r\n    \r\n      this.formObj.Name = \"Group Name\";\r\n      this.form.patchValue({ PType: \"C\", TYPE: \"G\" });\r\n    }\r\n    // else if (this.PType == 'V' && (this.isGroup == false || this.isGroup == 'false')) {\r\n    else if (this.PType == \"V\" && this.isGroup == 0) {\r\n      this.formObj.Name = \"Supplier Name\";\r\n      this.formObj.PSType = \"Purchase Type\";\r\n      this.formObj.PMode = \"Purchase Mode\";\r\n      this.form.patchValue({ PType: \"V\", TYPE: \"A\" });\r\n    } else if (this.PType == \"V\" && this.isGroup == 1) {\r\n      this.form.patchValue({ PType: \"V\", TYPE: \"G\" });\r\n    }\r\n\r\n    // document.getElementById('id') = 'General';\r\n    this.PartyService.getPartyGroupByPtype(this.PType).subscribe(res => {\r\n      if (res.status == \"ok\") {\r\n        this.PartyGrpList = res.result;\r\n      }\r\n    });\r\n    this.PartyService.getDIV().subscribe(res => {\r\n    \r\n      this.BranchList = res;\r\n    });\r\n    this.PartyService.getHierachy().subscribe(res => {\r\n      if (res.status == \"ok\") {\r\n        this.GeoList = res.result.GEO;\r\n        this.ChannelList = res.result.CHANNEL;\r\n        this.RouteList = res.result.Route;\r\n      }\r\n    });\r\n    this.MasterService.GETTRNTYPE().subscribe(res => {\r\n      if (res.status == 'ok') {\r\n        this.CardName = res.result;\r\n      }\r\n\r\n    })\r\n    this.MasterService.getState().subscribe(res => {\r\n      if (res.status == 'ok') {\r\n        this.StateList = res.result;\r\n      }\r\n    })\r\n    this.MasterService.getDistrict().subscribe(res => {\r\n      if (res.status == 'ok') {\r\n        this.DistrictList = res.result;\r\n      }\r\n    })\r\n    this.userProfile = this._authService.getUserProfile();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.form = this._fb.group({\r\n      PARENT: [\"\"],\r\n      TITLE: [\"\"],\r\n      ACNAME: [\"\", Validators.required],\r\n      SHORTNAME: [\"\"],\r\n      CUSTOMERID: [\"\"],\r\n      CATEGORY: [\"\"],\r\n      Currency: [\"\"],\r\n      PMODE: [\"\"],\r\n      CRLIMIT: [0],\r\n      CRPERIOD: [0],\r\n      PSTYPE: [\"\"],\r\n      DIV: [\"\"],\r\n      GSTTYPE: [\"\"],\r\n      MAILTYPE: [\"\"],\r\n      ISACTIVE: [1],\r\n      ADDRESS: [\"\"],\r\n      TEMPADDRESS: [\"\"],\r\n      CITY: [\"\"],\r\n      STATE: [\"\"],\r\n      AREA: [\"\"],\r\n      LANDMARK: [\"\"],\r\n      PHONE: [\"\"],\r\n      MOBILE: [\"\", Validators.required],\r\n      EMAIL: [\"\"],\r\n      POSTALCODE: [\"\"],\r\n      FAX: [\"\"],\r\n      VATNO: [\"\"],\r\n      ADHARNO: [\"\"],\r\n      GSTNO: [\"\"],\r\n      PRICELEVELCONFIG: [\"\"],\r\n      PRICELEVEL: [\"\"],\r\n      CTYPE: [\"\"],\r\n      ERPPLANTCODE: [\"\"],\r\n      ERPSTOCKLOCATIONCODE: [\"\"],\r\n      CBALANCE: [0],\r\n      PType: [\"\"],\r\n      MAPID: [\"\"],\r\n      ACCODE: [\"\"],\r\n      ACID: [\"\"],\r\n      TYPE: [\"\"],\r\n      Channel: [\"\"],\r\n      SO: [\"\"],\r\n      GEO: [\"\"],\r\n      ROUTE: [\"\"],\r\n      RouteDays: [\"\"],\r\n      DISTRICT:[\"\"],\r\n      CONTACTPERSON:[\"\"],\r\n      CONTACTMOBILE:[\"\"],\r\n      CONTACTEMAIL:[\"\"]\r\n    });\r\n    this.form.valueChanges.subscribe(data=>{\r\n      this.MasterService.PLedgerObj=data;\r\n    })\r\n\r\n    this.onFormChanges();\r\n    this.CrDisabled = 'enabled'\r\n\r\n    if (!!this._activatedRoute.snapshot.params[\"mode\"])\r\n      this.mode = this._activatedRoute.snapshot.params[\"mode\"];\r\n\r\n    if (!!this._activatedRoute.snapshot.params[\"isGroup\"])\r\n      this.isGroup = this._activatedRoute.snapshot.params[\"isGroup\"];\r\n\r\n    if (!!this._activatedRoute.snapshot.params[\"ACID\"])\r\n      this.ACID = this._activatedRoute.snapshot.params[\"ACID\"];\r\n\r\n    if (!!this._activatedRoute.snapshot.params[\"PType\"])\r\n      this.PType = this._activatedRoute.snapshot.params[\"PType\"];\r\n    if (!!this._activatedRoute.snapshot.params[\"Title\"])\r\n      this.Title = this._activatedRoute.snapshot.params[\"Title\"];\r\n\r\n    if (!!this._activatedRoute.snapshot.params[\"returnUrl\"])\r\n      this.returnUrl = this._activatedRoute.snapshot.params[\"returnUrl\"];\r\n\r\n    this.getGroups();\r\n\r\n    // this.MasterService.getAllAccount().subscribe(res => { this.ledgerAcList.push(<TAcList>res); });\r\n\r\n    if (this.mode == \"edit\") {\r\n      this.form.get(\"PARENT\").disable();\r\n      this.form.get(\"ACNAME\").disable();\r\n      this.form.get(\"SHORTNAME\").disable();\r\n      this.form.get(\"CUSTOMERID\").disable();\r\n      this.form.get(\"VATNO\").disable();\r\n      this.form.get(\"ACCODE\").disable();\r\n      this.form.get(\"CRLIMIT\").disable();\r\n\r\n      this.loadingService.show(\"Getting data, Please wait...\");\r\n      this.MasterService.getAllAccount(this.ACID).subscribe(\r\n        data => {\r\n          this.loadingService.hide();\r\n          this.editModel = data.result;\r\n          if(data.result2!=null || data.result2 !=undefined){\r\n            this.SOTableList .push(data.result2)\r\n          }\r\n           \r\n          this.setEditFromValue();\r\n        },\r\n        error => {\r\n          this.loadingService.hide();\r\n        }\r\n      );\r\n    } else {\r\n      if (this.Title == \"AddLedger\") {\r\n        this.modeTitle = \"Add Party Ledger\";\r\n      } else if (this.Title == \"AddGroup\") {\r\n        this.modeTitle = \"Add Party Group\";\r\n      }\r\n    }\r\n\r\n  }\r\n  HideACNAME=false;\r\nBindValue(value,isGroup=0){\r\n  this.PType=value;\r\n  this.isGroup=isGroup;\r\n  this.HideACNAME=true;\r\n  this.AfterView();\r\n  return\r\n  // this.HideACNAME=false;\r\n  // this.form.patchValue({\r\n  //   PType: '',\r\n  //   TYPE: '',\r\n  //   PARENT:''\r\n  // });\r\n  // this.isGroup=isGroup\r\n  // if (value == \"C\" && this.isGroup == 0) {\r\n  //   this.HideACNAME=true;\r\n  //   this.formObj.Name = \"Customer Name\";\r\n  //   this.formObj.PSType = \"Sales Type\";\r\n  //   this.formObj.PMode = \"Payment Mode\";\r\n  //   this.form.patchValue({\r\n  //     PType: \"C\",\r\n  //     TYPE: \"A\",\r\n  //     PARENT:'PA'\r\n  //   });\r\n  // } else if (value == \"C\" && this.isGroup == 1) {\r\n  //   this.formObj.Name = \"Group Name\";\r\n  //   this.form.patchValue({ PType: \"C\", TYPE: \"G\",PARENT:'PA' });\r\n  // }\r\n  // // else if (this.PType == 'V' && (this.isGroup == false || this.isGroup == 'false')) {\r\n  // if (value == \"V\" && this.isGroup == 0) {\r\n  //   //console.log(\"reached supllier\")\r\n  //   this.HideACNAME=true;\r\n  //   this.formObj.Name = \"Supplier Name\";\r\n  //   this.formObj.PSType = \"Purchase Type\";\r\n  //   this.formObj.PMode = \"Purchase Mode\";\r\n  //   this.form.patchValue({ PType: \"V\", TYPE: \"A\",PARENT:'PA' });\r\n  // } else if (this.PType == \"V\" && this.isGroup == 1) {\r\n  //   this.form.patchValue({ PType: \"V\", TYPE: \"G\",PARENT:'PA' });\r\n  // }\r\n}\r\n\r\n  setEditFromValue(data=null) {\r\n    if(data!=null && data !=undefined && data !=\"\"){\r\n      this.editModel=data\r\n    }\r\n    this.form.patchValue({\r\n      PARENT: this.editModel.PARENT,\r\n      TITLE: this.editModel.TITLE,\r\n      ACNAME: this.editModel.ACNAME,\r\n      SHORTNAME: this.editModel.shortname,\r\n      CUSTOMERID: this.editModel.customerID,\r\n      CATEGORY: this.editModel.CATEGORY,\r\n      Currency: this.editModel.Currency,\r\n      PMODE: this.editModel.PMODE,\r\n      CRLIMIT: this.editModel.CRLIMIT,\r\n      CRPERIOD: this.editModel.CRPERIOD,\r\n      PSTYPE: this.editModel.PSTYPE,\r\n      DIV: this.editModel.DIV,\r\n      GSTTYPE: this.editModel.GSTTYPE,\r\n      MAILTYPE: this.editModel.MAILTYPE,\r\n      ISACTIVE: this.editModel.ISACTIVE,\r\n      ADDRESS: this.editModel.ADDRESS,\r\n      TEMPADDRESS: this.editModel.TEMPADDRESS,\r\n      CITY: this.editModel.CITY,\r\n      STATE: this.editModel.STATE,\r\n      AREA: this.editModel.AREA,\r\n      LANDMARK: this.editModel.LANDMARK,\r\n      PHONE: this.editModel.PHONE,\r\n      MOBILE: this.editModel.MOBILE,\r\n      EMAIL: this.editModel.EMAIL,\r\n      POSTALCODE: this.editModel.POSTALCODE,\r\n      FAX: this.editModel.FAX,\r\n      VATNO: this.editModel.VATNO,\r\n      ADHARNO: this.editModel.ADHARNO,\r\n      GSTNO: this.editModel.GSTNO,\r\n      PRICELEVELCONFIG: this.editModel.PRICELEVELCONFIG,\r\n      PRICELEVEL: this.editModel.PRICELEVEL,\r\n      CTYPE: this.editModel.CTYPE,\r\n      ERPPLANTCODE: this.editModel.ERPPLANTCODE,\r\n      CBALANCE: this.editModel.CBALANCE,\r\n      PType: this.editModel.PType,\r\n      MAPID: this.editModel.MAPID,\r\n      ACCODE: this.editModel.ACCODE,\r\n      ACID: this.editModel.ACID,\r\n      TYPE: this.editModel.TYPE,\r\n      isAutoGSTApplicable : this.editModel.isAutoGSTApplicable,\r\n      isRCMApplicable : this.editModel.isRCMApplicable,\r\n      isReverseChargeApplicable : this.editModel.isReverseChargeApplicable\r\n\r\n    });\r\n    this.geo = this.editModel.GEO;\r\n  }\r\n\r\n  onFormChanges(): void {\r\n    this.form.valueChanges.subscribe(() => {\r\n      if (this.form.dirty)\r\n        this.preventNavigationService.preventNavigation(true);\r\n    });\r\n  }\r\n\r\n  majorgroupChange() {\r\n    this.filter(this.form.get(\"majorparent\").value);\r\n  }\r\n\r\n  filter(majorparent) {\r\n    this.MasterService.getpartyListTree().subscribe(data => {\r\n      var f = data.filter(x => x.ACID == majorparent)[0];\r\n      if (f != null) {\r\n        this.acParentList = f.children;\r\n      }\r\n    });\r\n  }\r\n  SumbitSave() {\r\n    let gsttype=this.form.get(\"GSTTYPE\").value;\r\n    if(gsttype==\"Regular\" || gsttype==\"Composite\")\r\n    {\r\n      if(this.form.get(\"GSTNO\").value==null || this.form.get(\"GSTNO\").value==\"\")\r\n      {\r\n        this.alertService.error(\"Please insert the GST NO.\");\r\n        return;\r\n      }\r\n    }\r\n    //console.log(\"gstsss\",gsttype);\r\n    if (this.PType == 'C') {\r\n      if (this.form.get(\"CUSTOMERID\").value == \"\" || this.form.get(\"CUSTOMERID\").value == null) { this.alertService.warning(\"Customer-ID is required!\"); return }\r\n    }\r\n    if (this.PType == 'V') {\r\n      if (this.form.get('ERPPLANTCODE').value == \"\" || this.form.get('ERPPLANTCODE').value == null) { this.alertService.warning(\"ERPPLANTCODE is required!\"); return }\r\n    }\r\n    if (this.form.value.MOBILE.length != 10) {\r\n      this.alertService.warning(\"Mobile number is invalid! Please enter atleast 10 digit number. \");\r\n      return\r\n    }\r\n\r\n    if (this.form.value.VATNO) {\r\n      // console.log({ billtotel: parseFloat(this.form.value.VATNO) });\r\n      var pno = parseFloat(this.form.value.VATNO);\r\n      // if (pno.toString().length != 9) {\r\n      //   this.alertService.error(\"PAN No is not correct\");\r\n      //   return;\r\n      // }\r\n    }\r\n    try {\r\n      let al = <TAcList>{};\r\n\r\n      this.form.value.MAPID = \"N\";\r\n\r\n      if (this.mode == \"edit\") {\r\n        al.ACID = this.ACID;\r\n      }\r\n      let saveModel = this.form.value;\r\n      if (this.PType == 'C') {\r\n        saveModel.PType = \"C\"\r\n      }\r\n      else {\r\n        saveModel.PType = \"V\"\r\n      }\r\n      saveModel.GEO = this.geo;\r\n      saveModel.PRICELEVEL = this.geo;\r\n      saveModel.TYPE = \"A\"\r\n     if(this.mode!=\"edit\"){\r\n      saveModel.PARENT = \"PA\";\r\n     }\r\n      saveModel.ACNAME = this.form.controls['ACNAME'].value;\r\n      saveModel.SHORTNAME = this.form.controls['SHORTNAME'].value;\r\n      saveModel.ACCODE = saveModel.CUSTOMERID = this.form.controls['CUSTOMERID'].value;\r\n      saveModel.VATNO = this.form.controls['VATNO'].value;\r\n      saveModel.LEVELS = 10;\r\n      // saveModel.ACCODE = this.form.controls['ACCODE'].value;\r\n      saveModel.CRLIMIT = this.form.controls['CRLIMIT'].value;\r\n\r\n      this.loadingService.show(\"Saving Data please wait...\");\r\n      let sub = this.MasterService.saveAccount(\r\n        this.mode,\r\n        saveModel,\r\n        this.SOTableList\r\n      ).subscribe(\r\n        data => {\r\n          this.loadingService.hide();\r\n          if (data.status == \"ok\") {\r\n            this.alertService.success(\"Data Saved Successfully\");\r\n            this.preventNavigationService.preventNavigation(false);\r\n            setTimeout(() => {\r\n              this.onClose.emit(true);\r\n              this.router.navigate([this.returnUrl]);\r\n            }, 1000);\r\n          } else {\r\n            //alert(data.result);\r\n            //the ConnectionString in the server is not initialized means the the token 's user is not int the list of database user so it could't make connectionstring. Re authorization is requierd\r\n            if (\r\n              data.result._body ==\r\n              \"The ConnectionString property has not been initialized.\"\r\n            ) {\r\n              this.router.navigate([\"/login\", this.router.url]);\r\n              return;\r\n            }\r\n            //Some other issues need to check\r\n            this.alertService.error(\r\n              \"Error in Saving Data:\" + data.result._body\r\n            );\r\n          }\r\n        },\r\n        error => {\r\n          this.loadingService.hide();\r\n          this.alertService.error(error);\r\n        }\r\n      );\r\n      this.subcriptions.push(sub);\r\n    } catch (e) {\r\n      this.alertService.error(e);\r\n    }\r\n  }\r\n\r\n  cancel() {\r\n    try {\r\n      this.router.navigate([this.returnUrl]);\r\n    } catch (ex) {\r\n      console.log(ex);\r\n      this.alertService.error(ex);\r\n    }\r\n  }\r\n\r\n  changePtype(value) {\r\n    this.form.get(\"Ptype\").patchValue(value);\r\n  }\r\n\r\n  public onGrpChange(event, i, selected) {\r\n    try {\r\n      if (selected) {\r\n        // this.actype = selected.ACTYPE\r\n        // this.changeACtype(selected.ACTYPE);\r\n        // this.disableActype == true;\r\n        //latest selected\r\n        this.parentGroup = selected;\r\n      }\r\n\r\n      //let newGroup: GroupAccounts = event.value;\r\n      console.log({\r\n        onGrpChangeEvent: event,\r\n        eventIndex: i,\r\n        selected: selected\r\n      });\r\n      let opt: SelectItem[] = [];\r\n      var ind = i;\r\n\r\n      if (event) {\r\n        if (this.acGroups.length > ind + 1) {\r\n          this.acGroups.splice(ind + 1, this.acGroups.length - 1);\r\n        }\r\n        // console.log({ GroupchageEvent: event, value: event.value.ACNAME });\r\n        this.lastParentID = event.value.ACID;\r\n        this.PartyService.getChildrenGroups(event.value.ACID)\r\n          .flatMap(data => data)\r\n          .subscribe(\r\n            data => {\r\n              // console.log({ children: data });\r\n              if (data.TYPE == \"G\")\r\n                opt.push({ label: data.ACNAME, value: data });\r\n            },\r\n            Error => console.log({ groupchangeError: Error }),\r\n            () => {\r\n              if (opt.length > 0) {\r\n                this.acGroups.push({\r\n                  group: event.value.ACNAME,\r\n                  value: event.value,\r\n                  options: opt\r\n                });\r\n              }\r\n\r\n              //this.groupListSubject.next(subjectData);\r\n              // console.log({ negroup2: { group: event.value.ACNAME, value: event.value, options: opt }, subjectData2: subjectData });\r\n            }\r\n          );\r\n      }\r\n    } catch (ex) {\r\n      console.log({ onGroupChange: ex });\r\n    }\r\n  }\r\n  getGroups() {\r\n    //console.log(\"Has SUB is false\");\r\n    this.actype = \"\";\r\n    this.disableActype = false;\r\n    this.acGroups = [];\r\n    this.getMainGroup();\r\n    if (!this.ACID) return;\r\n    console.log({ acid: this.ACID });\r\n    this.PartyService.getParentGroups(this.ACID)\r\n      .flatMap(data => data)\r\n      .subscribe(\r\n        data => {\r\n          try {\r\n            data.SELECTEDGROUPAC = data.CHILDLIST.find(\r\n              itm => itm.ACID == data.SELECTEDGROUP\r\n            );\r\n            this.parentGroup = data.SELECTEDGROUPAC;\r\n            console.log({\r\n              selectedGroup: data.SELECTEDGROUP,\r\n              selectedGroupAC: data.SELECTEDGROUPAC\r\n            });\r\n            // if (data.SELECTEDGROUPAC.HASSUBLEDGER == 1 && this.hasSubLedger == 0) {\r\n            //     this.hasSubLedger = 1;\r\n            //     this.changehassubEvent(true);\r\n            //     this.disableHassubledger = true;\r\n            //     //console.log(\"Disable AHS SUB\")\r\n            // }\r\n            let opt: SelectItem[] = [];\r\n            data.CHILDLIST.forEach(child => {\r\n              opt.push({ label: child.ACNAME, value: child });\r\n            });\r\n            this.acGroups.push({\r\n              group: data.ACNAME,\r\n              value: data,\r\n              options: opt\r\n            });\r\n          } catch (ex) {\r\n            console.log({ getParentGroups: ex });\r\n          }\r\n        },\r\n        error => {\r\n          console.log({ getgroupError: error });\r\n        },\r\n        () => {\r\n          if (this.acGroups.length > 1) {\r\n            let selectedGroup = this.acGroups[0].options.find(\r\n              itm => itm.value.ACID == this.acGroups[1].value.ACID\r\n            );\r\n            if (selectedGroup) {\r\n              this.acGroups[0].value.SELECTEDGROUPAC = selectedGroup.value;\r\n            }\r\n            // console.log({ selectedGroupValue: selectedGroup.value });\r\n            // if (selectedGroup.value.Ptype) {\r\n            //     alert(\"REACHED\")\r\n            //     this.actype = selectedGroup.value.Ptype\r\n            //     this.changePtype(selectedGroup.value.Ptype);\r\n            //     this.disableActype == true;\r\n            // }\r\n            // console.log({groupTofind:this.acGroups[1],options:this.acGroups[0].options,selected:this.acGroups[0].value.SELECTEDGROUPAC,selected2:this.acGroups[1].value.SELECTEDGROUPAC})\r\n          }\r\n        }\r\n      );\r\n\r\n    return;\r\n  }\r\n\r\n  getMainGroup() {\r\n    let opt: SelectItem[] = [];\r\n    this.PartyService.getTopGroups()\r\n      .flatMap(data => data)\r\n      .subscribe(data => {\r\n        opt.push({ label: data.ACNAME, value: data });\r\n      });\r\n    this.acGroups.push({\r\n      group: \"Main Group\",\r\n      value: { ACNAME: \"MAIN GROUP\", ACID: null, PARENT: null },\r\n      options: opt\r\n    });\r\n  }\r\n\r\n  clickedNotActive(value) {\r\n    if (this.form == null) {\r\n      return;\r\n    }\r\n    this.form.get(\"isNotActive\").patchValue(value);\r\n  }\r\n  NotActive() { }\r\n  partyList: any[] = [];\r\n  solist: any[] = [];\r\n  SOTableList: any[] = [];\r\n  RCODE: any;\r\n  RouteClick(value) {\r\n    this.RCODE = value;\r\n    // //console.log(\"RouteClick\", value)\r\n    this.PartyService.getSOFromRoute(value).subscribe(res => {\r\n      // //console.log(\"RES\", res)\r\n      // if (res.status == \"ok\") {\r\n      //   this.solist = res.result;\r\n      // }\r\n    });\r\n  }\r\n\r\n  SOChange(value) {\r\n    let soName = this.solist.filter(x => x.CODE == value)[0];\r\n\r\n    //console.log(\"Changed\", soName);\r\n\r\n    this.form.patchValue({\r\n      SO: soName ? soName.CODE : \"\"\r\n    });\r\n  }\r\n\r\n  RouteAdd() {\r\n    let a: any = <any>{};\r\n    var formValue = this.form.value;\r\n    var route = this.RouteList.filter(x => x.RouteCode == formValue.ROUTE)[0];\r\n    let soName = this.solist.filter(x => x.CODE == formValue.SO)[0];\r\n\r\n    if (soName == undefined || soName == null) {\r\n      this.alertService.info(\"All fields are required.\");\r\n      return;\r\n    }\r\n\r\n    a.SONAME = soName ? soName.NAME : \"\";\r\n    a.RouteName = route ? route.RouteName : \"\";\r\n    a.SOCODE = soName ? soName.CODE : \"\";\r\n    a.PCL = soName ? soName.PCL : \"\";\r\n    this.SOTableList.push(a);\r\n\r\n    this.form.patchValue({\r\n      ROUTE: \"\",\r\n      SO: \"\",\r\n      SONAME: \"\",\r\n      RouteDays: \"\"\r\n    });\r\n  }\r\n\r\n  deleteSOList(index: number) {\r\n    this.SOTableList.splice(index, 1);\r\n  }\r\n\r\n  CrDisabled: string;\r\n  Crvalue: string\r\n  ChangePMODE(value) {\r\n    this.Crvalue = value;\r\n    if (value == \"credit\" || value == \"cashandcredit\") {\r\n      this.CrDisabled = 'enable';\r\n    }\r\n    else {\r\n      this.CrDisabled = 'disabled';\r\n      this.form.patchValue({\r\n        CRLIMIT: 0,\r\n        CRPERIOD: 0\r\n      })\r\n    }\r\n  }\r\n  CreditDisabled() {\r\n    try {\r\n      if (this.Crvalue == \"credit\" || this.Crvalue == 'cashandcredit') {\r\n        this.CrDisabled = 'enable';\r\n        return \"white\";\r\n      } else {\r\n        this.CrDisabled = 'disabled';\r\n        return \"#EBEBE4\";\r\n\r\n      }\r\n    } catch (ex) {\r\n      console.log(ex);\r\n      this.alertService.error(ex);\r\n    }\r\n  }\r\n  changePriceLevel() {\r\n    alert(\"Changes on Pricelevel will affects the Category also!\")\r\n\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/pages/masters/components/PLedger/PLedger.component.ts","import { MasterRepo } from './../../../../common/repositories/masterRepo.service';\r\nimport { Subscriber } from 'rxjs/Subscriber';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { Http, Response, RequestOptions, Headers } from '@angular/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { ActivatedRoute, ActivatedRouteSnapshot } from '@angular/router';\r\nimport { AuthService } from '../../../../common/services/permission';\r\n// import { IDivision } from '../../../../common/interfaces';\r\n// import { AlternateUnit} from '../../../../common/interfaces/TrnMain';\r\nimport { AlternateUnit, IDivision, Item, Product, ItemRate, ProductType, KotCategory, Model, Brand, RateDiscount, TBarcode } from '../../../../common/interfaces';\r\nimport { Subject } from 'rxjs/subject'\r\nimport { GlobalState } from \"../../../../global.state\";\r\n\r\n@Injectable()\r\n\r\nexport class PLedgerservice {\r\n    constructor(private http: Http, private activatedRoute: ActivatedRoute, private authService: AuthService, private state: GlobalState, private masterService: MasterRepo) {\r\n    }\r\n    private get apiUrl(): string {\r\n        let url = this.state.getGlobalSetting(\"apiUrl\");\r\n        let apiUrl = \"\";\r\n\r\n        if (!!url && url.length > 0) { apiUrl = url[0] };\r\n        return apiUrl\r\n    }\r\n    getParentWisePartyList(ACID: string) {\r\n        return this.http.get(this.apiUrl + '/getParentWiseAccount/' + ACID, this.getRequestOption()).flatMap(response => response.json() || []);\r\n    }\r\n\r\n    getNewValues(mcode: string) {\r\n        let res = { status: \"error\", result: \"\" };\r\n        let returnSubject: Subject<any> = new Subject();\r\n        this.http.get(this.apiUrl + '/getNewValues/' + mcode, this.getRequestOption()).subscribe(response => {\r\n            let data = response.json();\r\n            if (data.status == 'ok') {\r\n                returnSubject.next(data);\r\n                returnSubject.unsubscribe();\r\n\r\n            }\r\n            else {\r\n                returnSubject.next(data)\r\n                returnSubject.unsubscribe();\r\n            }\r\n        }, error => {\r\n            res.status = 'error'; res.result = error;\r\n            returnSubject.next(res);\r\n            returnSubject.unsubscribe();\r\n        }\r\n        );\r\n        return returnSubject;\r\n    }\r\n\r\n    getPartyList(mcode: string) {\r\n        let res = { status: \"error\", result: \"\" };\r\n        let returnSubject: Subject<any> = new Subject();\r\n        this.http.get(this.apiUrl + '/getPartyList/' + mcode, this.getRequestOption()).subscribe(response => {\r\n            let data = response.json();\r\n            if (data.status == 'ok') {\r\n                returnSubject.next(data);\r\n                returnSubject.unsubscribe();\r\n\r\n            }\r\n            else {\r\n                returnSubject.next(data)\r\n                returnSubject.unsubscribe();\r\n            }\r\n        }, error => {\r\n            res.status = 'error'; res.result = error;\r\n            returnSubject.next(res);\r\n            returnSubject.unsubscribe();\r\n        }\r\n        );\r\n        return returnSubject;\r\n    }\r\n    getAllParty(ACID: string) {\r\n        let res = { status: \"error\", result: \"\" };\r\n        let returnSubject: Subject<any> = new Subject();\r\n        this.http.get(this.apiUrl + '/getAllData/' + ACID, this.getRequestOption()).subscribe(response => {\r\n            let data = response.json();\r\n            if (data.status == 'ok') {\r\n                returnSubject.next(data);\r\n                returnSubject.unsubscribe();\r\n\r\n            }\r\n            else {\r\n                returnSubject.next(data)\r\n                returnSubject.unsubscribe();\r\n            }\r\n        }, error => {\r\n            res.status = 'error'; res.result = error;\r\n            returnSubject.next(res);\r\n            returnSubject.unsubscribe();\r\n        }\r\n        );\r\n        return returnSubject;\r\n    }\r\n    savePartyList(mode: string, prodObj: Product, RGLIST: ItemRate[], AlternateUnits: AlternateUnit[], PBarCodeCollection: TBarcode[]) {\r\n        let res = { status: \"error\", result: \"\" }\r\n        let returnSubject: Subject<any> = new Subject();\r\n        let opt = this.getRequestOption();\r\n        let hd: Headers = new Headers({ 'Content-Type': 'application/json' });\r\n        let op: RequestOptions = new RequestOptions()\r\n        let bodyData = { mode: mode, data: { product: prodObj, rglist: RGLIST, alternateunits: AlternateUnits, pbarcodes: PBarCodeCollection } };\r\n        ////console.log(\"product json\");\r\n        var data = JSON.stringify(bodyData, undefined, 2);\r\n        //console.log(data);\r\n        this.http.post(this.apiUrl + \"/savePartyList\", bodyData, this.getRequestOption())\r\n            .subscribe(data => {\r\n                let retData = data.json();\r\n                //console.log(retData);\r\n                if (retData.status == \"ok\") {\r\n                    res.status = \"ok\";\r\n                    res.result = retData.result\r\n                    returnSubject.next(res);\r\n                    returnSubject.unsubscribe();\r\n                }\r\n                else {\r\n                    res.status = \"error1\"; res.result = retData.result;\r\n                    //console.log(res);\r\n                    returnSubject.next(res);\r\n                    returnSubject.unsubscribe();\r\n                }\r\n            },\r\n            error => {\r\n                res.status = \"error2\", res.result = error;\r\n                //console.log(res);\r\n                returnSubject.next(res);\r\n                returnSubject.unsubscribe();\r\n            }\r\n            );\r\n        return returnSubject;\r\n\r\n    }\r\n    private getRequestOption() {\r\n        let headers: Headers = new Headers({ 'Content-type': 'application/json', 'Authorization': this.authService.getAuth().token })\r\n        //console.log({ headers: headers });\r\n        return new RequestOptions({ headers: headers });\r\n    }\r\n\r\n    public getParentGroups(acid: string) {\r\n        //console.log({ acid: acid })\r\n        return new Observable((observer: Subscriber<GroupParty[]>) => {\r\n            this.http.get(this.masterService.apiUrl + '/getParents?acid=' + acid, this.masterService.getRequestOption())\r\n                .map(data => {\r\n                    //console.log({ parentGrop: data })\r\n                    return data.json()\r\n                })\r\n                .subscribe(res => {\r\n                    if (res.status == 'ok') {\r\n                        observer.next(res.result);\r\n                    }\r\n                }, error => {\r\n                    this.masterService.resolveError(error, 'getParents');\r\n                    observer.complete();\r\n                },\r\n                () => {\r\n                    observer.complete();\r\n                }\r\n                )\r\n        })\r\n\r\n\r\n    }\r\n\r\n    public getChildrenGroups(acid: string) {\r\n        //console.log({ getChildrenAcid: acid, url: this.masterService.apiUrl + '/getChildren?' + acid });\r\n        return new Observable((observer: Subscriber<GroupParty[]>) => {\r\n            this.http.get(this.masterService.apiUrl + '/getChildren?acid=' + acid, this.masterService.getRequestOption())\r\n                .map(data => data.json())\r\n                .subscribe(res => {\r\n                    //console.log({ getChildrenResult: res });\r\n                    observer.next(res.result);\r\n                }, error => {\r\n                    this.masterService.resolveError(error, 'getChildren');\r\n                    observer.complete();\r\n                },\r\n                () => {\r\n                    observer.complete();\r\n                }\r\n                )\r\n        })\r\n    }\r\n\r\n    public getTopGroups() {\r\n        return new Observable((observer: Subscriber<GroupParty[]>) => {\r\n            this.http.get(this.masterService.apiUrl + '/getTopPartyGroups', this.masterService.getRequestOption())\r\n                .map(data => data.json())\r\n                .subscribe(res => {\r\n                    observer.next(<GroupParty[]>res.result);\r\n                }, error => {\r\n                    this.masterService.resolveError(error, 'getTopGroups');\r\n                    observer.complete();\r\n                },\r\n                () => {\r\n                    observer.complete();\r\n                }\r\n                )\r\n        })\r\n    }\r\n\r\n    getPartyGroupByPtype(pType: string) {\r\n        let res = { status: \"error\", result: \"\" };\r\n        let returnSubject: Subject<any> = new Subject();\r\n        this.http.get(this.apiUrl + '/getPartyGroup/'+pType, this.getRequestOption()).subscribe(response => {\r\n            let data = response.json();\r\n            if (data.status == 'ok') {\r\n                returnSubject.next(data);\r\n                returnSubject.unsubscribe();\r\n\r\n            }\r\n            else {\r\n                returnSubject.next(data)\r\n                returnSubject.unsubscribe();\r\n            }\r\n        }, error => {\r\n            res.status = 'error'; res.result = error;\r\n            returnSubject.next(res);\r\n            returnSubject.unsubscribe();\r\n        }\r\n        );\r\n        return returnSubject;\r\n    }\r\n    getDIV() {\r\n        let res = { status: \"error\", result: \"\" };\r\n        let returnSubject: Subject<any> = new Subject();\r\n        this.http.get(this.apiUrl + '/getDIV', this.getRequestOption()).subscribe(response => {\r\n            let data = response.json();\r\n            if (data.status == 'ok') {\r\n                returnSubject.next(data);\r\n                returnSubject.unsubscribe();\r\n\r\n            }\r\n            else {\r\n                returnSubject.next(data)\r\n                returnSubject.unsubscribe();\r\n            }\r\n        }, error => {\r\n            res.status = 'error'; res.result = error;\r\n            returnSubject.next(res);\r\n            returnSubject.unsubscribe();\r\n        }\r\n        );\r\n        return returnSubject;\r\n    }\r\n    getPartyItemByPtype(pType: string) {\r\n        let res = { status: \"error\", result: \"\" };\r\n        let returnSubject: Subject<any> = new Subject();\r\n        this.http.get(this.apiUrl + '/getPartyItem/'+pType, this.getRequestOption()).subscribe(response => {\r\n            let data = response.json();\r\n            if (data.status == 'ok') {\r\n                returnSubject.next(data);\r\n                returnSubject.unsubscribe();\r\n\r\n            }\r\n            else {\r\n                returnSubject.next(data)\r\n                returnSubject.unsubscribe();\r\n            }\r\n        }, error => {\r\n            res.status = 'error'; res.result = error;\r\n            returnSubject.next(res);\r\n            returnSubject.unsubscribe();\r\n        }\r\n        );\r\n        return returnSubject;\r\n    }\r\n    getAccountLedgerItem(prefix:string ='') {\r\n        let res = { status: \"error\", result: \"\" };\r\n        let returnSubject: Subject<any> = new Subject();\r\n        this.http.get(this.apiUrl + '/getAccountItem/'+prefix, this.getRequestOption()).subscribe(response => {\r\n            let data = response.json();\r\n            if (data.status == 'ok') {\r\n                returnSubject.next(data);\r\n                returnSubject.unsubscribe();\r\n\r\n            }\r\n            else {\r\n                returnSubject.next(data)\r\n                returnSubject.unsubscribe();\r\n            }\r\n        }, error => {\r\n            res.status = 'error'; res.result = error;\r\n            returnSubject.next(res);\r\n            returnSubject.unsubscribe();\r\n        }\r\n        );\r\n        return returnSubject;\r\n    }\r\n    getAllAccount() {\r\n        let res = { status: \"error\", result: \"\" };\r\n        let returnSubject: Subject<any> = new Subject();\r\n        this.http.get(this.apiUrl + '/getAllAccountItem/', this.getRequestOption()).subscribe(response => {\r\n            let data = response.json();\r\n            if (data.status == 'ok') {\r\n                returnSubject.next(data);\r\n                returnSubject.unsubscribe();\r\n\r\n            }\r\n            else {\r\n                returnSubject.next(data)\r\n                returnSubject.unsubscribe();\r\n            }\r\n        }, error => {\r\n            res.status = 'error'; res.result = error;\r\n            returnSubject.next(res);\r\n            returnSubject.unsubscribe();\r\n        }\r\n        );\r\n        return returnSubject;\r\n    }\r\n    getAccountLedgerGroup() {\r\n        let res = { status: \"error\", result: \"\" };\r\n        let returnSubject: Subject<any> = new Subject();\r\n        this.http.get(this.apiUrl + '/getAccountGroup', this.getRequestOption()).subscribe(response => {\r\n            let data = response.json();\r\n            if (data.status == 'ok') {\r\n                returnSubject.next(data);\r\n                returnSubject.unsubscribe();\r\n\r\n            }\r\n            else {\r\n                returnSubject.next(data)\r\n                returnSubject.unsubscribe();\r\n            }\r\n        }, error => {\r\n            res.status = 'error'; res.result = error;\r\n            returnSubject.next(res);\r\n            returnSubject.unsubscribe();\r\n        }\r\n        );\r\n        return returnSubject;\r\n    }\r\n    getHierachy() {\r\n        let res = { status: \"error\", result: \"\" };\r\n        let returnSubject: Subject<any> = new Subject();\r\n        this.http.get(this.apiUrl + '/getAllHierachy', this.getRequestOption()).subscribe(response => {\r\n            let data = response.json();\r\n            if (data.status == 'ok') {\r\n                returnSubject.next(data);\r\n                returnSubject.unsubscribe();\r\n\r\n            }\r\n            else {\r\n                returnSubject.next(data)\r\n                returnSubject.unsubscribe();\r\n            }\r\n        }, error => {\r\n            res.status = 'error'; res.result = error;\r\n            returnSubject.next(res);\r\n            returnSubject.unsubscribe();\r\n        }\r\n        );\r\n        return returnSubject;\r\n    }\r\n    getSOFromRoute(rcode: string) {\r\n        let res = { status: \"error\", result: \"\" };\r\n        let returnSubject: Subject<any> = new Subject();\r\n        this.http.get(this.apiUrl + '/getSOfromRCode/'+rcode, this.getRequestOption()).subscribe(response => {\r\n            let data = response.json();\r\n            if (data.status == 'ok') {\r\n                returnSubject.next(data);\r\n                returnSubject.unsubscribe();\r\n\r\n            }\r\n            else {\r\n                returnSubject.next(data)\r\n                returnSubject.unsubscribe();\r\n            }\r\n        }, error => {\r\n            res.status = 'error'; res.result = error;\r\n            returnSubject.next(res);\r\n            returnSubject.unsubscribe();\r\n        }\r\n        );\r\n        return returnSubject;\r\n    }\r\n    getAllMainGroup() {\r\n        let res = { status: \"error\", result: \"\" };\r\n        let returnSubject: Subject<any> = new Subject();\r\n        this.http.get(this.apiUrl + '/AllPrimaryGroup/', this.getRequestOption()).subscribe(response => {\r\n            let data = response.json();\r\n            if (data.status == 'ok') {\r\n                returnSubject.next(data);\r\n                returnSubject.unsubscribe();\r\n\r\n            }\r\n            else {\r\n                returnSubject.next(data)\r\n                returnSubject.unsubscribe();\r\n            }\r\n        }, error => {\r\n            res.status = 'error'; res.result = error;\r\n            returnSubject.next(res);\r\n            returnSubject.unsubscribe();\r\n        }\r\n        );\r\n        return returnSubject;\r\n    }\r\n    getAllAccountGroup() {\r\n        let res = { status: \"error\", result: \"\" };\r\n        let returnSubject: Subject<any> = new Subject();\r\n        this.http.get(this.apiUrl + '/AllAccountGroup/', this.getRequestOption()).subscribe(response => {\r\n            let data = response.json();\r\n            if (data.status == 'ok') {\r\n                returnSubject.next(data);\r\n                returnSubject.unsubscribe();\r\n\r\n            }\r\n            else {\r\n                returnSubject.next(data)\r\n                returnSubject.unsubscribe();\r\n            }\r\n        }, error => {\r\n            res.status = 'error'; res.result = error;\r\n            returnSubject.next(res);\r\n            returnSubject.unsubscribe();\r\n        }\r\n        );\r\n        return returnSubject;\r\n    }\r\n}\r\n\r\nexport interface GroupParty {\r\n    ACID: string;\r\n    ACNAME: string;\r\n    PARENT: string;\r\n    TYPE: string;\r\n    PType: string;\r\n    MAPID: string;\r\n    CHILDLIST: any[];\r\n    SELECTEDGROUP: any;\r\n    LIST: Observable<any[]>;\r\n    SELECTEDGROUPAC: GroupParty;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/pages/masters/components/PLedger/PLedger.service.ts","import { Subscriber } from 'rxjs/Subscriber';\r\nimport { Http, Response, RequestOptions, Headers } from '@angular/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { ActivatedRoute, ActivatedRouteSnapshot } from '@angular/router';\r\nimport { AuthService } from '../../../../common/services/permission';\r\nimport { IDivision } from '../../../../common/interfaces';\r\nimport { AlternateUnit} from '../../../../common/interfaces/TrnMain';\r\nimport { Item,Product ,ItemRate,ProductType,KotCategory,Model,Brand,RateDiscount,TBarcode} from '../../../../common/interfaces';\r\nimport { Subject } from 'rxjs/subject'\r\nimport { GlobalState } from \"../../../../global.state\";\r\nimport { MasterRepo } from \"../../../../common/repositories/masterRepo.service\";\r\nimport { Observable } from \"rxjs/Observable\";\r\n\r\n@Injectable()\r\n\r\nexport class TreeViewAcService {\r\n    constructor(private http: Http, private activatedRoute: ActivatedRoute, private authService: AuthService,private state:GlobalState,private masterService:MasterRepo) {\r\n    }\r\n     private get apiUrl():string{\r\n        let url=this.state.getGlobalSetting(\"apiUrl\");\r\n        let apiUrl =\"\";\r\n        \r\n        if(!!url && url.length>0){apiUrl=url[0]};\r\n        return apiUrl\r\n    }\r\n    public selectAcdivisionList : any[] = [];\r\n    public selectAcdivisionObj : any=<any>{};\r\n    getParentWiseAccountList(ACID:string) {\r\n        this.selectAcdivisionList = [];\r\n        this.selectAcdivisionObj = {};\r\n    //   return this.http.get(this.apiUrl + '/getParentWiseAccount/'+ACID, this.getRequestOption()).flatMap(response => response.json() || []);\r\n      let res = { status: \"error\", result: \"\" };\r\n      let returnSubject: Subject<any> = new Subject();\r\n      this.http.get(this.apiUrl + '/getParentWiseAccount/' + ACID, this.getRequestOption()).subscribe(response => {\r\n          let data = response.json();\r\n          //console.log(\"CheckValue^^\",data);\r\n          if (data.status == 'ok') {\r\n              this.selectAcdivisionList = data.result2;\r\n              this.selectAcdivisionObj = data.result;\r\n              returnSubject.next(data);\r\n              returnSubject.unsubscribe();\r\n\r\n          }\r\n          else {\r\n              returnSubject.next(data)\r\n              returnSubject.unsubscribe();\r\n          }\r\n      }, error => {\r\n          res.status = 'error'; res.result = error;\r\n          returnSubject.next(res);\r\n          returnSubject.unsubscribe();\r\n      }\r\n      );\r\n      return returnSubject;\r\n    }\r\n    getAccDivisionMapping(ACID:string) {\r\n        let res = { status: \"error\", result: \"\" };\r\n        let returnSubject: Subject<any> = new Subject();\r\n        this.http.get(this.apiUrl + '/getParentWiseAccount/' + ACID, this.getRequestOption()).subscribe(response => {\r\n            let data = response.json();\r\n            \r\n            if (data.status == 'ok') {\r\n                \r\n                returnSubject.next(data);\r\n                returnSubject.unsubscribe();\r\n\r\n            }\r\n            else {\r\n                returnSubject.next(data)\r\n                returnSubject.unsubscribe();\r\n            }\r\n        }, error => {\r\n            res.status = 'error'; res.result = error;\r\n            returnSubject.next(res);\r\n            returnSubject.unsubscribe();\r\n        }\r\n        );\r\n        return returnSubject;\r\n    }\r\n\r\n\r\n    getAccountAutomationGSTRate(ACID:string,parent:string) {\r\n        return this.http.get(this.apiUrl + `/getAccountAutomationGSTRate?ACID=${ACID}&PARENT=${parent}`, this.getRequestOption()).map(response => response.json() || []);\r\n      }\r\n\r\n    getNewValues(mcode: string) {\r\n        let res = { status: \"error\", result: \"\" };\r\n        let returnSubject: Subject<any> = new Subject();\r\n        this.http.get(this.apiUrl + '/getNewValues/' + mcode, this.getRequestOption()).subscribe(response => {\r\n            let data = response.json();\r\n            if (data.status == 'ok') {\r\n                returnSubject.next(data);\r\n                returnSubject.unsubscribe();\r\n\r\n            }\r\n            else {\r\n                returnSubject.next(data)\r\n                returnSubject.unsubscribe();\r\n            }\r\n        }, error => {\r\n            res.status = 'error'; res.result = error;\r\n            returnSubject.next(res);\r\n            returnSubject.unsubscribe();\r\n        }\r\n        );\r\n        return returnSubject;\r\n    }\r\n// getAccount(ACID:string){\r\n//          let res={status:\"error\",result:\"\"};\r\n//         let returnSubject:Subject<any>=new Subject();\r\n//        this.http.get(this.apiUrl + '/getAllData/'+ACID, this.getRequestOption()).subscribe(response=>{\r\n//                 let data = response.json();\r\n//                 if(data.status == 'ok'){\r\n//                     returnSubject.next(data);\r\n//                     returnSubject.unsubscribe();\r\n\r\n//                 }\r\n//                 else{\r\n//                     returnSubject.next(data)\r\n//                     returnSubject.unsubscribe();\r\n//                 }\r\n//             },error =>{\r\n//                 res.status='error';res.result=error;\r\n//                 returnSubject.next(res);\r\n//                 returnSubject.unsubscribe();\r\n//             }\r\n//             );\r\n//             return returnSubject;\r\n//     }\r\n    getPartyList(mcode:string){\r\n         let res={status:\"error\",result:\"\"};\r\n        let returnSubject:Subject<any>=new Subject();\r\n       this.http.get(this.apiUrl + '/getPartyList/'+mcode, this.getRequestOption()).subscribe(response=>{\r\n                let data = response.json();\r\n                if(data.status == 'ok'){\r\n                    returnSubject.next(data);\r\n                    returnSubject.unsubscribe();\r\n\r\n                }\r\n                else{\r\n                    returnSubject.next(data)\r\n                    returnSubject.unsubscribe();\r\n                }\r\n            },error =>{\r\n                res.status='error';res.result=error;\r\n                returnSubject.next(res);\r\n                returnSubject.unsubscribe();\r\n            }\r\n            );\r\n            return returnSubject;\r\n    }\r\n    savePartyList(mode:string,prodObj:Product,RGLIST:ItemRate[],AlternateUnits:AlternateUnit[],PBarCodeCollection:TBarcode[]){\r\n        let res = { status: \"error\", result: \"\" }\r\n        let returnSubject:Subject<any> =new Subject();\r\n        let opt=this.getRequestOption();\r\n        let hd:Headers = new Headers({'Content-Type':'application/json'});\r\n        let op:RequestOptions = new RequestOptions()\r\n        let bodyData ={mode:mode,data:{product:prodObj,rglist:RGLIST,alternateunits:AlternateUnits,pbarcodes:PBarCodeCollection}};\r\n       ////console.log(\"product json\");\r\n      var  data = JSON.stringify(bodyData, undefined, 2);\r\n         //console.log(data);\r\n        this.http.post(this.apiUrl + \"/savePartyList\",bodyData,this.getRequestOption())\r\n            .subscribe(data => {\r\n                let retData = data.json();\r\n                //console.log(retData);\r\n                if (retData.status == \"ok\") {\r\n                    res.status = \"ok\";\r\n                    res.result = retData.result\r\n                    returnSubject.next( res);\r\n                    returnSubject.unsubscribe();\r\n                }\r\n                else {\r\n                    res.status = \"error1\"; res.result = retData.result;\r\n                    //console.log(res);\r\n                    returnSubject.next( res);\r\n                    returnSubject.unsubscribe();\r\n                }\r\n            },\r\n            error => {\r\n                res.status = \"error2\", res.result = error;\r\n                //console.log(res);\r\n                returnSubject.next(res);\r\n                returnSubject.unsubscribe();\r\n            }\r\n            );\r\n            return returnSubject;\r\n\r\n    }\r\n    private getRequestOption() {\r\n        let headers: Headers = new Headers({ 'Content-type': 'application/json', 'Authorization': this.authService.getAuth().token })\r\n        //console.log({ headers: headers });\r\n        return new RequestOptions({ headers: headers });\r\n    }\r\n   \r\n    public getParentGroups(acid:string){\r\n        //console.log({acid:acid})\r\n        return new Observable((observer:Subscriber<GroupAccounts[]>)=>{\r\n            this.http.get(this.masterService.apiUrl + '/getParents?acid=' + acid,this.masterService.getRequestOption())\r\n            .map(data=>{\r\n                //console.log({parentGrop:data})\r\n                return data.json()\r\n            })\r\n            .subscribe(res=>{\r\n                if(res.status =='ok')\r\n               {\r\n                    observer.next(res.result);\r\n               }\r\n            },error=> {\r\n                this.masterService.resolveError(error,'getParents');\r\n                observer.complete();\r\n            },\r\n            ()=>{\r\n                observer.complete();\r\n            }\r\n            )\r\n        }) \r\n            \r\n\r\n    }\r\n\r\n    public getChildrenGroups(acid:string){\r\n        //console.log({getChildrenAcid:acid,url:this.masterService.apiUrl + '/getChildren?' + acid});\r\n        return new Observable((observer:Subscriber<GroupAccounts[]>)=>{\r\n            this.http.get(this.masterService.apiUrl + '/getChildren?acid=' + acid,this.masterService.getRequestOption())\r\n            .map(data=>data.json())\r\n            .subscribe(res=>{\r\n                //console.log({getChildrenResult:res});\r\n               observer.next(res.result);\r\n            },error=> {\r\n                this.masterService.resolveError(error,'getChildren');\r\n                observer.complete();\r\n            },\r\n            ()=>{\r\n                observer.complete();\r\n            }\r\n            )\r\n        }) \r\n    }\r\n\r\n    public getTopGroups(){\r\n        return new Observable((observer:Subscriber<GroupAccounts[]>)=>{\r\n            this.http.get(this.masterService.apiUrl + '/getTopGroups',this.masterService.getRequestOption())\r\n            .map(data=>data.json())\r\n            .subscribe(res=>{\r\n               observer.next(<GroupAccounts[]>res.result);\r\n            },error=> {\r\n                this.masterService.resolveError(error,'getTopGroups');\r\n                observer.complete();\r\n            },\r\n            ()=>{\r\n                observer.complete();\r\n            }\r\n            )\r\n        }) \r\n    }\r\n}\r\n\r\nexport interface GroupAccounts{\r\n      ACID :string;\r\n      ACNAME:string;\r\n      PARENT :string;\r\n      TYPE :string;\r\n      ACTYPE :string;\r\n      MAPID :string;\r\n      MCAT :string;\r\n      HASSUBLEDGER :number;\r\n      CHILDLIST :any[];\r\n      CACID:string;\r\n      SELECTEDGROUP:any;\r\n      LIST:Observable<any[]>;\r\n      SELECTEDGROUPAC:GroupAccounts;\r\n}\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/pages/masters/components/account-ledger/accountLedger.service.ts","module.exports = \"<style>\\r\\n  label {\\r\\n    width: 150px;\\r\\n    font-size: 15px;\\r\\n    color: #403c3c;\\r\\n  }\\r\\n\\r\\n  input {\\r\\n    height: 30px;\\r\\n  }\\r\\n</style>\\r\\n<!-- begin form here -->\\r\\n<form [formGroup]=\\\"form\\\">\\r\\n  <div class=\\\"sticky-top\\\">\\r\\n    <div class=\\\"row clearfix\\\" style=\\\" padding: 0px 20px;\\\">\\r\\n      <div class=\\\"col-md-6\\\">\\r\\n        <h3 class=\\\"page-title\\\">{{ Title }}</h3>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-6\\\" style=\\\"float: right;\\\">\\r\\n        <div class=\\\"col-md-6\\\" style=\\\"display: contents;\\\">\\r\\n          <button style=\\\"float:right\\\" type=\\\"button\\\" (click)=\\\"cancel()\\\" title=\\\"Cancel\\\" class=\\\"btn btn-info\\\">\\r\\n            Back\\r\\n          </button>\\r\\n        </div>\\r\\n        <button style=\\\"float:right;margin-right:10px\\\" type=\\\"button\\\" (click)=\\\"SumbitSave()\\\" title=\\\"onSave\\\"\\r\\n          class=\\\"btn btn-info\\\" [disabled]=\\\"!this.parentGroup\\\" *ngIf=\\\"grp == 'G'\\\">\\r\\n          Save\\r\\n        </button>\\r\\n        <button style=\\\"float:right;margin-right:10px\\\" type=\\\"button\\\" [disabled]=\\\"!form.valid\\\"  (click)=\\\"SumbitSave()\\\" title=\\\"onSave\\\"\\r\\n          class=\\\"btn btn-info\\\">\\r\\n          Save\\r\\n        </button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"main-container\\\" style=\\\"padding-top : 10px; margin-bottom: 0px\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-12\\\">\\r\\n        <div class=\\\"tabbable\\\" id=\\\"warehouse-tabs\\\">\\r\\n          <ul class=\\\"nav nav-tabs\\\">\\r\\n            <li class=\\\"nav-item\\\">\\r\\n              <a class=\\\"nav-link active\\\" href=\\\"#general-info4\\\" data-toggle=\\\"tab\\\">General Info</a>\\r\\n            </li>\\r\\n            <li class=\\\"nav-item\\\">\\r\\n              <a class=\\\"nav-link\\\" href=\\\"#contact-details\\\" data-toggle=\\\"tab\\\">Contact Details</a>\\r\\n            </li>\\r\\n            <li class=\\\"nav-item\\\">\\r\\n              <a class=\\\"nav-link\\\" href=\\\"#gst\\\" data-toggle=\\\"tab\\\">GST</a>\\r\\n            </li>\\r\\n            <li class=\\\"nav-item\\\">\\r\\n              <a class=\\\"nav-link\\\" href=\\\"#other\\\" data-toggle=\\\"tab\\\">Other</a>\\r\\n            </li>\\r\\n            <!-- <li class=\\\"nav-item\\\">\\r\\n              <a class=\\\"nav-link\\\" href=\\\"#route\\\" data-toggle=\\\"tab\\\">Route</a>\\r\\n            </li> -->\\r\\n          </ul>\\r\\n          <div class=\\\"tab-content\\\">\\r\\n            <div class=\\\"tab-pane active\\\" id=\\\"general-info4\\\">\\r\\n              <!-- General Info -->\\r\\n              <div class=\\\"form-group row\\\">\\r\\n                <div class=\\\"col-sm-12\\\">\\r\\n                  \\r\\n                  <div *ngIf='HideACNAME==false' class=\\\"form-group row col-sm-6\\\">\\r\\n                    <label class=\\\"col-sm-2 form-control-label\\\">{{ formObj.Name }}<a style=\\\"color: red\\\">*</a>:</label>\\r\\n                    <div class=\\\"col-sm-6\\\">\\r\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"ACNAME\\\" placeholder=\\\"Name\\\" />\\r\\n                      <div *ngIf=\\\"\\r\\n                          !form.controls['ACNAME'].valid &&\\r\\n                          form.controls['ACNAME']?.touched\\r\\n                        \\\" class=\\\"text-danger\\\">\\r\\n                        <span *ngIf=\\\"form.get('ACNAME').hasError('required')\\\">\\r\\n                          Name is required.\\r\\n                        </span>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <div *ngIf=\\\"isGroup == 0\\\">\\r\\n                    <div *ngIf=\\\"PType == 'V'\\\" class=\\\"form-group row col-sm-6\\\">\\r\\n                      <label class=\\\"col-sm-2 form-control-label\\\">Precise Name:</label>\\r\\n                      <div class=\\\"col-sm-6\\\">\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"SHORTNAME\\\" placeholder=\\\"Short Name\\\" />\\r\\n                      </div>\\r\\n                    </div>\\r\\n                    <div *ngIf=\\\"PType == 'C' && fromTree != 1 \\\" class=\\\"form-group row col-sm-6\\\">\\r\\n                      <label class=\\\"col-sm-2 form-control-label\\\">Customer ID<a style=\\\"color: red\\\">*</a> :</label>\\r\\n                      <div class=\\\"col-sm-6\\\">\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"CUSTOMERID\\\" placeholder=\\\"SAP-CODE\\\" />\\r\\n                      </div>\\r\\n                    </div>\\r\\n                    <div *ngIf=\\\"PType == 'C' && fromTree != 1 \\\" class=\\\"form-group row col-sm-6\\\">\\r\\n                      <label class=\\\"col-sm-2 form-control-label\\\">Category:</label>\\r\\n                      <div class=\\\"col-sm-6\\\">\\r\\n                        <select class=\\\"form-control\\\" [(ngModel)]=\\\"geo\\\" [ngModelOptions]=\\\"{standalone:true}\\\"\\r\\n                          style=\\\"height:30px;padding-bottom: 0px;\\\">\\r\\n                          <option>None</option>\\r\\n                          <option *ngFor=\\\"let i of GeoList\\\" value=\\\"{{i.OrgTypeCode}}\\\">{{\\r\\n                            i.OrgTypeName\\r\\n                          }}</option>\\r\\n                        </select>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                    <div *ngIf=\\\"PType == 'V'\\\" class=\\\"form-group row col-sm-6\\\">\\r\\n                      <label class=\\\"col-sm-2 form-control-label\\\">Currency :</label>\\r\\n                      <div class=\\\"col-sm-6\\\">\\r\\n                        <select class=\\\"form-control\\\" formControlName=\\\"Currency\\\"\\r\\n                          style=\\\"height:30px;padding-bottom: 0px;\\\">\\r\\n                          <option value=\\\"INDIAN RUPEE\\\">INDIAN RUPEE</option>\\r\\n                          <option value=\\\"USD\\\">USD</option>\\r\\n                        </select>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group row col-sm-6\\\">\\r\\n                      <label class=\\\"col-sm-2 form-control-label\\\">{{ formObj.PMode }}\\r\\n                      </label>\\r\\n                      <div class=\\\"col-sm-6\\\">\\r\\n                        <select class=\\\"form-control\\\" formControlName=\\\"PMODE\\\" style=\\\"height:30px;padding-bottom: 0px;\\\"\\r\\n                          (change)=\\\"ChangePMODE($event.target.value)\\\">\\r\\n                          <option value=\\\"cash\\\">Cash</option>\\r\\n                          <option value=\\\"credit\\\">Credit</option>\\r\\n                          <option value=\\\"cashandcredit\\\">Both Cash and Credit</option>\\r\\n                        </select>\\r\\n                      </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group row col-sm-6\\\">\\r\\n                      <label class=\\\"col-sm-2 form-control-label\\\">Credit Limit:\\r\\n                      </label>\\r\\n                      <div class=\\\"col-sm-6\\\">\\r\\n                        <input [style.background-color]=\\\"CreditDisabled()\\\"\\r\\n                          [readOnly]=\\\"CrDisabled == 'disabled' ? true : false\\\" type=\\\"number\\\" class=\\\"form-control\\\"\\r\\n                          formControlName=\\\"CRLIMIT\\\" placeholder=\\\"CRLIMIT\\\" />\\r\\n                      </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group row col-sm-6\\\">\\r\\n                      <label class=\\\"col-sm-2 form-control-label\\\">Credit Days:\\r\\n                      </label>\\r\\n                      <div class=\\\"col-sm-6\\\">\\r\\n                        <input [style.background-color]=\\\"CreditDisabled()\\\"\\r\\n                          [readOnly]=\\\"CrDisabled == 'disabled' ? true : false\\\" type=\\\"number\\\" class=\\\"form-control\\\"\\r\\n                          formControlName=\\\"CRPERIOD\\\" placeholder=\\\"CRPERIOD\\\" />\\r\\n                      </div>\\r\\n                    </div>\\r\\n\\r\\n                    <!-- <div *ngIf=\\\"PType == 'V'\\\" class=\\\"form-group row col-sm-6\\\">\\r\\n                      <label class=\\\"col-sm-2 form-control-label\\\">Credit Balance:\\r\\n                      </label>\\r\\n                      <div class=\\\"col-sm-6\\\">\\r\\n                        <input type=\\\"number\\\" class=\\\"form-control\\\" formControlName=\\\"CBALANCE\\\" placeholder=\\\"CRPERIOD\\\" />\\r\\n                      </div>\\r\\n                    </div> -->\\r\\n\\r\\n                    <div class=\\\"form-group row col-sm-6\\\">\\r\\n                      <label class=\\\"col-sm-2 form-control-label\\\">\\r\\n                        {{ formObj.PSType }} <a style=\\\"color: red\\\">*</a></label>\\r\\n                      <div class=\\\"col-sm-6\\\">\\r\\n                        <select class=\\\"form-control\\\" formControlName=\\\"PSTYPE\\\" style=\\\"height:30px;padding-bottom: 0px;\\\">\\r\\n                          <option value=\\\"local\\\">Local</option>\\r\\n                          <option value=\\\"interstate\\\">Interstate</option>\\r\\n                        </select>\\r\\n                      </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div *ngIf=\\\"PType == 'V'\\\" class=\\\"form-group row col-sm-6\\\">\\r\\n                      <label class=\\\"col-sm-2 form-control-label\\\">Branch:</label>\\r\\n                      <div class=\\\"col-sm-6\\\">\\r\\n                        <select class=\\\"form-control\\\" formControlName=\\\"DIV\\\" style=\\\"height:30px;padding-bottom: 0px;\\\">\\r\\n                          <option *ngFor=\\\"let i of BranchList\\\" value=\\\"{{ i.INITIAL }}\\\">{{ i.NAME }}</option>\\r\\n                        </select>\\r\\n                      </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group row col-sm-6\\\">\\r\\n                      <label class=\\\"col-sm-2 form-control-label\\\">GST Type <a style=\\\"color: red\\\">*</a></label>\\r\\n                      <div class=\\\"col-sm-6\\\">\\r\\n                        <select class=\\\"form-control\\\" formControlName=\\\"GSTTYPE\\\" style=\\\"height:30px;padding-bottom: 0px;\\\">\\r\\n                          <option value=\\\"Regular\\\">Regular</option>\\r\\n                          <option value=\\\"Composite\\\">Composite</option>\\r\\n                          <option value=\\\"Unregistered\\\">Unregistered</option>\\r\\n                          <option value=\\\"UIN Holder\\\">UIN Holder</option>\\r\\n                        </select>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                    <!-- *ngIf=\\\"PType == 'V'\\\" -->\\r\\n                    <div class=\\\"form-group row col-sm-6\\\" *ngIf=\\\"fromTree != 1 && fromTree != 2  \\\"   >\\r\\n                      <label class=\\\"col-sm-2 form-control-label\\\">Integration Type:</label>\\r\\n                      <div class=\\\"col-sm-6\\\">\\r\\n                        <select class=\\\"form-control\\\" formControlName=\\\"MAILTYPE\\\"\\r\\n                          style=\\\"height:30px;padding-bottom: 0px;\\\">\\r\\n                          <option value=\\\"None\\\">None</option>\\r\\n                          <option value=\\\"SAP\\\">SAP</option>\\r\\n                          <option CSV=\\\"None\\\">CSV</option>\\r\\n                          <option value=\\\"EDI\\\">EDI</option>\\r\\n                          <option value=\\\"Inline HTML\\\">Inline HTML</option>\\r\\n                        </select>\\r\\n                      </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group row col-sm-6\\\">\\r\\n                      <label class=\\\"col-sm-2 form-control-label\\\">Status:</label>\\r\\n                      <div class=\\\"col-sm-6\\\">\\r\\n                        <select class=\\\"form-control\\\" formControlName=\\\"ISACTIVE\\\"\\r\\n                          style=\\\"height:30px;padding-bottom: 0px;\\\">\\r\\n                          <option value=1>Active</option>\\r\\n                          <option value=0>Inactive</option>\\r\\n                        </select>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"tab-pane\\\" id=\\\"contact-details\\\">\\r\\n              <!-- Contact Details -->\\r\\n              <div class=\\\"form-group row\\\">\\r\\n                <div class=\\\"col-sm-12\\\">\\r\\n                  <div class=\\\"form-group row col-sm-6\\\">\\r\\n                    <label class=\\\"col-sm-6 form-control-label\\\">Address</label>\\r\\n                    <div class=\\\"col-sm-6\\\">\\r\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"TEMPADDRESS\\\" placeholder=\\\"Temp Address\\\" />\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <div *ngIf=\\\"PType == 'C' && fromTree != 1 \\\" class=\\\"form-group row col-sm-6\\\">\\r\\n                    <label class=\\\"col-sm-6 form-control-label\\\">Shipping Address:</label>\\r\\n                    <div class=\\\"col-sm-6\\\">\\r\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"ADDRESS\\\"\\r\\n                        placeholder=\\\"Shipping Address\\\" />\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <div class=\\\"form-group row col-sm-6\\\">\\r\\n                    <label class=\\\"col-sm-6 form-control-label\\\">State <a style=\\\"color: red\\\">*</a></label>\\r\\n                    <div class=\\\"col-sm-6\\\">\\r\\n\\r\\n                      <select class=\\\"form-control\\\" style=\\\"color:black\\\" name=\\\"STATE\\\" id=\\\"STATE\\\" formControlName=\\\"STATE\\\">\\r\\n                        <option *ngFor=\\\"let i of StateList\\\" value={{i.StateCode}}>{{i.StateName}}</option>\\r\\n                      </select>\\r\\n                      <!-- <div\\r\\n                        *ngIf=\\\"\\r\\n                          !form.controls['STATE'].valid &&\\r\\n                          form.controls['STATE']?.touched\\r\\n                        \\\"\\r\\n                        class=\\\"text-danger\\\"\\r\\n                      >\\r\\n                        <span *ngIf=\\\"form.get('STATE').hasError('required')\\\">\\r\\n                          State is required.\\r\\n                        </span>\\r\\n                      </div> -->\\r\\n                    </div>\\r\\n                  </div>\\r\\n\\r\\n                  <div class=\\\"form-group row col-sm-6\\\">\\r\\n                    <label class=\\\"col-sm-2 form-control-label\\\">City:</label>\\r\\n                    <div class=\\\"col-sm-6\\\">\\r\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"CITY\\\" placeholder=\\\"City\\\" />\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <div class=\\\"form-group row col-sm-6\\\">\\r\\n                    <label class=\\\"col-sm-2 form-control-label\\\">District:</label>\\r\\n                    <div class=\\\"col-sm-6\\\">\\r\\n                      <select formControlName=\\\"DISTRICT\\\" class=\\\"form-control\\\">\\r\\n                        <option *ngFor=\\\"let i of DistrictList\\\" value={{i.Name}} >{{i.Name}}</option>\\r\\n                        \\r\\n                      </select>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <div class=\\\"form-group row col-sm-6\\\">\\r\\n                    <label class=\\\"col-sm-2 form-control-label\\\">Area:</label>\\r\\n                    <div class=\\\"col-sm-6\\\">\\r\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"AREA\\\" placeholder=\\\"AREA\\\" />\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <div *ngIf=\\\"PType == 'C'\\\" class=\\\"form-group row col-sm-6\\\">\\r\\n                    <label class=\\\"col-sm-2 form-control-label\\\">Land Mark:</label>\\r\\n                    <div class=\\\"col-sm-6\\\">\\r\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"LANDMARK\\\" placeholder=\\\"LandMark\\\" />\\r\\n                      <div *ngIf=\\\"\\r\\n                          !form.controls['LANDMARK'].valid &&\\r\\n                          form.controls['LANDMARK']?.touched\\r\\n                        \\\" class=\\\"text-danger\\\">\\r\\n                        <span *ngIf=\\\"form.get('LANDMARK').hasError('required')\\\">\\r\\n                          Postal Code is required.\\r\\n                        </span>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <div class=\\\"form-group row col-sm-6\\\">\\r\\n                    <label class=\\\"col-sm-2 form-control-label\\\">Phone:</label>\\r\\n                    <div class=\\\"col-sm-6\\\">\\r\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"PHONE\\\" placeholder=\\\"PHONE\\\" />\\r\\n                    </div>\\r\\n                  </div>\\r\\n\\r\\n                  <div class=\\\"form-group row col-sm-6\\\">\\r\\n                    <label class=\\\"col-sm-2 form-control-label\\\">Mobile <a style=\\\"color: red\\\">*</a></label>\\r\\n                    <div class=\\\"col-sm-6\\\">\\r\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"MOBILE\\\" placeholder=\\\"MOBILE\\\" />\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <div class=\\\"form-group row col-sm-6\\\">\\r\\n                    <label class=\\\"col-sm-2 form-control-label\\\">Email </label>\\r\\n                    <div class=\\\"col-sm-6\\\">\\r\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"EMAIL\\\" placeholder=\\\"EMAIL\\\" />\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  \\r\\n                  <div *ngIf=\\\"PType == 'V'\\\" class=\\\"form-group row col-sm-6\\\">\\r\\n                    <label class=\\\"col-sm-2 form-control-label\\\">Fax</label>\\r\\n                    <div class=\\\"col-sm-6\\\">\\r\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"FAX\\\" placeholder=\\\"FAX\\\" />\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <div *ngIf=\\\"PType == 'V'\\\" class=\\\"form-group row col-sm-6\\\">\\r\\n                    <label class=\\\"col-sm-2 form-control-label\\\">Postal Code\\r\\n                    </label>\\r\\n                    <div class=\\\"col-sm-6\\\">\\r\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"POSTALCODE\\\" placeholder=\\\"POSTALCODE\\\" />\\r\\n                      <div *ngIf=\\\"\\r\\n                          !form.controls['POSTALCODE'].valid &&\\r\\n                          form.controls['POSTALCODE']?.touched\\r\\n                        \\\" class=\\\"text-danger\\\">\\r\\n                        <span *ngIf=\\\"form.get('POSTALCODE').hasError('required')\\\">\\r\\n                          Postal Code is required.\\r\\n                        </span>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <div *ngIf=\\\"isGroup == 0\\\" class=\\\"form-group row col-sm-6\\\">\\r\\n                    <label class=\\\"col-sm-2 form-control-label\\\">TITLE:</label>\\r\\n                    <div class=\\\"col-sm-6\\\">\\r\\n                      <select class=\\\"form-control\\\" formControlName=\\\"TITLE\\\" style=\\\"height:30px;padding-bottom: 0px;\\\">\\r\\n                        <option value=\\\"Mr\\\">Mr.</option>\\r\\n                        <option value=\\\"Mrs\\\">Mrs.</option>\\r\\n                        <option value=\\\"Mrs\\\">Others.</option>\\r\\n                      </select>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <div class=\\\"form-group row col-sm-6\\\">\\r\\n                    <label class=\\\"col-sm-2 form-control-label\\\">Contact Person </label>\\r\\n                    <div class=\\\"col-sm-6\\\">\\r\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"CONTACTPERSON\\\" placeholder=\\\"Contact Person Name\\\" />\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <div class=\\\"form-group row col-sm-6\\\">\\r\\n                    <label class=\\\"col-sm-2 form-control-label\\\">Person Mobile </label>\\r\\n                    <div class=\\\"col-sm-6\\\">\\r\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"CONTACTMOBILE\\\" placeholder=\\\"Contact Persons Mobile\\\" />\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <div class=\\\"form-group row col-sm-6\\\">\\r\\n                    <label class=\\\"col-sm-2 form-control-label\\\">Person Email </label>\\r\\n                    <div class=\\\"col-sm-6\\\">\\r\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"CONTACTEMAIL\\\" placeholder=\\\"Contact Persons Email\\\" />\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <div *ngIf=\\\"PType == 'V'&& userProfile.CompanyInfo.ORG_TYPE!= 'retailer' && fromTree != 2  \\\" class=\\\"form-group row col-sm-6\\\">\\r\\n                      <label class=\\\"col-sm-6 form-control-label\\\">ERP Stock Location Code</label>\\r\\n                      <div class=\\\"col-sm-6\\\">\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"ERPSTOCKLOCATIONCODE\\\" placeholder=\\\"ERP Stock Location Code\\\" />\\r\\n                      </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"tab-pane\\\" id=\\\"gst\\\">\\r\\n              <!-- GST  -->\\r\\n              <div class=\\\"form-group row\\\">\\r\\n                <div class=\\\"col-sm-12\\\">\\r\\n                  <div class=\\\"form-group row col-sm-6\\\">\\r\\n                    <label class=\\\"col-sm-2 form-control-label\\\">PANNO:</label>\\r\\n                    <div class=\\\"col-sm-6\\\">\\r\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"VATNO\\\" placeholder=\\\"VNO\\\" />\\r\\n                    </div>\\r\\n                  </div>\\r\\n\\r\\n                  <div class=\\\"form-group row col-sm-6\\\">\\r\\n                    <label class=\\\"col-sm-2 form-control-label\\\">GST No:</label>\\r\\n                    <div class=\\\"col-sm-6\\\">\\r\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"GSTNO\\\" placeholder=\\\"GSTNO\\\" />\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <div class=\\\"form-group row col-sm-6\\\">\\r\\n                    <label class=\\\"col-sm-6 form-control-label\\\">Aadhar No:</label>\\r\\n                    <div class=\\\"col-sm-6\\\">\\r\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"ADHARNO\\\" placeholder=\\\"ANO\\\" />\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"tab-pane\\\" id=\\\"other\\\">\\r\\n              <!-- OTHER  -->\\r\\n              <div class=\\\"form-group row\\\">\\r\\n                <div class=\\\"col-sm-12\\\">\\r\\n                  <!-- <div *ngIf=\\\"PType == 'C'\\\" class=\\\"form-group row col-sm-6\\\">\\r\\n                    <label class=\\\"col-sm-2 form-control-label\\\"\\r\\n                      >Category/Channel:</label\\r\\n                    >\\r\\n                    <div class=\\\"col-sm-6\\\">\\r\\n                      <select\\r\\n                        class=\\\"form-control\\\"\\r\\n                        formControlName=\\\"Channel\\\"\\r\\n                        style=\\\"height:30px;padding-bottom: 0px;\\\"\\r\\n                      >\\r\\n                        <option>None</option>\\r\\n                        <option\\r\\n                          *ngFor=\\\"let i of ChannelList\\\"\\r\\n                          value=\\\"i.ChannelCode\\\"\\r\\n                          >{{ i.ChannelName }}</option\\r\\n                        >\\r\\n                      </select>\\r\\n                    </div>\\r\\n                  </div> -->\\r\\n\\r\\n                  <div *ngIf=\\\"PType == 'C'\\\" class=\\\"form-group row col-sm-6\\\">\\r\\n                    <label class=\\\"col-sm-2 form-control-label\\\">Customer Type:</label>\\r\\n                    <div class=\\\"col-sm-6\\\">\\r\\n                      <select class=\\\"form-control\\\" formControlName=\\\"CTYPE\\\" style=\\\"height:30px;padding-bottom: 0px;\\\">\\r\\n                        <option value=\\\"RETAIL INVOICE\\\">RETAIL INVOICE</option>\\r\\n                        <option value=\\\"E-COMMERCE\\\">E-COMMERCE</option>\\r\\n                        <option value=\\\"EXEMPTED\\\">EXEMPTED</option>\\r\\n                        <option value=\\\"TAX INVOICE\\\">TAX INVOICE</option>\\r\\n                      </select>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <div *ngIf=\\\"PType == 'C' && fromTree != 1 \\\" class=\\\"form-group row col-sm-6\\\">\\r\\n                    <label class=\\\"col-sm-2 form-control-label\\\">Price Level:</label>\\r\\n                    <div class=\\\"col-sm-6\\\">\\r\\n                      <select class=\\\"form-control\\\" [(ngModel)]=\\\"geo\\\" [ngModelOptions]=\\\"{standalone:true}\\\"\\r\\n                        style=\\\"height:30px;padding-bottom: 0px;\\\" (change)=\\\"changePriceLevel()\\\">\\r\\n                        <option>None</option>\\r\\n                        <option *ngFor=\\\"let i of GeoList\\\" value=\\\"{{i.OrgTypeCode}}\\\">{{\\r\\n                          i.OrgTypeName\\r\\n                        }}</option>\\r\\n                      </select>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <!-- <div *ngIf=\\\"PType == 'C'\\\" class=\\\"form-group row col-sm-6\\\">\\r\\n                    <label class=\\\"col-sm-2 form-control-label\\\"\\r\\n                      >Price Level Config:</label\\r\\n                    >\\r\\n                    <div class=\\\"col-sm-6\\\">\\r\\n                      <select\\r\\n                        class=\\\"form-control\\\"\\r\\n                        formControlName=\\\"PRICELEVELCONFIG\\\"\\r\\n                        style=\\\"height:30px;padding-bottom: 0px;\\\"\\r\\n                      >\\r\\n                        <option value=\\\"None\\\">None</option>\\r\\n                        <option value=\\\"Apply from Pricelevl Master\\\"\\r\\n                          >Apply from Pricelevl Master</option\\r\\n                        >\\r\\n                        <option value=\\\"Apply from Pricelevel Table\\\"\\r\\n                          >Apply from Pricelevel Table</option\\r\\n                        >\\r\\n                        <option value=\\\"Apply from PL.Table then PL.Master\\\"\\r\\n                          >Apply from PL.Table then PL.Master</option\\r\\n                        >\\r\\n                      </select>\\r\\n                    </div>\\r\\n                  </div>  -->\\r\\n                  <!-- <div *ngIf=\\\"PType == 'V'\\\" class=\\\"form-group row col-sm-6\\\">\\r\\n                    <label class=\\\"col-sm-2 form-control-label\\\">ERP Plant Code<a style=\\\"color: red\\\">*</a></label>\\r\\n                    <div class=\\\"col-sm-6\\\">\\r\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"ERPPLANTCODE\\\" placeholder=\\\"SAP-CODE\\\" />\\r\\n                    </div>\\r\\n                  </div> -->\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"tab-pane\\\" id=\\\"route\\\">\\r\\n              <!-- ROUTE -->\\r\\n              <div class=\\\"form-group row\\\">\\r\\n                <div class=\\\"col-sm-6\\\">\\r\\n                  <div class=\\\"form-group row col-sm-12\\\">\\r\\n                    <label class=\\\"col-sm-2 form-control-label\\\">Route:</label>\\r\\n                    <div class=\\\"col-sm-6\\\">\\r\\n                      <select class=\\\"form-control\\\" formControlName=\\\"ROUTE\\\" style=\\\"height:30px;padding-bottom: 0px;\\\"\\r\\n                        (change)=\\\"RouteClick($event.target.value)\\\">\\r\\n                        <option>None</option>\\r\\n                        <option *ngFor=\\\"let i of RouteList\\\" value=\\\"{{ i.RouteCode }}\\\">{{ i?.RouteName }}</option>\\r\\n                      </select>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <div class=\\\"form-group row col-sm-12\\\">\\r\\n                    <label class=\\\"col-sm-2 form-control-label\\\">Sales Officer:</label>\\r\\n                    <div class=\\\"col-sm-6\\\">\\r\\n                      <select class=\\\"form-control\\\" formControlName=\\\"SO\\\" style=\\\"height:30px;padding-bottom: 0px;\\\"\\r\\n                        (change)=\\\"SOChange($event.target.value)\\\">\\r\\n                        <option>None</option>\\r\\n                        <option [value]=\\\"i.CODE\\\" *ngFor=\\\"let i of solist\\\">{{\\r\\n                          i.NAME\\r\\n                        }}</option>\\r\\n                      </select>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <div class=\\\"form-group row col-sm-12\\\">\\r\\n                    <label class=\\\"col-sm-2 form-control-label\\\">Officer Code:</label>\\r\\n                    <div class=\\\"col-sm-6\\\">\\r\\n                      <select class=\\\"form-control\\\" formControlName=\\\"SO\\\" (change)=\\\"SOChange($event.target.value)\\\"\\r\\n                        style=\\\"height:30px;padding-bottom: 0px;\\\">\\r\\n                        <option>None</option>\\r\\n                        <option [value]=\\\"i.CODE\\\" *ngFor=\\\"let i of solist\\\">{{ i.CODE }}</option>\\r\\n                      </select>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <div class=\\\"form-group row col-sm-12\\\">\\r\\n                    <label class=\\\"col-sm-2 form-control-label\\\">Route Days:</label>\\r\\n                    <div class=\\\"col-sm-6\\\">\\r\\n                      <select class=\\\"form-control\\\" formControlName=\\\"RouteDays\\\" style=\\\"height:30px;padding-bottom: 0px;\\\">\\r\\n                        <option>Sunday</option>\\r\\n                        <option>Monday</option>\\r\\n                        <option>Tuesday</option>\\r\\n                        <option>Wednesday</option>\\r\\n                        <option>Thursday</option>\\r\\n                        <option>Friday</option>\\r\\n                        <option>Saturday</option>\\r\\n                      </select>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"RouteAdd()\\\">\\r\\n                    Add\\r\\n                  </button>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"col-sm-6\\\">\\r\\n                  <div class=\\\"form-group row col-sm-12\\\" style=\\\"border: 1px solid #cccccc;    height: 180px;\\\">\\r\\n                    <table style=\\\"width:100%;height: 110px;\\\">\\r\\n                      <tr>\\r\\n                        <th style=\\\"width:5%\\\">SNO</th>\\r\\n                        <th style=\\\"width:35%\\\">Route Name</th>\\r\\n                        <th style=\\\"width:35%\\\">Sales Officer</th>\\r\\n                        <th style=\\\"width:20%\\\">Officer Code</th>\\r\\n\\r\\n                        <th style=\\\"width:5%\\\"></th>\\r\\n                      </tr>\\r\\n                     <ng-container *ngIf=\\\"SOTableList.length\\\">\\r\\n                      <tr *ngFor=\\\"let i of SOTableList;let ind = index\\\">\\r\\n                        <td>1</td>\\r\\n                        <td>{{ i?.RouteName }}</td>\\r\\n                        <td>{{ i?.SONAME }}</td>\\r\\n                        <td>{{ i?.SOCODE }}</td>\\r\\n                        <td>\\r\\n                          <button class=\\\"glyphicon glyphicon-trash\\\" (click)=\\\"deleteSOList(ind)\\\"></button>\\r\\n                        </td>\\r\\n                      </tr>\\r\\n                     </ng-container>\\r\\n                    </table>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</form>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/masters/components/PLedger/PLedger.html\n// module id = 1363\n// module chunks = 0 11","import { NgaModule } from '../../../theme/nga.module';\r\nimport { Component, Inject, ComponentFactoryResolver } from '@angular/core';\r\nimport { MdDialogRef, MD_DIALOG_DATA } from '@angular/material';\r\nimport { Observable } from \"rxjs/Observable\";\r\n\r\nexport interface DialogInfo {\r\n    activeurlpath: string;\r\n    reportparam: any;\r\n}\r\n\r\n@Component({\r\n    selector: 'masterdreportdialog',\r\n    template: require('./MasterDialogReport.html'),\r\n    styles: [require('../../modal-style.css'), require('../../Reports/reportStyle.css')],\r\n})\r\nexport class MasterDialogReport {\r\n    ReportParameters: any = <any>{};\r\n    activeurlpath: string;\r\n    currentreportparam: any;\r\n    constructor(public dialogref: MdDialogRef<MasterDialogReport>,\r\n         @Inject(MD_DIALOG_DATA) public data: DialogInfo) {\r\n        this.activeurlpath = data.activeurlpath;\r\n        this.currentreportparam = data.reportparam;\r\n    }\r\n\r\n    reportdataEmit(event) {\r\n        this.dialogref.close(event);\r\n\r\n    }\r\ns\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/pages/ReportDialogs/MasterDialogReport/MasterDialogReport.ts","import { Component, AfterViewInit, OnInit } from '@angular/core';\r\nimport { Router, NavigationEnd, ActivatedRoute } from '@angular/router';\r\nimport { ReportMainService } from './components/ReportMain/ReportMain.service';\r\n\r\n@Component({\r\n    selector: 'report',\r\n    template: '<router-outlet></router-outlet>'\r\n})\r\n\r\nexport class ReportsComponent {\r\n    constructor( private reportFilterService: ReportMainService) {\r\n        \r\n    }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/pages/Reports/Reports.component.ts","import { Component, ElementRef, HostListener, Input, OnDestroy, OnInit, ViewChild } from '@angular/core';\r\nimport { MdDialog } from \"@angular/material\";\r\nimport { ActivatedRoute, Router } from \"@angular/router\";\r\nimport { ModalDirective } from 'ng2-bootstrap';\r\nimport { MasterRepo } from \"../../../../common/repositories/masterRepo.service\";\r\nimport { AuthService } from '../../../../common/services/permission';\r\nimport { IReport } from '../../../DialogReport/components/reports/report.service';\r\nimport { MasterDialogReport } from '../../../ReportDialogs/MasterDialogReport/MasterDialogReport';\r\nimport * as moment from 'moment';\r\n\r\nimport { Hotkey, HotkeysService } from 'angular2-hotkeys';\r\nimport _ from 'lodash';\r\nimport { Subject } from 'rxjs';\r\nimport { isNullOrUndefined } from 'util';\r\nimport { TransactionService } from '../../../../common/Transaction Components/transaction.service';\r\nimport { TAcList } from '../../../../common/interfaces';\r\nimport { GenericPopUpComponent, GenericPopUpSettings } from '../../../../common/popupLists/generic-grid/generic-popup-grid.component';\r\nimport { DrillDownParam, ReportFilterService, drillDownReportParam } from '../../../../common/popupLists/report-filter/report-filter.service';\r\nimport { AlertService } from '../../../../common/services/alert/alert.service';\r\nimport { SpinnerService } from '../../../../common/services/spinner/spinner.service';\r\nimport { ContextMenuView, MenuItem } from '../../context-menu/context-menu-data';\r\nimport { IExcelColumnFormat, ReportColumnFormat, ReportMainService } from './ReportMain.service';\r\n\r\n\r\n@Component({\r\n  selector: 'reportmain',\r\n  template: require('./ReportMain.html'),\r\n  styles: [require('../../../modal-style.css'), require('../../reportStyle.css')],\r\n})\r\nexport class ReportMain implements OnInit, OnDestroy {\r\n  DialogMessage: string;\r\n  @ViewChild('childModal') childModal: ModalDirective;\r\n\r\n\r\n  // @ViewChild('accountreceivablereport') accountreceivablereport : AccountReceivableReport\r\n\r\n  @Input('reportname') reportname: string;\r\n  @Input() reportMaster: IReport = <IReport>{};\r\n  @ViewChild('body') body: ElementRef\r\n  /**\r\n      * Context menu\r\n      */\r\n  contextMenuView: ContextMenuView;\r\n\r\n  public activeurlpath: string;\r\n  public instanceWiseRepName: string;\r\n  private mainUrl: string = \"/pages/reports/\";\r\n  private reportHeaders: any[] = [];\r\n  public reportData: any[] = [];\r\n  public reportDetail: any[] = [];\r\n  public reportContextMenu: any[] = [];\r\n  reportmasterDetail: any;\r\n  private reportparam: any;\r\n  dialogReport: any;\r\n  trialUrl: boolean = false;\r\n  public gridTabel: any;\r\n  public userProfile: any;\r\n  reportTitle: any;\r\n\r\n  public keyValue: string;\r\n  public paramValue: any[] = [];\r\n  public param: any;\r\n  public showReportColumnFormatPopup: boolean;\r\n  public reportNameIs: string;\r\n  public ReportColumnName: ReportColumnFormat[] = [];\r\n  public reportColumnFormate: any[] = [];\r\n  reportDisplayName: any;\r\n  ledgerDisplayName: any;\r\n  FromdateInAD: any;\r\n  TodateInAD: any;\r\n  reportmodeisZero: any;\r\n  hideShow: boolean = false;\r\n  isVisible: boolean = false;\r\n  userIs: any;\r\n  userisnull: any;\r\n  costcenterDisplayName: any;\r\n  costcenterCategoryDisplayName:any\r\n  labelDisplayName: any;\r\n  accountDisplayName: any;\r\n  entryuserDisplayName: any;\r\n  detailreportDisplayName: any;\r\n  showReportListDialog: boolean;\r\n  previouslyLoadedReportsList: any[] = [];\r\n  reportLoadedSuccess: boolean;\r\n  subledgerlabelDisplayName: any;\r\n  subledgerDisplayName: any;\r\n  TDSDisplayNameDisplayName:any;\r\n  selectedRowIndex: number;\r\n  @ViewChild(\"datatable\") datatable: ElementRef;\r\n  CNDN_MODE: number;\r\n  rowsperpage: number;\r\n  optionalreportHeaders: any[] = [];\r\n  userSetting: any;\r\n  reportFooter: any[] = [];\r\n  HighlightRow: number;\r\n  report_Result: any;\r\n  supplierDisplayName: any;\r\n  voucherDisplayName: any;\r\n  divisionDisplayName: any;\r\n  INTERVALNAME:any;\r\n\r\n  hasDynamicColumns: string = \"0\";\r\n  dynamicColumnLevel: string;\r\n  dynamicColumnWidth: string;\r\n  allHeaders: any[] = [];\r\n  showReportName:any;\r\n  hasDynamicHeaders: number = 0;\r\n  rightcolumnnumber: string;\r\n  leftcolumnnumber: string;\r\n  mergereportHeaders: any[] = [];\r\n  MergeReportHeader:any;\r\n  ShowLineInFinalReport:any;\r\n  reportTypeDisplay: any;\r\n  AreawiseDisplayName:any;\r\n  PartyGroupDisplayName:any;\r\n  PartyCategoryDisplayName:any;\r\n  vouchercount:any=0;\r\n  showCellPayPaymentPopup: boolean;\r\n  @ViewChild(\"genericGridACListParty\") genericGridACListParty: GenericPopUpComponent;\r\n  gridACListPartyPopupSettings: GenericPopUpSettings = new GenericPopUpSettings();\r\n\r\n\r\n  constructor(\r\n    private masterService: MasterRepo,\r\n    private authService: AuthService,\r\n    private router: Router,\r\n    private arouter: ActivatedRoute,\r\n    public dialog: MdDialog,\r\n    private alertService: AlertService,\r\n    public reportMainService: ReportMainService,\r\n    public reportService: ReportFilterService,\r\n    public spinnerService: SpinnerService,\r\n    private _hotkeysService: HotkeysService,\r\n    public _trnMainService: TransactionService\r\n\r\n  ) {\r\n    // this.rowsperpage = 100;\r\n    this.selectedRowIndex = 0;\r\n    this.userSetting = this.authService.getSetting();\r\n    /**\r\n        * Context menu\r\n        */\r\n    this.contextMenuView = new ContextMenuView();\r\n\r\n\r\n    this.reportLoadedSuccess = false;\r\n    this.activeurlpath = arouter.snapshot.url[0].path;\r\n    this.userProfile = this.authService.getUserProfile();\r\n    this.reportMainService.reportUrlPath = this.activeurlpath;\r\n    // ////console.log(\"activeUrlPath\",this.activeurlpath);\r\n    if (this.activeurlpath == 'debtorsreport') {\r\n      this.instanceWiseRepName = 'Debtors Report0';\r\n    } else if (this.activeurlpath == 'summaryledgerreport') {\r\n      this.instanceWiseRepName = 'Summary Ledger Report0';\r\n    } else if (this.activeurlpath == 'accountledgerreport') {\r\n      this.instanceWiseRepName = 'Account Ledger Report'+(this.reportMainService.AccLedger_loadedTimes-1);\r\n    } else if (this.activeurlpath == 'creditorsreport') {\r\n      this.instanceWiseRepName = 'Creditors Report0';\r\n    } else if (this.activeurlpath == 'summarypartyledger') {\r\n      this.instanceWiseRepName = 'Summary Party Ledger Report'+(this.reportMainService.SummaryParty_loadedTimes-1);\r\n    } else if (this.activeurlpath == 'partyledgerreport') {\r\n      this.instanceWiseRepName = 'Party Ledger Report'+(this.reportMainService.PartyLedger_loadedTimes-1);\r\n    } else if (this.activeurlpath == 'sub-ledger-report-acbase') {\r\n      this.instanceWiseRepName = 'Sub Ledger Report ACBASE'+(this.reportMainService.SubLedgerAcbase_loadedTimes-1);\r\n    } else if (this.activeurlpath == 'sub-ledger-report') {\r\n      this.instanceWiseRepName = 'Sub Ledger Report'+(this.reportMainService.SubLedger_loadedTimes-1);\r\n    } else if (this.activeurlpath == 'debtorsagingreport') {\r\n      this.instanceWiseRepName = 'Debtors Ageing Report0';\r\n    } else if (this.activeurlpath == 'creditorsagingreport') {\r\n      this.instanceWiseRepName = 'Creditors Ageing Report0';\r\n    } else if (this.activeurlpath == 'debtorsoutstandingreport') {\r\n      this.instanceWiseRepName = 'Debtors Outstanding Report0';\r\n    } else if (this.activeurlpath == 'creditorsoutstandingreport') {\r\n      this.instanceWiseRepName = 'Creditors Outstanding Report0';\r\n    } else if (this.activeurlpath == 'voucher-regeister-report') {\r\n      this.instanceWiseRepName = 'Voucher Register Report0';\r\n    } else if (this.activeurlpath == 'cash-bank-book-report') {\r\n      this.instanceWiseRepName = 'Cash/Bank Book Report0';\r\n    } else if (this.activeurlpath == 'day-book-report') {\r\n      this.instanceWiseRepName = 'Day Book Report0';\r\n    } else if (this.activeurlpath == 'trial-balance-report') {\r\n      this.instanceWiseRepName = 'Trial Balance Report0';\r\n    } else if (this.activeurlpath == 'additionalcost-itemwise-report') {\r\n      this.instanceWiseRepName = 'Additional Cost Itemwise Report0';\r\n    } else if (this.activeurlpath == 'additionalcost-voucherwise-report') {\r\n      this.instanceWiseRepName = 'Additional Cost Voucherwise Report0';\r\n    }else if (this.activeurlpath == 'salesreturnsummary-report') {\r\n      this.instanceWiseRepName = 'Sales Return Summary Report0';\r\n    } else if (this.activeurlpath == 'salesreturnsummaryretailer-report') {\r\n      this.instanceWiseRepName = 'Sales Return Summary Retailer Report0';\r\n    }else if (this.activeurlpath == 'salesreturn-reportdetail') {\r\n      this.instanceWiseRepName = 'Sales Return Report Detail0';\r\n    } else if (this.activeurlpath == 'stocksummary-reportdms') {\r\n      this.instanceWiseRepName = 'Sales Summary Retailer Report0';\r\n    } else if (this.activeurlpath == 'currentstock-warehousewise-reportdms') {\r\n      this.instanceWiseRepName = 'Stock Report - Warehouse Wise0';\r\n    } else if (this.activeurlpath == 'stockabc-analysis-reportdms') {\r\n      this.instanceWiseRepName = 'Stock Abc Analysis Report0)';\r\n    }else if (this.activeurlpath == 'stocksummary-reportdms') {\r\n      this.instanceWiseRepName = 'Stock Summary Report0)';\r\n    }else if (this.activeurlpath == 'stockvaluation-reportdms') {\r\n      this.instanceWiseRepName = 'Stock Valuation Report0)';\r\n    }else if (this.activeurlpath == 'stockledger-reportdms') {\r\n      this.instanceWiseRepName = 'Stock Ledger Report0)';\r\n    }else if (this.activeurlpath == 'consolidated-trialbalance-report') {\r\n      this.instanceWiseRepName = 'Consolidated Trial Balance Report0';\r\n    }else if (this.activeurlpath == 'profit-loss-report') {\r\n      this.instanceWiseRepName = 'Profit Loss Report0';\r\n    }else if (this.activeurlpath == 'balance-sheet-report') {\r\n      this.instanceWiseRepName = 'Balance Sheet Report0';\r\n    }else if (this.activeurlpath == 'tds-report') {\r\n      this.instanceWiseRepName = 'TDS Report0';\r\n    }else if (this.activeurlpath == 'consolidated-balance-sheet-report') {\r\n      this.instanceWiseRepName = 'Consolidated Balance Sheet Report0';\r\n    }else if (this.activeurlpath == 'consolidated-profit-loss-report') {\r\n      this.instanceWiseRepName = 'Consolidated Profit and Loss Report0';\r\n    }\r\n    else if (this.activeurlpath == 'incometax-depreciation-report') {\r\n      this.instanceWiseRepName = 'As Per Income Tax Depreciation Report0';\r\n    }\r\n\r\n    let existingDataFromReportDataStore = this.reportMainService.reportDataStore[this.instanceWiseRepName];\r\n    this.arouter.queryParams.subscribe(params => {\r\n      const mode = params.mode;\r\n      if (mode == \"DRILL\" && this.reportService.drillParam.returnUrl) {\r\n        setTimeout(() => {\r\n          this.loadReport(this.reportService.drillParam);\r\n          this.reportparam = this.reportService.drillParam.reportparam;\r\n          this.reportname = this.reportService.drillParam.reportname;\r\n          if (!this.rowsperpage) {\r\n            this.rowsperpage = 100;\r\n          }\r\n          this.ReportCriteriaDisplay(this.reportService.drillParam.reportparam, this.reportService.drillParam.reportname, this.reportService.drillParam.reportname);\r\n        });\r\n      } else {\r\n        if (existingDataFromReportDataStore != null && existingDataFromReportDataStore != undefined) {\r\n          this.reportHeaders = existingDataFromReportDataStore.data.result.headers;\r\n          this.allHeaders = existingDataFromReportDataStore.data.result.allHeaders;\r\n          this.prepareOptionalHeader(this.reportHeaders);\r\n\r\n          for (var i of this.reportHeaders) {\r\n\r\n            if (i.size == null || i.size == 0) { i.width = 'auto'; }\r\n            else { i.width = i.size + 'px'; }\r\n          }\r\n          \r\n          this.loadReportDataFromExistingStore();\r\n          this.ReportCriteriaDisplay(this.reportparam, this.reportname,this.showReportName);\r\n\r\n          if(this.hasDynamicHeaders == 1){\r\n\r\n            this.prepareOptionalDynamicHeader(this.allHeaders);\r\n          }\r\n\r\n          if(this.hasDynamicHeaders !=1 && this.MergeReportHeader!=0){\r\n            this.preparereportHeader(this.reportHeaders);\r\n          }else if(this.hasDynamicHeaders !=1 && this.MergeReportHeader!=1){\r\n            this.mergereportHeaders=this.reportHeaders;\r\n          }else{\r\n          let sortedArray = _.sortBy(this.reportHeaders, 'colPosition'); \r\n          this.mergereportHeaders=sortedArray;\r\n          }\r\n          this.reportMainService.getReportColumnFormate(this.reportname)\r\n            .subscribe(\r\n              (res) => {\r\n                if (res.status == \"ok\") {\r\n                  this.reportColumnFormate = res.result;\r\n                  this.rowsperpage = res.result ? res.result[0].rowsperpage : '100';\r\n                } else {\r\n                  this.reportColumnFormate = [];\r\n                }\r\n              }\r\n            )\r\n          if (this.reportColumnFormate.length == 0) {\r\n            this.ReportColumnName = this.reportHeaders.map(\r\n              x => {\r\n                return <ReportColumnFormat>{\r\n                  ReportName: this.reportname,\r\n                  ColumnName: x.colHeader,\r\n                  MappingName: x.mappingName,\r\n                  Show: x.Visible,\r\n                  ColWidth: x.size,\r\n                  Format: x.stringFormat,\r\n                  Align: x.alignment,\r\n                  ColumnPosition: x.colPosition,\r\n                  ColGroup: x.ColGroup,\r\n                  GroupSummary: x.groupSummaryFunction,\r\n                  GSFunction: x.groupSummaryFunction,\r\n                  TableSummary: x.showTables,\r\n                  TSFunction: x.tableSummaryFunction,\r\n                  ReportTitle: this.reportTitle,\r\n                  rowsperpage: this.rowsperpage\r\n                };\r\n              }\r\n            );\r\n\r\n            this.ReportColumnName.forEach((x, z) => { x.Show = 1, x.TableSummary = 0, x.GroupSummary = 0, x.ColumnPosition = z + 1 });\r\n\r\n          } else {\r\n            this.ReportColumnName = this.reportColumnFormate.map(\r\n              x => {\r\n                return <ReportColumnFormat>{\r\n                  ReportName: this.reportname,\r\n                  ColumnName: x.ColumnName,\r\n                  MappingName: x.MappingName,\r\n                  Show: x.Show,\r\n                  ColWidth: x.ColWidth,\r\n                  Format: x.Format,\r\n                  Align: x.Align,\r\n                  ColumnPosition: x.ColumnPosition,\r\n                  ColGroup: x.ColGroup,\r\n                  GroupSummary: x.GroupSummary,\r\n                  GSFunction: x.GSFunction,\r\n                  TableSummary: x.TableSummary,\r\n                  TSFunction: x.TSFunction,\r\n                  ReportTitle: this.reportTitle,\r\n                  rowsperpage: x.rowsperpage\r\n                };\r\n              }\r\n            );\r\n          }\r\n        } else {\r\n          // ////console.log(\"@@here?1\",params.instancename)\r\n          if (!params.instancename) {\r\n            this.fiterClickEvent();\r\n          }\r\n        }\r\n\r\n      }\r\n    });\r\n\r\n    this.previouslyLoadedReportsList = this.reportMainService.previouslyLoadedReportList;\r\n\r\n    this._hotkeysService.add(new Hotkey('shift+tab', (event: KeyboardEvent): boolean => {\r\n      this.showPreviouslyLoadedReports();\r\n      return false;\r\n    }));\r\n\r\n    this._hotkeysService.add(new Hotkey('shift+p', (event: KeyboardEvent): boolean => {\r\n      this.printExcelFormat();\r\n      return false;\r\n    }));\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n    if (this.activeurlpath == 'trialbalance') {\r\n      return this.trialUrl = true;\r\n    }\r\n\r\n\r\n    this._hotkeysService.add(\r\n      new Hotkey(\r\n        \"f10\",\r\n        (event: KeyboardEvent): boolean => {\r\n          event.preventDefault();\r\n          this.hideShow = !this.hideShow;\r\n          this.isVisible = !this.isVisible;\r\n          return false;\r\n        }\r\n      )\r\n    );\r\n\r\n\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.dialog.closeAll();\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  storeAndUpdateReportDataStore(reportParam: any, reportData: any) {\r\n    // ////console.log(\"repData\",this.instanceWiseRepName);\r\n    this.reportMainService.reportDataStore[this.instanceWiseRepName] = {\r\n      param: reportParam,\r\n      data: reportData\r\n    }\r\n    // ////console.log(\"daa\",this.reportMainService.reportDataStore);\r\n  }\r\n\r\n\r\n\r\n\r\n  loadReport(reportData) {\r\n    this.DialogMessage = \"Report Loading Please Wait...\";\r\n    this.childModal.show();\r\n    let agingLimit =  this.masterService.userProfile.userRights.find(x => x.right =='StockAgeingLimit').value;    \r\n    reportData.AgeLimit=agingLimit;\r\n    this.masterService.getReportData(reportData, \"/loadReports\").subscribe(data => {\r\n      let reportresult = <any>data;\r\n      this.report_Result = reportresult;\r\n      if (reportresult.status == \"ok\") {\r\n        this.storeAndUpdateReportDataStore(reportData, reportresult);\r\n\r\n        this.reportHeaders = reportresult.result.headers;\r\n\r\n        this.reportMainService.reportLoadSubject.next();\r\n        this.reportMainService.assignPrevioiusDate = true;\r\n\r\n        for (var i of this.reportHeaders) {\r\n\r\n          if (i.size == null || i.size == 0) { i.width = 'auto'; }\r\n          else { i.width = i.size + 'px'; }\r\n        }\r\n        this.prepareOptionalHeader(this.reportHeaders);\r\n       \r\n        this.reportData = reportresult.result.data;\r\n        this.reportDetail = reportresult.result.repDetails;\r\n        this.reportmasterDetail = reportresult.result.reportmasterDetail;\r\n        this.reportContextMenu = reportresult.result.reportContextMenu;\r\n        this.reportFooter = reportresult.result.totalRowData;\r\n\r\n        this.allHeaders = reportresult.result.allHeaders;\r\n        this.hasDynamicColumns = this.reportmasterDetail.HASDYNAMICCOLUMNS;\r\n        this.dynamicColumnLevel = this.reportmasterDetail.DYNAMICCOLUMNSLEVEL;\r\n        this.dynamicColumnWidth = this.reportmasterDetail.DYNAMICCOLUMNWIDTH;\r\n        this.hasDynamicHeaders = this.reportmasterDetail.DYNAMICHEADER;\r\n        this.leftcolumnnumber = this.reportmasterDetail.LEFTCOLUMNNUMBER;\r\n        this.rightcolumnnumber = this.reportmasterDetail.RIGHTCOLUMNNUMBER;\r\n        this.MergeReportHeader = this.reportmasterDetail.MERGEREPORTHEADER;\r\n        this.ShowLineInFinalReport = this.reportmasterDetail.SHOWLINEINFINALREPORT;\r\n\r\n        if(this.hasDynamicHeaders !=1 && this.MergeReportHeader!=0){\r\n          this.preparereportHeader(this.reportHeaders);\r\n        }else if(this.hasDynamicHeaders !=1 && this.MergeReportHeader!=1){\r\n          this.mergereportHeaders=this.reportHeaders;\r\n        }\r\n\r\n\r\n        if (this.reportColumnFormate.length == 0) {\r\n          this.ReportColumnName = this.reportHeaders.map(\r\n            x => {\r\n              return <ReportColumnFormat>{\r\n                ReportName: this.reportname,\r\n                ColumnName: x.colHeader,\r\n                MappingName: x.mappingName,\r\n                Show: x.Visible,\r\n                ColWidth: x.size,\r\n                Format: x.stringFormat,\r\n                Align: x.alignment,\r\n                ColumnPosition: x.colPosition,\r\n                ColGroup: x.ColGroup,\r\n                GroupSummary: x.groupSummaryFunction,\r\n                GSFunction: x.groupSummaryFunction,\r\n                TableSummary: x.showTables,\r\n                TSFunction: x.tableSummaryFunction,\r\n                ReportTitle: this.reportTitle,\r\n                rowsperpage: this.rowsperpage\r\n              };\r\n            }\r\n          );\r\n\r\n          this.ReportColumnName.forEach((x, z) => { x.Show = 1, x.TableSummary = 0, x.GroupSummary = 0, x.ColumnPosition = z + 1 });\r\n\r\n        } else {\r\n          // ////console.log(\"reportformat\", this.reportColumnFormate)\r\n          this.ReportColumnName = this.reportColumnFormate.map(\r\n            x => {\r\n              return <ReportColumnFormat>{\r\n                ReportName: this.reportname,\r\n                ColumnName: x.ColumnName,\r\n                MappingName: x.MappingName,\r\n                Show: x.Show,\r\n                ColWidth: x.ColWidth,\r\n                Format: x.Format,\r\n                Align: x.Align,\r\n                ColumnPosition: x.ColumnPosition,\r\n                ColGroup: x.ColGroup,\r\n                GroupSummary: x.GroupSummary,\r\n                GSFunction: x.GSFunction,\r\n                TableSummary: x.TableSummary,\r\n                TSFunction: x.TSFunction,\r\n                ReportTitle: this.reportTitle,\r\n                rowsperpage: x.rowsperpage\r\n              };\r\n            }\r\n          );\r\n          // ////console.log(\"reportformat\", this.ReportColumnName)\r\n\r\n        }\r\n\r\n\r\n        if (this.reportmasterDetail.HASDYNAMICCOLUMNS) {\r\n          let dynamicOptionalHeader='Default';\r\n          this.allHeaders.forEach((x, index) => {\r\n            if(this.reportmasterDetail.DYNAMICHEADER == 1 && x.mappingName.includes(\"~\")){\r\n              let abc = x.mappingName.split('~');\r\n              dynamicOptionalHeader = abc[1];\r\n              }else{\r\n              dynamicOptionalHeader='Default';\r\n              }\r\n            if (index + 1 >= this.reportmasterDetail.DYNAMICCOLUMNSLEVEL) {\r\n              this.reportHeaders.push(<any>{\r\n                alignment: 1,\r\n                allowMerge: false,\r\n                colHeader:  dynamicOptionalHeader == 'Default' ? x.colHeader : dynamicOptionalHeader,\r\n                colNo: 0,\r\n                colPosition: dynamicOptionalHeader == 'Default' ? index+5000 : index+1,\r\n                mappingName: x.mappingName,\r\n                showGroupSummary: false,\r\n                showTableSummary: false,\r\n                size: Number(this.reportmasterDetail.DYNAMICCOLUMNWIDTH),\r\n                width: Number(this.reportmasterDetail.DYNAMICCOLUMNWIDTH) + \"px\",\r\n                visible: 1,\r\n              })\r\n            }\r\n          })\r\n          let sortedArray = _.sortBy(this.reportHeaders, 'colPosition'); \r\n          // this.reportHeaders=sortedArray;\r\n          this.mergereportHeaders=sortedArray;\r\n          if(this.reportmasterDetail.DYNAMICHEADER == 1){\r\n            this.prepareOptionalDynamicHeader(this.allHeaders);\r\n          }\r\n\r\n        }\r\n\r\n\r\n\r\n        this.DialogMessage = \"Report Loaded successfully.\";\r\n        this.reportLoadedSuccess = true;\r\n        setTimeout(() => {\r\n          this.childModal.hide();\r\n        }, 2000)\r\n      }\r\n      else {\r\n        this.DialogMessage = reportresult.result;\r\n        this.childModal.show();\r\n        setTimeout(() => {\r\n          this.childModal.hide();\r\n        }, 3000)\r\n      }\r\n    }, Error => {\r\n      // ////console.log(\"error\", Error);\r\n      this.DialogMessage = Error;\r\n      setTimeout(() => {\r\n        this.childModal.hide();\r\n      }, 3000)\r\n    });\r\n  }\r\n\r\n\r\n  // reportDialogChooser(url)\r\n  // {\r\n\r\n  //   switch (url) {\r\n  //     case this.mainUrl+\"dailysalessummary\":\r\n  //         this.dialogReport=MasterDialogReport;\r\n  //         break;\r\n  //     default:\r\n  //     this.dialogReport=\"nofound\";\r\n  //     break;\r\n  // }\r\n  // }\r\n\r\n\r\n  fiterClickEvent() {\r\n    let dialogRef = this.dialog.open(MasterDialogReport, { hasBackdrop: true, data: { activeurlpath: this.activeurlpath, instanceWiseRepName: this.instanceWiseRepName, reportparam: this.reportparam, reportname: this.reportname } });\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if (result !== undefined) {\r\n        if (result.status == 'ok') {\r\n          console.log(result);\r\n\r\n          this.reportname = result.data.reportname\r\n          this.reportparam = result.data.reportparam;\r\n          this.showReportName = result.data.REPORTDISPLAYNAME?result.data.REPORTDISPLAYNAME:result.data.reportname;\r\n\r\n          this.instanceWiseRepName = result.data.instanceWiseRepName;\r\n          this.loadReport(result.data);\r\n\r\n          // ////console.log(\"reportData\",result.data);\r\n\r\n          this.reportMainService.SelectedAccount = '';\r\n          //For Displaying Name according to the Reports\r\n          this.ReportCriteriaDisplay(this.reportparam, this.reportname, this.showReportName);\r\n\r\n\r\n          this.reportMainService.getReportColumnFormate(this.reportname)\r\n            .subscribe(\r\n              (res) => {\r\n                if (res.status == \"ok\") {\r\n                  this.reportColumnFormate = res.result;\r\n                  // ////console.log(\"reportcolumnformat\", this.reportColumnFormate);\r\n                  this.rowsperpage = res.result ? res.result[0].rowsperpage : '100';\r\n                } else {\r\n                  this.reportColumnFormate = [];\r\n                }\r\n              }\r\n            )\r\n\r\n          this.previouslyLoadedReportsList = this.reportMainService.previouslyLoadedReportList;\r\n          // ////console.log(\"@@previouslyLoadedReportsList3\",this.previouslyLoadedReportsList)\r\n        }\r\n      }\r\n      dialogRef = null;\r\n    });\r\n\r\n  }\r\n  getFormattedValue(value) {\r\n    if (value != null) {\r\n      if (typeof value === 'number') { return value.toLocaleString('en-us', { minimumFractionDigits: 2 }) }\r\n\r\n      else if (new Date(value).toString() != 'Invalid Date') {\r\n        return new Date(value).toJSON().split('T')[0];\r\n      }\r\n    }\r\n    return value;\r\n\r\n  }\r\n\r\n\r\n  SettingClickEvent() {\r\n\r\n  }\r\n\r\n\r\n  ExportReportInExcel(extension) {\r\n    // this.excelDownloadFromHtml_manualTable();\r\n    this.downloadReportPrepareFromAPI(extension);\r\n\r\n  }\r\n\r\n\r\n  excelDownloadFromHtml_manualTable() {\r\n    try {\r\n      let header = '<p style=\" text-align:center;font-weight:bold;font-size:16px;\">' + this.activeurlpath.toUpperCase() + '</p><p style=\" text-align:center;font-weight:bold;font-size:14px;\">' + this.userProfile.CompanyInfo.NAME + '</p><p style=\" text-align:center;font-weight:bold;font-size:13px\">' + this.userProfile.CompanyInfo.ADDRESS + '</p><p style=\" text-align:center;font-weight:bold\"> PAN No : <label style=\"letter-spacing:5px\">' + this.userProfile.CompanyInfo.VAT + '</label></p>';\r\n      if(this.reportname == 'Party Ledger Report' || this.reportname == 'Party Ledger Report_1'|| this.reportname == 'Party Ledger Report_2'){\r\n        this.param = '<p style=\"text-align:right;font-size:14px;\">' + 'From Date :'+ this.reportparam.DATE1 + '</p><p style=\" text-align:right;font-size:14px;\">' + 'To Date :'+ this.reportparam.DATE2 + '</p><p style=\" text-align:left;font-size:16px;\">' + 'CUSTOMER :'+ this.reportparam.ACNAME + '</p><p style=\" text-align:left;font-size:14px;\">' + 'PAN No :'+ this.reportparam.VATNO + '</p><p style=\" text-align:left;font-size:14px;\">' + 'Address :'+ this.reportparam.ADDRESS + '</p><p style=\" text-align:left;font-size:14px;\">' + 'Contact Number :'+ this.reportparam.PHONE + '</p><p style=\" text-align:left;font-size:14px;\">' + 'Email :'+ this.reportparam.EMAIL + '</p>';\r\n      }else{\r\n      this.param = '<label style=\" text-align:center;font-weight:bold;font-size:12px;\">' + this.getReportParamForPreviewKey(this.reportparam, this.reportDetail) + '</label>'+'<label></label>';\r\n      }\r\n\r\n\r\n      let table = '<table style=\"border:thin solid black;\">  <thead>   <tr>';\r\n\r\n      for (let column1 of this.reportHeaders) {\r\n        table += '<th style=\"border:thin solid black;\">' + column1.colHeader + '</th>';\r\n      };\r\n      table += '</tr> </thead>';\r\n      table += '<tbody>';\r\n\r\n      for (let row of this.reportData) {\r\n        table += '<tr>';\r\n        for (let column1 of this.reportHeaders) {\r\n          var v = row[column1.mappingName];\r\n          if (v == null) v = \"\";\r\n          table += '<td style=\"border:thin solid black;\">' + v + '</td>';\r\n        };\r\n\r\n        '</tr>';\r\n      };\r\n      for (let row of this.reportFooter) {\r\n        table += '<tr>';\r\n        for (let column1 of this.reportHeaders) {\r\n          var v = row[column1.mappingName];\r\n          if (v == null) v = \"\";\r\n          table += '<td style=\"border:thin solid black;\">' + v + '</td>';\r\n        };\r\n\r\n        '</tr>';\r\n      };\r\n      table += '</tbody></table>';\r\n      // var Ht = header + param + table;\r\n      var Ht = header + this.param + table;\r\n\r\n      var blob = new Blob([Ht], { type: \"application/vnd.ms-excel\" });\r\n      var blobUrl = URL.createObjectURL(blob);\r\n\r\n      var downloadLink = document.createElement(\"a\");\r\n      downloadLink.href = blobUrl;\r\n      downloadLink.download = this.excelReportNameProvide() + \".xls\";\r\n\r\n      document.body.appendChild(downloadLink);\r\n      downloadLink.click();\r\n      document.body.removeChild(downloadLink);\r\n    } catch (ex) { alert(ex) };\r\n  }\r\n\r\n  repName() {\r\n    var reName\r\n  }\r\n\r\n\r\n  excelReportNameProvide(): string {\r\n    var excelReportName = this.activeurlpath;\r\n    return excelReportName;\r\n  }\r\n\r\n  excelNameChooser() {\r\n    try {\r\n      // if(this.reportname==\"CUSTOMERVSITEMWISESALES\"){\r\n      //     return \"CUSTOMER_VS_ITEM_WISE_SALES_REPORT (\"+ this.masterService.customerList.find(x=>x.ACID== this.reportMaster.reportQuery.find(x=>x.param==\"CUSTOMER\").value).ACNAME+\")\";}\r\n      if (this.reportname == \"DEBITORSREPORT\") {\r\n        return \"DEBTORS REPORT ( FROM: \" + this.reportMaster.reportQuery.find(x => x.param == \"DATE1\").value + \"  TO:\" + this.reportMaster.reportQuery.find(x => x.param == \"DATE2\").value + \" )\";\r\n      }\r\n      if (this.reportname == \"DEBITORSREPORTEXD\") {\r\n        return \"DEBTORS REPORT EXTENDED( FROM: \" + this.reportMaster.reportQuery.find(x => x.param == \"DATE1\").value + \"  TO:\" + this.reportMaster.reportQuery.find(x => x.param == \"DATE2\").value + \" )\";\r\n      }\r\n      if (this.reportname == \"SALESBOOKREPORT\") {\r\n        return \"SALES REPORT ( FROM: \" + this.reportMaster.reportQuery.find(x => x.param == \"DATE1\").value + \"  TO:\" + this.reportMaster.reportQuery.find(x => x.param == \"DATE2\").value + \" )\";\r\n      }\r\n      if (this.reportname == \"STOCKREPORT\") {\r\n        return \"STOCK REPORT ( FROM: \" + this.reportMaster.reportQuery.find(x => x.param == \"DATE1\").value + \"  TO:\" + this.reportMaster.reportQuery.find(x => x.param == \"DATE2\").value + \" )\";\r\n      }\r\n      if (this.reportname == \"STOCKREPORTEXD\") {\r\n        return \"STOCK REPORT EXTENDED( FROM: \" + this.reportMaster.reportQuery.find(x => x.param == \"DATE1\").value + \"  TO:\" + this.reportMaster.reportQuery.find(x => x.param == \"DATE2\").value + \" )\";\r\n      }\r\n      if (this.reportname == \"DEBITORSREPORT_AGING\") {\r\n        return \"DEBTORS AGEING REPORT ( As On Dated: \" + this.reportMaster.reportQuery.find(x => x.param == \"DATE2\").value + \" )\";\r\n      }\r\n      if (this.reportname == \"DEBITORSREPORT_AGINGEXD\") {\r\n        return \"DEBTORS AGEING REPORT EXTENDED( As On Dated: \" + this.reportMaster.reportQuery.find(x => x.param == \"DATE2\").value + \" )\";\r\n      }\r\n      if (this.reportname == \"DEBITORSREPORT_AGINGEXD\") {\r\n        return \"DEBTORS AGEING REPORT EXTENDED( As On Dated: \" + this.reportMaster.reportQuery.find(x => x.param == \"DATE2\").value + \" )\";\r\n      }\r\n\r\n      if (this.reportname == \"STOCKLEDGERREPORT\") {\r\n        let CC = this.masterService._itemList.find(x => x.MCODE == this.reportMaster.reportQuery.find(x => x.param == \"MCODE\").value);\r\n        if (CC != null) {\r\n          return \"STOCK LEDGER REPRT ( \" + CC.MENUCODE + \"  \" + CC.DESCA + \" )\";\r\n        }\r\n      }\r\n      return this.reportMaster.title;\r\n    } catch (ex) { return this.reportMaster.title; }\r\n  }\r\n\r\n\r\n\r\n  getReportParamForPreviewKey(param: any, reportdetails: any[]) {\r\n    let key = Object.keys(param);\r\n    var allValue = \"\";\r\n    for (let i in key) {\r\n\r\n      var label = key[i];\r\n      let paramDetails = reportdetails.filter(x => x.PROPNAME == key[i])[0];\r\n      if (paramDetails != null) {\r\n        if (paramDetails.PRINTLABEL != null && paramDetails.PRINTLABEL != \"\") {\r\n          label = paramDetails.PRINTLABEL;\r\n        }\r\n      }\r\n\r\n      var value = param[key[i]];\r\n      // //console.log(\"@@label\",label)\r\n      if(label == 'DATE1' || label == 'DATE2'){\r\n        allValue += label + \":\" + value + \" , \";\r\n      }\r\n\r\n    }\r\n    return allValue;\r\n\r\n  }\r\n\r\n\r\n  getReportParamForPreview(reportparam,reportdetails){\r\n    let key = Object.keys(reportparam);\r\n    console.log(\"ss\",key)\r\n    let pp=\"(\";\r\n    for (let i in key) {\r\n      var label = key[i];\r\n      let paramDetails = reportdetails.filter(x => x.PROPNAME == key[i])[0];\r\n      if (paramDetails != null) {\r\n        if (paramDetails.PRINTLABEL != null && paramDetails.PRINTLABEL != \"\") {\r\n          label = paramDetails.PRINTLABEL;\r\n        }\r\n      }\r\n\r\n      var value = reportparam[key[i]];\r\n      if (label.toUpperCase() == \"LEDGERDISPLAYNAME\") {\r\n        if (value != '') {\r\n          pp += \" @Ledger : \" + value + \" \";\r\n        }\r\n      } else if (label.toUpperCase() == \"ACCOUNTGROUPDISPLAYNAME\") {\r\n        if (value != '') {\r\n          pp += \" @Account Group : \" + value + \" \";\r\n        }\r\n      } else if (label.toUpperCase() == \"PARTYGROUPDISPLAYNAME\") {\r\n        if (value != '') {\r\n          pp += \" @Party Group : \" + value + \" \";\r\n        }\r\n      } else if (label.toUpperCase() == \"REPORTOPTIONDISPLAYNAME\") {\r\n        if (value != '') {\r\n          pp +=\" \"+value+ \" \";\r\n        }\r\n      }\r\n      else if (label.toUpperCase() == \"MAINLEDGERDISPLAYNAME\") {\r\n        if (value != '') {\r\n          pp += \"@Main Ledger : \" + value + \" \";\r\n        }\r\n      } else if (label.toUpperCase() == \"SUBLEDGERDISPLAYNAME\") {\r\n        if (value != '') {\r\n          pp += \"@Sub Ledger : \" + value + \" \";\r\n        }\r\n      } else if (label.toUpperCase() == \"VTYPEDISPLAYNAME\") {\r\n        if (value != '') {\r\n          pp += \"@Voucher Name : \" + value + \" \";\r\n        }\r\n      } else if (label.toUpperCase() == \"DATE1\") {\r\n        pp += \" @As On Dated : \" + value + \" \";\r\n      } else if (label.toUpperCase() == \"DATE2\") {\r\n        pp += \" To : \" + value + \" \";\r\n      } else if (label.toUpperCase() == \"BSDATE1\") {\r\n        pp += \" ( \" + value + \" \";\r\n      } else if (label.toUpperCase() == \"BSDATE2\") {\r\n        pp += \" - \" + value + \" ) \";\r\n      } else if (label.toUpperCase() == \"DATE\") {\r\n        pp += \" @As On Dated  : \" + value + \" \";\r\n      } else if (label.toUpperCase() == \"BSDATE\") {\r\n        pp += \" Miti : \" + value + \" )\";\r\n      } else if (label.toUpperCase() == \"DIVISIONNAME\") {\r\n        if (value != '') {\r\n          pp += \" @Division : \" + value + \"\";\r\n        }\r\n      } else if (label.toUpperCase() == \"COSTCENTERCATEGORYNAME\") {\r\n        if (value != '') {\r\n          pp += \" @CostcenterCategory : \" + value + \" \";\r\n        }\r\n      } \r\n      else if (label.toUpperCase() == \"COSTCENTERDISPLAYNAME\") {\r\n        if (value != '') {\r\n          pp += \" @Costcenter : \" + value + \" \";\r\n        }\r\n      }else if (label.toUpperCase() == \"FROM_VNO\") {\r\n        if (value != '') {\r\n          pp += \" @Voucher Range From : \" + value + \" \";\r\n        }\r\n      } else if (label.toUpperCase() == \"To_VNO\") {\r\n        if (value != '') {\r\n          pp += \" To : \" + value + \" \";\r\n        }\r\n      } else if (label.toUpperCase() == \"SUMMARYREPORTDISPLAYNAME\") {\r\n        if (value != '') {\r\n          pp += \" \" + value + \" \";\r\n        }\r\n      }\r\n      else if (label.toUpperCase() == \"SUPPLIERDISPLAYNAME\") {\r\n        if (value != '') {\r\n          pp += \" \" + value + \" \";\r\n        }\r\n      }\r\n      else if (label.toUpperCase() == \"INTERVAL\") {\r\n        alert(\"d\")\r\n        if (value != '') {\r\n          pp += \" @INTERVAL : \" + value + \"\";\r\n        }\r\n      }\r\n    }\r\n  pp=pp.substring(0, pp.length - 1);\r\n  pp+=\")\";\r\nreturn pp;\r\n}\r\n\r\n  SaveInReportColumnFormat() {\r\n    this.showReportColumnFormatPopup = true;\r\n  }\r\n\r\n  CancelCommand() {\r\n    this.showReportColumnFormatPopup = false;\r\n  }\r\n\r\n  OkCommand() {\r\n    this.showReportColumnFormatPopup = false;\r\n\r\n    this.ReportColumnName.forEach(x => { x.ReportTitle = this.reportTitle, x.rowsperpage = this.rowsperpage });\r\n    this.masterService.masterPostmethod(\"/updateReportMaster\", { REPORTNAME: this.reportname, hasDynamicColumns: this.hasDynamicColumns,\r\n       dynamicColumnLevel: this.dynamicColumnLevel, dynamicColumnWidth: this.dynamicColumnWidth, hasDynamicHeaders: this.hasDynamicHeaders,\r\n        leftcolumnnumber: this.leftcolumnnumber, rightcolumnnumber: this.rightcolumnnumber, MergeReportHeader: this.MergeReportHeader,\r\n         ShowLineInFinalReport: this.ShowLineInFinalReport }).subscribe((res) => {\r\n\r\n    })\r\n    this.spinnerService.show(\"Data is saving ....\");\r\n    this.reportMainService.saveReportColumnFormat(this.ReportColumnName, '/saveReportColumnFormat')\r\n      .subscribe(\r\n        (res) => {\r\n          if (res.status == \"ok\") {\r\n            // this.loadingService.hide();\r\n            this.spinnerService.hide();\r\n            this.alertService.info('Report format is successfully saved');\r\n            this.reportColumnFormate = [];\r\n          } else {\r\n            this.spinnerService.hide();\r\n          }\r\n        },\r\n        error => {\r\n          this.spinnerService.hide();\r\n        }\r\n      )\r\n  }\r\n\r\n  changeDate(DATE1, DATE2, format: string) {\r\n    var adbs = require(\"ad-bs-converter\");\r\n    if (format == \"AD\") {\r\n      this.FromdateInAD =this.masterService.toBSDateReport(DATE1)\r\n      console.log(\"dd\",this.FromdateInAD)\r\n      this.TodateInAD =this.masterService.toBSDateReport(DATE2)\r\n      // var adDate1 = (DATE1.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n      // var bsDate1 = adbs.ad2bs(adDate1);\r\n      // var adDate2 = (DATE2.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n      // var bsDate2 = adbs.ad2bs(adDate2);\r\n      // this.FromdateInAD = bsDate1.en.year + '-' + bsDate1.en.month + '-' + (bsDate1.en.day == '1' || bsDate1.en.day == '2' || bsDate1.en.day == '3' || bsDate1.en.day == '4' || bsDate1.en.day == '5' || bsDate1.en.day == '6' || bsDate1.en.day == '7' || bsDate1.en.day == '8' || bsDate1.en.day == '9' ? '0' + bsDate1.en.day : bsDate1.en.day);\r\n      // this.TodateInAD = bsDate2.en.year + '-' + bsDate2.en.month + '-' + (bsDate2.en.day == '1' || bsDate2.en.day == '2' || bsDate2.en.day == '3' || bsDate2.en.day == '4' || bsDate2.en.day == '5' || bsDate2.en.day == '6' || bsDate2.en.day == '7' || bsDate2.en.day == '8' || bsDate2.en.day == '9' ? '0' + bsDate2.en.day : bsDate2.en.day);\r\n    }\r\n  }\r\n  @ViewChild('reportnameinlist') reportnameinlist: ElementRef;\r\n\r\n  showPreviouslyLoadedReports() {\r\n    this.showReportListDialog = true;\r\n    // setTimeout(() => {\r\n    //   this.reportnameinlist.nativeElement.focus();\r\n    // }, 10);\r\n  }\r\n\r\n  CancelReportList() {\r\n    this.showReportListDialog = false;\r\n  }\r\n\r\n  closeReport() {\r\n    // ////console.log(\"@@activeurlpath\",this.activeurlpath)\r\n    // this.reportHeaders = [];\r\n    // this.reportData = [];\r\n    // this.reportparam = [];\r\n    if (this.activeurlpath == 'summaryledgerreport') {\r\n      if (this.reportMainService.loadedTimes > 0) {\r\n        this.reportMainService.loadedTimes = this.reportMainService.loadedTimes - 1;\r\n      }\r\n    } else if (this.activeurlpath == 'accountledgerreport') {\r\n      if (this.reportMainService.AccLedger_loadedTimes > 0) {\r\n        this.reportMainService.AccLedger_loadedTimes = this.reportMainService.AccLedger_loadedTimes - 1;\r\n      }\r\n    } else if (this.activeurlpath == 'summarypartyledger') {\r\n      if (this.reportMainService.SummaryParty_loadedTimes > 0) {\r\n        this.reportMainService.SummaryParty_loadedTimes = this.reportMainService.SummaryParty_loadedTimes - 1;\r\n      }\r\n    } else if (this.activeurlpath == 'partyledgerreport') {\r\n      if (this.reportMainService.PartyLedger_loadedTimes > 0) {\r\n        this.reportMainService.PartyLedger_loadedTimes = this.reportMainService.PartyLedger_loadedTimes - 1;\r\n      }\r\n    } else if (this.activeurlpath == 'sub-ledger-report') {\r\n      if (this.reportMainService.SubLedger_loadedTimes > 0) {\r\n        this.reportMainService.SubLedger_loadedTimes = this.reportMainService.SubLedger_loadedTimes - 1;\r\n      }\r\n    } else if (this.activeurlpath == 'debtorsreport') {\r\n      if (this.reportMainService.loadedTimesD > 0) {\r\n        this.reportMainService.loadedTimesD = this.reportMainService.loadedTimesD - 1;\r\n      }\r\n    } else if (this.activeurlpath == 'creditorsreport') {\r\n      if (this.reportMainService.Creditors_loadedTimes > 0) {\r\n        this.reportMainService.Creditors_loadedTimes = this.reportMainService.Creditors_loadedTimes - 1;\r\n      }\r\n    } else if (this.activeurlpath == 'debtorsagingreport') {\r\n      if (this.reportMainService.DebtorsAgeing_loadedTimes > 0) {\r\n        this.reportMainService.DebtorsAgeing_loadedTimes = this.reportMainService.DebtorsAgeing_loadedTimes - 1;\r\n      }\r\n    } else if (this.activeurlpath == 'creditorsagingreport') {\r\n      if (this.reportMainService.CreditorsAgeing_loadedTimes > 0) {\r\n        this.reportMainService.CreditorsAgeing_loadedTimes = this.reportMainService.CreditorsAgeing_loadedTimes - 1;\r\n      }\r\n    } else if (this.activeurlpath == 'voucher-regeister-report') {\r\n      if (this.reportMainService.VoucherReg_loadedTimes > 0) {\r\n        this.reportMainService.VoucherReg_loadedTimes = this.reportMainService.VoucherReg_loadedTimes - 1;\r\n      }\r\n    } else if (this.activeurlpath == 'cash-bank-book-report') {\r\n      if (this.reportMainService.CashBank_loadedTimes > 0) {\r\n        this.reportMainService.CashBank_loadedTimes = this.reportMainService.CashBank_loadedTimes - 1;\r\n      }\r\n    } else if (this.activeurlpath == 'day-book-report') {\r\n      if (this.reportMainService.DayBook_loadedTimes > 0) {\r\n        this.reportMainService.DayBook_loadedTimes = this.reportMainService.DayBook_loadedTimes - 1;\r\n      }\r\n    } else if (this.activeurlpath == 'debtorsoutstandingreport') {\r\n      if (this.reportMainService.DebtorsOuts_loadedTimes > 0) {\r\n        this.reportMainService.DebtorsOuts_loadedTimes = this.reportMainService.DebtorsOuts_loadedTimes - 1;\r\n      }\r\n    } else if (this.activeurlpath == 'creditorsoutstandingreport') {\r\n      if (this.reportMainService.CreditorsOuts_loadedTimes > 0) {\r\n        this.reportMainService.CreditorsOuts_loadedTimes = this.reportMainService.CreditorsOuts_loadedTimes - 1;\r\n      }\r\n    } else if (this.activeurlpath == 'sub-ledger-report-acbase') {\r\n      if (this.reportMainService.SubLedgerAcbase_loadedTimes > 0) {\r\n        this.reportMainService.SubLedgerAcbase_loadedTimes = this.reportMainService.SubLedgerAcbase_loadedTimes - 1;\r\n      }\r\n    } else if (this.activeurlpath == 'trial-balance-report') {\r\n      if (this.reportMainService.TrialBalance_loadedTimes > 0) {\r\n        this.reportMainService.TrialBalance_loadedTimes = this.reportMainService.TrialBalance_loadedTimes - 1;\r\n      }\r\n    } else if (this.activeurlpath == 'additionalcost-itemwise-report') {\r\n      if (this.reportMainService.AdditionalCostDetail_loadedTimes > 0) {\r\n        this.reportMainService.AdditionalCostDetail_loadedTimes = this.reportMainService.AdditionalCostDetail_loadedTimes - 1;\r\n      }\r\n    } else if (this.activeurlpath == 'additionalcost-voucherwise-report') {\r\n      if (this.reportMainService.AdditionalCostSummary_loadedTimes > 0) {\r\n        this.reportMainService.AdditionalCostSummary_loadedTimes = this.reportMainService.AdditionalCostSummary_loadedTimes - 1;\r\n    }\r\n   } else if (this.activeurlpath == 'salesreturnsummary-report') {\r\n      if (this.reportMainService.SalesReturnSummary_loadedTimes > 0) {\r\n          this.reportMainService.SalesReturnSummary_loadedTimes = this.reportMainService.SalesReturnSummary_loadedTimes - 1;\r\n    }\r\n   } else if (this.activeurlpath == 'salesreturnsummaryretailer-report') {\r\n      if (this.reportMainService.SalesReturnSummaryRetailer_loadedTimes > 0) {\r\n            this.reportMainService.SalesReturnSummaryRetailer_loadedTimes = this.reportMainService.SalesReturnSummaryRetailer_loadedTimes - 1;\r\n    }\r\n    }else if (this.activeurlpath == 'salesreturn-reportdetail') {\r\n      if (this.reportMainService.SalesReturnReportDetail_loadedTimes > 0) {\r\n            this.reportMainService.SalesReturnReportDetail_loadedTimes = this.reportMainService.SalesReturnReportDetail_loadedTimes - 1;\r\n    }\r\n    }else if (this.activeurlpath == 'stocksummary-reportdms') {\r\n      if (this.reportMainService.StockSummaryAccount_loadedTimes > 0) {\r\n        this.reportMainService.StockSummaryAccount_loadedTimes = this.reportMainService.StockSummaryAccount_loadedTimes - 1;\r\n    }\r\n    }else if (this.activeurlpath == 'currentstock-warehousewise-reportdms') {\r\n        if (this.reportMainService.CurrentStockWarehouseWiseAccount_loadedTimes > 0) {\r\n          this.reportMainService.CurrentStockWarehouseWiseAccount_loadedTimes = this.reportMainService.CurrentStockWarehouseWiseAccount_loadedTimes - 1;\r\n    }\r\n    }else if (this.activeurlpath == 'stockabc-analysis-reportdms') {\r\n      if (this.reportMainService.StockAbcAnalysisAccount_loadedTimes > 0) {\r\n        this.reportMainService.StockAbcAnalysisAccount_loadedTimes = this.reportMainService.StockAbcAnalysisAccount_loadedTimes - 1;\r\n    }\r\n    }else if (this.activeurlpath == 'consolidated-trialbalance-report') {\r\n      if (this.reportMainService.consolidated_TrialBalance_loadedTimes > 0) {\r\n        this.reportMainService.consolidated_TrialBalance_loadedTimes = this.reportMainService.consolidated_TrialBalance_loadedTimes - 1;\r\n    }\r\n    } else if (this.activeurlpath == 'profit-loss-report') {\r\n      if (this.reportMainService.ProfitLoss_loadedTimes > 0) {\r\n        this.reportMainService.ProfitLoss_loadedTimes = this.reportMainService.ProfitLoss_loadedTimes - 1;\r\n      }\r\n    } else if (this.activeurlpath == 'balance-sheet-report') {\r\n      if (this.reportMainService.BalanceSheet_loadedTimes > 0) {\r\n        this.reportMainService.BalanceSheet_loadedTimes = this.reportMainService.BalanceSheet_loadedTimes - 1;\r\n    }\r\n  }else if (this.activeurlpath == 'tds-report') {\r\n      if (this.reportMainService.TDS_loadedTimes > 0) {\r\n        this.reportMainService.TDS_loadedTimes = this.reportMainService.TDS_loadedTimes - 1;\r\n      }\r\n    }else if (this.activeurlpath == 'consolidated-balance-sheet-report') {\r\n      if (this.reportMainService.Consolidated_BalanceSheet_loadedTimes > 0) {\r\n        this.reportMainService.Consolidated_BalanceSheet_loadedTimes = this.reportMainService.Consolidated_BalanceSheet_loadedTimes - 1;\r\n    }\r\n  }else if (this.activeurlpath == 'consolidated-profit-loss-report') {\r\n    if (this.reportMainService.Consolidated_ProfitLoss_loadedTimes > 0) {\r\n      this.reportMainService.Consolidated_ProfitLoss_loadedTimes = this.reportMainService.Consolidated_ProfitLoss_loadedTimes - 1;\r\n  }\r\n}else if (this.activeurlpath == 'bill-tracking-report') {\r\n  if (this.reportMainService.BillTracking_loadedTimes > 0) {\r\n    this.reportMainService.BillTracking_loadedTimes = this.reportMainService.BillTracking_loadedTimes - 1;\r\n}\r\n}else if (this.activeurlpath == 'creditorsbill-tracking-report') {\r\n  if (this.reportMainService.CreditorsBillTracking_loadedTimes > 0) {\r\n    this.reportMainService.CreditorsBillTracking_loadedTimes = this.reportMainService.CreditorsBillTracking_loadedTimes - 1;\r\n}\r\n}\r\n    \r\n    // this.reportDisplayName = '';\r\n    // this.labelDisplayName = '';\r\n    // this.ledgerDisplayName = '';\r\n    // this.detailreportDisplayName = '';\r\n    // this.accountDisplayName = '';\r\n    // this.entryuserDisplayName = '';\r\n    // this.costcenterDisplayName = '';\r\n    this.reportMainService.reportDataStore[this.activeurlpath] = undefined;\r\n    this.reportMainService.reportDataStore[this.instanceWiseRepName] = undefined;\r\n    let xyz = this.reportMainService.previouslyLoadedReportList.findIndex(report => report.instanceWiseRepName == this.instanceWiseRepName);\r\n    // ////console.log(\"@@xyz\",xyz)\r\n    this.reportMainService.previouslyLoadedReportList.splice(xyz, 1)\r\n    // ////console.log(\"@@previouslyLoadedReportList ma k xa?\",this.reportMainService.previouslyLoadedReportList)\r\n    if (this.reportMainService.previouslyLoadedReportList.length == 0) {\r\n      this.router.navigate([\"/pages/dashboard/dashboard\"]);\r\n    } else {\r\n      this.instanceWiseRepName = this.reportMainService.previouslyLoadedReportList[this.reportMainService.previouslyLoadedReportList.length - 1].instanceWiseRepName;\r\n      this.loadReportDataFromExistingStore();\r\n      this.ReportCriteriaDisplay(this.reportparam, this.reportname,this.showReportName);\r\n\r\n      this.router.navigate(\r\n        [this.reportMainService.previouslyLoadedReportList[this.reportMainService.previouslyLoadedReportList.length - 1].activeurlpath,\r\n        {\r\n          queryParams: {\r\n            instancename: this.reportMainService.previouslyLoadedReportList[this.reportMainService.previouslyLoadedReportList.length - 1].instanceWiseRepName\r\n          }\r\n        }]);\r\n\r\n    }\r\n\r\n  }\r\n\r\n  popReportandClose(report) {\r\n    // ////console.log(\"@@report\", report)\r\n    this.reportMainService.previouslyLoadedReportList.splice(report, 1)\r\n    let routepaths = report.split('/');\r\n    let activeurlpath2;\r\n    if (routepaths && routepaths.length) {\r\n      activeurlpath2 = routepaths[routepaths.length - 1]\r\n      // ////console.log(\"@@activeurlpath2\", activeurlpath2)\r\n\r\n    }\r\n    this.closeReportShorcut(activeurlpath2);\r\n  }\r\n\r\n  closeReportShorcut(activeurlpath) {\r\n    // ////console.log(\"@@activeurlpath\", activeurlpath)\r\n    this.reportHeaders = [];\r\n    this.allHeaders =[];\r\n    this.reportData = [];\r\n    this.reportparam = [];\r\n    if (activeurlpath == 'summaryledgerreport') {\r\n      this.reportMainService.SummaryLedgerObj = <any>{};\r\n    } else if (activeurlpath == 'accountledgerreport') {\r\n      this.reportMainService.AccoutLedgerObj = <any>{};\r\n    } else if (activeurlpath == 'summarypartyledger') {\r\n      this.reportMainService.SummaryPartyLedgerObj = <any>{};\r\n    } else if (activeurlpath == 'partyledgerreport') {\r\n      this.reportMainService.PartyLedgerObj = <any>{};\r\n    } else if (activeurlpath == 'sub-ledger-report') {\r\n      this.reportMainService.SubLedgerObj = <any>{};\r\n    } else if (activeurlpath == 'debtorsreport') {\r\n      this.reportMainService.DebtorsReportObj = <any>{};\r\n    } else if (activeurlpath == 'creditorsreport') {\r\n      this.reportMainService.CreditorsReportObj = <any>{};\r\n    } else if (activeurlpath == 'debtorsagingreport') {\r\n      this.reportMainService.DebtorsAgeingObj = <any>{};\r\n    } else if (activeurlpath == 'creditorsagingreport') {\r\n      this.reportMainService.CreditorsAgeingObj = <any>{};\r\n    } else if (activeurlpath == 'actual-vs-budget-report') {\r\n      this.reportMainService.ActualVsBudgetObj = <any>{};\r\n    } else if (activeurlpath == 'voucher-regeister-report') {\r\n      this.reportMainService.VoucherRegisterObj = <any>{};\r\n    } else if (activeurlpath == 'cash-bank-book-report') {\r\n      this.reportMainService.CashAndBankBookObj = <any>{};\r\n    } else if (activeurlpath == 'day-book-report') {\r\n      this.reportMainService.DayBookObj = <any>{};\r\n    } else if (activeurlpath == 'debtorsoutstandingreport') {\r\n      this.reportMainService.DebtorsOutstandingObj = <any>{};\r\n    } else if (activeurlpath == 'creditorsoutstandingreport') {\r\n      this.reportMainService.CreditorsOutstandingObj = <any>{};\r\n    }\r\n\r\n    this.reportDisplayName = '';\r\n    this.labelDisplayName = '';\r\n    this.ledgerDisplayName = '';\r\n    this.detailreportDisplayName = '';\r\n    this.accountDisplayName = '';\r\n    this.entryuserDisplayName = '';\r\n    this.costcenterDisplayName = '';\r\n    this.supplierDisplayName = '';\r\n    this.voucherDisplayName = '';\r\n    this.reportMainService.reportDataStore[activeurlpath] = undefined;\r\n\r\n  }\r\n\r\n  @HostListener(\"document : keydown\", [\"$event\"])\r\n  updown($event: KeyboardEvent) {\r\n    if ($event.code == \"F2\") {\r\n      $event.preventDefault();\r\n      this.fiterClickEvent();\r\n    }\r\n    if ($event.code == \"F9\") {\r\n      $event.preventDefault();\r\n      this.ExportReportInExcel('xlsx');\r\n    }\r\n    // if ($event.code == \"F4\") {\r\n    //   $event.preventDefault();\r\n    //   this.showPreviouslyLoadedReports();\r\n    // }\r\n    if ($event.code == \"Escape\") {\r\n      if (this.showReportListDialog == true) {\r\n        this.CancelReportList();\r\n      } else {\r\n        if (this.reportLoadedSuccess == true) {\r\n          $event.preventDefault();\r\n          this.closeReport();\r\n        }\r\n      }\r\n\r\n    }\r\n\r\n    if (this.selectedRowIndex == null) this.selectedRowIndex = 0;\r\n\r\n    if ($event.code === \"ArrowDown\") {\r\n      $event.preventDefault();\r\n      if (this.showReportListDialog == true) {\r\n        this.selectedRowIndex = this.selectedRowIndex + 1;\r\n        if (this.selectedRowIndex > (this.previouslyLoadedReportsList.length - 1)) this.selectedRowIndex = this.previouslyLoadedReportsList.length - 1;\r\n      } else {\r\n        this.body.nativeElement.scrollTop = this.body.nativeElement.scrollTop + 15;\r\n        this.HighlightRow = this.HighlightRow + 1;\r\n        if (this.HighlightRow > (this.reportData.length - 1)) this.HighlightRow = this.reportData.length - 1;\r\n      }\r\n    }\r\n    else if ($event.code === \"ArrowUp\") {\r\n      $event.preventDefault();\r\n      if (this.showReportListDialog == true) {\r\n        this.selectedRowIndex = this.selectedRowIndex - 1;\r\n        if (this.selectedRowIndex < 0) this.selectedRowIndex = 0;\r\n      } else {\r\n        if (this.body.nativeElement.scrollTop > 0) {\r\n          this.body.nativeElement.scrollTop = this.body.nativeElement.scrollTop - 15;\r\n        }\r\n        this.HighlightRow = this.HighlightRow - 1;\r\n        if (this.HighlightRow < 0) this.HighlightRow = 0;\r\n\r\n\r\n      }\r\n    }\r\n    if ($event.code === \"Enter\" || $event.code === \"NumpadEnter\") {\r\n      if (this.showReportListDialog == true) {\r\n        $event.preventDefault();\r\n        if (this.selectedRowIndex != null) {\r\n          if (this.previouslyLoadedReportsList[this.selectedRowIndex] != null) {\r\n            let abc = this.previouslyLoadedReportsList[this.selectedRowIndex].activeurlpath;\r\n            // ////console.log(\"main1\",this.previouslyLoadedReportsList[this.selectedRowIndex])\r\n            this.instanceWiseRepName = this.previouslyLoadedReportsList[this.selectedRowIndex].instanceWiseRepName;\r\n            this.loadReportDataFromExistingStore();\r\n            this.ReportCriteriaDisplay(this.reportparam, this.reportname,this.showReportName);\r\n            this.router.navigate(\r\n              [this.previouslyLoadedReportsList[this.selectedRowIndex].activeurlpath,\r\n              {\r\n                queryParams: {\r\n                  instancename: this.previouslyLoadedReportsList[this.selectedRowIndex].instanceWiseRepName\r\n                }\r\n              }]);\r\n          }\r\n        }\r\n      }\r\n\r\n    }\r\n  }\r\n\r\n\r\n  onClickLoadedReportList(i, value) {\r\n    this.selectedRowIndex = i;\r\n    if (value) {\r\n      //  ////console.log(\"@@value\",value);\r\n      this.instanceWiseRepName = value.instanceWiseRepName;\r\n      this.loadReportDataFromExistingStore();\r\n      this.ReportCriteriaDisplay(this.reportparam, this.reportname,this.showReportName);\r\n      this.router.navigate(\r\n        [this.previouslyLoadedReportsList[i].activeurlpath],\r\n        {\r\n          queryParams: {\r\n            instancename: this.previouslyLoadedReportsList[i].instanceWiseRepName\r\n          }\r\n        });\r\n\r\n    }\r\n  }\r\n\r\n\r\n\r\n  loadReportDataFromExistingStore() {\r\n    // ////console.log(\"reportStoredata\",this.reportMainService.reportDataStore);\r\n    let existingDataFromReportDataStore = this.reportMainService.reportDataStore[this.instanceWiseRepName];\r\n    if (existingDataFromReportDataStore != null && existingDataFromReportDataStore != undefined) {\r\n      this.reportData = existingDataFromReportDataStore.data.result.data;\r\n      this.reportDetail = existingDataFromReportDataStore.data.result.repDetails;\r\n      this.reportname = existingDataFromReportDataStore.param.reportname;\r\n      this.reportparam = existingDataFromReportDataStore.param.reportparam;\r\n      this.reportContextMenu = existingDataFromReportDataStore.data.result.reportContextMenu;\r\n      this.reportmasterDetail = existingDataFromReportDataStore.data.result.reportmasterDetail;\r\n      this.reportFooter = existingDataFromReportDataStore.data.result.totalRowData;\r\n      this.showReportName = existingDataFromReportDataStore.param.REPORTDISPLAYNAME?existingDataFromReportDataStore.param.REPORTDISPLAYNAME:existingDataFromReportDataStore.param.reportname;\r\n      this.hasDynamicHeaders = this.reportmasterDetail.DYNAMICHEADER;\r\n      this.leftcolumnnumber = this.reportmasterDetail.LEFTCOLUMNNUMBER;\r\n      this.rightcolumnnumber = this.reportmasterDetail.RIGHTCOLUMNNUMBER;\r\n      this.MergeReportHeader = this.reportmasterDetail.MERGEREPORTHEADER;\r\n      this.ShowLineInFinalReport = this.reportmasterDetail.SHOWLINEINFINALREPORT;\r\n    }\r\n  }\r\n\r\n\r\n  getCNDNMODE(data: any) {\r\n\r\n  }\r\n\r\n  drillDownReport(data: any) {\r\n    this.loadReportDataFromExistingStore();\r\n    // ////console.log(\"@@data\", data);\r\n    // ////console.log(\"@@this.reportmasterDetail\", this.reportmasterDetail)\r\n    if (this.reportmasterDetail.DRILLTO && this.reportmasterDetail.DRILLTO != \"VOUCHER\" && (this.reportmasterDetail.REPORTNAME != 'Sub Ledger Report ACBASE' && this.reportmasterDetail.REPORTNAME != 'Debtors Bill Tracking Report' && this.reportmasterDetail.REPORTNAME != 'Creditors Bill Tracking Report' )) {\r\n      if(this.reportmasterDetail.DRILLKEY == 'ACID'){\r\n        if ((data.ACID && (data.ACID != 'AG01001' && data.ACID != 'AG01002'))) {\r\n          // ////console.log(\"@@dataACID\", data);\r\n  \r\n          // if (data.ACID && data.ACID.startsWith(\"PA\")) {\r\n          //   if(this.masterService.userSetting.DISPLAY == 1){\r\n          //     this.reportmasterDetail.DRILLTO = 'Party Ledger Report_1';\r\n          //   }else{\r\n          //     this.reportmasterDetail.DRILLTO = 'Party Ledger Report';\r\n          //   }\r\n          // } else {\r\n          //   if(this.masterService.userSetting.DISPLAY == 1){\r\n          //     this.reportmasterDetail.DRILLTO = 'Account Ledger Report_1';\r\n          //   }else{\r\n          //     this.reportmasterDetail.DRILLTO = 'Account Ledger Report';\r\n          //   }\r\n          // }\r\n  \r\n          if (data.ACCODE && data.ACCODE.startsWith(\"SL\")) {\r\n            this.reportmasterDetail.DRILLTO = 'Sub Ledger Report';\r\n          }\r\n        }\r\n        if ((data.ACID && data.ACID == 'AG01001') && (data.TYPE && data.TYPE == 'G')) {\r\n          // ////console.log(\"@@dataACID1\", data.ACID);\r\n          this.reportmasterDetail.DRILLTO = 'Debtors Report';\r\n        }\r\n        if ((data.ACID && data.ACID == 'AG01002') && (data.TYPE && data.TYPE == 'G')) {\r\n          // ////console.log(\"@@dataACID2\", data.ACID);\r\n          this.reportmasterDetail.DRILLTO = 'Creditors Report';\r\n        }\r\n      }\r\n\r\n      if(this.reportmasterDetail.DRILLKEY == 'ACID_A'){\r\n        if ((data.ACID_A && (data.ACID_A != 'AG01001' && data.ACID_A != 'AG01002'))) {\r\n          // //console.log(\"dataACID_A\", data);\r\n  \r\n          // if (data.ACID_A && data.ACID_A.startsWith(\"PA\")) {\r\n          //   this.reportmasterDetail.DRILLTO = 'Party Ledger Report';\r\n          // } else {\r\n          //   this.reportmasterDetail.DRILLTO = 'Account Ledger Report';\r\n          // }\r\n  \r\n          if (data.ACCODE && data.ACCODE.startsWith(\"SL\")) {\r\n            this.reportmasterDetail.DRILLTO = 'Sub Ledger Report';\r\n          }\r\n        }\r\n        if ((data.ACID_A && data.ACID_A == 'AG01001') && (data.TYPE && data.TYPE == 'G')) {\r\n          this.reportmasterDetail.DRILLTO = 'Debtors Report';\r\n        }\r\n        if ((data.ACID_A && data.ACID_A == 'AG01002') && (data.TYPE && data.TYPE == 'G')) {\r\n          this.reportmasterDetail.DRILLTO = 'Creditors Report';\r\n        }\r\n      }  \r\n    }\r\n\r\n    if ((data.ACID && data.ACID.startsWith(\"PA\")) || (data.ACID_A && data.ACID_A.startsWith(\"PA\"))) {\r\n      this.reportMainService.ReportFilterObject.ACIDwithPA = true;\r\n    } else {\r\n      this.reportMainService.ReportFilterObject.ACIDwithPA = false;\r\n    }\r\n\r\n    // ////console.log(\"@@data.ACCODE\",data.ACCODE)\r\n    if (data.ACCODE && data.ACCODE.startsWith(\"SL\")) {\r\n      this.reportMainService.ReportFilterObject.ACCODEwithSL = true;\r\n    } else {\r\n      this.reportMainService.ReportFilterObject.ACCODEwithSL = false;\r\n    }\r\n\r\n    // if( data.IsSLedger ){\r\n    // var abc='SL1_AC2551';\r\n    // var xyz=abc.split(\"_\")\r\n    // ////console.log(\"@xyz\",xyz,xyz[0],xyz[1])\r\n    // }else{\r\n    // }\r\n\r\n    // ////console.log(\"@@this.reportmasterDetail.DRILLTO\",this.reportmasterDetail.DRILLTO)\r\n    if (!this.reportmasterDetail.hasOwnProperty('DRILLKEY') ||\r\n      !this.reportmasterDetail.hasOwnProperty('DRILLTO') ||\r\n      !this.reportmasterDetail.hasOwnProperty('ISDRILLABLE') ||\r\n      !this.reportmasterDetail.ISDRILLABLE) {\r\n      return;\r\n    }\r\n    if (this.reportmasterDetail.DRILLTO == 'VOUCHER') {\r\n      let voucher = data[this.reportmasterDetail.DRILLKEY].substring(0, 2).toUpperCase();\r\n      if (voucher == 'TI' || voucher == 'CN' || voucher == 'PI' || voucher == 'DN') {\r\n        this.masterService.getPclandCNDNmode(voucher, data[this.reportmasterDetail.DRILLKEY]).subscribe((res) => {\r\n          if (res.result && res.result[0].CNDN_MODE == 1) {\r\n            this.CNDN_MODE = 1;\r\n          } else {\r\n            this.CNDN_MODE = 0;\r\n            if (res.result && res.result[0].PCL == 'pc001') {\r\n              this.masterService.PCL_VALUE = 1;\r\n            } else if (res.result && res.result[0].PCL == 'pc002') {\r\n              this.masterService.PCL_VALUE = 2;\r\n            }\r\n            else{\r\n              this.masterService.PCL_VALUE = 2;\r\n            }\r\n          }\r\n        }, err => {\r\n\r\n        }, () => {\r\n          this.routerToVouchers(data);\r\n        })\r\n      } else {\r\n        this.routerToVouchers(data);\r\n      }\r\n    } else {\r\n      this.routerToVouchers(data);\r\n    }\r\n\r\n\r\n  }\r\n\r\n\r\n  routerToVouchers(data: any) {\r\n    ////console.log(\"CheckHere!\", data)\r\n    switch (this.reportmasterDetail.DRILLTO) {\r\n      case 'Account Ledger Report':\r\n        case 'Account Ledger Report_1':\r\n          case 'Account Ledger Report_2':\r\n        this.resolveDrillDownParam(this.reportmasterDetail.DRILLTO, data, data['TYPE']);\r\n        this.router.navigate(\r\n          [\"/pages/financialreports/account-ledger-reports/accountledgerreport\"],\r\n          {\r\n            queryParams: {\r\n              mode: 'DRILL',\r\n              selectedDiv: this.reportparam.DIV\r\n            }\r\n          }\r\n        );\r\n        break;\r\n      case 'Party Ledger Report':\r\n        case 'Party Ledger Report_1':\r\n          case 'Party Ledger Report_2':\r\n        this.resolveDrillDownParam(this.reportmasterDetail.DRILLTO, data, data['TYPE']);\r\n        this.router.navigate(\r\n          [\"/pages/financialreports/account-ledger-reports/partyledgerreport\"],\r\n          {\r\n            queryParams: {\r\n              mode: 'DRILL',\r\n\r\n            }\r\n          }\r\n        );\r\n        break;\r\n      case 'Day Book Report_1':\r\n      case 'VTYPE':\r\n        this.resolveDrillDownParam(this.reportmasterDetail.DRILLTO, data);\r\n        this.router.navigate(\r\n          [\"/pages/financialreports/registerBookReports/day-book-report\"],\r\n          {\r\n            queryParams: {\r\n              mode: 'DRILL'\r\n            }\r\n          }\r\n        );\r\n        break;\r\n      case 'Summary Ledger Report':\r\n        this.resolveDrillDownParam(this.reportmasterDetail.DRILLTO, data, data['TYPE'], this.reportMainService.ReportFilterObject.ACIDwithPA, this.reportMainService.ReportFilterObject.ACCODEwithSL);\r\n        this.router.navigate(\r\n          [\"/pages/financialreports/account-ledger-reports/summaryledgerreport\"],\r\n          {\r\n            queryParams: {\r\n              mode: 'DRILL'\r\n            }\r\n          }\r\n        );\r\n        break;\r\n      case 'Summary Party Ledger Report':\r\n        this.resolveDrillDownParam(this.reportmasterDetail.DRILLTO, data, data['TYPE'], this.reportMainService.ReportFilterObject.ACIDwithPA, this.reportMainService.ReportFilterObject.ACCODEwithSL);\r\n        this.router.navigate(\r\n          [\"/pages/financialreports/account-ledger-reports/summarypartyledger\"],\r\n          {\r\n            queryParams: {\r\n              mode: 'DRILL'\r\n            }\r\n          }\r\n        );\r\n        break;\r\n      case 'Sub Ledger Report':\r\n        this.resolveDrillDownParam(this.reportmasterDetail.DRILLTO, data, data['TYPE'], this.reportMainService.ReportFilterObject.ACIDwithPA, this.reportMainService.ReportFilterObject.ACCODEwithSL);\r\n        this.router.navigate(\r\n          [\"/pages/financialreports/account-ledger-reports/sub-ledger-report\"],\r\n          {\r\n            queryParams: {\r\n              mode: 'DRILL'\r\n            }\r\n          }\r\n        );\r\n        break;\r\n\r\n\r\n      case 'VOUCHER':\r\n        if (isNullOrUndefined(data[this.reportmasterDetail.DRILLKEY])) return;\r\n        this.router.navigate(\r\n          [this.getDrillRouteVoucherWise(data[this.reportmasterDetail.DRILLKEY])],\r\n          {\r\n            queryParams: {\r\n              mode: 'DRILL',\r\n              voucher: data[this.reportmasterDetail.DRILLKEY],\r\n              returnUrl: this.activeurlpath,\r\n              pcl: this.masterService.PCL_VALUE,\r\n              Div: this.reportparam.DIV\r\n            }\r\n          }\r\n        );\r\n        break;\r\n      case 'Debtors Report':\r\n        this.resolveDrillDownParam(this.reportmasterDetail.DRILLTO, data, data['TYPE']);\r\n        this.router.navigate(\r\n          [\"/pages/financialreports/additionalreport/debtorsreport\"],\r\n          {\r\n            queryParams: {\r\n              mode: 'DRILL'\r\n            }\r\n          }\r\n        );\r\n        break;\r\n      case 'Creditors Report':\r\n        this.resolveDrillDownParam(this.reportmasterDetail.DRILLTO, data, data['TYPE']);\r\n        this.router.navigate(\r\n          [\"/pages/financialreports/additionalreport/creditorsreport\"],\r\n          {\r\n            queryParams: {\r\n              mode: 'DRILL'\r\n            }\r\n          }\r\n        );\r\n        break;\r\n      case 'Debtors Bill Tracking Report':\r\n        case 'Debtors Bill Tracking Report_1':\r\n        this.resolveDrillDownParam(this.reportmasterDetail.DRILLTO, data, data['TYPE']);\r\n        this.router.navigate(\r\n          [\"/pages/financialreports/additionalreport/bill-tracking-report\"],\r\n          {\r\n            queryParams: {\r\n              mode: 'DRILL'\r\n            }\r\n          }\r\n        );\r\n        break;\r\n        case 'Creditors Bill Tracking Report':\r\n          case 'Creditors Bill Tracking Report_1':\r\n        this.resolveDrillDownParam(this.reportmasterDetail.DRILLTO, data, data['TYPE']);\r\n        this.router.navigate(\r\n          [\"/pages/financialreports/additionalreport/creditorsbill-tracking-report\"],\r\n          {\r\n            queryParams: {\r\n              mode: 'DRILL'\r\n            }\r\n          }\r\n        );\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  getDrillRouteVoucherWise(voucherNo: string): string {\r\n\r\n    let voucher = voucherNo && voucherNo.substring(0, 2).toUpperCase();\r\n    switch (voucher) {\r\n      case 'JV':\r\n        return '/pages/account/acvouchers/journal-voucher';\r\n      case 'PV':\r\n        return '/pages/account/acvouchers/expense-voucher';\r\n      case 'RV':\r\n        return '/pages/account/acvouchers/income-voucher';\r\n      case 'CN':\r\n        case 'RR':\r\n        // ////console.log(\"@@this.CNDN_MODE-CN\", this.CNDN_MODE)\r\n        // ////console.log(\"@@CN- this.masterService.PCL_VALUE\", this.masterService.PCL_VALUE);\r\n        if (this.CNDN_MODE == 1) {\r\n          return '/pages/account/acvouchers/credit-note';\r\n        } else {\r\n          return '/pages/transaction/sales/add-creditnote-itembase';\r\n        }\r\n      case 'DN':\r\n        case 'DX':\r\n        // ////console.log(\"@@this.CNDN_MODEDN\", this.CNDN_MODE)\r\n        // ////console.log(\"@@DN- this.masterService.PCL_VALUE\", this.masterService.PCL_VALUE)\r\n        if (this.CNDN_MODE == 1) {\r\n          return '/pages/account/acvouchers/debit-note';\r\n        } else {\r\n          return '/pages/transaction/purchases/add-debitnote-itembase';\r\n        }\r\n      case 'CP':\r\n        return '/pages/account/acvouchers/capital-voucher';\r\n      case 'CV':\r\n      case 'CE':\r\n        return '/pages/account/acvouchers/contra-voucher';\r\n      case 'AD':\r\n        return '/pages/account/acvouchers/additional-cost';\r\n      case 'TI':\r\n        case 'SI':\r\n        // ////console.log(\"@@TAX- this.masterService.PCL_VALUE\", this.masterService.PCL_VALUE)\r\n        return '/pages/transaction/sales/addsientry';\r\n      case 'PI':\r\n        // ////console.log(\"@@PI- this.masterService.PCL_VALUE\", this.masterService.PCL_VALUE)\r\n        return '/pages/transaction/purchases/add-purchase-invoice';\r\n      case 'CX':\r\n        return '/pages/account/acvouchers/cellpay-voucher';\r\n        case 'PC':\r\n          return '/pages/account/acvouchers/postdirectory';\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  onRightClick(event, data: any) {\r\n    event.preventDefault();\r\n    if (!this.reportContextMenu.length) return;\r\n    let subject = new Subject<any>();\r\n\r\n    /**\r\n     * determines what to do on context menu option clicked\r\n     */\r\n    this.conTextMenuAction(subject, data);\r\n\r\n\r\n\r\n\r\n\r\n    this.contextMenuView.mouseEvent = event;\r\n    this.contextMenuView.menuItems = this.buildContextMenuItems(subject);\r\n    this.contextMenuView.show = true;\r\n\r\n  }\r\n  private buildContextMenuItems(subject: Subject<any>) {\r\n    let items: MenuItem[] = [];\r\n    for (let ctx of this.reportContextMenu) {\r\n      items.push(new MenuItem(ctx.menuname, ctx.commandname, subject));\r\n    }\r\n    return items;\r\n  }\r\n\r\n  private conTextMenuAction(subject: Subject<any>, drillToData: any) {\r\n    let ovservable = subject.asObservable();\r\n    ovservable.subscribe((item: MenuItem) => {\r\n      this.reportmasterDetail.DRILLTO = item.value;\r\n      if(item.label == \"DRILL TO LEDGER\" || item.label == \"DRILL TO LEDGER (LEFT SIDE)\" || item.label == \"DRILL TO DETAIL\"){\r\n        this.reportmasterDetail.DRILLKEY = 'ACID';\r\n      }\r\n      if(item.label == \"DRILL TO LEDGER (RIGHT SIDE)\"){\r\n        this.reportmasterDetail.DRILLKEY = 'ACID_A';\r\n      }\r\n      this.drillDownReport(drillToData);\r\n      this.contextMenuView.show = true;\r\n    });\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  resolveDrillDownParam(reporttype: string, dataToDrill: any, extraparam: string = null, ACIDWithPA: boolean = false, ACCODEWithSL: boolean = false) {\r\n    this.reportService.drillParam = <DrillDownParam>{};\r\n    this.reportService.drillParam.reportparam = <drillDownReportParam>{};\r\n    this.reportService.drillParam.returnUrl = this.arouter.snapshot['_routerState'].url;\r\n    this.reportService.drillParam.reportparam.mode = 'DRILL';\r\n    //console.log(\"@@dataToDrill\", dataToDrill)\r\n    // ////console.log(\"@@extraparam\", extraparam)\r\n    //console.log(\"@@reporttype\", reporttype)\r\n    // ////console.log(\"@@ACIDWithPA\",ACIDWithPA)\r\n    // ////console.log(\"@@heretocheck\",this.reportService.drillParam.reportparam)\r\n    switch (reporttype) {\r\n      case 'Summary Ledger Report':\r\n        this.reportService.drillParam.reportparam.ACID = dataToDrill[this.reportmasterDetail.DRILLKEY];\r\n        this.reportService.drillParam.reportparam.DATE1 = this.reportparam.DATE1;\r\n        this.reportService.drillParam.reportparam.DATE2 = this.reportparam.DATE2;\r\n        this.reportService.drillParam.reportparam.DIV = this.reportparam.DIV;\r\n        this.reportService.drillParam.reportparam.COMID = this.masterService.userProfile.CompanyInfo.COMPANYID;\r\n        this.reportService.drillParam.reportparam.PHISCALID = this.reportparam.PHISCALID;\r\n        this.reportService.drillParam.reportparam.CUSTOMERNAME = this.reportmasterDetail.DRILLKEY=='ACID_A'?dataToDrill['ACNAME_A']:dataToDrill['ACNAME'];\r\n\r\n        if (extraparam == \"G\") {\r\n          // ////console.log(\"@@dataToDrill['ACID']\", dataToDrill['ACID'])\r\n\r\n          this.reportService.drillParam.reportname = 'Summary Ledger Report';\r\n          this.reportService.drillParam.reportparam.AREA = \"%\";\r\n          this.reportService.drillParam.reportparam.COSTCENTER = this.reportparam.CCENTER?this.reportparam.CCENTER:this.reportparam.COSTCENTER;\r\n          this.reportService.drillParam.reportparam.CCENTER = this.reportparam.CCENTER?this.reportparam.CCENTER:this.reportparam.COSTCENTER;\r\n          this.reportService.drillParam.reportparam.ISPARTYGROUPLEDGER = \"0\";\r\n          this.reportService.drillParam.reportparam.PARENT = this.reportService.drillParam.reportparam.ACID;\r\n          this.reportService.drillParam.reportparam.REPORTTYPE = 0;\r\n\r\n          let summary = this.reportMainService.previouslyLoadedReportList.findIndex(report => report.reportname == 'Account Group Ledger Report');\r\n          if (summary >= 0) {\r\n            this.reportMainService.previouslyLoadedReportList.splice(summary, 1)\r\n          }\r\n          this.reportMainService.previouslyLoadedReportList.push(\r\n            {\r\n              reportname: 'Account Group Ledger Report',\r\n              activeurlpath: '/pages/financialreports/account-ledger-reports/summaryledgerreport',\r\n              activerurlpath2: 'summaryledgerreport'\r\n            });\r\n          return \"/pages/financialreports/account-ledger-reports/summaryledgerreport\";\r\n        } else if (ACCODEWithSL == false && ACIDWithPA == false && (dataToDrill['ACID'] != 'AG001001' && dataToDrill['ACID'] != 'AG001002')) {\r\n          this.reportService.drillParam.reportname = 'Account Ledger Report';\r\n          this.reportService.drillParam.reportparam.IGNOREOPPOSITAC = 0;\r\n          this.reportService.drillParam.reportparam.MERGEREPORT = 0;\r\n          this.reportService.drillParam.reportparam.REPORTTYPE = 0;\r\n          this.reportService.drillParam.reportparam.SHOWNARATION = 0;\r\n          this.reportService.drillParam.reportparam.SHOWNDATE = 0;\r\n          this.reportService.drillParam.reportparam.COSTCENTER = this.reportparam.CCENTER?this.reportparam.CCENTER:this.reportparam.COSTCENTER;\r\n          this.reportService.drillParam.reportparam.CCENTER = this.reportparam.CCENTER?this.reportparam.CCENTER:this.reportparam.COSTCENTER;\r\n          this.reportService.drillParam.reportparam.REPORTTYPE = 2;\r\n\r\n          let acc = this.reportMainService.previouslyLoadedReportList.findIndex(report => report.reportname == 'Account Ledger Report');\r\n          if (acc >= 0) {\r\n            this.reportMainService.previouslyLoadedReportList.splice(acc, 1)\r\n          }\r\n          this.reportMainService.previouslyLoadedReportList.push(\r\n            {\r\n              reportname: 'Account Ledger Report',\r\n              activeurlpath: '/pages/financialreports/account-ledger-reports/accountledgerreport',\r\n              activerurlpath2: 'accountledgerreport'\r\n            });\r\n          return \"/pages/financialreports/account-ledger-reports/accountledgerreport\";\r\n        } else if (ACCODEWithSL == false && ACIDWithPA == true && (dataToDrill['ACID'] != 'AG001001' && dataToDrill['ACID'] != 'AG001002')) {\r\n          this.reportService.drillParam.reportname = 'Party Ledger Report';\r\n          this.reportService.drillParam.reportparam.IGNOREOPPOSITAC = 0;\r\n          this.reportService.drillParam.reportparam.MERGEREPORT = 0;\r\n          this.reportService.drillParam.reportparam.REPORTTYPE = 0;\r\n          this.reportService.drillParam.reportparam.SHOWNARATION = 0;\r\n          this.reportService.drillParam.reportparam.SHOWNDATE = 0;\r\n          this.reportService.drillParam.reportparam.COSTCENTER = this.reportparam.CCENTER?this.reportparam.CCENTER:this.reportparam.COSTCENTER;\r\n          this.reportService.drillParam.reportparam.CCENTER = this.reportparam.CCENTER?this.reportparam.CCENTER:this.reportparam.COSTCENTER;\r\n\r\n          if (this.reportMainService.PartyLedger_loadedTimes == 0) {\r\n            this.reportMainService.previouslyLoadedReportList.push(\r\n              {\r\n                reportname: 'Party Ledger Report',\r\n                activeurlpath: '/pages/financialreports/account-ledger-reports/partyledgerreport',\r\n                activerurlpath2: 'partyledgerreport',\r\n                instanceWiseRepName: 'Party Ledger Report' + this.reportMainService.PartyLedger_loadedTimes,\r\n              });\r\n          } else {\r\n            this.reportMainService.previouslyLoadedReportList.push(\r\n              {\r\n                reportname: 'Party Ledger Report' + '_' + this.reportMainService.PartyLedger_loadedTimes,\r\n                activeurlpath: '/pages/financialreports/account-ledger-reports/partyledgerreport',\r\n                activerurlpath2: 'partyledgerreport',\r\n                instanceWiseRepName: 'Party Ledger Report' + this.reportMainService.PartyLedger_loadedTimes,\r\n              });\r\n          }\r\n          this.instanceWiseRepName = 'Party Ledger Report' + this.reportMainService.PartyLedger_loadedTimes;\r\n          this.storeAndUpdateReportDataStore(this.reportService.drillParam, this.report_Result);\r\n          this.reportMainService.PartyLedger_loadedTimes = this.reportMainService.PartyLedger_loadedTimes + 1;\r\n          return \"/pages/financialreports/account-ledger-reports/partyledgerreport\";\r\n\r\n        } else if (ACCODEWithSL == true) {\r\n          this.reportService.drillParam.reportname = 'Sub Ledger Report';\r\n          this.reportService.drillParam.reportparam.IGNOREOPPOSITAC = 0;\r\n          this.reportService.drillParam.reportparam.MERGEREPORT = 0;\r\n          this.reportService.drillParam.reportparam.REPORTTYPE = 0;\r\n          this.reportService.drillParam.reportparam.SHOWNARATION = 0;\r\n          this.reportService.drillParam.reportparam.SHOWNDATE = 0;\r\n          this.reportService.drillParam.reportparam.COSTCENTER = this.reportparam.CCENTER?this.reportparam.CCENTER:this.reportparam.COSTCENTER;\r\n          this.reportService.drillParam.reportparam.CCENTER = this.reportparam.CCENTER?this.reportparam.CCENTER:this.reportparam.COSTCENTER;\r\n\r\n          let sub = this.reportMainService.previouslyLoadedReportList.findIndex(report => report.reportname == 'Sub Ledger Report');\r\n          if (sub >= 0) {\r\n            this.reportMainService.previouslyLoadedReportList.splice(sub, 1)\r\n          }\r\n          this.reportMainService.previouslyLoadedReportList.push(\r\n            {\r\n              reportname: 'Sub Ledger Report',\r\n              activeurlpath: '/pages/financialreports/account-ledger-reports/sub-ledger-report',\r\n              activerurlpath2: 'sub-ledger-report'\r\n            });\r\n          return \"/pages/financialreports/account-ledger-reports/sub-ledger-report\";\r\n        }\r\n\r\n        break;\r\n\r\n      case 'Day Book Report_1':\r\n      case 'VTYPE':\r\n        this.reportService.drillParam.reportname = 'Day Book Report_1';\r\n        this.reportService.drillParam.reportparam.COMID = this.reportparam.COMID;\r\n        this.reportService.drillParam.reportparam.DATE1 =  dataToDrill['DATE']?dataToDrill['DATE']:this.reportparam.DATE1;\r\n        this.reportService.drillParam.reportparam.DATE2 =  dataToDrill['DATE']?dataToDrill['DATE']:this.reportparam.DATE2;\r\n        this.reportService.drillParam.reportparam.BSDATE1 =  dataToDrill['BSDATE']?dataToDrill['BSDATE']:this.reportparam.BSDATE1;\r\n        this.reportService.drillParam.reportparam.BSDATE2 =  dataToDrill['BSDATE']?dataToDrill['BSDATE']:this.reportparam.BSDATE2;\r\n        this.reportService.drillParam.reportparam.DETAILREPORT = \"1\";\r\n        this.reportService.drillParam.reportparam.DIV = this.reportparam.DIV;\r\n        this.reportService.drillParam.reportparam.PHISCALID = this.reportparam.PHISCALID;\r\n        this.reportService.drillParam.reportparam.USR = this.reportparam.USR;\r\n        // this.reportService.drillParam.reportparam.VTYPE = this.gerVoucherTypeFromName(this.reportmasterDetail.DRILLKEY);\r\n        this.reportService.drillParam.reportparam.VTYPE = dataToDrill['VOUCHER_ID']?dataToDrill['VOUCHER_ID']:this.gerVoucherTypeFromName(dataToDrill['VOUCHERNAME']);\r\n        break;\r\n      case 'Account Ledger Report':\r\n        //console.log(\"@@Account Ledger Report\",this.reportparam)\r\n        this.reportService.drillParam.reportparam.ACID = dataToDrill[this.reportmasterDetail.DRILLKEY];\r\n        this.reportService.drillParam.reportparam.DATE1 = dataToDrill['DATE']?dataToDrill['DATE']:(this.reportparam.DATE1?this.reportparam.DATE1:this.masterService.PhiscalObj.BeginDate.split('T')[0]);\r\n        this.reportService.drillParam.reportparam.DATE2 = dataToDrill['DATE']?dataToDrill['DATE']:(this.reportparam.DATE2?this.reportparam.DATE2:this.reportparam.DATE);\r\n        this.reportService.drillParam.reportparam.BSDATE1 = dataToDrill['BSDATE']?dataToDrill['BSDATE']:(this.reportparam.BSDATE1?this.reportparam.BSDATE1:this.masterService.toBSDate(this.reportService.drillParam.reportparam.DATE1 ));\r\n        this.reportService.drillParam.reportparam.BSDATE2 = dataToDrill['BSDATE']?dataToDrill['BSDATE']:(this.reportparam.BSDATE2?this.reportparam.BSDATE2:this.reportparam.BSDATE);\r\n        this.reportService.drillParam.reportparam.DIV = this.reportparam.DIV;\r\n        this.reportService.drillParam.reportparam.COMID = this.masterService.userProfile.CompanyInfo.COMPANYID;\r\n        this.reportService.drillParam.reportparam.PHISCALID = this.reportparam.PHISCALID;\r\n\r\n        this.reportService.drillParam.reportname = 'Account Ledger Report';\r\n        this.reportService.drillParam.reportparam.IGNOREOPPOSITAC = 0;\r\n        this.reportService.drillParam.reportparam.MERGEREPORT = 0;\r\n        this.reportService.drillParam.reportparam.REPORTTYPE = 0;\r\n        this.reportService.drillParam.reportparam.SHOWNARATION = 0;\r\n        this.reportService.drillParam.reportparam.SHOWNDATE = 0;\r\n        this.reportService.drillParam.reportparam.COSTCENTER = this.reportparam.CCENTER?this.reportparam.CCENTER:this.reportparam.COSTCENTER;\r\n        this.reportService.drillParam.reportparam.CCENTER = this.reportparam.CCENTER?this.reportparam.CCENTER:this.reportparam.COSTCENTER;\r\n        this.reportService.drillParam.reportparam.CUSTOMERNAME = this.reportmasterDetail.DRILLKEY=='ACID_A'?dataToDrill['ACNAME_A']:(dataToDrill['ACNAME']?dataToDrill['ACNAME']:this.reportparam.ACNAME);\r\n        this.reportService.drillParam.reportparam.PARENT = this.reportService.drillParam.reportparam.ACID;\r\n        this.reportService.drillParam.reportparam.ACNAME = this.reportmasterDetail.DRILLKEY=='ACID_A'?dataToDrill['ACNAME_A']:dataToDrill['ACNAME'];\r\n\r\n        let accountledger1 = this.reportMainService.previouslyLoadedReportList.findIndex(report => report.reportname == 'Account Ledger Report');\r\n        if (accountledger1 >= 0) {\r\n          this.reportMainService.previouslyLoadedReportList.splice(accountledger1, 1)\r\n        }\r\n        this.reportMainService.previouslyLoadedReportList.push(\r\n          {\r\n            reportname: 'Account Ledger Report',\r\n            activeurlpath: '/pages/financialreports/account-ledger-reports/accountledgerreport',\r\n            activerurlpath2: 'accountledgerreport'\r\n          });\r\n        break;\r\n        case 'Account Ledger Report_1':\r\n          this.reportService.drillParam.reportparam.ACID = dataToDrill[this.reportmasterDetail.DRILLKEY];\r\n          this.reportService.drillParam.reportparam.DATE1 = dataToDrill['DATE']?dataToDrill['DATE']:(this.reportparam.DATE1?this.reportparam.DATE1:this.masterService.PhiscalObj.BeginDate.split('T')[0]);\r\n        this.reportService.drillParam.reportparam.DATE2 = dataToDrill['DATE']?dataToDrill['DATE']:(this.reportparam.DATE2?this.reportparam.DATE2:this.reportparam.DATE);\r\n        this.reportService.drillParam.reportparam.BSDATE1 = dataToDrill['BSDATE']?dataToDrill['BSDATE']:(this.reportparam.BSDATE1?this.reportparam.BSDATE1:this.masterService.toBSDate(this.reportService.drillParam.reportparam.DATE1 ));\r\n        this.reportService.drillParam.reportparam.BSDATE2 = dataToDrill['BSDATE']?dataToDrill['BSDATE']:(this.reportparam.BSDATE2?this.reportparam.BSDATE2:this.reportparam.BSDATE);\r\n        this.reportService.drillParam.reportparam.DIV = this.reportparam.DIV;\r\n        this.reportService.drillParam.reportparam.COMID = this.masterService.userProfile.CompanyInfo.COMPANYID;\r\n        this.reportService.drillParam.reportparam.PHISCALID = this.reportparam.PHISCALID;\r\n\r\n        this.reportService.drillParam.reportname = 'Account Ledger Report_1';\r\n        this.reportService.drillParam.reportparam.IGNOREOPPOSITAC = 1;\r\n        this.reportService.drillParam.reportparam.MERGEREPORT = 0;\r\n        this.reportService.drillParam.reportparam.REPORTTYPE = 0;\r\n        this.reportService.drillParam.reportparam.SHOWNARATION = 0;\r\n        this.reportService.drillParam.reportparam.SHOWNDATE = 1;\r\n        this.reportService.drillParam.reportparam.COSTCENTER = this.reportparam.CCENTER?this.reportparam.CCENTER:this.reportparam.COSTCENTER;\r\n        this.reportService.drillParam.reportparam.CCENTER = this.reportparam.CCENTER?this.reportparam.CCENTER:this.reportparam.COSTCENTER;\r\n        this.reportService.drillParam.reportparam.CUSTOMERNAME = this.reportmasterDetail.DRILLKEY=='ACID_A'?dataToDrill['ACNAME_A']:(dataToDrill['ACNAME']?dataToDrill['ACNAME']:this.reportparam.ACNAME);\r\n        this.reportService.drillParam.reportparam.PARENT = this.reportService.drillParam.reportparam.ACID;\r\n        this.reportService.drillParam.reportparam.ACNAME = this.reportmasterDetail.DRILLKEY=='ACID_A'?dataToDrill['ACNAME_A']:dataToDrill['ACNAME'];\r\n        this.reportService.drillParam.reportparam.SUMMARYLEDGER = 1;\r\n\r\n        let accountledger_1 = this.reportMainService.previouslyLoadedReportList.findIndex(report => report.reportname == 'Account Ledger Report');\r\n        if (accountledger_1 >= 0) {\r\n          this.reportMainService.previouslyLoadedReportList.splice(accountledger_1, 1)\r\n        }\r\n        this.reportMainService.previouslyLoadedReportList.push(\r\n          {\r\n            reportname: 'Account Ledger Report',\r\n            activeurlpath: '/pages/financialreports/account-ledger-reports/accountledgerreport',\r\n            activerurlpath2: 'accountledgerreport'\r\n          });\r\n        break;\r\n      case 'Account Ledger Report_2':\r\n        this.reportService.drillParam.reportparam.ACID = dataToDrill[this.reportmasterDetail.DRILLKEY];\r\n        this.reportService.drillParam.reportparam.DATE1 = dataToDrill['DATE']?dataToDrill['DATE']:(this.reportparam.DATE1?this.reportparam.DATE1:this.masterService.PhiscalObj.BeginDate.split('T')[0]);\r\n        this.reportService.drillParam.reportparam.DATE2 = dataToDrill['DATE']?dataToDrill['DATE']:(this.reportparam.DATE2?this.reportparam.DATE2:this.reportparam.DATE);\r\n        this.reportService.drillParam.reportparam.BSDATE1 = dataToDrill['BSDATE']?dataToDrill['BSDATE']:(this.reportparam.BSDATE1?this.reportparam.BSDATE1:this.masterService.toBSDate(this.reportService.drillParam.reportparam.DATE1 ));\r\n        this.reportService.drillParam.reportparam.BSDATE2 = dataToDrill['BSDATE']?dataToDrill['BSDATE']:(this.reportparam.BSDATE2?this.reportparam.BSDATE2:this.reportparam.BSDATE);\r\n        this.reportService.drillParam.reportparam.DIV = this.reportparam.DIV;\r\n        this.reportService.drillParam.reportparam.COMID = this.masterService.userProfile.CompanyInfo.COMPANYID;\r\n        this.reportService.drillParam.reportparam.PHISCALID = this.reportparam.PHISCALID;\r\n\r\n        this.reportService.drillParam.reportname = 'Account Ledger Report_2';\r\n        this.reportService.drillParam.reportparam.IGNOREOPPOSITAC = 0;\r\n        this.reportService.drillParam.reportparam.MERGEREPORT = 0;\r\n        this.reportService.drillParam.reportparam.REPORTTYPE = 0;\r\n        this.reportService.drillParam.reportparam.SHOWNARATION = 0;\r\n        this.reportService.drillParam.reportparam.SHOWNDATE = 1;\r\n        this.reportService.drillParam.reportparam.COSTCENTER = this.reportparam.CCENTER?this.reportparam.CCENTER:this.reportparam.COSTCENTER;\r\n        this.reportService.drillParam.reportparam.CCENTER = this.reportparam.CCENTER?this.reportparam.CCENTER:this.reportparam.COSTCENTER;\r\n        this.reportService.drillParam.reportparam.CUSTOMERNAME = this.reportmasterDetail.DRILLKEY=='ACID_A'?dataToDrill['ACNAME_A']:(dataToDrill['ACNAME']?dataToDrill['ACNAME']:this.reportparam.ACNAME);\r\n        this.reportService.drillParam.reportparam.PARENT = this.reportService.drillParam.reportparam.ACID;\r\n        this.reportService.drillParam.reportparam.ACNAME = this.reportmasterDetail.DRILLKEY=='ACID_A'?dataToDrill['ACNAME_A']:dataToDrill['ACNAME'];\r\n        this.reportService.drillParam.reportparam.SUMMARYLEDGER = 1;\r\n\r\n        let accountledger2 = this.reportMainService.previouslyLoadedReportList.findIndex(report => report.reportname == 'Account Ledger Report');\r\n        if (accountledger2 >= 0) {\r\n          this.reportMainService.previouslyLoadedReportList.splice(accountledger2, 1)\r\n        }\r\n        this.reportMainService.previouslyLoadedReportList.push(\r\n          {\r\n            reportname: 'Account Ledger Report',\r\n            activeurlpath: '/pages/financialreports/account-ledger-reports/accountledgerreport',\r\n            activerurlpath2: 'accountledgerreport'\r\n          });\r\n        break;\r\n      case 'Party Ledger Report':\r\n        //console.log(\"@@Party Ledger Report\",this.reportparam)\r\n        this.reportService.drillParam.reportparam.ACID = dataToDrill[this.reportmasterDetail.DRILLKEY];\r\n        this.reportService.drillParam.reportparam.DATE1 = dataToDrill['DATE']?dataToDrill['DATE']:(this.reportparam.DATE1?this.reportparam.DATE1:this.masterService.PhiscalObj.BeginDate.split('T')[0]);\r\n        this.reportService.drillParam.reportparam.DATE2 = dataToDrill['DATE']?dataToDrill['DATE']:(this.reportparam.DATE2?this.reportparam.DATE2:this.reportparam.DATE);\r\n        this.reportService.drillParam.reportparam.BSDATE1 = dataToDrill['BSDATE']?dataToDrill['BSDATE']:(this.reportparam.BSDATE1?this.reportparam.BSDATE1:this.masterService.toBSDate(this.reportService.drillParam.reportparam.DATE1 ));\r\n        this.reportService.drillParam.reportparam.BSDATE2 = dataToDrill['BSDATE']?dataToDrill['BSDATE']:(this.reportparam.BSDATE2?this.reportparam.BSDATE2:this.reportparam.BSDATE);\r\n        this.reportService.drillParam.reportparam.DIV = this.reportparam.DIV;\r\n        this.reportService.drillParam.reportparam.COMID = this.masterService.userProfile.CompanyInfo.COMPANYID;\r\n        this.reportService.drillParam.reportparam.PHISCALID = this.reportparam.PHISCALID;\r\n\r\n        this.reportService.drillParam.reportname = 'Party Ledger Report';\r\n        this.reportService.drillParam.reportparam.IGNOREOPPOSITAC = 0;\r\n        this.reportService.drillParam.reportparam.MERGEREPORT = 0;\r\n        this.reportService.drillParam.reportparam.REPORTTYPE = 0;\r\n        this.reportService.drillParam.reportparam.SHOWNARATION = 0;\r\n        this.reportService.drillParam.reportparam.SHOWNDATE = 0;\r\n        this.reportService.drillParam.reportparam.COSTCENTER = this.reportparam.COSTCENTER?this.reportparam.COSTCENTER:this.reportparam.CCENTER;\r\n        this.reportService.drillParam.reportparam.CCENTER = this.reportparam.CCENTER?this.reportparam.CCENTER:this.reportparam.COSTCENTER;\r\n        this.reportMainService.PartyLedgerObj.EnableCombineLedger = false;\r\n        this.reportService.drillParam.reportparam.CUSTOMERNAME=this.reportmasterDetail.DRILLKEY=='ACID_A'?dataToDrill['ACNAME_A']:(dataToDrill['CUSTOMER NAME'] ? dataToDrill['CUSTOMER NAME'] : (dataToDrill['ACNAME'] ? dataToDrill['ACNAME'] : this.reportparam.ACNAME));\r\n        this.reportService.drillParam.reportparam.ACNAME=this.reportmasterDetail.DRILLKEY=='ACID_A'?dataToDrill['ACNAME_A']:(dataToDrill['CUSTOMER NAME'] ? dataToDrill['CUSTOMER NAME'] : dataToDrill['ACNAME']);\r\n\r\n\r\n        if (this.reportMainService.PartyLedger_loadedTimes == 0) {\r\n          this.reportMainService.previouslyLoadedReportList.push(\r\n            {\r\n              reportname: 'Party Ledger Report',\r\n              activeurlpath: '/pages/financialreports/account-ledger-reports/partyledgerreport',\r\n              activerurlpath2: 'partyledgerreport',\r\n              instanceWiseRepName: 'Party Ledger Report' + this.reportMainService.PartyLedger_loadedTimes,\r\n            });\r\n        } else {\r\n          this.reportMainService.previouslyLoadedReportList.push(\r\n            {\r\n              reportname: 'Party Ledger Report' + '_' + this.reportMainService.PartyLedger_loadedTimes,\r\n              activeurlpath: '/pages/financialreports/account-ledger-reports/partyledgerreport',\r\n              activerurlpath2: 'partyledgerreport',\r\n              instanceWiseRepName: 'Party Ledger Report' + this.reportMainService.PartyLedger_loadedTimes,\r\n            });\r\n        }\r\n        this.instanceWiseRepName = 'Party Ledger Reportt' + this.reportMainService.PartyLedger_loadedTimes;\r\n        this.storeAndUpdateReportDataStore(this.reportService.drillParam, this.report_Result);\r\n        this.reportMainService.PartyLedger_loadedTimes = this.reportMainService.PartyLedger_loadedTimes + 1;\r\n\r\n\r\n        break;\r\n\r\n        case 'Party Ledger Report_1':\r\n          // ////console.log(\"@@reportparam\",this.reportparam)\r\n          this.reportService.drillParam.reportparam.ACID = dataToDrill[this.reportmasterDetail.DRILLKEY];\r\n          this.reportService.drillParam.reportparam.DATE1 = dataToDrill['DATE']?dataToDrill['DATE']:(this.reportparam.DATE1?this.reportparam.DATE1:this.masterService.PhiscalObj.BeginDate.split('T')[0]);\r\n          this.reportService.drillParam.reportparam.DATE2 = dataToDrill['DATE']?dataToDrill['DATE']:(this.reportparam.DATE2?this.reportparam.DATE2:this.reportparam.DATE);\r\n          this.reportService.drillParam.reportparam.BSDATE1 = dataToDrill['BSDATE']?dataToDrill['BSDATE']:(this.reportparam.BSDATE1?this.reportparam.BSDATE1:this.masterService.toBSDate(this.reportService.drillParam.reportparam.DATE1 ));\r\n          this.reportService.drillParam.reportparam.BSDATE2 = dataToDrill['BSDATE']?dataToDrill['BSDATE']:(this.reportparam.BSDATE2?this.reportparam.BSDATE2:this.reportparam.BSDATE);\r\n          this.reportService.drillParam.reportparam.DIV = this.reportparam.DIV;\r\n          this.reportService.drillParam.reportparam.COMID = this.masterService.userProfile.CompanyInfo.COMPANYID;\r\n          this.reportService.drillParam.reportparam.PHISCALID = this.reportparam.PHISCALID;\r\n  \r\n          this.reportService.drillParam.reportname = 'Party Ledger Report_1';\r\n          this.reportService.drillParam.reportparam.IGNOREOPPOSITAC = 1;\r\n          this.reportService.drillParam.reportparam.MERGEREPORT = 0;\r\n          this.reportService.drillParam.reportparam.REPORTTYPE = 0;\r\n          this.reportService.drillParam.reportparam.SHOWNARATION = 0;\r\n          this.reportService.drillParam.reportparam.SHOWNDATE = 1;\r\n          this.reportService.drillParam.reportparam.COSTCENTER = this.reportparam.COSTCENTER?this.reportparam.COSTCENTER:this.reportparam.CCENTER;\r\n          this.reportService.drillParam.reportparam.CCENTER = this.reportparam.CCENTER?this.reportparam.CCENTER:this.reportparam.COSTCENTER;\r\n          this.reportMainService.PartyLedgerObj.EnableCombineLedger = false;\r\n          this.reportService.drillParam.reportparam.CUSTOMERNAME=this.reportmasterDetail.DRILLKEY=='ACID_A'?dataToDrill['ACNAME_A']:(dataToDrill['CUSTOMER NAME'] ? dataToDrill['CUSTOMER NAME'] : (dataToDrill['ACNAME'] ? dataToDrill['ACNAME'] : this.reportparam.ACNAME));\r\n          this.reportService.drillParam.reportparam.ACNAME=this.reportmasterDetail.DRILLKEY=='ACID_A'?dataToDrill['ACNAME_A']:(dataToDrill['CUSTOMER NAME'] ? dataToDrill['CUSTOMER NAME'] : dataToDrill['ACNAME']);\r\n          this.reportService.drillParam.reportparam.SUMMARYLEDGER = 1;\r\n  \r\n          if (this.reportMainService.PartyLedger_loadedTimes == 0) {\r\n            this.reportMainService.previouslyLoadedReportList.push(\r\n              {\r\n                reportname: 'Party Ledger Report',\r\n                activeurlpath: '/pages/financialreports/account-ledger-reports/partyledgerreport',\r\n                activerurlpath2: 'partyledgerreport',\r\n                instanceWiseRepName: 'Party Ledger Report' + this.reportMainService.PartyLedger_loadedTimes,\r\n              });\r\n          } else {\r\n            this.reportMainService.previouslyLoadedReportList.push(\r\n              {\r\n                reportname: 'Party Ledger Report' + '_' + this.reportMainService.PartyLedger_loadedTimes,\r\n                activeurlpath: '/pages/financialreports/account-ledger-reports/partyledgerreport',\r\n                activerurlpath2: 'partyledgerreport',\r\n                instanceWiseRepName: 'Party Ledger Report' + this.reportMainService.PartyLedger_loadedTimes,\r\n              });\r\n          }\r\n          this.instanceWiseRepName = 'Party Ledger Report' + this.reportMainService.PartyLedger_loadedTimes;\r\n          this.storeAndUpdateReportDataStore(this.reportService.drillParam, this.report_Result);\r\n          this.reportMainService.PartyLedger_loadedTimes = this.reportMainService.PartyLedger_loadedTimes + 1; \r\n          break;\r\n\r\n        case 'Party Ledger Report_2':\r\n          //console.log(\"@@Party Ledger Report_2\",this.reportparam)\r\n          this.reportService.drillParam.reportparam.ACID = dataToDrill[this.reportmasterDetail.DRILLKEY];\r\n          this.reportService.drillParam.reportparam.DATE1 = dataToDrill['DATE']?dataToDrill['DATE']:(this.reportparam.DATE1?this.reportparam.DATE1:this.masterService.PhiscalObj.BeginDate.split('T')[0]);\r\n          this.reportService.drillParam.reportparam.DATE2 = dataToDrill['DATE']?dataToDrill['DATE']:(this.reportparam.DATE2?this.reportparam.DATE2:this.reportparam.DATE);\r\n          this.reportService.drillParam.reportparam.BSDATE1 = dataToDrill['BSDATE']?dataToDrill['BSDATE']:(this.reportparam.BSDATE1?this.reportparam.BSDATE1:this.masterService.toBSDate(this.reportService.drillParam.reportparam.DATE1 ));\r\n          this.reportService.drillParam.reportparam.BSDATE2 = dataToDrill['BSDATE']?dataToDrill['BSDATE']:(this.reportparam.BSDATE2?this.reportparam.BSDATE2:this.reportparam.BSDATE);\r\n          this.reportService.drillParam.reportparam.DIV = this.reportparam.DIV;\r\n          this.reportService.drillParam.reportparam.COMID = this.masterService.userProfile.CompanyInfo.COMPANYID;\r\n          this.reportService.drillParam.reportparam.PHISCALID = this.reportparam.PHISCALID;\r\n  \r\n          this.reportService.drillParam.reportname = 'Party Ledger Report_2';\r\n          this.reportService.drillParam.reportparam.IGNOREOPPOSITAC = 0;\r\n          this.reportService.drillParam.reportparam.MERGEREPORT = 0;\r\n          this.reportService.drillParam.reportparam.REPORTTYPE = 0;\r\n          this.reportService.drillParam.reportparam.SHOWNARATION = 0;\r\n          this.reportService.drillParam.reportparam.SHOWNDATE = 1;\r\n          this.reportService.drillParam.reportparam.COSTCENTER = this.reportparam.COSTCENTER?this.reportparam.COSTCENTER:this.reportparam.CCENTER;\r\n          this.reportService.drillParam.reportparam.CCENTER = this.reportparam.CCENTER?this.reportparam.CCENTER:this.reportparam.COSTCENTER;\r\n          this.reportMainService.PartyLedgerObj.EnableCombineLedger = false;\r\n          this.reportService.drillParam.reportparam.CUSTOMERNAME=this.reportmasterDetail.DRILLKEY=='ACID_A'?dataToDrill['ACNAME_A']:(dataToDrill['CUSTOMER NAME'] ? dataToDrill['CUSTOMER NAME'] : (dataToDrill['ACNAME'] ? dataToDrill['ACNAME'] : this.reportparam.ACNAME));\r\n          this.reportService.drillParam.reportparam.ACNAME=this.reportmasterDetail.DRILLKEY=='ACID_A'?dataToDrill['ACNAME_A']:(dataToDrill['CUSTOMER NAME'] ? dataToDrill['CUSTOMER NAME'] : dataToDrill['ACNAME']);\r\n          this.reportService.drillParam.reportparam.SUMMARYLEDGER = 1;\r\n  \r\n          if (this.reportMainService.PartyLedger_loadedTimes == 0) {\r\n            this.reportMainService.previouslyLoadedReportList.push(\r\n              {\r\n                reportname: 'Party Ledger Report',\r\n                activeurlpath: '/pages/financialreports/account-ledger-reports/partyledgerreport',\r\n                activerurlpath2: 'partyledgerreport',\r\n                instanceWiseRepName: 'Party Ledger Report' + this.reportMainService.PartyLedger_loadedTimes,\r\n              });\r\n          } else {\r\n            this.reportMainService.previouslyLoadedReportList.push(\r\n              {\r\n                reportname: 'Party Ledger Report' + '_' + this.reportMainService.PartyLedger_loadedTimes,\r\n                activeurlpath: '/pages/financialreports/account-ledger-reports/partyledgerreport',\r\n                activerurlpath2: 'partyledgerreport',\r\n                instanceWiseRepName: 'Party Ledger Report' + this.reportMainService.PartyLedger_loadedTimes,\r\n              });\r\n          }\r\n          this.instanceWiseRepName = 'Party Ledger Reportt' + this.reportMainService.PartyLedger_loadedTimes;\r\n          this.storeAndUpdateReportDataStore(this.reportService.drillParam, this.report_Result);\r\n          this.reportMainService.PartyLedger_loadedTimes = this.reportMainService.PartyLedger_loadedTimes + 1; \r\n          break;\r\n\r\n      case 'Summary Party Ledger Report':\r\n        this.reportService.drillParam.reportparam.ACID = dataToDrill[this.reportmasterDetail.DRILLKEY];\r\n        this.reportService.drillParam.reportparam.DATE1 = this.reportparam.DATE1;\r\n        this.reportService.drillParam.reportparam.DATE2 = this.reportparam.DATE2;\r\n        this.reportService.drillParam.reportparam.DIV = this.reportparam.DIV;\r\n        this.reportService.drillParam.reportparam.COMID = this.masterService.userProfile.CompanyInfo.COMPANYID;\r\n        this.reportService.drillParam.reportparam.PHISCALID = this.reportparam.PHISCALID;\r\n\r\n        if (extraparam === \"G\") {\r\n          this.reportService.drillParam.reportname = 'Summary Party Ledger Report';\r\n          this.reportService.drillParam.reportparam.AREA = \"%\";\r\n          this.reportService.drillParam.reportparam.COSTCENTER = this.reportparam.CCENTER?this.reportparam.CCENTER:this.reportparam.COSTCENTER;\r\n          this.reportService.drillParam.reportparam.CCENTER = this.reportparam.CCENTER?this.reportparam.CCENTER:this.reportparam.COSTCENTER;\r\n          this.reportService.drillParam.reportparam.ISPARTYGROUPLEDGER = \"0\";\r\n          this.reportService.drillParam.reportparam.PARENT = this.reportparam.ACID;\r\n\r\n          let party = this.reportMainService.previouslyLoadedReportList.findIndex(report => report.reportname == 'Summary Party Ledger Report');\r\n          if (party >= 0) {\r\n            this.reportMainService.previouslyLoadedReportList.splice(party, 1)\r\n          }\r\n          this.reportMainService.previouslyLoadedReportList.push(\r\n            {\r\n              reportname: 'Summary Party Ledger Report',\r\n              activeurlpath: '/pages/financialreports/account-ledger-reports/summarypartyledger',\r\n              activerurlpath2: 'summarypartyledger'\r\n            });\r\n          return \"/pages/financialreports/account-ledger-reports/summarypartyledger\";\r\n\r\n        } else if (ACCODEWithSL == false && ACIDWithPA == false) {\r\n          this.reportService.drillParam.reportname = 'Account Ledger Report';\r\n          this.reportService.drillParam.reportparam.IGNOREOPPOSITAC = 0;\r\n          this.reportService.drillParam.reportparam.MERGEREPORT = 0;\r\n          this.reportService.drillParam.reportparam.REPORTTYPE = 0;\r\n          this.reportService.drillParam.reportparam.SHOWNARATION = 0;\r\n          this.reportService.drillParam.reportparam.SHOWNDATE = 0;\r\n          this.reportService.drillParam.reportparam.COSTCENTER = this.reportparam.CCENTER?this.reportparam.CCENTER:this.reportparam.COSTCENTER;\r\n          this.reportService.drillParam.reportparam.CCENTER = this.reportparam.CCENTER?this.reportparam.CCENTER:this.reportparam.COSTCENTER;\r\n\r\n          let accountledger1 = this.reportMainService.previouslyLoadedReportList.findIndex(report => report.reportname == 'Account Ledger Report');\r\n          if (accountledger1 >= 0) {\r\n            this.reportMainService.previouslyLoadedReportList.splice(accountledger1, 1)\r\n          }\r\n          this.reportMainService.previouslyLoadedReportList.push(\r\n            {\r\n              reportname: 'Account Ledger Report',\r\n              activeurlpath: '/pages/financialreports/account-ledger-reports/accountledgerreport',\r\n              activerurlpath2: 'accountledgerreport'\r\n            });\r\n          return \"/pages/financialreports/account-ledger-reports/accountledgerreport\";\r\n\r\n        } else if (ACCODEWithSL == false && ACIDWithPA == true) {\r\n          this.reportService.drillParam.reportname = 'Party Ledger Report';\r\n          this.reportService.drillParam.reportparam.IGNOREOPPOSITAC = 0;\r\n          this.reportService.drillParam.reportparam.MERGEREPORT = 0;\r\n          this.reportService.drillParam.reportparam.REPORTTYPE = 0;\r\n          this.reportService.drillParam.reportparam.SHOWNARATION = 0;\r\n          this.reportService.drillParam.reportparam.SHOWNDATE = 0;\r\n          this.reportService.drillParam.reportparam.COSTCENTER = this.reportparam.CCENTER?this.reportparam.CCENTER:this.reportparam.COSTCENTER;\r\n          this.reportService.drillParam.reportparam.CCENTER = this.reportparam.CCENTER?this.reportparam.CCENTER:this.reportparam.COSTCENTER;\r\n\r\n          if (this.reportMainService.PartyLedger_loadedTimes == 0) {\r\n            this.reportMainService.previouslyLoadedReportList.push(\r\n              {\r\n                reportname: 'Party Ledger Report',\r\n                activeurlpath: '/pages/financialreports/account-ledger-reports/partyledgerreport',\r\n                activerurlpath2: 'partyledgerreport',\r\n                instanceWiseRepName: 'Party Ledger Report' + this.reportMainService.PartyLedger_loadedTimes,\r\n              });\r\n          } else {\r\n            this.reportMainService.previouslyLoadedReportList.push(\r\n              {\r\n                reportname: 'Party Ledger Report' + '_' + this.reportMainService.PartyLedger_loadedTimes,\r\n                activeurlpath: '/pages/financialreports/account-ledger-reports/partyledgerreport',\r\n                activerurlpath2: 'partyledgerreport',\r\n                instanceWiseRepName: 'Party Ledger Report' + this.reportMainService.PartyLedger_loadedTimes,\r\n              });\r\n          }\r\n          this.instanceWiseRepName = 'Party Ledger Report' + this.reportMainService.PartyLedger_loadedTimes;\r\n          this.storeAndUpdateReportDataStore(this.reportService.drillParam, this.report_Result);\r\n          this.reportMainService.PartyLedger_loadedTimes = this.reportMainService.PartyLedger_loadedTimes + 1;\r\n\r\n          return \"/pages/financialreports/account-ledger-reports/partyledgerreport\";\r\n\r\n        } else if (ACCODEWithSL == true) {\r\n          this.reportService.drillParam.reportname = 'Sub Ledger Report';\r\n          this.reportService.drillParam.reportparam.IGNOREOPPOSITAC = 0;\r\n          this.reportService.drillParam.reportparam.MERGEREPORT = 0;\r\n          this.reportService.drillParam.reportparam.REPORTTYPE = 0;\r\n          this.reportService.drillParam.reportparam.SHOWNARATION = 0;\r\n          this.reportService.drillParam.reportparam.SHOWNDATE = 0;\r\n          this.reportService.drillParam.reportparam.COSTCENTER = this.reportparam.CCENTER?this.reportparam.CCENTER:this.reportparam.COSTCENTER;\r\n          this.reportService.drillParam.reportparam.CCENTER = this.reportparam.CCENTER?this.reportparam.CCENTER:this.reportparam.COSTCENTER;\r\n\r\n          let sub = this.reportMainService.previouslyLoadedReportList.findIndex(report => report.reportname == 'Sub Ledger Report');\r\n          if (sub >= 0) {\r\n            this.reportMainService.previouslyLoadedReportList.splice(sub, 1)\r\n          }\r\n          this.reportMainService.previouslyLoadedReportList.push(\r\n            {\r\n              reportname: 'Sub Ledger Report',\r\n              activeurlpath: '/pages/financialreports/account-ledger-reports/sub-ledger-report',\r\n              activerurlpath2: 'sub-ledger-report'\r\n            });\r\n          return \"/pages/financialreports/account-ledger-reports/sub-ledger-report\";\r\n        }\r\n\r\n\r\n        break;\r\n      case 'Sub Ledger Report':\r\n        // ////console.log(\"@@subb\",dataToDrill[this.reportmasterDetail.DRILLKEY])\r\n        var abc = dataToDrill[this.reportmasterDetail.DRILLKEY];\r\n        var xyz = abc.split(\"_\")\r\n        // ////console.log(\"@xyz\",xyz,xyz[0],xyz[1])\r\n\r\n        this.reportService.drillParam.reportparam.SL_ACID = xyz[0];\r\n        this.reportService.drillParam.reportparam.DATE1 = this.reportparam.DATE1;\r\n        this.reportService.drillParam.reportparam.DATE2 = this.reportparam.DATE2;\r\n        this.reportService.drillParam.reportparam.DIV = this.reportparam.DIV;\r\n        this.reportService.drillParam.reportparam.COMID = this.masterService.userProfile.CompanyInfo.COMPANYID;\r\n        this.reportService.drillParam.reportparam.PHISCALID = this.reportparam.PHISCALID;\r\n\r\n        this.reportService.drillParam.reportname = 'Sub Ledger Report';\r\n        this.reportService.drillParam.reportparam.SHOWNDATE = 0;\r\n        this.reportService.drillParam.reportparam.ACID = xyz[1];\r\n        this.reportService.drillParam.reportparam.COSTCENTER = this.reportparam.CCENTER?this.reportparam.CCENTER:this.reportparam.COSTCENTER;\r\n        this.reportService.drillParam.reportparam.CCENTER = this.reportparam.CCENTER?this.reportparam.CCENTER:this.reportparam.COSTCENTER;\r\n        this.reportService.drillParam.reportparam.ACCNAME = this.reportparam.ACCNAME;\r\n        // this.reportService.drillParam.reportparam.SL_ACNAME = this.reportparam.SL_ACNAME;\r\n        this.reportService.drillParam.reportparam.REPORTTYPE = 1;\r\n        this.reportService.drillParam.reportparam.SL_ACNAME = dataToDrill['ACCOUNT'] ? dataToDrill['ACCOUNT'] : dataToDrill['ACNAME'];\r\n\r\n        let sub = this.reportMainService.previouslyLoadedReportList.findIndex(report => report.reportname == 'Sub Ledger Report');\r\n        if (sub >= 0) {\r\n          this.reportMainService.previouslyLoadedReportList.splice(sub, 1)\r\n        }\r\n        this.reportMainService.previouslyLoadedReportList.push(\r\n          {\r\n            reportname: 'Sub Ledger Report',\r\n            activeurlpath: '/pages/financialreports/account-ledger-reports/sub-ledger-report',\r\n            activerurlpath2: 'sub-ledger-report'\r\n          });\r\n\r\n        break;\r\n\r\n      case 'Debtors Report':\r\n        this.reportService.drillParam.reportparam.ACID = dataToDrill[this.reportmasterDetail.DRILLKEY];\r\n        this.reportService.drillParam.reportparam.DATE1 = this.reportparam.DATE1;\r\n        this.reportService.drillParam.reportparam.DATE2 = this.reportparam.DATE2;\r\n        this.reportService.drillParam.reportparam.DIV = this.reportparam.DIV;\r\n        this.reportService.drillParam.reportparam.COMID = this.masterService.userProfile.CompanyInfo.COMPANYID;\r\n        this.reportService.drillParam.reportparam.PHISCALID = this.reportparam.PHISCALID;\r\n\r\n        this.reportService.drillParam.reportname = 'Debtors Report';\r\n        this.reportService.drillParam.reportparam.COSTCENTER = this.reportparam.COSTCENTER?this.reportparam.COSTCENTER:this.reportparam.CCENTER;\r\n        this.reportService.drillParam.reportparam.CCENTER = this.reportparam.CCENTER?this.reportparam.CCENTER:this.reportparam.COSTCENTER;\r\n        this.reportService.drillParam.reportparam.SHOWDPARTYDETAIL = 0;\r\n        this.reportService.drillParam.reportparam.REPORTTYPE = 0;\r\n\r\n        let debitors = this.reportMainService.previouslyLoadedReportList.findIndex(report => report.reportname == 'Debtors Report');\r\n        if (debitors >= 0) {\r\n          this.reportMainService.previouslyLoadedReportList.splice(debitors, 1)\r\n        }\r\n        this.reportMainService.previouslyLoadedReportList.push(\r\n          {\r\n            reportname: 'Debtors Report',\r\n            activeurlpath: '/pages/financialreports/additionalreport/debtorsreport',\r\n            activerurlpath2: 'debtorsreport'\r\n          });\r\n        break;\r\n      case 'Creditors Report':\r\n        this.reportService.drillParam.reportname = 'Creditors Report';\r\n        this.reportService.drillParam.reportparam.ACID = dataToDrill[this.reportmasterDetail.DRILLKEY];\r\n        this.reportService.drillParam.reportparam.DATE1 = this.reportparam.DATE1;\r\n        this.reportService.drillParam.reportparam.DATE2 = this.reportparam.DATE2;\r\n        this.reportService.drillParam.reportparam.DIV = this.reportparam.DIV;\r\n        this.reportService.drillParam.reportparam.COMID = this.masterService.userProfile.CompanyInfo.COMPANYID;\r\n        this.reportService.drillParam.reportparam.PHISCALID = this.reportparam.PHISCALID;\r\n\r\n        this.reportService.drillParam.reportparam.COSTCENTER = this.reportparam.COSTCENTER?this.reportparam.COSTCENTER:this.reportparam.CCENTER;\r\n        this.reportService.drillParam.reportparam.CCENTER = this.reportparam.CCENTER?this.reportparam.CCENTER:this.reportparam.COSTCENTER;\r\n        this.reportService.drillParam.reportparam.SHOWDPARTYDETAIL = 0;\r\n        this.reportService.drillParam.reportparam.REPORTTYPE = 0;\r\n\r\n        let creditors = this.reportMainService.previouslyLoadedReportList.findIndex(report => report.reportname == 'Creditors Report');\r\n        if (creditors >= 0) {\r\n          this.reportMainService.previouslyLoadedReportList.splice(creditors, 1)\r\n        }\r\n        this.reportMainService.previouslyLoadedReportList.push(\r\n          {\r\n            reportname: 'Creditors Report',\r\n            activeurlpath: '/pages/financialreports/additionalreport/creditorsreport',\r\n            activerurlpath2: 'creditorsreport'\r\n          });\r\n          break;\r\n        case 'Debtors Bill Tracking Report':\r\n          case 'Debtors Bill Tracking Report_1':\r\n            this.reportService.drillParam.reportname = reporttype;\r\n            this.reportService.drillParam.reportparam.ACID = dataToDrill[this.reportmasterDetail.DRILLKEY];\r\n            this.reportService.drillParam.reportparam.ACNAME = dataToDrill['CUSTOMER NAME'];\r\n            this.reportService.drillParam.reportparam.DATE1 = this.reportparam.DATE1;\r\n            this.reportService.drillParam.reportparam.DATE2 = this.reportparam.DATE2;\r\n            this.reportService.drillParam.reportparam.DIV = this.reportparam.DIV;\r\n            this.reportService.drillParam.reportparam.COMID = this.masterService.userProfile.CompanyInfo.COMPANYID;\r\n            this.reportService.drillParam.reportparam.COMPANYID = this.masterService.userProfile.CompanyInfo.COMPANYID;\r\n            this.reportService.drillParam.reportparam.PHISCALID = this.reportparam.PHISCALID;\r\n    \r\n            this.reportService.drillParam.reportparam.COSTCENTER = this.reportparam.COSTCENTER?this.reportparam.COSTCENTER:this.reportparam.CCENTER;\r\n            this.reportService.drillParam.reportparam.CCENTER = this.reportparam.CCENTER?this.reportparam.CCENTER:this.reportparam.COSTCENTER;\r\n            this.reportService.drillParam.reportparam.DETAIL = '1';\r\n    \r\n            let debtors_bill = this.reportMainService.previouslyLoadedReportList.findIndex(report => report.reportname == 'Debtors Bill Tracking Report');\r\n            if (debtors_bill >= 0) {\r\n              this.reportMainService.previouslyLoadedReportList.splice(creditors, 1)\r\n            }\r\n            this.reportMainService.previouslyLoadedReportList.push(\r\n              {\r\n                reportname: 'Debtors Bill Tracking Report',\r\n                activeurlpath: '/pages/financialreports/additionalreport/bill-tracking-report',\r\n                activerurlpath2: 'bill-tracking-report'\r\n              });\r\n            break;\r\n            case 'Creditors Bill Tracking Report':\r\n              case 'Creditors Bill Tracking Report_1':\r\n            this.reportService.drillParam.reportname = reporttype;\r\n            this.reportService.drillParam.reportparam.ACID = dataToDrill[this.reportmasterDetail.DRILLKEY];\r\n            this.reportService.drillParam.reportparam.DATE1 = this.reportparam.DATE1;\r\n            this.reportService.drillParam.reportparam.DATE2 = this.reportparam.DATE2;\r\n            this.reportService.drillParam.reportparam.DIV = this.reportparam.DIV;\r\n            this.reportService.drillParam.reportparam.COMID = this.masterService.userProfile.CompanyInfo.COMPANYID;\r\n            this.reportService.drillParam.reportparam.COMPANYID = this.masterService.userProfile.CompanyInfo.COMPANYID;\r\n            this.reportService.drillParam.reportparam.PHISCALID = this.reportparam.PHISCALID;\r\n    \r\n            this.reportService.drillParam.reportparam.COSTCENTER = this.reportparam.COSTCENTER?this.reportparam.COSTCENTER:this.reportparam.CCENTER;\r\n            this.reportService.drillParam.reportparam.CCENTER = this.reportparam.CCENTER?this.reportparam.CCENTER:this.reportparam.COSTCENTER;\r\n            this.reportService.drillParam.reportparam.DETAIL = '1';\r\n    \r\n            let creditors_bill = this.reportMainService.previouslyLoadedReportList.findIndex(report => report.reportname == 'Creditors Bill Tracking Report');\r\n            if (creditors_bill >= 0) {\r\n              this.reportMainService.previouslyLoadedReportList.splice(creditors, 1)\r\n            }\r\n            this.reportMainService.previouslyLoadedReportList.push(\r\n              {\r\n                reportname: 'Creditors Bill Tracking Report',\r\n                activeurlpath: '/pages/financialreports/additionalreport/creditorsbill-tracking-report',\r\n                activerurlpath2: 'creditorsbill-tracking-report'\r\n              });\r\n            break;\r\n    }\r\n  }\r\n\r\n\r\n  gerVoucherTypeFromName(voucherName: string): string {\r\n    switch (voucherName.toUpperCase()) {\r\n      case \"JOURNAL\":\r\n\r\n        return 'JV';\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  ReportCriteriaDisplay(reportparam, reportname, REPORTDISPLAYNAME) {\r\n    // ////console.log(\"@@criteriapart\",reportparam,reportname)\r\nconsole.log(reportparam)\r\n    if (reportparam.DIVISIONNAME) {\r\n        this.divisionDisplayName = reportparam.DIVISIONNAME;\r\n    }\r\n    else{\r\n        this.divisionDisplayName = '';\r\n    }\r\n\r\n    if (reportparam.COSTCENTERDISPLAYNAME) {\r\n      this.costcenterDisplayName = reportparam.COSTCENTERDISPLAYNAME;\r\n  }\r\n  else{\r\n      this.costcenterDisplayName = '';\r\n  }\r\n  if (reportparam.COSTCENTERCATEGORYNAME) {\r\n    this.costcenterCategoryDisplayName = reportparam.COSTCENTERCATEGORYNAME;\r\n}\r\nelse{\r\n    this.costcenterCategoryDisplayName = '';\r\n}\r\n  \r\n  if (reportparam.INTERVAL) {\r\n    console.log(\"ss\",reportparam.INTERVAL)\r\n  if(reportparam.INTERVAL==\"1\"){\r\n    this.INTERVALNAME=\"Monthly\"\r\n  }else if(reportparam.INTERVAL==\"2\"){\r\n    this.INTERVALNAME=\"Quaterly\"\r\n  }else if(reportparam.INTERVAL==\"3\"){\r\n    this.INTERVALNAME=\"Annually\"\r\n  }else{\r\n    this.INTERVALNAME=\"ALL\"\r\n  }\r\n}\r\n  \r\n    if ((reportname == 'Account Ledger Report' || reportname == 'Account Ledger Report_1'|| reportname == 'Account Ledger Report_2')\r\n      && this.reportMainService.AccoutLedgerObj.EnableCombineLedger != true) {\r\n      this.reportDisplayName = 'Account Ledger';\r\n      this.labelDisplayName = 'Ledger';\r\n      this.ledgerDisplayName = reportparam.ACNAME;\r\n\r\n      if(reportparam.SUMMARYLEDGER == 0){\r\n        this.reportTypeDisplay = \"@Detail Ledger Report\";\r\n      }else if(reportparam.SUMMARYLEDGER == 1){\r\n        this.reportTypeDisplay = \"@Summary Ledger Report\"\r\n      }else{\r\n        this.reportTypeDisplay ='';\r\n      }\r\n      // if (reportparam.COSTCENTER != '%') {\r\n      //   this.masterService.getCostCenterName(reportparam.COSTCENTER).subscribe(\r\n      //     data => {\r\n      //       this.costcenterDisplayName = data.result[0] ? data.result[0].COSTCENTERNAME : '';\r\n      //     })\r\n      // } else {\r\n      //   this.costcenterDisplayName = '';\r\n      // }\r\n    } else if ((reportname == 'Party Ledger Report' || reportname == 'Party Ledger Report_1' || this.reportname == 'Party Ledger Report_2') && this.reportMainService.PartyLedgerObj.EnableCombineLedger != true) {\r\n      this.reportDisplayName = 'Party Ledger';\r\n      if(reportparam.ACNAME !='' && reportparam.ACNAME !=null && reportparam.ACNAME !=undefined){\r\n        this.labelDisplayName = 'Ledger';\r\n        this.ledgerDisplayName = reportparam.ACNAME;\r\n      }\r\n\r\n      if(reportparam.SUMMARYLEDGER == 0){\r\n        this.reportTypeDisplay = \"@Detail Ledger Report\";\r\n      }else if(reportparam.SUMMARYLEDGER == 1){\r\n        this.reportTypeDisplay = \"@Summary Ledger Report\"\r\n      }else{\r\n        this.reportTypeDisplay ='';\r\n      }\r\n      // if (reportparam.COSTCENTER != '%') {\r\n      //   this.masterService.getCostCenterName(reportparam.COSTCENTER).subscribe(\r\n      //     data => {\r\n      //       this.costcenterDisplayName = data.result[0] ? data.result[0].COSTCENTERNAME : '';\r\n      //     })\r\n      // } else {\r\n      //   this.costcenterDisplayName = '';\r\n      // }\r\n    } else if ((reportname == 'Account Ledger Report' || reportname == 'Account Ledger Report_1' || reportname == 'Account Ledger Report_2')\r\n      && this.reportMainService.AccoutLedgerObj.EnableCombineLedger == true) {\r\n      this.reportDisplayName = 'Account Ledger';\r\n      this.labelDisplayName = 'Ledger';\r\n      this.ledgerDisplayName = 'Combine Ledger Selection';\r\n    } else if ((reportname == 'Party Ledger Report' || reportname == 'Party Ledger Report_1' || this.reportname == 'Party Ledger Report_2') && this.reportMainService.PartyLedgerObj.EnableCombineLedger == true) {\r\n      this.reportDisplayName = 'Party Ledger';\r\n      this.labelDisplayName = 'Ledger';\r\n      this.ledgerDisplayName = 'Combine Ledger Selection';\r\n    } else if ((reportname == 'Summary Ledger Report' || reportname == 'Summary Ledger Report_1') && reportparam.REPORTTYPE == 0) {\r\n      this.reportDisplayName = 'Account Group Ledger';\r\n      if (reportname == 'Summary Ledger Report') {\r\n        this.labelDisplayName = 'Account Group';\r\n      } else {\r\n        this.labelDisplayName = '';\r\n      }\r\n\r\n\r\n      this.masterService.getAllAccount(reportparam.PARENT).subscribe(\r\n        data => {\r\n          this.ledgerDisplayName = data.result ? data.result.ACNAME : '';\r\n        })\r\n\r\n      // if (reportparam.CCENTER != '%') {\r\n      //   this.masterService.getCostCenterName(reportparam.CCENTER).subscribe(\r\n      //     data => {\r\n      //       this.costcenterDisplayName = data.result[0] ? data.result[0].COSTCENTERNAME : '';\r\n      //     })\r\n      // } else {\r\n      //   this.costcenterDisplayName = '';\r\n      // }\r\n    } else if ((reportname == 'Summary Ledger Report' || reportname == 'Summary Ledger Report_1') && reportparam.REPORTTYPE == 2) {\r\n      this.reportDisplayName = 'Account Group Ledger';\r\n      if (reportname == 'Summary Ledger Report') {\r\n        this.labelDisplayName = 'Account Group';\r\n      } else {\r\n        this.labelDisplayName = '';\r\n      }\r\n\r\n      this.ledgerDisplayName = 'Cost Center Wise Report';\r\n    } else if ((reportname == 'Summary Party Ledger Report' || reportname == 'Summary Party Ledger Report_1' ||\r\n      reportname == 'Summary Party Ledger Report_2') && reportparam.REPORTTYPE == 0) {\r\n      this.reportDisplayName = 'Party Group Ledger';\r\n      if (reportname == 'Summary Party Ledger Report') {\r\n        this.labelDisplayName = 'Party Group';\r\n      } else {\r\n        this.labelDisplayName = '';\r\n      }\r\n\r\n      this.masterService.getAllAccount(reportparam.PARENT).subscribe(\r\n        data => {\r\n          this.ledgerDisplayName = data.result ? data.result.ACNAME : '';\r\n        })\r\n\r\n      // if (reportparam.CCENTER != '%') {\r\n      //   this.masterService.getCostCenterName(reportparam.CCENTER).subscribe(\r\n      //     data => {\r\n      //       this.costcenterDisplayName = data.result[0] ? data.result[0].COSTCENTERNAME : '';\r\n      //     })\r\n      // } else {\r\n      //   this.costcenterDisplayName = '';\r\n      // }\r\n    } else if ((reportname == 'Summary Party Ledger Report' || reportname == 'Summary Party Ledger Report_1' ||\r\n      reportname == 'Summary Party Ledger Report_2') && reportparam.REPORTTYPE == 1) {\r\n      this.reportDisplayName = 'Party Group Ledger';\r\n      if (reportname == 'Summary Party Ledger Report') {\r\n        this.labelDisplayName = 'Party Group';\r\n      } else {\r\n        this.labelDisplayName = '';\r\n      }\r\n      this.ledgerDisplayName = 'Area Wise Report';\r\n      // if (reportparam.CCENTER != '%') {\r\n      //   this.masterService.getCostCenterName(reportparam.CCENTER).subscribe(\r\n      //     data => {\r\n      //       this.costcenterDisplayName = data.result[0] ? data.result[0].COSTCENTERNAME : '';\r\n      //     })\r\n      // } else {\r\n      //   this.costcenterDisplayName = '';\r\n      // }\r\n    } else if ((reportname == 'Summary Party Ledger Report' || reportname == 'Summary Party Ledger Report_1' ||\r\n      reportname == 'Summary Party Ledger Report_2') && reportparam.REPORTTYPE == 2) {\r\n      this.reportDisplayName = 'Party Group Ledger';\r\n      if (reportname == 'Summary Party Ledger Report') {\r\n        this.labelDisplayName = 'Party Group';\r\n      } else {\r\n        this.labelDisplayName = '';\r\n      }\r\n      this.ledgerDisplayName = 'Cost Center Wise Report';\r\n    } else if (this.reportMainService.ReportFilterObject.EnableCombineLedger == true) {\r\n      this.ledgerDisplayName = 'Combine Ledger Selection';\r\n    } else if ((reportname == 'vat register report' || reportname == 'vat register report_1')\r\n      && (reportparam.VTYPE == '%' || reportparam.VTYPE === undefined\r\n        || reportparam.VTYPE == '')\r\n    ) {\r\n      this.reportDisplayName = 'Voucher Register';\r\n      this.labelDisplayName = 'Voucher Name';\r\n      this.ledgerDisplayName = reportparam.VTYPEDISPLAYNAME;\r\n      this.accountDisplayName = reportparam.ACNAME;\r\n      this.entryuserDisplayName = reportparam.USER;\r\n      // if (reportparam.CostCenter != '%') {\r\n      //   this.masterService.getCostCenterName(reportparam.CostCenter).subscribe(\r\n      //     data => {\r\n      //       this.costcenterDisplayName = data.result[0] ? data.result[0].COSTCENTERNAME : '';\r\n      //     })\r\n      // }\r\n    } else if (reportname == 'vat register report' || reportname == 'vat register report_1') {\r\n      this.reportDisplayName = 'Voucher Register';\r\n      this.labelDisplayName = 'Voucher Name';\r\n      this.ledgerDisplayName = reportparam.VTYPEDISPLAYNAME;\r\n      this.accountDisplayName = reportparam.ACNAME;\r\n      this.entryuserDisplayName = reportparam.USER;\r\n      // if (reportparam.CostCenter != '%') {\r\n      //   this.masterService.getCostCenterName(reportparam.CostCenter).subscribe(\r\n      //     data => {\r\n      //       this.costcenterDisplayName = data.result[0] ? data.result[0].COSTCENTERNAME : '';\r\n      //     })\r\n      // } else {\r\n      //   this.costcenterDisplayName = '';\r\n      // }\r\n    } else if (reportname == 'Sub Ledger Report' || reportname == 'Sub Ledger Report_1') {\r\n      this.reportDisplayName = 'Sub Ledger - Ledger Report';\r\n      if (reportparam.ACID != '%' && reportparam.ACID != '' && reportparam.ACCNAME) {\r\n        this.labelDisplayName = 'Main Ledger';\r\n        this.ledgerDisplayName = reportparam.ACCNAME;\r\n      } else {\r\n        this.labelDisplayName = '';\r\n        this.ledgerDisplayName = '';\r\n      }\r\n      if (reportparam.SL_ACID != '%' && reportparam.SL_ACID != '') {\r\n        this.subledgerlabelDisplayName = 'Sub Ledger';\r\n        this.subledgerDisplayName = reportparam.SL_ACNAME;\r\n      } else {\r\n        this.subledgerlabelDisplayName = '';\r\n        this.subledgerDisplayName = '';\r\n      }\r\n\r\n      // if (reportparam.CCENTER != '%') {\r\n      //   this.masterService.getCostCenterName(reportparam.CCENTER).subscribe(\r\n      //     data => {\r\n      //       this.costcenterDisplayName = data.result[0] ? data.result[0].COSTCENTERNAME : '';\r\n      //     })\r\n      // } else {\r\n      //   this.costcenterDisplayName = '';\r\n      // }\r\n      // ////console.log(\"@@yeha\",reportname,this.labelDisplayName)\r\n    } else if (reportname == 'Debtors Report' || reportname == 'Debtors Report_1') {\r\n      this.reportDisplayName = 'Debtors Report';\r\n      this.labelDisplayName = '';\r\n      if (reportparam.OPNINGBLONLY == 1) {\r\n        this.ledgerDisplayName = '@Opening Debtors Only';\r\n      } else {\r\n        this.ledgerDisplayName = '';\r\n      }\r\n\r\n      if (reportparam.AREAWISEDISPLAYNAME) {\r\n        this.AreawiseDisplayName = reportparam.AREAWISEDISPLAYNAME;\r\n      }\r\n      else {\r\n        this.AreawiseDisplayName = '';\r\n      }\r\n\r\n      if (reportparam.PARTYGROUPDISPLAYNAME) {\r\n        this.PartyGroupDisplayName = reportparam.PARTYGROUPDISPLAYNAME;\r\n      }\r\n      else {\r\n        this.PartyGroupDisplayName = '';\r\n      }\r\n\r\n      if (reportparam.PARTYCATEGORYDISPLAYNAME) {\r\n        this.PartyCategoryDisplayName = reportparam.PARTYCATEGORYDISPLAYNAME;\r\n      }\r\n      else {\r\n        this.PartyCategoryDisplayName = '';\r\n      }\r\n     \r\n      // if (reportparam.Debtors_CostCenter != '%') {\r\n      //   this.masterService.getCostCenterName(reportparam.Debtors_CostCenter).subscribe(\r\n      //     data => {\r\n      //       this.costcenterDisplayName = data.result[0] ? data.result[0].COSTCENTERNAME : '';\r\n      //     })\r\n      // } else {\r\n      //   this.costcenterDisplayName = '';\r\n      // }\r\n    }\r\n    else if (reportname == 'Creditors Report' || reportname == 'Creditors Report_1') {\r\n      this.reportDisplayName = 'Creditors Report';\r\n      this.labelDisplayName = '';\r\n      if (reportparam.OPNINGBLONLY == 1) {\r\n        this.ledgerDisplayName = '@Opening Debtors Only';\r\n      } else {\r\n        this.ledgerDisplayName = '';\r\n      }\r\n\r\n      if (reportparam.AREAWISEDISPLAYNAME) {\r\n        this.AreawiseDisplayName = reportparam.AREAWISEDISPLAYNAME;\r\n      }\r\n      else {\r\n        this.AreawiseDisplayName = '';\r\n      }\r\n\r\n      if (reportparam.PARTYGROUPDISPLAYNAME) {\r\n        this.PartyGroupDisplayName = reportparam.PARTYGROUPDISPLAYNAME;\r\n      }\r\n      else {\r\n        this.PartyGroupDisplayName = '';\r\n      }\r\n\r\n      if (reportparam.PARTYCATEGORYDISPLAYNAME) {\r\n        this.PartyCategoryDisplayName = reportparam.PARTYCATEGORYDISPLAYNAME;\r\n      }\r\n      else {\r\n        this.PartyCategoryDisplayName = '';\r\n      }\r\n      // if (reportparam.Creditors_CostCenter != '%') {\r\n      //   this.masterService.getCostCenterName(reportparam.Creditors_CostCenter).subscribe(\r\n      //     data => {\r\n      //       this.costcenterDisplayName = data.result[0] ? data.result[0].COSTCENTERNAME : '';\r\n      //     })\r\n      // } else {\r\n      //   this.costcenterDisplayName = '';\r\n      // }\r\n    }\r\n    else if (reportname == 'Debtors Aging Report' || reportname == 'Debtors Aging Report_1') {\r\n      this.reportDisplayName = 'Debtors Ageing Report';\r\n      this.labelDisplayName = '';\r\n      this.ledgerDisplayName = '';\r\n      // if (reportparam.DebtorsAgeing_CostCenter != '%') {\r\n      //   this.masterService.getCostCenterName(reportparam.DebtorsAgeing_CostCenter).subscribe(\r\n      //     data => {\r\n      //       this.costcenterDisplayName = data.result[0] ? data.result[0].COSTCENTERNAME : '';\r\n      //     })\r\n      // } else {\r\n      //   this.costcenterDisplayName = '';\r\n      // }\r\n    }\r\n    else if (reportname == 'Creditors Aging Report' || reportname == 'Creditors Aging Report_1') {\r\n      this.reportDisplayName = 'Creditors Ageing Report';\r\n      this.labelDisplayName = '';\r\n      this.ledgerDisplayName = '';\r\n      // if (reportparam.CreditorsAgeing_CostCenter != '%') {\r\n      //   this.masterService.getCostCenterName(reportparam.CreditorsAgeing_CostCenter).subscribe(\r\n      //     data => {\r\n      //       this.costcenterDisplayName = data.result[0] ? data.result[0].COSTCENTERNAME : '';\r\n      //     })\r\n      // } else {\r\n      //   this.costcenterDisplayName = '';\r\n      // }\r\n    }\r\n    else if (reportname == 'Cash/Bank Book Report' || reportname == 'Cash/Bank Book Report_1' || reportname == 'Cash/Bank Book Report_2') {\r\n      this.reportDisplayName = 'Cash/Bank Book Report';\r\n      this.labelDisplayName = '';\r\n      this.accountDisplayName = reportparam.ACNAME;\r\n      if (reportparam.DETAILREPORT == \"0\") {\r\n        this.detailreportDisplayName = '@Summary Report';\r\n      } else if (reportparam.DETAILREPORT == \"1\") {\r\n        this.detailreportDisplayName = '@Detail Report';\r\n      }\r\n      if (reportparam.REPORTMODE == 1) {\r\n        this.ledgerDisplayName = '@Cash Book Only';\r\n      } else if (reportparam.REPORTMODE == 2) {\r\n        this.ledgerDisplayName = '@Bank Book Only';\r\n      } else {\r\n        this.ledgerDisplayName = '';\r\n      }\r\n    } else if ((reportname == 'Day Book Report' || reportname == 'Day Book Report_1')\r\n      && (reportparam.VTYPE == '%' || reportparam.VTYPE === undefined\r\n        || reportparam.VTYPE == '')\r\n    ) {\r\n      this.reportDisplayName = 'Day Book Report';\r\n      this.labelDisplayName = 'Voucher Name';\r\n      this.ledgerDisplayName = 'All';\r\n      if (reportparam.USR != '%') {\r\n        this.entryuserDisplayName = reportparam.USR;\r\n      } else {\r\n        this.entryuserDisplayName = '';\r\n      }\r\n    }\r\n    else if (reportname == 'Day Book Report' || reportname == 'Day Book Report_1') {\r\n      this.reportDisplayName = 'Day Book Report';\r\n      this.labelDisplayName = 'Voucher Name';\r\n      this.ledgerDisplayName = reportparam.VTYPEDISPLAYNAME;\r\n      if (reportparam.USR != '%') {\r\n        this.entryuserDisplayName = reportparam.USR;\r\n      } else {\r\n        this.entryuserDisplayName = '';\r\n      }\r\n    }\r\n    else if (reportname == 'Sub Ledger Report ACBASE' || reportname == 'Sub Ledger Report ACBASE_1') {\r\n      this.reportDisplayName = 'Sub Ledger - Summary Report';\r\n      if (reportparam.ACID != '%' && reportparam.ACID != '') {\r\n        this.labelDisplayName = 'Main Ledger';\r\n        this.ledgerDisplayName = reportparam.ACCNAME;\r\n      }\r\n      else {\r\n        this.labelDisplayName = '';\r\n        this.ledgerDisplayName = '';\r\n      }\r\n      if (reportparam.SL_ACID != '%' && reportparam.SL_ACID != '') {\r\n        this.subledgerlabelDisplayName = 'Sub Ledger';\r\n        this.subledgerDisplayName = reportparam.SL_ACNAME;\r\n      }\r\n      else {\r\n        this.subledgerlabelDisplayName = '';\r\n        this.subledgerDisplayName = '';\r\n      }\r\n      // if (reportparam.CCENTER != '%') {\r\n      //   this.masterService.getCostCenterName(reportparam.CCENTER).subscribe(\r\n      //     data => {\r\n      //       this.costcenterDisplayName = data.result[0] ? data.result[0].COSTCENTERNAME : '';\r\n      //     })\r\n      // } else {\r\n      //   this.costcenterDisplayName = '';\r\n      // }\r\n    }\r\n    else if (reportname == 'Trial Balance Report' || reportname == 'Trial Balance Report_1' || reportname == 'Trial Balance Report_2') {\r\n      this.reportDisplayName = 'Trial Balance Report';\r\n      // if (reportparam.COSTCENTER != '%') {\r\n      //   this.masterService.getCostCenterName(reportparam.COSTCENTER).subscribe(\r\n      //     data => {\r\n      //       this.costcenterDisplayName = data.result[0] ? data.result[0].COSTCENTERNAME : '';\r\n      //     });\r\n      // } else {\r\n      //   this.costcenterDisplayName = '';\r\n      // }\r\n      if (reportparam.LEDGERWISE == 0) {\r\n        this.ledgerDisplayName = '@Group Wise Report';\r\n      } else if (reportparam.LEDGERWISE == 1) {\r\n        this.ledgerDisplayName = '@Ledger Wise Report';\r\n      } else {\r\n        this.ledgerDisplayName = '';\r\n      }\r\n      if (reportparam.SUMMARYREPORT == 0) {\r\n        this.detailreportDisplayName = '@Detail Report';\r\n      } else if (reportparam.SUMMARYREPORT == 1) {\r\n        this.detailreportDisplayName = '@Summary Report';\r\n      } else {\r\n        this.detailreportDisplayName = '';\r\n      }\r\n    }\r\n\r\n    else if (reportname == 'Additional Cost Voucherwise Summary Report' || reportname == 'Additional Cost Voucherwise Detail Report') {\r\n      this.reportDisplayName = 'Additional Cost Voucherwise Report';\r\n\r\n      if (reportparam.SUMMARYREPORT == 0) {\r\n        this.detailreportDisplayName = '@Detail Report';\r\n      } else if (reportparam.SUMMARYREPORT == 1) {\r\n        this.detailreportDisplayName = '@Summary Report';\r\n      } else {\r\n        this.detailreportDisplayName = '';\r\n      }\r\n\r\n      if (reportparam.ACID != '%' && reportparam.ACID != '' && reportparam.ACCNAME) {\r\n        this.supplierDisplayName = reportparam.ACCNAME;\r\n      } else {\r\n        this.supplierDisplayName = '';\r\n      }\r\n      if (reportparam.VOUCHER != '%' && reportparam.VOUCHER != '') {\r\n        this.voucherDisplayName = reportparam.VOUCHER;\r\n      } else {\r\n        this.voucherDisplayName = '';\r\n      }\r\n    }\r\n\r\n    else if (reportname == 'Additional Cost Itemwise Summary Report' || reportname == 'Additional Cost Itemwise Detail Report') {\r\n      this.reportDisplayName = 'Additional Cost Itemwise Report';\r\n\r\n      if (reportparam.SUMMARYREPORT == 0) {\r\n        this.detailreportDisplayName = '@Detail Report';\r\n      } else if (reportparam.SUMMARYREPORT == 1) {\r\n        this.detailreportDisplayName = '@Summary Report';\r\n      } else {\r\n        this.detailreportDisplayName = '';\r\n      }\r\n\r\n      if (reportparam.ACID != '%' && reportparam.ACID != '' && reportparam.ACCNAME) {\r\n        this.supplierDisplayName = reportparam.ACCNAME;\r\n      } else {\r\n        this.supplierDisplayName = '';\r\n      }\r\n      if (reportparam.VOUCHER != '%' && reportparam.VOUCHER != '') {\r\n        this.voucherDisplayName = reportparam.VOUCHER;\r\n      } else {\r\n        this.voucherDisplayName = '';\r\n      }\r\n    }  else if (reportname.startsWith('Stock Summary') && reportname.includes('Account')) {\r\n      this.reportDisplayName = 'Stock Summary Report';\r\n\r\n      if (reportparam.DETAILFORMAT == 1) {\r\n        this.detailreportDisplayName = '@Detail Report';\r\n      } else if (reportparam.DETAILFORMAT == 0) {\r\n        this.detailreportDisplayName = '@Summary Report';\r\n      } else {\r\n        this.detailreportDisplayName = '';\r\n      }\r\n    } else if (reportname.startsWith('Current Stock Warehousewise') && reportname.includes('Account')) {\r\n      this.reportDisplayName = 'Stock Report - Warehouse Wise';\r\n    } else if (reportname.startsWith('Stock Abc') && reportname.includes('Account')) {\r\n      this.reportDisplayName = 'Stock Abc Analysis Report';  \r\n    } else if (reportname.startsWith('Stock Valuation') && reportname.includes('Account')) {\r\n      this.reportDisplayName = 'Stock Valuation Report';  \r\n    } else if (reportname.startsWith('Stock Ledger') && reportname.includes('Account')) {\r\n      this.reportDisplayName = 'Stock Ledger Report';  \r\n    }else if (reportname == 'Post Dated Cheque Voucher Report' || reportname == 'Post Dated Cheque Voucher Report_1') {\r\n      this.reportDisplayName = 'Post Dated Cheque Voucher Report';\r\n      if (reportparam.DETAILSREPORT == \"0\") {\r\n        this.detailreportDisplayName = '@Summary Report';\r\n      } else if (reportparam.DETAILSREPORT == \"1\") {\r\n        this.detailreportDisplayName = '@Detail Report';\r\n      }\r\n    }\r\n    else {\r\n      this.reportDisplayName = REPORTDISPLAYNAME ? REPORTDISPLAYNAME :reportname;\r\n    }\r\n\r\n    if ((reportname == 'vat register report' || reportname == 'vat register report_1') &&\r\n      reportparam.REPORT_MODE == 0) {\r\n      this.reportmodeisZero = 0;\r\n    } else if ((reportname == 'vat register report' || reportname == 'vat register report_1') &&\r\n      reportparam.REPORT_MODE == 1) {\r\n      this.reportmodeisZero = 1;\r\n    }\r\n\r\n  \r\n\r\n    // if (reportparam.VTYPE == 'OB') {\r\n    //   this.ledgerDisplayName = 'A/C OPENING_BLCD';\r\n    // } else if (reportparam.VTYPE == 'CE' || reportparam.VTYPE == 'CV') {\r\n    //   this.ledgerDisplayName = 'CONTRA VOUCHER';\r\n    // } else if (reportparam.VTYPE == 'CN') {\r\n    //   this.ledgerDisplayName = 'CREDIT NOTE VOUCHER';\r\n    // } else if (reportparam.VTYPE == 'DN') {\r\n    //   this.ledgerDisplayName = 'DEBIT NOTE VOUCHER';\r\n    // } else if (reportparam.VTYPE == 'PV') {\r\n    //   this.ledgerDisplayName = 'EXPENSE VOUCHER';\r\n    // } else if (reportparam.VTYPE == 'RV') {\r\n    //   this.ledgerDisplayName = 'INCOME VOUCHER';\r\n    // } else if (reportparam.VTYPE == 'JV') {\r\n    //   this.ledgerDisplayName = 'JOURNAL VOUCHER';\r\n    // } else if (reportparam.VTYPE == 'AO') {\r\n    //   this.ledgerDisplayName = 'Party OPENING_BLCD';\r\n    // } else if (reportparam.VTYPE == 'PI') {\r\n    //   this.ledgerDisplayName = 'PURCHASE VOUCHER';\r\n    // } else if (reportparam.VTYPE == 'TI') {\r\n    //   this.ledgerDisplayName = 'SALES VOUCHER';\r\n    // }\r\n\r\n    //For BS Date in Reports Heading\r\n    if (reportparam.DATE1 && reportparam.DATE2) {\r\n      this.changeDate(reportparam.DATE1, reportparam.DATE2, \"AD\");\r\n    } else if (reportparam.DATE) {\r\n      this.changeDate(reportparam.DATE, reportparam.DATE, \"AD\");\r\n    }\r\n  }\r\n\r\n  prepareOptionalHeader(headers: any[] = []) {\r\n    let tmpoptionalreportHeaders = [];\r\n    if (headers.length) {\r\n      for (var head of headers) {\r\n        if (head.hasOwnProperty('colGroup') && head.colGroup != '' && (!isNullOrUndefined(head.colGroup))) {\r\n          let totColGroup = headers.filter(x => x.colGroup == head.colGroup);\r\n          let existingOptHeader = tmpoptionalreportHeaders.filter(y => y.colGroup == head.colGroup);\r\n          if (!existingOptHeader.length) {\r\n            tmpoptionalreportHeaders.push({\r\n              colGroup: head.colGroup,\r\n              width: getMergedHeaderWidth(totColGroup) + 'px',\r\n              colspan: Number(totColGroup.length),\r\n              alignment: 'center',\r\n              mappingName:head.mappingName\r\n            })\r\n          }\r\n        } else {\r\n          tmpoptionalreportHeaders.push({\r\n            colGroup: '',\r\n            colspan: 1,\r\n            width: Number(head.size) + 'px',\r\n            alignment: 'left',\r\n            mappingName:head.mappingName\r\n          })\r\n        }\r\n      }\r\n      let filteredOptionalHeader = tmpoptionalreportHeaders.filter(z => z.colGroup != '');\r\n      this.optionalreportHeaders = filteredOptionalHeader.length ? tmpoptionalreportHeaders : [];\r\n    }\r\n\r\n\r\n    function getMergedHeaderWidth(subHeader: any[] = []) {\r\n\r\n      let totalWidthOfColMerged: number = 0;\r\n      if (subHeader.length) {\r\n        subHeader.forEach(x => {\r\n\r\n          totalWidthOfColMerged = totalWidthOfColMerged + Number(x.size);\r\n        });\r\n        return totalWidthOfColMerged;\r\n      } else {\r\n        return 100\r\n      }\r\n    }\r\n  }\r\n\r\n  getReportHeadingStyles() {\r\n    let myStyles = {\r\n      'font-size.px': this.userSetting.REPHEADING_FONTSIZE ? this.userSetting.REPHEADING_FONTSIZE : '12',\r\n      'font-family': this.userSetting.REPHEADING_FONTNAME ? this.userSetting.REPHEADING_FONTNAME : 'Roboto, Arial, sans-serif',\r\n    }\r\n    return myStyles;\r\n  }\r\n\r\n  getReportDetailStyles() {\r\n    let myStyles = {\r\n      'font-size.px': this.userSetting.REPDETAIL_FONTSIZE ? this.userSetting.REPDETAIL_FONTSIZE : '11',\r\n      'font-family': this.userSetting.REPDETAIL_FONTNAME ? this.userSetting.REPDETAIL_FONTNAME : 'Tahoma',\r\n    }\r\n    return myStyles;\r\n  }\r\n\r\n  getReportFooterStyles() {\r\n    let myStyles = {\r\n      'font-size.px': this.userSetting.REPTOTAL_FONTSIZE ? this.userSetting.REPTOTAL_FONTSIZE : '12',\r\n      'font-family': this.userSetting.REPTOTAL_FONTNAME ? this.userSetting.REPTOTAL_FONTNAME : 'Tahoma',\r\n    }\r\n    return myStyles;\r\n  }\r\n  clickNext() {\r\n    this.body.nativeElement.scrollTop = 0;\r\n  }\r\n\r\n  clicked(index) {\r\n    this.HighlightRow = index;\r\n  }\r\n\r\n  clickedPL(index,data) {\r\n    //console.log(\"@@index\",index,data)\r\n    this.HighlightRow = index;\r\n  }\r\n\r\n  printExcelFormat() {\r\n    let vatno = this.userProfile.CompanyInfo.VAT?this.userProfile.CompanyInfo.VAT:this.userProfile.CompanyInfo.GSTNO;\r\n    let report_name = this.showReportName ? this.showReportName: this.reportname;\r\n    this.param='';\r\n    try {\r\n      let popupWin;\r\n      \r\n      let header = '<center><label style=\"font-weight:bold;font-size:16px;\">' + report_name.toUpperCase() + '</label></center><center><label style=\"font-weight:bold;font-size:18px;\">' + this.userProfile.CompanyInfo.NAME + '</label></center><center><label style=\"font-weight:bold;font-size:13px\">' + this.userProfile.CompanyInfo.ADDRESS + '</label></center><center><label style=\"font-weight:bold\"> PAN No : <label style=\"letter-spacing:5px\">' + vatno + '</label></label></center><br>';\r\n      \r\n      if((this.reportname == 'Party Ledger Report' || this.reportname == 'Party Ledger Report_1' || this.reportname == 'Party Ledger Report_2') && this.reportparam.ACNAME !=\"\"){\r\n        this.param = '<label style=\" text-align:left;font-size:14px;font-weight:bold;\">' + 'CUSTOMER : '+ this.reportparam.ACNAME + '</label><br><label style=\" text-align:left;font-size:14px;\">' + 'PAN No : '+ this.reportparam.VATNO + '</label>&nbsp;<label style=\" text-align:left;font-size:14px;\">' + 'Address : '+ this.reportparam.ADDRESS + '</label><br><label style=\" text-align:left;font-size:14px;\">' + 'Contact Number : '+ this.reportparam.PHONE + '</label>&nbsp;<label style=\" text-align:left;font-size:14px;\">' + 'Email : '+ this.reportparam.EMAIL + '</label><br><br>';\r\n        // //console.log(\"Reached inside\", this.param)\r\n      }\r\n      this.param += '<label style=\"font-weight:bold;font-size:12px;\">' + this.getReportParamForPreview(this.reportparam, this.reportDetail) + '</label>'+'<label></label>';\r\n\r\n      let table = '<table>  <thead>   <tr>';\r\n      if(this.reportname == 'Trial Balance Report' || this.reportname == 'Trial Balance Report_1'){\r\n        let table1 = '<th style=\"border-top:2px solid black;border-right:2px solid black;padding : 0px; font-size:14px;\" colspan=\"1\">' + \" \" + '</th>';\r\n        table1 += '<th style=\"border-top:2px solid black;border-right:2px solid black;padding : 0px; font-size:14px;\" colspan=\"2\">' + \" CLOSING BALANCE\" + '</th>';\r\n        table += table1;\r\n      }else  if(this.reportname == 'Trial Balance Report_2'){\r\n        let table1 = '<th style=\"border-top:2px solid black;border-right:2px solid black;padding : 0px; font-size:14px;\" colspan=\"1\">' + \" \" + '</th>';\r\n        table1 += '<th style=\"border-top:2px solid black;border-right:2px solid black;padding : 0px; font-size:14px;\" colspan=\"2\">' + \" OPENING BALANCE\" + '</th>';\r\n        table1 += '<th style=\"border-top:2px solid black;border-right:2px solid black;padding : 0px; font-size:14px;\" colspan=\"2\">' + \" RUNNING BALANCE\" + '</th>';\r\n        table1 += '<th style=\"border-top:2px solid black;border-right:2px solid black;padding : 0px; font-size:14px;\" colspan=\"2\">' + \" CLOSING BALANCE\" + '</th>';\r\n        table += table1;\r\n      }\r\n      table += '</tr> </thead> <thead> <tr>';\r\n      for (let column1 of this.reportHeaders) {\r\n        let table1\r\n        if(column1.colPosition==1){\r\n        table1 = '<th style=\"border-top:2px solid black;border-left:2px solid black;border-right:2px solid black;padding : 0px; font-size:14px;\" >' + column1.colHeader + '</th>';\r\n        }else{\r\n          table1 = '<th style=\"border-top:2px solid black;border-right:2px solid black;padding : 0px; font-size:14px;\" >' + column1.colHeader + '</th>';\r\n        }\r\n        \r\n        table += table1;\r\n      };\r\n      table += '</tr> </thead>';\r\n      table += '<tbody style=\"border-left: 2px solid black;\">';\r\n\r\n      for (let row of this.reportData) {\r\n        if(row.FFLG == 'B'){\r\n          table += '<tr style=\"font-weight:bold;\">';\r\n        }else{\r\n          table += '<tr>';\r\n        }\r\n        for (let column1 of this.reportHeaders) {\r\n          var v = row[column1.mappingName];\r\n          if (v == null) v = \"\";\r\n          let table1;\r\n          if (column1.alignment && column1.alignment == 1) {\r\n            table1 = '<td style=\"border-top:2px solid black;border-right:2px solid black;padding : 0px;height: 5px;text-align:right;font-size:14px;\"><pre style=\"margin: 0 !important;overflow: hidden;\">' + v + '</pre></td>';\r\n          } else {\r\n            if(column1.colPosition==1){\r\n              table1 = '<td style=\"border-top:2px solid black;border-left:2px solid black;border-right:2px solid black;padding : 0px;height: 5px;font-size:14px;\"><pre style=\"margin: 0 !important;overflow: hidden;\">' + v + '</pre></td>';\r\n            }else{\r\n              table1 = '<td style=\"border-top:2px solid black;border-right:2px solid black;padding : 0px;height: 5px;font-size:14px;\"><pre style=\"margin: 0 !important;overflow: hidden;\">' + v + '</pre></td>';\r\n            }\r\n            \r\n          }\r\n          table += table1;\r\n          '</tr>';\r\n        };\r\n      }\r\n      table += '</tbody><tfoot>';\r\n      for (let row of this.reportFooter) {\r\n        table += '<tr>';\r\n        for (let column1 of this.reportHeaders) {\r\n          var v = row[column1.mappingName];\r\n          if (v == null) v = \"\";\r\n          if (column1.alignment && column1.alignment == 0) {\r\n            table += '<td style=\"border-top:2px solid black;border-right:2px solid black;border-bottom:2px solid black;padding : 0px;text-align:inherit;font-size:14px;font-weight:bold;\">' + v + '</td>';\r\n          } else {\r\n            if(column1.colPosition==1){\r\n              table += '<td style=\"border-top:2px solid black;border-right:2px solid black;border-left:2px solid black;border-bottom:2px solid black;padding : 0px;text-align:inherit;font-size:14px;font-weight:bold;\">' + v + '</td>';\r\n              }else{\r\n            table += '<td style=\"border-top:2px solid black;border-right:2px solid black;border-bottom:2px solid black;padding : 0px;text-align:right;font-size:14px;font-weight:bold;\">' + v + '</td>';\r\n          }\r\n        }\r\n        };\r\n\r\n        '</tr>';\r\n      };\r\n      table += '</tfoot></table>';\r\n      // //console.log(\"@@table\",table)\r\n      var Ht = header + this.param + table;\r\n      popupWin = window.open('', '_blank', 'top=0,left=0,height=1000px,width=1500px');\r\n      popupWin.document.write(table);\r\n      popupWin.document.title = this.reportname;\r\n      popupWin.document.body.innerHTML = Ht;\r\n      popupWin.focus();\r\n      popupWin.print();\r\n    } catch (ex) { alert(ex) };\r\n  }\r\n\r\n  SaveReport() {\r\n    ////console.log(\"@@this.reportparam\", this.reportparam)\r\n    this.masterService.SaveAdditionalCostReport(this.reportparam).subscribe(res => {\r\n      if (res.status == \"ok\") {\r\n        this.alertService.info('Additional Cost Report is successfully saved');\r\n      } else {\r\n      }\r\n    })\r\n  }\r\n\r\n   downloadReportPrepareFromAPI(extension){\r\n    var item = 1;\r\n    let excelColumnName = this.reportHeaders.map(\r\n      x => {\r\n        return <IExcelColumnFormat>{\r\n          SNO: item++,\r\n          ReportName: this.reportname,\r\n          ColumnName: x.colHeader,\r\n          MappingName: x.mappingName,\r\n          MergeHeader:x.colGroup\r\n        };\r\n      }\r\n    );\r\n    this.DialogMessage = \"Report is Downloading...\";\r\n    this.childModal.show();\r\n    let paramObj = { reportname:this.reportname, reportparam:this.reportparam, \r\n      columnSetting:excelColumnName?excelColumnName:this.reportHeaders,REPORTDISPLAYNAME:this.showReportName?this.showReportName:this.reportname,extension:extension}\r\n    this.masterService.DownLoadAllExcelReportPreparedFromAPI(paramObj).subscribe(\r\n      data => {\r\n        this.downloadFile(data);\r\n        setTimeout(() => {\r\n          this.childModal.hide();\r\n        }, 2000)\r\n      },\r\n      error => {\r\n      }\r\n    )\r\n  }\r\n\r\n  downloadFile(response: any) {\r\n    const element = document.createElement(\"a\");\r\n    element.href = URL.createObjectURL(response.content);\r\n    element.download = response.filename;\r\n    document.body.appendChild(element);\r\n    element.click();\r\n  }\r\n\r\n  \r\n  prepareOptionalDynamicHeader(headers: any[] = []) {\r\n    let tmpoptionalreportHeaders = [];\r\n    let index= 0;\r\n    if (headers.length) {\r\n      for (var i in headers) {\r\n      if (this.reportmasterDetail.HASDYNAMICCOLUMNS && this.reportmasterDetail.DYNAMICHEADER == 1) {\r\n        let dynamicOptionalHeader='Default';\r\n        let totColGroup2:any;\r\n          if(this.reportmasterDetail.DYNAMICHEADER == 1 && headers[i].mappingName.includes(\"~\")){\r\n            let abc = headers[i].mappingName.split('~');\r\n            dynamicOptionalHeader = abc[0];\r\n          }else{\r\n            dynamicOptionalHeader='Default';\r\n          }\r\n            totColGroup2 = this.allHeaders.filter(x => x.mappingName.split('~')[0] == headers[i].mappingName.split('~')[0]);\r\n            let existingOptHeader2 = tmpoptionalreportHeaders.filter(y => y.mappingName.split('~')[0] == headers[i].mappingName.split('~')[0]);\r\n            if (index+1 >= this.reportmasterDetail.DYNAMICCOLUMNSLEVEL) {\r\n              if (!existingOptHeader2.length ) {      \r\n                tmpoptionalreportHeaders.push(<any>{\r\n                  colGroup: dynamicOptionalHeader == 'Default' ? '' : dynamicOptionalHeader,\r\n                  width: getMergedDynamicHeaderWidth(totColGroup2,this.reportmasterDetail.DYNAMICCOLUMNWIDTH) + 'px',\r\n                  colspan: Number(totColGroup2.length),\r\n                  alignment: 'center',\r\n                  mappingName:headers[i].mappingName,\r\n                  colPosition: dynamicOptionalHeader == 'Default' ? headers[i].colPosition+5000:headers[i].colPosition,\r\n                  visible:headers[i].visible\r\n                })\r\n            }\r\n            }\r\n            else{\r\n                tmpoptionalreportHeaders.push({\r\n                  colGroup: '',\r\n                  colspan: 1,\r\n                  width: Number(headers[i].size) + 'px',\r\n                  alignment: 'center',\r\n                  mappingName:headers[i].mappingName,\r\n                  colPosition:headers[i].colPosition,\r\n                  visible:headers[i].visible\r\n                })                \r\n            \r\n        }\r\n          }\r\n        index++;\r\n      }\r\n\r\n          let sortedArray = _.sortBy(tmpoptionalreportHeaders, 'colPosition'); \r\n          tmpoptionalreportHeaders=sortedArray;\r\n          let _filteredheaders=tmpoptionalreportHeaders.filter(x=>(x.visible==1) || (x.visible==0 && x.mappingName.includes(\"~\")));\r\n      this.optionalreportHeaders = _filteredheaders.length ? _filteredheaders : (tmpoptionalreportHeaders.length?tmpoptionalreportHeaders:[]);\r\n    }\r\n  \r\n  \r\n    function getMergedDynamicHeaderWidth(subHeader: any[] = [],DYNAMICCOLUMNWIDTH) {\r\n      //console.log(\"@@DYNAMICCOLUMNWIDTH\",DYNAMICCOLUMNWIDTH)\r\n      let totalWidthOfColMerged: number = 0;\r\n      if (subHeader.length) {\r\n        subHeader.forEach(x => {\r\n          \r\n          totalWidthOfColMerged = totalWidthOfColMerged + Number(DYNAMICCOLUMNWIDTH);\r\n        });\r\n        return totalWidthOfColMerged;\r\n      } else {\r\n        return 100\r\n      }\r\n    }\r\n  }\r\n\r\n  preparereportHeader(headers: any[] = []) {\r\n    let tmpreportHeaders = [];\r\n    if (headers.length) {\r\n      for (var head of headers) {\r\n        if (head.hasOwnProperty('colHeader') && head.colHeader != '' && (!isNullOrUndefined(head.colHeader))) {\r\n          let totColHeader = headers.filter(x => x.colHeader == head.colHeader);\r\n          let existingOptHeader = tmpreportHeaders.filter(y => y.colHeader == head.colHeader);\r\n          if (!existingOptHeader.length) {\r\n            tmpreportHeaders.push({\r\n              width: getMergedHeaderWidth(totColHeader) + 'px',\r\n              colspan: Number(totColHeader.length),\r\n              alignment: 'center',\r\n              mappingName:head.mappingName,\r\n              colHeader:head.colHeader\r\n            })\r\n          }\r\n        }else{\r\n          tmpreportHeaders.push({\r\n            colHeader:head.colHeader,\r\n            colspan: 1,\r\n            width: Number(head.size) + 'px',\r\n            alignment: 'center',\r\n            mappingName:head.mappingName\r\n          })\r\n        }\r\n      }\r\n      this.mergereportHeaders = tmpreportHeaders ? tmpreportHeaders : [];\r\n    }\r\n\r\n\r\n    function getMergedHeaderWidth(subHeader: any[] = []) {\r\n\r\n      let totalWidthOfColMerged: number = 0;\r\n      if (subHeader.length) {\r\n        subHeader.forEach(x => {\r\n          totalWidthOfColMerged = totalWidthOfColMerged + Number(x.size);\r\n        });\r\n        return totalWidthOfColMerged;\r\n      } else {\r\n        return 100\r\n      }\r\n    }\r\n  }\r\n\r\n  refreshReportColumns(){\r\n    this.reportMainService.refreshReportColumnFormate(this.reportname,this.reportparam)\r\n    .subscribe(\r\n      (res) => {\r\n        if (res.status == \"ok\") {\r\n          this.reportColumnFormate = res.result;\r\n          this.rowsperpage = res.result ? res.result[0].rowsperpage : '100';\r\n          if (this.reportColumnFormate.length == 0) {\r\n            this.ReportColumnName = this.reportHeaders.map(\r\n              x => {\r\n                return <ReportColumnFormat>{\r\n                  ReportName: this.reportname,\r\n                  ColumnName: x.colHeader,\r\n                  MappingName: x.mappingName,\r\n                  Show: x.Visible,\r\n                  ColWidth: x.size,\r\n                  Format: x.stringFormat,\r\n                  Align: x.alignment,\r\n                  ColumnPosition: x.colPosition,\r\n                  ColGroup: x.ColGroup,\r\n                  GroupSummary: x.groupSummaryFunction,\r\n                  GSFunction: x.groupSummaryFunction,\r\n                  TableSummary: x.showTables,\r\n                  TSFunction: x.tableSummaryFunction,\r\n                  ReportTitle: this.reportTitle,\r\n                  rowsperpage: this.rowsperpage\r\n                };\r\n              }\r\n            );\r\n      \r\n            this.ReportColumnName.forEach((x, z) => { x.Show = 1, x.TableSummary = 0, x.GroupSummary = 0, x.ColumnPosition = z + 1 });\r\n      \r\n          } else {\r\n            this.ReportColumnName = this.reportColumnFormate.map(\r\n              x => {\r\n                return <ReportColumnFormat>{\r\n                  ReportName: this.reportname,\r\n                  ColumnName: x.ColumnName,\r\n                  MappingName: x.MappingName,\r\n                  Show: x.Show,\r\n                  ColWidth: x.ColWidth,\r\n                  Format: x.Format,\r\n                  Align: x.Align,\r\n                  ColumnPosition: x.ColumnPosition,\r\n                  ColGroup: x.ColGroup,\r\n                  GroupSummary: x.GroupSummary,\r\n                  GSFunction: x.GSFunction,\r\n                  TableSummary: x.TableSummary,\r\n                  TSFunction: x.TSFunction,\r\n                  ReportTitle: this.reportTitle,\r\n                  rowsperpage: x.rowsperpage\r\n                };\r\n              }\r\n            );\r\n          }\r\n        } else {\r\n          this.reportColumnFormate = [];\r\n        }\r\n      }\r\n    )\r\n\r\n    \r\n  }\r\n  checkedRows: any[] = [];\r\n  celldataList: any[] = [];\r\n  checkData(index, data) {\r\n    if (data.isCheck == true) {\r\n      this.checkedRows.push(data);\r\n    }\r\n  }\r\n\r\n  showcellpayPopup() {\r\n    this.cellpayPayment();\r\n  }\r\n\r\n  cellpayPayment() {\r\n    this.celldataList = this.checkedRows.filter(x => x.isCheck == true);\r\n    //console.log(\"dataList\", this.celldataList)\r\n    if (this.celldataList.length == 0) {\r\n      return;\r\n    }\r\n    this.reportService.drillParam.reportparam.ACID = this.celldataList[0]['ACID'];\r\n    this.reportService.drillParam.reportparam.ACNAME = this.celldataList[0]['CUSTOMER NAME'];\r\n    //console.log(\"this.celldataList[0]['DR AMOUNT']\", this.celldataList[0]['DR AMOUNT'])\r\n    this.reportService.drillParam.reportparam.DRAMNT = this.celldataList[0]['DR AMOUNT']\r\n    // this.router.navigate(\r\n    //   [this.getDrillRouteVoucherWise('CX')],\r\n    //   {\r\n    //     queryParams: {\r\n    //       mode: 'PAYMENT',\r\n    //       returnUrl: this.activeurlpath,\r\n    //     }\r\n    //   }\r\n    // ); \r\n    this._trnMainService.initialFormLoad(75);\r\n    //console.log(\"TrntranList\", this._trnMainService.TrnMainObj.TrntranList)\r\n    this._trnMainService.TrnMainObj.TRNMODE = 'Party Payment';\r\n    // this._trnMainService.TrnMainObj.TRNAC = 'AG124';\r\n    // this._trnMainService.TrnMainObj.TRNACName = 'GLOBAL IME BANK - 02654666522222';\r\n\r\n    this._trnMainService.TrnMainObj.TrntranList[0].AccountItem.ACID = this.reportService.drillParam.reportparam.ACID;\r\n    this._trnMainService.TrnMainObj.TrntranList[0].A_ACID = this.reportService.drillParam.reportparam.ACID;\r\n    this._trnMainService.TrnMainObj.TrntranList[0].AccountItem.ACNAME = this.reportService.drillParam.reportparam.ACNAME;\r\n    this._trnMainService.TrnMainObj.TrntranList[0].acitem = this._trnMainService.TrnMainObj.TrntranList[0].AccountItem;\r\n    var dramnt = this.reportService.drillParam.reportparam.DRAMNT;\r\n    var result = dramnt.replace(/,/g, \"\");\r\n    // //console.log(\"@@result\", result)\r\n    this._trnMainService.TrnMainObj.TrntranList[0].DRAMNT = result;\r\n    let ACID = this.reportService.drillParam.reportparam.ACID;\r\n    let ACNAME = this.reportService.drillParam.reportparam.ACNAME;\r\n    // this._trnMainService.getAccountWiseTrnAmount(ACID);\r\n    this.masterService.getDetailsOfAccount(ACNAME).subscribe(res => {\r\n      if (res.status == \"ok\") {\r\n        let accDetails = res.result;\r\n        this.checkBankDetails(accDetails[0]);\r\n      }\r\n    })\r\n\r\n  }\r\n\r\n  checkBankDetails(ac) {\r\n    this.masterService.getAllAccount(ac.ACID)\r\n      .subscribe(data => {\r\n        if (data.status == 'ok') {\r\n          if (data.result5.length > 0) {\r\n            this._trnMainService.TrnMainObj.TrntranList[0].disableBank = false;\r\n            this._trnMainService.TrnMainObj.TrntranList[0].hasAdditionalBank = true;\r\n            this._trnMainService.TrnMainObj.TrntranList[0].BANKNAME = ac.BANKNAME;\r\n            this._trnMainService.TrnMainObj.TrntranList[0].BANKCODE = ac.BANKCODE;\r\n            this._trnMainService.TrnMainObj.TrntranList[0].ChequeNo = ac.BANKACCOUNTNUMBER;\r\n          } else {\r\n            this._trnMainService.TrnMainObj.TrntranList[0].BANKID = ac.BANKID;\r\n            this._trnMainService.TrnMainObj.TrntranList[0].BANKNAME = ac.BANKNAME;\r\n            this._trnMainService.TrnMainObj.TrntranList[0].BANKCODE = ac.BANKCODE;\r\n            this._trnMainService.TrnMainObj.TrntranList[0].ChequeNo = ac.BANKACCOUNTNUMBER;\r\n            this._trnMainService.TrnMainObj.TrntranList[0].hasAdditionalBank = false;\r\n            if (ac.BANKCODE) {\r\n              this._trnMainService.TrnMainObj.TrntranList[0].disableBank = true;\r\n            } else {\r\n              this._trnMainService.TrnMainObj.TrntranList[0].disableBank = false;\r\n            }\r\n          }\r\n          var dramnt = this.reportService.drillParam.reportparam.DRAMNT;\r\n          var result = dramnt.replace(/,/g, \"\");\r\n          this._trnMainService.TrnMainObj.TrntranList[0].DRAMNT = result;\r\n          this.AddCellPayFee();\r\n        }\r\n      })\r\n\r\n    this._trnMainService.TrnMainObj.TrntranList[0].NARATION1 = \"e-transfer\";\r\n  }\r\n\r\n  CellPayFee: string;\r\n  AddCellPayFee() {\r\n    //console.log(\"CheckResult\", this._trnMainService.TrnMainObj.TrntranList[0])\r\n    this._trnMainService.addRowForTransaction(0);\r\n    var dramnt = this._trnMainService.TrnMainObj.TrntranList[0].DRAMNT\r\n    var cramnt = this._trnMainService.TrnMainObj.TrntranList[0].DRAMNT;\r\n    if (dramnt == null || dramnt == undefined) { this.alertService.warning(\"DRAMNT missing!\"); return; }\r\n    if (this._trnMainService.TrnMainObj.TrntranList[0].acitem.ACNAME != 'CellPay Fee' && (dramnt < 100 || dramnt > 1000000)) {\r\n      this.alertService.warning(\"Please enter amount between 100 and 1000000!\");\r\n      this._trnMainService.TrnMainObj.TrntranList[0].DRAMNT = 0;\r\n      if (this._trnMainService.TrnMainObj.TrntranList[1] && this._trnMainService.TrnMainObj.TrntranList[1].acitem &&\r\n        this._trnMainService.TrnMainObj.TrntranList[1].acitem.ACNAME == 'CellPay Fee') {\r\n        this._trnMainService.TrnMainObj.TrntranList[1].acitem.ACID = '';\r\n        this._trnMainService.TrnMainObj.TrntranList[1].acitem.ACNAME = '';\r\n        this._trnMainService.TrnMainObj.TrntranList[1].DRAMNT = 0;\r\n      }\r\n      return;\r\n    }\r\n    this.CellPayFee = (dramnt ? dramnt : cramnt).toString();\r\n    // //console.log(\"CellPayFeeACID\", this.masterService.userSetting.CellPayFee);\r\n    if (this.masterService.userSetting.CellPayFee == null || this.masterService.userSetting.CellPayFee == '' ||\r\n      this.masterService.userSetting.CellPayFee == undefined) {\r\n      this.alertService.info(\"Please add CellPayFee ACID in database!\");\r\n      return;\r\n    }\r\n    this.masterService.getFeeFromCellPay(this.CellPayFee).subscribe(y => {\r\n\r\n\r\n      this._trnMainService.TrnMainObj.TrntranList[1].DRAMNT = y.fee;\r\n      var ac = <TAcList>{};\r\n\r\n      ac.ACID = this.masterService.userSetting.CellPayFee ? this.masterService.userSetting.CellPayFee : 'AG479';\r\n      ac.ACNAME = 'CellPay Fee';\r\n\r\n\r\n\r\n      this._trnMainService.TrnMainObj.TrntranList[1].AccountItem = ac;\r\n      this._trnMainService.TrnMainObj.TrntranList[1].acitem = ac;\r\n      this._trnMainService.TrnMainObj.TrntranList[1].A_ACID = ac.ACID;\r\n      this._trnMainService.TrnMainObj.TrntranList[1].AccountItem.ACCODE = ac.ACCODE;\r\n      if (this._trnMainService.TrnMainObj.TrntranList[1].acitem.ACNAME == 'CellPay Fee') {\r\n        this._trnMainService.TrnMainObj.TrntranList[1].disableCellPayRow = true;\r\n      }\r\n      this.showCellPayPaymentPopup = true;\r\n\r\n\r\n    })\r\n\r\n  }\r\n\r\n  OkCellpayCommand() {\r\n    if (this._trnMainService.TrnMainObj.TrntranList[1].DRAMNT && this._trnMainService.TrnMainObj.TrntranList[1].DRAMNT > 0) {\r\n\r\n      if (this._trnMainService.TrnMainObj.TRNACName == null ||\r\n        this._trnMainService.TrnMainObj.TRNACName === undefined ||\r\n        this._trnMainService.TrnMainObj.TRNACName == \"\"\r\n      ) {\r\n        alert(\"CASH/BANK A/C IS NOT SELECTED. PLS SELECT IT FIRST\");\r\n        return;\r\n      }\r\n\r\n      this.masterService.saveTransaction(this._trnMainService.TrnMainObj.Mode, this._trnMainService.TrnMainObj)\r\n        .subscribe(\r\n          data => {\r\n            if (data.status == \"ok\") {\r\n              let xyz = this.checkedRows.findIndex(x => x.ACID == this._trnMainService.TrnMainObj.TrntranList[0].A_ACID);\r\n              this.checkedRows.splice(xyz, 1);\r\n              this.spinnerService.hide();\r\n              this.showCellPayPaymentPopup = false;\r\n              this.cellpayPayment();\r\n            }\r\n          })\r\n    }\r\n  }\r\n  CancelCellpayCommand() {\r\n    this.showCellPayPaymentPopup = false;\r\n  }\r\n\r\n  showAcPartyList() {\r\n    //console.log(\"trnmode\", this._trnMainService.TrnMainObj.TRNMODE)\r\n    let TRNMODE = 'PartyPaymentCellpay';\r\n    this.gridACListPartyPopupSettings = {\r\n      title: \"Accounts\",\r\n      apiEndpoints: `/getAccountPagedListByMapId/Master/${TRNMODE}/`,\r\n      defaultFilterIndex: 1,\r\n      columns: [\r\n        {\r\n          key: \"ACCODE\",\r\n          title: \"AC CODE\",\r\n          hidden: false,\r\n          noSearch: false\r\n        },\r\n        {\r\n          key: \"ACNAME\",\r\n          title: \"A/C NAME\",\r\n          hidden: false,\r\n          noSearch: false\r\n        }\r\n      ]\r\n    };\r\n    this.genericGridACListParty.show();\r\n  }\r\n\r\n  onAcPartySelect(value) {\r\n    this._trnMainService.TrnMainObj.TRNAC = value.ACID;\r\n    this._trnMainService.TrnMainObj.TRNACName = value.ACNAME;\r\n  }\r\n\r\n  exportReportFormat() {\r\n    this.spinnerService.show('Exporting, Please Wait...');\r\n    this.reportMainService.exportReportFormat(this.reportname).subscribe((res: any) => {\r\n      let blob: any = new Blob([JSON.stringify(res)], { type: \"text/html\" });\r\n      let reportdownloadname = `${this.showReportName}.txt`;\r\n      var url = URL.createObjectURL(blob);\r\n      var a = document.createElement(\"a\");\r\n      a.href = url;\r\n      a.download = reportdownloadname;\r\n      a.click();\r\n      this.spinnerService.hide();\r\n      this.CancelCommand();\r\n    }, error => {\r\n      this.alertService.info(\"Exporting Unsuccessfull!!\");\r\n      this.spinnerService.hide();\r\n      this.CancelCommand();\r\n    })\r\n  }\r\n\r\n}\r\n\r\nexport interface StockLedgerAccountObj extends ReportFilterOptions{}\r\nexport interface AccoutLedgerObj extends ReportFilterOptions {\r\n}\r\nexport interface PartyLedgerObj extends ReportFilterOptions {\r\n}\r\nexport interface SummaryLedgerObj extends ReportFilterOptions {\r\n\r\n}\r\nexport interface SummaryPartyLedgerObj extends ReportFilterOptions {\r\n\r\n}\r\nexport interface DebtorsReportObj extends ReportFilterOptions {\r\n}\r\nexport interface CreditorsReportObj extends ReportFilterOptions {\r\n}\r\nexport interface DebtorsAgeingObj extends ReportFilterOptions {\r\n}\r\nexport interface CreditorsAgeingObj extends ReportFilterOptions {\r\n}\r\nexport interface ActualVsBudgetObj extends ReportFilterOptions {\r\n}\r\nexport interface VoucherRegisterObj extends ReportFilterOptions {\r\n}\r\nexport interface CashAndBankBookObj extends ReportFilterOptions {\r\n}\r\nexport interface DayBookObj extends ReportFilterOptions {\r\n}\r\nexport interface SubLedgerObj extends ReportFilterOptions {\r\n}\r\nexport interface DebtorsOutstandingObj extends ReportFilterOptions {\r\n}\r\nexport interface CreditorsOutstandingObj extends ReportFilterOptions {\r\n}\r\n\r\nexport interface SubLedgerAcbaseObj extends ReportFilterOptions { }\r\nexport interface TrialBalanceObj extends ReportFilterOptions { }\r\nexport interface AdditionalCostDetailObj extends ReportFilterOptions { }\r\nexport interface AdditionalCostSummaryObj extends ReportFilterOptions { }\r\nexport interface SalesReturnSummaryObj extends ReportFilterOptions { }\r\nexport interface SalesReturnSummaryRetailerObj extends ReportFilterOptions { }\r\nexport interface SalesReturnReportDetailObj extends ReportFilterOptions{}\r\nexport interface StockValuationObj extends ReportFilterOptions{}\r\nexport interface StockSummaryAccountObj extends ReportFilterOptions{}\r\nexport interface CurrentStockWarehousewiseAccObj extends ReportFilterOptions{}\r\nexport interface StockAbcAnalysisAccountObj extends ReportFilterOptions{}\r\nexport interface ConsolidatedTrialBalanceObj extends ReportFilterOptions{}\r\nexport interface ProfitLossObj extends ReportFilterOptions { }\r\nexport interface BalanceSheetObj extends ReportFilterOptions {}\r\nexport interface TDSObj extends ReportFilterOptions{}\r\nexport interface ConsolidatedBalanceSheetObj extends ReportFilterOptions{}\r\nexport interface ConsolidatedProfitLossObj extends ReportFilterOptions{}\r\nexport interface BillTrackingObj extends ReportFilterOptions {}\r\nexport interface CreditorsBillTrackingObj extends ReportFilterOptions {}\r\nexport interface PostDatedChequeObj extends ReportFilterOptions {}\r\nexport interface MonthlySalesPaymentObj extends ReportFilterOptions {}\r\nexport interface LocalPurchaseCostAllocationObj extends ReportFilterOptions {}\r\nexport interface StockAgeingObj extends ReportFilterOptions{}\r\nexport interface CompanyNormsObj extends ReportFilterOptions{}\r\nexport interface IncomeTaxObj extends ReportFilterOptions{}\r\nexport interface FaarAssetObj extends ReportFilterOptions{}\r\nexport interface CashCollectionVoucherObj extends ReportFilterOptions{}\r\n\r\nexport interface ReportFilterOptions {\r\n  ACIDwithPA: boolean;\r\n  ACCODEwithSL: boolean;\r\n  DATE1: string;\r\n  DATE2: string;\r\n  BSDATE1: string;\r\n  BSDATE2: string;\r\n  DIV: string;\r\n  CostCenter: string;\r\n  GROUPBY: string;\r\n  REPORTMODE: string;\r\n  SHOWDPARTYDETAIL: number;\r\n  // OPNINGBLONLY: number;\r\n  DOAGEINGOFOPENINGBL: any;\r\n  ReportType: any;\r\n  ISSUMMARY: string;\r\n  // AreaWise: any;\r\n  IGNOREOPPOSITAC: any;\r\n  SHOWNDATE: any;\r\n  EnableCombineLedger: boolean;\r\n  MERGEREPORT: any;\r\n  SHOWNARATION: any;\r\n  CCENTER: any;\r\n  REPORTMODEVR: any;\r\n  // multipleCostcenter: any[];\r\n  // multipleAreas: any[];\r\n  // showAllContacts: boolean;\r\n  SingleAccount: string;\r\n  AccountsID: string;\r\n  AccountsName: string;\r\n  multipleAccounts: any[];\r\n  ACCNAME: string;\r\n  ACCODE: string;\r\n  multipleACCODE: string;\r\n  multipleACNAME: string;\r\n  ACID: string;\r\n  multipleACID: string;\r\n  Reportnameis: string;\r\n  FROM_VNO: any;\r\n  TO_VNO: any;\r\n  VTYPE: string;\r\n  REPORT_TYPE: any;\r\n  USER: string;\r\n  DETAILREPORT: string;\r\n  assignPrevioiusDate: boolean;\r\n  REPORTMODEC: string;\r\n  SHOWCASEOPENINGCLOSINGBL:any;\r\n  Multiple_GROUP_ACID:string;\r\n  Multiple_GROUP_ACNAME:string;\r\n  multiple_Group_ACCODE:string;\r\n\r\n  \r\n  AccLedger_DATE1: string;\r\n  AccLedger_DATE2: string;\r\n  AccLedger_BSDATE1: string;\r\n  AccLedger_BSDATE2: string;\r\n  AccLedger_ACCNAME: string;\r\n  AccLedger_ACCODE: string;\r\n  AccLedger_ACID: string;\r\n  AccLedger_SingleAccount: string;\r\n  AccLedger_DIV: string;\r\n  AccLedger_CostCenter: string;\r\n  AccLedger_ReportType: any;\r\n  AccLedger_multipleCostcenter: any[];\r\n  AccLedger_showAllContacts: boolean;\r\n  AccLedger_multipleAccounts: any[];\r\n  AccLedger_Areawise: any;\r\n  AccLedger_DIVISIONNAME:any;\r\n  AccLedger_LABELDISPLAYNAME:any;\r\n  AccLedger_LEDGERDISPLAYNAME:any;\r\n  AccLedger_COSTCENTERDISPLAYNAME:any;\r\n  AccLedger_SUMMARYREPORT:any;\r\n  AccLedger_HIDENARATION:any;\r\n  AccLedger_HIDEVOUCHERTYPE:any;\r\n  AccLedger_SHOWITEMDETAIL:any;\r\n  AccLedger_INCLUDEPOSTDATE:any;\r\n  AccLedger_HIDECOSTCENTER:any;\r\n  AccLedger_GroupAccount: string;\r\n  AccLedger_multipleGroupAccounts: any[];\r\n  AccLedger_SingleGroupAccount:string;\r\n  \r\n\r\n  PartyLedger_DATE1: string;\r\n  PartyLedger_DATE2: string;\r\n  PartyLedger_BSDATE1: string;\r\n  PartyLedger_BSDATE2: string;\r\n  PartyLedger_ACCNAME: string;\r\n  PartyLedger_ACCODE: string;\r\n  PartyLedger_ACID: string;\r\n  PartyLedger_SingleAccount: string;\r\n  PartyLedger_DIV: string;\r\n  PartyLedger_CostCenter: string;\r\n  PartyLedger_ReportType: any;\r\n  PartyLedger_showAllContacts: boolean;\r\n  PartyLedger_multipleAccounts: any[];\r\n  PartyLedger_multipleCostcenter: any[];\r\n  PartyLedger_AreaWise: any;\r\n  PartyLedger_ADDRESS: any;\r\n  PartyLedger_VATNO: any;\r\n  PartyLedger_PHONE: any;\r\n  PartyLedger_EMAIL: any;\r\n  PartyLedger_DIVISIONNAME:any;\r\n  PartyLedger_LABELDISPLAYNAME:any;\r\n  PartyLedger_LEDGERDISPLAYNAME:any;\r\n  PartyLedger_COSTCENTERDISPLAYNAME:any;\r\n  PartyLedger_SUMMARYREPORT:any;\r\n  PartyLedger_HIDENARATION:any;\r\n  PartyLedger_HIDEVOUCHERTYPE:any;\r\n  PartyLedger_SHOWITEMDETAIL:any;\r\n  PartyLedger_INCLUDEPOSTDATE:any;\r\n  PartyLedger_HIDECOSTCENTER:any;\r\n  PartyLedger_multipleGroupAccounts:any[];\r\n  PartyLedger_multipleGroupACCName:string;\r\n  PartyLedger_GroupAccount: string;\r\n  \r\n\r\n  SummaryLedger_DATE1: string;\r\n  SummaryLedger_DATE2: string;\r\n  SummaryLedger_BSDATE1: string;\r\n  SummaryLedger_BSDATE2: string;\r\n  SummaryLedger_DIV: string;\r\n  SummaryLedger_CostCenter: string;\r\n  SummaryLedger_ReportType: any;\r\n  SummaryLedger_selectedNode: any;\r\n  SummaryLedger_showAllContacts: boolean;\r\n  SummaryLedger_multipleCostcenter: any[];\r\n  SummaryLedger_DIVISIONNAME:any;\r\n  SummaryLedger_GROUPDISPLAYNAME:any;\r\n  SummaryLedger_COSTCENTERDISPLAYNAME:any;\r\n  SummaryLedger_REPORTOPTIONDISPLAYNAME:any;\r\n\r\n  SummaryPartyLedger_DATE1: string;\r\n  SummaryPartyLedger_DATE2: string;\r\n  SummaryPartyLedger_BSDATE1: string;\r\n  SummaryPartyLedger_BSDATE2: string;\r\n  SummaryPartyLedger_DIV: string;\r\n  SummaryPartyLedger_CostCenter: string;\r\n  SummaryPartyLedger_ReportType: any;\r\n  SummaryPartyLedger_selectedNode: any;\r\n  SummaryPartyLedger_multipleCostcenter: any[];\r\n  SummaryPartyLedger_multipleAreas: any[];\r\n  SummaryPartyLedger_AreaWise: any;\r\n  SummaryPartyLedger_showAllContacts: boolean;\r\n  SummaryPartyLedger_DIVISIONNAME:any;\r\n  SummaryPartyLedger_GROUPDISPLAYNAME:any;\r\n  SummaryPartyLedger_COSTCENTERDISPLAYNAME:any;\r\n  SummaryPartyLedger_REPORTOPTIONDISPLAYNAME:any;\r\n\r\n  Debtors_DATE1: string;\r\n  Debtors_DATE2: string;\r\n  Debtors_BSDATE1: string;\r\n  Debtors_BSDATE2: string;\r\n  Debtors_DIV: string;\r\n  Debtors_CostCenter: string;\r\n  Debtors_OPNINGBLONLY: any;\r\n  Debtors_DIVISIONNAME:any;\r\n  Debtors_COSTCENTERDISPLAYNAME:any;\r\n  Debtors_SHOWBRANCHBL:any;\r\n  Debtors_INCLUDEPOSTEDTRANSACTION:any\r\n  Debtors_salesman:string;\r\n  Debtors_salesman_ID:string;\r\n\r\n\r\n  Creditors_DATE1: string;\r\n  Creditors_DATE2: string;\r\n  Creditors_BSDATE1: string;\r\n  Creditors_BSDATE2: string;\r\n  Creditors_DIV: string;\r\n  Creditors_CostCenter: string;\r\n  Creditors_OPNINGBLONLY: any;\r\n  Creditors_DIVISIONNAME:any;\r\n  Creditors_COSTCENTERDISPLAYNAME:any;\r\n  Creditors_SHOWBRANCHBL:any;\r\n  Creditors_INCLUDEPOSTEDTRANSACTION:any;\r\n\r\n  DebtorsAgeing_DATE1: string;\r\n  DebtorsAgeing_BSDATE1: string;\r\n  DebtorsAgeing_DIV: string;\r\n  DebtorsAgeing_CostCenter: string;\r\n  DebtorsAgeing_DIVISIONNAME:any;\r\n  DebtorsAgeing_COSTCENTERDISPLAYNAME:any;\r\n  DebtorsAgeing_PartyCategory:any;\r\n  DebtorsAgeing_SHOWBRANCHBL:any\r\n\r\n  CreditorsAgeing_DATE1: string;\r\n  CreditorsAgeing_BSDATE1: string;\r\n  CreditorsAgeing_DIV: string;\r\n  CreditorsAgeing_CostCenter: string;\r\n  CreditorsAgeing_DIVISIONNAME:any;\r\n  CreditorsAgeing_COSTCENTERDISPLAYNAME:any;\r\n  CreditorsAgeing_SHOWBRANCHBL:any;\r\n  CreditorsAgeing_PartyCategory:any;\r\n\r\n  VoucherRegister_DATE1: string;\r\n  VoucherRegister_DATE2: string;\r\n  VoucherRegister_BSDATE1: string;\r\n  VoucherRegister_BSDATE2: string;\r\n  VoucherRegister_ACCNAME: string;\r\n  VoucherRegister_ACCODE: string;\r\n  VoucherRegister_ACID: string;\r\n  VoucherRegister_DIV: string;\r\n  VoucherRegister_DIVISIONNAME:any;\r\n  VoucherRegister_COSTCENTERDISPLAYNAME:any;\r\n  VoucherRegister_VTYPEDISPLAYNAME:any;\r\n  VoucherRegister_MultipleVoucher:any[];\r\n  VoucherRegister_VTYPENAME:string;\r\n\r\n  CashBankBook_DATE1: string;\r\n  CashBankBook_DATE2: string;\r\n  CashBankBook_BSDATE1: string;\r\n  CashBankBook_BSDATE2: string;\r\n  CashBankBook_DIV: string;\r\n  CashBankBook_DETAILREPORT: string;\r\n  CashBankBook_DIVISIONNAME:any;\r\n  CashBankBook_COSTCENTERDISPLAYNAME:any;\r\n  CashBankBook_REPORTOPTIONDISPLAYNAME:any;\r\n  CashBankBook_SUMMARYREPORTDISPLAYNAME:any;\r\n  CashBankBook_INCLUDEPOSTDATE:any;\r\n\r\n  DayBook_DATE1: string;\r\n  DayBook_DATE2: string;\r\n  DayBook_BSDATE1: string;\r\n  DayBook_BSDATE2: string;\r\n  DayBook_DIV: string;\r\n  DayBook_VTYPE: string;\r\n  DayBook_DETAILREPORT: string;\r\n  DayBook_SUMMARYTYPE:string;\r\n  DayBook_DIVISIONNAME:any;\r\n  DayBook_VTYPEDISPLAYNAME:any;\r\n  Daybook_FROM_VNO:number;\r\n  Daybook_TO_VNO:number;\r\n  Daybook_MultipleVoucher:any[];\r\n  Daybook_MultipleVoucherId:any;\r\n  DayBook_VTYPENAME:string;\r\n\r\n  SubLedger_DATE1: string;\r\n  SubLedger_DATE2: string;\r\n  SubLedger_BSDATE1: string;\r\n  SubLedger_BSDATE2: string;\r\n  SubLedger_DIV: string;\r\n  SubLedger_CostCenter: string;\r\n  SubLedger_REPORTTYPE: string;\r\n  SubLedger_ACCNAME: string;\r\n  SubLedger_ACCODE: string;\r\n  SubLedger_ACID: string;\r\n  SubLedger_SHOWSUMMARYINTREE: any;\r\n  SubLedger_LEDGERSEGREGATION: any;\r\n  SubLedger_SL_ACID: string;\r\n  SubLedger_SL_ACNAME: string;\r\n  SubLedger_SHOWNDATE: any;\r\n  SubLedger_DIVISIONNAME:any;\r\n  SubLedger_COSTCENTERDISPLAYNAME:any;\r\n  SubLedger_HIDECOSTCENTER:any;\r\n  SubLedger_HIDENARATION:any;\r\n\r\n\r\n  DebtorsOutstanding_DATE1: string;\r\n  DebtorsOutstanding_BSDATE1: string;\r\n  DebtorsOutstanding_DIV: string;\r\n  DebtorsOutstanding_CostCenter: string;\r\n  DebtorsOutstanding_AreaWise: any;\r\n  DebtorsOutstanding_multipleAccounts: any[];\r\n  DebtorsOutstanding_DIVISIONNAME:any;\r\n  DebtorsOutstanding_COSTCENTERDISPLAYNAME:any;\r\n  DebtorsOutstanding_INCLUDEPOSTEDTRANSACTION:any;\r\n\r\n  CreditorsOutstanding_DATE1: string;\r\n  CreditorsOutstanding_BSDATE1: string;\r\n  CreditorsOutstanding_DIV: string;\r\n  CreditorsOutstanding_CostCenter: string;\r\n  CreditorsOutstanding_AreaWise: any;\r\n  CreditorsOutstanding_multipleAccounts: any[];\r\n  CreditorsOutstanding_DIVISIONNAME:any;\r\n  CreditorsOutstanding_COSTCENTERDISPLAYNAME:any;\r\n  CreditorsOutstanding_INCLUDEPOSTEDTRANSACTION:any;\r\n\r\n  SubLedgerAcbase_DATE1: string;\r\n  SubLedgerAcbase_DATE2: string;\r\n  SubLedgerAcbase_BSDATE1: string;\r\n  SubLedgerAcbase_BSDATE2: string;\r\n  SubLedgerAcbase_DIV: string;\r\n  SubLedgerAcbase_CostCenter: string;\r\n  SubLedgerAcbase_REPORTTYPE: string;\r\n  SubLedgerAcbase_ACCNAME: string;\r\n  SubLedgerAcbase_ACCODE: string;\r\n  SubLedgerAcbase_ACID: string;\r\n  SubLedgerAcbase_SHOWSUMMARYINTREE: any;\r\n  SubLedgerAcbase_LEDGERSEGREGATION: any;\r\n  SubLedgerAcbase_SL_ACID: string;\r\n  SubLedgerAcbase_SL_ACNAME: string;\r\n  SubLedgerAcbase_SHOWNDATE: any;\r\n  SubLedgerAcbase_DIVISIONNAME:any;\r\n  SubLedgerAcbase_COSTCENTERDISPLAYNAME:any;\r\n\r\n  TrialBalance_DATE1: string;\r\n  TrialBalance_DATE2: string;\r\n  TrialBalance_BSDATE1: string;\r\n  TrialBalance_BSDATE2: string;\r\n  TrialBalance_DIV: string;\r\n  TrialBalance_CostCenter: string;\r\n  TrialBalance_LEDGERWISE: any;\r\n  TrialBalance_SUMMARYREPORT: any;\r\n  TrialBalance_LEVELS: any;\r\n  TrialBalance_SHOWOPENINGTRIALONLY: any;\r\n  TrialBalance_SHOWSUBLEDGER: any;\r\n  TrialBalance_SHOWDEBTORSCREDITORSDETAILS: any;\r\n  TrialBalance_SHOWSTOCKVALUE: any;\r\n  TrialBalance_SHOWCLOSINGONPY: any;\r\n  TrialBalance_SHOWZEROBL: any;\r\n  TrialBalance_NODEACID: string;\r\n  TrialBalance_NODEACNAME: string;\r\n  TrialBalance_COMPANYTYPE:string;\r\n  TrialBalance_DIVISIONNAME:any;\r\n  TrialBalance_COSTCENTERDISPLAYNAME:any;\r\n  TrialBalance_REPORTOPTIONDISPLAYNAME:any;\r\n  TrialBalance_SUMMARYREPORTDISPLAYNAME:any;\r\n  TrialBalance_SHOWNETCLOSING:any;\r\n\r\n  AdditionalCostDetail_DATE1: string;\r\n  AdditionalCostDetail_DATE2: string;\r\n  AdditionalCostDetail_BSDATE1: string;\r\n  AdditionalCostDetail_BSDATE2: string;\r\n  AdditionalCostDetail_DIV: string;\r\n  AdditionalCostDetail_VOUCHERNO: string;\r\n  AdditionalCostDetail_ISSUMMARY: string;\r\n  AdditionalCostDetail_ACID: string;\r\n  AdditionalCostDetail_ACNAME: string;\r\n  AdditionalCostDetail_DIVISIONNAME:any;\r\n  AdditionalCostDetail_SUMMARYREPORTDISPLAYNAME:any;\r\n  AdditionalCostDetail_COSTCENTERNAME:any;\r\n  AdditionalCostDetail_CCID:any;\r\n\r\n  AdditionalCostSummary_DATE1: string;\r\n  AdditionalCostSummary_DATE2: string;\r\n  AdditionalCostSummary_BSDATE1: string;\r\n  AdditionalCostSummary_BSDATE2: string;\r\n  AdditionalCostSummary_DIV: string;\r\n  AdditionalCostSummary_VOUCHERNO: string;\r\n  AdditionalCostSummary_ISSUMMARY: string;\r\n  AdditionalCostSummary_ACID: string;\r\n  AdditionalCostSummary_ACNAME: string;\r\n  AdditionalCostSummary_DIVISIONNAME:any;\r\n  AdditionalCostSummary_SUMMARYREPORTDISPLAYNAME:any;\r\n  AdditionalCostSummary_COSTCENTERNAME:any;\r\n  AdditionalCostSummary_CCID:any;\r\n\r\n  SalesReturnSummary_DATE1: string;\r\n  SalesReturnSummary_DATE2: string;\r\n  SalesReturnSummary_BSDATE1: string;\r\n  SalesReturnSummary_BSDATE2: string;\r\n  SalesReturnSummary_DIV: string;\r\n\r\n  SalesReturnSummaryRetailer_DATE1: string;\r\n  SalesReturnSummaryRetailer_DATE2: string;\r\n  SalesReturnSummaryRetailer_BSDATE1: string;\r\n  SalesReturnSummaryRetailer_BSDATE2: string;\r\n  SalesReturnSummaryRetailer_DIV: string;\r\n  SalesReturnSummaryRetailer_SalesmanID: string;\r\n  SalesReturnSummaryRetailer_Salesman: string;\r\n  SalesReturnSummaryRetailer_RetailerName: string;\r\n  SalesReturnSummaryRetailer_RetailerID: string;\r\n  SalesReturnSummaryRetailer_MultipleSalesman: any[];\r\n  SalesReturnSummaryRetailer_MultipleRetailer: any[];\r\n  SalesReturnSummaryRetailer_EnableSalesman: boolean;\r\n  SalesReturnSummaryRetailer_EnableRetailer: boolean;\r\n\r\n  SalesReturnReportDetail_DATE1: string;\r\n  SalesReturnReportDetail_DATE2: string;\r\n  SalesReturnReportDetail_BSDATE1: string;\r\n  SalesReturnReportDetail_BSDATE2: string;\r\n  SalesReturnReportDetail_DIV: string;\r\n  SalesReturnReportDetail_ProductID: string;\r\n  SalesReturnReportDetail_ProductName: string;\r\n  SalesReturnReportDetail_BrandID: string;\r\n  SalesReturnReportDetail_BrandName: string;\r\n  SalesReturnReportDetail_RetailerID: string;\r\n  SalesReturnReportDetail_RetailerName: string;\r\n  SalesReturnReportDetail_MultipleProduct: any[];\r\n  SalesReturnReportDetail_EnableProduct: boolean;\r\n  SalesReturnReportDetail_MultipleBrand: any[];\r\n  SalesReturnReportDetail_EanbleBrand: boolean;\r\n  SalesReturnReportDetail_MultipleRetailer: any[];\r\n  SalesReturnReportDetail_EnableRetailer: boolean;\r\n\r\n  StockValuationAccount_DATE1:string;\r\n  StockValuationAccount_DATE2:string;\r\n  StockValuationAccount_BSDATE1:string;\r\n  StockValuationAccount_BSDATE2:string;\r\n  StockValuationAccount_DIV:string;\r\n  StockValuationAccount_MCODE:string;\r\n  StockValuationAccount_SHOWDETAIL:any;\r\n  StockValuationAccount_ITEM:string;\r\n  StockValuationAccount_MENUCODE:string;\r\n  StockValuationAccount_BARCODE:string;\r\n  \r\n  StockLedgerReportAcc_DATE1:string;\r\n  StockLedgerReportAcc_DATE2:string;\r\n  StockLedgerReportAcc_BSDATE1:string;\r\n  StockLedgerReportAcc_BSDATE2:string;\r\n  StockLedgerReportAcc_DIV:string;\r\n  StockLedgerReportAcc_MCODE:string;\r\n  StockLedgerReportAcc_WAREHOUSE:string;\r\n  StockLedgerReportAcc_ITEMGROUPWISE:any;\r\n  StockLedgerReportAcc_ITEMGROUP:string;\r\n  StockLedgerReportAcc_SHOWDETAIL:any;\r\n  StockLedgerReportAcc_ITEM:string;\r\n  StockLedgerReportAcc_MENUCODE:string;\r\n  StockLedgerReportAcc_BARCODE:string;\r\n  StockLedgerReportAcc_VARIANT:any;\r\n  StockLedgerReportAcc_VARIANTVALUES:any;\r\n  StockLedgerReportAcc_SHOWVARIANT:any;\r\n  StockLedgerReportAcc_SHOWBATCHWISE:any;\r\n  \r\n  StockSummaryAccount_DATE1:string;\r\n  StockSummaryAccount_DATE2:string;\r\n  StockSummaryAccount_BSDATE1:string;\r\n  StockSummaryAccount_BSDATE2:string;\r\n  StockSummaryAccount_DIV:string;\r\n  StockSummaryAccount_DETAILFORMAT:any;\r\n  StockSummaryAccount_SUPPLIERCODE:string;\r\n  StockSummaryAccount_SUPPLIER:string;\r\n  StockSummaryAccount_MCODE:string;\r\n  StockSummaryAccount_ITEM:string;\r\n  StockSummaryAccount_MENUCODE:string;\r\n  StockSummaryAccount_REPORTTYPE:any;\r\n  StockSummaryAccount_ReportMode:any;\r\n  StockSummaryAccount_ShowItemInGroupWiseReport:any;\r\n  StockSummaryAccount_WAREHOUSE:string;\r\n  StockSummaryAccount_MGROUP:string;\r\n  StockSummaryAccount_PTYPE:any;\r\n  StockSummaryAccount_MCAT:string;\r\n  StockSummaryAccount_BARCODE:string;\r\n  StockSummaryAccount_SHOWDETAIL:any;\r\n  StockSummaryAccount_VARIANT:any;\r\n  StockSummaryAccount_VARIANTVALUES:any;\r\n  StockSummaryAccount_SHOWBATCHWISE:any;\r\n  StockSummaryAccount_SHOWALTUNIT:any;\r\n  StockSummaryAccount_SHOWVARIANT:any;\r\n  StockSummaryAccount_SHOWGROUPING:any;\r\n  StockSummaryAccount_BRANDID:any;\r\n  StockSummaryAccount_BRANDNAME:any;\r\n\r\n  CurrentStockWarehouseWiseAccount_DATE1:string;\r\n  CurrentStockWarehouseWiseAccount_DATE2:string;\r\n  CurrentStockWarehouseWiseAccount_BSDATE1:string;\r\n  CurrentStockWarehouseWiseAccount_BSDATE2:string;\r\n  CurrentStockWarehouseWiseAccount_DIV:string;\r\n  CurrentStockWarehouseWiseAccount_COMPANY:string;\r\n  CurrentStockWarehouseWiseAccount_WAREHOUSETYPE:string;\r\n  CurrentStockWarehouseWiseAccount_WAREHOUSE:string;\r\n  CurrentStockWarehouseWiseAccount_SHOWBATCHWISE:any;\r\n\r\n  StockAbcAnalysisAccount_DATE1:string;\r\n  StockAbcAnalysisAccount_DATE2:string;\r\n  StockAbcAnalysisAccount_BSDATE1:string;\r\n  StockAbcAnalysisAccount_BSDATE2:string;\r\n  StockAbcAnalysisAccount_DIV:string;\r\n  StockAbcAnalysisAccount_SUPPLIERCODE:string;\r\n  StockAbcAnalysisAccount_SUPPLIER:string;\r\n  StockAbcAnalysisAccount_MCODE:string;\r\n  StockAbcAnalysisAccount_ITEM:string;\r\n  StockAbcAnalysisAccount_MENUCODE:string;\r\n  StockAbcAnalysisAccount_REPORTTYPE:any;\r\n  StockAbcAnalysisAccount_ShowItemInGroupWiseReport:any;\r\n  StockAbcAnalysisAccount_WAREHOUSE:string;\r\n  StockAbcAnalysisAccount_MGROUP:string;\r\n  StockAbcAnalysisAccount_PTYPE:any;\r\n  StockAbcAnalysisAccount_MCAT:string;\r\n  StockAbcAnalysisAccount_VARIANT:any;\r\n  StockAbcAnalysisAccount_VARIANTVALUES:any;\r\n\r\n  Consolidated_TrialBalance_DATE1: string;\r\n  Consolidated_TrialBalance_DATE2: string;\r\n  Consolidated_TrialBalance_BSDATE1: string;\r\n  Consolidated_TrialBalance_BSDATE2: string;\r\n  Consolidated_TrialBalance_DIV: string;\r\n  Consolidated_TrialBalance_CostCenter: string;\r\n  Consolidated_TrialBalance_LEDGERWISE: any;\r\n  Consolidated_TrialBalance_LEVELS: any;\r\n  Consolidated_TrialBalance_SHOWOPENINGTRIALONLY: any;\r\n  Consolidated_TrialBalance_SHOWSUBLEDGER: any;\r\n  Consolidated_TrialBalance_SHOWDEBTORSCREDITORSDETAILS: any;\r\n  Consolidated_TrialBalance_SHOWSTOCKVALUE: any;\r\n  Consolidated_TrialBalance_SHOWZEROBL: any;\r\n  Consolidated_TrialBalance_DIVISIONNAME:any;\r\n  Consolidated_TrialBalance_COSTCENTERDISPLAYNAME:any;\r\n  Consolidated_TrialBalance_SHOWNETCLOSING :any;\r\n\r\n  TDS_DATE1: string;\r\n  TDS_DATE2: string;\r\n  TDS_BSDATE1: string;\r\n  TDS_BSDATE2: string;\r\n  TDS_DIV: string;\r\n  TDS_TDSNAME:any;\r\n  TDS_TDSID: any;\r\n  TDS_REPORTTYPE:any;\r\n  TDS_DIVISIONNAME:any;\r\n  TDS_PARTYNAME:any;\r\n  TDS_PARTYID:any;\r\n  TDS_ISIRDFORMAT :any;\r\n  TDS_SL_ACID:any;\r\n  TDS_SL_ACNAME:any;\r\n\r\n  DebtorsReport_AreaWise:any;\r\n  DebtorsReport_AreaWiseDisplayName:any;\r\n  DebtorsReport_PartyGroup:any;\r\n  DebtorsReport_PartyGroupDisplayName:any;\r\n  DebtorsReport_PartyCategory:any;\r\n  DebtorsReport_PartyCategoryDisplayName:any;\r\n  CreditorsReport_AreaWise:any;\r\n  CreditorsReport_AreaWiseDisplayName:any;\r\n  CreditorsReport_PartyGroup:any;\r\n  CreditorsReport_PartyGroupDisplayName:any;\r\n  CreditorsReport_PartyCategory:any;\r\n  CreditorsReport_PartyCategoryDisplayName:any;\r\n  DebtorsAgeing_AreaWise:any;\r\n  DebtorsAgeing_PartyGroup:any;\r\n  CreditorsAgeing_AreaWise:any;\r\n  CreditorsAgeing_PartyGroup:any;\r\n  DebtorsOutstanding_PartyGroup:any;\r\n  CreditorsOutstanding_PartyGroup:any;\r\n  DebtorsOutstanding_AreaWiseInSummary:any;\r\n  CreditorsOutstanding_AreaWiseInSummary:any;\r\n  CreditorsAgeingObj_INCLUDEPOSTEDTRANSACTION:any;\r\n  DebtorsAgeingObj_INCLUDEPOSTEDTRANSACTION:any;\r\n  \r\n\r\n  ProfitLoss_DATE1: string;\r\n  ProfitLoss_DATE2: string;\r\n  ProfitLoss_BSDATE1: string;\r\n  ProfitLoss_BSDATE2: string;\r\n  ProfitLoss_DIV: string;\r\n  ProfitLoss_SHOWSUBLEDGER: any;\r\n  ProfitLoss_COMPANYTYPE:string;\r\n  ProfitLoss_DIVISIONNAME:any;\r\n  ProfitLoss_OSTOCK:any;\r\n  ProfitLoss_CSTOCK:any;\r\n  ProfitLoss_VERTICALFORMAT:any;\r\n  ProfitLoss_CostCenter: any;\r\n  ProfitLoss_COSTCENTERDISPLAYNAME:any;\r\n\r\n  BalanceSheet_DATE1: string;\r\n  BalanceSheet_DATE2: string;\r\n  BalanceSheet_BSDATE1: string;\r\n  BalanceSheet_BSDATE2: string;\r\n  BalanceSheet_DIV: string;\r\n  BalanceSheet_SHOWSUBLEDGER: any;\r\n  BalanceSheet_COMPANYTYPE:string;\r\n  BalanceSheet_DIVISIONNAME:any;\r\n  BalanceSheet_OSTOCK:any;\r\n  BalanceSheet_CSTOCK:any;\r\n  BalanceSheet_VERTICALFORMAT:any;\r\n  BalanceSheet_SHOWDEBTORSCREDITORS: any;\r\n  BalanceSheet_CostCenter: any;\r\n  BalanceSheet_COSTCENTERDISPLAYNAME:any;\r\n\r\n  Consolidated_BalanceSheet_DATE1: string;\r\n  Consolidated_BalanceSheet_DATE2: string;\r\n  Consolidated_BalanceSheet_BSDATE1: string;\r\n  Consolidated_BalanceSheet_BSDATE2: string;\r\n  Consolidated_BalanceSheet_SHOWTOTALINGROUP: any;\r\n  Consolidated_BalanceSheet_COMPANYTYPE:string;\r\n  Consolidated_BalanceSheet_SHOWDEBTORSCREDITORS: any;\r\n\r\n  Consolidated_ProfitLoss_DATE1: string;\r\n  Consolidated_ProfitLoss_DATE2: string;\r\n  Consolidated_ProfitLoss_BSDATE1: string;\r\n  Consolidated_ProfitLoss_BSDATE2: string;\r\n  Consolidated_ProfitLoss_SHOWTOTALINGROUP: any;\r\n  Consolidated_ProfitLoss_COSTCENTERWISE:any;\r\n  Consolidated_ProfitLoss_COMPANYTYPE:string;\r\n\r\n  DebtorsReport_INCLUDEPOSTDATE:any;\r\n  CreditorsReport_INCLUDEPOSTDATE:any;\r\n\r\n  BillTracking_DATE1: string;\r\n  BillTracking_DATE2: string;\r\n  BillTracking_BSDATE1: string;\r\n  BillTracking_BSDATE2: string;\r\n  BillTracking_ACCNAME: string;\r\n  BillTracking_ACID: string;\r\n  BillTracking_DIV: string;\r\n  BillTracking_CostCenter: string;\r\n  BillTracking_VoucherType:string;\r\n  BillTracking_DIVISIONNAME:any;\r\n  BillTracking_COSTCENTERDISPLAYNAME:any;\r\n  BillTracking_Detail:any;\r\n\r\n  CreditorsBillTracking_DATE1: string;\r\n  CreditorsBillTracking_DATE2: string;\r\n  CreditorsBillTracking_BSDATE1: string;\r\n  CreditorsBillTracking_BSDATE2: string;\r\n  CreditorsBillTracking_ACCNAME: string;\r\n  CreditorsBillTracking_ACID: string;\r\n  CreditorsBillTracking_DIV: string;\r\n  CreditorsBillTracking_CostCenter: string;\r\n  CreditorsBillTracking_VoucherType:string;\r\n  CreditorsBillTracking_DIVISIONNAME:any;\r\n  CreditorsBillTracking_COSTCENTERDISPLAYNAME:any;\r\n  CreditorsBillTracking_Detail:any;\r\n\r\n  PostDatedCheque_DATE1: string;\r\n  PostDatedCheque_DATE2: string;\r\n  PostDatedCheque_BSDATE1: string;\r\n  PostDatedCheque_BSDATE2: string;\r\n  PostDatedCheque_DIV: string;\r\n  PostDatedCheque_CostCenter: string;\r\n  PostDatedCheque_DIVISIONNAME:any;\r\n  PostDatedCheque_COSTCENTERDISPLAYNAME:any;\r\n  // PostDatedCheque_CDATE1: string;\r\n  // PostDatedCheque_CDATE2: string;\r\n  PostDatedCheque_CBSDATE1: string;\r\n  PostDatedCheque_CBSDATE2: string;\r\n  PostDatedCheque_TRANTYPE: any;\r\n  PostDatedCheque_PARTYTYPE: any;\r\n  PostDatedCheque_DETAILSREPORT: any;\r\n  PostDatedCheque_TRANSACTIONMODE: any;\r\n  PostDatedCheque_CHEQUEDATEWISEREPORT: any;\r\n  PostDatedCheque_REALIZEDAYS: any;\r\n  // PostDatedCheque_TDATE1:string;\r\n  // PostDatedCheque_TDATE2:string;\r\n  PostDatedCheque_BANKNAME:any\r\n  PostDatedCheque_BANKID:any;\r\n  PostDatedCheque_PARTYID:any;\r\n  PostDatedCheque_PARTYNAME:any;\r\n\r\n\r\n  MonthlySalesPayment_DATE1: string;\r\n  MonthlySalesPayment_DATE2: string;\r\n  MonthlySalesPayment_BSDATE1: string;\r\n  MonthlySalesPayment_BSDATE2: string;\r\n  MonthlySalesPayment_DIV: string;\r\n  MonthlySalesPayment_DIVISIONAME:any;\r\n  MonthlySalesPayment_ACCNAME: string;\r\n  MonthlySalesPayment_ACID:string;\r\n  MonthlySalesPayment_REPORTOPTIONDISPLAYNAME:any;\r\n\r\n\r\n  LocalPurchaseCostAllocation_DATE1: string;\r\n  LocalPurchaseCostAllocation_DATE2: string;\r\n  LocalPurchaseCostAllocation_BSDATE1: string;\r\n  LocalPurchaseCostAllocation_BSDATE2: string;\r\n  LocalPurchaseCostAllocation_ACCNAME: string;\r\n  LocalPurchaseCostAllocation_ACID:string;\r\n  LocalPurchaseCostAllocation_PI_VOUCHERNO:string;\r\n  LocalPurchaseCostAllocation_REPORTMODE :any;\r\n  LocalPurchaseCostAllocation_CAPITALPURCHASE_VCHRNO:string;\r\n  LocalPurchaseCostAllocation_REPORTOPTIONDISPLAYNAME:any;\r\n\r\n\r\n\r\n  StockAgeing_AGE1:any;\r\n StockAgeing_AGE2:any;\r\n StockAgeing_AGE3:any;\r\n StockAgeing_AGE4:any;\r\n StockAgeing_AGE5:any;\r\n StockAgeing_AGE6:any;\r\n StockAgeing_AGE7:any;\r\n StockAgeing_AGE8:any;\r\n StockAgeing_AGE9:any;\r\n StockAgeing_AGE10:any;\r\n\r\n\r\n ActualVsBudget_DATE1;\r\n ActualVsBudget_BSDATE1;\r\n ActualVsBudget_DATE2;\r\n ActualVsBudget_BSDATE2;\r\n ActualVsBudget_DIV;\r\n ActualVsBudget_CostCenter;\r\n ActualVsBudget_COSTCENTERWISE;\r\n ActualVsBudget_OPT_COSTCENTER;\r\n ActualVsBudget_COSTCENTERCATEGORY;\r\n//  ActualVsBudget_ShowZeroVarianceOnly;\r\n//  ActualVsBudget_ShowInPercent;\r\n//  ActualVsBudget_ShowInAmount;\r\n//  ActualVsBudget_OverBudget;\r\n//  ActualVsBudget_UnderBudget;\r\n ActualVsBudget_OVERVIEWREPORT;\r\n ActualVsBudget_ACTUALVSBUDGETREPORT;\r\n ActualVsBudget_AccLedger_ACCNAME;\r\n ActualVsBudget_AccLedger_ACID\r\n ActualVsBudget_Budget_Name;\r\n ActualVsBudget_Budget_Num\r\n\r\n ActualVsBudget_DATETYPE;\r\n ActualVsBudget_CheckOption;\r\n ActualVsBudget_ShowZeroVariance;\r\n ActualVsBudget_OverBUdget;\r\n ActualVsBudget_UnderBudget;\r\n\r\n ActualVsBudget_REPORTOPTION;\r\n ActualVsBudget_BUDGETSELECTION;\r\n ActualVsBudget_DIVISIONNAME;\r\n ActualVsBudget_COSTCENTERNAME;\r\n ActualVsBudget_REPORTOPTIONDISPLAYNAME;\r\n ActualVsBudget_COSTCENTERCATEGORYNAME;\r\n ActualVsBudget_BUDGETINTERVAL;\r\n ActualVsBudget_INCLUDEPOSTDATE:any;\r\n ActualVsBudget_INCLUDEUNAPPROVEDTRANSACTION:any;\r\n \r\n\r\n CompanyNorms_REPORTOPTIONDISPLAYNAME:any;\r\n  CompanyNorms_REPORTOPTION: string;\r\n  CompanyNorms_POOLNAME: string;\r\n  CompanyNorms_ACCODE: any;\r\n  CompanyNorms_LEDGERNAME: any;\r\n  CompanyNorms_MCODE: any;\r\n  CompanyNorms_ASSETNAME: any;\r\n  CompanyNorms_ITEMID: any;\r\n  CompanyNorms_ASSETID: any;\r\n  CompanyNorms_INCLUDEOPENINGVALUE: any;\r\n  CompanyNorms_ASSETGROUPID: number;\r\n\r\n  IncomeTax_POOLNAME: string;\r\n  IncomeTax_REPORTOPTION: string;\r\n  IncomeTax_TAXWISE: any;\r\n  IncomeTax_REPORTTYPE: any;\r\n\r\n  FaarAsset_REPORTOPTIONDISPLAYNAME:any;\r\n  FaarAsset_REPORTOPTION: string;\r\n  FaarAsset_POOLNAME: string;\r\n  FaarAsset_ACCODE: any;\r\n  FaarAsset_LEDGERNAME: any;\r\n  FaarAsset_MCODE: any;\r\n  FaarAsset_ASSETNAME: any;\r\n  FaarAsset_ITEMID: any;\r\n  FaarAsset_ASSETID: any;\r\n  FaarAsset_INCLUDEOPENINGVALUE: any;\r\n  FaarAsset_ASSETGROUPID: number;\r\n\r\n  CashCollectionVoucher_DATE1:string;\r\n  CashCollectionVoucher_DATE2:string;\r\n  CashCollectionVoucher_BSDATE1:string;\r\n  CashCollectionVoucher_BSDATE2:string;\r\n  CashCollectionVoucher_VoucherStatus:any;\r\n  CashCollectionVoucher_PartyName:string;\r\n  CashCollectionVoucher_PartyID:string;\r\n}\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/pages/Reports/components/ReportMain/ReportMain.ts","import {Subject} from \"rxjs/Subject\";\r\n\r\nexport class ContextMenuView {\r\n    show = false;\r\n    menuItems: MenuItem [];\r\n    mouseEvent: any;\r\n\r\n    constructor(\r\n        ) { }\r\n}\r\n\r\nexport class MenuItem {\r\n    constructor(\r\n        public label: string,\r\n        public value: string,\r\n        public subject: Subject<any>\r\n    ) { }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/pages/Reports/context-menu/context-menu-data.ts","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar formatRegExp = /%[sdj%]/g;\nexports.format = function(f) {\n  if (!isString(f)) {\n    var objects = [];\n    for (var i = 0; i < arguments.length; i++) {\n      objects.push(inspect(arguments[i]));\n    }\n    return objects.join(' ');\n  }\n\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  var str = String(f).replace(formatRegExp, function(x) {\n    if (x === '%%') return '%';\n    if (i >= len) return x;\n    switch (x) {\n      case '%s': return String(args[i++]);\n      case '%d': return Number(args[i++]);\n      case '%j':\n        try {\n          return JSON.stringify(args[i++]);\n        } catch (_) {\n          return '[Circular]';\n        }\n      default:\n        return x;\n    }\n  });\n  for (var x = args[i]; i < len; x = args[++i]) {\n    if (isNull(x) || !isObject(x)) {\n      str += ' ' + x;\n    } else {\n      str += ' ' + inspect(x);\n    }\n  }\n  return str;\n};\n\n\n// Mark that a method should not be used.\n// Returns a modified function which warns once by default.\n// If --no-deprecation is set, then it is a no-op.\nexports.deprecate = function(fn, msg) {\n  // Allow for deprecating things in the process of starting up.\n  if (isUndefined(global.process)) {\n    return function() {\n      return exports.deprecate(fn, msg).apply(this, arguments);\n    };\n  }\n\n  if (process.noDeprecation === true) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (process.throwDeprecation) {\n        throw new Error(msg);\n      } else if (process.traceDeprecation) {\n        console.trace(msg);\n      } else {\n        console.error(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n};\n\n\nvar debugs = {};\nvar debugEnviron;\nexports.debuglog = function(set) {\n  if (isUndefined(debugEnviron))\n    debugEnviron = process.env.NODE_DEBUG || '';\n  set = set.toUpperCase();\n  if (!debugs[set]) {\n    if (new RegExp('\\\\b' + set + '\\\\b', 'i').test(debugEnviron)) {\n      var pid = process.pid;\n      debugs[set] = function() {\n        var msg = exports.format.apply(exports, arguments);\n        console.error('%s %d: %s', set, pid, msg);\n      };\n    } else {\n      debugs[set] = function() {};\n    }\n  }\n  return debugs[set];\n};\n\n\n/**\n * Echos the value of a value. Trys to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Object} opts Optional options object that alters the output.\n */\n/* legacy: obj, showHidden, depth, colors*/\nfunction inspect(obj, opts) {\n  // default options\n  var ctx = {\n    seen: [],\n    stylize: stylizeNoColor\n  };\n  // legacy...\n  if (arguments.length >= 3) ctx.depth = arguments[2];\n  if (arguments.length >= 4) ctx.colors = arguments[3];\n  if (isBoolean(opts)) {\n    // legacy...\n    ctx.showHidden = opts;\n  } else if (opts) {\n    // got an \"options\" object\n    exports._extend(ctx, opts);\n  }\n  // set default options\n  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n  if (isUndefined(ctx.depth)) ctx.depth = 2;\n  if (isUndefined(ctx.colors)) ctx.colors = false;\n  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\n  return formatValue(ctx, obj, ctx.depth);\n}\nexports.inspect = inspect;\n\n\n// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\ninspect.colors = {\n  'bold' : [1, 22],\n  'italic' : [3, 23],\n  'underline' : [4, 24],\n  'inverse' : [7, 27],\n  'white' : [37, 39],\n  'grey' : [90, 39],\n  'black' : [30, 39],\n  'blue' : [34, 39],\n  'cyan' : [36, 39],\n  'green' : [32, 39],\n  'magenta' : [35, 39],\n  'red' : [31, 39],\n  'yellow' : [33, 39]\n};\n\n// Don't use 'blue' not visible on cmd.exe\ninspect.styles = {\n  'special': 'cyan',\n  'number': 'yellow',\n  'boolean': 'yellow',\n  'undefined': 'grey',\n  'null': 'bold',\n  'string': 'green',\n  'date': 'magenta',\n  // \"name\": intentionally not styling\n  'regexp': 'red'\n};\n\n\nfunction stylizeWithColor(str, styleType) {\n  var style = inspect.styles[styleType];\n\n  if (style) {\n    return '\\u001b[' + inspect.colors[style][0] + 'm' + str +\n           '\\u001b[' + inspect.colors[style][1] + 'm';\n  } else {\n    return str;\n  }\n}\n\n\nfunction stylizeNoColor(str, styleType) {\n  return str;\n}\n\n\nfunction arrayToHash(array) {\n  var hash = {};\n\n  array.forEach(function(val, idx) {\n    hash[val] = true;\n  });\n\n  return hash;\n}\n\n\nfunction formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (ctx.customInspect &&\n      value &&\n      isFunction(value.inspect) &&\n      // Filter out the util module, it's inspect function is special\n      value.inspect !== exports.inspect &&\n      // Also filter out any prototype objects using the circular check.\n      !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes, ctx);\n    if (!isString(ret)) {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n    return ret;\n  }\n\n  // Primitive types cannot have properties\n  var primitive = formatPrimitive(ctx, value);\n  if (primitive) {\n    return primitive;\n  }\n\n  // Look up the keys of the object.\n  var keys = Object.keys(value);\n  var visibleKeys = arrayToHash(keys);\n\n  if (ctx.showHidden) {\n    keys = Object.getOwnPropertyNames(value);\n  }\n\n  // IE doesn't make error fields non-enumerable\n  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n  if (isError(value)\n      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n    return formatError(value);\n  }\n\n  // Some type of object without properties can be shortcutted.\n  if (keys.length === 0) {\n    if (isFunction(value)) {\n      var name = value.name ? ': ' + value.name : '';\n      return ctx.stylize('[Function' + name + ']', 'special');\n    }\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n    }\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = '', array = false, braces = ['{', '}'];\n\n  // Make Array say that they are Array\n  if (isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  }\n\n  // Make functions say that they are functions\n  if (isFunction(value)) {\n    var n = value.name ? ': ' + value.name : '';\n    base = ' [Function' + n + ']';\n  }\n\n  // Make RegExps say that they are RegExps\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  }\n\n  // Make dates with properties first say the date\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  }\n\n  // Make error with message first say the error\n  if (isError(value)) {\n    base = ' ' + formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n\n  var output;\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else {\n    output = keys.map(function(key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n\n  return reduceToSingleString(output, base, braces);\n}\n\n\nfunction formatPrimitive(ctx, value) {\n  if (isUndefined(value))\n    return ctx.stylize('undefined', 'undefined');\n  if (isString(value)) {\n    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n                                             .replace(/'/g, \"\\\\'\")\n                                             .replace(/\\\\\"/g, '\"') + '\\'';\n    return ctx.stylize(simple, 'string');\n  }\n  if (isNumber(value))\n    return ctx.stylize('' + value, 'number');\n  if (isBoolean(value))\n    return ctx.stylize('' + value, 'boolean');\n  // For some reason typeof null is \"object\", so special case here.\n  if (isNull(value))\n    return ctx.stylize('null', 'null');\n}\n\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (hasOwnProperty(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n  keys.forEach(function(key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          key, true));\n    }\n  });\n  return output;\n}\n\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name, str, desc;\n  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };\n  if (desc.get) {\n    if (desc.set) {\n      str = ctx.stylize('[Getter/Setter]', 'special');\n    } else {\n      str = ctx.stylize('[Getter]', 'special');\n    }\n  } else {\n    if (desc.set) {\n      str = ctx.stylize('[Setter]', 'special');\n    }\n  }\n  if (!hasOwnProperty(visibleKeys, key)) {\n    name = '[' + key + ']';\n  }\n  if (!str) {\n    if (ctx.seen.indexOf(desc.value) < 0) {\n      if (isNull(recurseTimes)) {\n        str = formatValue(ctx, desc.value, null);\n      } else {\n        str = formatValue(ctx, desc.value, recurseTimes - 1);\n      }\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function(line) {\n            return '  ' + line;\n          }).join('\\n').substr(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function(line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n  if (isUndefined(name)) {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n    name = JSON.stringify('' + key);\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.substr(1, name.length - 2);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\")\n                 .replace(/\\\\\"/g, '\"')\n                 .replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\n\nfunction reduceToSingleString(output, base, braces) {\n  var numLinesEst = 0;\n  var length = output.reduce(function(prev, cur) {\n    numLinesEst++;\n    if (cur.indexOf('\\n') >= 0) numLinesEst++;\n    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] +\n           (base === '' ? '' : base + '\\n ') +\n           ' ' +\n           output.join(',\\n  ') +\n           ' ' +\n           braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n}\n\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\nfunction isArray(ar) {\n  return Array.isArray(ar);\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return isObject(re) && objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return isObject(d) && objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return isObject(e) &&\n      (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = require('./support/isBuffer');\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n\nfunction pad(n) {\n  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n}\n\n\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\n              'Oct', 'Nov', 'Dec'];\n\n// 26 Feb 16:19:34\nfunction timestamp() {\n  var d = new Date();\n  var time = [pad(d.getHours()),\n              pad(d.getMinutes()),\n              pad(d.getSeconds())].join(':');\n  return [d.getDate(), months[d.getMonth()], time].join(' ');\n}\n\n\n// log is just a thin wrapper to console.log that prepends a timestamp\nexports.log = function() {\n  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));\n};\n\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * The Function.prototype.inherits from lang.js rewritten as a standalone\n * function (not on Function.prototype). NOTE: If this file is to be loaded\n * during bootstrapping this function needs to be rewritten using some native\n * functions as prototype setup using normal JavaScript does not work as\n * expected during bootstrapping (see mirror.js in r114903).\n *\n * @param {function} ctor Constructor function which needs to inherit the\n *     prototype.\n * @param {function} superCtor Constructor function to inherit prototype from.\n */\nexports.inherits = require('inherits');\n\nexports._extend = function(origin, add) {\n  // Don't do anything if add isn't an object\n  if (!add || !isObject(add)) return origin;\n\n  var keys = Object.keys(add);\n  var i = keys.length;\n  while (i--) {\n    origin[keys[i]] = add[keys[i]];\n  }\n  return origin;\n};\n\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/util/util.js\n// module id = 1458\n// module chunks = 0","import { Component, Inject, Output, EventEmitter, ViewChild, OnInit } from '@angular/core';\r\nimport { MasterRepo } from '../../../common/repositories';\r\nimport { Division } from '../../../common/interfaces';\r\nimport { AuthService } from '../../../common/services/permission/authService.service';\r\nimport { Subscription } from 'rxjs/Subscription';\r\nimport { Subject } from 'rxjs/Subject';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { SpinnerService } from '../../../common/services/spinner/spinner.service';\r\nimport { PLedgerComponent } from '../../masters/components/PLedger/PLedger.component';\r\nimport { Subscriber } from 'rxjs/Subscriber';\r\nimport { AlertService } from '../../../common/services/alert/alert.service';\r\nimport { ReportMainService } from '../../Reports/components/ReportMain/ReportMain.service';\r\nimport { GenericPopUpSettings, GenericPopUpComponent } from '../../../common/popupLists/generic-grid/generic-popup-grid.component';\r\nimport { Router, NavigationEnd, ActivatedRoute } from '@angular/router';\r\nimport { ReportFilterService } from '../../../common/popupLists/report-filter/report-filter.service';\r\nimport * as moment from 'moment';\r\n\r\n\r\n@Component({\r\n    selector: 'account-ledger-report',\r\n    template: require('./account-ledger-report.component.html'),\r\n    styles: [require('../../modal-style.css'), require('../../Reports/reportStyle.css')],\r\n    // styles:[require('../MasterDialogReport/Report.css')]\r\n\r\n})\r\nexport class AccountLedgerReport implements OnInit{\r\n    showCCtable: boolean;\r\n    showAreaTable: boolean;\r\n    showLedgerTable: boolean;\r\n    showCombineLedgerList: boolean;\r\n    showMergeCombineLedger: boolean;\r\n    showMultipleCC: boolean;\r\n    result: any;\r\n    reportNameFormatWise:string;\r\n    acname:string ='';\r\n    accode:string = '';\r\n    userProfile: any;\r\n    account:any[]=[];\r\n    division: any[] = [];\r\n    CostcenterList: any[] = [];\r\n    AccLedger_result:boolean;\r\n    REPORTDISPLAYNAME:string;\r\n    showAccGrpTable: boolean;\r\n\r\n\r\n    @ViewChild(\"PLedgerChild\") PLedgerChild: PLedgerComponent;\r\n    @Output() reportdataEmit = new EventEmitter();\r\n    @ViewChild(\"genericGridAccountLedger\") genericGridAccountLedger: GenericPopUpComponent;\r\n    gridPopupSettingsForAccountLedgerList: GenericPopUpSettings = new GenericPopUpSettings();\r\n    @ViewChild(\"genericGridMultipleAccountLedger\") genericGridMultipleAccountLedger: GenericPopUpComponent;\r\n    gridPopupSettingsForMultipleAccountLedgerList: GenericPopUpSettings = new GenericPopUpSettings();\r\n    @ViewChild(\"genericGridMultipleGroupAccount\") genericGridMultipleGroupAccount: GenericPopUpComponent;\r\n    gridPopupSettingsForMultipleGroupAccountList: GenericPopUpSettings = new GenericPopUpSettings();\r\n\r\n    instanceWiseRepName:string='Account Ledger Report';\r\n\r\n    constructor(\r\n        public masterService: MasterRepo,\r\n        private _authService: AuthService,\r\n        private alertService: AlertService,\r\n        private _reportFilterService: ReportMainService,\r\n        private arouter: Router,\r\n        public _ActivatedRoute: ActivatedRoute,\r\n         public reportService: ReportFilterService,\r\n    ) {\r\n        this._reportFilterService.AccoutLedgerObj.IGNOREOPPOSITAC=true;\r\n        // this._reportFilterService.AccoutLedgerObj.AccLedger_HIDENARATION=true;\r\n\r\n        this._reportFilterService.showAllcontactsInCC = true;\r\n        this._reportFilterService.AccoutLedgerObj.Reportnameis = 'accountledger';\r\n        this._reportFilterService.AccoutLedgerObj.Reportnameis =  'accountledger';\r\n        this.userProfile = this._authService.getUserProfile();\r\n        this.reportNameFormatWise = 'Account Ledger Report';\r\n        this.masterService.getAccountListACIDNotLikePA().subscribe(res => {\r\n            this.account=res.data;\r\n            if(this.account.length!=0){\r\n                this.AccLedger_result=true;\r\n            }else{\r\n                this.AccLedger_result=false;\r\n            }\r\n        })\r\n\r\n        this.division = [];\r\n        this.division=[];\r\n        //let data: Array<IDivision> = [];\r\n        if(this.masterService.userSetting.userwisedivision == 1){\r\n          this.masterService.getDivisionFromRightPrivelege().subscribe(res=>{\r\n              if(res.status == 'ok'){\r\n                  this.division = res.result;\r\n              }\r\n          })\r\n        }\r\n        else{\r\n         this.masterService.getAllDivisions()\r\n         .subscribe(res => {\r\n           //////console.log(\"div\" + JSON.stringify(res));\r\n           this.division.push(<Division>res);\r\n         }, error => {\r\n           this.masterService.resolveError(error, \"divisions - getDivisions\");\r\n         });\r\n        }\r\n\r\n            this.masterService.getCostcenter().subscribe(res => {\r\n                this.CostcenterList = res;\r\n            })\r\n        this.showMultipleCC = true;\r\n        this.getReportTitle();\r\n        this.checkValueForCombine();\r\n        // this.masterService.getAccDivList();\r\n\r\n    }\r\n\r\n    ngOnInit(){\r\n        this._ActivatedRoute.queryParams.subscribe(params => {\r\n            const mode = params.mode;\r\n            // ////console.log(\"@@accledger\",this.reportService.drillParam)\r\n            if (mode == \"DRILL\" && this.reportService.drillParam.returnUrl && this.reportService.drillParam.reportname.startsWith('Account Ledger Report')) {\r\n            this._reportFilterService.AccoutLedgerObj.AccLedger_DATE1=moment(this.reportService.drillParam.reportparam.DATE1).format('YYYY-MM-DD');\r\n            this._reportFilterService.AccoutLedgerObj.AccLedger_DATE2=moment(this.reportService.drillParam.reportparam.DATE2).format('YYYY-MM-DD');\r\n            this._reportFilterService.AccoutLedgerObj.AccLedger_BSDATE1=this.reportService.drillParam.reportparam.BSDATE1;\r\n            this._reportFilterService.AccoutLedgerObj.AccLedger_BSDATE2=this.reportService.drillParam.reportparam.BSDATE2;\r\n            this._reportFilterService.AccoutLedgerObj.AccLedger_DIV=this.reportService.drillParam.reportparam.DIV;\r\n            this._reportFilterService.AccoutLedgerObj.AccLedger_CostCenter=this.reportService.drillParam.reportparam.COSTCENTER;\r\n            this._reportFilterService.AccoutLedgerObj.AccLedger_ReportType =2;\r\n            this._reportFilterService.AccoutLedgerObj.AccLedger_ACCNAME=this.reportService.drillParam.reportparam.CUSTOMERNAME?this.reportService.drillParam.reportparam.CUSTOMERNAME.trim():this.reportService.drillParam.reportparam.CUSTOMERNAME;\r\n            this._reportFilterService.AccoutLedgerObj.AccLedger_ACID=this.reportService.drillParam.reportparam.ACID;\r\n            this._reportFilterService.AccoutLedgerObj.AccLedger_SingleAccount=this.reportService.drillParam.reportparam.ACID;\r\n\r\n            this.showLedgerTable = true;\r\n            this._reportFilterService.AccoutLedgerObj.EnableCombineLedger = false;\r\n            this._reportFilterService.AccoutLedgerObj.AccLedger_multipleAccounts = [];\r\n            this._reportFilterService.AccoutLedgerObj.AccLedger_multipleCostcenter = [];\r\n            this._reportFilterService.AccoutLedgerObj.AccLedger_multipleGroupAccounts= [];\r\n            // this.changeEntryDate(this._reportFilterService.AccoutLedgerObj.AccLedger_BSDATE1, \"AD\");\r\n            // this.changeEndDate(this._reportFilterService.AccoutLedgerObj.AccLedger_BSDATE2, \"AD\");\r\n            if(this.reportService.drillParam.reportname == 'Account Ledger Report_2'){\r\n                this._reportFilterService.AccoutLedgerObj.AccLedger_SUMMARYREPORT='1';\r\n            }else{\r\n                this._reportFilterService.AccoutLedgerObj.AccLedger_SUMMARYREPORT='0';\r\n            }\r\n\r\n            if(this.masterService.userSetting.DISPLAY == 1){\r\n                this._reportFilterService.AccoutLedgerObj.IGNOREOPPOSITAC=true;\r\n            }else{\r\n                this._reportFilterService.AccoutLedgerObj.IGNOREOPPOSITAC=false;\r\n            }\r\n\r\n            }else{\r\n                if(this._reportFilterService.AccoutLedgerObj.assignPrevioiusDate != true){\r\n                    this.masterService.getAccDivList();\r\n                    this._reportFilterService.AccoutLedgerObj.AccLedger_DATE1=this.masterService.PhiscalObj.BeginDate.split('T')[0];\r\n                    //console.log(\"@@this._reportFilterService.AccoutLedgerObj.AccLedger_DATE1\",this._reportFilterService.AccoutLedgerObj.AccLedger_DATE1)\r\n                    this.changeEntryDate(this._reportFilterService.AccoutLedgerObj.AccLedger_DATE1, \"AD\");\r\n                    if (this.userProfile.CompanyInfo.ActualFY == this.masterService.PhiscalObj.PhiscalID) {\r\n                        this._reportFilterService.AccoutLedgerObj.AccLedger_DATE2 = new Date().toJSON().split('T')[0];\r\n                        this.changeEndDate(this._reportFilterService.AccoutLedgerObj.AccLedger_DATE2, \"AD\");\r\n                      }\r\n                      else {\r\n                        this._reportFilterService.AccoutLedgerObj.AccLedger_DATE2 = this.masterService.PhiscalObj.EndDate.split('T')[0];\r\n                        this.changeEndDate(this._reportFilterService.AccoutLedgerObj.AccLedger_DATE2, \"AD\");\r\n                    }\r\n                    // this._reportFilterService.AccoutLedgerObj.AccLedger_DIV=this.masterService.userProfile.CompanyInfo.INITIAL;\r\n                    this.masterService.viewDivision.subscribe(() => {\r\n                        if(this.masterService.userSetting.userwisedivision==0 ||  this.masterService.showAll == true){ //ALL OPTION SELECTION IN DIVISION IN REPORT DIALOG BOX\r\n                          this._reportFilterService.AccoutLedgerObj.AccLedger_DIV='%';\r\n                      }else{\r\n                        if(this.masterService.userSetting.userwisedivision==1 && this.division.length ==1){\r\n                            this._reportFilterService.AccoutLedgerObj.AccLedger_DIV=this.division[0].INITIAL;\r\n                          }else{\r\n                            this._reportFilterService.AccoutLedgerObj.AccLedger_DIV=this.masterService.userProfile.CompanyInfo.INITIAL;\r\n                        }\r\n                      }\r\n                      })\r\n                    this._reportFilterService.AccoutLedgerObj.AccLedger_CostCenter ='%';\r\n                    this._reportFilterService.AccoutLedgerObj.AccLedger_ReportType =2;\r\n                    this._reportFilterService.AccoutLedgerObj.AccLedger_multipleCostcenter = [];\r\n                    this._reportFilterService.AccoutLedgerObj.AccLedger_multipleAccounts = [];\r\n                    this._reportFilterService.AccoutLedgerObj.AccLedger_multipleGroupAccounts=[];\r\n                    this._reportFilterService.AccoutLedgerObj.AccLedger_HIDECOSTCENTER = 0;\r\n                    if(this.masterService.userSetting.DISPLAY == 1){\r\n                        this._reportFilterService.AccoutLedgerObj.AccLedger_SUMMARYREPORT='0';\r\n                        this._reportFilterService.AccoutLedgerObj.IGNOREOPPOSITAC=true;\r\n                    }else{\r\n                        this._reportFilterService.AccoutLedgerObj.AccLedger_SUMMARYREPORT='0';\r\n                    }\r\n                    // this._reportFilterService.AccoutLedgerObj.IGNOREOPPOSITAC= 1;\r\n                    this.checkValue();\r\n                    if(this._reportFilterService.AccoutLedgerObj.EnableCombineLedger == true){\r\n                        this.checkValue();\r\n                    } else{\r\n                        this.checkValueForCombine();\r\n                    }\r\n                  \r\n                    }\r\n                    if(params.instancename){\r\n                        ////console.log(\"@@[Account Ledger Report0]\",this._reportFilterService.reportDataStore[params.instancename])\r\n                        this._reportFilterService.AccoutLedgerObj.AccLedger_DATE1=this._reportFilterService.reportDataStore[params.instancename].param.reportparam.DATE1;\r\n                        this._reportFilterService.AccoutLedgerObj.AccLedger_DATE2=this._reportFilterService.reportDataStore[params.instancename].param.reportparam.DATE2;\r\n                        this.changeEntryDate(this._reportFilterService.AccoutLedgerObj.AccLedger_DATE1, \"AD\");\r\n                        this.changeEndDate(this._reportFilterService.AccoutLedgerObj.AccLedger_DATE2, \"AD\");\r\n                        this._reportFilterService.AccoutLedgerObj.AccLedger_DIV=this._reportFilterService.reportDataStore[params.instancename].param.reportparam.DIV;\r\n                        this._reportFilterService.AccoutLedgerObj.AccLedger_CostCenter=this._reportFilterService.reportDataStore[params.instancename].param.reportparam.COSTCENTER;\r\n                        this._reportFilterService.AccoutLedgerObj.AccLedger_ReportType =this._reportFilterService.reportDataStore[params.instancename].param.reportparam.REPORTTYPE;\r\n                        this._reportFilterService.AccoutLedgerObj.AccLedger_ACCNAME=this._reportFilterService.reportDataStore[params.instancename].param.reportparam.ACNAME;\r\n                        this._reportFilterService.AccoutLedgerObj.AccLedger_ACID=this._reportFilterService.reportDataStore[params.instancename].param.reportparam.ACID;\r\n                        this._reportFilterService.AccoutLedgerObj.AccLedger_SingleAccount=this._reportFilterService.reportDataStore[params.instancename].param.reportparam.ACID;\r\n                        this._reportFilterService.AccoutLedgerObj.AccLedger_Areawise=this._reportFilterService.reportDataStore[params.instancename].param.reportparam.AREA;\r\n                        this._reportFilterService.AccoutLedgerObj.IGNOREOPPOSITAC=this._reportFilterService.reportDataStore[params.instancename].param.reportparam.IGNOREOPPOSITAC;\r\n                        this._reportFilterService.AccoutLedgerObj.MERGEREPORT=this._reportFilterService.reportDataStore[params.instancename].param.reportparam.MERGEREPORT;\r\n                        // this._reportFilterService.AccoutLedgerObj.SHOWNARATION=this._reportFilterService.reportDataStore[params.instancename].param.reportparam.SHOWNARATION;\r\n                        // this._reportFilterService.AccoutLedgerObj.SHOWNDATE=this._reportFilterService.reportDataStore[params.instancename].param.reportparam.SHOWNDATE;\r\n                        this._reportFilterService.AccoutLedgerObj.AccLedger_SUMMARYREPORT =this._reportFilterService.reportDataStore[params.instancename].param.reportparam.SUMMARYLEDGER; \r\n                        this._reportFilterService.AccoutLedgerObj.AccLedger_HIDENARATION = this._reportFilterService.reportDataStore[params.instancename].param.reportparam.HIDENARATION; \r\n                        this._reportFilterService.AccoutLedgerObj.AccLedger_HIDEVOUCHERTYPE = this._reportFilterService.reportDataStore[params.instancename].param.reportparam.HIDEVOUCHERTYPE; \r\n                        this._reportFilterService.AccoutLedgerObj.AccLedger_SHOWITEMDETAIL =this._reportFilterService.reportDataStore[params.instancename].param.reportparam.SHOWITEMDETAIL; \r\n                        this._reportFilterService.AccoutLedgerObj.AccLedger_INCLUDEPOSTDATE =this._reportFilterService.reportDataStore[params.instancename].param.reportparam.INCLUDEPOSTEDTRANSACTION ; \r\n                        this._reportFilterService.AccoutLedgerObj.AccLedger_HIDECOSTCENTER = this._reportFilterService.reportDataStore[params.instancename].param.reportparam.HIDECOSTCENTER ; \r\n                    }\r\n\r\n            }\r\n          \r\n        });\r\n\r\n\r\n\r\n\r\n\r\n}\r\n    changeEntryDate(value, format: string) {\r\n        var adbs = require(\"ad-bs-converter\");\r\n        if (format == \"AD\") {\r\n            var adDate = (value.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n            var bsDate = adbs.ad2bs(adDate);\r\n            this._reportFilterService.AccoutLedgerObj.AccLedger_BSDATE1 = this.masterService.toBSDate(value);\r\n        }\r\n        else if (format == \"BS\") {\r\n          var datearr = value.split('/');\r\n          const bsDate = datearr[2]+\"/\"+datearr[1]+\"/\"+datearr[0];\r\n            // var bsDate = (value.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n            var adDate = adbs.bs2ad(bsDate);\r\n            var Engdate = this.masterService.toADDate(value);\r\n            const Validatedata = this.masterService.ValidateNepaliDate(Engdate)\r\n            if(Validatedata == true){\r\n              const bsDate1 = datearr[2]+\"/\"+datearr[1]+\"/\"+datearr[0];\r\n              var adDate1 = adbs.bs2ad(bsDate1);\r\n              this._reportFilterService.AccoutLedgerObj.AccLedger_DATE1= this.masterService.toADDate(value);\r\n            }else{\r\n                this.alertService.error(\"Cannot Change the date\");\r\n              return;\r\n            }\r\n            // this._reportFilterService.AccoutLedgerObj.AccLedger_DATE1 = this.masterService.toBSDate(value);\r\n        }\r\n    }\r\n\r\n    changeEndDate(value, format: string) {\r\n        ////console.log(\"valuess\",value)\r\n        var adbs = require(\"ad-bs-converter\");\r\n        if (format == \"AD\") {\r\n            var adDate = (value.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n            var bsDate = adbs.ad2bs(adDate);\r\n            this._reportFilterService.AccoutLedgerObj.AccLedger_BSDATE2 = this.masterService.toBSDate(value);\r\n        }\r\n        else if (format == \"BS\") {\r\n          var datearr = value.split('/');\r\n          const bsDate = datearr[2]+\"/\"+datearr[1]+\"/\"+datearr[0];\r\n            // var bsDate = (value.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n            var adDate = adbs.bs2ad(bsDate);\r\n            var Engdate = this.masterService.toADDate(value);\r\n            const Validatedata = this.masterService.ValidateNepaliDate(Engdate)\r\n            if(Validatedata == true){\r\n              const bsDate1 = datearr[2]+\"/\"+datearr[1]+\"/\"+datearr[0];\r\n              var adDate1 = adbs.bs2ad(bsDate1);\r\n              this._reportFilterService.AccoutLedgerObj.AccLedger_DATE2 = this.masterService.toADDate(value);\r\n            }else{\r\n                this.alertService.error(\"Cannot Change the date\");\r\n              return;\r\n            }\r\n            // this._reportFilterService.AccoutLedgerObj.AccLedger_DATE2 = this.masterService.toBSDate(value);\r\n        }\r\n    }\r\n\r\n    onload() {\r\n        // ////console.log(\"singleAccount\",this._reportFilterService.AccoutLedgerObj.AccLedger_SingleAccount,this._reportFilterService.AccoutLedgerObj.DATE2)\r\n        // this.SelectedDivReport = this._reportFilterService.AccoutLedgerObj.AccLedger_DIV;\r\n\r\n        if (this._reportFilterService.AccoutLedgerObj.EnableCombineLedger==true && this._reportFilterService.AccoutLedgerObj.AccLedger_ReportType == 2 && (this._reportFilterService.AccoutLedgerObj.AccLedger_multipleAccounts === undefined || this._reportFilterService.AccoutLedgerObj.AccLedger_multipleAccounts.length == 0)) {\r\n            this.alertService.info(\"Please Select Account\");\r\n            return;\r\n        } else if ((this._reportFilterService.AccoutLedgerObj.EnableCombineLedger==true && this._reportFilterService.AccoutLedgerObj.AccLedger_ReportType == 4 && (this._reportFilterService.AccoutLedgerObj.AccLedger_showAllContacts == false || this._reportFilterService.AccoutLedgerObj.AccLedger_showAllContacts===undefined)) && (this._reportFilterService.AccoutLedgerObj.AccLedger_multipleCostcenter === undefined || this._reportFilterService.AccoutLedgerObj.AccLedger_multipleCostcenter.length == 0)) {\r\n            this.alertService.info(\"Please Select Costcenter\");\r\n            return;\r\n        } else if ((this._reportFilterService.AccoutLedgerObj.EnableCombineLedger==true &&\r\n            this._reportFilterService.AccoutLedgerObj.AccLedger_ReportType == 4\r\n            || this._reportFilterService.AccoutLedgerObj.AccLedger_showAllContacts) &&\r\n            (this._reportFilterService.AccoutLedgerObj.AccLedger_SingleAccount === undefined ||\r\n                this._reportFilterService.AccoutLedgerObj.AccLedger_SingleAccount == '')) {\r\n            this.alertService.info(\"Please Select Account\");\r\n            return;\r\n        } else if (this.AccLedger_result == true && (this._reportFilterService.AccoutLedgerObj.EnableCombineLedger === undefined || this._reportFilterService.AccoutLedgerObj.EnableCombineLedger == false)) {\r\n            if (this._reportFilterService.AccoutLedgerObj.AccLedger_SingleAccount === undefined || this._reportFilterService.AccoutLedgerObj.AccLedger_SingleAccount == '' || this._reportFilterService.AccoutLedgerObj.AccLedger_ACCNAME == '') {\r\n                this.alertService.info(\"Please Select Account\");\r\n                return;\r\n            }\r\n            this.DialogClosedResult(\"ok\");\r\n        }\r\n        else {\r\n            this.DialogClosedResult(\"ok\");\r\n        }\r\n    }\r\n\r\n    getReportTitle(){\r\n        this.masterService.getReportTitle(this.reportNameFormatWise).subscribe(\r\n            (res)=>{\r\n                ////console.log(\"newres\",res);\r\n                if(res.status == 'ok'){\r\n                    this.reportNameFormatWise = res.result;\r\n                    ////console.log(\"reportName\",this.reportNameFormatWise);\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    public DialogClosedResult(res) {\r\n\r\n        let multipleSelectedCC = [];\r\n        let SelectedCC = '';\r\n        if (this._reportFilterService.AccoutLedgerObj.AccLedger_multipleCostcenter === undefined) {\r\n            SelectedCC = this._reportFilterService.AccoutLedgerObj.CCENTER;\r\n        } else {\r\n            if (this._reportFilterService.AccoutLedgerObj.AccLedger_multipleCostcenter.length != 0) {\r\n                this._reportFilterService.AccoutLedgerObj.AccLedger_multipleCostcenter.forEach(COSTCENTER => {\r\n                    multipleSelectedCC.push(COSTCENTER.CCID)\r\n                    SelectedCC += `${multipleSelectedCC},`\r\n                });\r\n            } else {\r\n                SelectedCC = this._reportFilterService.AccoutLedgerObj.CCENTER\r\n            }\r\n        }\r\n\r\n        let multipleSelectedAccount = [];\r\n        //let SelectedAccount = '';\r\n        if (this._reportFilterService.AccoutLedgerObj.AccLedger_multipleAccounts === undefined) {\r\n          this._reportFilterService.SelectedAccount = this._reportFilterService.AccoutLedgerObj.AccLedger_SingleAccount\r\n        } else {\r\n            if (this._reportFilterService.AccoutLedgerObj.AccLedger_multipleAccounts.length != 0) {\r\n                this._reportFilterService.AccoutLedgerObj.AccLedger_multipleAccounts.forEach(acList => {\r\n                    this._reportFilterService.SelectedAccount=''\r\n                    multipleSelectedAccount.push(acList.ACID)\r\n                this._reportFilterService.SelectedAccount += `${multipleSelectedAccount},`\r\n                });\r\n                var nameArr = this._reportFilterService.SelectedAccount.split(',');\r\n                var myArr = nameArr;\r\n                let item = myArr.filter((el, i, a) => i === a.indexOf(el))\r\n                // ////console.log(\"@@item\",item)\r\n                this._reportFilterService.SelectedAccount= item.toString();\r\n                // ////console.log(\"@@this._reportFilterService.SelectedAccount\",this._reportFilterService.SelectedAccount)\r\n\r\n            } else {\r\n                this._reportFilterService.SelectedAccount = this._reportFilterService.AccoutLedgerObj.AccLedger_SingleAccount\r\n            }\r\n        }\r\n\r\n        if (this._reportFilterService.AccoutLedgerObj.AccLedger_ReportType != 4) {\r\n            SelectedCC = this._reportFilterService.AccoutLedgerObj.AccLedger_CostCenter\r\n        }\r\n\r\n        let multipleSelectedGroupACC = [];\r\n        // let SelectedGroupACC = '';\r\n        if (this._reportFilterService.AccoutLedgerObj.AccLedger_multipleGroupAccounts === undefined ||this._reportFilterService.AccoutLedgerObj.AccLedger_multipleGroupAccounts === null) {\r\n            this._reportFilterService.SelectedGroupAccount = '%';\r\n        } else {\r\n            if (this._reportFilterService.AccoutLedgerObj.AccLedger_multipleGroupAccounts.length != 0) {\r\n                this._reportFilterService.AccoutLedgerObj.AccLedger_multipleGroupAccounts.forEach(acList => {\r\n                    this._reportFilterService.SelectedGroupAccount =''\r\n                    multipleSelectedGroupACC.push(acList.ACID)\r\n                    this._reportFilterService.SelectedGroupAccount += `${multipleSelectedGroupACC},`\r\n                });\r\n                var nameArr = this._reportFilterService.SelectedGroupAccount.split(',');\r\n                var myArr = nameArr;\r\n                let item = myArr.filter((el, i, a) => i === a.indexOf(el))\r\n                // ////console.log(\"@@item\",item)\r\n                this._reportFilterService.SelectedGroupAccount= item.toString();\r\n            } else {\r\n                this._reportFilterService.SelectedGroupAccount = '%';\r\n            }\r\n        }\r\n\r\n        if (this._reportFilterService.AccoutLedgerObj.IGNOREOPPOSITAC == true) {\r\n            this._reportFilterService.AccoutLedgerObj.IGNOREOPPOSITAC = 1;\r\n            this.reportNameFormatWise = 'Account Ledger Report_1';\r\n        } else {\r\n            this._reportFilterService.AccoutLedgerObj.IGNOREOPPOSITAC = 0;\r\n            this.reportNameFormatWise = 'Account Ledger Report';\r\n        }\r\n\r\n        if(this._reportFilterService.AccoutLedgerObj.AccLedger_SUMMARYREPORT ==1){\r\n            this.reportNameFormatWise = 'Account Ledger Report_2';\r\n        }\r\n\r\n        if (this._reportFilterService.AccoutLedgerObj.SHOWNDATE == true) {\r\n            this._reportFilterService.AccoutLedgerObj.SHOWNDATE = 1;\r\n        } else {\r\n            this._reportFilterService.AccoutLedgerObj.SHOWNDATE = 0;\r\n        }\r\n\r\n        if (this._reportFilterService.AccoutLedgerObj.MERGEREPORT == true) {\r\n            this._reportFilterService.AccoutLedgerObj.MERGEREPORT = 1;\r\n        } else {\r\n            this._reportFilterService.AccoutLedgerObj.MERGEREPORT = 0;\r\n        }\r\n        if (this._reportFilterService.AccoutLedgerObj.SHOWNARATION == true) {\r\n            this._reportFilterService.AccoutLedgerObj.SHOWNARATION = 1;\r\n        } else {\r\n            this._reportFilterService.AccoutLedgerObj.SHOWNARATION = 0;\r\n        }\r\n\r\n\r\n        if (this._reportFilterService.AccoutLedgerObj.AccLedger_showAllContacts == true) {\r\n            this._reportFilterService.AccoutLedgerObj.AccLedger_ReportType = 3;\r\n            SelectedCC = '%';\r\n        }\r\n\r\n        if(this._reportFilterService.AccoutLedgerObj.EnableCombineLedger !=true){\r\n            this._reportFilterService.selectedAccountParty = this._reportFilterService.AccoutLedgerObj.AccLedger_SingleAccount;\r\n            SelectedCC = this._reportFilterService.AccoutLedgerObj.AccLedger_CostCenter;\r\n            this._reportFilterService.AccoutLedgerObj.AccLedger_ReportType = 0;\r\n        }\r\n\r\n        if(this._reportFilterService.AccoutLedgerObj.AccLedger_ReportType != 2){\r\n            this._reportFilterService.selectedAccountParty = this._reportFilterService.AccoutLedgerObj.AccLedger_SingleAccount;\r\n        }\r\n\r\n        if (this._reportFilterService.AccoutLedgerObj.AccLedger_DIV && this._reportFilterService.AccoutLedgerObj.AccLedger_DIV == '%') {\r\n            this._reportFilterService.AccoutLedgerObj.AccLedger_DIVISIONNAME = 'All';\r\n          }else if( this._reportFilterService.AccoutLedgerObj.AccLedger_DIV && this._reportFilterService.AccoutLedgerObj.AccLedger_DIV!= '%'){\r\n            let abc = this.division.filter(x=>x.INITIAL == this._reportFilterService.AccoutLedgerObj.AccLedger_DIV);\r\n              if(abc && abc.length>0 && abc[0]){\r\n                this._reportFilterService.AccoutLedgerObj.AccLedger_DIVISIONNAME = abc[0].NAME;\r\n              }else{\r\n                this._reportFilterService.AccoutLedgerObj.AccLedger_DIVISIONNAME = '';\r\n              }\r\n          }else{\r\n            this._reportFilterService.AccoutLedgerObj.AccLedger_DIVISIONNAME = '';\r\n          }\r\n\r\n          if (this._reportFilterService.AccoutLedgerObj.EnableCombineLedger != true) {\r\n          this.REPORTDISPLAYNAME = 'Account Ledger';\r\n          this._reportFilterService.AccoutLedgerObj.AccLedger_LABELDISPLAYNAME = 'Ledger';\r\n          this._reportFilterService.AccoutLedgerObj.AccLedger_LEDGERDISPLAYNAME = this._reportFilterService.AccoutLedgerObj.AccLedger_ACCNAME;\r\n          \r\n          if (this._reportFilterService.AccoutLedgerObj.AccLedger_CostCenter && this._reportFilterService.AccoutLedgerObj.AccLedger_CostCenter == '%') {\r\n            this._reportFilterService.AccoutLedgerObj.AccLedger_COSTCENTERDISPLAYNAME = 'All';\r\n          }\r\n          else if (this._reportFilterService.AccoutLedgerObj.AccLedger_CostCenter != '%') {\r\n            let abc = this.CostcenterList.filter(x=>x.CCID == this._reportFilterService.AccoutLedgerObj.AccLedger_CostCenter);\r\n            if(abc && abc.length>0 && abc[0]){\r\n              this._reportFilterService.AccoutLedgerObj.AccLedger_COSTCENTERDISPLAYNAME = abc[0].COSTCENTERNAME;\r\n            }else{\r\n              this._reportFilterService.AccoutLedgerObj.AccLedger_COSTCENTERDISPLAYNAME = '';\r\n            }\r\n          } else {\r\n            this._reportFilterService.AccoutLedgerObj.AccLedger_COSTCENTERDISPLAYNAME = '';\r\n          }\r\n        }\r\n\r\n        if (this._reportFilterService.AccoutLedgerObj.EnableCombineLedger == true) {\r\n            this.REPORTDISPLAYNAME = 'Account Ledger';\r\n            this._reportFilterService.AccoutLedgerObj.AccLedger_LABELDISPLAYNAME = 'Ledger';\r\n            this._reportFilterService.AccoutLedgerObj.AccLedger_LEDGERDISPLAYNAME = 'Combine Ledger Selection';\r\n    }\r\n\r\n        if(res == \"ok\"){\r\n            this._reportFilterService.AccoutLedgerObj.assignPrevioiusDate = true;\r\n            let routepaths = this.arouter.url.split('/');\r\n            let activeurlpath2;\r\n              if(routepaths&& routepaths.length){\r\n                activeurlpath2=routepaths[routepaths.length-1]\r\n              }\r\n\r\n            if(this._reportFilterService.AccLedger_loadedTimes == 0){\r\n                this._reportFilterService.previouslyLoadedReportList.push(\r\n                    {reportname: 'Account Ledger Report',\r\n                    activeurlpath: this.arouter.url,\r\n                    activerurlpath2: activeurlpath2,\r\n                    instanceWiseRepName: this.instanceWiseRepName+this._reportFilterService.AccLedger_loadedTimes,\r\n            })\r\n            }else{\r\n                this._reportFilterService.previouslyLoadedReportList.push(\r\n                    {reportname: 'Account Ledger Report'+'_'+this._reportFilterService.AccLedger_loadedTimes,\r\n                    activeurlpath: this.arouter.url,\r\n                    activerurlpath2: activeurlpath2,\r\n                    instanceWiseRepName: this.instanceWiseRepName+this._reportFilterService.AccLedger_loadedTimes,\r\n            })\r\n            }\r\n\r\n    }\r\n\r\n\r\n\r\n        this.reportdataEmit.emit({\r\n            status: res, data: {\r\n                REPORTDISPLAYNAME : 'Account Ledger',\r\n                reportname: this.reportNameFormatWise,\r\n                instanceWiseRepName:this.instanceWiseRepName+this._reportFilterService.AccLedger_loadedTimes,\r\n                reportparam: {\r\n                    LABELDISPLAYNAME : this._reportFilterService.AccoutLedgerObj.AccLedger_LABELDISPLAYNAME?this._reportFilterService.AccoutLedgerObj.AccLedger_LABELDISPLAYNAME:'',\r\n                    LEDGERDISPLAYNAME : this._reportFilterService.AccoutLedgerObj.AccLedger_LEDGERDISPLAYNAME?this._reportFilterService.AccoutLedgerObj.AccLedger_LEDGERDISPLAYNAME:'',\r\n                    DATE1: this._reportFilterService.AccoutLedgerObj.AccLedger_DATE1,\r\n                    DATE2: this._reportFilterService.AccoutLedgerObj.AccLedger_DATE2,\r\n                    BSDATE1: this._reportFilterService.AccoutLedgerObj.AccLedger_BSDATE1,\r\n                    BSDATE2: this._reportFilterService.AccoutLedgerObj.AccLedger_BSDATE2,\r\n                    DIV: this._reportFilterService.AccoutLedgerObj.AccLedger_DIV ? this._reportFilterService.AccoutLedgerObj.AccLedger_DIV : '%',\r\n                    COSTCENTER: SelectedCC ? SelectedCC : '%',\r\n                    AREA: this._reportFilterService.AccoutLedgerObj.AccLedger_Areawise ? this._reportFilterService.AccoutLedgerObj.AccLedger_Areawise : 0,\r\n                    COMID: this.masterService.userProfile.CompanyInfo.COMPANYID,\r\n                    REPORTTYPE: this._reportFilterService.AccoutLedgerObj.AccLedger_ReportType ? this._reportFilterService.AccoutLedgerObj.AccLedger_ReportType : 0,\r\n                    IGNOREOPPOSITAC: this._reportFilterService.AccoutLedgerObj.IGNOREOPPOSITAC,\r\n                    // SHOWNDATE: this._reportFilterService.AccoutLedgerObj.SHOWNDATE,\r\n                    ACID: this._reportFilterService.SelectedAccount ? this._reportFilterService.SelectedAccount : '%',\r\n                    MERGEREPORT: this._reportFilterService.AccoutLedgerObj.MERGEREPORT,\r\n                    // SHOWNARATION: this._reportFilterService.AccoutLedgerObj.SHOWNARATION,\r\n                    ACNAME : this._reportFilterService.AccoutLedgerObj.AccLedger_ACCNAME,\r\n                    PHISCALID: this.masterService.PhiscalObj.PhiscalID,\r\n                    // REPORTDISPLAYNAME : this.REPORTDISPLAYNAME ? this.REPORTDISPLAYNAME : this.reportNameFormatWise,\r\n                    DIVISIONNAME : this._reportFilterService.AccoutLedgerObj.AccLedger_DIVISIONNAME ? this._reportFilterService.AccoutLedgerObj.AccLedger_DIVISIONNAME : '',\r\n                    SUMMARYLEDGER: this._reportFilterService.AccoutLedgerObj.AccLedger_SUMMARYREPORT ? this._reportFilterService.AccoutLedgerObj.AccLedger_SUMMARYREPORT:0,\r\n                    COSTCENTERDISPLAYNAME: this._reportFilterService.AccoutLedgerObj.AccLedger_COSTCENTERDISPLAYNAME?this._reportFilterService.AccoutLedgerObj.AccLedger_COSTCENTERDISPLAYNAME:'',\r\n                    HIDENARATION: this._reportFilterService.AccoutLedgerObj.AccLedger_HIDENARATION ? this._reportFilterService.AccoutLedgerObj.AccLedger_HIDENARATION:0,\r\n                    HIDEVOUCHERTYPE: this._reportFilterService.AccoutLedgerObj.AccLedger_HIDEVOUCHERTYPE ?  this._reportFilterService.AccoutLedgerObj.AccLedger_HIDEVOUCHERTYPE:0,\r\n                    SHOWITEMDETAIL:this._reportFilterService.AccoutLedgerObj.AccLedger_SHOWITEMDETAIL ? this._reportFilterService.AccoutLedgerObj.AccLedger_SHOWITEMDETAIL:0,\r\n                    INCLUDEPOSTEDTRANSACTION :this._reportFilterService.AccoutLedgerObj.AccLedger_INCLUDEPOSTDATE ? this._reportFilterService.AccoutLedgerObj.AccLedger_INCLUDEPOSTDATE:0,\r\n                    HIDECOSTCENTER: this._reportFilterService.AccoutLedgerObj.AccLedger_HIDECOSTCENTER ? this._reportFilterService.AccoutLedgerObj.AccLedger_HIDECOSTCENTER:0,\r\n                    GROUP_ACID :this._reportFilterService.SelectedGroupAccount ? this._reportFilterService.SelectedGroupAccount :'%',\r\n                    \r\n                }\r\n            }\r\n        });\r\n        if(res == \"ok\"){\r\n            this._reportFilterService.AccLedger_loadedTimes = this._reportFilterService.AccLedger_loadedTimes+1;\r\n        }\r\n\r\n    }\r\n\r\n    // Close Method\r\n    closeReportBox() {\r\n        this.DialogClosedResult(\"cancel\");\r\n    }\r\n\r\n    checkValue() {\r\n\r\n\r\n        if (this._reportFilterService.AccoutLedgerObj.AccLedger_ReportType == 2) {\r\n            this.showLedgerTable = true;\r\n\r\n            this.acname = this._reportFilterService.AccoutLedgerObj.AccLedger_ACCNAME;\r\n            this._reportFilterService.AccoutLedgerObj.AccLedger_ACCNAME = '';\r\n            this.accode = this._reportFilterService.AccoutLedgerObj.AccLedger_ACID;\r\n            this._reportFilterService.AccoutLedgerObj.AccLedger_ACID = '';\r\n            this._reportFilterService.AccoutLedgerObj.AccLedger_SingleAccount = '';\r\n            this._reportFilterService.AccoutLedgerObj.AccLedger_multipleCostcenter = [];\r\n            this._reportFilterService.AccoutLedgerObj.AccLedger_multipleGroupAccounts=[];\r\n        } else {\r\n            this.showLedgerTable = false;\r\n            this._reportFilterService.AccoutLedgerObj.AccLedger_ACCNAME = this.acname;\r\n            this._reportFilterService.AccoutLedgerObj.AccLedger_ACID = this.accode;\r\n            this._reportFilterService.AccoutLedgerObj.AccLedger_SingleAccount = this.accode;\r\n        }\r\n        if (this._reportFilterService.AccoutLedgerObj.AccLedger_ReportType == 1) {\r\n            this.showAreaTable = true;\r\n        } else {\r\n            this.showAreaTable = false;\r\n        }\r\n        if (this._reportFilterService.AccoutLedgerObj.AccLedger_ReportType == 4) {\r\n            this.showCCtable = true;\r\n            this._reportFilterService.AccoutLedgerObj.AccLedger_multipleAccounts = [];\r\n            this._reportFilterService.AccoutLedgerObj.AccLedger_multipleGroupAccounts=[];\r\n        } else {\r\n            this.showCCtable = false;\r\n        }\r\n        if(this._reportFilterService.AccoutLedgerObj.AccLedger_ReportType == 5){\r\n            this.showAccGrpTable = true;\r\n            this._reportFilterService.AccoutLedgerObj.AccLedger_multipleAccounts = [];\r\n        }else{\r\n            this.showAccGrpTable = false;\r\n        }\r\n\r\n    }\r\n\r\n    checkValueForCombine() {\r\n        if (this._reportFilterService.AccoutLedgerObj.EnableCombineLedger == true) {\r\n            this.showCombineLedgerList = true;\r\n            this.showMergeCombineLedger = true;\r\n            this.acname = this._reportFilterService.AccoutLedgerObj.AccLedger_ACCNAME;\r\n            this._reportFilterService.AccoutLedgerObj.AccLedger_ACCNAME = '';\r\n            this.accode = this._reportFilterService.AccoutLedgerObj.AccLedger_ACID;\r\n            this._reportFilterService.AccoutLedgerObj.AccLedger_ACID = '';\r\n            this._reportFilterService.AccoutLedgerObj.AccLedger_SingleAccount = '';\r\n            if(this._reportFilterService.AccoutLedgerObj.AccLedger_ReportType == 2){\r\n                this.showLedgerTable = true;\r\n            }else if (this._reportFilterService.AccoutLedgerObj.AccLedger_ReportType == 4){\r\n                this.showCCtable = true;\r\n            }else if (this._reportFilterService.AccoutLedgerObj.AccLedger_ReportType == 5){\r\n                this.showAccGrpTable = true;\r\n            }\r\n        } else {\r\n            this.showCombineLedgerList = false;\r\n            this.showMergeCombineLedger = false;\r\n            this._reportFilterService.AccoutLedgerObj.AccLedger_multipleAccounts = [];\r\n            this._reportFilterService.AccoutLedgerObj.AccLedger_multipleCostcenter = [];\r\n            this._reportFilterService.AccoutLedgerObj.AccLedger_multipleGroupAccounts=[];\r\n            this.showLedgerTable = false;\r\n            this.showCCtable = false;\r\n            this.showAccGrpTable = false;\r\n        }\r\n    }\r\n\r\n    dropListItem = (keyword: any): Observable<Array<any>> => {\r\n        return new Observable((observer: Subscriber<Array<any>>) => {\r\n                this.masterService.getAccountListACIDNotLikePA().map(data => {\r\n                    this.result = data.result;\r\n                    return this.result.filter(ac => ac.ACNAME.toUpperCase().indexOf(keyword.toUpperCase()) > -1);\r\n                }\r\n                ).subscribe(res => { observer.next(res); })\r\n        }).share();\r\n    }\r\n\r\n    accodeChanged(value: string) {\r\n        var item;\r\n        item = this.masterService.accountList.find(x => x.ACCODE == value);\r\n        this._reportFilterService.AccoutLedgerObj.AccLedger_ACCNAME = '';\r\n        if (item) {\r\n            value = item.ACNAME;\r\n            //console.log(value + \"****\");\r\n            this._reportFilterService.AccoutLedgerObj.AccLedger_ACCNAME = value;\r\n        }\r\n    }\r\n\r\n    onEnterAcnameChange(value) {\r\n        this.accodeChanged(value);\r\n    }\r\n\r\n    itemChanged(value: any) {\r\n        //console.log({ itemChangedValue: value });\r\n        if (typeof (value) === \"object\") {\r\n            this._reportFilterService.AccoutLedgerObj.AccLedger_ACCNAME = value.ACNAME;\r\n            this._reportFilterService.AccoutLedgerObj.AccLedger_ACCODE = value.ACCODE;\r\n            this._reportFilterService.AccoutLedgerObj.AccLedger_ACID = value.ACID;\r\n            this._reportFilterService.AccoutLedgerObj.AccLedger_SingleAccount = value.ACID;\r\n        }\r\n    }\r\n\r\n\r\n    AccountEnterClicked() {\r\n        this.gridPopupSettingsForAccountLedgerList = this.masterService.getGenericGridPopUpSettings('AccountLedgerListForReport');\r\n        this.genericGridAccountLedger.show();\r\n    }\r\n\r\n    dblClickAccountSelect(account) {\r\n        this._reportFilterService.AccoutLedgerObj.AccLedger_ACID = account.ACID;\r\n        this._reportFilterService.AccoutLedgerObj.AccLedger_ACCNAME = account.ACNAME;\r\n        this._reportFilterService.AccoutLedgerObj.AccLedger_SingleAccount = account.ACID;\r\n    }\r\n\r\n    checkCostCenterValue() {\r\n        if (this._reportFilterService.AccoutLedgerObj.AccLedger_showAllContacts == true) {\r\n            this.showMultipleCC = false;\r\n        } else {\r\n            this.showMultipleCC = true;\r\n        }\r\n    }\r\n\r\n    addCostcenterToList() {\r\n        const ccData = this._reportFilterService.AccoutLedgerObj.CCENTER;\r\n        this._reportFilterService.AccoutLedgerObj.CCENTER = ccData && ccData.CCID ? ccData.CCID : '';\r\n        let selectCCenterList = this._reportFilterService.AccoutLedgerObj.AccLedger_multipleCostcenter.filter(centerList => centerList.COSTCENTERNAME == ccData.COSTCENTERNAME)\r\n        if (\r\n            ccData.COSTCENTERNAME === \"\" ||\r\n            ccData.COSTCENTERNAME === null ||\r\n            ccData.COSTCENTERNAME === undefined\r\n        ) {\r\n            return;\r\n        }\r\n\r\n        if (selectCCenterList.length === 0) {\r\n            this._reportFilterService.AccoutLedgerObj.AccLedger_multipleCostcenter.push({ CCID: ccData.CCID, COSTCENTERNAME: ccData.COSTCENTERNAME })\r\n        }\r\n\r\n    }\r\n\r\n    deleteCostcenter(index) {\r\n        this._reportFilterService.AccoutLedgerObj.AccLedger_multipleCostcenter.splice(index, 1)\r\n    }\r\n\r\n    addAccountToList() {\r\n        let selectACList = this._reportFilterService.AccoutLedgerObj.AccLedger_multipleAccounts.filter(acList => acList.ACNAME == this._reportFilterService.AccoutLedgerObj.multipleACNAME)\r\n        if (\r\n            this._reportFilterService.AccoutLedgerObj.multipleACNAME === \"\" ||\r\n            this._reportFilterService.AccoutLedgerObj.multipleACNAME === null ||\r\n            this._reportFilterService.AccoutLedgerObj.multipleACNAME === undefined\r\n        ) {\r\n            return;\r\n        }\r\n\r\n        if (selectACList.length === 0) {\r\n            this._reportFilterService.AccoutLedgerObj.AccLedger_multipleAccounts.push({ ACID: this._reportFilterService.AccoutLedgerObj.multipleACID, ACNAME: this._reportFilterService.AccoutLedgerObj.multipleACNAME })\r\n                this._reportFilterService.AccoutLedgerObj.multipleACNAME='';\r\n                this._reportFilterService.AccoutLedgerObj.multipleACCODE='';\r\n        }\r\n    }\r\n\r\n    deleteAccount(index) {\r\n        this._reportFilterService.AccoutLedgerObj.AccLedger_multipleAccounts.splice(index, 1)\r\n    }\r\n\r\n\r\n    MultipleAccountEnterClicked() {\r\n        this.gridPopupSettingsForMultipleAccountLedgerList = this.masterService.getGenericGridPopUpSettings('AccountLedgerListForReport');\r\n        this.genericGridMultipleAccountLedger.show();\r\n    }\r\n\r\n    dblClickMultipleAccountSelect(account) {\r\n        this._reportFilterService.AccoutLedgerObj.multipleACID = account.ACID;\r\n        this._reportFilterService.AccoutLedgerObj.multipleACNAME = account.ACNAME;\r\n    }\r\n\r\n    addGroupAccountToList(){\r\n        let selectACList = this._reportFilterService.AccoutLedgerObj.AccLedger_multipleGroupAccounts.filter(acList => acList.ACNAME == this._reportFilterService.AccoutLedgerObj.Multiple_GROUP_ACNAME)\r\n        if (\r\n            this._reportFilterService.AccoutLedgerObj.Multiple_GROUP_ACNAME === \"\" ||\r\n            this._reportFilterService.AccoutLedgerObj.Multiple_GROUP_ACNAME === null ||\r\n            this._reportFilterService.AccoutLedgerObj.Multiple_GROUP_ACNAME === undefined\r\n        ) {\r\n            return;\r\n        }\r\n\r\n        if (selectACList.length === 0) {\r\n            this._reportFilterService.AccoutLedgerObj.AccLedger_multipleGroupAccounts.push({ ACID: this._reportFilterService.AccoutLedgerObj.Multiple_GROUP_ACID, ACNAME: this._reportFilterService.AccoutLedgerObj.Multiple_GROUP_ACNAME })\r\n            console.log(\" this._reportFilterService.AccoutLedgerObj.AccLedger_multipleGroupAccounts\", this._reportFilterService.AccoutLedgerObj.AccLedger_multipleGroupAccounts)\r\n                this._reportFilterService.AccoutLedgerObj.Multiple_GROUP_ACNAME='';\r\n                this._reportFilterService.AccoutLedgerObj.multiple_Group_ACCODE='';\r\n        }\r\n    }\r\n\r\n    GroupAccountclick(){\r\n            \r\n            this.gridPopupSettingsForMultipleGroupAccountList = this.masterService.getGenericGridPopUpSettings('AccountGroupList');\r\n            this.genericGridMultipleGroupAccount.show();\r\n    }\r\n\r\n    dblClickGroupAccountSelect(account) {\r\n        this._reportFilterService.AccoutLedgerObj.Multiple_GROUP_ACID = account.ACID;\r\n        this._reportFilterService.AccoutLedgerObj.Multiple_GROUP_ACNAME = account.ACNAME;\r\n    }\r\n\r\n    deleteGroupAccount(index) {\r\n        this._reportFilterService.AccoutLedgerObj.AccLedger_multipleGroupAccounts.splice(index, 1);\r\n        this._reportFilterService.SelectedGroupAccount='';\r\n    }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/pages/ReportDialogs/AccountLedgerReport/account-ledger-report.component.ts","import { NgaModule } from '../../../theme/nga.module';\r\nimport { Component, Inject, Output, EventEmitter, OnInit, ViewChild, ElementRef } from '@angular/core';\r\nimport { MdDialogRef, MD_DIALOG_DATA } from '@angular/material';\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { MasterRepo } from '../../../common/repositories';\r\nimport { Division } from '../../../common/interfaces';\r\nimport { AuthService } from '../../../common/services/permission/authService.service';\r\nimport { ReportMainService } from '../../Reports/components/ReportMain/ReportMain.service';\r\nimport { Router, NavigationEnd, ActivatedRoute } from '@angular/router';\r\nimport { AlertService } from '../../../common/services/alert/alert.service';\r\nimport { GenericPopUpComponent, GenericPopUpSettings } from '../../../common/popupLists/generic-grid/generic-popup-grid.component';\r\nimport { BudgetData, Pobj } from '../../masters/components/BudgetMaster/add-budget-master.component';\r\n\r\nexport interface DialogInfo {\r\n  header: string;\r\n  message: Observable<string>;\r\n\r\n}\r\n\r\n@Component({\r\n  selector: 'actual-vs-budget-report',\r\n  template: require('./actualvsbudget-report.component.html'),\r\n  styles: [require('../../Reports/reportStyle.css'), require('../../modal-style.css')],\r\n})\r\n\r\nexport class ActualVsBudgetReport {\r\n  division: any[] = [];\r\n  CostcenterList: any[] = [];\r\n  costCenterCategoryList: any[] = [];\r\n  userProfile: any;\r\n  date1: any;\r\n  date2: any;\r\n  userSetting: any;\r\n  instanceWiseRepName: string = 'Actual Vs Budget  Report';\r\n  @Output() reportdataEmit = new EventEmitter();\r\n  account: any[] = [];\r\n  AccLedger_result: boolean;\r\n  BudgetObj: Pobj = <Pobj>{};\r\n  public temp_DetailList: BudgetData[];\r\n  reportNameFormatWise: string;\r\n\r\n  @ViewChild(\"genericGridAccountLedger\") genericGridAccountLedger: GenericPopUpComponent;\r\n  gridPopupSettingsForAccountLedgerList: GenericPopUpSettings = new GenericPopUpSettings();\r\n\r\n  @ViewChild(\"genericGridBudgetList\") genericGridBudgetList: GenericPopUpComponent;\r\n  gridPopupSettingsForBudgetList: GenericPopUpSettings = new GenericPopUpSettings();\r\n  @ViewChild('budgetSelectionField') budgetSelectionField: ElementRef;\r\n\r\n  constructor(private masterService: MasterRepo, private arouter: Router, private _authService: AuthService, public _ActivatedRoute: ActivatedRoute, private _reportFilterService: ReportMainService, private alertService: AlertService,) {\r\n\r\n\r\n    this.userProfile = this._authService.getUserProfile();\r\n    this.userSetting = _authService.getSetting();\r\n\r\n    this.masterService.getAccountListACIDNotLikePA().subscribe(res => {\r\n      this.account = res.data;\r\n      if (this.account.length != 0) {\r\n        this.AccLedger_result = true;\r\n      } else {\r\n        this.AccLedger_result = false;\r\n      }\r\n    })\r\n    // this.division = [];\r\n    // if (this.masterService.userSetting.userwisedivision == 1) {\r\n    //     this.masterService.getDivisionFromRightPrivelege().subscribe(res => {\r\n    //         if (res.status == 'ok') {\r\n    //             this.division = res.result;\r\n    //         }\r\n    //     })\r\n    // }\r\n    // else {\r\n    //     this.masterService.getAllDivisions()\r\n    //         .subscribe(res => {\r\n    //             this.division.push(<Division>res);\r\n    //         }, error => {\r\n    //             this.masterService.resolveError(error, \"divisions - getDivisions\");\r\n    //         });\r\n    // }\r\n    this.masterService.getCostCenterGroupPagedList().subscribe(res => {\r\n      this.costCenterCategoryList = res.data;\r\n      console.log('costCenterCategoryList', this.costCenterCategoryList);\r\n      this.showCostCenterGroupChange();\r\n    });\r\n\r\n    // this.masterService.getCostcenter().subscribe(res => {\r\n    //   this.CostcenterList = res;\r\n    // });\r\n  }\r\n\r\n\r\n  ngOnInit() {\r\n    this._ActivatedRoute.queryParams.subscribe(params => {\r\n\r\n      if (this._reportFilterService.ActualVsBudgetObj.assignPrevioiusDate != true) {\r\n        this.masterService.getAccDivList();\r\n        this._reportFilterService.ActualVsBudgetObj.ActualVsBudget_DATE1 = this.masterService.PhiscalObj.BeginDate.split('T')[0];\r\n        this._reportFilterService.ActualVsBudgetObj.ActualVsBudget_DATE2 = this.masterService.PhiscalObj.EndDate.split('T')[0];\r\n        // this._reportFilterService.ActualVsBudgetObj.ActualVsBudget_DIV = this.masterService.userProfile.CompanyInfo.INITIAL;\r\n        this.masterService.viewDivision.subscribe(() => {\r\n          if (this.masterService.userSetting.userwisedivision == 0 || this.masterService.showAll == true) { //ALL OPTION SELECTION IN DIVISION IN REPORT DIALOG BOX\r\n            this._reportFilterService.ActualVsBudgetObj.ActualVsBudget_DIV = '%';\r\n          } else {\r\n            if (this.masterService.userSetting.userwisedivision == 1 && this.division.length == 1) {\r\n              this._reportFilterService.ActualVsBudgetObj.ActualVsBudget_DIV = this.division[0].INITIAL;\r\n            } else {\r\n              this._reportFilterService.ActualVsBudgetObj.ActualVsBudget_DIV = this.masterService.userProfile.CompanyInfo.INITIAL;\r\n            }\r\n          }\r\n        });\r\n        this._reportFilterService.ActualVsBudgetObj.ActualVsBudget_COSTCENTERWISE =0;\r\n        this._reportFilterService.ActualVsBudgetObj.ActualVsBudget_CostCenter = '%'\r\n        this._reportFilterService.ActualVsBudgetObj.ActualVsBudget_OVERVIEWREPORT = '0'\r\n        this._reportFilterService.ActualVsBudgetObj.ActualVsBudget_REPORTOPTION = '0'\r\n        this._reportFilterService.ActualVsBudgetObj.ActualVsBudget_BUDGETSELECTION = '%'\r\n        this._reportFilterService.ActualVsBudgetObj.ActualVsBudget_DATETYPE = '2'\r\n        this._reportFilterService.ActualVsBudgetObj.ActualVsBudget_CheckOption = '0'\r\n        this._reportFilterService.ActualVsBudgetObj.ActualVsBudget_COSTCENTERCATEGORY = '%';\r\n\r\n      }\r\n    })\r\n    this.changestartDate(this._reportFilterService.ActualVsBudgetObj.ActualVsBudget_DATE1, \"AD\");\r\n    this.changeEndDate(this._reportFilterService.ActualVsBudgetObj.ActualVsBudget_DATE2, \"AD\");\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.applyHostListener();\r\n  }\r\n\r\n\r\n\r\n  changestartDate(value, format: string) {\r\n    var adbs = require(\"ad-bs-converter\");\r\n    if (format == \"AD\") {\r\n      var adDate = (value.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n      var bsDate = adbs.ad2bs(adDate);\r\n      this._reportFilterService.ActualVsBudgetObj.ActualVsBudget_BSDATE1 = this.masterService.toADDate(value);\r\n    }\r\n    else if (format == \"BS\") {\r\n      var datearr = value.split('/');\r\n      const bsDate = datearr[2] + \"/\" + datearr[1] + \"/\" + datearr[0];\r\n      // var bsDate = (value.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n      var adDate = adbs.bs2ad(bsDate);\r\n      var Engdate = this.masterService.toADDate(value);\r\n      const Validatedata = this.masterService.ValidateNepaliDate(Engdate)\r\n      if (Validatedata == true) {\r\n        const bsDate1 = datearr[2] + \"/\" + datearr[1] + \"/\" + datearr[0];\r\n        var adDate1 = adbs.bs2ad(bsDate1);\r\n        this._reportFilterService.ActualVsBudgetObj.ActualVsBudget_DATE1 = this.masterService.toADDate(value);\r\n      } else {\r\n        this.alertService.error(\"Cannot Change the date\");\r\n        return;\r\n      }\r\n      // this._reportFilterService.CreditorsAgeingObj.CreditorsAgeing_DATE1 = this.masterService.toBSDate(value);\r\n    }\r\n  }\r\n\r\n  changeEndDate(value, format: string) {\r\n    var adbs = require(\"ad-bs-converter\");\r\n    if (format == \"AD\") {\r\n      var adDate = (value.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n      var bsDate = adbs.ad2bs(adDate);\r\n      this._reportFilterService.ActualVsBudgetObj.ActualVsBudget_BSDATE2 = this.masterService.toBSDate(value);\r\n    }\r\n    else if (format == \"BS\") {\r\n      var datearr = value.split('/');\r\n      const bsDate = datearr[2] + \"/\" + datearr[1] + \"/\" + datearr[0]\r\n      // var bsDate = (value.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n      var adDate = adbs.bs2ad(bsDate);\r\n      this._reportFilterService.ActualVsBudgetObj.ActualVsBudget_DATE2 = this.masterService.toADDate(value);\r\n    }\r\n  }\r\n\r\n  onload() {\r\n    this.DialogClosedResult(\"ok\");\r\n  }\r\n\r\n  closeReportBox() {\r\n    this.DialogClosedResult(\"Error!\");\r\n  }\r\n  onChangeCostcenterWise(event:any){\r\n    if(event.currentTarget.checked){\r\n      this._reportFilterService.ActualVsBudgetObj.ActualVsBudget_COSTCENTERWISE = 1;\r\n      this._reportFilterService.ActualVsBudgetObj.ActualVsBudget_OPT_COSTCENTER= '0';\r\n      this._reportFilterService.ActualVsBudgetObj.ActualVsBudget_REPORTOPTION= '3';\r\n    }else if(!event.currentTarget.checked){\r\n      this._reportFilterService.ActualVsBudgetObj.ActualVsBudget_COSTCENTERWISE = 0;\r\n      this._reportFilterService.ActualVsBudgetObj.ActualVsBudget_CostCenter ='%';\r\n      this._reportFilterService.ActualVsBudgetObj.ActualVsBudget_COSTCENTERNAME = '';\r\n      this._reportFilterService.ActualVsBudgetObj.ActualVsBudget_OPT_COSTCENTER= '0';\r\n      this._reportFilterService.ActualVsBudgetObj.ActualVsBudget_COSTCENTERCATEGORY = '%';\r\n      if(this._reportFilterService.ActualVsBudgetObj.ActualVsBudget_BUDGETINTERVAL && this._reportFilterService.ActualVsBudgetObj.ActualVsBudget_BUDGETSELECTION !='%'){\r\n        this._reportFilterService.ActualVsBudgetObj.ActualVsBudget_REPORTOPTION = this._reportFilterService.ActualVsBudgetObj.ActualVsBudget_BUDGETINTERVAL;\r\n\r\n      }else {\r\n        this._reportFilterService.ActualVsBudgetObj.ActualVsBudget_REPORTOPTION= '3';\r\n      }\r\n    }\r\n                    \r\n  }\r\n\r\n  onCostCenterWiseSegregationReportCheck(event:any){\r\n    if(event.currentTarget.checked){\r\n      this._reportFilterService.ActualVsBudgetObj.ActualVsBudget_OPT_COSTCENTER =1;\r\n      console.log(this._reportFilterService.ActualVsBudgetObj.ActualVsBudget_OPT_COSTCENTER);\r\n    }else {\r\n      this._reportFilterService.ActualVsBudgetObj.ActualVsBudget_OPT_COSTCENTER =0;\r\n    }\r\n   }\r\n \r\n\r\n  public DialogClosedResult(res) {\r\n    let multipleReportFormateName = '';\r\n\r\n    if (this._reportFilterService.ActualVsBudgetObj.ActualVsBudget_CostCenter && this._reportFilterService.ActualVsBudgetObj.ActualVsBudget_CostCenter == '%' &&  this._reportFilterService.ActualVsBudgetObj.ActualVsBudget_COSTCENTERWISE == 1) {\r\n      this._reportFilterService.ActualVsBudgetObj.ActualVsBudget_COSTCENTERNAME = 'All';\r\n    }\r\n    else if (this._reportFilterService.ActualVsBudgetObj.ActualVsBudget_CostCenter != '%') {\r\n      let abc = this.CostcenterList.filter(x => x.CCID == this._reportFilterService.ActualVsBudgetObj.ActualVsBudget_CostCenter);\r\n      if (abc && abc.length > 0 && abc[0]) {\r\n        this._reportFilterService.ActualVsBudgetObj.ActualVsBudget_COSTCENTERNAME = abc[0].COSTCENTERNAME;\r\n      } else {\r\n        this._reportFilterService.ActualVsBudgetObj.ActualVsBudget_COSTCENTERNAME = '';\r\n      }\r\n    } else {\r\n      this._reportFilterService.ActualVsBudgetObj.ActualVsBudget_COSTCENTERNAME = '';\r\n    }\r\n\r\n    if (this._reportFilterService.ActualVsBudgetObj.ActualVsBudget_COSTCENTERCATEGORY && this._reportFilterService.ActualVsBudgetObj.ActualVsBudget_COSTCENTERCATEGORY == '%' &&  this._reportFilterService.ActualVsBudgetObj.ActualVsBudget_COSTCENTERWISE == 1) {\r\n      this._reportFilterService.ActualVsBudgetObj.ActualVsBudget_COSTCENTERCATEGORYNAME = 'All';\r\n    }\r\n    else if (this._reportFilterService.ActualVsBudgetObj.ActualVsBudget_COSTCENTERCATEGORY != '%') {\r\n      let abc = this.costCenterCategoryList.filter(x => x.ccgid == this._reportFilterService.ActualVsBudgetObj.ActualVsBudget_COSTCENTERCATEGORY);\r\n      if (abc && abc.length > 0 && abc[0]) {\r\n        this._reportFilterService.ActualVsBudgetObj.ActualVsBudget_COSTCENTERCATEGORYNAME = abc[0].COSTCENTERGROUPNAME;\r\n      } else {\r\n        this._reportFilterService.ActualVsBudgetObj.ActualVsBudget_COSTCENTERCATEGORYNAME = '';\r\n      }\r\n    } else {\r\n      this._reportFilterService.ActualVsBudgetObj.ActualVsBudget_COSTCENTERCATEGORYNAME = '';\r\n    }\r\n\r\n    if(this._reportFilterService.ActualVsBudgetObj.ActualVsBudget_ShowZeroVariance && this._reportFilterService.ActualVsBudgetObj.ActualVsBudget_OverBUdget && this._reportFilterService.ActualVsBudgetObj.ActualVsBudget_UnderBudget){\r\n      this._reportFilterService.ActualVsBudgetObj.ActualVsBudget_CheckOption ='0';\r\n    }else if(this._reportFilterService.ActualVsBudgetObj.ActualVsBudget_UnderBudget && this._reportFilterService.ActualVsBudgetObj.ActualVsBudget_OverBUdget){\r\n      this._reportFilterService.ActualVsBudgetObj.ActualVsBudget_CheckOption ='4';\r\n    }else if(this._reportFilterService.ActualVsBudgetObj.ActualVsBudget_ShowZeroVariance && this._reportFilterService.ActualVsBudgetObj.ActualVsBudget_OverBUdget){\r\n      this._reportFilterService.ActualVsBudgetObj.ActualVsBudget_CheckOption ='5';\r\n    }else if(this._reportFilterService.ActualVsBudgetObj.ActualVsBudget_ShowZeroVariance && this._reportFilterService.ActualVsBudgetObj.ActualVsBudget_UnderBudget){\r\n      this._reportFilterService.ActualVsBudgetObj.ActualVsBudget_CheckOption ='6';\r\n    }else if(this._reportFilterService.ActualVsBudgetObj.ActualVsBudget_OverBUdget){\r\n      this._reportFilterService.ActualVsBudgetObj.ActualVsBudget_CheckOption ='1';\r\n    }else if(this._reportFilterService.ActualVsBudgetObj.ActualVsBudget_UnderBudget){\r\n      this._reportFilterService.ActualVsBudgetObj.ActualVsBudget_CheckOption ='2';\r\n    }else if(this._reportFilterService.ActualVsBudgetObj.ActualVsBudget_ShowZeroVariance){\r\n      this._reportFilterService.ActualVsBudgetObj.ActualVsBudget_CheckOption ='3';\r\n    }else {\r\n      this._reportFilterService.ActualVsBudgetObj.ActualVsBudget_CheckOption ='0';\r\n    }\r\n\r\n\r\n    if (res == \"ok\") {\r\n      this._reportFilterService.ActualVsBudgetObj.assignPrevioiusDate = true;\r\n      let routepaths = this.arouter.url.split('/');\r\n      let activeurlpath2;\r\n      if (routepaths && routepaths.length) {\r\n        activeurlpath2 = routepaths[routepaths.length - 1]\r\n      }\r\n\r\n      if (this._reportFilterService.ActualVsBUdget_loadedTimes == 0) {\r\n        this._reportFilterService.previouslyLoadedReportList.push(\r\n          {\r\n            reportname: 'BUDGETVSUTILIZATION REPORT',\r\n            activeurlpath: this.arouter.url,\r\n            activerurlpath2: activeurlpath2,\r\n            instanceWiseRepName: this.instanceWiseRepName + this._reportFilterService.ActualVsBUdget_loadedTimes,\r\n          });\r\n      } else {\r\n        this._reportFilterService.previouslyLoadedReportList.push(\r\n          {\r\n            reportname: 'BUDGETVSUTILIZATION REPORT' + '_' + this._reportFilterService.ActualVsBUdget_loadedTimes,\r\n            activeurlpath: this.arouter.url,\r\n            activerurlpath2: activeurlpath2,\r\n            instanceWiseRepName: this.instanceWiseRepName + this._reportFilterService.ActualVsBUdget_loadedTimes,\r\n          });\r\n      }\r\n\r\n    }\r\n\r\n    if (this._reportFilterService.ActualVsBudgetObj.ActualVsBudget_OVERVIEWREPORT == 0 && this._reportFilterService.ActualVsBudgetObj.ActualVsBudget_COSTCENTERWISE == 0) {\r\n\r\n      this.reportNameFormatWise = 'BUDGETVSUTILIZATION REPORT_1';\r\n    } else if (this._reportFilterService.ActualVsBudgetObj.ActualVsBudget_OVERVIEWREPORT == 1 && this._reportFilterService.ActualVsBudgetObj.ActualVsBudget_DATETYPE == 1 && this._reportFilterService.ActualVsBudgetObj.ActualVsBudget_REPORTOPTION == 1 && this._reportFilterService.ActualVsBudgetObj.ActualVsBudget_COSTCENTERWISE == 0) {\r\n      this.reportNameFormatWise = 'BUDGETVSUTILIZATION REPORT_2';\r\n    } else if (this._reportFilterService.ActualVsBudgetObj.ActualVsBudget_OVERVIEWREPORT == 1 && this._reportFilterService.ActualVsBudgetObj.ActualVsBudget_DATETYPE == 1 && this._reportFilterService.ActualVsBudgetObj.ActualVsBudget_REPORTOPTION == 2 && this._reportFilterService.ActualVsBudgetObj.ActualVsBudget_COSTCENTERWISE == 0) {\r\n      this.reportNameFormatWise = 'BUDGETVSUTILIZATION REPORT_3';\r\n    } else if (this._reportFilterService.ActualVsBudgetObj.ActualVsBudget_OVERVIEWREPORT == 1 && this._reportFilterService.ActualVsBudgetObj.ActualVsBudget_DATETYPE == 2 && this._reportFilterService.ActualVsBudgetObj.ActualVsBudget_REPORTOPTION == 1 && this._reportFilterService.ActualVsBudgetObj.ActualVsBudget_COSTCENTERWISE == 0) {\r\n      this.reportNameFormatWise = 'BUDGETVSUTILIZATION REPORT_4';\r\n    } else if (this._reportFilterService.ActualVsBudgetObj.ActualVsBudget_OVERVIEWREPORT == 1 && this._reportFilterService.ActualVsBudgetObj.ActualVsBudget_DATETYPE == 2 && this._reportFilterService.ActualVsBudgetObj.ActualVsBudget_REPORTOPTION == 2 && this._reportFilterService.ActualVsBudgetObj.ActualVsBudget_COSTCENTERWISE == 0) {\r\n      this.reportNameFormatWise = 'BUDGETVSUTILIZATION REPORT_5';\r\n    } else if (this._reportFilterService.ActualVsBudgetObj.ActualVsBudget_OVERVIEWREPORT == 1 && (this._reportFilterService.ActualVsBudgetObj.ActualVsBudget_DATETYPE == 1 || this._reportFilterService.ActualVsBudgetObj.ActualVsBudget_DATETYPE == 2) && this._reportFilterService.ActualVsBudgetObj.ActualVsBudget_REPORTOPTION == 3 && this._reportFilterService.ActualVsBudgetObj.ActualVsBudget_COSTCENTERWISE == 0) {\r\n      this.reportNameFormatWise = 'BUDGETVSUTILIZATION REPORT_6';\r\n    }else if (this._reportFilterService.ActualVsBudgetObj.ActualVsBudget_OVERVIEWREPORT == 0 && this._reportFilterService.ActualVsBudgetObj.ActualVsBudget_DATETYPE == 2 && this._reportFilterService.ActualVsBudgetObj.ActualVsBudget_REPORTOPTION == 3 && this._reportFilterService.ActualVsBudgetObj.ActualVsBudget_COSTCENTERWISE == 1) {\r\n      this.reportNameFormatWise = 'BUDGETVSUTILIZATION REPORT_7';\r\n    }else if (this._reportFilterService.ActualVsBudgetObj.ActualVsBudget_OVERVIEWREPORT ==1  && this._reportFilterService.ActualVsBudgetObj.ActualVsBudget_DATETYPE == 2 && this._reportFilterService.ActualVsBudgetObj.ActualVsBudget_REPORTOPTION == 3 && this._reportFilterService.ActualVsBudgetObj.ActualVsBudget_COSTCENTERWISE == 1) {\r\n      this.reportNameFormatWise = 'BUDGETVSUTILIZATION REPORT_8';\r\n    }\r\n\r\n\r\n    this.reportdataEmit.emit({\r\n      status: res, data: {\r\n        REPORTDISPLAYNAME: this._reportFilterService.ActualVsBudgetObj.ActualVsBudget_OVERVIEWREPORT == 0?'BUDGET OVERVIEW REPORT':'BUDGET VS UTILIZATION REPORT',\r\n        reportname: this.reportNameFormatWise,\r\n        instanceWiseRepName: this.instanceWiseRepName + this._reportFilterService.ActualVsBUdget_loadedTimes,\r\n        reportparam: {\r\n          REPORTOPTIONDISPLAYNAME: this._reportFilterService.ActualVsBudgetObj.ActualVsBudget_REPORTOPTIONDISPLAYNAME ? this._reportFilterService.ActualVsBudgetObj.ActualVsBudget_REPORTOPTIONDISPLAYNAME : '',\r\n          // DATE1: this._reportFilterService.ActualVsBudgetObj.ActualVsBudget_DATE1,\r\n          // DATE2: this._reportFilterService.ActualVsBudgetObj.ActualVsBudget_DATE2,\r\n          // BSDATE1: this._reportFilterService.ActualVsBudgetObj.ActualVsBudget_BSDATE1,\r\n          // BSDATE2: this._reportFilterService.ActualVsBudgetObj.ActualVsBudget_BSDATE2,\r\n          DIV: this._reportFilterService.ActualVsBudgetObj.ActualVsBudget_DIV ? this._reportFilterService.ActualVsBudgetObj.ActualVsBudget_DIV : '%',\r\n          DIVISIONNAME: this._reportFilterService.ActualVsBudgetObj.ActualVsBudget_DIV!='%' ? this._reportFilterService.ActualVsBudgetObj.ActualVsBudget_DIV : 'ALL',\r\n          PHISCALID: this.masterService.PhiscalObj.PhiscalID,\r\n          CID: this.masterService.userProfile.CompanyInfo.COMPANYID,\r\n          CCID: this._reportFilterService.ActualVsBudgetObj.ActualVsBudget_CostCenter ? this._reportFilterService.ActualVsBudgetObj.ActualVsBudget_CostCenter : '%',\r\n          DETAIL: this._reportFilterService.ActualVsBudgetObj.ActualVsBudget_OVERVIEWREPORT ? this._reportFilterService.ActualVsBudgetObj.ActualVsBudget_OVERVIEWREPORT : 0,\r\n          TYPE: this._reportFilterService.ActualVsBudgetObj.ActualVsBudget_REPORTOPTION ? this._reportFilterService.ActualVsBudgetObj.ActualVsBudget_REPORTOPTION : 0,\r\n          INTERVAL: this._reportFilterService.ActualVsBudgetObj.ActualVsBudget_REPORTOPTION ? this._reportFilterService.ActualVsBudgetObj.ActualVsBudget_REPORTOPTION : 0,\r\n          BUDGET: this._reportFilterService.ActualVsBudgetObj.ActualVsBudget_Budget_Name != '' ? this._reportFilterService.ActualVsBudgetObj.ActualVsBudget_BUDGETSELECTION : '%',\r\n          MODE: this._reportFilterService.ActualVsBudgetObj.ActualVsBudget_CheckOption,\r\n          AD_BS: this._reportFilterService.ActualVsBudgetObj.ActualVsBudget_DATETYPE,\r\n          ACID: this._reportFilterService.ActualVsBudgetObj.ActualVsBudget_AccLedger_ACID,\r\n          COSTCENTERWISE: this._reportFilterService.ActualVsBudgetObj.ActualVsBudget_COSTCENTERWISE,\r\n          CCGID: this._reportFilterService.ActualVsBudgetObj.ActualVsBudget_COSTCENTERCATEGORY,\r\n          OPT_CCENTER: this._reportFilterService.ActualVsBudgetObj.ActualVsBudget_OPT_COSTCENTER,\r\n\r\n          COMPANYID: this.masterService.userProfile.CompanyInfo.COMPANYID,\r\n          // COMPANYTYPE: this._reportFilterService.ActualVsBudgetObj.TrialBalance_COMPANYTYPE ? this._reportFilterService.ActualVsBudgetObj.TrialBalance_COMPANYTYPE : 'NONDMS',\r\n          // DIVISIONNAME : this._reportFilterService.ActualVsBudgetObj.ActualVsBudget_DIVISIONNAME ? this._reportFilterService.ActualVsBudgetObj.ActualVsBudget_DIVISIONNAME : '',\r\n           COSTCENTERDISPLAYNAME: this._reportFilterService.ActualVsBudgetObj.ActualVsBudget_COSTCENTERNAME ? this._reportFilterService.ActualVsBudgetObj.ActualVsBudget_COSTCENTERNAME : '',\r\n          COSTCENTERCATEGORYNAME:this._reportFilterService.ActualVsBudgetObj.ActualVsBudget_COSTCENTERCATEGORYNAME?this._reportFilterService.ActualVsBudgetObj.ActualVsBudget_COSTCENTERCATEGORYNAME:'',\r\n          INCLUDEPOSTEDTRANSACTION :this._reportFilterService.ActualVsBudgetObj.ActualVsBudget_INCLUDEPOSTDATE ? this._reportFilterService.ActualVsBudgetObj.ActualVsBudget_INCLUDEPOSTDATE:0,\r\n          INCLUDEUNAPPROVEDTRANSACTION:this._reportFilterService.ActualVsBudgetObj.ActualVsBudget_INCLUDEUNAPPROVEDTRANSACTION ? this._reportFilterService.ActualVsBudgetObj.ActualVsBudget_INCLUDEUNAPPROVEDTRANSACTION:0,\r\n        }\r\n      }\r\n    });\r\n\r\n    // if(res == \"ok\"){\r\n    this._reportFilterService.ActualVsBUdget_loadedTimes = this._reportFilterService.ActualVsBUdget_loadedTimes + 1;\r\n    // }\r\n  }\r\n\r\n\r\n  AccountEnterClicked() {\r\n    this.gridPopupSettingsForAccountLedgerList = this.masterService.getGenericGridPopUpSettings('AccountLedgerListForReport');\r\n    this.genericGridAccountLedger.show();\r\n  }\r\n\r\n  dblClickAccountSelect(account) {\r\n    this._reportFilterService.ActualVsBudgetObj.ActualVsBudget_AccLedger_ACID = account.ACID;\r\n    this._reportFilterService.ActualVsBudgetObj.ActualVsBudget_AccLedger_ACCNAME = account.ACNAME;\r\n    // this._reportFilterService.AccoutLedgerObj.AccLedger_SingleAccount = account.ACID;\r\n  }\r\n\r\n\r\n  BudgetSelectionClicked() {\r\n    let fiscal_Data = this.userProfile.PhiscalYearInfo.PhiscalID\r\n    let re = /\\//gi;\r\n    let fiscalyear = fiscal_Data.replace(re, \"ZZ\");\r\n    let division = this.userProfile.division;\r\n    this.gridPopupSettingsForBudgetList = {\r\n      title: \"Budget List\",\r\n      apiEndpoints: `/getBudgetNameList/${fiscalyear}/${division}`,\r\n      defaultFilterIndex: 1,\r\n      columns: [\r\n        {\r\n          key: \"BUDGET_NUMBER\",\r\n          title: \"Budget No\",\r\n          hidden: false,\r\n          noSearch: false\r\n        },\r\n        {\r\n          key: \"BUDGET_NAME\",\r\n          title: \"Budget Name\",\r\n          hidden: false,\r\n          noSearch: false\r\n        }\r\n      ]\r\n    };\r\n    this.genericGridBudgetList.show();\r\n  }\r\n\r\n  dblClickBudgetSelect(value) {\r\n    this._reportFilterService.ActualVsBudgetObj.ActualVsBudget_Budget_Name = value.BUDGET_NAME;\r\n    // this._reportFilterService.ActualVsBudgetObj.ActualVsBudget_Budget_Num = value.BUDGET_NUMBER;\r\n    this._reportFilterService.ActualVsBudgetObj.ActualVsBudget_BUDGETSELECTION=value.BUDGET_NUMBER;\r\n    switch(value.BUDGET_INTERVAL){\r\n      case 'YEARLY' : this._reportFilterService.ActualVsBudgetObj.ActualVsBudget_BUDGETINTERVAL = '3';\r\n      break;\r\n      case 'QUARTERLY' : this._reportFilterService.ActualVsBudgetObj.ActualVsBudget_BUDGETINTERVAL = '2';\r\n      break;\r\n      case 'MONTHLY': this._reportFilterService.ActualVsBudgetObj.ActualVsBudget_BUDGETINTERVAL = '1';\r\n      break;\r\n      default: this._reportFilterService.ActualVsBudgetObj.ActualVsBudget_BUDGETINTERVAL = '0';\r\n    }\r\n    if( this._reportFilterService.ActualVsBudgetObj.ActualVsBudget_COSTCENTERWISE == '0'){\r\n      this._reportFilterService.ActualVsBudgetObj.ActualVsBudget_REPORTOPTION = this._reportFilterService.ActualVsBudgetObj.ActualVsBudget_BUDGETINTERVAL;\r\n\r\n    }\r\n    // this.masterService.LoadBudgetAllocation(value.VCHRNO)\r\n    //   .subscribe(data => {\r\n    //     if (data.status == 'ok') {\r\n    //       if (data.result && data.result.length && data.result.length > 0) {\r\n    //         this.BudgetObj.MODE = \"ADD\";\r\n    //         this.BudgetObj.BUDGET_TYPE = data.result[0].BUDGET_TYPE;\r\n    //         this.BudgetObj.BUDGET_INTERVAL = data.result[0].BUDGET_INTERVAL;\r\n    //         this.BudgetObj.INTERVAL_ON_AD_OR_BS = data.result[0].INTERVAL_ON_AD_OR_BS;\r\n    //         this.BudgetObj.TRNDATE = data.result[0].TRNDATE;\r\n    //         this.BudgetObj.BSDATE = data.result[0].BSDATE;\r\n    //         this.BudgetObj.SUBDIVIDED_BY = data.result[0].SUBDIVIDED_BY;\r\n    //         this.BudgetObj.FROM_DATE = data.result[0].FROM_DATE;\r\n    //         this.BudgetObj.FROM_BSDATE = data.result[0].FROM_BSDATE;\r\n    //         this.BudgetObj.TO_DATE = data.result[0].TO_DATE;\r\n    //         this.BudgetObj.TO_BSDATE = data.result[0].TO_BSDATE;\r\n    //         this.BudgetObj.ACTION = data.result[0].ACTION;\r\n    //         this.BudgetObj.ACTION_TYPE = data.result[0].ACTION_TYPE;\r\n    //         // this.ChooseInterval();\r\n    //         // this.SelectionAction();\r\n    //       }\r\n    //       if (data.result2 && data.result2.length && data.result2.length > 0) {\r\n    //         this.temp_DetailList = [];\r\n    //         // this.DetailList = [];\r\n    //         this.BudgetObj.COSTCENTER_CATEGORYID = data.result2[0].COSTCENTER_CATEGORYID;\r\n    //         this.BudgetObj.COSTCENTER_CATEGORYNAME = data.result2[0].COSTCENTER_CATEGORYNAME;\r\n    //         this.BudgetObj.CCID = data.result2[0].CCID;\r\n    //         this.BudgetObj.COSTCENTER_NAME = data.result2[0].COSTCENTER_NAME;\r\n    //         this.temp_DetailList = data.result2;\r\n    //         // this.CalculateSum();\r\n    //       }\r\n    //     }\r\n    //   }, error => {\r\n\r\n    //   }\r\n    //   )\r\n  }\r\n\r\n  onBudgetSelectionChange(){\r\n    if(this._reportFilterService.ActualVsBudgetObj.ActualVsBudget_Budget_Name == ''){\r\n      this._reportFilterService.ActualVsBudgetObj.ActualVsBudget_BUDGETSELECTION = '%';\r\n      this._reportFilterService.ActualVsBudgetObj.ActualVsBudget_REPORTOPTION = '3';\r\n    }\r\n\r\n  }\r\n\r\n  overViewSelect(event: any) {\r\n    if (event.target.value == 0) {\r\n      this._reportFilterService.ReportOptionAll = true;\r\n      this._reportFilterService.ActualVsBudgetObj.ActualVsBudget_DATETYPE = 2;\r\n      if(this._reportFilterService.ActualVsBudgetObj.ActualVsBudget_BUDGETSELECTION =='%' || this._reportFilterService.ActualVsBudgetObj.ActualVsBudget_COSTCENTERWISE == 1){\r\n        this._reportFilterService.ActualVsBudgetObj.ActualVsBudget_REPORTOPTION = '3';\r\n\r\n      }\r\n    }\r\n\r\n\r\n  }\r\n  ActualVSbudgetSelect(event: any) {\r\n    if (event.target.value == 1) {\r\n      this._reportFilterService.ReportOptionAll = false;\r\n      this._reportFilterService.ActualVsBudgetObj.ActualVsBudget_DATETYPE=2;\r\n      if(this._reportFilterService.ActualVsBudgetObj.ActualVsBudget_BUDGETSELECTION =='%' || this._reportFilterService.ActualVsBudgetObj.ActualVsBudget_COSTCENTERWISE == 1){\r\n        this._reportFilterService.ActualVsBudgetObj.ActualVsBudget_REPORTOPTION = '3';\r\n      }else {\r\n        if(this._reportFilterService.ActualVsBudgetObj.ActualVsBudget_BUDGETINTERVAL){\r\n          this._reportFilterService.ActualVsBudgetObj.ActualVsBudget_REPORTOPTION = this._reportFilterService.ActualVsBudgetObj.ActualVsBudget_BUDGETINTERVAL;\r\n\r\n        }else {\r\n          this._reportFilterService.ActualVsBudgetObj.ActualVsBudget_REPORTOPTION = '3';\r\n        }\r\n      }\r\n\r\n    }\r\n  }\r\n\r\n  showCostCenterGroupChange() {\r\n    // this._reportFilterService.ActualVsBudgetObj.ActualVsBudget_COSTCENTERCATEGORY = costCentercategory.target.value;\r\n    // if(this._reportFilterService.ActualVsBudgetObj.ActualVsBudget_COSTCENTERCATEGORY=='%'){\r\n    //   this._reportFilterService.ActualVsBudgetObj.ActualVsBudget_OPT_COSTCENTER = 0;\r\n    // }\r\n    let costCenterCategoryId = this._reportFilterService.ActualVsBudgetObj.ActualVsBudget_COSTCENTERCATEGORY;\r\n\r\n    if (this.userSetting.EnableCompulsoryCostCategory == 1) {\r\n\r\n      this.masterService.sendCostCenterList(costCenterCategoryId).subscribe((res: any) => {\r\n        console.log('res', res)\r\n        // this.costCenterList.push(res.data)\r\n        this.CostcenterList = res.data;\r\n        console.log('costCenterList', this.CostcenterList);        \r\n\r\n    })\r\n  }\r\n\r\n\r\n\r\n  }\r\n\r\n  applyHostListener(): void {\r\n    if (this.budgetSelectionField && this.budgetSelectionField.nativeElement) {\r\n      this.budgetSelectionField.nativeElement.addEventListener('keydown', (event: KeyboardEvent) => {\r\n        if (event.key !== 'Backspace') {\r\n          event.preventDefault(); // Prevent typing any character except the backspace\r\n        }\r\n      });\r\n    }\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/pages/ReportDialogs/ActualVsBudget-Report/actualvsbudget-report.component.ts","import { NgaModule } from '../../../theme/nga.module';\r\nimport { Component, Inject, Output, EventEmitter, OnInit, ViewChild } from '@angular/core';\r\nimport { MdDialogRef, MD_DIALOG_DATA } from '@angular/material';\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { MasterRepo } from '../../../common/repositories';\r\nimport { Division } from '../../../common/interfaces';\r\nimport { ReportMainService } from '../../Reports/components/ReportMain/ReportMain.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { GenericPopUpComponent, GenericPopUpSettings } from '../../../common/popupLists/generic-grid/generic-popup-grid.component';\r\nimport { AlertService } from '../../../common/services/alert/alert.service';\r\n\r\n\r\nexport interface DialogInfo {\r\n    header: string;\r\n    message: Observable<string>;\r\n}\r\n@Component({\r\n    selector: 'additionalcost-itemwise-report',\r\n    template: require('./additionalcost-itemwise-report.component.html'),\r\n    styles: [require('../../Reports/reportStyle.css'), require('../../modal-style.css')]\r\n})\r\n\r\nexport class AdditionalCostItemwiseReport implements OnInit {\r\n    ReportParameters: any = <any>{};\r\n    multipleReportFormateName: string;\r\n    division: any[] = [];\r\n    CostcenterList: any[] = [];\r\n    instanceWiseRepName: string = 'Additional Cost Itemwise Report';\r\n\r\n    @Output() reportdataEmit = new EventEmitter();\r\n    @ViewChild(\"genericGridVoucherNo\") genericGridVoucherNo: GenericPopUpComponent;\r\n    gridPopupSettingsForVoucherList: GenericPopUpSettings = new GenericPopUpSettings();\r\n    @ViewChild(\"genericGridAccount\") genericGridAccount: GenericPopUpComponent;\r\n    gridPopupSettingsForAccountList: GenericPopUpSettings = new GenericPopUpSettings();\r\n    @ViewChild(\"genericGridCostCenterList\") genericGridCostCenterList: GenericPopUpComponent;\r\n    gridCostCenterListPopupSettings: GenericPopUpSettings = new GenericPopUpSettings();\r\n    @ViewChild(\"genericGridCostCenterGroupList\") genericGridCostCenterGroupList: GenericPopUpComponent;\r\n    gridCostCenterGroupListPopupSettings: GenericPopUpSettings = new GenericPopUpSettings();\r\n\r\n    constructor(private masterService: MasterRepo,\r\n        public dialogref: MdDialogRef<AdditionalCostItemwiseReport>,\r\n        @Inject(MD_DIALOG_DATA) public data: DialogInfo, public _ActivatedRoute: ActivatedRoute, \r\n        private _reportFilterService: ReportMainService, private arouter: Router, private alertService: AlertService,) {\r\n        //----------Default values on load\r\n        //   this.multipleReportFormateName = 'Additional Cost Detail Report';\r\n        this.ReportParameters.COMID = this.masterService.userProfile.CompanyInfo.COMPANYID\r\n\r\n        this.division = [];\r\n        //let data: Array<IDivision> = [];\r\n        if (this.masterService.userSetting.userwisedivision == 1) {\r\n            this.masterService.getDivisionFromRightPrivelege().subscribe(res => {\r\n                if (res.status == 'ok') {\r\n                    this.division = res.result;\r\n                }\r\n            })\r\n        }\r\n        else {\r\n            this.masterService.getAllDivisions()\r\n                .subscribe(res => {\r\n                    //////console.log(\"div\" + JSON.stringify(res));\r\n                    this.division.push(<Division>res);\r\n                }, error => {\r\n                    this.masterService.resolveError(error, \"divisions - getDivisions\");\r\n                });\r\n        }\r\n        this.masterService.getCostcenter().subscribe(res => {\r\n            this.CostcenterList = res;\r\n        })\r\n        // this.masterService.getAccDivList();\r\n    }\r\n\r\n    ngOnInit() {\r\n        this._ActivatedRoute.queryParams.subscribe(params => {\r\n            if (this._reportFilterService.AdditionalCostDetailObj.assignPrevioiusDate != true) {\r\n                this.masterService.getAccDivList();\r\n                this._reportFilterService.AdditionalCostDetailObj.AdditionalCostDetail_DATE1 = this.masterService.PhiscalObj.BeginDate.split('T')[0];\r\n                this._reportFilterService.AdditionalCostDetailObj.AdditionalCostDetail_DATE2 = this.masterService.PhiscalObj.EndDate.split('T')[0];\r\n                this.changestartDate(this._reportFilterService.AdditionalCostDetailObj.AdditionalCostDetail_DATE1, \"AD\");\r\n                this.changeEndDate(this._reportFilterService.AdditionalCostDetailObj.AdditionalCostDetail_DATE2, \"AD\");\r\n                // this._reportFilterService.AdditionalCostDetailObj.AdditionalCostDetail_DIV = this.masterService.userProfile.CompanyInfo.INITIAL;\r\n                this.masterService.viewDivision.subscribe(() => {\r\n                    if(this.masterService.userSetting.userwisedivision==0 ||  this.masterService.showAll == true){ //ALL OPTION SELECTION IN DIVISION IN REPORT DIALOG BOX\r\n                      this._reportFilterService.AdditionalCostDetailObj.AdditionalCostDetail_DIV='%';\r\n                  }else{\r\n                    if(this.masterService.userSetting.userwisedivision==1 && this.division.length ==1){\r\n                        this._reportFilterService.AdditionalCostDetailObj.AdditionalCostDetail_DIV=this.division[0].INITIAL;\r\n                      }else{\r\n                        this._reportFilterService.AdditionalCostDetailObj.AdditionalCostDetail_DIV=this.masterService.userProfile.CompanyInfo.INITIAL;\r\n                    }\r\n                  }\r\n                  })  \r\n                this._reportFilterService.AdditionalCostDetailObj.AdditionalCostDetail_ISSUMMARY = '1';\r\n            }\r\n\r\n            if (params.instancename) {\r\n                // ////console.log(\"@@AdditionalCostDetailObj\",params.instancename,this._reportFilterService.reportDataStore[params.instancename].param.reportparam)\r\n                this._reportFilterService.AdditionalCostDetailObj.AdditionalCostDetail_DATE1 = this._reportFilterService.reportDataStore[params.instancename].param.reportparam.DATE1;\r\n                this._reportFilterService.AdditionalCostDetailObj.AdditionalCostDetail_DATE2 = this._reportFilterService.reportDataStore[params.instancename].param.reportparam.DATE2;\r\n                this._reportFilterService.AdditionalCostDetailObj.AdditionalCostDetail_DIV = this._reportFilterService.reportDataStore[params.instancename].param.reportparam.DIV;\r\n            }\r\n        })\r\n\r\n\r\n        this.changestartDate(this._reportFilterService.AdditionalCostDetailObj.AdditionalCostDetail_DATE1, \"AD\");\r\n    }\r\n\r\n    onload() {\r\n        this.DialogClosedResult(\"ok\");\r\n    }\r\n\r\n    closeReportBox() {\r\n        this.DialogClosedResult(\"Error!\");\r\n    }\r\n\r\n    public DialogClosedResult(res) {\r\n        this._reportFilterService.AdditionalCostDetailObj.AdditionalCostDetail_DIV = (this._reportFilterService.AdditionalCostDetailObj.AdditionalCostDetail_DIV == null || this._reportFilterService.AdditionalCostDetailObj.AdditionalCostDetail_DIV == \"\") ? \"%\" : this._reportFilterService.AdditionalCostDetailObj.AdditionalCostDetail_DIV;\r\n\r\n        if (this._reportFilterService.AdditionalCostDetailObj.AdditionalCostDetail_ISSUMMARY == '1') {\r\n            this.multipleReportFormateName = 'Additional Cost Itemwise Summary Report';\r\n            this._reportFilterService.AdditionalCostDetailObj.AdditionalCostDetail_SUMMARYREPORTDISPLAYNAME = ' @Summary Report';\r\n        } else {\r\n            this.multipleReportFormateName = 'Additional Cost Itemwise Detail Report';\r\n            this._reportFilterService.AdditionalCostDetailObj.AdditionalCostDetail_SUMMARYREPORTDISPLAYNAME = ' @Detail Report';\r\n        }\r\n\r\n        if (this._reportFilterService.AdditionalCostDetailObj.AdditionalCostDetail_DIV && this._reportFilterService.AdditionalCostDetailObj.AdditionalCostDetail_DIV == '%') {\r\n            this._reportFilterService.AdditionalCostDetailObj.AdditionalCostDetail_DIVISIONNAME = 'All';\r\n          }else if( this._reportFilterService.AdditionalCostDetailObj.AdditionalCostDetail_DIV && this._reportFilterService.AdditionalCostDetailObj.AdditionalCostDetail_DIV!= '%'){\r\n            let abc = this.division.filter(x=>x.INITIAL == this._reportFilterService.AdditionalCostDetailObj.AdditionalCostDetail_DIV);\r\n              if(abc && abc.length>0 && abc[0]){\r\n                this._reportFilterService.AdditionalCostDetailObj.AdditionalCostDetail_DIVISIONNAME = abc[0].NAME;\r\n              }else{\r\n                this._reportFilterService.AdditionalCostDetailObj.AdditionalCostDetail_DIVISIONNAME = '';\r\n              }\r\n          }else{\r\n            this._reportFilterService.AdditionalCostDetailObj.AdditionalCostDetail_DIVISIONNAME = '';\r\n          }\r\n\r\n        if (res == \"ok\") {\r\n            this._reportFilterService.AdditionalCostDetailObj.assignPrevioiusDate = true;\r\n            let routepaths = this.arouter.url.split('/');\r\n            let activeurlpath2;\r\n            if (routepaths && routepaths.length) {\r\n                activeurlpath2 = routepaths[routepaths.length - 1]\r\n            }\r\n\r\n            if (this._reportFilterService.AdditionalCostDetail_loadedTimes == 0) {\r\n                this._reportFilterService.previouslyLoadedReportList.push(\r\n                    {\r\n                        reportname: 'Additional Cost Itemwise Report',\r\n                        activeurlpath: this.arouter.url,\r\n                        activerurlpath2: activeurlpath2,\r\n                        instanceWiseRepName: this.instanceWiseRepName + this._reportFilterService.AdditionalCostDetail_loadedTimes,\r\n                    });\r\n            } else {\r\n                this._reportFilterService.previouslyLoadedReportList.push(\r\n                    {\r\n                        reportname: 'Additional Cost Itemwise Report' + '_' + this._reportFilterService.AdditionalCostDetail_loadedTimes,\r\n                        activeurlpath: this.arouter.url,\r\n                        activerurlpath2: activeurlpath2,\r\n                        instanceWiseRepName: this.instanceWiseRepName + this._reportFilterService.AdditionalCostDetail_loadedTimes,\r\n                    });\r\n            }\r\n\r\n\r\n            if(this._reportFilterService.AdditionalCostDetailObj.AdditionalCostDetail_COSTCENTERNAME == \"\") this._reportFilterService.AdditionalCostDetailObj.AdditionalCostDetail_CCID = '%';\r\n        }\r\n\r\n        this.reportdataEmit.emit({\r\n            status: res, data: {\r\n                reportname: this.multipleReportFormateName,\r\n                REPORTDISPLAYNAME : 'Additional Cost Itemwise Report',\r\n                instanceWiseRepName: this.instanceWiseRepName + this._reportFilterService.AdditionalCostDetail_loadedTimes,\r\n                reportparam: {\r\n                    DIVISION: this._reportFilterService.AdditionalCostDetailObj.AdditionalCostDetail_DIV,\r\n                    PHISCALID: this.masterService.PhiscalObj.PhiscalID,\r\n                    COMID: this.ReportParameters.COMID,\r\n                    DATE1: this._reportFilterService.AdditionalCostDetailObj.AdditionalCostDetail_DATE1,\r\n                    DATE2: this._reportFilterService.AdditionalCostDetailObj.AdditionalCostDetail_DATE2,\r\n                    BSDATE1: this._reportFilterService.AdditionalCostDetailObj.AdditionalCostDetail_BSDATE1,\r\n                    BSDATE2: this._reportFilterService.AdditionalCostDetailObj.AdditionalCostDetail_BSDATE2,\r\n                    VOUCHER: this._reportFilterService.AdditionalCostDetailObj.AdditionalCostDetail_VOUCHERNO ? this._reportFilterService.AdditionalCostDetailObj.AdditionalCostDetail_VOUCHERNO : '%',\r\n                    ACID: this._reportFilterService.AdditionalCostDetailObj.AdditionalCostDetail_ACID ? this._reportFilterService.AdditionalCostDetailObj.AdditionalCostDetail_ACID : '%',\r\n                    ACCNAME: this._reportFilterService.AdditionalCostDetailObj.AdditionalCostDetail_ACNAME ? this._reportFilterService.AdditionalCostDetailObj.AdditionalCostDetail_ACNAME : '%',\r\n                    SUMMARYREPORT: this._reportFilterService.AdditionalCostDetailObj.AdditionalCostDetail_ISSUMMARY,\r\n                    DIVISIONNAME : this._reportFilterService.AdditionalCostDetailObj.AdditionalCostDetail_DIVISIONNAME ? this._reportFilterService.AdditionalCostDetailObj.AdditionalCostDetail_DIVISIONNAME : '',\r\n                    SUMMARYREPORTDISPLAYNAME:this._reportFilterService.AdditionalCostDetailObj.AdditionalCostDetail_SUMMARYREPORTDISPLAYNAME?this._reportFilterService.AdditionalCostDetailObj.AdditionalCostDetail_SUMMARYREPORTDISPLAYNAME:'',\r\n                    SUPPLIERDISPLAYNAME: this._reportFilterService.AdditionalCostDetailObj.AdditionalCostDetail_ACNAME?this._reportFilterService.AdditionalCostDetailObj.AdditionalCostDetail_ACNAME:'',\r\n                    CCID:this._reportFilterService.AdditionalCostDetailObj.AdditionalCostDetail_CCID?this._reportFilterService.AdditionalCostDetailObj.AdditionalCostDetail_CCID:'%';\r\n\r\n                }\r\n            }\r\n        });\r\n\r\n        if (res == \"ok\") {\r\n            this._reportFilterService.AdditionalCostDetail_loadedTimes = this._reportFilterService.AdditionalCostDetail_loadedTimes + 1;\r\n        }\r\n    }\r\n\r\n    changestartDate(value, format: string) {\r\n        var adbs = require(\"ad-bs-converter\");\r\n        if (format == \"AD\") {\r\n            var adDate = (value.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n            var bsDate = adbs.ad2bs(adDate);\r\n            this._reportFilterService.AdditionalCostDetailObj.AdditionalCostDetail_BSDATE1 = this.masterService.toBSDate(value);\r\n        }\r\n        else if (format == \"BS\") {\r\n            var datearr = value.split('/');\r\n            const bsDate = datearr[2]+\"/\"+datearr[1]+\"/\"+datearr[0];\r\n            // var bsDate = (value.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n            var adDate = adbs.bs2ad(bsDate);\r\n            var Engdate = this.masterService.toADDate(value);\r\n            const Validatedata = this.masterService.ValidateNepaliDate(Engdate)\r\n            if(Validatedata == true){\r\n              const bsDate1 = datearr[2]+\"/\"+datearr[1]+\"/\"+datearr[0];\r\n              var adDate1 = adbs.bs2ad(bsDate1);\r\n              this._reportFilterService.AdditionalCostDetailObj.AdditionalCostDetail_DATE1 = this.masterService.toADDate(value);\r\n            }else{\r\n                this.alertService.error(\"Cannot Change the date\");\r\n              return;\r\n            } \r\n            // this._reportFilterService.AdditionalCostDetailObj.AdditionalCostDetail_DATE1 = this.masterService.toBSDate(value);\r\n        }\r\n    }\r\n\r\n    changeEndDate(value, format: string) {\r\n        try {\r\n            var adbs = require(\"ad-bs-converter\");\r\n            if (format == \"AD\") {\r\n                var adDate = (value.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n                var bsDate = adbs.ad2bs(adDate);\r\n                this._reportFilterService.AdditionalCostDetailObj.AdditionalCostDetail_BSDATE2 = this.masterService.toBSDate(value);\r\n            }\r\n            else if (format == \"BS\") {\r\n                var datearr = value.split('/');\r\n                const bsDate = datearr[2]+\"/\"+datearr[1]+\"/\"+datearr[0];\r\n                // var bsDate = (value.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n                var adDate = adbs.bs2ad(bsDate);\r\n                var Engdate = this.masterService.toADDate(value);\r\n            const Validatedata = this.masterService.ValidateNepaliDate(Engdate)\r\n            if(Validatedata == true){\r\n              const bsDate1 = datearr[2]+\"/\"+datearr[1]+\"/\"+datearr[0];\r\n              var adDate1 = adbs.bs2ad(bsDate1);\r\n              this._reportFilterService.AdditionalCostDetailObj.AdditionalCostDetail_DATE2 = this.masterService.toADDate(value);\r\n            }else{\r\n                this.alertService.error(\"Cannot Change the date\");\r\n              return;\r\n            } \r\n                // this._reportFilterService.AdditionalCostDetailObj.AdditionalCostDetail_DATE2 = this.masterService.toBSDate(value);\r\n            }\r\n        }\r\n        catch (e) { }\r\n    }\r\n\r\n    VoucherNoEnterClicked() {\r\n        this.gridPopupSettingsForVoucherList = this.masterService.getGenericGridPopUpSettings('PIVoucherListForAdditionalCostReport');\r\n        this.genericGridVoucherNo.show();\r\n    }\r\n\r\n    dblClickVoucherSelect(voucher) {\r\n        this._reportFilterService.AdditionalCostDetailObj.AdditionalCostDetail_VOUCHERNO = voucher.VCHRNO;\r\n    }\r\n\r\n    AccountEnterClicked() {\r\n        this.gridPopupSettingsForAccountList = {\r\n            title: \"Accounts\",\r\n            apiEndpoints: `/getAccountPagedListByMapId/Master/SupplierListForReport`,\r\n            defaultFilterIndex: 1,\r\n            columns: [\r\n                {\r\n                    key: \"ACID\",\r\n                    title: \"ACID\",\r\n                    hidden: false,\r\n                    noSearch: false\r\n                },\r\n                {\r\n                    key: \"ACNAME\",\r\n                    title: \"A/C NAME\",\r\n                    hidden: false,\r\n                    noSearch: false\r\n                }\r\n            ]\r\n        };\r\n        this.genericGridAccount.show();\r\n    }\r\n\r\n    dblClickAccountSelect(supplier) {\r\n        this._reportFilterService.AdditionalCostDetailObj.AdditionalCostDetail_ACID = supplier.ACID;\r\n        this._reportFilterService.AdditionalCostDetailObj.AdditionalCostDetail_ACNAME = supplier.ACNAME;\r\n    }\r\n\r\n    showCostCenterGroupList(i) {\r\n        this.gridCostCenterGroupListPopupSettings = {\r\n          title: \"Cost Centers Categories\",\r\n          apiEndpoints: `/getCostCenterGroupPagedList`,\r\n          defaultFilterIndex: 0,\r\n          columns: [\r\n            {\r\n              key: \"ccgid\",\r\n              title: \"ID\",\r\n              hidden: false,\r\n              noSearch: false\r\n            },\r\n            {\r\n              key: \"COSTCENTERGROUPNAME\",\r\n              title: \"Cost Center Category Name\",\r\n              hidden: false,\r\n              noSearch: false\r\n            },\r\n    \r\n          ]\r\n        };\r\n        this.genericGridCostCenterGroupList.show();\r\n      }\r\n  \r\n      onCostCenterGroupSelect(category) {\r\n        let ccgid = category.ccgid;\r\n        this.showCostCenterList(ccgid);\r\n      }\r\n  \r\n      showCostCenterList(ccgid:string) {\r\n        this.gridCostCenterListPopupSettings = {\r\n          title: \"Cost Centers\",\r\n          apiEndpoints: `/getCostCenterPagedListAccordingToId/${ccgid}`,\r\n          defaultFilterIndex: 0,\r\n          columns: [\r\n            {\r\n              key: \"COSTCENTERNAME\",\r\n              title: \"Cost Center Name\",\r\n              hidden: false,\r\n              noSearch: false\r\n            }\r\n          ]\r\n        };\r\n    \r\n        this.genericGridCostCenterList.show();\r\n    \r\n      }\r\n  \r\n      onCostCenterSelect(costcenter){\r\n        this._reportFilterService.AdditionalCostDetailObj.AdditionalCostDetail_COSTCENTERNAME = costcenter.COSTCENTERNAME;\r\n        this._reportFilterService.AdditionalCostDetailObj.AdditionalCostDetail_CCID = costcenter.CCID;\r\n  \r\n      }\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/pages/ReportDialogs/AdditionalCost-Itemwise-Report/additionalcost-itemwise-report.component.ts","import {NgaModule} from '../../../theme/nga.module';\r\nimport {Component, Inject, Output, EventEmitter, OnInit, ViewChild} from '@angular/core';\r\nimport {MdDialogRef, MD_DIALOG_DATA} from '@angular/material';\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { MasterRepo } from '../../../common/repositories';\r\nimport { Division } from '../../../common/interfaces';\r\nimport { ReportMainService } from '../../Reports/components/ReportMain/ReportMain.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { GenericPopUpComponent, GenericPopUpSettings } from '../../../common/popupLists/generic-grid/generic-popup-grid.component';\r\nimport { AlertService } from '../../../common/services/alert/alert.service';\r\n\r\n\r\nexport interface DialogInfo{\r\n    header: string;\r\n    message: Observable<string>;\r\n}\r\n@Component({\r\n    selector : 'additionalcost-voucherwise-report',\r\n    template: require('./additionalcost-voucherwise-report.component.html'),\r\n    styles: [require('../../Reports/reportStyle.css'),require('../../modal-style.css')]\r\n})\r\n\r\nexport class AdditionalCostVoucherwiseReport implements OnInit{\r\n    ReportParameters:any=<any>{};\r\n    multipleReportFormateName:string;\r\n    division: any[] = [];\r\n    CostcenterList: any[] = [];\r\n    instanceWiseRepName:string='Additional Cost Voucherwise Report';\r\n\r\n    @Output() reportdataEmit = new EventEmitter();\r\n    @ViewChild(\"genericGridVoucherNo\") genericGridVoucherNo: GenericPopUpComponent;\r\n    gridPopupSettingsForVoucherList: GenericPopUpSettings = new GenericPopUpSettings();\r\n    @ViewChild(\"genericGridAccount\") genericGridAccount: GenericPopUpComponent;\r\n    gridPopupSettingsForAccountList: GenericPopUpSettings = new GenericPopUpSettings();\r\n    @ViewChild(\"genericGridCostCenterList\") genericGridCostCenterList: GenericPopUpComponent;\r\n    gridCostCenterListPopupSettings: GenericPopUpSettings = new GenericPopUpSettings();\r\n    @ViewChild(\"genericGridCostCenterGroupList\") genericGridCostCenterGroupList: GenericPopUpComponent;\r\n    gridCostCenterGroupListPopupSettings: GenericPopUpSettings = new GenericPopUpSettings();\r\n    constructor(private masterService: MasterRepo,\r\n        public dialogref:MdDialogRef<AdditionalCostVoucherwiseReport>,\r\n         @Inject(MD_DIALOG_DATA) public data: DialogInfo, public _ActivatedRoute: ActivatedRoute,private alertService: AlertService,\r\n         private _reportFilterService:ReportMainService, private arouter: Router){\r\n      //----------Default values on load\r\n    //   this.multipleReportFormateName = 'Additional Cost Summary Report';\r\n      this.ReportParameters.COMID = this.masterService.userProfile.CompanyInfo.COMPANYID;\r\n \r\n      this.division=[];\r\n      //let data: Array<IDivision> = [];\r\n      if(this.masterService.userSetting.userwisedivision == 1){\r\n        this.masterService.getDivisionFromRightPrivelege().subscribe(res=>{\r\n            if(res.status == 'ok'){\r\n                this.division = res.result;\r\n            }\r\n        })\r\n      }\r\n      else{\r\n       this.masterService.getAllDivisions()\r\n       .subscribe(res => {\r\n         //////console.log(\"div\" + JSON.stringify(res));\r\n         this.division.push(<Division>res);                \r\n       }, error => {\r\n         this.masterService.resolveError(error, \"divisions - getDivisions\");\r\n       });\r\n      } \r\n\r\n            this.masterService.getCostcenter().subscribe(res => {\r\n                this.CostcenterList = res;\r\n            })\r\n            // this.masterService.getAccDivList();\r\n    }\r\n\r\n    ngOnInit(){\r\n        this._ActivatedRoute.queryParams.subscribe(params => {\r\n            if(this._reportFilterService.AdditionalCostSummaryObj.assignPrevioiusDate != true){\r\n              this.masterService.getAccDivList();\r\n                this._reportFilterService.AdditionalCostSummaryObj.AdditionalCostSummary_DATE1 = this.masterService.PhiscalObj.BeginDate.split('T')[0];\r\n                this._reportFilterService.AdditionalCostSummaryObj.AdditionalCostSummary_DATE2 = this.masterService.PhiscalObj.EndDate.split('T')[0];\r\n                this.changestartDate(this._reportFilterService.AdditionalCostSummaryObj.AdditionalCostSummary_DATE1, \"AD\");\r\n                this.changeEndDate(this._reportFilterService.AdditionalCostSummaryObj.AdditionalCostSummary_DATE2, \"AD\");\r\n                // this._reportFilterService.AdditionalCostSummaryObj.AdditionalCostSummary_DIV=this.masterService.userProfile.CompanyInfo.INITIAL;\r\n                this.masterService.viewDivision.subscribe(() => {\r\n                  if(this.masterService.userSetting.userwisedivision==0 ||  this.masterService.showAll == true){ //ALL OPTION SELECTION IN DIVISION IN REPORT DIALOG BOX\r\n                    this._reportFilterService.AdditionalCostSummaryObj.AdditionalCostSummary_DIV='%';\r\n                }else{\r\n                  if(this.masterService.userSetting.userwisedivision==1 && this.division.length ==1){\r\n                    this._reportFilterService.AdditionalCostSummaryObj.AdditionalCostSummary_DIV=this.division[0].INITIAL;\r\n                  }else{\r\n                    this._reportFilterService.AdditionalCostSummaryObj.AdditionalCostSummary_DIV=this.masterService.userProfile.CompanyInfo.INITIAL;\r\n                  }\r\n                }\r\n                })  \r\n                this._reportFilterService.AdditionalCostSummaryObj.AdditionalCostSummary_ISSUMMARY = '1';\r\n            }\r\n    \r\n            if(params.instancename){\r\n                // ////console.log(\"@@AdditionalCostSummaryObj\",params.instancename,this._reportFilterService.reportDataStore[params.instancename].param.reportparam)\r\n                this._reportFilterService.AdditionalCostSummaryObj.AdditionalCostSummary_DATE1=this._reportFilterService.reportDataStore[params.instancename].param.reportparam.DATE1;\r\n                this._reportFilterService.AdditionalCostSummaryObj.AdditionalCostSummary_DATE2=this._reportFilterService.reportDataStore[params.instancename].param.reportparam.DATE2;\r\n                this._reportFilterService.AdditionalCostSummaryObj.AdditionalCostSummary_DIV=this._reportFilterService.reportDataStore[params.instancename].param.reportparam.DIV;\r\n            }\r\n        })\r\n        \r\n\r\n        this.changestartDate(this._reportFilterService.AdditionalCostSummaryObj.AdditionalCostSummary_DATE1, \"AD\");\r\n        this.changeEndDate( this._reportFilterService.AdditionalCostSummaryObj.AdditionalCostSummary_DATE2, \"AD\")\r\n    }\r\n\r\n    onload(){\r\n        this.DialogClosedResult(\"ok\");\r\n    }\r\n\r\n    closeReportBox(){\r\n        this.DialogClosedResult(\"Error!\");\r\n    }\r\n\r\n    public DialogClosedResult(res) {\r\n        this._reportFilterService.AdditionalCostSummaryObj.AdditionalCostSummary_DIV = (this._reportFilterService.AdditionalCostSummaryObj.AdditionalCostSummary_DIV == null || this._reportFilterService.AdditionalCostSummaryObj.AdditionalCostSummary_DIV == \"\")?\"%\":this._reportFilterService.AdditionalCostSummaryObj.AdditionalCostSummary_DIV;\r\n\r\n        if(this._reportFilterService.AdditionalCostSummaryObj.AdditionalCostSummary_ISSUMMARY == '1'){\r\n            this.multipleReportFormateName = 'Additional Cost Voucherwise Summary Report';\r\n            this._reportFilterService.AdditionalCostSummaryObj.AdditionalCostSummary_SUMMARYREPORTDISPLAYNAME = ' @Summary Report';\r\n        }else{\r\n            this.multipleReportFormateName = 'Additional Cost Voucherwise Detail Report';\r\n            this._reportFilterService.AdditionalCostSummaryObj.AdditionalCostSummary_SUMMARYREPORTDISPLAYNAME = ' @Detail Report';\r\n        }\r\n\r\n        if (this._reportFilterService.AdditionalCostSummaryObj.AdditionalCostSummary_DIV && this._reportFilterService.AdditionalCostSummaryObj.AdditionalCostSummary_DIV == '%') {\r\n            this._reportFilterService.AdditionalCostSummaryObj.AdditionalCostSummary_DIVISIONNAME = 'All';\r\n          }else if( this._reportFilterService.AdditionalCostSummaryObj.AdditionalCostSummary_DIV && this._reportFilterService.AdditionalCostSummaryObj.AdditionalCostSummary_DIV!= '%'){\r\n            let abc = this.division.filter(x=>x.INITIAL == this._reportFilterService.AdditionalCostSummaryObj.AdditionalCostSummary_DIV);\r\n              if(abc && abc.length>0 && abc[0]){\r\n                this._reportFilterService.AdditionalCostSummaryObj.AdditionalCostSummary_DIVISIONNAME = abc[0].NAME;\r\n              }else{\r\n                this._reportFilterService.AdditionalCostSummaryObj.AdditionalCostSummary_DIVISIONNAME = '';\r\n              }\r\n          }else{\r\n            this._reportFilterService.AdditionalCostSummaryObj.AdditionalCostSummary_DIVISIONNAME = '';\r\n          }\r\n\r\n        if(res == \"ok\"){\r\n        this._reportFilterService.AdditionalCostSummaryObj.assignPrevioiusDate = true;\r\n        let routepaths = this.arouter.url.split('/');\r\n        let activeurlpath2;\r\n              if(routepaths&& routepaths.length){\r\n                activeurlpath2=routepaths[routepaths.length-1]\r\n              }\r\n\r\n              if(this._reportFilterService.AdditionalCostSummary_loadedTimes == 0){\r\n                this._reportFilterService.previouslyLoadedReportList.push(\r\n                    {reportname: 'Additional Cost Voucherwise Report',\r\n                    activeurlpath: this.arouter.url,\r\n                    activerurlpath2: activeurlpath2,\r\n                    instanceWiseRepName:this.instanceWiseRepName +this._reportFilterService.AdditionalCostSummary_loadedTimes,\r\n                });\r\n            }else{\r\n                this._reportFilterService.previouslyLoadedReportList.push(\r\n                    {reportname: 'Additional Cost Voucherwise Report'+'_'+this._reportFilterService.AdditionalCostSummary_loadedTimes,\r\n                    activeurlpath: this.arouter.url,\r\n                    activerurlpath2: activeurlpath2,\r\n                    instanceWiseRepName:this.instanceWiseRepName +this._reportFilterService.AdditionalCostSummary_loadedTimes,\r\n                });\r\n            }\r\n        \r\n        }\r\n\r\n        if(this._reportFilterService.AdditionalCostSummaryObj.AdditionalCostSummary_COSTCENTERNAME == \"\") this._reportFilterService.AdditionalCostSummaryObj.AdditionalCostSummary_CCID = '%';\r\n\r\n        this.reportdataEmit.emit({ status: res, data: {reportname:this.multipleReportFormateName, \r\n            REPORTDISPLAYNAME : 'Additional Cost Voucherwise Report',\r\n            instanceWiseRepName:this.instanceWiseRepName+this._reportFilterService.AdditionalCostSummary_loadedTimes, \r\n            reportparam:{\r\n            DIVISION: this._reportFilterService.AdditionalCostSummaryObj.AdditionalCostSummary_DIV,\r\n            PHISCALID: this.masterService.PhiscalObj.PhiscalID,\r\n            COMID:this.ReportParameters.COMID,\r\n            DATE1: this._reportFilterService.AdditionalCostSummaryObj.AdditionalCostSummary_DATE1,\r\n            DATE2: this._reportFilterService.AdditionalCostSummaryObj.AdditionalCostSummary_DATE2,\r\n            BSDATE1: this._reportFilterService.AdditionalCostSummaryObj.AdditionalCostSummary_BSDATE1,\r\n            BSDATE2: this._reportFilterService.AdditionalCostSummaryObj.AdditionalCostSummary_BSDATE2,\r\n            VOUCHER: this._reportFilterService.AdditionalCostSummaryObj.AdditionalCostSummary_VOUCHERNO?this._reportFilterService.AdditionalCostSummaryObj.AdditionalCostSummary_VOUCHERNO:'%',\r\n            ACID: this._reportFilterService.AdditionalCostSummaryObj.AdditionalCostSummary_ACID?this._reportFilterService.AdditionalCostSummaryObj.AdditionalCostSummary_ACID:'%',\r\n            ACCNAME: this._reportFilterService.AdditionalCostSummaryObj.AdditionalCostSummary_ACNAME?this._reportFilterService.AdditionalCostSummaryObj.AdditionalCostSummary_ACNAME:'%',\r\n            SUMMARYREPORT: this._reportFilterService.AdditionalCostSummaryObj.AdditionalCostSummary_ISSUMMARY,\r\n            DIVISIONNAME : this._reportFilterService.AdditionalCostSummaryObj.AdditionalCostSummary_DIVISIONNAME ? this._reportFilterService.AdditionalCostSummaryObj.AdditionalCostSummary_DIVISIONNAME : '',\r\n            SUMMARYREPORTDISPLAYNAME:this._reportFilterService.AdditionalCostSummaryObj.AdditionalCostSummary_SUMMARYREPORTDISPLAYNAME?this._reportFilterService.AdditionalCostSummaryObj.AdditionalCostSummary_SUMMARYREPORTDISPLAYNAME:'',\r\n            SUPPLIERDISPLAYNAME: this._reportFilterService.AdditionalCostSummaryObj.AdditionalCostSummary_ACNAME?this._reportFilterService.AdditionalCostSummaryObj.AdditionalCostSummary_ACNAME:'',\r\n            CCID:this._reportFilterService.AdditionalCostSummaryObj.AdditionalCostSummary_CCID?this._reportFilterService.AdditionalCostSummaryObj.AdditionalCostSummary_CCID:'%'\r\n\r\n\r\n\r\n        } }});\r\n\r\n        if(res == \"ok\"){\r\n            this._reportFilterService.AdditionalCostSummary_loadedTimes = this._reportFilterService.AdditionalCostSummary_loadedTimes+1;\r\n        }\r\n    }\r\n\r\n    changestartDate(value, format: string) {\r\n            var adbs = require(\"ad-bs-converter\");\r\n            if (format == \"AD\") {\r\n                var adDate = (value.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n                var bsDate = adbs.ad2bs(adDate);\r\n                this._reportFilterService.AdditionalCostSummaryObj.AdditionalCostSummary_BSDATE1 = this.masterService.toBSDate(value);\r\n            }\r\n            else if (format == \"BS\") {\r\n                var datearr = value.split('/');\r\n                const bsDate = datearr[2]+\"/\"+datearr[1]+\"/\"+datearr[0];\r\n                // var bsDate = (value.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n                var adDate = adbs.bs2ad(bsDate);\r\n                var Engdate = this.masterService.toADDate(value);\r\n            const Validatedata = this.masterService.ValidateNepaliDate(Engdate)\r\n            if(Validatedata == true){\r\n              const bsDate1 = datearr[2]+\"/\"+datearr[1]+\"/\"+datearr[0];\r\n              var adDate1 = adbs.bs2ad(bsDate1);\r\n              this._reportFilterService.AdditionalCostSummaryObj.AdditionalCostSummary_DATE1 = this.masterService.toADDate(value);\r\n            }else{\r\n                this.alertService.error(\"Cannot Change the date\");\r\n              return;\r\n            } \r\n                // this._reportFilterService.AdditionalCostSummaryObj.AdditionalCostSummary_DATE1 = this.masterService.toBSDate(value);\r\n            }\r\n    }\r\n\r\n    changeEndDate(value, format: string) {\r\n        try{\r\n            var adbs = require(\"ad-bs-converter\");\r\n            if (format == \"AD\") {\r\n                var adDate = (value.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n                var bsDate = adbs.ad2bs(adDate);\r\n                this._reportFilterService.AdditionalCostSummaryObj.AdditionalCostSummary_BSDATE2 =this.masterService.toBSDate(value);\r\n            }\r\n            else if (format == \"BS\") {\r\n                var datearr = value.split('/');\r\n                const bsDate = datearr[2]+\"/\"+datearr[1]+\"/\"+datearr[0];\r\n                // var bsDate = (value.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n                var adDate = adbs.bs2ad(bsDate);\r\n                var Engdate = this.masterService.toADDate(value);\r\n                const Validatedata = this.masterService.ValidateNepaliDate(Engdate)\r\n                if(Validatedata == true){\r\n                  const bsDate1 = datearr[2]+\"/\"+datearr[1]+\"/\"+datearr[0];\r\n                  var adDate1 = adbs.bs2ad(bsDate1);\r\n                  this._reportFilterService.AdditionalCostSummaryObj.AdditionalCostSummary_DATE2  = this.masterService.toADDate(value);\r\n                }else{\r\n                    this.alertService.error(\"Cannot Change the date\");\r\n                  return;\r\n                }\r\n                // this._reportFilterService.AdditionalCostSummaryObj.AdditionalCostSummary_DATE2 = this.masterService.toBSDate(value);\r\n            }\r\n        }\r\n          catch(e){}\r\n    }\r\n\r\n    VoucherNoEnterClicked() {\r\n        this.gridPopupSettingsForVoucherList = this.masterService.getGenericGridPopUpSettings('PIVoucherListForAdditionalCostReport');\r\n        this.genericGridVoucherNo.show();\r\n    }\r\n\r\n    dblClickVoucherSelect(voucher) {\r\n        this._reportFilterService.AdditionalCostSummaryObj.AdditionalCostSummary_VOUCHERNO = voucher.VCHRNO;\r\n    }\r\n\r\n    AccountEnterClicked() {\r\n        this.gridPopupSettingsForAccountList = {\r\n            title: \"Accounts\",\r\n            apiEndpoints: `/getAccountPagedListByMapId/Master/SupplierListForReport`,\r\n            defaultFilterIndex: 1,\r\n            columns: [\r\n                {\r\n                    key: \"ACID\",\r\n                    title: \"ACID\",\r\n                    hidden: false,\r\n                    noSearch: false\r\n                },\r\n              {\r\n                key: \"ACNAME\",\r\n                title: \"A/C NAME\",\r\n                hidden: false,\r\n                noSearch: false\r\n              }\r\n            ]\r\n          };\r\n        this.genericGridAccount.show();\r\n    }\r\n\r\n    dblClickAccountSelect(supplier) {\r\n        this._reportFilterService.AdditionalCostSummaryObj.AdditionalCostSummary_ACID = supplier.ACID;\r\n        this._reportFilterService.AdditionalCostSummaryObj.AdditionalCostSummary_ACNAME = supplier.ACNAME;\r\n    }\r\n\r\n    showCostCenterGroupList(i) {\r\n      this.gridCostCenterGroupListPopupSettings = {\r\n        title: \"Cost Centers Categories\",\r\n        apiEndpoints: `/getCostCenterGroupPagedList`,\r\n        defaultFilterIndex: 0,\r\n        columns: [\r\n          {\r\n            key: \"ccgid\",\r\n            title: \"ID\",\r\n            hidden: false,\r\n            noSearch: false\r\n          },\r\n          {\r\n            key: \"COSTCENTERGROUPNAME\",\r\n            title: \"Cost Center Category Name\",\r\n            hidden: false,\r\n            noSearch: false\r\n          },\r\n  \r\n        ]\r\n      };\r\n      this.genericGridCostCenterGroupList.show();\r\n    }\r\n\r\n    onCostCenterGroupSelect(category) {\r\n      let ccgid = category.ccgid;\r\n      this.showCostCenterList(ccgid);\r\n    }\r\n\r\n    showCostCenterList(ccgid:string) {\r\n      this.gridCostCenterListPopupSettings = {\r\n        title: \"Cost Centers\",\r\n        apiEndpoints: `/getCostCenterPagedListAccordingToId/${ccgid}`,\r\n        defaultFilterIndex: 0,\r\n        columns: [\r\n          {\r\n            key: \"COSTCENTERNAME\",\r\n            title: \"Cost Center Name\",\r\n            hidden: false,\r\n            noSearch: false\r\n          }\r\n        ]\r\n      };\r\n  \r\n      this.genericGridCostCenterList.show();\r\n  \r\n    }\r\n\r\n    onCostCenterSelect(costcenter){\r\n      this._reportFilterService.AdditionalCostSummaryObj.AdditionalCostSummary_COSTCENTERNAME = costcenter.COSTCENTERNAME;\r\n      this._reportFilterService.AdditionalCostSummaryObj.AdditionalCostSummary_CCID = costcenter.CCID;\r\n\r\n    }\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/pages/ReportDialogs/AdditionalCost-Voucherwise-Report/additionalcost-voucherwise-report.component.ts","import { Component, Inject, Output, EventEmitter, OnInit } from '@angular/core';\r\nimport { MdDialogRef, MD_DIALOG_DATA } from '@angular/material';\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { MasterRepo } from '../../../common/repositories';\r\nimport { Division } from '../../../common/interfaces';\r\nimport { AuthService } from '../../../common/services/permission/authService.service';\r\nimport { ReportMainService } from '../../Reports/components/ReportMain/ReportMain.service';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { AlertService } from '../../../common/services/alert/alert.service';\r\n\r\nexport interface DialogInfo {\r\n    header: string;\r\n    message: Observable<string>;\r\n}\r\n\r\n@Component({\r\n    selector: 'balancesheet-report',\r\n    template: require('./balance-sheet-report.component.html'),\r\n    styles: [require('../../Reports/reportStyle.css'), require('../../modal-style.css')],\r\n})\r\n\r\nexport class BalanceSheetReport implements OnInit {\r\n    division: any[] = [];\r\n    userProfile: any;\r\n    date1: any;\r\n    date2: any;\r\n    instanceWiseRepName: string = 'Balance Sheet Report';\r\n    userSetting: any;\r\n    CostcenterList: any[] = [];\r\n\r\n    @Output() reportdataEmit = new EventEmitter();\r\n    constructor(private masterService: MasterRepo, private _authService: AuthService,\r\n        private _reportFilterService: ReportMainService, private arouter: Router, private alertService: AlertService,\r\n        public dialogref: MdDialogRef<BalanceSheetReport>, public _ActivatedRoute: ActivatedRoute,\r\n        @Inject(MD_DIALOG_DATA) public data: DialogInfo) {\r\n        this.userProfile = this._authService.getUserProfile();\r\n        this.userSetting = _authService.getSetting();\r\n        this.division = [];\r\n        if (this.masterService.userSetting.userwisedivision == 1) {\r\n            this.masterService.getDivisionFromRightPrivelege().subscribe(res => {\r\n                if (res.status == 'ok') {\r\n                    this.division = res.result;\r\n                }\r\n            })\r\n        }\r\n        else {\r\n            this.masterService.getAllDivisions()\r\n                .subscribe(res => {\r\n                    this.division.push(<Division>res);\r\n                }, error => {\r\n                    this.masterService.resolveError(error, \"divisions - getDivisions\");\r\n                });\r\n        }\r\n\r\n        this.masterService.getCostcenter().subscribe(res => {\r\n            this.CostcenterList = res;\r\n        })\r\n\r\n        // this.masterService.getAccDivList();\r\n\r\n    }\r\n\r\n    ngOnInit() {\r\n        this._ActivatedRoute.queryParams.subscribe(params => {\r\n            if (this._reportFilterService.BalanceSheetObj.assignPrevioiusDate != true) {\r\n                this.masterService.getAccDivList();\r\n                this._reportFilterService.BalanceSheetObj.BalanceSheet_DATE1 = this.masterService.PhiscalObj.BeginDate.split('T')[0];\r\n                if (this.userProfile.CompanyInfo.ActualFY == this.masterService.PhiscalObj.PhiscalID) {\r\n                    this._reportFilterService.BalanceSheetObj.BalanceSheet_DATE2  = new Date().toJSON().split('T')[0];\r\n                  }\r\n                  else {\r\n                    this._reportFilterService.BalanceSheetObj.BalanceSheet_DATE2 = this.masterService.PhiscalObj.EndDate.split('T')[0];\r\n                }\r\n               \r\n                this.masterService.viewDivision.subscribe(() => {\r\n                    if(this.masterService.userSetting.userwisedivision==0 ||  this.masterService.showAll == true){ //ALL OPTION SELECTION IN DIVISION IN REPORT DIALOG BOX\r\n                      this._reportFilterService.BalanceSheetObj.BalanceSheet_DIV='%';\r\n                  }else{\r\n                    if(this.masterService.userSetting.userwisedivision==1 && this.division.length ==1){\r\n                        this._reportFilterService.BalanceSheetObj.BalanceSheet_DIV=this.division[0].INITIAL;\r\n                      }else{\r\n                        this._reportFilterService.BalanceSheetObj.BalanceSheet_DIV=this.masterService.userProfile.CompanyInfo.INITIAL;\r\n                    }\r\n                }\r\n                  })\r\n                this._reportFilterService.BalanceSheetObj.BalanceSheet_VERTICALFORMAT = '1';\r\n                // this._reportFilterService.BalanceSheetObj.BalanceSheet_OSTOCK = 0;\r\n                // this._reportFilterService.BalanceSheetObj.BalanceSheet_CSTOCK = 0;\r\n                this._reportFilterService.BalanceSheetObj.BalanceSheet_SHOWSUBLEDGER = 0;\r\n                this._reportFilterService.BalanceSheetObj.BalanceSheet_SHOWDEBTORSCREDITORS = 0;\r\n                if (this.userSetting.IS_NESTLE == 1) {\r\n                    this._reportFilterService.BalanceSheetObj.BalanceSheet_COMPANYTYPE = 'DMS';\r\n                } else {\r\n                    this._reportFilterService.BalanceSheetObj.BalanceSheet_COMPANYTYPE = 'NONDMS';\r\n                }\r\n                this._reportFilterService.BalanceSheetObj.BalanceSheet_CostCenter = '%';\r\n            }\r\n\r\n            if (params.instancename) {\r\n                // ////console.log(\"@@[plreport0]\",params.instancename,this._reportFilterService.reportDataStore[params.instancename].param.reportparam)\r\n                this._reportFilterService.BalanceSheetObj.BalanceSheet_DATE1 = this._reportFilterService.reportDataStore[params.instancename].param.reportparam.DATE1;\r\n                this._reportFilterService.BalanceSheetObj.BalanceSheet_DATE2 = this._reportFilterService.reportDataStore[params.instancename].param.reportparam.DATE2;\r\n                this._reportFilterService.BalanceSheetObj.BalanceSheet_DIV = this._reportFilterService.reportDataStore[params.instancename].param.reportparam.DIV;\r\n                this._reportFilterService.BalanceSheetObj.BalanceSheet_SHOWSUBLEDGER = this._reportFilterService.reportDataStore[params.instancename].param.reportparam.SHOWSUBLEDGER;\r\n                this._reportFilterService.BalanceSheetObj.BalanceSheet_VERTICALFORMAT = this._reportFilterService.reportDataStore[params.instancename].param.reportparam.VERTICALFORMAT;\r\n                this._reportFilterService.BalanceSheetObj.BalanceSheet_OSTOCK = this._reportFilterService.reportDataStore[params.instancename].param.reportparam.OSTOCK;\r\n                this._reportFilterService.BalanceSheetObj.BalanceSheet_CSTOCK = this._reportFilterService.reportDataStore[params.instancename].param.reportparam.CSTOCK;\r\n                this._reportFilterService.BalanceSheetObj.BalanceSheet_SHOWDEBTORSCREDITORS = this._reportFilterService.reportDataStore[params.instancename].param.reportparam.SHOWDEBTORSCREDITORS;\r\n                if (this.userSetting.IS_NESTLE == 1) {\r\n                    this._reportFilterService.BalanceSheetObj.BalanceSheet_COMPANYTYPE = 'DMS';\r\n                } else {\r\n                    this._reportFilterService.BalanceSheetObj.BalanceSheet_COMPANYTYPE = 'NONDMS';\r\n                }\r\n                this._reportFilterService.BalanceSheetObj.BalanceSheet_CostCenter=this._reportFilterService.reportDataStore[params.instancename].param.reportparam.COSTCENTER;\r\n            }\r\n        })\r\n\r\n        // this.calcStock();\r\n        this.changeEntryDate(this._reportFilterService.BalanceSheetObj.BalanceSheet_DATE1, \"AD\");\r\n        this.changeEndDate(this._reportFilterService.BalanceSheetObj.BalanceSheet_DATE2, \"AD\");\r\n\r\n    }\r\n\r\n    changeEntryDate(value, format: string) {\r\n        var adbs = require(\"ad-bs-converter\");\r\n        if (format == \"AD\") {\r\n            var adDate = (value.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n            var bsDate = adbs.ad2bs(adDate);\r\n            this._reportFilterService.BalanceSheetObj.BalanceSheet_BSDATE1 = this.masterService.toADDate(value);\r\n        }\r\n        else if (format == \"BS\") {\r\n            var datearr = value.split('/');\r\n            const bsDate = datearr[2] + \"/\" + datearr[1] + \"/\" + datearr[0]\r\n            var adDate = adbs.bs2ad(bsDate);\r\n            var Engdate = this.masterService.toADDate(value);\r\n            const Validatedata = this.masterService.ValidateNepaliDate(Engdate)\r\n            if (Validatedata == true) {\r\n                const bsDate1 = datearr[2] + \"/\" + datearr[1] + \"/\" + datearr[0];\r\n                var adDate1 = adbs.bs2ad(bsDate1);\r\n                this._reportFilterService.BalanceSheetObj.BalanceSheet_DATE1 = this.masterService.toADDate(value);\r\n            } else {\r\n                this.alertService.error(\"Cannot Change the date\");\r\n                return;\r\n            }\r\n        }\r\n    }\r\n\r\n    changeEndDate(value, format: string) {\r\n        var adbs = require(\"ad-bs-converter\");\r\n        if (format == \"AD\") {\r\n            var adDate = (value.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n            var bsDate = adbs.ad2bs(adDate);\r\n            this._reportFilterService.BalanceSheetObj.BalanceSheet_BSDATE2 = this.masterService.toBSDate(value);\r\n        }\r\n        else if (format == \"BS\") {\r\n            var datearr = value.split('/');\r\n            const bsDate = datearr[2] + \"/\" + datearr[1] + \"/\" + datearr[0]\r\n            var adDate = adbs.bs2ad(bsDate);\r\n            this._reportFilterService.BalanceSheetObj.BalanceSheet_DATE2 = this.masterService.toADDate(value);\r\n        }\r\n    }\r\n\r\n    onload() {\r\n        this.DialogClosedResult(\"ok\");\r\n    }\r\n\r\n    closeReportBox() {\r\n        this.DialogClosedResult(\"Error!\");\r\n    }\r\n\r\n    public DialogClosedResult(res) {\r\n        //console.log(\"BalanceSheet_STOCK\",this._reportFilterService.BalanceSheetObj.BalanceSheet_OSTOCK,this._reportFilterService.BalanceSheetObj.BalanceSheet_CSTOCK)\r\n        // if (this._reportFilterService.BalanceSheetObj.BalanceSheet_OSTOCK === '' || this._reportFilterService.BalanceSheetObj.BalanceSheet_OSTOCK === null ||\r\n        //     this._reportFilterService.BalanceSheetObj.BalanceSheet_OSTOCK === undefined || this._reportFilterService.BalanceSheetObj.BalanceSheet_CSTOCK === '' || this._reportFilterService.BalanceSheetObj.BalanceSheet_CSTOCK === null ||\r\n        //     this._reportFilterService.BalanceSheetObj.BalanceSheet_CSTOCK === undefined) {\r\n        //     this.alertService.info(\"Please Calculate Stock!!\");\r\n        //     return;\r\n        // }\r\n        let multipleReportFormateName = 'Balance Sheet Report';\r\n        if (this._reportFilterService.BalanceSheetObj.BalanceSheet_VERTICALFORMAT == 1) {\r\n            multipleReportFormateName = 'Balance Sheet Report';\r\n        } else if (this._reportFilterService.BalanceSheetObj.BalanceSheet_VERTICALFORMAT == 0) {\r\n            multipleReportFormateName = 'BALANCESHEET';\r\n        }\r\n\r\n        if (this._reportFilterService.BalanceSheetObj.BalanceSheet_DIV && this._reportFilterService.BalanceSheetObj.BalanceSheet_DIV == '%') {\r\n            this._reportFilterService.BalanceSheetObj.BalanceSheet_DIVISIONNAME = 'All';\r\n        } else if (this._reportFilterService.BalanceSheetObj.BalanceSheet_DIV && this._reportFilterService.BalanceSheetObj.BalanceSheet_DIV != '%') {\r\n            let abc = this.division.filter(x => x.INITIAL == this._reportFilterService.BalanceSheetObj.BalanceSheet_DIV);\r\n            if (abc && abc.length > 0 && abc[0]) {\r\n                this._reportFilterService.BalanceSheetObj.BalanceSheet_DIVISIONNAME = abc[0].NAME;\r\n            } else {\r\n                this._reportFilterService.BalanceSheetObj.BalanceSheet_DIVISIONNAME = '';\r\n            }\r\n        } else {\r\n            this._reportFilterService.BalanceSheetObj.BalanceSheet_DIVISIONNAME = '';\r\n        }\r\n\r\n        if (this._reportFilterService.BalanceSheetObj.BalanceSheet_CostCenter && this._reportFilterService.BalanceSheetObj.BalanceSheet_CostCenter == '%') {\r\n            this._reportFilterService.BalanceSheetObj.BalanceSheet_COSTCENTERDISPLAYNAME = 'All';\r\n        } else if (this._reportFilterService.BalanceSheetObj.BalanceSheet_CostCenter != '%') {\r\n            let abc = this.CostcenterList.filter(x => x.CCID == this._reportFilterService.BalanceSheetObj.BalanceSheet_CostCenter);\r\n            if (abc && abc.length > 0 && abc[0]) {\r\n                this._reportFilterService.BalanceSheetObj.BalanceSheet_COSTCENTERDISPLAYNAME = abc[0].COSTCENTERNAME;\r\n            } else {\r\n                this._reportFilterService.BalanceSheetObj.BalanceSheet_COSTCENTERDISPLAYNAME = '';\r\n            }\r\n        } else {\r\n            this._reportFilterService.BalanceSheetObj.BalanceSheet_COSTCENTERDISPLAYNAME = '';\r\n        }\r\n\r\n        if (res == \"ok\") {\r\n            this._reportFilterService.BalanceSheetObj.assignPrevioiusDate = true;\r\n            let routepaths = this.arouter.url.split('/');\r\n            let activeurlpath2;\r\n            if (routepaths && routepaths.length) {\r\n                activeurlpath2 = routepaths[routepaths.length - 1]\r\n            }\r\n\r\n            if (this._reportFilterService.BalanceSheet_loadedTimes == 0) {\r\n                this._reportFilterService.previouslyLoadedReportList.push(\r\n                    {\r\n                        reportname: 'Balance Sheet Report',\r\n                        activeurlpath: this.arouter.url,\r\n                        activerurlpath2: activeurlpath2,\r\n                        instanceWiseRepName: this.instanceWiseRepName + this._reportFilterService.BalanceSheet_loadedTimes,\r\n                    });\r\n            } else {\r\n                this._reportFilterService.previouslyLoadedReportList.push(\r\n                    {\r\n                        reportname: 'Balance Sheet Report' + '_' + this._reportFilterService.BalanceSheet_loadedTimes,\r\n                        activeurlpath: this.arouter.url,\r\n                        activerurlpath2: activeurlpath2,\r\n                        instanceWiseRepName: this.instanceWiseRepName + this._reportFilterService.BalanceSheet_loadedTimes,\r\n                    });\r\n            }\r\n\r\n        }\r\n\r\n        this.reportdataEmit.emit({\r\n            status: res, data: {\r\n                REPORTDISPLAYNAME: 'Balance Sheet Report',\r\n                reportname: multipleReportFormateName,\r\n                instanceWiseRepName: this.instanceWiseRepName + this._reportFilterService.BalanceSheet_loadedTimes,\r\n                reportparam: {\r\n                    DATE1: this._reportFilterService.BalanceSheetObj.BalanceSheet_DATE1,\r\n                    DATE2: this._reportFilterService.BalanceSheetObj.BalanceSheet_DATE2,\r\n                    BSDATE1: this._reportFilterService.BalanceSheetObj.BalanceSheet_BSDATE1,\r\n                    BSDATE2: this._reportFilterService.BalanceSheetObj.BalanceSheet_BSDATE2,\r\n                    DIV: this._reportFilterService.BalanceSheetObj.BalanceSheet_DIV ? this._reportFilterService.BalanceSheetObj.BalanceSheet_DIV : '%',\r\n                    PHISCALID: this.masterService.PhiscalObj.PhiscalID,\r\n                    CID: this.masterService.userProfile.CompanyInfo.COMPANYID,\r\n                    SHOWSUBLEDGER: this._reportFilterService.BalanceSheetObj.BalanceSheet_SHOWSUBLEDGER ? this._reportFilterService.BalanceSheetObj.BalanceSheet_SHOWSUBLEDGER : 0,\r\n                    COMPANYID: this.masterService.userProfile.CompanyInfo.COMPANYID,\r\n                    COMPANYTYPE: this._reportFilterService.BalanceSheetObj.BalanceSheet_COMPANYTYPE ? this._reportFilterService.BalanceSheetObj.BalanceSheet_COMPANYTYPE : 'NONDMS',\r\n                    OSTOCK: this._reportFilterService.BalanceSheetObj.BalanceSheet_OSTOCK?this._reportFilterService.BalanceSheetObj.BalanceSheet_OSTOCK:0,\r\n                    CSTOCK: this._reportFilterService.BalanceSheetObj.BalanceSheet_CSTOCK ?this._reportFilterService.BalanceSheetObj.BalanceSheet_CSTOCK:0,\r\n                    SUMMARY: 0,\r\n                    LEV: 100,\r\n                    VERTICALFORMAT: this._reportFilterService.BalanceSheetObj.BalanceSheet_VERTICALFORMAT ? this._reportFilterService.BalanceSheetObj.BalanceSheet_VERTICALFORMAT : 1,\r\n                    DIVISIONNAME: this._reportFilterService.BalanceSheetObj.BalanceSheet_DIVISIONNAME ? this._reportFilterService.BalanceSheetObj.BalanceSheet_DIVISIONNAME : '',\r\n                    SHOWDEBTORSCREDITORS: this._reportFilterService.BalanceSheetObj.BalanceSheet_SHOWDEBTORSCREDITORS ? this._reportFilterService.BalanceSheetObj.BalanceSheet_SHOWDEBTORSCREDITORS :0,\r\n                    COSTCENTER: this._reportFilterService.BalanceSheetObj.BalanceSheet_CostCenter ? this._reportFilterService.BalanceSheetObj.BalanceSheet_CostCenter : '%',\r\n                    COSTCENTERDISPLAYNAME: this._reportFilterService.BalanceSheetObj.BalanceSheet_COSTCENTERDISPLAYNAME ? this._reportFilterService.BalanceSheetObj.BalanceSheet_COSTCENTERDISPLAYNAME : '',\r\n                }\r\n            }\r\n        });\r\n\r\n        if (res == \"ok\") {\r\n            this._reportFilterService.BalanceSheet_loadedTimes = this._reportFilterService.BalanceSheet_loadedTimes + 1;\r\n        }\r\n    }\r\n\r\n    calcStock() {\r\n        let reportparam: any = {};\r\n        reportparam.DATE1 = this._reportFilterService.BalanceSheetObj.BalanceSheet_DATE1;\r\n        reportparam.DATE2 = this._reportFilterService.BalanceSheetObj.BalanceSheet_DATE2;\r\n        reportparam.DIV = this._reportFilterService.BalanceSheetObj.BalanceSheet_DIV;\r\n        reportparam.COMPANYTYPE = this._reportFilterService.BalanceSheetObj.BalanceSheet_COMPANYTYPE;\r\n        reportparam.PHISCALID = this.masterService.PhiscalObj.PhiscalID;\r\n\r\n        this._reportFilterService.BalanceSheetObj.BalanceSheet_OSTOCK = 0;\r\n        this._reportFilterService.BalanceSheetObj.BalanceSheet_CSTOCK = 0;\r\n\r\n        this._reportFilterService.stockCalculation(reportparam).subscribe((res) => {\r\n            this._reportFilterService.BalanceSheetObj.BalanceSheet_OSTOCK = res.result;\r\n            this._reportFilterService.BalanceSheetObj.BalanceSheet_CSTOCK = res.result2;\r\n        })\r\n    }\r\n\r\n    changeDivision() {\r\n        this._reportFilterService.BalanceSheetObj.BalanceSheet_OSTOCK = 0;\r\n        this._reportFilterService.BalanceSheetObj.BalanceSheet_CSTOCK = 0;\r\n    }\r\n\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/pages/ReportDialogs/BalanceSheetReport/balance-sheet-report.component.ts","import { Component, Output, EventEmitter, ViewChild } from '@angular/core';\r\nimport { MasterRepo } from '../../../common/repositories';\r\nimport { Division } from '../../../common/interfaces';\r\nimport { AuthService } from '../../../common/services/permission/authService.service';\r\nimport { PLedgerComponent } from '../../masters/components/PLedger/PLedger.component';\r\nimport { AlertService } from '../../../common/services/alert/alert.service';\r\nimport { ReportMainService } from '../../Reports/components/ReportMain/ReportMain.service';\r\nimport { GenericPopUpComponent, GenericPopUpSettings } from '../../../common/popupLists/generic-grid/generic-popup-grid.component';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ReportFilterService } from '../../../common/popupLists/report-filter/report-filter.service';\r\n\r\n@Component({\r\n    selector: 'billtracking-report-selector',\r\n    template: require('./billtracking-report.component.html'),\r\n    styles: [require('../../modal-style.css'), require('../../Reports/reportStyle.css')],\r\n})\r\nexport class BillTrackingReport {\r\n    reportNameFormatWise: string;\r\n    userProfile: any;\r\n    division: any[] = [];\r\n    CostcenterList: any[] = [];\r\n    instanceWiseRepName: string = 'Debtors Bill Tracking Report';\r\n    REPORTDISPLAYNAME: string;\r\n\r\n    @ViewChild(\"PLedgerChild\") PLedgerChild: PLedgerComponent;\r\n    @Output() reportdataEmit = new EventEmitter();\r\n    @ViewChild(\"genericGridPartyLedger\") genericGridPartyLedger: GenericPopUpComponent;\r\n    gridPopupSettingsForPartyLedgerList: GenericPopUpSettings = new GenericPopUpSettings();\r\n\r\n    constructor(public masterService: MasterRepo,\r\n        private alertService: AlertService,\r\n        private _reportFilterService: ReportMainService,\r\n        private _authService: AuthService, private arouter: Router, public _ActivatedRoute: ActivatedRoute,\r\n        public reportService: ReportFilterService,\r\n    ) {\r\n\r\n        this.reportNameFormatWise = 'Debtors Bill Tracking Report';\r\n        this.userProfile = this._authService.getUserProfile();\r\n\r\n        this.division = [];\r\n        if (this.masterService.userSetting.userwisedivision == 1) {\r\n            this.masterService.getDivisionFromRightPrivelege().subscribe(res => {\r\n                if (res.status == 'ok') {\r\n                    this.division = res.result;\r\n                }\r\n            })\r\n        }\r\n        else {\r\n            this.masterService.getAllDivisions()\r\n                .subscribe(res => {\r\n                    this.division.push(<Division>res);\r\n                }, error => {\r\n                    this.masterService.resolveError(error, \"divisions - getDivisions\");\r\n                });\r\n        }\r\n\r\n        this.masterService.getCostcenter().subscribe(res => {\r\n            this.CostcenterList = res;\r\n        })\r\n        // this.masterService.getAccDivList();\r\n    }\r\n\r\n    ngOnInit() {\r\n        this._ActivatedRoute.queryParams.subscribe(params => {\r\n            const mode = params.mode;\r\n            // //console.log(\"@@this.reportService.drillParam.reportname\",this.reportService.drillParam.reportname)\r\n            if (mode == \"DRILL\" && this.reportService.drillParam.returnUrl && this.reportService.drillParam.reportname.startsWith('Debtors Bill Tracking Report') && this._reportFilterService.BillTrackingObj.assignPrevioiusDate != true) {\r\n            this._reportFilterService.BillTrackingObj.BillTracking_DATE1=this.reportService.drillParam.reportparam.DATE1;\r\n            this._reportFilterService.BillTrackingObj.BillTracking_DATE2=this.reportService.drillParam.reportparam.DATE2;\r\n            this._reportFilterService.BillTrackingObj.BillTracking_DIV=this.reportService.drillParam.reportparam.DIV;\r\n            this._reportFilterService.BillTrackingObj.BillTracking_CostCenter=this.reportService.drillParam.reportparam.COSTCENTER;\r\n            this._reportFilterService.BillTrackingObj.BillTracking_Detail= '1';\r\n            this._reportFilterService.BillTrackingObj.BillTracking_ACID= this.reportService.drillParam.reportparam.ACID;\r\n            this._reportFilterService.BillTrackingObj.BillTracking_ACCNAME= this.reportService.drillParam.reportparam.ACNAME;\r\n            }else{\r\n                if (this._reportFilterService.BillTrackingObj.assignPrevioiusDate != true) {\r\n                    this.masterService.getAccDivList();\r\n                    // this._reportFilterService.BillTrackingObj.BillTracking_DATE1 = this.masterService.PhiscalObj.BeginDate.split('T')[0];\r\n                    this._reportFilterService.BillTrackingObj.BillTracking_DATE1 = new Date().toJSON().split('T')[0];\r\n                    if (this.userProfile.CompanyInfo.ActualFY == this.masterService.PhiscalObj.PhiscalID) {\r\n                        this._reportFilterService.BillTrackingObj.BillTracking_DATE2 = new Date().toJSON().split('T')[0];\r\n                        this.changeEndDate(this._reportFilterService.BillTrackingObj.BillTracking_DATE2, \"AD\");\r\n                    }\r\n                    else {\r\n        \r\n                        this._reportFilterService.BillTrackingObj.BillTracking_DATE2 = this.masterService.PhiscalObj.EndDate.split('T')[0];\r\n                        this.changeEndDate(this._reportFilterService.BillTrackingObj.BillTracking_DATE2, \"AD\");\r\n                    }\r\n                    // this._reportFilterService.BillTrackingObj.BillTracking_DIV = this.masterService.userProfile.CompanyInfo.INITIAL;\r\n                    this.masterService.viewDivision.subscribe(() => {\r\n                        if(this.masterService.userSetting.userwisedivision==0 ||  this.masterService.showAll == true){ //ALL OPTION SELECTION IN DIVISION IN REPORT DIALOG BOX\r\n                          this._reportFilterService.BillTrackingObj.BillTracking_DIV='%';\r\n                      }else{\r\n                        if(this.masterService.userSetting.userwisedivision==1 && this.division.length ==1){\r\n                            this._reportFilterService.BillTrackingObj.BillTracking_DIV=this.division[0].INITIAL;\r\n                          }else{\r\n                            this._reportFilterService.BillTrackingObj.BillTracking_DIV=this.masterService.userProfile.CompanyInfo.INITIAL;\r\n                        }\r\n                      }\r\n                      })\r\n                    this._reportFilterService.BillTrackingObj.BillTracking_CostCenter = '%'\r\n                    this._reportFilterService.BillTrackingObj.BillTracking_VoucherType = 'PV';\r\n                    this._reportFilterService.BillTrackingObj.BillTracking_Detail= '0';\r\n        \r\n                    this.changeEntryDate(this._reportFilterService.BillTrackingObj.BillTracking_DATE1, \"AD\");\r\n                    this.changeEndDate(this._reportFilterService.BillTrackingObj.BillTracking_DATE2, \"AD\");\r\n                }\r\n\r\n                    if(params.instancename){\r\n                        this._reportFilterService.BillTrackingObj.BillTracking_DATE1=this._reportFilterService.reportDataStore[params.instancename].param.reportparam.DATE1;\r\n                        this._reportFilterService.BillTrackingObj.BillTracking_DATE2=this._reportFilterService.reportDataStore[params.instancename].param.reportparam.DATE2;\r\n                        this._reportFilterService.BillTrackingObj.BillTracking_DIV=this._reportFilterService.reportDataStore[params.instancename].param.reportparam.DIV;\r\n                        this._reportFilterService.BillTrackingObj.BillTracking_CostCenter=this._reportFilterService.reportDataStore[params.instancename].param.reportparam.COSTCENTER;\r\n                    }\r\n            }\r\n        });\r\n\r\n        this.changeEntryDate(this._reportFilterService.BillTrackingObj.BillTracking_DATE1, \"AD\");\r\n        this.changeEndDate(this._reportFilterService.BillTrackingObj.BillTracking_DATE2, \"AD\");\r\n\r\n    }\r\n\r\n    changeEntryDate(value, format: string) {\r\n        var adbs = require(\"ad-bs-converter\");\r\n        if (format == \"AD\") {\r\n            var adDate = (value.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n            var bsDate = adbs.ad2bs(adDate);\r\n            this._reportFilterService.BillTrackingObj.BillTracking_BSDATE1 = this.masterService.toBSDate(value);\r\n        }\r\n        else if (format == \"BS\") {\r\n            var datearr = value.split('/');\r\n            const bsDate = datearr[2] + \"/\" + datearr[1] + \"/\" + datearr[0];\r\n            var adDate = adbs.bs2ad(bsDate);\r\n            var Engdate = this.masterService.toADDate(value);\r\n            const Validatedata = this.masterService.ValidateNepaliDate(Engdate)\r\n            if (Validatedata == true) {\r\n                const bsDate1 = datearr[2] + \"/\" + datearr[1] + \"/\" + datearr[0];\r\n                var adDate1 = adbs.bs2ad(bsDate1);\r\n                this._reportFilterService.BillTrackingObj.BillTracking_DATE1 = this.masterService.toADDate(value);\r\n            } else {\r\n                this.alertService.error(\"Cannot Change the date\");\r\n                return;\r\n            }\r\n        }\r\n    }\r\n\r\n    changeEndDate(value, format: string) {\r\n        var adbs = require(\"ad-bs-converter\");\r\n        if (format == \"AD\") {\r\n            var adDate = (value.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n            var bsDate = adbs.ad2bs(adDate);\r\n            this._reportFilterService.BillTrackingObj.BillTracking_BSDATE2 = this.masterService.toBSDate(value);\r\n        }\r\n        else if (format == \"BS\") {\r\n            var datearr = value.split('/');\r\n            const bsDate = datearr[2] + \"/\" + datearr[1] + \"/\" + datearr[0];\r\n            var adDate = adbs.bs2ad(bsDate);\r\n            var Engdate = this.masterService.toADDate(value);\r\n            const Validatedata = this.masterService.ValidateNepaliDate(Engdate)\r\n            if (Validatedata == true) {\r\n                const bsDate1 = datearr[2] + \"/\" + datearr[1] + \"/\" + datearr[0];\r\n                var adDate1 = adbs.bs2ad(bsDate1);\r\n                this._reportFilterService.BillTrackingObj.BillTracking_DATE2 = this.masterService.toADDate(value);\r\n            } else {\r\n                this.alertService.error(\"Cannot Change the date\");\r\n                return;\r\n            }\r\n        }\r\n    }\r\n\r\n    onload() {\r\n        this.DialogClosedResult(\"ok\");\r\n    }\r\n\r\n    public DialogClosedResult(res) {\r\n\r\n        if (this._reportFilterService.BillTrackingObj.BillTracking_DIV && this._reportFilterService.BillTrackingObj.BillTracking_DIV == '%') {\r\n            this._reportFilterService.BillTrackingObj.BillTracking_DIVISIONNAME = 'All';\r\n        } else if (this._reportFilterService.BillTrackingObj.BillTracking_DIV && this._reportFilterService.BillTrackingObj.BillTracking_DIV != '%') {\r\n            let abc = this.division.filter(x => x.INITIAL == this._reportFilterService.BillTrackingObj.BillTracking_DIV);\r\n            if (abc && abc.length > 0 && abc[0]) {\r\n                this._reportFilterService.BillTrackingObj.BillTracking_DIVISIONNAME = abc[0].NAME;\r\n            } else {\r\n                this._reportFilterService.BillTrackingObj.BillTracking_DIVISIONNAME = '';\r\n            }\r\n        } else {\r\n            this._reportFilterService.BillTrackingObj.BillTracking_DIVISIONNAME = '';\r\n        }\r\n\r\n        if (this._reportFilterService.BillTrackingObj.BillTracking_CostCenter && this._reportFilterService.BillTrackingObj.BillTracking_CostCenter == '%') {\r\n            this._reportFilterService.BillTrackingObj.BillTracking_COSTCENTERDISPLAYNAME = 'All';\r\n        } else if (this._reportFilterService.BillTrackingObj.BillTracking_CostCenter != '%') {\r\n            let abc = this.CostcenterList.filter(x => x.CCID == this._reportFilterService.BillTrackingObj.BillTracking_CostCenter);\r\n            if (abc && abc.length > 0 && abc[0]) {\r\n                this._reportFilterService.BillTrackingObj.BillTracking_COSTCENTERDISPLAYNAME = abc[0].COSTCENTERNAME;\r\n            } else {\r\n                this._reportFilterService.BillTrackingObj.BillTracking_COSTCENTERDISPLAYNAME = '';\r\n            }\r\n        } else {\r\n            this._reportFilterService.BillTrackingObj.BillTracking_COSTCENTERDISPLAYNAME = '';\r\n        }\r\n\r\n        if(this._reportFilterService.BillTrackingObj.BillTracking_Detail==0){\r\n            this.reportNameFormatWise = 'Debtors Bill Tracking Report';\r\n        }else{\r\n            this.reportNameFormatWise = 'Debtors Bill Tracking Report_1';\r\n        }\r\n\r\n        if(this._reportFilterService.BillTrackingObj.BillTracking_ACCNAME==\"\"){\r\n            this._reportFilterService.BillTrackingObj.BillTracking_ACID='%';\r\n        }\r\n\r\n        if (res == \"ok\") {\r\n            this._reportFilterService.BillTrackingObj.assignPrevioiusDate = true;\r\n            let routepaths = this.arouter.url.split('/');\r\n            let activeurlpath2;\r\n            if (routepaths && routepaths.length) {\r\n                activeurlpath2 = routepaths[routepaths.length - 1]\r\n            }\r\n\r\n            if (this._reportFilterService.BillTracking_loadedTimes == 0) {\r\n                this._reportFilterService.previouslyLoadedReportList.push(\r\n                    {\r\n                        reportname: 'Debtors Bill Tracking Report',\r\n                        activeurlpath: this.arouter.url,\r\n                        activerurlpath2: activeurlpath2,\r\n                        instanceWiseRepName: this.instanceWiseRepName + this._reportFilterService.BillTracking_loadedTimes,\r\n                    });\r\n            } else {\r\n                this._reportFilterService.previouslyLoadedReportList.push(\r\n                    {\r\n                        reportname: 'Debtors Bill Tracking Report' + '_' + this._reportFilterService.BillTracking_loadedTimes,\r\n                        activeurlpath: this.arouter.url,\r\n                        activerurlpath2: activeurlpath2,\r\n                        instanceWiseRepName: this.instanceWiseRepName + this._reportFilterService.BillTracking_loadedTimes,\r\n                    });\r\n            }\r\n\r\n        }\r\n\r\n        this.reportdataEmit.emit({\r\n            status: res, data: {\r\n                REPORTDISPLAYNAME: 'Debtors Bill Tracking Report',\r\n                reportname: this.reportNameFormatWise,\r\n                instanceWiseRepName: this.instanceWiseRepName + this._reportFilterService.BillTracking_loadedTimes,\r\n                reportparam: {\r\n                    DATE1: this._reportFilterService.BillTrackingObj.BillTracking_DATE1,\r\n                    DATE2: this._reportFilterService.BillTrackingObj.BillTracking_DATE2,\r\n                    FROMDATE: this._reportFilterService.BillTrackingObj.BillTracking_DATE1,\r\n                    TODATE: this._reportFilterService.BillTrackingObj.BillTracking_DATE2,\r\n                    BSDATE1: this._reportFilterService.BillTrackingObj.BillTracking_BSDATE1,\r\n                    BSDATE2: this._reportFilterService.BillTrackingObj.BillTracking_BSDATE2,\r\n                    DIV: this._reportFilterService.BillTrackingObj.BillTracking_DIV ? this._reportFilterService.BillTrackingObj.BillTracking_DIV : '%',\r\n                    COSTCENTER: this._reportFilterService.BillTrackingObj.BillTracking_CostCenter ? this._reportFilterService.BillTrackingObj.BillTracking_CostCenter : '%',\r\n                    COMID: this.masterService.userProfile.CompanyInfo.COMPANYID,\r\n                    COMPANYID: this.masterService.userProfile.CompanyInfo.COMPANYID,\r\n                    VOUCHERTYPE: this._reportFilterService.BillTrackingObj.BillTracking_VoucherType ? this._reportFilterService.BillTrackingObj.BillTracking_VoucherType : 'PV',\r\n                    ACID: this._reportFilterService.BillTrackingObj.BillTracking_ACID ? this._reportFilterService.BillTrackingObj.BillTracking_ACID : '%',\r\n                    PARTY: this._reportFilterService.BillTrackingObj.BillTracking_ACID ? this._reportFilterService.BillTrackingObj.BillTracking_ACID : '%',\r\n                    ACNAME: this._reportFilterService.BillTrackingObj.BillTracking_ACCNAME,\r\n                    PHISCALID: this.masterService.PhiscalObj.PhiscalID?this.masterService.PhiscalObj.PhiscalID:'%',\r\n                    DETAIL: this._reportFilterService.BillTrackingObj.BillTracking_Detail ? this._reportFilterService.BillTrackingObj.BillTracking_Detail : 1,\r\n                    DIVISIONNAME: this._reportFilterService.BillTrackingObj.BillTracking_DIVISIONNAME ? this._reportFilterService.BillTrackingObj.BillTracking_DIVISIONNAME : '',\r\n                    COSTCENTERDISPLAYNAME: this._reportFilterService.BillTrackingObj.BillTracking_COSTCENTERDISPLAYNAME ? this._reportFilterService.BillTrackingObj.BillTracking_COSTCENTERDISPLAYNAME : '',\r\n                }\r\n            }\r\n        });\r\n\r\n        if (res == \"ok\") {\r\n            this._reportFilterService.BillTracking_loadedTimes = this._reportFilterService.BillTracking_loadedTimes + 1;\r\n        }\r\n    }\r\n\r\n    // Close Method\r\n    closeReportBox() {\r\n        this.DialogClosedResult(\"cancel\");\r\n    }\r\n\r\n    AccountEnterClicked() {\r\n        this.gridPopupSettingsForPartyLedgerList = this.masterService.getGenericGridPopUpSettings('CustomerListForReport');\r\n        this.genericGridPartyLedger.show();\r\n    }\r\n\r\n    dblClickAccountSelect(account) {\r\n        this._reportFilterService.BillTrackingObj.BillTracking_ACID = account.ACID;\r\n        this._reportFilterService.BillTrackingObj.BillTracking_ACCNAME = account.ACNAME;\r\n    }\r\n    \r\n    keyPress(event: any) {\r\n        //console.log(\"@@billtevent\",event)\r\n        const pattern = /[\\b]/;\r\n        const inputChar = String.fromCharCode((event as KeyboardEvent).charCode);\r\n        if (!pattern.test(inputChar)) {\r\n          // invalid character, prevent input\r\n          event.preventDefault();\r\n        }\r\n      }\r\n}\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/pages/ReportDialogs/BillTrackingReport/billtracking-report.component.ts","import { Component, Output, EventEmitter, ViewChild, ElementRef } from '@angular/core';\r\nimport { MasterRepo } from '../../../common/repositories';\r\nimport { Division } from '../../../common/interfaces';\r\nimport { AuthService } from '../../../common/services/permission/authService.service';\r\nimport { PLedgerComponent } from '../../masters/components/PLedger/PLedger.component';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { Subscriber } from 'rxjs/Subscriber';\r\nimport { AlertService } from '../../../common/services/alert/alert.service';\r\nimport { ReportMainService } from '../../Reports/components/ReportMain/ReportMain.service';\r\nimport { GenericPopUpComponent, GenericPopUpSettings } from '../../../common/popupLists/generic-grid/generic-popup-grid.component';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ReportFilterService } from '../../../common/popupLists/report-filter/report-filter.service';\r\nimport * as moment from 'moment';\r\n\r\n@Component({\r\n    selector: 'cash-collection-voucher-report',\r\n    template: require('./cash-collection-voucher-report.component.html'),\r\n    styles: [require('../../modal-style.css'), require('../../Reports/reportStyle.css')],\r\n})\r\nexport class CashCollectionVoucherReport {\r\n    showCCtable: boolean;\r\n    showAreaTable: boolean;\r\n    showLedgerTable: boolean;\r\n    showCombineLedgerList: boolean;\r\n    showMergeCombineLedger: boolean;\r\n    reportNameFormatWise:string;\r\n    acname:string ='';\r\n    accode:string = '';\r\n    userProfile: any;\r\n    account:any[]=[];\r\n    result: any;\r\n    division: any[] = [];\r\n    CostcenterList: any[] = [];\r\n    PartyLedger_result: boolean;\r\n    AreaList: any[] = [];\r\n    instanceWiseRepName:string='Cash Collection Voucher Report';\r\n    REPORTDISPLAYNAME:string;\r\n    showAccGrpTable:boolean;\r\n\r\n    @ViewChild(\"PLedgerChild\") PLedgerChild: PLedgerComponent;\r\n    @Output() reportdataEmit = new EventEmitter();\r\n    @ViewChild(\"genericGridPartyLedger\") genericGridPartyLedger: GenericPopUpComponent;\r\n    gridPopupSettingsForPartyLedgerList: GenericPopUpSettings = new GenericPopUpSettings();\r\n    @ViewChild(\"genericGridMultiplePartyLedger\") genericGridMultiplePartyLedger: GenericPopUpComponent;\r\n    gridPopupSettingsForMultiplePartyLedgerList: GenericPopUpSettings = new GenericPopUpSettings();\r\n    @ViewChild(\"genericGridMultipleGroupAccount\") genericGridMultipleGroupAccount: GenericPopUpComponent;\r\n    gridPopupSettingsForMultipleGroupAccountList: GenericPopUpSettings = new GenericPopUpSettings();\r\n    @ViewChild('partyAccountSelection') partyAccountSelection: ElementRef;\r\n    \r\n    constructor(public masterService: MasterRepo,\r\n        private alertService: AlertService,\r\n        private _reportFilterService: ReportMainService,\r\n        private _authService: AuthService, private arouter: Router,public _ActivatedRoute: ActivatedRoute,\r\n        public reportService: ReportFilterService,\r\n        ) {\r\n\r\n            this._reportFilterService.PartyLedgerObj.IGNOREOPPOSITAC=true;\r\n            // this._reportFilterService.PartyLedgerObj.PartyLedger_HIDENARATION=true;\r\n\r\n        this._reportFilterService.showAllcontactsInCC = true;\r\n        this._reportFilterService.PartyLedgerObj.Reportnameis = 'cashcollectionvoucher';\r\n        this.reportNameFormatWise = 'Cash Collection Voucher Report';\r\n        this.userProfile = this._authService.getUserProfile();\r\n\r\n\r\n        this.checkValueForCombine();\r\n        // this.masterService.getAccDivList();\r\n       \r\n    }\r\n\r\n\r\n  \r\n\r\n    ngOnInit(){\r\n        this._ActivatedRoute.queryParams.subscribe(params => {\r\n            const mode = params.mode;\r\n            // ////console.log(\"@@this.reportMasterService.drillParam.returnUrl\",params.mode,this.reportService.drillParam.returnUrl);\r\n            // ////console.log(\"@@partyled\",this.reportService.drillParam)\r\n            if (mode == \"DRILL\" && this.reportService.drillParam.returnUrl && this.reportService.drillParam.reportname.startsWith('Party Ledger Report')) {\r\n            this._reportFilterService.CashCollectionVoucherObj.CashCollectionVoucher_DATE1=moment(this.reportService.drillParam.reportparam.DATE1).format('YYYY-MM-DD');\r\n            this._reportFilterService.CashCollectionVoucherObj.CashCollectionVoucher_DATE2=moment(this.reportService.drillParam.reportparam.DATE2).format('YYYY-MM-DD');\r\n            this._reportFilterService.CashCollectionVoucherObj.CashCollectionVoucher_BSDATE1=this.reportService.drillParam.reportparam.BSDATE1;\r\n            this._reportFilterService.CashCollectionVoucherObj.CashCollectionVoucher_BSDATE2=this.reportService.drillParam.reportparam.BSDATE2;\r\n            }\r\n        else{\r\n            if(this._reportFilterService.CashCollectionVoucherObj.assignPrevioiusDate != true){\r\n                this.masterService.getAccDivList();\r\n                this._reportFilterService.CashCollectionVoucherObj.CashCollectionVoucher_DATE1=this.masterService.PhiscalObj.BeginDate.split('T')[0];\r\n                //console.log(\"@@01BeginDate\",this.masterService.PhiscalObj.BeginDate)\r\n                if (this.userProfile.CompanyInfo.ActualFY == this.masterService.PhiscalObj.PhiscalID) {\r\n                    this._reportFilterService.CashCollectionVoucherObj.CashCollectionVoucher_DATE2 = new Date().toJSON().split('T')[0];\r\n                    this.changeEndDate(this._reportFilterService.CashCollectionVoucherObj.CashCollectionVoucher_DATE2, \"AD\");\r\n                  }\r\n                  else {\r\n                    //console.log(\"@@02EndDate\",this.masterService.PhiscalObj.EndDate)\r\n                        this._reportFilterService.CashCollectionVoucherObj.CashCollectionVoucher_DATE2 = this.masterService.PhiscalObj.EndDate.split('T')[0];\r\n                        this.changeEndDate(this._reportFilterService.CashCollectionVoucherObj.CashCollectionVoucher_DATE2, \"AD\");  \r\n          \r\n                    \r\n                }            \r\n                this.changeEntryDate(this._reportFilterService.CashCollectionVoucherObj.CashCollectionVoucher_DATE1, \"AD\");\r\n                this.changeEndDate(this._reportFilterService.CashCollectionVoucherObj.CashCollectionVoucher_DATE2, \"AD\"); \r\n                this._reportFilterService.CashCollectionVoucherObj.CashCollectionVoucher_VoucherStatus = '0';\r\n\r\n\r\n            }\r\n    \r\n            \r\n\r\n            if(params.instancename){\r\n                // ////console.log(\"@@[Party Ledger Report0]\",params.instancename,this._reportFilterService.reportDataStore[params.instancename].param.reportparam)\r\n                this._reportFilterService.CashCollectionVoucherObj.CashCollectionVoucher_DATE1=this._reportFilterService.reportDataStore[params.instancename].param.reportparam.DATE1;\r\n                this._reportFilterService.CashCollectionVoucherObj.CashCollectionVoucher_DATE2=this._reportFilterService.reportDataStore[params.instancename].param.reportparam.DATE2;\r\n                this.changeEntryDate(this._reportFilterService.CashCollectionVoucherObj.CashCollectionVoucher_DATE1, \"AD\");\r\n                this.changeEndDate(this._reportFilterService.CashCollectionVoucherObj.CashCollectionVoucher_DATE2, \"AD\");\r\n                this._reportFilterService.CashCollectionVoucherObj.CashCollectionVoucher_VoucherStatus = this._reportFilterService.reportDataStore[params.instancename].param.reportparam.MODE;\r\n                this._reportFilterService.CashCollectionVoucherObj.CashCollectionVoucher_PartyID = this._reportFilterService.reportDataStore[params.instancename].param.reportparam.PARTY;\r\n            }\r\n        } \r\n\r\n    });\r\n    }\r\n    ngAfterViewInit(){\r\n        var a = this.masterService.AccListDiv.forEach(x=>x.isSelected == 1);\r\n        this.applyHostListener();\r\n        \r\n        \r\n    }\r\n\r\n    changeEntryDate(value, format: string) {\r\n        var adbs = require(\"ad-bs-converter\");\r\n        if (format == \"AD\") {\r\n            var adDate = (value.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n            var bsDate = adbs.ad2bs(adDate);\r\n            this._reportFilterService.CashCollectionVoucherObj.CashCollectionVoucher_BSDATE1 = this.masterService.toBSDate(value);\r\n        } \r\n        else if (format == \"BS\") {\r\n            var datearr = value.split('/');\r\n            const bsDate = datearr[2]+\"/\"+datearr[1]+\"/\"+datearr[0];\r\n            // var bsDate = (value.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n            var adDate = adbs.bs2ad(bsDate);\r\n            var Engdate = this.masterService.toADDate(value);\r\n              const Validatedata = this.masterService.ValidateNepaliDate(Engdate)\r\n              if(Validatedata == true){\r\n                const bsDate1 = datearr[2]+\"/\"+datearr[1]+\"/\"+datearr[0];\r\n                var adDate1 = adbs.bs2ad(bsDate1);\r\n                this._reportFilterService.CashCollectionVoucherObj.CashCollectionVoucher_DATE1= this.masterService.toADDate(value);\r\n              }else{\r\n                  this.alertService.error(\"Cannot Change the date\");\r\n                return;\r\n              }\r\n            // this._reportFilterService.CashCollectionVoucherObj.CashCollectionVoucher_DATE1 = this.masterService.toBSDate(value);\r\n        }\r\n    }\r\n\r\n    changeEndDate(value, format: string) {\r\n        var adbs = require(\"ad-bs-converter\");\r\n        if (format == \"AD\") {\r\n            var adDate = (value.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n            var bsDate = adbs.ad2bs(adDate);\r\n            this._reportFilterService.CashCollectionVoucherObj.CashCollectionVoucher_BSDATE2 = this.masterService.toBSDate(value);\r\n        }\r\n        else if (format == \"BS\") {\r\n            var datearr = value.split('/');\r\n            const bsDate = datearr[2]+\"/\"+datearr[1]+\"/\"+datearr[0];\r\n            // var bsDate = (value.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n            var adDate = adbs.bs2ad(bsDate);\r\n            var Engdate = this.masterService.toADDate(value);\r\n              const Validatedata = this.masterService.ValidateNepaliDate(Engdate)\r\n              if(Validatedata == true){\r\n                const bsDate1 = datearr[2]+\"/\"+datearr[1]+\"/\"+datearr[0];\r\n                var adDate1 = adbs.bs2ad(bsDate1);\r\n                this._reportFilterService.CashCollectionVoucherObj.CashCollectionVoucher_DATE2 = this.masterService.toADDate(value);\r\n              }else{\r\n                  this.alertService.error(\"Cannot Change the date\");\r\n                return;\r\n              }\r\n\r\n            // this._reportFilterService.CashCollectionVoucherObj.CashCollectionVoucher_DATE2 = this.masterService.toBSDate(value);\r\n        }\r\n    }\r\n\r\n    onload() {\r\n        this.DialogClosedResult(\"ok\");\r\n\r\n    }\r\n\r\n    public DialogClosedResult(res) {\r\n        if(res == \"ok\"){\r\n        this._reportFilterService.CashCollectionVoucherObj.assignPrevioiusDate = true;\r\n        let routepaths = this.arouter.url.split('/');\r\n        let activeurlpath2;\r\n              if(routepaths&& routepaths.length){\r\n                activeurlpath2=routepaths[routepaths.length-1]\r\n                // ////console.log(\"@@activeurlpath2\",activeurlpath2)\r\n              } \r\n\r\n        if(this._reportFilterService.PartyLedger_loadedTimes == 0){\r\n            this._reportFilterService.previouslyLoadedReportList.push(\r\n                {reportname: 'Cash Collection Voucher Report',\r\n                activeurlpath: this.arouter.url,\r\n                activerurlpath2: activeurlpath2,\r\n                instanceWiseRepName:this.instanceWiseRepName +this._reportFilterService.CashCollectionVoucher_loadedTimes,\r\n            });\r\n        }else{\r\n            this._reportFilterService.previouslyLoadedReportList.push(\r\n                {reportname: 'Cash Collection Voucher Report'+'_'+this._reportFilterService.CashCollectionVoucher_loadedTimes,\r\n                activeurlpath: this.arouter.url,\r\n                activerurlpath2: activeurlpath2,\r\n                instanceWiseRepName:this.instanceWiseRepName +this._reportFilterService.CashCollectionVoucher_loadedTimes,\r\n            });\r\n        }\r\n     \r\n        }\r\n        this.reportdataEmit.emit({\r\n            status: res, data: {\r\n                REPORTDISPLAYNAME : 'Cash Collection Voucher Report',\r\n                reportname: this.reportNameFormatWise,\r\n                instanceWiseRepName:this.instanceWiseRepName+this._reportFilterService.CashCollectionVoucher_loadedTimes, \r\n                reportparam: {\r\n                    DATE1: this._reportFilterService.CashCollectionVoucherObj.CashCollectionVoucher_DATE1,\r\n                    DATE2: this._reportFilterService.CashCollectionVoucherObj.CashCollectionVoucher_DATE2,\r\n                    FYID: this.masterService.PhiscalObj.PhiscalID,\r\n                    MODE: this._reportFilterService.CashCollectionVoucherObj.CashCollectionVoucher_VoucherStatus,\r\n                    PARTY:this._reportFilterService.CashCollectionVoucherObj.CashCollectionVoucher_PartyID?this._reportFilterService.CashCollectionVoucherObj.CashCollectionVoucher_PartyID:'%';\r\n\r\n                }\r\n            }\r\n        });\r\n\r\n        if(res == \"ok\"){\r\n            this._reportFilterService.PartyLedger_loadedTimes = this._reportFilterService.PartyLedger_loadedTimes+1;\r\n        }\r\n    }\r\n\r\n    // Close Method\r\n    closeReportBox() {\r\n        this.DialogClosedResult(\"cancel\");\r\n    }\r\n\r\n    checkValue() {\r\n        if (this._reportFilterService.PartyLedgerObj.PartyLedger_ReportType == 2) {\r\n            this.showLedgerTable = true;\r\n            this.acname = this._reportFilterService.PartyLedgerObj.PartyLedger_ACCNAME;\r\n            this._reportFilterService.PartyLedgerObj.PartyLedger_ACCNAME = '';\r\n            this.accode = this._reportFilterService.PartyLedgerObj.PartyLedger_ACCODE;\r\n            this._reportFilterService.PartyLedgerObj.PartyLedger_ACID = '';\r\n            this._reportFilterService.PartyLedgerObj.PartyLedger_SingleAccount = '';\r\n            this._reportFilterService.PartyLedgerObj.PartyLedger_multipleCostcenter = [];\r\n            this._reportFilterService.PartyLedgerObj.PartyLedger_AreaWise = [];\r\n            this._reportFilterService.PartyLedgerObj.PartyLedger_multipleGroupAccounts=[];\r\n        } else {\r\n            this.showLedgerTable = false;\r\n            this._reportFilterService.PartyLedgerObj.PartyLedger_ACCNAME = this.acname;\r\n            this._reportFilterService.PartyLedgerObj.PartyLedger_ACID = this.accode;\r\n            this._reportFilterService.PartyLedgerObj.PartyLedger_SingleAccount = this.accode;\r\n        }\r\n        if (this._reportFilterService.PartyLedgerObj.PartyLedger_ReportType == 1) {\r\n            this.showAreaTable = true;\r\n            this._reportFilterService.PartyLedgerObj.PartyLedger_multipleCostcenter = [];\r\n            this._reportFilterService.PartyLedgerObj.PartyLedger_multipleAccounts = [];\r\n            this._reportFilterService.PartyLedgerObj.PartyLedger_multipleGroupAccounts=[];\r\n        } else {\r\n            this.showAreaTable = false;\r\n        }\r\n        if (this._reportFilterService.PartyLedgerObj.PartyLedger_ReportType == 4) {\r\n            this.showCCtable = true;\r\n            this._reportFilterService.PartyLedgerObj.PartyLedger_multipleAccounts = [];\r\n            this._reportFilterService.PartyLedgerObj.PartyLedger_AreaWise = 0;\r\n            this._reportFilterService.PartyLedgerObj.PartyLedger_multipleGroupAccounts=[];\r\n        } else {\r\n            this.showCCtable = false;\r\n        }\r\n        if (this._reportFilterService.PartyLedgerObj.PartyLedger_ReportType == 5) {\r\n            this.showAccGrpTable = true;\r\n            this._reportFilterService.PartyLedgerObj.PartyLedger_AreaWise = 0;\r\n            this._reportFilterService.PartyLedgerObj.PartyLedger_multipleCostcenter = [];\r\n            this._reportFilterService.PartyLedgerObj.PartyLedger_multipleAccounts = [];\r\n        } else {\r\n            this.showAccGrpTable = false;\r\n        }\r\n        \r\n\r\n    }\r\n\r\n    checkValueForCombine(){\r\n        if (this._reportFilterService.PartyLedgerObj.EnableCombineLedger == true) {\r\n            this.showCombineLedgerList = true;\r\n            this.acname = this._reportFilterService.PartyLedgerObj.PartyLedger_ACCNAME;\r\n            this._reportFilterService.PartyLedgerObj.PartyLedger_ACCNAME = '';\r\n            this.accode = this._reportFilterService.PartyLedgerObj.PartyLedger_ACCODE;\r\n            this._reportFilterService.PartyLedgerObj.PartyLedger_ACID = '';\r\n            this._reportFilterService.PartyLedgerObj.PartyLedger_SingleAccount = '';\r\n            this.showMergeCombineLedger = true;\r\n            if(this._reportFilterService.PartyLedgerObj.PartyLedger_ReportType == 2){\r\n                this.showLedgerTable = true;\r\n            }else if (this._reportFilterService.PartyLedgerObj.PartyLedger_ReportType == 4){\r\n                this.showCCtable = true;\r\n            }else if(this._reportFilterService.PartyLedgerObj.PartyLedger_ReportType == 1){\r\n                this.showAreaTable = true;\r\n            }else if (this._reportFilterService.PartyLedgerObj.PartyLedger_ReportType == 5){\r\n                this.showAccGrpTable = true;\r\n            }\r\n        } else {\r\n            this.showCombineLedgerList = false;\r\n            this.showMergeCombineLedger = false;\r\n            this._reportFilterService.PartyLedgerObj.PartyLedger_multipleCostcenter = [];\r\n            this._reportFilterService.PartyLedgerObj.PartyLedger_multipleAccounts = [];\r\n            this._reportFilterService.PartyLedgerObj.PartyLedger_multipleGroupAccounts=[];\r\n            this._reportFilterService.PartyLedgerObj.PartyLedger_AreaWise = 0;\r\n            this.showLedgerTable = false;\r\n            this.showCCtable = false;\r\n            this.showAreaTable = false;\r\n            this.showAccGrpTable = false;\r\n        }\r\n    }\r\n\r\n    AccountEnterClicked() {\r\n        this.gridPopupSettingsForPartyLedgerList = this.masterService.getGenericGridPopUpSettings('PartyLedgerListForReport');\r\n        this.genericGridPartyLedger.show();\r\n    }\r\n\r\n    dblClickAccountSelect(account) {\r\n        this._reportFilterService.CashCollectionVoucherObj.CashCollectionVoucher_PartyID = account.ACID;\r\n        this._reportFilterService.CashCollectionVoucherObj.CashCollectionVoucher_PartyName = account.ACNAME;;\r\n\r\n    }\r\n\r\n    onValueChange(){\r\n        if(this._reportFilterService.CashCollectionVoucherObj.CashCollectionVoucher_PartyName == '' || this._reportFilterService.CashCollectionVoucherObj.CashCollectionVoucher_PartyName == undefined || this._reportFilterService.CashCollectionVoucherObj.CashCollectionVoucher_PartyName == null){\r\n            this._reportFilterService.CashCollectionVoucherObj.CashCollectionVoucher_PartyID = '%';\r\n        }else{\r\n            return;\r\n        }\r\n    }\r\n\r\n    addAccountToList() {\r\n        let selectACList = this._reportFilterService.PartyLedgerObj.PartyLedger_multipleAccounts.filter(acList => acList.ACID == this._reportFilterService.PartyLedgerObj.multipleACID)\r\n        if (\r\n            this._reportFilterService.PartyLedgerObj.multipleACNAME === \"\" ||\r\n            this._reportFilterService.PartyLedgerObj.multipleACNAME === null ||\r\n            this._reportFilterService.PartyLedgerObj.multipleACNAME === undefined\r\n        ) {\r\n            return;\r\n        }\r\n\r\n        if (selectACList.length === 0) {\r\n            this._reportFilterService.PartyLedgerObj.PartyLedger_multipleAccounts.push({ ACID: this._reportFilterService.PartyLedgerObj.multipleACID, ACNAME: this._reportFilterService.PartyLedgerObj.multipleACNAME })\r\n                this._reportFilterService.PartyLedgerObj.multipleACNAME='';\r\n                this._reportFilterService.PartyLedgerObj.multipleACCODE='';\r\n        }\r\n    }\r\n\r\n    deleteAccount(index) {\r\n        this._reportFilterService.PartyLedgerObj.PartyLedger_multipleAccounts.splice(index, 1);\r\n        this._reportFilterService.selectedAccountParty= '';\r\n    }\r\n\r\n    \r\n    MultipleAccountEnterClicked() {\r\n        this.gridPopupSettingsForMultiplePartyLedgerList = this.masterService.getGenericGridPopUpSettings('PartyLedgerListForReport');\r\n        this.genericGridMultiplePartyLedger.show();\r\n    }\r\n\r\n    dblClickMultipleAccountSelect(account) {\r\n        this._reportFilterService.PartyLedgerObj.multipleACID = account.ACID;\r\n        this._reportFilterService.PartyLedgerObj.multipleACNAME = account.ACNAME;\r\n    }\r\n\r\n\r\n    addCostcenterToList() {\r\n        const ccData = this._reportFilterService.PartyLedgerObj.CCENTER;\r\n        this._reportFilterService.PartyLedgerObj.CCENTER = ccData && ccData.CCID ? ccData.CCID : '';\r\n        let selectCCenterList = this._reportFilterService.PartyLedgerObj.PartyLedger_multipleCostcenter.filter(centerList => centerList.COSTCENTERNAME == ccData.COSTCENTERNAME)\r\n        if (\r\n            ccData.COSTCENTERNAME === \"\" ||\r\n            ccData.COSTCENTERNAME === null ||\r\n            ccData.COSTCENTERNAME === undefined\r\n        ) {\r\n            return;\r\n        }\r\n\r\n        if (selectCCenterList.length === 0) {\r\n            this._reportFilterService.PartyLedgerObj.PartyLedger_multipleCostcenter.push({ CCID: ccData.CCID, COSTCENTERNAME: ccData.COSTCENTERNAME })\r\n        }\r\n\r\n    }\r\n\r\n    deleteCostcenter(index) {\r\n        this._reportFilterService.PartyLedgerObj.PartyLedger_multipleCostcenter.splice(index, 1)\r\n    }\r\n\r\n    GroupAccountclick(){   \r\n        this.gridPopupSettingsForMultipleGroupAccountList = this.masterService.getGenericGridPopUpSettings('PartyGroupList');\r\n        this.genericGridMultipleGroupAccount.show();\r\n    }\r\n\r\n    dblClickGroupAccountSelect(account) {\r\n        this._reportFilterService.PartyLedgerObj.Multiple_GROUP_ACID = account.ACID;\r\n        this._reportFilterService.PartyLedgerObj.Multiple_GROUP_ACNAME = account.ACNAME;\r\n    }\r\n\r\n    addGroupAccountToList(){\r\n        let selectACList = this._reportFilterService.PartyLedgerObj.PartyLedger_multipleGroupAccounts.filter(acList => acList.ACNAME == this._reportFilterService.PartyLedgerObj.Multiple_GROUP_ACNAME)\r\n        if (\r\n            this._reportFilterService.PartyLedgerObj.Multiple_GROUP_ACNAME === \"\" ||\r\n            this._reportFilterService.PartyLedgerObj.Multiple_GROUP_ACNAME === null ||\r\n            this._reportFilterService.PartyLedgerObj.Multiple_GROUP_ACNAME === undefined\r\n        ) {\r\n            return;\r\n        }\r\n\r\n        if (selectACList.length === 0) {\r\n            this._reportFilterService.PartyLedgerObj.PartyLedger_multipleGroupAccounts.push({ ACID: this._reportFilterService.PartyLedgerObj.Multiple_GROUP_ACID, ACNAME: this._reportFilterService.PartyLedgerObj.Multiple_GROUP_ACNAME })\r\n                this._reportFilterService.PartyLedgerObj.Multiple_GROUP_ACNAME='';\r\n                this._reportFilterService.PartyLedgerObj.multiple_Group_ACCODE='';\r\n        }\r\n    }\r\n\r\n    deleteGroupAccount(index) {\r\n        this._reportFilterService.PartyLedgerObj.PartyLedger_multipleGroupAccounts.splice(index, 1);\r\n        this._reportFilterService.selectedGroupAccountParty='';\r\n\r\n    }\r\n\r\n    preventInput($event) {\r\n        $event.preventDefault();\r\n        return false;\r\n      }\r\n    applyHostListener(): void {\r\n        if (this.partyAccountSelection && this.partyAccountSelection.nativeElement) {\r\n          this.partyAccountSelection.nativeElement.addEventListener('keydown', (event: KeyboardEvent) => {\r\n            if (event.key !== 'Backspace') {\r\n              event.preventDefault(); // Prevent typing any character except the backspace\r\n            }\r\n          });\r\n        }\r\n      }\r\n   \r\n}\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/pages/ReportDialogs/Cash-Collection-Voucher-Report/cash-collection-voucher-report.component.ts","import { Component, Inject, Output, EventEmitter, OnInit, ViewChild } from '@angular/core';\r\nimport { MdDialogRef, MD_DIALOG_DATA } from '@angular/material';\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { MasterRepo } from '../../../common/repositories';\r\nimport { ReportMainService } from '../../Reports/components/ReportMain/ReportMain.service';\r\nimport { AlertService } from '../../../common/services/alert/alert.service';\r\nimport { AuthService } from '../../../common/services/permission/authService.service';\r\nimport { Division } from '../../../common/interfaces';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { GenericPopUpSettings, GenericPopUpComponent } from '../../../common/popupLists/generic-grid/generic-popup-grid.component';\r\nexport interface DialogInfo {\r\n    header: string;\r\n    message: Observable<string>;\r\n}\r\n@Component({\r\n    selector: 'cash-bank-book',\r\n    template: require('./cash-and-bank-book-report.component.html'),\r\n    styles: [require('../../Reports/reportStyle.css'), require('../../modal-style.css')]\r\n})\r\n\r\nexport class CashBankBookReport implements OnInit {\r\n    acname: string;\r\n    accode: string;\r\n    userProfile: any;\r\n    division: any[] = [];\r\n    account: any[] = [];\r\n    account2: any[] = [];\r\n    instanceWiseRepName:string='Cash/Bank Book Report';\r\n\r\n    @Output() reportdataEmit = new EventEmitter();\r\n    @ViewChild(\"genericGridCashBankBook\") genericGridCashBankBook: GenericPopUpComponent;\r\n    gridPopupSettingsForAccountList: GenericPopUpSettings = new GenericPopUpSettings();\r\n    constructor(private masterService: MasterRepo,\r\n        public dialogref: MdDialogRef<CashBankBookReport>,\r\n        @Inject(MD_DIALOG_DATA) public data: DialogInfo,\r\n        private _reportFilterService: ReportMainService,  public _ActivatedRoute: ActivatedRoute,\r\n        private alertService: AlertService, private _authService: AuthService, private arouter: Router\r\n    ) {\r\n        // this._reportFilterService.CashAndBankBookObj.REPORTMODE = '0';\r\n        this._reportFilterService.CashAndBankBookObj.Reportnameis = 'cashbankbookreport';\r\n        this.userProfile = this._authService.getUserProfile();\r\n\r\n        this.division=[];\r\n        //let data: Array<IDivision> = [];\r\n        if(this.masterService.userSetting.userwisedivision == 1){\r\n          this.masterService.getDivisionFromRightPrivelege().subscribe(res=>{\r\n              if(res.status == 'ok'){\r\n                  this.division = res.result;\r\n              }\r\n          })\r\n        }\r\n        else{\r\n         this.masterService.getAllDivisions()\r\n         .subscribe(res => {\r\n           //////console.log(\"div\" + JSON.stringify(res));\r\n           this.division.push(<Division>res);\r\n         }, error => {\r\n           this.masterService.resolveError(error, \"divisions - getDivisions\");\r\n         });\r\n        }\r\n\r\n        this.masterService.getCashListForReport().subscribe(res => {\r\n            this.account = res.data;\r\n            ////console.log(\"@@res\", res)\r\n            if (this.account.length != 0) {\r\n                this._reportFilterService.result = true;\r\n            } else {\r\n                this._reportFilterService.result = false;\r\n            }\r\n        })\r\n\r\n        this.masterService.getBankBookListForReport().subscribe(res => {\r\n            this.account2 = res.data;\r\n            if (this.account2.length != 0) {\r\n                this._reportFilterService.result2 = true;\r\n            } else {\r\n                this._reportFilterService.result2 = false;\r\n            }\r\n        })\r\n\r\n        this.checkSummary();\r\n        // this.masterService.getAccDivList();\r\n\r\n    }\r\n\r\n    ngOnInit() {\r\n        this._ActivatedRoute.queryParams.subscribe(params => {\r\n            if (this._reportFilterService.CashAndBankBookObj.assignPrevioiusDate != true) {\r\n                this.masterService.getAccDivList();\r\n            this._reportFilterService.CashAndBankBookObj.CashBankBook_DATE1 = this.masterService.PhiscalObj.BeginDate.split('T')[0];\r\n            if (this.masterService.userProfile.CompanyInfo.ActualFY == this.masterService.PhiscalObj.PhiscalID) {\r\n                    this._reportFilterService.CashAndBankBookObj.CashBankBook_DATE2 = new Date().toJSON().split('T')[0];\r\n                    this.changeEndDate(this._reportFilterService.CashAndBankBookObj.CashBankBook_DATE2, \"AD\");\r\n                  }\r\n                  else {\r\n\r\n                this._reportFilterService.CashAndBankBookObj.CashBankBook_DATE2 = this.masterService.PhiscalObj.EndDate.split('T')[0];\r\n                        this.changeEndDate(this._reportFilterService.CashAndBankBookObj.CashBankBook_DATE2, \"AD\");\r\n\r\n\r\n                }\r\n                // this._reportFilterService.CashAndBankBookObj.CashBankBook_DATE2 = new Date().toJSON().split('T')[0];\r\n                // this._reportFilterService.CashAndBankBookObj.CashBankBook_DIV = this.masterService.userProfile.CompanyInfo.INITIAL;\r\n                this.masterService.viewDivision.subscribe(() => {\r\n                    if(this.masterService.userSetting.userwisedivision==0 ||  this.masterService.showAll == true){ //ALL OPTION SELECTION IN DIVISION IN REPORT DIALOG BOX\r\n                      this._reportFilterService.CashAndBankBookObj.CashBankBook_DIV='%';\r\n                  }else{\r\n                    if(this.masterService.userSetting.userwisedivision==1 && this.division.length ==1){\r\n                        this._reportFilterService.CashAndBankBookObj.CashBankBook_DIV=this.division[0].INITIAL;\r\n                      }else{\r\n                        this._reportFilterService.CashAndBankBookObj.CashBankBook_DIV=this.masterService.userProfile.CompanyInfo.INITIAL;\r\n                    }\r\n                  }\r\n                  })\r\n                this._reportFilterService.CashAndBankBookObj.REPORTMODE = '0';\r\n                this._reportFilterService.CashAndBankBookObj.CashBankBook_DETAILREPORT = '0';\r\n            }\r\n\r\n            if(params.instancename){\r\n                // ////console.log(\"@@[cash bank Report0]\",params.instancename,this._reportFilterService.reportDataStore[params.instancename].param.reportparam)\r\n                this._reportFilterService.CashAndBankBookObj.CashBankBook_DATE1=this._reportFilterService.reportDataStore[params.instancename].param.reportparam.DATE1;\r\n                this._reportFilterService.CashAndBankBookObj.CashBankBook_DATE2=this._reportFilterService.reportDataStore[params.instancename].param.reportparam.DATE2;\r\n                this._reportFilterService.CashAndBankBookObj.CashBankBook_DIV=this._reportFilterService.reportDataStore[params.instancename].param.reportparam.DIV;\r\n                this._reportFilterService.CashAndBankBookObj.REPORTMODE=this._reportFilterService.reportDataStore[params.instancename].param.reportparam.REPORTMODE;\r\n                this._reportFilterService.CashAndBankBookObj.CashBankBook_DETAILREPORT=this._reportFilterService.reportDataStore[params.instancename].param.reportparam.DETAILREPORT;\r\n                this._reportFilterService.CashAndBankBookObj.SingleAccount=this._reportFilterService.reportDataStore[params.instancename].param.reportparam.ACID;\r\n                this._reportFilterService.CashAndBankBookObj.ACCNAME=this._reportFilterService.reportDataStore[params.instancename].param.reportparam.ACNAME;\r\n                this._reportFilterService.CashAndBankBookObj.CashBankBook_INCLUDEPOSTDATE =this._reportFilterService.reportDataStore[params.instancename].param.reportparam.INCLUDEPOSTEDTRANSACTION ; \r\n\r\n            }\r\n\r\n        })\r\n\r\n        this.changeEntryDate(this._reportFilterService.CashAndBankBookObj.CashBankBook_DATE1, \"AD\");\r\n        this.changeEndDate(this._reportFilterService.CashAndBankBookObj.CashBankBook_DATE2, \"AD\");\r\n    }\r\n    focusOutFromDate(value) {\r\n        this.masterService.validateDate(value).subscribe(x => {\r\n            if (x == \"error\") {\r\n                this.alertService.warning(\"Date should be within Fiscal year\");\r\n                this._reportFilterService.CashAndBankBookObj.CashBankBook_DATE1 = new Date().toJSON().split('T')[0];\r\n            }\r\n        });\r\n    }\r\n    changeEntryDate(value, format: string) {\r\n\r\n        var adbs = require(\"ad-bs-converter\");\r\n        if (format == \"AD\") {\r\n            var adDate = (value.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n            var bsDate = adbs.ad2bs(adDate);\r\n            this._reportFilterService.CashAndBankBookObj.CashBankBook_BSDATE1 = this.masterService.toBSDate(value);\r\n        }\r\n        else if (format == \"BS\") {\r\n          var datearr = value.split('/');\r\n          const bsDate = datearr[2]+\"/\"+datearr[1]+\"/\"+datearr[0];\r\n            // var bsDate = (value.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n            var adDate = adbs.bs2ad(bsDate);\r\n            var Engdate = this.masterService.toADDate(value);\r\n            const Validatedata = this.masterService.ValidateNepaliDate(Engdate)\r\n            if(Validatedata == true){\r\n              const bsDate1 = datearr[2]+\"/\"+datearr[1]+\"/\"+datearr[0];\r\n              var adDate1 = adbs.bs2ad(bsDate1);\r\n              this._reportFilterService.CashAndBankBookObj.CashBankBook_DATE1 = this.masterService.toADDate(value);\r\n            }else{\r\n                this.alertService.error(\"Cannot Change the date\");\r\n              return;\r\n            }\r\n            // this._reportFilterService.CashAndBankBookObj.CashBankBook_DATE1 = this.masterService.toBSDate(value);\r\n        }\r\n\r\n    }\r\n\r\n    changeEndDate(value, format: string) {\r\n        var adbs = require(\"ad-bs-converter\");\r\n        if (format == \"AD\") {\r\n            var adDate = (value.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n            var bsDate = adbs.ad2bs(adDate);\r\n            this._reportFilterService.CashAndBankBookObj.CashBankBook_BSDATE2 = this.masterService.toBSDate(value);\r\n        }\r\n        else if (format == \"BS\") {\r\n          var datearr = value.split('/');\r\n          const bsDate = datearr[2]+\"/\"+datearr[1]+\"/\"+datearr[0];\r\n            // var bsDate = (value.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n            var adDate = adbs.bs2ad(bsDate);\r\n            var Engdate = this.masterService.toADDate(value);\r\n                const Validatedata = this.masterService.ValidateNepaliDate(Engdate)\r\n                if(Validatedata == true){\r\n                  const bsDate1 = datearr[2]+\"/\"+datearr[1]+\"/\"+datearr[0];\r\n                  var adDate1 = adbs.bs2ad(bsDate1);\r\n                  this._reportFilterService.CashAndBankBookObj.CashBankBook_DATE2= this.masterService.toADDate(value);\r\n                }else{\r\n                    this.alertService.error(\"Cannot Change the date\");\r\n                  return;\r\n                }\r\n            // this._reportFilterService.CashAndBankBookObj.CashBankBook_DATE2 = this.masterService.toBSDate(value);\r\n        }\r\n    }\r\n\r\n    onload() {\r\n        if (this._reportFilterService.result == true && (this._reportFilterService.CashAndBankBookObj.CashBankBook_DETAILREPORT == '1' && this._reportFilterService.CashAndBankBookObj.REPORTMODE == \"1\")) {\r\n            if (this._reportFilterService.CashAndBankBookObj.SingleAccount === undefined || this._reportFilterService.CashAndBankBookObj.SingleAccount == '' || this._reportFilterService.CashAndBankBookObj.ACCNAME == '') {\r\n                this.alertService.info(\"Please Select Account\");\r\n                return;\r\n            }\r\n            this.DialogClosedResult(\"ok\");\r\n        } else if (this._reportFilterService.result2 == true && (this._reportFilterService.CashAndBankBookObj.CashBankBook_DETAILREPORT == '1' && this._reportFilterService.CashAndBankBookObj.REPORTMODE == \"2\")) {\r\n            if (this._reportFilterService.CashAndBankBookObj.SingleAccount === undefined || this._reportFilterService.CashAndBankBookObj.SingleAccount == '' || this._reportFilterService.CashAndBankBookObj.ACCNAME == '') {\r\n                this.alertService.info(\"Please Select Account\");\r\n                return;\r\n            }\r\n            this.DialogClosedResult(\"ok\");\r\n        }\r\n        else {\r\n            this.DialogClosedResult(\"ok\");\r\n        }\r\n    }\r\n\r\n    closeReportBox() {\r\n        this.DialogClosedResult(\"Error!\");\r\n    }\r\n\r\n    public DialogClosedResult(res) {\r\n        this._reportFilterService.CashAndBankBookObj.CashBankBook_DIV = (this._reportFilterService.CashAndBankBookObj.CashBankBook_DIV == null || this._reportFilterService.CashAndBankBookObj.CashBankBook_DIV == \"\") ? \"%\" : this._reportFilterService.CashAndBankBookObj.CashBankBook_DIV;\r\n\r\n        let multipleReportFormateName = '';\r\n        if (this._reportFilterService.CashAndBankBookObj.CashBankBook_DETAILREPORT == \"0\") {\r\n            multipleReportFormateName = 'Cash/Bank Book Report';\r\n            this._reportFilterService.CashAndBankBookObj.CashBankBook_SUMMARYREPORTDISPLAYNAME = ' @Summary Report';\r\n        } else if (this._reportFilterService.CashAndBankBookObj.CashBankBook_DETAILREPORT == \"1\" && this._reportFilterService.CashAndBankBookObj.REPORTMODE == \"1\") {\r\n            multipleReportFormateName = 'Cash/Bank Book Report_1';\r\n            this._reportFilterService.CashAndBankBookObj.CashBankBook_SUMMARYREPORTDISPLAYNAME = ' @Detail Report';\r\n        } else if (this._reportFilterService.CashAndBankBookObj.CashBankBook_DETAILREPORT == \"1\" && this._reportFilterService.CashAndBankBookObj.REPORTMODE == \"2\") {\r\n            multipleReportFormateName = 'Cash/Bank Book Report_2';\r\n            this._reportFilterService.CashAndBankBookObj.CashBankBook_SUMMARYREPORTDISPLAYNAME = ' @Detail Report';\r\n        }\r\n\r\n        if (this._reportFilterService.CashAndBankBookObj.CashBankBook_DIV && this._reportFilterService.CashAndBankBookObj.CashBankBook_DIV == '%') {\r\n            this._reportFilterService.CashAndBankBookObj.CashBankBook_DIVISIONNAME = 'All';\r\n          }else if( this._reportFilterService.CashAndBankBookObj.CashBankBook_DIV && this._reportFilterService.CashAndBankBookObj.CashBankBook_DIV!= '%'){\r\n            let abc = this.division.filter(x=>x.INITIAL == this._reportFilterService.CashAndBankBookObj.CashBankBook_DIV);\r\n              if(abc && abc.length>0 && abc[0]){\r\n                this._reportFilterService.CashAndBankBookObj.CashBankBook_DIVISIONNAME = abc[0].NAME;\r\n              }else{\r\n                this._reportFilterService.CashAndBankBookObj.CashBankBook_DIVISIONNAME = '';\r\n              }\r\n          }else{\r\n            this._reportFilterService.CashAndBankBookObj.CashBankBook_DIVISIONNAME = '';\r\n          }\r\n\r\n        if (this._reportFilterService.CashAndBankBookObj.REPORTMODE == \"1\") {\r\n            this._reportFilterService.CashAndBankBookObj.CashBankBook_REPORTOPTIONDISPLAYNAME = ' @Cash Book Only';\r\n        } else if (this._reportFilterService.CashAndBankBookObj.REPORTMODE == \"2\") {\r\n            this._reportFilterService.CashAndBankBookObj.CashBankBook_REPORTOPTIONDISPLAYNAME = ' @Bank Book Only';\r\n        } else if (this._reportFilterService.CashAndBankBookObj.REPORTMODE == \"0\") {\r\n            this._reportFilterService.CashAndBankBookObj.CashBankBook_REPORTOPTIONDISPLAYNAME = '';\r\n        }\r\n\r\n        if (res == \"ok\") {\r\n            this._reportFilterService.CashAndBankBookObj.assignPrevioiusDate = true;\r\n            let routepaths = this.arouter.url.split('/');\r\n            let activeurlpath2;\r\n            if (routepaths && routepaths.length) {\r\n                activeurlpath2 = routepaths[routepaths.length - 1]\r\n            }\r\n\r\n            if(this._reportFilterService.CashBank_loadedTimes == 0){\r\n                this._reportFilterService.previouslyLoadedReportList.push(\r\n                    {\r\n                        reportname: 'Cash/Bank Book Report',\r\n                        activeurlpath: this.arouter.url,\r\n                        activerurlpath2: activeurlpath2,\r\n                        instanceWiseRepName:this.instanceWiseRepName +this._reportFilterService.CashBank_loadedTimes,\r\n                    });\r\n            }else{\r\n                this._reportFilterService.previouslyLoadedReportList.push(\r\n                    {\r\n                        reportname: 'Cash/Bank Book Report'+'_'+this._reportFilterService.CashBank_loadedTimes,\r\n                        activeurlpath: this.arouter.url,\r\n                        activerurlpath2: activeurlpath2,\r\n                        instanceWiseRepName:this.instanceWiseRepName +this._reportFilterService.CashBank_loadedTimes,\r\n                    });\r\n            }\r\n\r\n        }\r\n\r\n        if (this._reportFilterService.CashAndBankBookObj.ACCNAME = '') {\r\n            this._reportFilterService.CashAndBankBookObj.SingleAccount = '%';\r\n        }\r\n\r\n        this.reportdataEmit.emit({\r\n            status: res, data: {\r\n                REPORTDISPLAYNAME : 'Cash/Bank Book Report',\r\n                reportname: multipleReportFormateName,\r\n                instanceWiseRepName:this.instanceWiseRepName+this._reportFilterService.CashBank_loadedTimes,\r\n                reportparam: {\r\n                    REPORTOPTIONDISPLAYNAME: this._reportFilterService.CashAndBankBookObj.CashBankBook_REPORTOPTIONDISPLAYNAME?this._reportFilterService.CashAndBankBookObj.CashBankBook_REPORTOPTIONDISPLAYNAME:'',\r\n                    DATE1: this._reportFilterService.CashAndBankBookObj.CashBankBook_DATE1,\r\n                    DATE2: this._reportFilterService.CashAndBankBookObj.CashBankBook_DATE2,\r\n                    BSDATE1: this._reportFilterService.CashAndBankBookObj.CashBankBook_BSDATE1,\r\n                    BSDATE2: this._reportFilterService.CashAndBankBookObj.CashBankBook_BSDATE2,\r\n                    DIV: this._reportFilterService.CashAndBankBookObj.CashBankBook_DIV,\r\n                    COMPANYID: this.masterService.userProfile.CompanyInfo.COMPANYID,\r\n                    PHISCALID: this.masterService.PhiscalObj.PhiscalID,\r\n                    REPORTMODE: this._reportFilterService.CashAndBankBookObj.REPORTMODE,\r\n                    DETAILREPORT: this._reportFilterService.CashAndBankBookObj.CashBankBook_DETAILREPORT ? this._reportFilterService.CashAndBankBookObj.CashBankBook_DETAILREPORT : \"0\",\r\n                    ACID: this._reportFilterService.CashAndBankBookObj.SingleAccount ? this._reportFilterService.CashAndBankBookObj.SingleAccount : '%',\r\n                    ACNAME: this._reportFilterService.CashAndBankBookObj.ACCNAME,\r\n                    DIVISIONNAME : this._reportFilterService.CashAndBankBookObj.CashBankBook_DIVISIONNAME ? this._reportFilterService.CashAndBankBookObj.CashBankBook_DIVISIONNAME : '',\r\n                    SUMMARYREPORTDISPLAYNAME:this._reportFilterService.CashAndBankBookObj.CashBankBook_SUMMARYREPORTDISPLAYNAME?this._reportFilterService.CashAndBankBookObj.CashBankBook_SUMMARYREPORTDISPLAYNAME:'',\r\n                    INCLUDEPOSTEDTRANSACTION :this._reportFilterService.CashAndBankBookObj.CashBankBook_INCLUDEPOSTDATE ? this._reportFilterService.CashAndBankBookObj.CashBankBook_INCLUDEPOSTDATE:0\r\n                }\r\n            }\r\n        })\r\n        this._reportFilterService.CashBank_loadedTimes = this._reportFilterService.CashBank_loadedTimes+1;\r\n    }\r\n\r\n    checkReportMode() {\r\n        this._reportFilterService.CashAndBankBookObj.ACCNAME = \"\";\r\n        this._reportFilterService.CashAndBankBookObj.ACCODE = \"\";\r\n        this._reportFilterService.CashAndBankBookObj.ACID = \"\";\r\n        this._reportFilterService.CashAndBankBookObj.SingleAccount = \"\";\r\n    }\r\n\r\n    checkSummary() {\r\n        if (this._reportFilterService.CashAndBankBookObj.CashBankBook_DETAILREPORT == \"0\") {\r\n            this.acname = this._reportFilterService.CashAndBankBookObj.ACCNAME;\r\n            this._reportFilterService.CashAndBankBookObj.ACCNAME = \"\";\r\n            this.accode = this._reportFilterService.CashAndBankBookObj.ACCODE;\r\n            this._reportFilterService.CashAndBankBookObj.ACCODE = \"\";\r\n            this._reportFilterService.CashAndBankBookObj.ACID = \"\";\r\n            this._reportFilterService.CashAndBankBookObj.SingleAccount = \"\";\r\n        } else {\r\n            if (this._reportFilterService.CashAndBankBookObj.REPORTMODE == \"1\") {\r\n                this._reportFilterService.CashAndBankBookObj.ACCNAME = this.acname;\r\n                this._reportFilterService.CashAndBankBookObj.ACCODE = this.accode;\r\n                this._reportFilterService.CashAndBankBookObj.SingleAccount = this.accode;\r\n            }\r\n        }\r\n\r\n        if (this._reportFilterService.CashAndBankBookObj.CashBankBook_DETAILREPORT == \"1\") {\r\n            this._reportFilterService.CashAndBankBookObj.REPORTMODE = \"1\";\r\n        }\r\n    }\r\n\r\n    AccountEnterClicked() {\r\n        if (this._reportFilterService.CashAndBankBookObj.REPORTMODE == '1') {\r\n            this.gridPopupSettingsForAccountList = this.masterService.getGenericGridPopUpSettings('CashBookList');\r\n        } else if (this._reportFilterService.CashAndBankBookObj.REPORTMODE == '2') {\r\n            this.gridPopupSettingsForAccountList = this.masterService.getGenericGridPopUpSettings('BankBookList');\r\n        }\r\n        this.genericGridCashBankBook.show();\r\n    }\r\n\r\n    dblClickAccountSelect(account) {\r\n        this._reportFilterService.CashAndBankBookObj.ACID = account.ACID;\r\n        this._reportFilterService.CashAndBankBookObj.ACCNAME = account.ACNAME;\r\n        this._reportFilterService.CashAndBankBookObj.SingleAccount = account.ACID;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/pages/ReportDialogs/CashAndBankBookReport/cash-and-bank-book-report.component.ts","import { Component, Output, Inject, EventEmitter } from '@angular/core';\r\nimport { MasterRepo } from '../../../common/repositories';\r\nimport {MdDialogRef, MD_DIALOG_DATA} from '@angular/material';\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { Division } from '../../../common/interfaces';\r\n\r\n\r\n\r\nexport interface DialogInfo{\r\n    header: string;\r\n    message: Observable<string>;\r\n\r\n}\r\n\r\n@Component({\r\n    selector : 'result-cashbookreport-dialog',\r\n    template: require('./cashbookreport.component.html'),\r\n    styles: [require('../../Reports/reportStyle.css'),require('../../modal-style.css')]\r\n\r\n})\r\n\r\nexport class CashBookReport{\r\n ReportParameters:any=<any>{};\r\n division: any[]=[];   \r\n cashAccount: any[]=[];\r\n \r\n    @Output() reportdataEmit = new EventEmitter();\r\n    constructor(private masterService: MasterRepo,public dialogref:MdDialogRef<CashBookReport>, @Inject(MD_DIALOG_DATA) public data: DialogInfo){\r\n        \r\n        //--------Default value on load\r\n        this.ReportParameters.DATE1 = new Date().toJSON().split('T')[0];\r\n        this.changestartDate(this.ReportParameters.DATE1,'AD');\r\n        this.ReportParameters.DATE2 = new Date().toJSON().split('T')[0];\r\n        this.changeEndDate(this.ReportParameters.DATE2,'AD');\r\n        \r\n        this.ReportParameters.MergeVatAc = \"0\";\r\n        this.ReportParameters.DIVISION = \"%\";\r\n        this.ReportParameters.CASH_ACID = \"%\";\r\n        //--------------------\r\n        \r\n        this.division=[];\r\n        this.masterService.getAllDivisions()\r\n          .subscribe(res => {\r\n            //////console.log(\"div\" + JSON.stringify(res));\r\n            this.division.push(<Division>res);                \r\n          }, error => {\r\n            this.masterService.resolveError(error, \"divisions - getDivisions\");\r\n        });\r\n        \r\n        this.cashAccount = [];\r\n        this.masterService.getCashList()\r\n        .subscribe(res => {\r\n            //////console.log(\"cash\" + JSON.stringify(res));\r\n            this.cashAccount =res;\r\n        })\r\n              \r\n    }\r\n\r\n    onload()\r\n    {\r\n        this.DialogClosedResult(\"ok\");\r\n    }\r\n\r\n    closeReportBox(){\r\n        this.DialogClosedResult(\"error\");\r\n    }\r\n\r\n   public DialogClosedResult(res) {\r\n\r\n    this.ReportParameters.DIVISION = (this.ReportParameters.DIVISION == null || this.ReportParameters.DIVISION == \"\")?\"%\":this.ReportParameters.DIVISION;\r\n    this.ReportParameters.CASH_ACID = (this.ReportParameters.CASH_ACID == null || this.ReportParameters.CASH_ACID ==\"\")?\"%\":this.ReportParameters.CASH_ACID; \r\n\r\n    //alert(this.ReportParameters.DIVISION + \"~~~\" + this.ReportParameters.CASH_ACID);\r\n    this.reportdataEmit.emit({ status: res, data: {reportname:'Cash Book Report', reportparam:this.ReportParameters}});\r\n      \r\n    }\r\n\r\n    changestartDate(value, format: string) {\r\n        try{\r\n            var adbs = require(\"ad-bs-converter\");\r\n            if (format == \"AD\") {\r\n                var adDate = (value.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n                var bsDate = adbs.ad2bs(adDate);\r\n                this.ReportParameters.BSDATE1 = this.masterService.toBSDate(value);\r\n                \r\n            }\r\n            else if (format == \"BS\") {\r\n                var bsDate = (value.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n                var adDate = adbs.bs2ad(bsDate);  \r\n                this.ReportParameters.DATE1 = this.masterService.toADDate(value);          \r\n            }\r\n        }catch(e){}\r\n      \r\n    }\r\n    changeEndDate(value, format: string) {\r\n        try{\r\n            var adbs = require(\"ad-bs-converter\");\r\n            if (format == \"AD\") {\r\n                var adDate = (value.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n                var bsDate = adbs.ad2bs(adDate);         \r\n                this.ReportParameters.BSDATE2 = this.masterService.toBSDate(value);\r\n            }\r\n            else if (format == \"BS\") {\r\n                var bsDate = (value.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n                var adDate = adbs.bs2ad(bsDate);         \r\n                this.ReportParameters.DATE2 = this.masterService.toADDate(value);\r\n    \r\n            }\r\n        }\r\n          catch(e){}\r\n      \r\n    }                                                                                                     \r\n\r\n\r\n    dateString: any = '';\r\n    date1: any = '';\r\n    daysPrior: any = '';\r\n    dateId: any = '';\r\n    finalDate: any= '';\r\n    changeDateByRange(value:any){\r\n\r\n        if (value == \"1\"){\r\n            //alert(\"week selected!!\"); yy-mm-dd\r\n            \r\n            this.dateId = 7;\r\n            this.dateString = \"\"+ this.getCurrentDate() +\"\";\r\n            this.date1 = new Date(this.dateString);\r\n            this.daysPrior = parseInt(this.dateId);\r\n            this.date1.setDate(this.date1.getDate() - this.daysPrior);\r\n            this.finalDate =  (this.date1.toISOString().slice(0, 11).replace('T', ' '));\r\n\r\n            //alert(this.finalDate);\r\n            this.ReportParameters.DATE1 = (this.finalDate).trim();\r\n            this.changestartDate(this.ReportParameters.DATE1,'AD');\r\n \r\n        }\r\n         else if (value == \"2\"){\r\n        //     //alert(\"month selected!!\");\r\n            this.dateId = 30;\r\n            this.dateString = \"\"+ this.getCurrentDate() +\"\";\r\n            this.date1 = new Date(this.dateString);\r\n            this.daysPrior = parseInt(this.dateId);\r\n            this.date1.setDate(this.date1.getDate() - this.daysPrior);\r\n            this.finalDate =  (this.date1.toISOString().slice(0, 11).replace('T', ' '));\r\n\r\n            //alert(this.finalDate);\r\n            this.ReportParameters.DATE1 = (this.finalDate).trim();\r\n            this.changestartDate(this.ReportParameters.DATE1,'AD');\r\n         }\r\n        else{\r\n        // alert(\"year selected\");\r\n        this.dateId = 365;\r\n        this.dateString = \"\"+ this.getCurrentDate() +\"\";\r\n        this.date1 = new Date(this.dateString);\r\n        this.daysPrior = parseInt(this.dateId);\r\n        this.date1.setDate(this.date1.getDate() - this.daysPrior);\r\n        this.finalDate =  (this.date1.toISOString().slice(0, 11).replace('T', ' '));\r\n\r\n        //alert(this.finalDate);\r\n        this.ReportParameters.DATE1 = (this.finalDate).trim();\r\n        this.changestartDate(this.ReportParameters.DATE1,'AD');\r\n         }\r\n    }\r\n\r\n\r\n    dd: any;\r\n    mm: any;\r\n    yyyy: any;\r\n    today: any;\r\n    getCurrentDate(){\r\n        this.today = new Date();\r\n        this.dd = this.today.getDate();\r\n        this.mm = this.today.getMonth() + 1; //January is 0!\r\n    \r\n        this.yyyy = this.today.getFullYear();\r\n        if (this.dd < 10) {\r\n            this.dd = '0' + this.dd;\r\n        }\r\n        if (this.mm < 10) {\r\n            this.mm = '0' + this.mm;\r\n        }\r\n        this.today = this.mm + '/' + this.dd + '/' + this.yyyy;\r\n               \r\n        return this.today;\r\n    }\r\n\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/pages/ReportDialogs/CashBookReport/cashbookreport.component.ts","import { Component, Inject, Output, EventEmitter, OnInit } from '@angular/core';\r\nimport { MdDialogRef, MD_DIALOG_DATA } from '@angular/material';\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { MasterRepo } from '../../../common/repositories';\r\nimport { Division } from '../../../common/interfaces';\r\nimport { AuthService } from '../../../common/services/permission/authService.service';\r\nimport { ReportMainService } from '../../Reports/components/ReportMain/ReportMain.service';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { AlertService } from '../../../common/services/alert/alert.service';\r\n\r\nexport interface DialogInfo {\r\n    header: string;\r\n    message: Observable<string>;\r\n}\r\n\r\n@Component({\r\n    selector: 'consolidated-balance-sheet-report',\r\n    template: require('./consolidated-balance-sheet-report.component.html'),\r\n    styles: [require('../../Reports/reportStyle.css'), require('../../modal-style.css')],\r\n})\r\n\r\nexport class ConsolidatedBalanceSheetReport implements OnInit {\r\n    division: any[] = [];\r\n    userProfile: any;\r\n    date1: any;\r\n    date2: any;\r\n    instanceWiseRepName: string = 'Consolidated Balance Sheet Report';\r\n    userSetting: any;\r\n\r\n    @Output() reportdataEmit = new EventEmitter();\r\n    constructor(private masterService: MasterRepo, private _authService: AuthService,\r\n        private _reportFilterService: ReportMainService, private arouter: Router, private alertService: AlertService,\r\n        public dialogref: MdDialogRef<ConsolidatedBalanceSheetReport>, public _ActivatedRoute: ActivatedRoute,\r\n        @Inject(MD_DIALOG_DATA) public data: DialogInfo) {\r\n        this.userProfile = this._authService.getUserProfile();\r\n        this.userSetting = _authService.getSetting();\r\n        this.division = [];\r\n        if (this.masterService.userSetting.userwisedivision == 1) {\r\n            this.masterService.getDivisionFromRightPrivelege().subscribe(res => {\r\n                if (res.status == 'ok') {\r\n                    this.division = res.result;\r\n                }\r\n            })\r\n        }\r\n        else {\r\n            this.masterService.getAllDivisions()\r\n                .subscribe(res => {\r\n                    this.division.push(<Division>res);\r\n                }, error => {\r\n                    this.masterService.resolveError(error, \"divisions - getDivisions\");\r\n                });\r\n        }\r\n\r\n        this.masterService.getAccDivList();\r\n\r\n    }\r\n\r\n    ngOnInit() {\r\n        this._ActivatedRoute.queryParams.subscribe(params => {\r\n            if (this._reportFilterService.ConsolidatedBalanceSheetObj.assignPrevioiusDate != true) {\r\n                this._reportFilterService.ConsolidatedBalanceSheetObj.Consolidated_BalanceSheet_DATE1 = this.masterService.PhiscalObj.BeginDate.split('T')[0];\r\n                if (this.userProfile.CompanyInfo.ActualFY == this.masterService.PhiscalObj.PhiscalID) {\r\n                    this._reportFilterService.ConsolidatedBalanceSheetObj.Consolidated_BalanceSheet_DATE2  = new Date().toJSON().split('T')[0];\r\n                  }\r\n                  else {\r\n                    this._reportFilterService.ConsolidatedBalanceSheetObj.Consolidated_BalanceSheet_DATE2 = this.masterService.PhiscalObj.EndDate.split('T')[0];\r\n                }\r\n               \r\n                this._reportFilterService.ConsolidatedBalanceSheetObj.Consolidated_BalanceSheet_SHOWTOTALINGROUP = 1;\r\n                this._reportFilterService.ConsolidatedBalanceSheetObj.Consolidated_BalanceSheet_SHOWDEBTORSCREDITORS = 0;\r\n                if (this.userSetting.IS_NESTLE == 1) {\r\n                    this._reportFilterService.ConsolidatedBalanceSheetObj.Consolidated_BalanceSheet_COMPANYTYPE = 'DMS';\r\n                } else {\r\n                    this._reportFilterService.ConsolidatedBalanceSheetObj.Consolidated_BalanceSheet_COMPANYTYPE = 'NONDMS';\r\n                }\r\n            }\r\n\r\n            if (params.instancename) {\r\n                // ////console.log(\"@@[plreport0]\",params.instancename,this._reportFilterService.reportDataStore[params.instancename].param.reportparam)\r\n                this._reportFilterService.ConsolidatedBalanceSheetObj.Consolidated_BalanceSheet_DATE1 = this._reportFilterService.reportDataStore[params.instancename].param.reportparam.DATE1;\r\n                this._reportFilterService.ConsolidatedBalanceSheetObj.Consolidated_BalanceSheet_DATE2 = this._reportFilterService.reportDataStore[params.instancename].param.reportparam.DATE2;\r\n                this._reportFilterService.ConsolidatedBalanceSheetObj.Consolidated_BalanceSheet_SHOWTOTALINGROUP = this._reportFilterService.reportDataStore[params.instancename].param.reportparam.SHOWTOTALINGROUP;\r\n                this._reportFilterService.ConsolidatedBalanceSheetObj.Consolidated_BalanceSheet_SHOWDEBTORSCREDITORS = this._reportFilterService.reportDataStore[params.instancename].param.reportparam.SHOWDEBTORSCREDITORS;\r\n                if (this.userSetting.IS_NESTLE == 1) {\r\n                    this._reportFilterService.ConsolidatedBalanceSheetObj.Consolidated_BalanceSheet_COMPANYTYPE = 'DMS';\r\n                } else {\r\n                    this._reportFilterService.ConsolidatedBalanceSheetObj.Consolidated_BalanceSheet_COMPANYTYPE = 'NONDMS';\r\n                }\r\n            }\r\n        })\r\n\r\n        this.changeEntryDate(this._reportFilterService.ConsolidatedBalanceSheetObj.Consolidated_BalanceSheet_DATE1, \"AD\");\r\n        this.changeEndDate(this._reportFilterService.ConsolidatedBalanceSheetObj.Consolidated_BalanceSheet_DATE2, \"AD\");\r\n\r\n    }\r\n\r\n    changeEntryDate(value, format: string) {\r\n        var adbs = require(\"ad-bs-converter\");\r\n        if (format == \"AD\") {\r\n            var adDate = (value.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n            var bsDate = adbs.ad2bs(adDate);\r\n            this._reportFilterService.ConsolidatedBalanceSheetObj.Consolidated_BalanceSheet_BSDATE1 = this.masterService.toBSDate(value);\r\n        }\r\n        else if (format == \"BS\") {\r\n            var datearr = value.split('/');\r\n            const bsDate = datearr[2] + \"/\" + datearr[1] + \"/\" + datearr[0]\r\n            var adDate = adbs.bs2ad(bsDate);\r\n            var Engdate = this.masterService.toADDate(value);\r\n            const Validatedata = this.masterService.ValidateNepaliDate(Engdate)\r\n            if (Validatedata == true) {\r\n                const bsDate1 = datearr[2] + \"/\" + datearr[1] + \"/\" + datearr[0];\r\n                var adDate1 = adbs.bs2ad(bsDate1);\r\n                this._reportFilterService.ConsolidatedBalanceSheetObj.Consolidated_BalanceSheet_DATE1 = this.masterService.toADDate(value);\r\n            } else {\r\n                this.alertService.error(\"Cannot Change the date\");\r\n                return;\r\n            }\r\n        }\r\n    }\r\n\r\n    changeEndDate(value, format: string) {\r\n        var adbs = require(\"ad-bs-converter\");\r\n        if (format == \"AD\") {\r\n            var adDate = (value.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n            var bsDate = adbs.ad2bs(adDate);\r\n            this._reportFilterService.ConsolidatedBalanceSheetObj.Consolidated_BalanceSheet_BSDATE2 = this.masterService.toBSDate(value);\r\n        }\r\n        else if (format == \"BS\") {\r\n            var datearr = value.split('/');\r\n            const bsDate = datearr[2] + \"/\" + datearr[1] + \"/\" + datearr[0]\r\n            var adDate = adbs.bs2ad(bsDate);\r\n            this._reportFilterService.ConsolidatedBalanceSheetObj.Consolidated_BalanceSheet_DATE2 = this.masterService.toADDate(value);\r\n        }\r\n    }\r\n\r\n    onload() {\r\n        this.DialogClosedResult(\"ok\");\r\n    }\r\n\r\n    closeReportBox() {\r\n        this.DialogClosedResult(\"Error!\");\r\n    }\r\n\r\n    public DialogClosedResult(res) {\r\n\r\n        let multipleReportFormateName = 'Consolidated Balance Sheet Report';\r\n       \r\n        if (res == \"ok\") {\r\n            this._reportFilterService.ConsolidatedBalanceSheetObj.assignPrevioiusDate = true;\r\n            let routepaths = this.arouter.url.split('/');\r\n            let activeurlpath2;\r\n            if (routepaths && routepaths.length) {\r\n                activeurlpath2 = routepaths[routepaths.length - 1]\r\n            }\r\n\r\n            if (this._reportFilterService.Consolidated_BalanceSheet_loadedTimes == 0) {\r\n                this._reportFilterService.previouslyLoadedReportList.push(\r\n                    {\r\n                        reportname: 'Consolidated Balance Sheet Report',\r\n                        activeurlpath: this.arouter.url,\r\n                        activerurlpath2: activeurlpath2,\r\n                        instanceWiseRepName: this.instanceWiseRepName + this._reportFilterService.Consolidated_BalanceSheet_loadedTimes,\r\n                    });\r\n            } else {\r\n                this._reportFilterService.previouslyLoadedReportList.push(\r\n                    {\r\n                        reportname: 'Consolidated Balance Sheet Report' + '_' + this._reportFilterService.Consolidated_BalanceSheet_loadedTimes,\r\n                        activeurlpath: this.arouter.url,\r\n                        activerurlpath2: activeurlpath2,\r\n                        instanceWiseRepName: this.instanceWiseRepName + this._reportFilterService.Consolidated_BalanceSheet_loadedTimes,\r\n                    });\r\n            }\r\n\r\n        }\r\n\r\n        this.reportdataEmit.emit({\r\n            status: res, data: {\r\n                REPORTDISPLAYNAME: 'Consolidated Balance Sheet Report',\r\n                reportname: multipleReportFormateName,\r\n                instanceWiseRepName: this.instanceWiseRepName + this._reportFilterService.Consolidated_BalanceSheet_loadedTimes,\r\n                reportparam: {\r\n                    DATE1: this._reportFilterService.ConsolidatedBalanceSheetObj.Consolidated_BalanceSheet_DATE1,\r\n                    DATE2: this._reportFilterService.ConsolidatedBalanceSheetObj.Consolidated_BalanceSheet_DATE2,\r\n                    BSDATE1: this._reportFilterService.ConsolidatedBalanceSheetObj.Consolidated_BalanceSheet_BSDATE1,\r\n                    BSDATE2: this._reportFilterService.ConsolidatedBalanceSheetObj.Consolidated_BalanceSheet_BSDATE2,\r\n                    PHISCALID: this.masterService.PhiscalObj.PhiscalID,\r\n                    CID: this.masterService.userProfile.CompanyInfo.COMPANYID,\r\n                    SHOWTOTALINGROUP: this._reportFilterService.ConsolidatedBalanceSheetObj.Consolidated_BalanceSheet_SHOWTOTALINGROUP ? this._reportFilterService.ConsolidatedBalanceSheetObj.Consolidated_BalanceSheet_SHOWTOTALINGROUP : 0,\r\n                    COMPANYID: this.masterService.userProfile.CompanyInfo.COMPANYID,\r\n                    COMPANYTYPE: this._reportFilterService.ConsolidatedBalanceSheetObj.Consolidated_BalanceSheet_COMPANYTYPE ? this._reportFilterService.ConsolidatedBalanceSheetObj.Consolidated_BalanceSheet_COMPANYTYPE : 'NONDMS',\r\n                    SHOWDEBTORSCREDITORS: this._reportFilterService.ConsolidatedBalanceSheetObj.Consolidated_BalanceSheet_SHOWDEBTORSCREDITORS ? this._reportFilterService.ConsolidatedBalanceSheetObj.Consolidated_BalanceSheet_SHOWDEBTORSCREDITORS :0,\r\n                }\r\n            }\r\n        });\r\n\r\n        if (res == \"ok\") {\r\n            this._reportFilterService.Consolidated_BalanceSheet_loadedTimes = this._reportFilterService.Consolidated_BalanceSheet_loadedTimes + 1;\r\n        }\r\n    }\r\n\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/pages/ReportDialogs/Consolidated-Balance-Sheet-Report/consolidated-balance-sheet-report.component.ts","import { Component, Inject, Output, EventEmitter, OnInit } from '@angular/core';\r\nimport { MdDialogRef, MD_DIALOG_DATA } from '@angular/material';\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { MasterRepo } from '../../../common/repositories';\r\nimport { Division } from '../../../common/interfaces';\r\nimport { AuthService } from '../../../common/services/permission/authService.service';\r\nimport { ReportMainService } from '../../Reports/components/ReportMain/ReportMain.service';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { AlertService } from '../../../common/services/alert/alert.service';\r\n\r\nexport interface DialogInfo {\r\n    header: string;\r\n    message: Observable<string>;\r\n}\r\n\r\n@Component({\r\n    selector: 'consolidated-profit-loss-report',\r\n    template: require('./consolidated-profit-loss-report.component.html'),\r\n    styles: [require('../../Reports/reportStyle.css'), require('../../modal-style.css')],\r\n})\r\n\r\nexport class ConsolidatedProfitLossReport implements OnInit {\r\n    division: any[] = [];\r\n    userProfile: any;\r\n    date1: any;\r\n    date2: any;\r\n    instanceWiseRepName: string = 'Consolidated Profit and Loss Report';\r\n    userSetting: any;\r\n\r\n    @Output() reportdataEmit = new EventEmitter();\r\n    constructor(private masterService: MasterRepo, private _authService: AuthService,\r\n        private _reportFilterService: ReportMainService, private arouter: Router, private alertService: AlertService,\r\n        public dialogref: MdDialogRef<ConsolidatedProfitLossReport>, public _ActivatedRoute: ActivatedRoute,\r\n        @Inject(MD_DIALOG_DATA) public data: DialogInfo) {\r\n        this.userProfile = this._authService.getUserProfile();\r\n        this.userSetting = _authService.getSetting();\r\n        this.division = [];\r\n        if (this.masterService.userSetting.userwisedivision == 1) {\r\n            this.masterService.getDivisionFromRightPrivelege().subscribe(res => {\r\n                if (res.status == 'ok') {\r\n                    this.division = res.result;\r\n                }\r\n            })\r\n        }\r\n        else {\r\n            this.masterService.getAllDivisions()\r\n                .subscribe(res => {\r\n                    this.division.push(<Division>res);\r\n                }, error => {\r\n                    this.masterService.resolveError(error, \"divisions - getDivisions\");\r\n                });\r\n        }\r\n\r\n        this.masterService.getAccDivList();\r\n\r\n    }\r\n\r\n    ngOnInit() {\r\n        this._ActivatedRoute.queryParams.subscribe(params => {\r\n            if (this._reportFilterService.ConsolidatedProfitLossObj.assignPrevioiusDate != true) {\r\n                this._reportFilterService.ConsolidatedProfitLossObj.Consolidated_ProfitLoss_DATE1 = this.masterService.PhiscalObj.BeginDate.split('T')[0];\r\n                if (this.userProfile.CompanyInfo.ActualFY == this.masterService.PhiscalObj.PhiscalID) {\r\n                    this._reportFilterService.ConsolidatedProfitLossObj.Consolidated_ProfitLoss_DATE2  = new Date().toJSON().split('T')[0];\r\n                  }\r\n                  else {\r\n                    this._reportFilterService.ConsolidatedProfitLossObj.Consolidated_ProfitLoss_DATE2 = this.masterService.PhiscalObj.EndDate.split('T')[0];\r\n                }\r\n               \r\n                this._reportFilterService.ConsolidatedProfitLossObj.Consolidated_ProfitLoss_SHOWTOTALINGROUP = 1;\r\n                this._reportFilterService.ConsolidatedProfitLossObj.Consolidated_ProfitLoss_COSTCENTERWISE = 0;\r\n              \r\n                if (this.userSetting.IS_NESTLE == 1) {\r\n                    this._reportFilterService.ConsolidatedProfitLossObj.Consolidated_ProfitLoss_COMPANYTYPE = 'DMS';\r\n                } else {\r\n                    this._reportFilterService.ConsolidatedProfitLossObj.Consolidated_ProfitLoss_COMPANYTYPE = 'NONDMS';\r\n                }\r\n            }\r\n\r\n            if (params.instancename) {\r\n                // ////console.log(\"@@[plreport0]\",params.instancename,this._reportFilterService.reportDataStore[params.instancename].param.reportparam)\r\n                this._reportFilterService.ConsolidatedProfitLossObj.Consolidated_ProfitLoss_DATE1 = this._reportFilterService.reportDataStore[params.instancename].param.reportparam.DATE1;\r\n                this._reportFilterService.ConsolidatedProfitLossObj.Consolidated_ProfitLoss_DATE2 = this._reportFilterService.reportDataStore[params.instancename].param.reportparam.DATE2;\r\n                this._reportFilterService.ConsolidatedProfitLossObj.Consolidated_ProfitLoss_SHOWTOTALINGROUP = this._reportFilterService.reportDataStore[params.instancename].param.reportparam.SHOWTOTALINGROUP;\r\n                this._reportFilterService.ConsolidatedProfitLossObj.Consolidated_ProfitLoss_COSTCENTERWISE = this._reportFilterService.reportDataStore[params.instancename].param.reportparam.COSTCENTERWISE;\r\n    \r\n                if (this.userSetting.IS_NESTLE == 1) {\r\n                    this._reportFilterService.ConsolidatedProfitLossObj.Consolidated_ProfitLoss_COMPANYTYPE = 'DMS';\r\n                } else {\r\n                    this._reportFilterService.ConsolidatedProfitLossObj.Consolidated_ProfitLoss_COMPANYTYPE = 'NONDMS';\r\n                }\r\n            }\r\n        })\r\n\r\n        this.changeEntryDate(this._reportFilterService.ConsolidatedProfitLossObj.Consolidated_ProfitLoss_DATE1, \"AD\");\r\n        this.changeEndDate(this._reportFilterService.ConsolidatedProfitLossObj.Consolidated_ProfitLoss_DATE2, \"AD\");\r\n\r\n    }\r\n\r\n    changeEntryDate(value, format: string) {\r\n        var adbs = require(\"ad-bs-converter\");\r\n        if (format == \"AD\") {\r\n            var adDate = (value.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n            var bsDate = adbs.ad2bs(adDate);\r\n            this._reportFilterService.ConsolidatedProfitLossObj.Consolidated_ProfitLoss_BSDATE1 = this.masterService.toBSDate(value);\r\n        }\r\n        else if (format == \"BS\") {\r\n            var datearr = value.split('/');\r\n            const bsDate = datearr[2] + \"/\" + datearr[1] + \"/\" + datearr[0]\r\n            var adDate = adbs.bs2ad(bsDate);\r\n            var Engdate = this.masterService.toADDate(value);\r\n            const Validatedata = this.masterService.ValidateNepaliDate(Engdate)\r\n            if (Validatedata == true) {\r\n                const bsDate1 = datearr[2] + \"/\" + datearr[1] + \"/\" + datearr[0];\r\n                var adDate1 = adbs.bs2ad(bsDate1);\r\n                this._reportFilterService.ConsolidatedProfitLossObj.Consolidated_ProfitLoss_DATE1 = this.masterService.toADDate(value);\r\n            } else {\r\n                this.alertService.error(\"Cannot Change the date\");\r\n                return;\r\n            }\r\n        }\r\n    }\r\n\r\n    changeEndDate(value, format: string) {\r\n        var adbs = require(\"ad-bs-converter\");\r\n        if (format == \"AD\") {\r\n            var adDate = (value.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n            var bsDate = adbs.ad2bs(adDate);\r\n            this._reportFilterService.ConsolidatedProfitLossObj.Consolidated_ProfitLoss_BSDATE2 = this.masterService.toBSDate(value);\r\n        }\r\n        else if (format == \"BS\") {\r\n            var datearr = value.split('/');\r\n            const bsDate = datearr[2] + \"/\" + datearr[1] + \"/\" + datearr[0]\r\n            var adDate = adbs.bs2ad(bsDate);\r\n            this._reportFilterService.ConsolidatedProfitLossObj.Consolidated_ProfitLoss_DATE2 = this.masterService.toADDate(value);\r\n        }\r\n    }\r\n\r\n    onload() {\r\n        this.DialogClosedResult(\"ok\");\r\n    }\r\n\r\n    closeReportBox() {\r\n        this.DialogClosedResult(\"Error!\");\r\n    }\r\n\r\n    public DialogClosedResult(res) {\r\n\r\n        let multipleReportFormateName = 'Consolidated Profit and Loss Report';\r\n       \r\n        if (res == \"ok\") {\r\n            this._reportFilterService.ConsolidatedProfitLossObj.assignPrevioiusDate = true;\r\n            let routepaths = this.arouter.url.split('/');\r\n            let activeurlpath2;\r\n            if (routepaths && routepaths.length) {\r\n                activeurlpath2 = routepaths[routepaths.length - 1]\r\n            }\r\n\r\n            if (this._reportFilterService. Consolidated_ProfitLoss_loadedTimes == 0) {\r\n                this._reportFilterService.previouslyLoadedReportList.push(\r\n                    {\r\n                        reportname: 'Consolidated Profit and Loss Report',\r\n                        activeurlpath: this.arouter.url,\r\n                        activerurlpath2: activeurlpath2,\r\n                        instanceWiseRepName: this.instanceWiseRepName + this._reportFilterService. Consolidated_ProfitLoss_loadedTimes,\r\n                    });\r\n            } else {\r\n                this._reportFilterService.previouslyLoadedReportList.push(\r\n                    {\r\n                        reportname: 'Consolidated Profit and Loss Report' + '_' + this._reportFilterService. Consolidated_ProfitLoss_loadedTimes,\r\n                        activeurlpath: this.arouter.url,\r\n                        activerurlpath2: activeurlpath2,\r\n                        instanceWiseRepName: this.instanceWiseRepName + this._reportFilterService. Consolidated_ProfitLoss_loadedTimes,\r\n                    });\r\n            }\r\n\r\n        }\r\n\r\n        this.reportdataEmit.emit({\r\n            status: res, data: {\r\n                REPORTDISPLAYNAME: 'Consolidated Profit and Loss Report',\r\n                reportname: multipleReportFormateName,\r\n                instanceWiseRepName: this.instanceWiseRepName + this._reportFilterService. Consolidated_ProfitLoss_loadedTimes,\r\n                reportparam: {\r\n                    DATE1: this._reportFilterService.ConsolidatedProfitLossObj.Consolidated_ProfitLoss_DATE1,\r\n                    DATE2: this._reportFilterService.ConsolidatedProfitLossObj.Consolidated_ProfitLoss_DATE2,\r\n                    BSDATE1: this._reportFilterService.ConsolidatedProfitLossObj.Consolidated_ProfitLoss_BSDATE1,\r\n                    BSDATE2: this._reportFilterService.ConsolidatedProfitLossObj.Consolidated_ProfitLoss_BSDATE2,\r\n                    PHISCALID: this.masterService.PhiscalObj.PhiscalID,\r\n                    CID: this.masterService.userProfile.CompanyInfo.COMPANYID,\r\n                    COSTCENTERWISE: this._reportFilterService.ConsolidatedProfitLossObj.Consolidated_ProfitLoss_COSTCENTERWISE,\r\n                    SHOWTOTALINGROUP: this._reportFilterService.ConsolidatedProfitLossObj.Consolidated_ProfitLoss_SHOWTOTALINGROUP ? this._reportFilterService.ConsolidatedProfitLossObj.Consolidated_ProfitLoss_SHOWTOTALINGROUP : 0,\r\n                    COMPANYID: this.masterService.userProfile.CompanyInfo.COMPANYID,\r\n                    COMPANYTYPE: this._reportFilterService.ConsolidatedProfitLossObj.Consolidated_ProfitLoss_COMPANYTYPE ? this._reportFilterService.ConsolidatedProfitLossObj.Consolidated_ProfitLoss_COMPANYTYPE : 'NONDMS',\r\n                }\r\n            }\r\n        });\r\n\r\n        if (res == \"ok\") {\r\n            this._reportFilterService. Consolidated_ProfitLoss_loadedTimes = this._reportFilterService. Consolidated_ProfitLoss_loadedTimes + 1;\r\n        }\r\n    }\r\n\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/pages/ReportDialogs/Consolidated-Profit&Loss-Report/consolidated-profit-loss-report.component.ts","import { NgaModule } from '../../../theme/nga.module';\r\nimport { Component, Inject, Output, EventEmitter, OnInit } from '@angular/core';\r\nimport { MdDialogRef, MD_DIALOG_DATA } from '@angular/material';\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { MasterRepo } from '../../../common/repositories';\r\nimport { Division } from '../../../common/interfaces';\r\nimport { AuthService } from '../../../common/services/permission/authService.service';\r\nimport { ReportMainService } from '../../Reports/components/ReportMain/ReportMain.service';\r\nimport { Router, NavigationEnd, ActivatedRoute } from '@angular/router';\r\nimport { AlertService } from '../../../common/services/alert/alert.service';\r\n\r\nexport interface DialogInfo {\r\n    header: string;\r\n    message: Observable<string>;\r\n}\r\n\r\n@Component({\r\n    selector: 'consolidated-trial-balance-report',\r\n    template: require('./consolidated-trial-balance-report.component.html'),\r\n    styles: [require('../../Reports/reportStyle.css'), require('../../modal-style.css')],\r\n})\r\n\r\nexport class ConsolidatedTrialBalanceReport implements OnInit {\r\n    // ReportParameters: any = <any>{};\r\n    division: any[] = [];\r\n    CostcenterList: any[] = [];\r\n    userProfile: any;\r\n    date1: any;\r\n    date2: any;\r\n    instanceWiseRepName:string='Consolidated Trial Balance Report';\r\n    userSetting: any;\r\n\r\n    @Output() reportdataEmit = new EventEmitter();\r\n    constructor(private masterService: MasterRepo, private _authService: AuthService,\r\n        private _reportFilterService: ReportMainService, private arouter: Router,private alertService: AlertService,\r\n         public _ActivatedRoute: ActivatedRoute,\r\n        public dialogref: MdDialogRef<ConsolidatedTrialBalanceReport>,\r\n        @Inject(MD_DIALOG_DATA) public data: DialogInfo) {\r\n        this.userProfile = this._authService.getUserProfile();\r\n        this.userSetting = _authService.getSetting();\r\n        this.division = [];\r\n        \r\n        if (this.masterService.userSetting.userwisedivision == 1) {\r\n            this.masterService.getDivisionFromRightPrivelege().subscribe(res => {\r\n                if (res.status == 'ok') {\r\n                    this.division = res.result;\r\n                }\r\n            })\r\n        }\r\n        else {\r\n            this.masterService.getAllDivisions()\r\n                .subscribe(res => {\r\n                    this.division.push(<Division>res);\r\n                }, error => {\r\n                    this.masterService.resolveError(error, \"divisions - getDivisions\");\r\n                });\r\n        }\r\n\r\n        this.masterService.getCostcenter().subscribe(res => {\r\n            this.CostcenterList = res;\r\n        })\r\n        this.masterService.getAccDivList();\r\n\r\n    }\r\n\r\n    ngOnInit() {\r\n        this._ActivatedRoute.queryParams.subscribe(params => {\r\n            if (this._reportFilterService.ConsolidatedTrialBalanceObj.assignPrevioiusDate != true) {\r\n            this._reportFilterService.ConsolidatedTrialBalanceObj.Consolidated_TrialBalance_DATE1 = this.masterService.PhiscalObj.BeginDate.split('T')[0];\r\n            this._reportFilterService.ConsolidatedTrialBalanceObj.Consolidated_TrialBalance_DATE2 = this.masterService.PhiscalObj.EndDate.split('T')[0];\r\n                // this._reportFilterService.ConsolidatedTrialBalanceObj.Consolidated_TrialBalance_DIV = this.masterService.userProfile.CompanyInfo.INITIAL;\r\n                this._reportFilterService.ConsolidatedTrialBalanceObj.Consolidated_TrialBalance_CostCenter = '%';\r\n                this._reportFilterService.ConsolidatedTrialBalanceObj.Consolidated_TrialBalance_LEDGERWISE = '0';\r\n                this._reportFilterService.ConsolidatedTrialBalanceObj.Consolidated_TrialBalance_SHOWNETCLOSING = 1;\r\n                \r\n            }\r\n\r\n            if(params.instancename){\r\n                //console.log(\"@@[trial bln Report0]\",params.instancename,this._reportFilterService.reportDataStore[params.instancename].param.reportparam)\r\n                this._reportFilterService.ConsolidatedTrialBalanceObj.Consolidated_TrialBalance_DATE1=this._reportFilterService.reportDataStore[params.instancename].param.reportparam.DATE1;\r\n                this._reportFilterService.ConsolidatedTrialBalanceObj.Consolidated_TrialBalance_DATE2=this._reportFilterService.reportDataStore[params.instancename].param.reportparam.DATE2;\r\n                // this._reportFilterService.ConsolidatedTrialBalanceObj.Consolidated_TrialBalance_DIV=this._reportFilterService.reportDataStore[params.instancename].param.reportparam.DIV;\r\n                this._reportFilterService.ConsolidatedTrialBalanceObj.Consolidated_TrialBalance_CostCenter=this._reportFilterService.reportDataStore[params.instancename].param.reportparam.COSTCENTER;\r\n                this._reportFilterService.ConsolidatedTrialBalanceObj.Consolidated_TrialBalance_LEDGERWISE=this._reportFilterService.reportDataStore[params.instancename].param.reportparam.LEDGERWISE;\r\n                this._reportFilterService.ConsolidatedTrialBalanceObj.Consolidated_TrialBalance_SHOWDEBTORSCREDITORSDETAILS=this._reportFilterService.reportDataStore[params.instancename].param.reportparam.SHOWDEBTORSCREDITORSDETAILS;\r\n                this._reportFilterService.ConsolidatedTrialBalanceObj.Consolidated_TrialBalance_SHOWOPENINGTRIALONLY=this._reportFilterService.reportDataStore[params.instancename].param.reportparam.SHOWOPENINGTRIALONLY;\r\n                this._reportFilterService.ConsolidatedTrialBalanceObj.Consolidated_TrialBalance_SHOWSTOCKVALUE=this._reportFilterService.reportDataStore[params.instancename].param.reportparam.SHOWSTOCKVALUE;\r\n                this._reportFilterService.ConsolidatedTrialBalanceObj.Consolidated_TrialBalance_SHOWSUBLEDGER=this._reportFilterService.reportDataStore[params.instancename].param.reportparam.SHOWSUBLEDGER;\r\n                // this._reportFilterService.ConsolidatedTrialBalanceObj.Consolidated_TrialBalance_SHOWZEROBL=this._reportFilterService.reportDataStore[params.instancename].param.reportparam.SHOWZEROBL;\r\n                this._reportFilterService.ConsolidatedTrialBalanceObj.Consolidated_TrialBalance_SHOWNETCLOSING = this._reportFilterService.reportDataStore[params.instancename].param.reportparam.SHOWNETCLOSING;\r\n               \r\n            }\r\n\r\n        })\r\n\r\n        this.changeEntryDate(this._reportFilterService.ConsolidatedTrialBalanceObj.Consolidated_TrialBalance_DATE1, \"AD\");\r\n        this.changeEndDate(this._reportFilterService.ConsolidatedTrialBalanceObj.Consolidated_TrialBalance_DATE2, \"AD\");\r\n\r\n    }\r\n\r\n    changeEntryDate(value, format: string) {\r\n        var adbs = require(\"ad-bs-converter\");\r\n        if (format == \"AD\") {\r\n            var adDate = (value.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n            var bsDate = adbs.ad2bs(adDate);\r\n            this._reportFilterService.ConsolidatedTrialBalanceObj.Consolidated_TrialBalance_BSDATE1 = this.masterService.toBSDate(value);\r\n        }\r\n        else if (format == \"BS\") {\r\n          var datearr = value.split('/');\r\n          const bsDate = datearr[2]+\"/\"+datearr[1]+\"/\"+datearr[0]\r\n            // var bsDate = (value.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n            var adDate = adbs.bs2ad(bsDate);\r\n            var Engdate = this.masterService.toADDate(value);\r\n            const Validatedata = this.masterService.ValidateNepaliDate(Engdate)\r\n            if(Validatedata == true){\r\n              const bsDate1 = datearr[2]+\"/\"+datearr[1]+\"/\"+datearr[0];\r\n              var adDate1 = adbs.bs2ad(bsDate1);\r\n              this._reportFilterService.ConsolidatedTrialBalanceObj.Consolidated_TrialBalance_DATE1= this.masterService.toADDate(value);\r\n            }else{\r\n                this.alertService.error(\"Cannot Change the date\");\r\n              return;\r\n            }\r\n        }\r\n    }\r\n\r\n    changeEndDate(value, format: string) {\r\n        var adbs = require(\"ad-bs-converter\");\r\n        if (format == \"AD\") {\r\n            var adDate = (value.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n            var bsDate = adbs.ad2bs(adDate);\r\n            this._reportFilterService.ConsolidatedTrialBalanceObj.Consolidated_TrialBalance_BSDATE2 =this.masterService.toBSDate(value);\r\n        }\r\n        else if (format == \"BS\") {\r\n          var datearr = value.split('/');\r\n          const bsDate = datearr[2]+\"/\"+datearr[1]+\"/\"+datearr[0]\r\n            // var bsDate = (value.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n            var adDate = adbs.bs2ad(bsDate);\r\n            this._reportFilterService.ConsolidatedTrialBalanceObj.Consolidated_TrialBalance_DATE2 = this.masterService.toADDate(value);\r\n        }\r\n    }\r\n\r\n    onload() {\r\n        this.DialogClosedResult(\"ok\");\r\n    }\r\n\r\n    closeReportBox() {\r\n        this.DialogClosedResult(\"Error!\");\r\n    }\r\n\r\n    public DialogClosedResult(res) {\r\n       \r\n        if(this._reportFilterService.ConsolidatedTrialBalanceObj.Consolidated_TrialBalance_SHOWOPENINGTRIALONLY == true){\r\n            this._reportFilterService.ConsolidatedTrialBalanceObj.Consolidated_TrialBalance_SHOWOPENINGTRIALONLY =1;\r\n        }else{\r\n            this._reportFilterService.ConsolidatedTrialBalanceObj.Consolidated_TrialBalance_SHOWOPENINGTRIALONLY =0;\r\n        }\r\n        if(this._reportFilterService.ConsolidatedTrialBalanceObj.Consolidated_TrialBalance_SHOWSUBLEDGER == true){\r\n            this._reportFilterService.ConsolidatedTrialBalanceObj.Consolidated_TrialBalance_SHOWSUBLEDGER =1;\r\n        }else{\r\n            this._reportFilterService.ConsolidatedTrialBalanceObj.Consolidated_TrialBalance_SHOWSUBLEDGER =0;\r\n        }\r\n        if(this._reportFilterService.ConsolidatedTrialBalanceObj.Consolidated_TrialBalance_SHOWDEBTORSCREDITORSDETAILS == true){\r\n            this._reportFilterService.ConsolidatedTrialBalanceObj.Consolidated_TrialBalance_SHOWDEBTORSCREDITORSDETAILS =1;\r\n        }else{\r\n            this._reportFilterService.ConsolidatedTrialBalanceObj.Consolidated_TrialBalance_SHOWDEBTORSCREDITORSDETAILS =0;\r\n        }\r\n        if(this._reportFilterService.ConsolidatedTrialBalanceObj.Consolidated_TrialBalance_SHOWSTOCKVALUE == true){\r\n            this._reportFilterService.ConsolidatedTrialBalanceObj.Consolidated_TrialBalance_SHOWSTOCKVALUE =1;\r\n        }else{\r\n            this._reportFilterService.ConsolidatedTrialBalanceObj.Consolidated_TrialBalance_SHOWSTOCKVALUE =0;\r\n        }\r\n\r\n        if(this._reportFilterService.ConsolidatedTrialBalanceObj.Consolidated_TrialBalance_SHOWNETCLOSING == true){\r\n            this._reportFilterService.ConsolidatedTrialBalanceObj.Consolidated_TrialBalance_SHOWNETCLOSING =1;\r\n        }else{\r\n            this._reportFilterService.ConsolidatedTrialBalanceObj.Consolidated_TrialBalance_SHOWNETCLOSING =0;\r\n        }\r\n\r\n        let multipleReportFormateName = '';\r\n        if(this._reportFilterService.ConsolidatedTrialBalanceObj.Consolidated_TrialBalance_LEDGERWISE == 0){\r\n            multipleReportFormateName = 'Consolidated Trial Balance Report';\r\n        }else if(this._reportFilterService.ConsolidatedTrialBalanceObj.Consolidated_TrialBalance_LEDGERWISE == 1 ){\r\n            multipleReportFormateName = 'Consolidated Trial Balance Report_1'\r\n        }else {\r\n            multipleReportFormateName = 'Consolidated Trial Balance Report';\r\n        }\r\n\r\n        // if (this._reportFilterService.ConsolidatedTrialBalanceObj.Consolidated_TrialBalance_DIV && this._reportFilterService.ConsolidatedTrialBalanceObj.Consolidated_TrialBalance_DIV == '%') {\r\n        //     this._reportFilterService.ConsolidatedTrialBalanceObj.Consolidated_TrialBalance_DIVISIONNAME = 'All';\r\n        //   }else if( this._reportFilterService.ConsolidatedTrialBalanceObj.Consolidated_TrialBalance_DIV && this._reportFilterService.ConsolidatedTrialBalanceObj.Consolidated_TrialBalance_DIV!= '%'){\r\n        //     let abc = this.division.filter(x=>x.INITIAL == this._reportFilterService.ConsolidatedTrialBalanceObj.Consolidated_TrialBalance_DIV);\r\n        //       if(abc && abc.length>0 && abc[0]){\r\n        //         this._reportFilterService.ConsolidatedTrialBalanceObj.Consolidated_TrialBalance_DIVISIONNAME = abc[0].NAME;\r\n        //       }else{\r\n        //         this._reportFilterService.ConsolidatedTrialBalanceObj.Consolidated_TrialBalance_DIVISIONNAME = '';\r\n        //       }\r\n        //   }else{\r\n        //     this._reportFilterService.ConsolidatedTrialBalanceObj.Consolidated_TrialBalance_DIVISIONNAME = '';\r\n        //   }\r\n    \r\n          if (this._reportFilterService.ConsolidatedTrialBalanceObj.Consolidated_TrialBalance_CostCenter && this._reportFilterService.ConsolidatedTrialBalanceObj.Consolidated_TrialBalance_CostCenter == '%') {\r\n            this._reportFilterService.ConsolidatedTrialBalanceObj.Consolidated_TrialBalance_COSTCENTERDISPLAYNAME = 'All';\r\n          }\r\n          else if (this._reportFilterService.ConsolidatedTrialBalanceObj.Consolidated_TrialBalance_CostCenter != '%') {\r\n            let abc = this.CostcenterList.filter(x=>x.CCID == this._reportFilterService.ConsolidatedTrialBalanceObj.Consolidated_TrialBalance_CostCenter);\r\n            if(abc && abc.length>0 && abc[0]){\r\n              this._reportFilterService.ConsolidatedTrialBalanceObj.Consolidated_TrialBalance_COSTCENTERDISPLAYNAME = abc[0].COSTCENTERNAME;\r\n            }else{\r\n              this._reportFilterService.ConsolidatedTrialBalanceObj.Consolidated_TrialBalance_COSTCENTERDISPLAYNAME = '';\r\n            }\r\n          } else {\r\n            this._reportFilterService.ConsolidatedTrialBalanceObj.Consolidated_TrialBalance_COSTCENTERDISPLAYNAME = '';\r\n          }\r\n\r\n        if (res == \"ok\") {\r\n            this._reportFilterService.ConsolidatedTrialBalanceObj.assignPrevioiusDate = true;\r\n            let routepaths = this.arouter.url.split('/');\r\n            let activeurlpath2;\r\n            if (routepaths && routepaths.length) {\r\n                activeurlpath2 = routepaths[routepaths.length - 1]\r\n            }\r\n\r\n            if(this._reportFilterService.consolidated_TrialBalance_loadedTimes == 0){\r\n                this._reportFilterService.previouslyLoadedReportList.push(\r\n                    {\r\n                        reportname: ' Consolidated Trial Balance Report',\r\n                        activeurlpath: this.arouter.url,\r\n                        activerurlpath2: activeurlpath2,\r\n                        instanceWiseRepName:this.instanceWiseRepName +this._reportFilterService.consolidated_TrialBalance_loadedTimes,\r\n                    });\r\n            }else{\r\n                this._reportFilterService.previouslyLoadedReportList.push(\r\n                    {\r\n                        reportname: ' Consolidated Trial Balance Report'+'_'+this._reportFilterService.consolidated_TrialBalance_loadedTimes,\r\n                        activeurlpath: this.arouter.url,\r\n                        activerurlpath2: activeurlpath2,\r\n                        instanceWiseRepName:this.instanceWiseRepName +this._reportFilterService.consolidated_TrialBalance_loadedTimes,\r\n                    });\r\n            }\r\n\r\n        }\r\n\r\n        this.reportdataEmit.emit({\r\n            status: res, data: {\r\n                reportname: multipleReportFormateName,\r\n                REPORTDISPLAYNAME : 'Consolidated Trial Balance Report',\r\n                instanceWiseRepName:this.instanceWiseRepName+this._reportFilterService.consolidated_TrialBalance_loadedTimes,\r\n                reportparam: {\r\n                    DATE1: this._reportFilterService.ConsolidatedTrialBalanceObj.Consolidated_TrialBalance_DATE1,\r\n                    DATE2: this._reportFilterService.ConsolidatedTrialBalanceObj.Consolidated_TrialBalance_DATE2,\r\n                    // DIV: this._reportFilterService.ConsolidatedTrialBalanceObj.Consolidated_TrialBalance_DIV?this._reportFilterService.ConsolidatedTrialBalanceObj.Consolidated_TrialBalance_DIV:'%',\r\n                    PHISCALID: this.masterService.PhiscalObj.PhiscalID,\r\n                    CID: this.masterService.userProfile.CompanyInfo.COMPANYID,\r\n                    COSTCENTER: this._reportFilterService.ConsolidatedTrialBalanceObj.Consolidated_TrialBalance_CostCenter?this._reportFilterService.ConsolidatedTrialBalanceObj.Consolidated_TrialBalance_CostCenter:'%',\r\n                    LEDGERWISE: this._reportFilterService.ConsolidatedTrialBalanceObj.Consolidated_TrialBalance_LEDGERWISE?this._reportFilterService.ConsolidatedTrialBalanceObj.Consolidated_TrialBalance_LEDGERWISE:0,\r\n                    SHOWOPENINGTRIALONLY: this._reportFilterService.ConsolidatedTrialBalanceObj.Consolidated_TrialBalance_SHOWOPENINGTRIALONLY,\r\n                    SHOWSUBLEDGER: this._reportFilterService.ConsolidatedTrialBalanceObj.Consolidated_TrialBalance_SHOWSUBLEDGER,\r\n                    SHOWDEBTORSCREDITORSDETAILS: this._reportFilterService.ConsolidatedTrialBalanceObj.Consolidated_TrialBalance_SHOWDEBTORSCREDITORSDETAILS,\r\n                    SHOWSTOCKVALUE: this._reportFilterService.ConsolidatedTrialBalanceObj.Consolidated_TrialBalance_SHOWSTOCKVALUE,\r\n                    SHOWNETCLOSING:this._reportFilterService.ConsolidatedTrialBalanceObj.Consolidated_TrialBalance_SHOWNETCLOSING,\r\n                    // SHOWZEROBL: this._reportFilterService.ConsolidatedTrialBalanceObj.Consolidated_TrialBalance_SHOWZEROBL,\r\n                    COMPANYID: this.masterService.userProfile.CompanyInfo.COMPANYID,\r\n                \r\n                    // NODEACID:\r\n                    // NODEACNAME:\r\n                    // DIVISIONNAME : this._reportFilterService.ConsolidatedTrialBalanceObj.Consolidated_TrialBalance_DIVISIONNAME ? this._reportFilterService.ConsolidatedTrialBalanceObj.Consolidated_TrialBalance_DIVISIONNAME : '',\r\n                    COSTCENTERDISPLAYNAME: this._reportFilterService.ConsolidatedTrialBalanceObj.Consolidated_TrialBalance_COSTCENTERDISPLAYNAME?this._reportFilterService.ConsolidatedTrialBalanceObj.Consolidated_TrialBalance_COSTCENTERDISPLAYNAME:'',\r\n                }\r\n            }\r\n        });\r\n\r\n        if(res == \"ok\"){\r\n            this._reportFilterService.consolidated_TrialBalance_loadedTimes = this._reportFilterService.consolidated_TrialBalance_loadedTimes+1;\r\n        }\r\n    }\r\n\r\n    checkValue() {\r\n        // ////console.log(\"@@_reportFilterService.ConsolidatedTrialBalanceObj.Consolidated_TrialBalance_SHOWOPENINGTRIALONLY\", this._reportFilterService.ConsolidatedTrialBalanceObj.Consolidated_TrialBalance_SHOWOPENINGTRIALONLY)\r\n        if (this._reportFilterService.ConsolidatedTrialBalanceObj.Consolidated_TrialBalance_SHOWOPENINGTRIALONLY == true) {\r\n            this._reportFilterService.ConsolidatedTrialBalanceObj.Consolidated_TrialBalance_SHOWOPENINGTRIALONLY =1;\r\n        }\r\n    }\r\n\r\n\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/pages/ReportDialogs/Consolidated-Trial-Report/consolidated-trial-balance-report.component.ts","import {NgaModule} from '../../../theme/nga.module';\r\nimport {Component, Inject, Output, EventEmitter, OnInit} from '@angular/core';\r\nimport {MdDialogRef, MD_DIALOG_DATA} from '@angular/material';\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { MasterRepo } from '../../../common/repositories';\r\nimport { Division } from '../../../common/interfaces';\r\nimport { ReportMainService } from '../../Reports/components/ReportMain/ReportMain.service';\r\nimport { AuthService } from '../../../common/services/permission/authService.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ReportFilterService } from '../../../common/popupLists/report-filter/report-filter.service';\r\nimport { AlertService } from '../../../common/services/alert/alert.service';\r\n\r\nexport interface DialogInfo{\r\n    header: string;\r\n    message: Observable<string>;\r\n}\r\n\r\n@Component({\r\n    selector : 'result-creditorsreport-dialog',\r\n    template: require('./creditorsreport.component.html'),\r\n    styles: [require('../../Reports/reportStyle.css'),require('../../modal-style.css')]\r\n})\r\n\r\nexport class CreditorsReport implements OnInit{\r\n    // ReportParameters:any=<any>{};\r\n    division: any[]=[];\r\n    CostcenterList: any[] = [];\r\n    userProfile: any;\r\n    date1: any;\r\n    date2: any;\r\n    instanceWiseRepName:string='Creditors Report';\r\n    AreaList: any[] = [];\r\n    PartyGroupList:any[]=[];\r\n    PartyCategoryList:any[]=[];\r\n\r\n    @Output() reportdataEmit = new EventEmitter();\r\n    constructor(private masterService: MasterRepo,public dialogref:MdDialogRef<CreditorsReport>, @Inject(MD_DIALOG_DATA) public data: DialogInfo,\r\n    private _reportFilterService:ReportMainService, private _authService: AuthService, private arouter: Router,public _ActivatedRoute: ActivatedRoute,\r\n    public reportService: ReportFilterService,private alertService: AlertService,){\r\n        this.userProfile = this._authService.getUserProfile();\r\n\r\n\r\n\r\n        this.division=[];\r\n        //let data: Array<IDivision> = [];\r\n        if(this.masterService.userSetting.userwisedivision == 1){\r\n          this.masterService.getDivisionFromRightPrivelege().subscribe(res=>{\r\n              if(res.status == 'ok'){\r\n                  this.division = res.result;\r\n              }\r\n          })\r\n        }\r\n        else{\r\n         this.masterService.getAllDivisions()\r\n         .subscribe(res => {\r\n           //////console.log(\"div\" + JSON.stringify(res));\r\n           this.division.push(<Division>res);\r\n         }, error => {\r\n           this.masterService.resolveError(error, \"divisions - getDivisions\");\r\n         });\r\n        }\r\n            this.masterService.getCostcenter().subscribe(res => {\r\n                this.CostcenterList = res;\r\n            })\r\n\r\n            this.masterService.getAreaList().subscribe(res => {\r\n              this.AreaList = res.result;\r\n          })\r\n\r\n          this.masterService.getPartyGroupList().subscribe(res => {\r\n            this.PartyGroupList = res.result;\r\n        })\r\n\r\n        this.masterService.getPartyCategoryList().subscribe(res => {\r\n          this.PartyCategoryList = res.result;\r\n      })\r\n\r\n            // this.masterService.getAccDivList();\r\n\r\n\r\n    }\r\n\r\n    ngOnInit(){\r\n        this._ActivatedRoute.queryParams.subscribe(params => {\r\n            const mode = params.mode;\r\n            if (mode == \"DRILL\" && this.reportService.drillParam.returnUrl && this.reportService.drillParam.reportname=='Creditors Report' && this._reportFilterService.CreditorsReportObj.assignPrevioiusDate != true) {\r\n            this._reportFilterService.CreditorsReportObj.Creditors_DATE1=this.reportService.drillParam.reportparam.DATE1;\r\n            this._reportFilterService.CreditorsReportObj.Creditors_DATE2=this.reportService.drillParam.reportparam.DATE2;\r\n            this._reportFilterService.CreditorsReportObj.Creditors_DIV=this.reportService.drillParam.reportparam.DIV;\r\n            this._reportFilterService.CreditorsReportObj.Creditors_CostCenter=this.reportService.drillParam.reportparam.COSTCENTER;\r\n            }else{\r\n                if(this._reportFilterService.CreditorsReportObj.assignPrevioiusDate != true){\r\n                  this.masterService.getAccDivList();\r\n                    this._reportFilterService.CreditorsReportObj.Creditors_DATE1=this.masterService.PhiscalObj.BeginDate.split('T')[0];\r\n                    if (this.userProfile.CompanyInfo.ActualFY == this.masterService.PhiscalObj.PhiscalID) {\r\n                        this._reportFilterService.CreditorsReportObj.Creditors_DATE2 = new Date().toJSON().split('T')[0];\r\n                        this.changeEndDate(this._reportFilterService.CreditorsReportObj.Creditors_DATE2 , \"AD\");\r\n                      }\r\n                      else {\r\n\r\n                            this._reportFilterService.CreditorsReportObj.Creditors_DATE2  = this.masterService.PhiscalObj.EndDate.split('T')[0];\r\n                            this.changeEndDate(this._reportFilterService.CreditorsReportObj.Creditors_DATE2 , \"AD\");\r\n\r\n\r\n                    }\r\n                    // this._reportFilterService.CreditorsReportObj.Creditors_DATE2 = new Date().toJSON().split('T')[0];\r\n                    // this._reportFilterService.CreditorsReportObj.Creditors_DIV=this.masterService.userProfile.CompanyInfo.INITIAL;\r\n                    this.masterService.viewDivision.subscribe(() => {\r\n                      if(this.masterService.userSetting.userwisedivision==0 ||  this.masterService.showAll == true){ //ALL OPTION SELECTION IN DIVISION IN REPORT DIALOG BOX\r\n                        this._reportFilterService.CreditorsReportObj.Creditors_DIV='%';\r\n                    }else{\r\n                      if(this.masterService.userSetting.userwisedivision==1 && this.division.length ==1){\r\n                        this._reportFilterService.CreditorsReportObj.Creditors_DIV=this.division[0].INITIAL;\r\n                      }else{\r\n                        this._reportFilterService.CreditorsReportObj.Creditors_DIV=this.masterService.userProfile.CompanyInfo.INITIAL;\r\n                      }\r\n                    }\r\n                    })\r\n                    this._reportFilterService.CreditorsReportObj.Creditors_CostCenter ='%'\r\n                    this._reportFilterService.CreditorsReportObj.REPORTMODEC = '0';\r\n                    this._reportFilterService.CreditorsReportObj.CreditorsReport_AreaWise=0;\r\n                    this._reportFilterService.CreditorsReportObj.CreditorsReport_PartyGroup='%';\r\n                    this._reportFilterService.CreditorsReportObj.CreditorsReport_PartyCategory='%';\r\n                }\r\n\r\n                if(params.instancename){\r\n                    // ////console.log(\"@@[Creditors Report0]\",params.instancename,this._reportFilterService.reportDataStore[params.instancename].param.reportparam)\r\n                    this._reportFilterService.CreditorsReportObj.Creditors_DATE1=this._reportFilterService.reportDataStore[params.instancename].param.reportparam.DATE1;\r\n                    this._reportFilterService.CreditorsReportObj.Creditors_DATE2=this._reportFilterService.reportDataStore[params.instancename].param.reportparam.DATE2;\r\n                    this._reportFilterService.CreditorsReportObj.Creditors_DIV=this._reportFilterService.reportDataStore[params.instancename].param.reportparam.DIV;\r\n                    this._reportFilterService.CreditorsReportObj.Creditors_CostCenter=this._reportFilterService.reportDataStore[params.instancename].param.reportparam.COSTCENTER;\r\n                    this._reportFilterService.CreditorsReportObj.GROUPBY=this._reportFilterService.reportDataStore[params.instancename].param.reportparam.GROUPBY;\r\n                    this._reportFilterService.CreditorsReportObj.Creditors_OPNINGBLONLY=this._reportFilterService.reportDataStore[params.instancename].param.reportparam.OPNINGBLONLY;\r\n                    this._reportFilterService.CreditorsReportObj.REPORTMODE=this._reportFilterService.reportDataStore[params.instancename].param.reportparam.REPORTMODE;\r\n                    this._reportFilterService.CreditorsReportObj.SHOWDPARTYDETAIL=this._reportFilterService.reportDataStore[params.instancename].param.reportparam.SHOWDPARTYDETAIL;\r\n                    this._reportFilterService.CreditorsReportObj.CreditorsReport_INCLUDEPOSTDATE = this._reportFilterService.reportDataStore[params.instancename].param.reportparam.IncPostDatedTransaction;\r\n                    this._reportFilterService.CreditorsReportObj.Creditors_INCLUDEPOSTEDTRANSACTION=this._reportFilterService.reportDataStore[params.instancename].param.reportparam.Creditors_INCLUDEPOSTEDTRANSACTION;\r\n                  }\r\n            }\r\n         });\r\n\r\n\r\n        this.changeEntryDate(this._reportFilterService.CreditorsReportObj.Creditors_DATE1, \"AD\");\r\n        this.changeEndDate(this._reportFilterService.CreditorsReportObj.Creditors_DATE2, \"AD\");\r\n\r\n    }\r\n\r\n    changeEntryDate(value, format: string) {\r\n        var adbs = require(\"ad-bs-converter\");\r\n        if (format == \"AD\") {\r\n            var adDate = (value.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n            var bsDate = adbs.ad2bs(adDate);\r\n            this._reportFilterService.CreditorsReportObj.Creditors_BSDATE1 = this.masterService.toBSDate(value);\r\n        }\r\n        else if (format == \"BS\") {\r\n          var datearr = value.split('/');\r\n          const bsDate = datearr[2]+\"/\"+datearr[1]+\"/\"+datearr[0];\r\n            // var bsDate = (value.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n            var adDate = adbs.bs2ad(bsDate);\r\n            var Engdate = this.masterService.toADDate(value);\r\n            const Validatedata = this.masterService.ValidateNepaliDate(Engdate)\r\n            if(Validatedata == true){\r\n              const bsDate1 = datearr[2]+\"/\"+datearr[1]+\"/\"+datearr[0];\r\n              var adDate1 = adbs.bs2ad(bsDate1);\r\n              this._reportFilterService.CreditorsReportObj.Creditors_DATE2 = this.masterService.toADDate(value);\r\n            }else{\r\n                this.alertService.error(\"Cannot Change the date\");\r\n              return;\r\n            }\r\n\r\n            // this._reportFilterService.CreditorsReportObj.Creditors_DATE1 = this.masterService.toBSDate(value);\r\n        }\r\n    }\r\n\r\n    changeEndDate(value, format: string) {\r\n        var adbs = require(\"ad-bs-converter\");\r\n        if (format == \"AD\") {\r\n            var adDate = (value.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n            var bsDate = adbs.ad2bs(adDate);\r\n            this._reportFilterService.CreditorsReportObj.Creditors_BSDATE2 = this.masterService.toBSDate(value);\r\n        }\r\n        else if (format == \"BS\") {\r\n          var datearr = value.split('/');\r\n          const bsDate = datearr[2]+\"/\"+datearr[1]+\"/\"+datearr[0];\r\n            // var bsDate = (value.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n            var adDate = adbs.bs2ad(bsDate);\r\n            var Engdate = this.masterService.toADDate(value);\r\n            const Validatedata = this.masterService.ValidateNepaliDate(Engdate)\r\n            if(Validatedata == true){\r\n              const bsDate1 = datearr[2]+\"/\"+datearr[1]+\"/\"+datearr[0];\r\n              var adDate1 = adbs.bs2ad(bsDate1);\r\n              this._reportFilterService.CreditorsReportObj.Creditors_DATE2 = this.masterService.toADDate(value);\r\n            }else{\r\n                this.alertService.error(\"Cannot Change the date\");\r\n              return;\r\n            }\r\n            // this._reportFilterService.CreditorsReportObj.Creditors_DATE2 = this.masterService.toBSDate(value);\r\n        }\r\n    }\r\n\r\n    onload(){\r\n        this.DialogClosedResult(\"ok\");\r\n    }\r\n\r\n    closeReportBox(){\r\n        this.DialogClosedResult(\"Error!\");\r\n    }\r\n\r\n    public DialogClosedResult(res) {\r\n        this._reportFilterService.CreditorsReportObj.Creditors_DIV = (this._reportFilterService.CreditorsReportObj.Creditors_DIV == null || this._reportFilterService.CreditorsReportObj.Creditors_DIV == \"\")?\"%\":this._reportFilterService.CreditorsReportObj.Creditors_DIV;\r\n\r\n\r\n        let mulitpleReportFormateName = '';\r\n        if( this._reportFilterService.CreditorsReportObj.SHOWDPARTYDETAIL == 1){\r\n            mulitpleReportFormateName = 'Creditors Report_1';\r\n        }else{\r\n            mulitpleReportFormateName = 'Creditors Report';\r\n        }\r\n\r\n        if (this._reportFilterService.CreditorsReportObj.Creditors_DIV && this._reportFilterService.CreditorsReportObj.Creditors_DIV == '%') {\r\n            this._reportFilterService.CreditorsReportObj.Creditors_DIVISIONNAME = 'All';\r\n          }else if( this._reportFilterService.CreditorsReportObj.Creditors_DIV && this._reportFilterService.CreditorsReportObj.Creditors_DIV!= '%'){\r\n            let abc = this.division.filter(x=>x.INITIAL == this._reportFilterService.CreditorsReportObj.Creditors_DIV);\r\n              if(abc && abc.length>0 && abc[0]){\r\n                this._reportFilterService.CreditorsReportObj.Creditors_DIVISIONNAME = abc[0].NAME;\r\n              }else{\r\n                this._reportFilterService.CreditorsReportObj.Creditors_DIVISIONNAME = '';\r\n              }\r\n          }else{\r\n            this._reportFilterService.CreditorsReportObj.Creditors_DIVISIONNAME = '';\r\n          }\r\n    \r\n          if (this._reportFilterService.CreditorsReportObj.Creditors_CostCenter && this._reportFilterService.CreditorsReportObj.Creditors_CostCenter == '%') {\r\n            this._reportFilterService.CreditorsReportObj.Creditors_COSTCENTERDISPLAYNAME = 'All';\r\n          }\r\n          else if (this._reportFilterService.CreditorsReportObj.Creditors_CostCenter != '%') {\r\n            let abc = this.CostcenterList.filter(x=>x.CCID == this._reportFilterService.CreditorsReportObj.Creditors_CostCenter);\r\n            if(abc && abc.length>0 && abc[0]){\r\n              this._reportFilterService.CreditorsReportObj.Creditors_COSTCENTERDISPLAYNAME = abc[0].COSTCENTERNAME;\r\n            }else{\r\n              this._reportFilterService.CreditorsReportObj.Creditors_COSTCENTERDISPLAYNAME = '';\r\n            }\r\n          } else {\r\n            this._reportFilterService.CreditorsReportObj.Creditors_COSTCENTERDISPLAYNAME = '';\r\n          }\r\n\r\n          if (this._reportFilterService.CreditorsReportObj.CreditorsReport_AreaWise && this._reportFilterService.CreditorsReportObj.CreditorsReport_AreaWise == 0) {\r\n            this._reportFilterService.CreditorsReportObj.CreditorsReport_AreaWiseDisplayName = '';\r\n          }\r\n          else if (this._reportFilterService.CreditorsReportObj.CreditorsReport_AreaWise != 0) {\r\n            let abc = this.AreaList.filter(x=>x.AREA_ID == this._reportFilterService.CreditorsReportObj.CreditorsReport_AreaWise);\r\n            if(abc && abc.length>0 && abc[0]){\r\n              this._reportFilterService.CreditorsReportObj.CreditorsReport_AreaWiseDisplayName = abc[0].AREA_NAME;\r\n            }else{\r\n              this._reportFilterService.CreditorsReportObj.CreditorsReport_AreaWiseDisplayName = '';\r\n            }\r\n          } else {\r\n            this._reportFilterService.CreditorsReportObj.CreditorsReport_AreaWiseDisplayName = '';\r\n          }\r\n    \r\n          if (this._reportFilterService.CreditorsReportObj.CreditorsReport_PartyGroup && this._reportFilterService.CreditorsReportObj.CreditorsReport_PartyGroup == 0) {\r\n            this._reportFilterService.CreditorsReportObj.CreditorsReport_PartyGroupDisplayName = '';\r\n          }\r\n          else if (this._reportFilterService.CreditorsReportObj.CreditorsReport_PartyGroup != 0) {\r\n            let abc = this.PartyGroupList.filter(x=>x.ACID == this._reportFilterService.CreditorsReportObj.CreditorsReport_PartyGroup);\r\n            if(abc && abc.length>0 && abc[0]){\r\n              this._reportFilterService.CreditorsReportObj.CreditorsReport_PartyGroupDisplayName = abc[0].ACNAME;\r\n            }else{\r\n              this._reportFilterService.CreditorsReportObj.CreditorsReport_PartyGroupDisplayName = '';\r\n            }\r\n          } else {\r\n            this._reportFilterService.CreditorsReportObj.CreditorsReport_PartyGroupDisplayName = '';\r\n          }\r\n    \r\n          if (this._reportFilterService.CreditorsReportObj.CreditorsReport_PartyCategory && this._reportFilterService.CreditorsReportObj.CreditorsReport_PartyCategory == 0) {\r\n            this._reportFilterService.CreditorsReportObj.CreditorsReport_PartyCategoryDisplayName = '';\r\n          }\r\n          else if (this._reportFilterService.CreditorsReportObj.CreditorsReport_PartyCategory != 0) {\r\n            let abc = this.PartyCategoryList.filter(x=>x.CATEGORY_ID == this._reportFilterService.CreditorsReportObj.CreditorsReport_PartyCategory);\r\n            if(abc && abc.length>0 && abc[0]){\r\n              this._reportFilterService.CreditorsReportObj.CreditorsReport_PartyCategoryDisplayName = abc[0].CATEGORYNAME;\r\n            }else{\r\n              this._reportFilterService.CreditorsReportObj.CreditorsReport_PartyCategoryDisplayName = '';\r\n            }\r\n          } else {\r\n            this._reportFilterService.CreditorsReportObj.CreditorsReport_PartyCategoryDisplayName = '';\r\n          }\r\n          \r\n        if(res == \"ok\"){\r\n        this._reportFilterService.CreditorsReportObj.assignPrevioiusDate = true;\r\n        let routepaths = this.arouter.url.split('/');\r\n        let activeurlpath2;\r\n              if(routepaths&& routepaths.length){\r\n                activeurlpath2=routepaths[routepaths.length-1]\r\n              }\r\n              if(this._reportFilterService.Creditors_loadedTimes == 0){\r\n                this._reportFilterService.previouslyLoadedReportList.push(\r\n                    {reportname: 'Creditors Report',\r\n                    activeurlpath: this.arouter.url,\r\n                    activerurlpath2: activeurlpath2,\r\n                    instanceWiseRepName:this.instanceWiseRepName +this._reportFilterService.Creditors_loadedTimes,\r\n                });\r\n            }else{\r\n                this._reportFilterService.previouslyLoadedReportList.push(\r\n                    {reportname: 'Creditors Report'+'_'+this._reportFilterService.Creditors_loadedTimes,\r\n                    activeurlpath: this.arouter.url,\r\n                    activerurlpath2: activeurlpath2,\r\n                    instanceWiseRepName:this.instanceWiseRepName +this._reportFilterService.Creditors_loadedTimes,\r\n                });\r\n            }\r\n\r\n        }\r\n\r\n        this.reportdataEmit.emit({ status: res, data: {reportname:mulitpleReportFormateName,\r\n            REPORTDISPLAYNAME : 'Creditors Report',\r\n            instanceWiseRepName:this.instanceWiseRepName+this._reportFilterService.Creditors_loadedTimes,\r\n             reportparam:{\r\n            DATE1: this._reportFilterService.CreditorsReportObj.Creditors_DATE1,\r\n            DATE2: this._reportFilterService.CreditorsReportObj.Creditors_DATE2,\r\n            BSDATE1: this._reportFilterService.AccoutLedgerObj.AccLedger_BSDATE1,\r\n            BSDATE2: this._reportFilterService.AccoutLedgerObj.AccLedger_BSDATE2,\r\n            DIVISION: this._reportFilterService.CreditorsReportObj.Creditors_DIV,\r\n            COMID:this.masterService.userProfile.CompanyInfo.COMPANYID,\r\n            CostCenter: this._reportFilterService.CreditorsReportObj.Creditors_CostCenter,\r\n            SHOWDPARTYDETAIL: this._reportFilterService.CreditorsReportObj.SHOWDPARTYDETAIL,\r\n            OPNINGBLONLY: this._reportFilterService.CreditorsReportObj.Creditors_OPNINGBLONLY,\r\n            REPORTMODE:this._reportFilterService.CreditorsReportObj.REPORTMODEC,\r\n            GROUPBY:this._reportFilterService.CreditorsReportObj.GROUPBY?this._reportFilterService.CreditorsReportObj.GROUPBY:0,\r\n            PHISCALID: this.masterService.PhiscalObj.PhiscalID,\r\n            COSTCENTER: this._reportFilterService.CreditorsReportObj.Creditors_CostCenter,\r\n            DIV: this._reportFilterService.CreditorsReportObj.Creditors_DIV,\r\n            DIVISIONNAME : this._reportFilterService.CreditorsReportObj.Creditors_DIVISIONNAME ? this._reportFilterService.CreditorsReportObj.Creditors_DIVISIONNAME : '',\r\n            COSTCENTERDISPLAYNAME: this._reportFilterService.CreditorsReportObj.Creditors_COSTCENTERDISPLAYNAME?this._reportFilterService.CreditorsReportObj.Creditors_COSTCENTERDISPLAYNAME:'',\r\n            AREA : this._reportFilterService.CreditorsReportObj.CreditorsReport_AreaWise?this._reportFilterService.CreditorsReportObj.CreditorsReport_AreaWise:0,\r\n            PARTYGROUP : this._reportFilterService.CreditorsReportObj.CreditorsReport_PartyGroup?this._reportFilterService.CreditorsReportObj.CreditorsReport_PartyGroup:'%',\r\n            SHOWBRANCHBL: this._reportFilterService.CreditorsReportObj.Creditors_SHOWBRANCHBL,\r\n            PARTYCATEGORY:this._reportFilterService.CreditorsReportObj.CreditorsReport_PartyCategory ? this._reportFilterService.CreditorsReportObj.CreditorsReport_PartyCategory:'%',\r\n            AREAWISEDISPLAYNAME:this._reportFilterService.CreditorsReportObj.CreditorsReport_AreaWiseDisplayName ?this._reportFilterService.CreditorsReportObj.CreditorsReport_AreaWiseDisplayName:'',\r\n            PARTYGROUPDISPLAYNAME: this._reportFilterService.CreditorsReportObj.CreditorsReport_PartyGroupDisplayName ? this._reportFilterService.CreditorsReportObj.CreditorsReport_PartyGroupDisplayName:'',\r\n            PARTYCATEGORYDISPLAYNAME:this._reportFilterService.CreditorsReportObj.CreditorsReport_PartyCategoryDisplayName ?this._reportFilterService.CreditorsReportObj.CreditorsReport_PartyCategoryDisplayName:'',\r\n           // IncPostDatedTransaction :this._reportFilterService.CreditorsReportObj.CreditorsReport_INCLUDEPOSTDATE ? this._reportFilterService.CreditorsReportObj.CreditorsReport_INCLUDEPOSTDATE:0,\r\n            INCLUDEPOSTEDTRANSACTION:this._reportFilterService.CreditorsReportObj.Creditors_INCLUDEPOSTEDTRANSACTION ? this._reportFilterService.CreditorsReportObj.Creditors_INCLUDEPOSTEDTRANSACTION:0,\r\n        }}});\r\n\r\n        if(res == \"ok\"){\r\n            this._reportFilterService.Creditors_loadedTimes = this._reportFilterService.Creditors_loadedTimes+1;\r\n        }\r\n\r\n    }\r\n\r\n    checkValueForOpeningCreditors(){\r\n        if(this._reportFilterService.CreditorsReportObj.Creditors_OPNINGBLONLY == true){\r\n            this._reportFilterService.CreditorsReportObj.Creditors_OPNINGBLONLY = 1;\r\n            this.date1 = this._reportFilterService.CreditorsReportObj.Creditors_DATE1;\r\n            this.date2=this._reportFilterService.CreditorsReportObj.Creditors_DATE2;\r\n            this._reportFilterService.CreditorsReportObj.Creditors_DATE1=this.masterService.PhiscalObj.BeginDate.split('T')[0];\r\n            this._reportFilterService.CreditorsReportObj.Creditors_DATE2=this.masterService.PhiscalObj.EndDate.split('T')[0];\r\n            this.changeEntryDate(this._reportFilterService.CreditorsReportObj.Creditors_DATE1, \"AD\");\r\n            this.changeEndDate(this._reportFilterService.CreditorsReportObj.Creditors_DATE2, \"AD\");\r\n        }else{\r\n            this._reportFilterService.CreditorsReportObj.Creditors_OPNINGBLONLY = 0;\r\n            this._reportFilterService.CreditorsReportObj.Creditors_DATE1= this.date1?this.date1:this._reportFilterService.CreditorsReportObj.Creditors_DATE1;\r\n            this._reportFilterService.CreditorsReportObj.Creditors_DATE2= this.date2?this.date2:this._reportFilterService.CreditorsReportObj.Creditors_DATE2;\r\n            this.changeEntryDate(this._reportFilterService.CreditorsReportObj.Creditors_DATE1, \"AD\");\r\n            this.changeEndDate(this._reportFilterService.CreditorsReportObj.Creditors_DATE2, \"AD\");\r\n        }\r\n    }\r\n\r\n}\r\n\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/pages/ReportDialogs/Creditors Report/creditorsreport.component.ts","import { Component, Output, EventEmitter, ViewChild } from '@angular/core';\r\nimport { MasterRepo } from '../../../common/repositories';\r\nimport { Division } from '../../../common/interfaces';\r\nimport { AuthService } from '../../../common/services/permission/authService.service';\r\nimport { PLedgerComponent } from '../../masters/components/PLedger/PLedger.component';\r\nimport { AlertService } from '../../../common/services/alert/alert.service';\r\nimport { ReportMainService } from '../../Reports/components/ReportMain/ReportMain.service';\r\nimport { GenericPopUpComponent, GenericPopUpSettings } from '../../../common/popupLists/generic-grid/generic-popup-grid.component';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ReportFilterService } from '../../../common/popupLists/report-filter/report-filter.service';\r\n\r\n@Component({\r\n    selector: 'creditorsbilltracking-report-selector',\r\n    template: require('./creditors-billtracking-report.component.html'),\r\n    styles: [require('../../modal-style.css'), require('../../Reports/reportStyle.css')],\r\n})\r\nexport class CrediotrsBillTrackingReport {\r\n    reportNameFormatWise: string;\r\n    userProfile: any;\r\n    division: any[] = [];\r\n    CostcenterList: any[] = [];\r\n    instanceWiseRepName: string = 'Creditors Bill Tracking Report';\r\n    REPORTDISPLAYNAME: string;\r\n\r\n    @ViewChild(\"PLedgerChild\") PLedgerChild: PLedgerComponent;\r\n    @Output() reportdataEmit = new EventEmitter();\r\n    @ViewChild(\"genericGridPartyLedger\") genericGridPartyLedger: GenericPopUpComponent;\r\n    gridPopupSettingsForPartyLedgerList: GenericPopUpSettings = new GenericPopUpSettings();\r\n\r\n    constructor(public masterService: MasterRepo,\r\n        private alertService: AlertService,\r\n        private _reportFilterService: ReportMainService,\r\n        private _authService: AuthService, private arouter: Router, public _ActivatedRoute: ActivatedRoute,\r\n        public reportService: ReportFilterService,\r\n    ) {\r\n\r\n        this.reportNameFormatWise = 'Creditors Bill Tracking Report';\r\n        this.userProfile = this._authService.getUserProfile();\r\n\r\n        this.division = [];\r\n        if (this.masterService.userSetting.userwisedivision == 1) {\r\n            this.masterService.getDivisionFromRightPrivelege().subscribe(res => {\r\n                if (res.status == 'ok') {\r\n                    this.division = res.result;\r\n                }\r\n            })\r\n        }\r\n        else {\r\n            this.masterService.getAllDivisions()\r\n                .subscribe(res => {\r\n                    this.division.push(<Division>res);\r\n                }, error => {\r\n                    this.masterService.resolveError(error, \"divisions - getDivisions\");\r\n                });\r\n        }\r\n\r\n        this.masterService.getCostcenter().subscribe(res => {\r\n            this.CostcenterList = res;\r\n        })\r\n        // this.masterService.getAccDivList();\r\n    }\r\n\r\n    ngOnInit() {\r\n        this._ActivatedRoute.queryParams.subscribe(params => {\r\n            const mode = params.mode;\r\n            if (mode == \"DRILL\" && this.reportService.drillParam.returnUrl && this.reportService.drillParam.reportname.startsWith('Creditors Bill Tracking Report') && this._reportFilterService.CreditorsBillTrackingObj.assignPrevioiusDate != true) {\r\n            this._reportFilterService.CreditorsBillTrackingObj.CreditorsBillTracking_DATE1=this.reportService.drillParam.reportparam.DATE1;\r\n            this._reportFilterService.CreditorsBillTrackingObj.CreditorsBillTracking_DATE2=this.reportService.drillParam.reportparam.DATE2;\r\n            this._reportFilterService.CreditorsBillTrackingObj.CreditorsBillTracking_DIV=this.reportService.drillParam.reportparam.DIV;\r\n            this._reportFilterService.CreditorsBillTrackingObj.CreditorsBillTracking_CostCenter=this.reportService.drillParam.reportparam.COSTCENTER;\r\n            this._reportFilterService.CreditorsBillTrackingObj.CreditorsBillTracking_Detail= '1';\r\n            this._reportFilterService.CreditorsBillTrackingObj.CreditorsBillTracking_ACID= this.reportService.drillParam.reportparam.ACID;\r\n            this._reportFilterService.CreditorsBillTrackingObj.CreditorsBillTracking_ACCNAME= this.reportService.drillParam.reportparam.ACNAME;\r\n            }else{\r\n                if (this._reportFilterService.CreditorsBillTrackingObj.assignPrevioiusDate != true) {\r\n                    this.masterService.getAccDivList();\r\n                    // this._reportFilterService.CreditorsBillTrackingObj.CreditorsBillTracking_DATE1 = this.masterService.PhiscalObj.BeginDate.split('T')[0];\r\n                    this._reportFilterService.CreditorsBillTrackingObj.CreditorsBillTracking_DATE1 = new Date().toJSON().split('T')[0];\r\n                    if (this.userProfile.CompanyInfo.ActualFY == this.masterService.PhiscalObj.PhiscalID) {\r\n                        this._reportFilterService.CreditorsBillTrackingObj.CreditorsBillTracking_DATE2 = new Date().toJSON().split('T')[0];\r\n                        this.changeEndDate(this._reportFilterService.CreditorsBillTrackingObj.CreditorsBillTracking_DATE2, \"AD\");\r\n                    }\r\n                    else {\r\n        \r\n                        this._reportFilterService.CreditorsBillTrackingObj.CreditorsBillTracking_DATE2 = this.masterService.PhiscalObj.EndDate.split('T')[0];\r\n                        this.changeEndDate(this._reportFilterService.CreditorsBillTrackingObj.CreditorsBillTracking_DATE2, \"AD\");\r\n                    }\r\n                    // this._reportFilterService.CreditorsBillTrackingObj.CreditorsBillTracking_DIV = this.masterService.userProfile.CompanyInfo.INITIAL;\r\n                    this.masterService.viewDivision.subscribe(() => {\r\n                        if(this.masterService.userSetting.userwisedivision==0 ||  this.masterService.showAll == true){ //ALL OPTION SELECTION IN DIVISION IN REPORT DIALOG BOX\r\n                          this._reportFilterService.CreditorsBillTrackingObj.CreditorsBillTracking_DIV='%';\r\n                      }else{\r\n                        if(this.masterService.userSetting.userwisedivision==1 && this.division.length ==1){\r\n                            this._reportFilterService.CreditorsBillTrackingObj.CreditorsBillTracking_DIV=this.division[0].INITIAL;\r\n                          }else{\r\n                            this._reportFilterService.CreditorsBillTrackingObj.CreditorsBillTracking_DIV=this.masterService.userProfile.CompanyInfo.INITIAL;\r\n                        }\r\n                      }\r\n                      })\r\n                    this._reportFilterService.CreditorsBillTrackingObj.CreditorsBillTracking_CostCenter = '%'\r\n                    this._reportFilterService.CreditorsBillTrackingObj.CreditorsBillTracking_VoucherType = 'PV';\r\n                    this._reportFilterService.CreditorsBillTrackingObj.CreditorsBillTracking_Detail = '0';\r\n        \r\n                    this.changeEntryDate(this._reportFilterService.CreditorsBillTrackingObj.CreditorsBillTracking_DATE1, \"AD\");\r\n                    this.changeEndDate(this._reportFilterService.CreditorsBillTrackingObj.CreditorsBillTracking_DATE2, \"AD\");\r\n                }\r\n\r\n                    if(params.instancename){\r\n                        this._reportFilterService.CreditorsBillTrackingObj.CreditorsBillTracking_DATE1=this._reportFilterService.reportDataStore[params.instancename].param.reportparam.DATE1;\r\n                        this._reportFilterService.CreditorsBillTrackingObj.CreditorsBillTracking_DATE2=this._reportFilterService.reportDataStore[params.instancename].param.reportparam.DATE2;\r\n                        this._reportFilterService.CreditorsBillTrackingObj.CreditorsBillTracking_DIV=this._reportFilterService.reportDataStore[params.instancename].param.reportparam.DIV;\r\n                        this._reportFilterService.CreditorsBillTrackingObj.CreditorsBillTracking_CostCenter=this._reportFilterService.reportDataStore[params.instancename].param.reportparam.COSTCENTER;\r\n                    }\r\n            }\r\n        });\r\n\r\n        this.changeEntryDate(this._reportFilterService.CreditorsBillTrackingObj.CreditorsBillTracking_DATE1, \"AD\");\r\n        this.changeEndDate(this._reportFilterService.CreditorsBillTrackingObj.CreditorsBillTracking_DATE2, \"AD\");\r\n\r\n    }\r\n\r\n    changeEntryDate(value, format: string) {\r\n        var adbs = require(\"ad-bs-converter\");\r\n        if (format == \"AD\") {\r\n            var adDate = (value.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n            var bsDate = adbs.ad2bs(adDate);\r\n            this._reportFilterService.CreditorsBillTrackingObj.CreditorsBillTracking_BSDATE1 = this.masterService.toBSDate(value);\r\n        }\r\n        else if (format == \"BS\") {\r\n            var datearr = value.split('/');\r\n            const bsDate = datearr[2] + \"/\" + datearr[1] + \"/\" + datearr[0];\r\n            var adDate = adbs.bs2ad(bsDate);\r\n            var Engdate = this.masterService.toADDate(value);\r\n            const Validatedata = this.masterService.ValidateNepaliDate(Engdate)\r\n            if (Validatedata == true) {\r\n                const bsDate1 = datearr[2] + \"/\" + datearr[1] + \"/\" + datearr[0];\r\n                var adDate1 = adbs.bs2ad(bsDate1);\r\n                this._reportFilterService.CreditorsBillTrackingObj.CreditorsBillTracking_DATE1 = this.masterService.toADDate(value);\r\n            } else {\r\n                this.alertService.error(\"Cannot Change the date\");\r\n                return;\r\n            }\r\n        }\r\n    }\r\n\r\n    changeEndDate(value, format: string) {\r\n        var adbs = require(\"ad-bs-converter\");\r\n        if (format == \"AD\") {\r\n            var adDate = (value.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n            var bsDate = adbs.ad2bs(adDate);\r\n            this._reportFilterService.CreditorsBillTrackingObj.CreditorsBillTracking_BSDATE2 = this.masterService.toBSDate(value);\r\n        }\r\n        else if (format == \"BS\") {\r\n            var datearr = value.split('/');\r\n            const bsDate = datearr[2] + \"/\" + datearr[1] + \"/\" + datearr[0];\r\n            var adDate = adbs.bs2ad(bsDate);\r\n            var Engdate = this.masterService.toADDate(value);\r\n            const Validatedata = this.masterService.ValidateNepaliDate(Engdate)\r\n            if (Validatedata == true) {\r\n                const bsDate1 = datearr[2] + \"/\" + datearr[1] + \"/\" + datearr[0];\r\n                var adDate1 = adbs.bs2ad(bsDate1);\r\n                this._reportFilterService.CreditorsBillTrackingObj.CreditorsBillTracking_DATE2 = this.masterService.toADDate(value);\r\n            } else {\r\n                this.alertService.error(\"Cannot Change the date\");\r\n                return;\r\n            }\r\n        }\r\n    }\r\n\r\n    onload() {\r\n        this.DialogClosedResult(\"ok\");\r\n    }\r\n\r\n    public DialogClosedResult(res) {\r\n\r\n        if (this._reportFilterService.CreditorsBillTrackingObj.CreditorsBillTracking_DIV && this._reportFilterService.CreditorsBillTrackingObj.CreditorsBillTracking_DIV == '%') {\r\n            this._reportFilterService.CreditorsBillTrackingObj.CreditorsBillTracking_DIVISIONNAME = 'All';\r\n        } else if (this._reportFilterService.CreditorsBillTrackingObj.CreditorsBillTracking_DIV && this._reportFilterService.CreditorsBillTrackingObj.CreditorsBillTracking_DIV != '%') {\r\n            let abc = this.division.filter(x => x.INITIAL == this._reportFilterService.CreditorsBillTrackingObj.CreditorsBillTracking_DIV);\r\n            if (abc && abc.length > 0 && abc[0]) {\r\n                this._reportFilterService.CreditorsBillTrackingObj.CreditorsBillTracking_DIVISIONNAME = abc[0].NAME;\r\n            } else {\r\n                this._reportFilterService.CreditorsBillTrackingObj.CreditorsBillTracking_DIVISIONNAME = '';\r\n            }\r\n        } else {\r\n            this._reportFilterService.CreditorsBillTrackingObj.CreditorsBillTracking_DIVISIONNAME = '';\r\n        }\r\n\r\n        if (this._reportFilterService.CreditorsBillTrackingObj.CreditorsBillTracking_CostCenter && this._reportFilterService.CreditorsBillTrackingObj.CreditorsBillTracking_CostCenter == '%') {\r\n            this._reportFilterService.CreditorsBillTrackingObj.CreditorsBillTracking_COSTCENTERDISPLAYNAME = 'All';\r\n        } else if (this._reportFilterService.CreditorsBillTrackingObj.CreditorsBillTracking_CostCenter != '%') {\r\n            let abc = this.CostcenterList.filter(x => x.CCID == this._reportFilterService.CreditorsBillTrackingObj.CreditorsBillTracking_CostCenter);\r\n            if (abc && abc.length > 0 && abc[0]) {\r\n                this._reportFilterService.CreditorsBillTrackingObj.CreditorsBillTracking_COSTCENTERDISPLAYNAME = abc[0].COSTCENTERNAME;\r\n            } else {\r\n                this._reportFilterService.CreditorsBillTrackingObj.CreditorsBillTracking_COSTCENTERDISPLAYNAME = '';\r\n            }\r\n        } else {\r\n            this._reportFilterService.CreditorsBillTrackingObj.CreditorsBillTracking_COSTCENTERDISPLAYNAME = '';\r\n        }\r\n\r\n        if(this._reportFilterService.CreditorsBillTrackingObj.CreditorsBillTracking_Detail==0){\r\n            this.reportNameFormatWise = 'Creditors Bill Tracking Report';\r\n        }else{\r\n            this.reportNameFormatWise = 'Creditors Bill Tracking Report_1';\r\n        }\r\n\r\n        if(this._reportFilterService.CreditorsBillTrackingObj.CreditorsBillTracking_ACCNAME==\"\"){\r\n            this._reportFilterService.CreditorsBillTrackingObj.CreditorsBillTracking_ACID='%';\r\n        }\r\n        if (res == \"ok\") {\r\n            this._reportFilterService.CreditorsBillTrackingObj.assignPrevioiusDate = true;\r\n            let routepaths = this.arouter.url.split('/');\r\n            let activeurlpath2;\r\n            if (routepaths && routepaths.length) {\r\n                activeurlpath2 = routepaths[routepaths.length - 1]\r\n            }\r\n\r\n            if (this._reportFilterService.CreditorsBillTracking_loadedTimes == 0) {\r\n                this._reportFilterService.previouslyLoadedReportList.push(\r\n                    {\r\n                        reportname: 'Creditors Bill Tracking Report',\r\n                        activeurlpath: this.arouter.url,\r\n                        activerurlpath2: activeurlpath2,\r\n                        instanceWiseRepName: this.instanceWiseRepName + this._reportFilterService.CreditorsBillTracking_loadedTimes,\r\n                    });\r\n            } else {\r\n                this._reportFilterService.previouslyLoadedReportList.push(\r\n                    {\r\n                        reportname: 'Creditors Bill Tracking Report' + '_' + this._reportFilterService.CreditorsBillTracking_loadedTimes,\r\n                        activeurlpath: this.arouter.url,\r\n                        activerurlpath2: activeurlpath2,\r\n                        instanceWiseRepName: this.instanceWiseRepName + this._reportFilterService.CreditorsBillTracking_loadedTimes,\r\n                    });\r\n            }\r\n\r\n        }\r\n\r\n        this.reportdataEmit.emit({\r\n            status: res, data: {\r\n                REPORTDISPLAYNAME: 'Creditors Bill Tracking Report',\r\n                reportname: this.reportNameFormatWise,\r\n                instanceWiseRepName: this.instanceWiseRepName + this._reportFilterService.CreditorsBillTracking_loadedTimes,\r\n                reportparam: {\r\n                    DATE1: this._reportFilterService.CreditorsBillTrackingObj.CreditorsBillTracking_DATE1,\r\n                    DATE2: this._reportFilterService.CreditorsBillTrackingObj.CreditorsBillTracking_DATE2,\r\n                    FROMDATE: this._reportFilterService.CreditorsBillTrackingObj.CreditorsBillTracking_DATE1,\r\n                    TODATE: this._reportFilterService.CreditorsBillTrackingObj.CreditorsBillTracking_DATE2,\r\n                    BSDATE1: this._reportFilterService.CreditorsBillTrackingObj.CreditorsBillTracking_BSDATE1,\r\n                    BSDATE2: this._reportFilterService.CreditorsBillTrackingObj.CreditorsBillTracking_BSDATE2,\r\n                    DIV: this._reportFilterService.CreditorsBillTrackingObj.CreditorsBillTracking_DIV ? this._reportFilterService.CreditorsBillTrackingObj.CreditorsBillTracking_DIV : '%',\r\n                    COSTCENTER: this._reportFilterService.CreditorsBillTrackingObj.CreditorsBillTracking_CostCenter ? this._reportFilterService.CreditorsBillTrackingObj.CreditorsBillTracking_CostCenter : '%',\r\n                    COMID: this.masterService.userProfile.CompanyInfo.COMPANYID,\r\n                    COMPANYID: this.masterService.userProfile.CompanyInfo.COMPANYID,\r\n                    VOUCHERTYPE: this._reportFilterService.CreditorsBillTrackingObj.CreditorsBillTracking_VoucherType ? this._reportFilterService.CreditorsBillTrackingObj.CreditorsBillTracking_VoucherType : 'PV',\r\n                    ACID: this._reportFilterService.CreditorsBillTrackingObj.CreditorsBillTracking_ACID ? this._reportFilterService.CreditorsBillTrackingObj.CreditorsBillTracking_ACID : '%',\r\n                    PARTY: this._reportFilterService.CreditorsBillTrackingObj.CreditorsBillTracking_ACID ? this._reportFilterService.CreditorsBillTrackingObj.CreditorsBillTracking_ACID : '%',\r\n                    ACNAME: this._reportFilterService.CreditorsBillTrackingObj.CreditorsBillTracking_ACCNAME,\r\n                    PHISCALID: this.masterService.PhiscalObj.PhiscalID?this.masterService.PhiscalObj.PhiscalID:'%',\r\n                    DETAIL: this._reportFilterService.CreditorsBillTrackingObj.CreditorsBillTracking_Detail ? this._reportFilterService.CreditorsBillTrackingObj.CreditorsBillTracking_Detail : 1,\r\n                    DIVISIONNAME: this._reportFilterService.CreditorsBillTrackingObj.CreditorsBillTracking_DIVISIONNAME ? this._reportFilterService.CreditorsBillTrackingObj.CreditorsBillTracking_DIVISIONNAME : '',\r\n                    COSTCENTERDISPLAYNAME: this._reportFilterService.CreditorsBillTrackingObj.CreditorsBillTracking_COSTCENTERDISPLAYNAME ? this._reportFilterService.CreditorsBillTrackingObj.CreditorsBillTracking_COSTCENTERDISPLAYNAME : '',\r\n                }\r\n            }\r\n        });\r\n\r\n        if (res == \"ok\") {\r\n            this._reportFilterService.CreditorsBillTracking_loadedTimes = this._reportFilterService.CreditorsBillTracking_loadedTimes + 1;\r\n        }\r\n    }\r\n\r\n    // Close Method\r\n    closeReportBox() {\r\n        this.DialogClosedResult(\"cancel\");\r\n    }\r\n\r\n    AccountEnterClicked() {\r\n        this.gridPopupSettingsForPartyLedgerList = this.masterService.getGenericGridPopUpSettings('SupplierListForReport');\r\n        this.genericGridPartyLedger.show();\r\n    }\r\n\r\n    dblClickAccountSelect(account) {\r\n        this._reportFilterService.CreditorsBillTrackingObj.CreditorsBillTracking_ACID = account.ACID;\r\n        this._reportFilterService.CreditorsBillTrackingObj.CreditorsBillTracking_ACCNAME = account.ACNAME;\r\n    }\r\n\r\n    keyPress(event: any) {\r\n        //console.log(\"@@ecent\",event)\r\n        const pattern = /[\\b]/;\r\n        const inputChar = String.fromCharCode((event as KeyboardEvent).charCode);\r\n        if (!pattern.test(inputChar)) {\r\n          // invalid character, prevent input\r\n          event.preventDefault();\r\n        }\r\n      }\r\n}\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/pages/ReportDialogs/CreditorsBillTrackingReport/creditors-billtracking-report.component.ts","import { Component, Inject, Output, EventEmitter, OnInit } from '@angular/core';\r\nimport { MdDialogRef, MD_DIALOG_DATA } from '@angular/material';\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { MasterRepo } from '../../../common/repositories';\r\nimport { AuthService } from '../../../common/services/permission/authService.service';\r\nimport { ReportMainService } from '../../Reports/components/ReportMain/ReportMain.service';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { ReportFilterService } from '../../../common/popupLists/report-filter/report-filter.service';\r\nimport { AlertService } from '../../../common/services/alert/alert.service';\r\n\r\nexport interface DialogInfo {\r\n    header: string;\r\n    message: Observable<string>;\r\n}\r\n\r\n@Component({\r\n    selector: 'currentstock-warehousewise-account',\r\n    template: require('./currentstock-warehousewisereport-account.component.html'),\r\n    styles: [require('../../Reports/reportStyle.css'), require('../../modal-style.css')],\r\n})\r\n\r\nexport class CurrentStockWarehousWiseReportAccount implements OnInit {\r\n    userProfile: any;\r\n    instanceWiseRepName: string = 'Stock Report - Warehouse Wise';\r\n    warehouseList: any = [];\r\n\r\n    @Output() reportdataEmit = new EventEmitter();\r\n    constructor(private masterService: MasterRepo, private _authService: AuthService,\r\n        private _reportFilterService: ReportMainService, private arouter: Router, public _ActivatedRoute: ActivatedRoute,\r\n        public reportService: ReportFilterService, private alertService: AlertService,\r\n        public dialogref: MdDialogRef<CurrentStockWarehousWiseReportAccount>,\r\n        @Inject(MD_DIALOG_DATA) public data: DialogInfo) {\r\n        this.userProfile = this._authService.getUserProfile();\r\n\r\n        this.masterService.getunsalableWarehouseList().subscribe((res) => {\r\n            this.warehouseList.push(res)\r\n        })\r\n    }\r\n\r\n    ngOnInit() {\r\n        if (this._reportFilterService.CurrentStockWarehousewiseAccObj.assignPrevioiusDate != true) {\r\n            this._reportFilterService.CurrentStockWarehousewiseAccObj.CurrentStockWarehouseWiseAccount_DATE1 = this.masterService.userProfile.CompanyInfo.FBDATE.split('T')[0];\r\n            this._reportFilterService.CurrentStockWarehousewiseAccObj.CurrentStockWarehouseWiseAccount_DATE2 = new Date().toJSON().split('T')[0];\r\n            this._reportFilterService.CurrentStockWarehousewiseAccObj.CurrentStockWarehouseWiseAccount_DIV = this.masterService.userProfile.CompanyInfo.INITIAL;\r\n            this._reportFilterService.CurrentStockWarehousewiseAccObj.CurrentStockWarehouseWiseAccount_COMPANY = '%';\r\n            this._reportFilterService.CurrentStockWarehousewiseAccObj.CurrentStockWarehouseWiseAccount_WAREHOUSETYPE = '%';\r\n            this._reportFilterService.CurrentStockWarehousewiseAccObj.CurrentStockWarehouseWiseAccount_WAREHOUSE = '%';\r\n        }\r\n\r\n        this.changeEntryDate(this._reportFilterService.CurrentStockWarehousewiseAccObj.CurrentStockWarehouseWiseAccount_DATE1, \"AD\");\r\n        this.changeEndDate(this._reportFilterService.CurrentStockWarehousewiseAccObj.CurrentStockWarehouseWiseAccount_DATE2, \"AD\");\r\n    }\r\n\r\n    changeEntryDate(value, format: string) {\r\n        var adbs = require(\"ad-bs-converter\");\r\n        if (format == \"AD\") {\r\n            var adDate = (value.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n            var bsDate = adbs.ad2bs(adDate);\r\n            this._reportFilterService.CurrentStockWarehousewiseAccObj.CurrentStockWarehouseWiseAccount_BSDATE1 = this.masterService.toBSDate(value);\r\n        }\r\n        else if (format == \"BS\") {\r\n            var datearr = value.split('/');\r\n            const bsDate = datearr[2] + \"/\" + datearr[1] + \"/\" + datearr[0];\r\n            // var bsDate = (value.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n            var adDate = adbs.bs2ad(bsDate);\r\n            var Engdate = this.masterService.toADDate(value);\r\n            const Validatedata = this.masterService.ValidateNepaliDate(Engdate)\r\n            if (Validatedata == true) {\r\n                const bsDate1 = datearr[2] + \"/\" + datearr[1] + \"/\" + datearr[0];\r\n                var adDate1 = adbs.bs2ad(bsDate1);\r\n                this._reportFilterService.CurrentStockWarehousewiseAccObj.CurrentStockWarehouseWiseAccount_DATE1 = this.masterService.toADDate(value);\r\n            } else {\r\n                this.alertService.error(\"Cannot Change the date\");\r\n                return;\r\n            }\r\n\r\n\r\n        }\r\n    }\r\n\r\n    changeEndDate(value, format: string) {\r\n        var adbs = require(\"ad-bs-converter\");\r\n        if (format == \"AD\") {\r\n            var adDate = (value.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n            var bsDate = adbs.ad2bs(adDate);\r\n            this._reportFilterService.CurrentStockWarehousewiseAccObj.CurrentStockWarehouseWiseAccount_BSDATE2 = this.masterService.toBSDate(value);\r\n        }\r\n        else if (format == \"BS\") {\r\n            var datearr = value.split('/');\r\n            const bsDate = datearr[2] + \"/\" + datearr[1] + \"/\" + datearr[0];\r\n            // var bsDate = (value.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n            var adDate = adbs.bs2ad(bsDate);\r\n            var Engdate = this.masterService.toADDate(value);\r\n            const Validatedata = this.masterService.ValidateNepaliDate(Engdate)\r\n            if (Validatedata == true) {\r\n                const bsDate1 = datearr[2] + \"/\" + datearr[1] + \"/\" + datearr[0];\r\n                var adDate1 = adbs.bs2ad(bsDate1);\r\n                this._reportFilterService.CurrentStockWarehousewiseAccObj.CurrentStockWarehouseWiseAccount_DATE2 = this.masterService.toADDate(value);\r\n            } else {\r\n                this.alertService.error(\"Cannot Change the date\");\r\n                return;\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    onload() {\r\n        this.DialogClosedResult(\"ok\");\r\n    }\r\n\r\n    closeReportBox() {\r\n        this.DialogClosedResult(\"Error!\");\r\n    }\r\n\r\n    public DialogClosedResult(res) {\r\n\r\n        if (res == \"ok\") {\r\n            this._reportFilterService.CurrentStockWarehousewiseAccObj.assignPrevioiusDate = true;\r\n            let routepaths = this.arouter.url.split('/');\r\n            let activeurlpath2;\r\n            if (routepaths && routepaths.length) {\r\n                activeurlpath2 = routepaths[routepaths.length - 1]\r\n            }\r\n\r\n            if (this._reportFilterService.CurrentStockWarehouseWiseAccount_loadedTimes == 0) {\r\n                this._reportFilterService.previouslyLoadedReportList.push(\r\n                    {\r\n                        reportname: 'Stock Report - Warehouse Wise',\r\n                        activeurlpath: this.arouter.url,\r\n                        instanceWiseRepName: this.instanceWiseRepName + this._reportFilterService.CurrentStockWarehouseWiseAccount_loadedTimes,\r\n                        activerurlpath2: activeurlpath2,\r\n                    });\r\n            } else {\r\n                this._reportFilterService.previouslyLoadedReportList.push(\r\n                    {\r\n                        reportname: 'Stock Report - Warehouse Wise' + '_' + this._reportFilterService.CurrentStockWarehouseWiseAccount_loadedTimes,\r\n                        activeurlpath: this.arouter.url,\r\n                        instanceWiseRepName: this.instanceWiseRepName + this._reportFilterService.CurrentStockWarehouseWiseAccount_loadedTimes,\r\n                        activerurlpath2: activeurlpath2,\r\n                    });\r\n            }\r\n\r\n        }\r\n\r\n        let multiplereportname = 'Current Stock Warehousewise ReportAccount';\r\n        let ShowBatch = this._reportFilterService.CurrentStockWarehousewiseAccObj.CurrentStockWarehouseWiseAccount_SHOWBATCHWISE;\r\n\r\n        if (ShowBatch == 0) {\r\n            multiplereportname = 'Current Stock Warehousewise ReportAccount';\r\n        } else if (ShowBatch == 1) {\r\n            multiplereportname = 'Current Stock Warehousewise ReportAccount_1'\r\n        }\r\n        //console.log(\"@@multiplereportname\", multiplereportname)\r\n\r\n        this.reportdataEmit.emit({\r\n            status: res, data: {\r\n                reportname: multiplereportname, reportparam: {\r\n                    DATE1: this._reportFilterService.CurrentStockWarehousewiseAccObj.CurrentStockWarehouseWiseAccount_DATE1,\r\n                    DATE2: this._reportFilterService.CurrentStockWarehousewiseAccObj.CurrentStockWarehouseWiseAccount_DATE2,\r\n                    // date1: this._reportFilterService.CurrentStockWarehousewiseAccObj.CurrentStockWarehouseWiseAccount_DATE1,\r\n                    // date2: this._reportFilterService.CurrentStockWarehousewiseAccObj.CurrentStockWarehouseWiseAccount_DATE2,\r\n                    // PhiscalID: this.userProfile.CompanyInfo.PHISCALID,\r\n                    PHISCALID: this.userProfile.CompanyInfo.PHISCALID,\r\n                    // DIVISION: this.userProfile.CompanyInfo.INIITAL ? this.userProfile.CompanyInfo.INIITAL : '%',\r\n                    DIV: this.userProfile.CompanyInfo.INITIAL ? this.userProfile.CompanyInfo.INITIAL : '%',\r\n                    COMPANYID: this.userProfile.CompanyInfo.COMPANYID,\r\n                    // Warehouse: this._reportFilterService.CurrentStockWarehousewiseAccObj.CurrentStockWarehouseWiseAccount_WAREHOUSE ? this._reportFilterService.CurrentStockWarehousewiseAccObj.CurrentStockWarehouseWiseAccount_WAREHOUSE : '%',\r\n                    // Company: this._reportFilterService.CurrentStockWarehousewiseAccObj.CurrentStockWarehouseWiseAccount_COMPANY ? this._reportFilterService.CurrentStockWarehousewiseAccObj.CurrentStockWarehouseWiseAccount_COMPANY : '%',\r\n                    // WarehouseType: this._reportFilterService.CurrentStockWarehousewiseAccObj.CurrentStockWarehouseWiseAccount_WAREHOUSETYPE ? this._reportFilterService.CurrentStockWarehousewiseAccObj.CurrentStockWarehouseWiseAccount_WAREHOUSETYPE : '%',\r\n                    WAREHOUSE: '%',\r\n\t                MCODE : '%',\r\n\t                MGROUP : '%',\r\n\t                PTYPE : '100',\r\n\t                MCAT : '%',\r\n\t                SUPCODE : '%',\r\n\t                DIVISIONWISEREPORT : 0,\r\n\t                SHOWBATCHWISESTOCK: this._reportFilterService.CurrentStockWarehousewiseAccObj.CurrentStockWarehouseWiseAccount_SHOWBATCHWISE?this._reportFilterService.CurrentStockWarehousewiseAccObj.CurrentStockWarehouseWiseAccount_SHOWBATCHWISE:0,\r\n\t                REPORTYPE: 0\r\n    }\r\n}\r\n        });\r\n\r\nif (res == \"ok\") {\r\n    this._reportFilterService.CurrentStockWarehouseWiseAccount_loadedTimes = this._reportFilterService.CurrentStockWarehouseWiseAccount_loadedTimes + 1;\r\n}\r\n    }\r\n\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/pages/ReportDialogs/CurrentStockWarehousewiseReportAccount/currentstock-warehousewisereport-account.component.ts","import { Component, Output, OnInit, EventEmitter } from \"@angular/core\";\r\nimport { AuthService } from \"../../../common/services/permission/authService.service\";\r\nimport { ReportMainService } from \"../../Reports/components/ReportMain/ReportMain.service\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\n\r\n@Component({\r\n    selector: \"date-filters\",\r\n    template: require('./date-filters.component.html'),\r\n    styles: [require('../../modal-style.css'), require('../../Reports/reportStyle.css')],\r\n    providers: [AuthService]\r\n\r\n})\r\nexport class DateFilters implements OnInit {\r\n    // @Output() startDateResponse = new EventEmitter();\r\n    // @Output() endDateResponse = new EventEmitter();\r\n    userProfile: any;\r\n    activeurlPath:any;\r\n    PhiscalObj: any=<any>{};\r\n    constructor(private _authService: AuthService,\r\n        private _reportFilterService:ReportMainService,\r\n        public arouter:ActivatedRoute) {\r\n        this.userProfile = this._authService.getUserProfile();\r\n        this.PhiscalObj = this._authService.PhiscalObj();\r\n       // this.activeurlPath = arouter.snapshot.url[0].path;\r\n       ////console.log(\"snapshot\",arouter.snapshot);\r\n    }\r\n    \r\n    ngOnInit() {\r\n        // this.ReportParameters.DATE1 = new Date().toJSON().split('T')[0];\r\n        this._reportFilterService.ReportFilterObject.DATE1=this.PhiscalObj.BeginDate.split('T')[0];\r\n        this._reportFilterService.ReportFilterObject.DATE2 = new Date().toJSON().split('T')[0];\r\n        \r\n        this.changeEntryDate(this._reportFilterService.ReportFilterObject.DATE1, \"AD\");\r\n        this.changeEndDate(this._reportFilterService.ReportFilterObject.DATE2, \"AD\");\r\n        \r\n    }\r\n\r\n    changeEntryDate(value, format: string) {\r\n        var adbs = require(\"ad-bs-converter\");\r\n        if (format == \"AD\") {\r\n            var adDate = (value.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n            var bsDate = adbs.ad2bs(adDate);\r\n            this._reportFilterService.ReportFilterObject.BSDATE1 = bsDate.en.year + '-' + bsDate.en.month + '-' + (bsDate.en.day == '1' || bsDate.en.day == '2' || bsDate.en.day == '3' || bsDate.en.day == '4' || bsDate.en.day == '5' || bsDate.en.day == '6' || bsDate.en.day == '7' || bsDate.en.day == '8' || bsDate.en.day == '9' ? '0' + bsDate.en.day : bsDate.en.day);\r\n            // this.startDateResponse.emit(value);\r\n        } \r\n        else if (format == \"BS\") {\r\n            var bsDate = (value.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n            var adDate = adbs.bs2ad(bsDate);\r\n            this._reportFilterService.ReportFilterObject.DATE1 = this.masterService.toBSDate(value);\r\n        }\r\n    }\r\n\r\n    changeEndDate(value, format: string) {\r\n        var adbs = require(\"ad-bs-converter\");\r\n        if (format == \"AD\") {\r\n            var adDate = (value.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n            var bsDate = adbs.ad2bs(adDate);\r\n            this._reportFilterService.ReportFilterObject.BSDATE2 = bsDate.en.year + '-' + bsDate.en.month + '-' + (bsDate.en.day == '1' || bsDate.en.day == '2' || bsDate.en.day == '3' || bsDate.en.day == '4' || bsDate.en.day == '5' || bsDate.en.day == '6' || bsDate.en.day == '7' || bsDate.en.day == '8' || bsDate.en.day == '9' ? '0' + bsDate.en.day : bsDate.en.day);\r\n            // this.endDateResponse.emit(value);\r\n        }\r\n        else if (format == \"BS\") {\r\n            var bsDate = (value.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n            var adDate = adbs.bs2ad(bsDate);\r\n            this._reportFilterService.ReportFilterObject.DATE2 = this.masterService.toBSDate(value);\r\n        }\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/pages/ReportDialogs/DateFilters/date-filters.component.ts","import { Component, Inject, Output, EventEmitter, OnInit } from '@angular/core';\r\nimport { MdDialogRef, MD_DIALOG_DATA } from '@angular/material';\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { MasterRepo } from '../../../common/repositories';\r\nimport { AuthService } from '../../../common/services/permission/authService.service';\r\nimport { ReportMainService } from '../../Reports/components/ReportMain/ReportMain.service';\r\nimport { Division } from '../../../common/interfaces';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { AlertService } from '../../../common/services/alert/alert.service';\r\nimport { ReportFilterService } from '../../../common/popupLists/report-filter/report-filter.service';\r\nimport * as moment from 'moment';\r\n\r\nexport interface DialogInfo {\r\n    header: string;\r\n    message: Observable<string>;\r\n}\r\n\r\n@Component({\r\n    selector: 'day-book-report',\r\n    template: require('./day-book-report.component.html'),\r\n    styles: [require('../../Reports/reportStyle.css'), require('../../modal-style.css')],\r\n})\r\n\r\nexport class DayBookReport implements OnInit{\r\n    ReportParameters: any = <any>{};\r\n    voucherTypeList: any[] = [];\r\n    userList:any[] = [];\r\n    division: any[] = [];\r\n    instanceWiseRepName:string='Day Book Report';\r\n    showVoucherTable:boolean;\r\n    result: any;\r\n    @Output() reportdataEmit = new EventEmitter();\r\n    constructor(private masterService: MasterRepo,private _authService: AuthService,private alertService: AlertService,\r\n        private _reportFilterService:ReportMainService, private arouter: Router, public _ActivatedRoute: ActivatedRoute,\r\n        public dialogref: MdDialogRef<DayBookReport>,public reportService: ReportFilterService,\r\n        @Inject(MD_DIALOG_DATA) public data: DialogInfo) {\r\n\r\n        this.getVoucherType();\r\n        this.getuserList();\r\n\r\n        this._reportFilterService.DayBookObj.Reportnameis = 'daybookreport';\r\n\r\n\r\n        this.division=[];\r\n        //let data: Array<IDivision> = [];\r\n        if(this.masterService.userSetting.userwisedivision == 1){\r\n          this.masterService.getDivisionFromRightPrivelege().subscribe(res=>{\r\n              if(res.status == 'ok'){\r\n                  this.division = res.result;\r\n              }\r\n          })\r\n        }\r\n        else{\r\n         this.masterService.getAllDivisions()\r\n         .subscribe(res => {\r\n           //////console.log(\"div\" + JSON.stringify(res));\r\n           this.division.push(<Division>res);\r\n         }, error => {\r\n           this.masterService.resolveError(error, \"divisions - getDivisions\");\r\n         });\r\n        }\r\n        // this.masterService.getAccDivList();\r\n    }\r\n\r\n    ngOnInit(){\r\n        this._ActivatedRoute.queryParams.subscribe(params => {\r\n          const mode = params.mode;\r\n          if (mode == \"DRILL\" && this.reportService.drillParam.returnUrl && this.reportService.drillParam.reportname=='Day Book Report_1') {\r\n            // //console.log(\"@@daybook\",this.reportService.drillParam)\r\n            this._reportFilterService.DayBookObj.DayBook_DATE1=moment(this.reportService.drillParam.reportparam.DATE1).format('YYYY-MM-DD');\r\n            this._reportFilterService.DayBookObj.DayBook_DATE2=moment(this.reportService.drillParam.reportparam.DATE2).format('YYYY-MM-DD');\r\n            this._reportFilterService.DayBookObj.DayBook_BSDATE1=this.reportService.drillParam.reportparam.BSDATE1;\r\n            this._reportFilterService.DayBookObj.DayBook_BSDATE2=this.reportService.drillParam.reportparam.BSDATE2;\r\n            this._reportFilterService.DayBookObj.DayBook_DIV=this.reportService.drillParam.reportparam.DIV;\r\n            this._reportFilterService.DayBookObj.DayBook_DETAILREPORT=this.reportService.drillParam.reportparam.DETAILREPORT;\r\n            this._reportFilterService.DayBookObj.DayBook_SUMMARYTYPE=this.reportService.drillParam.reportparam.SUMMARYTYPE;\r\n            this._reportFilterService.DayBookObj.USER=this.reportService.drillParam.reportparam.USR;\r\n            this._reportFilterService.DayBookObj.DayBook_VTYPE=this.reportService.drillParam.reportparam.VTYPE;\r\n          }else{\r\n            if(this._reportFilterService.DayBookObj.assignPrevioiusDate != true){\r\n              this.masterService.getAccDivList();\r\n                this._reportFilterService.DayBookObj.DayBook_DATE1 = this.masterService.PhiscalObj.BeginDate.split('T')[0];\r\n            if (this.masterService.userProfile.CompanyInfo.ActualFY == this.masterService.PhiscalObj.PhiscalID) {\r\n                    this._reportFilterService.DayBookObj.DayBook_DATE2 = new Date().toJSON().split('T')[0];\r\n                    this.changeEndDate(this._reportFilterService.DayBookObj.DayBook_DATE2, \"AD\");\r\n                  }\r\n                  else {\r\n\r\n                this._reportFilterService.DayBookObj.DayBook_DATE2 = this.masterService.PhiscalObj.EndDate.split('T')[0];\r\n                        this.changeEndDate(this._reportFilterService.DayBookObj.DayBook_DATE2, \"AD\");\r\n\r\n\r\n                }\r\n                // this._reportFilterService.DayBookObj.DayBook_DATE2 = new Date().toJSON().split('T')[0];\r\n                // this._reportFilterService.DayBookObj.DayBook_DIV=this.masterService.userProfile.CompanyInfo.INITIAL;\r\n                this.masterService.viewDivision.subscribe(() => {\r\n                  if(this.masterService.userSetting.userwisedivision==0 ||  this.masterService.showAll == true){ //ALL OPTION SELECTION IN DIVISION IN REPORT DIALOG BOX\r\n                    this._reportFilterService.DayBookObj.DayBook_DIV='%';\r\n                }else{\r\n                  if(this.masterService.userSetting.userwisedivision==1 && this.division.length ==1){\r\n                    this._reportFilterService.DayBookObj.DayBook_DIV=this.division[0].INITIAL;\r\n                  }else{\r\n                    this._reportFilterService.DayBookObj.DayBook_DIV=this.masterService.userProfile.CompanyInfo.INITIAL;\r\n                  }\r\n                }\r\n                })\r\n                this._reportFilterService.DayBookObj.DayBook_DETAILREPORT = '0';\r\n                this._reportFilterService.DayBookObj.DayBook_SUMMARYTYPE = '0';\r\n                this._reportFilterService.DayBookObj.DayBook_VTYPE=\"%\";\r\n                this._reportFilterService.DayBookObj.SHOWCASEOPENINGCLOSINGBL=0;\r\n                this._reportFilterService.DayBookObj.Daybook_MultipleVoucher = [];\r\n            }\r\n\r\n            if(params.instancename){\r\n                // ////console.log(\"@@[day book Report0]\",params.instancename,this._reportFilterService.reportDataStore[params.instancename].param.reportparam)\r\n                this._reportFilterService.DayBookObj.DayBook_DATE1=this._reportFilterService.reportDataStore[params.instancename].param.reportparam.DATE1;\r\n                this._reportFilterService.DayBookObj.DayBook_DATE2=this._reportFilterService.reportDataStore[params.instancename].param.reportparam.DATE2;\r\n                this._reportFilterService.DayBookObj.DayBook_DIV=this._reportFilterService.reportDataStore[params.instancename].param.reportparam.DIV;\r\n                this._reportFilterService.DayBookObj.DayBook_DETAILREPORT=this._reportFilterService.reportDataStore[params.instancename].param.reportparam.DETAILREPORT;\r\n                this._reportFilterService.DayBookObj.DayBook_SUMMARYTYPE=this._reportFilterService.reportDataStore[params.instancename].param.reportparam.SUMMARYTYPE;\r\n                this._reportFilterService.DayBookObj.USER=this._reportFilterService.reportDataStore[params.instancename].param.reportparam.USR;\r\n                this._reportFilterService.DayBookObj.DayBook_VTYPE=this._reportFilterService.reportDataStore[params.instancename].param.reportparam.VTYPE;\r\n                this._reportFilterService.DayBookObj.Daybook_FROM_VNO=this._reportFilterService.reportDataStore[params.instancename].param.reportparam.FROM_VNO;\r\n                this._reportFilterService.DayBookObj.Daybook_TO_VNO = this._reportFilterService.reportDataStore[params.instancename].param.reportparam.TO_VNO;\r\n            }\r\n\r\n\r\n\r\n        this.changeEntryDate(this._reportFilterService.DayBookObj.DayBook_DATE1, \"AD\");\r\n        this.changeEndDate(this._reportFilterService.DayBookObj.DayBook_DATE2, \"AD\");\r\n\r\n    }\r\n   });\r\n   if(this._reportFilterService.DayBookObj.Daybook_MultipleVoucher.length>0){\r\n    this.showVoucherTable=true;\r\n   }\r\n}\r\n\r\n    changeEntryDate(value, format: string) {\r\n        var adbs = require(\"ad-bs-converter\");\r\n        if (format == \"AD\") {\r\n            var adDate = (value.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n            var bsDate = adbs.ad2bs(adDate);\r\n            this._reportFilterService.DayBookObj.DayBook_BSDATE1 = this.masterService.toBSDate(value);\r\n        }\r\n        else if (format == \"BS\") {\r\n          var datearr = value.split('/');\r\n          const bsDate = datearr[2]+\"/\"+datearr[1]+\"/\"+datearr[0];\r\n            // var bsDate = (value.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n            var adDate = adbs.bs2ad(bsDate);\r\n            var Engdate = this.masterService.toADDate(value);\r\n            const Validatedata = this.masterService.ValidateNepaliDate(Engdate)\r\n            if(Validatedata == true){\r\n              const bsDate1 = datearr[2]+\"/\"+datearr[1]+\"/\"+datearr[0];\r\n              var adDate1 = adbs.bs2ad(bsDate1);\r\n              this._reportFilterService.DayBookObj.DayBook_DATE1 = this.masterService.toADDate(value);\r\n            }else{\r\n                this.alertService.error(\"Cannot Change the date\");\r\n              return;\r\n            }\r\n            // this._reportFilterService.DayBookObj.DayBook_DATE1 = this.masterService.toBSDate(value);\r\n        }\r\n    }\r\n\r\n    changeEndDate(value, format: string) {\r\n        var adbs = require(\"ad-bs-converter\");\r\n        if (format == \"AD\") {\r\n            var adDate = (value.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n            var bsDate = adbs.ad2bs(adDate);\r\n            this._reportFilterService.DayBookObj.DayBook_BSDATE2 = this.masterService.toBSDate(value);\r\n        }\r\n        else if (format == \"BS\") {\r\n          var datearr = value.split('/');\r\n          const bsDate = datearr[2]+\"/\"+datearr[1]+\"/\"+datearr[0];\r\n            // var bsDate = (value.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n            var adDate = adbs.bs2ad(bsDate);\r\n            var Engdate = this.masterService.toADDate(value);\r\n                const Validatedata = this.masterService.ValidateNepaliDate(Engdate)\r\n                if(Validatedata == true){\r\n                  const bsDate1 = datearr[2]+\"/\"+datearr[1]+\"/\"+datearr[0];\r\n                  var adDate1 = adbs.bs2ad(bsDate1);\r\n                  this._reportFilterService.DayBookObj.DayBook_DATE2 = this.masterService.toADDate(value);\r\n                }else{\r\n                    this.alertService.error(\"Cannot Change the date\");\r\n                  return;\r\n                }\r\n            // this._reportFilterService.DayBookObj.DayBook_DATE2 = this.masterService.toBSDate(value);\r\n        }\r\n    }\r\n\r\n    onload() {\r\n      if(Number(this._reportFilterService.DayBookObj.Daybook_FROM_VNO) > Number(this._reportFilterService.DayBookObj.Daybook_TO_VNO)){\r\n        this.alertService.info(\"Starting Voucher No is Greater Than Ending Voucher No!\");\r\n        return;\r\n            }else{\r\n                this.DialogClosedResult(\"ok\");\r\n\r\n            }\r\n\r\n    }\r\n\r\n    getVoucherType(){\r\n        this.masterService.getAllVoucherType().subscribe(\r\n            (res) =>{\r\n              // console.log(\"@@@RES\",res);\r\n                this.voucherTypeList.push(res);\r\n            }\r\n        )\r\n    }\r\n\r\n    getuserList(){\r\n        this.masterService.getUserList().subscribe(\r\n            res =>{\r\n                this.userList = res\r\n                //console.log(this.userList,\"userlist\")\r\n            }\r\n        )\r\n    }\r\n\r\n    closeReportBox() {\r\n        this.DialogClosedResult(\"Error!\");\r\n    }\r\n\r\n    public DialogClosedResult(res) {\r\n      let multipleVouchers = [];\r\n        // let SelectedGroupACC = '';\r\n        this._reportFilterService.SelectedVouchers='';\r\n        if (this._reportFilterService.DayBookObj.Daybook_MultipleVoucher === undefined ||this._reportFilterService.DayBookObj.Daybook_MultipleVoucher === null || (this._reportFilterService.DayBookObj.Daybook_MultipleVoucher && this._reportFilterService.DayBookObj.Daybook_MultipleVoucher.length==0)) {\r\n            this._reportFilterService.SelectedVouchers = this._reportFilterService.DayBookObj.DayBook_VTYPE;\r\n        } else {\r\n            if (this._reportFilterService.DayBookObj.Daybook_MultipleVoucher.length != 0) {\r\n                this._reportFilterService.DayBookObj.Daybook_MultipleVoucher.forEach(vcList => {\r\n                  multipleVouchers.push(vcList.VOUCHER_ID)\r\n                });\r\n                this._reportFilterService.SelectedVouchers += `${multipleVouchers},`\r\n                // var nameArr = this._reportFilterService.SelectedVouchers.split(',');\r\n                // var myArr = nameArr;\r\n                // let item = myArr.filter((el, i, a) => i === a.indexOf(el))\r\n                // ////console.log(\"@@item\",item)\r\n                // this._reportFilterService.SelectedVouchers= item.toString();\r\n            } else {\r\n                this._reportFilterService.SelectedVouchers = '%';\r\n            }\r\n        }\r\n        this._reportFilterService.DayBookObj.DayBook_DIV = (this._reportFilterService.DayBookObj.DayBook_DIV== null || this._reportFilterService.DayBookObj.DayBook_DIV == \"\") ? \"%\" : this._reportFilterService.DayBookObj.DayBook_DIV;\r\n\r\n       let multipleReportFormateName = '';\r\n       if(this._reportFilterService.DayBookObj.DayBook_DETAILREPORT == \"0\" && this._reportFilterService.DayBookObj.DayBook_SUMMARYTYPE == \"0\"){\r\n           multipleReportFormateName = 'Day Book Report'\r\n       }else if(this._reportFilterService.DayBookObj.DayBook_DETAILREPORT == \"0\" && this._reportFilterService.DayBookObj.DayBook_SUMMARYTYPE == \"1\"){\r\n        multipleReportFormateName = 'Day Book Report_2'\r\n       }\r\n       else{\r\n           multipleReportFormateName = 'Day Book Report_1'\r\n       }\r\n\r\n       if(this._reportFilterService.DayBookObj.Daybook_FROM_VNO == null ||\r\n        this._reportFilterService.DayBookObj.Daybook_FROM_VNO === undefined\r\n      ){\r\n          this._reportFilterService.DayBookObj.Daybook_FROM_VNO = 0;\r\n      }\r\n\r\n      if(this._reportFilterService.DayBookObj.Daybook_TO_VNO == null ||\r\n        this._reportFilterService.DayBookObj.Daybook_TO_VNO === undefined\r\n      ){\r\n          this._reportFilterService.DayBookObj.Daybook_TO_VNO = 0;\r\n      }\r\n\r\n\r\n       \r\n       if (this._reportFilterService.DayBookObj.DayBook_DIV && this._reportFilterService.DayBookObj.DayBook_DIV == '%') {\r\n        this._reportFilterService.DayBookObj.DayBook_DIVISIONNAME = 'All';\r\n      }else if( this._reportFilterService.DayBookObj.DayBook_DIV && this._reportFilterService.DayBookObj.DayBook_DIV!= '%'){\r\n        let abc = this.division.filter(x=>x.INITIAL == this._reportFilterService.DayBookObj.DayBook_DIV);\r\n          if(abc && abc.length>0 && abc[0]){\r\n            this._reportFilterService.DayBookObj.DayBook_DIVISIONNAME = abc[0].NAME;\r\n          }else{\r\n            this._reportFilterService.DayBookObj.DayBook_DIVISIONNAME = '';\r\n          }\r\n      }else{\r\n        this._reportFilterService.DayBookObj.DayBook_DIVISIONNAME = '';\r\n      }\r\n\r\n      if (this._reportFilterService.DayBookObj.DayBook_VTYPE && this._reportFilterService.DayBookObj.DayBook_VTYPE == '%') {\r\n        this._reportFilterService.DayBookObj.DayBook_VTYPEDISPLAYNAME = 'All';\r\n      }else if( this._reportFilterService.DayBookObj.DayBook_VTYPE && this._reportFilterService.DayBookObj.DayBook_VTYPE!= '%'){\r\n        if(this._reportFilterService.DayBookObj.Daybook_MultipleVoucher.length==0){\r\n          let abc = this.voucherTypeList.filter(x=>x.VOUCHER_ID == this._reportFilterService.DayBookObj.DayBook_VTYPE);\r\n          if(abc && abc.length>0 && abc[0]){\r\n            this._reportFilterService.DayBookObj.DayBook_VTYPEDISPLAYNAME = abc[0].VOUCHER_NAME;\r\n          }else{\r\n            this._reportFilterService.DayBookObj.DayBook_VTYPEDISPLAYNAME = '';\r\n          }\r\n        }else{\r\n          this._reportFilterService.DayBookObj.DayBook_VTYPEDISPLAYNAME = '';\r\n        }  \r\n      }else{\r\n        this._reportFilterService.DayBookObj.DayBook_VTYPEDISPLAYNAME = '';\r\n      }\r\n\r\n       if(res == \"ok\"){\r\n       this._reportFilterService.DayBookObj.assignPrevioiusDate = true;\r\n       let routepaths = this.arouter.url.split('/');\r\n        let activeurlpath2;\r\n              if(routepaths&& routepaths.length){\r\n                activeurlpath2=routepaths[routepaths.length-1]\r\n              }\r\n\r\n              if(this._reportFilterService.DayBook_loadedTimes == 0){\r\n                this._reportFilterService.previouslyLoadedReportList.push(\r\n                    {reportname: 'Day Book Report',\r\n                    activeurlpath: this.arouter.url,\r\n                    activerurlpath2: activeurlpath2,\r\n                    instanceWiseRepName:this.instanceWiseRepName +this._reportFilterService.DayBook_loadedTimes,\r\n                });\r\n            }else{\r\n                this._reportFilterService.previouslyLoadedReportList.push(\r\n                    {reportname: 'Day Book Report'+'_'+this._reportFilterService.DayBook_loadedTimes,\r\n                    activeurlpath: this.arouter.url,\r\n                    activerurlpath2: activeurlpath2,\r\n                    instanceWiseRepName:this.instanceWiseRepName +this._reportFilterService.DayBook_loadedTimes,\r\n                });\r\n            }\r\n\r\n       }\r\n\r\n        this.reportdataEmit.emit({\r\n            status: res, data: {\r\n                REPORTDISPLAYNAME : 'Day Book Report',\r\n                reportname: multipleReportFormateName,\r\n                instanceWiseRepName:this.instanceWiseRepName+this._reportFilterService.DayBook_loadedTimes,\r\n                reportparam: {\r\n                  VTYPEDISPLAYNAME: this._reportFilterService.DayBookObj.DayBook_VTYPEDISPLAYNAME?this._reportFilterService.DayBookObj.DayBook_VTYPEDISPLAYNAME:'',\r\n                    DATE1: this._reportFilterService.DayBookObj.DayBook_DATE1,\r\n                    DATE2: this._reportFilterService.DayBookObj.DayBook_DATE2,\r\n                    BSDATE1: this._reportFilterService.DayBookObj.DayBook_BSDATE1,\r\n                    BSDATE2: this._reportFilterService.DayBookObj.DayBook_BSDATE2,\r\n                    DIV: this._reportFilterService.DayBookObj.DayBook_DIV,\r\n                    PHISCALID: this.masterService.PhiscalObj.PhiscalID,\r\n                    COMID: this.masterService.userProfile.CompanyInfo.COMPANYID,\r\n                    VTYPE : this._reportFilterService.SelectedVouchers?this._reportFilterService.SelectedVouchers:'%',\r\n                    DETAILREPORT: this._reportFilterService.DayBookObj.DayBook_DETAILREPORT,\r\n                    SUMMARYTYPE: this._reportFilterService.DayBookObj.DayBook_DETAILREPORT == '0'? this._reportFilterService.DayBookObj.DayBook_SUMMARYTYPE:'0',\r\n                    USR  : this._reportFilterService.DayBookObj.USER?this._reportFilterService.DayBookObj.USER:'%',\r\n                    DIVISIONNAME : this._reportFilterService.DayBookObj.DayBook_DIVISIONNAME ? this._reportFilterService.DayBookObj.DayBook_DIVISIONNAME : '',\r\n                    USERDISPLAYNAME: this._reportFilterService.DayBookObj.USER?this._reportFilterService.DayBookObj.USER:'',\r\n                    SHOWCASEOPENINGCLOSINGBL: this._reportFilterService.DayBookObj.SHOWCASEOPENINGCLOSINGBL?this._reportFilterService.DayBookObj.SHOWCASEOPENINGCLOSINGBL:0,\r\n                    VCHR1 : this._reportFilterService.DayBookObj.Daybook_FROM_VNO ? this._reportFilterService.DayBookObj.Daybook_FROM_VNO:0,\r\n                    VCHR2 : this._reportFilterService.DayBookObj.Daybook_TO_VNO ? this._reportFilterService.DayBookObj.Daybook_TO_VNO:0,\r\n                }\r\n            }\r\n        });\r\n\r\n        if(res == \"ok\"){\r\n            this._reportFilterService.DayBook_loadedTimes = this._reportFilterService.DayBook_loadedTimes+1;\r\n        }\r\n    }\r\n\r\n    OnVoucherSelect(){\r\n      this.showVoucherTable = true;\r\n      if(this._reportFilterService.DayBookObj.DayBook_VTYPE == 'All' || this._reportFilterService.DayBookObj.DayBook_VTYPE == '%'  ){\r\n        this.showVoucherTable = false;\r\n        this._reportFilterService.DayBookObj.Daybook_MultipleVoucher=[];\r\n      }\r\n      let vouchername=this.voucherTypeList.filter(x=>x.VOUCHER_ID==this._reportFilterService.DayBookObj.DayBook_VTYPE);\r\n      // console.log(\"@@vouchername\",vouchername)\r\n      if(vouchername.length>0){\r\n        this._reportFilterService.DayBookObj.DayBook_VTYPENAME=vouchername[0].VOUCHER_NAME;\r\n      }\r\n    }\r\n\r\n    addVoucherList(){\r\n\r\n      let selectACList = this._reportFilterService.DayBookObj.Daybook_MultipleVoucher.filter(vcList => vcList.VOUCHER_ID == this._reportFilterService.DayBookObj.DayBook_VTYPE)\r\n        if (\r\n            this._reportFilterService.DayBookObj.DayBook_VTYPE === \"\" ||\r\n            this._reportFilterService.DayBookObj.DayBook_VTYPE === null ||\r\n            this._reportFilterService.DayBookObj.DayBook_VTYPE === undefined\r\n        ) {\r\n            return;\r\n        }\r\n\r\n        if (selectACList.length === 0) {\r\n          this._reportFilterService.DayBookObj.Daybook_MultipleVoucher.push({ VOUCHER_ID: this._reportFilterService.DayBookObj.DayBook_VTYPE, VOUCHER_NAME: this._reportFilterService.DayBookObj.DayBook_VTYPENAME })\r\n          \r\n        }\r\n    }\r\n\r\n    deleteVoucher(index){\r\n      this._reportFilterService.DayBookObj.Daybook_MultipleVoucher.splice(index, 1);\r\n        this._reportFilterService.SelectedVouchers='';\r\n    }\r\n\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/pages/ReportDialogs/DayBookReport/day-book-report.component.ts","import { Component, Output, EventEmitter, ViewChild, Input, ElementRef } from '@angular/core';\r\nimport { MasterRepo } from '../../../common/repositories';\r\n\r\n@Component({\r\n  selector: 'debitnote-register-report',\r\n  template: require('./debitnote-register-report.component.html'),\r\n  styles: [require('../../modal-style.css'), require('../../Reports/reportStyle.css')],\r\n})\r\nexport class DebitNoteRegisterReportComponent {\r\n  DebitNoteRegisterReport: any = <any>{};\r\n\r\n  @ViewChild('division') division: ElementRef\r\n  private divisionList = []\r\n  showopeningBl: string\r\n  @Output() reportdataEmit = new EventEmitter();\r\n  @Input() reportType: string;\r\n\r\n  constructor(public masterService: MasterRepo) {\r\n    this.DebitNoteRegisterReport.DATE1 = new Date().toJSON().split('T')[0];\r\n    this.changeEntryDate(this.DebitNoteRegisterReport.DATE1, \"AD\");\r\n    this.DebitNoteRegisterReport.DATE = new Date().toJSON().split('T')[0];\r\n    this.changeEndDate(this.DebitNoteRegisterReport.DATE, \"AD\");\r\n\r\n    this.masterService.getAllDivisions().subscribe((res) => {\r\n      this.divisionList.push(res)\r\n    })\r\n  }\r\n\r\n  onload() {\r\n    this.DialogClosedResult(\"ok\");\r\n  }\r\n\r\n  public DialogClosedResult(res) {\r\n    this.reportdataEmit.emit({\r\n      status: res, data: {\r\n        reportname: 'Debit Note Register Report', reportparam: {\r\n          DATE1: this.DebitNoteRegisterReport.DATE1,\r\n          DATE2: this.DebitNoteRegisterReport.DATE,\r\n          DIV: this.DebitNoteRegisterReport.DIV,\r\n          COMPANYID: this.masterService.userProfile.CompanyInfo.COMPANYID,\r\n          PHISCALID: this.masterService.PhiscalObj.PhiscalID\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  divisionChanged() {\r\n    this.DebitNoteRegisterReport.DIV = this.division.nativeElement.value\r\n  }\r\n\r\n  hide() {\r\n    this.DialogClosedResult(\"Error\");\r\n  }\r\n\r\n  changeEntryDate(value, format: string) {\r\n    var adbs = require(\"ad-bs-converter\");\r\n    if (format == \"AD\") {\r\n      var adDate = (value.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n      var bsDate = adbs.ad2bs(adDate);\r\n      this.DebitNoteRegisterReport.BSDATE1 = this.masterService.toBSDate(value);\r\n    }\r\n    else if (format == \"BS\") {\r\n      var bsDate = (value.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n      var adDate = adbs.bs2ad(bsDate);\r\n      this.DebitNoteRegisterReport.DATE1 = this.masterService.toADDate(value);\r\n    }\r\n  }\r\n\r\n  changeEndDate(value, format: string) {\r\n    var adbs = require(\"ad-bs-converter\");\r\n    if (format == \"AD\") {\r\n      var adDate = (value.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n      var bsDate = adbs.ad2bs(adDate);\r\n      this.DebitNoteRegisterReport.BSDATE2 = this.masterService.toBSDate(value);\r\n    }\r\n    else if (format == \"BS\") {\r\n      var bsDate = (value.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n      var adDate = adbs.bs2ad(bsDate);\r\n      this.DebitNoteRegisterReport.DATE = this.masterService.toADDate(value);\r\n    }\r\n  }\r\n\r\n  cancel() {\r\n    this.DialogClosedResult(\"cancel\");\r\n  }\r\n\r\n  preventInput($event) {\r\n    $event.preventDefault();\r\n    return false;\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/pages/ReportDialogs/Debit-Note-Register-Report/debitnote-register-report.component.ts","import { NgaModule } from '../../../theme/nga.module';\r\nimport { Component, Inject, Output, EventEmitter, OnInit, ViewChild } from '@angular/core';\r\nimport { MdDialogRef, MD_DIALOG_DATA } from '@angular/material';\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { MasterRepo } from '../../../common/repositories';\r\nimport { Division } from '../../../common/interfaces';\r\nimport { AuthService } from '../../../common/services/permission/authService.service';\r\nimport { ReportMainService } from '../../Reports/components/ReportMain/ReportMain.service';\r\nimport { Router, NavigationEnd, ActivatedRoute } from '@angular/router';\r\nimport { ReportFilterService } from '../../../common/popupLists/report-filter/report-filter.service';\r\nimport { AlertService } from '../../../common/services/alert/alert.service';\r\nimport { GenericPopUpComponent, GenericPopUpSettings } from '../../../common/popupLists/generic-grid/generic-popup-grid.component';\r\n\r\nexport interface DialogInfo {\r\n    header: string;\r\n    message: Observable<string>;\r\n}\r\n\r\n@Component({\r\n    selector: 'result-debtorsreport-dialog',\r\n    template: require('./debtorsreport.component.html'),\r\n    styles: [require('../../Reports/reportStyle.css'), require('../../modal-style.css')],\r\n})\r\n\r\nexport class DebtorsReport implements OnInit{\r\n    // ReportParameters: any = <any>{};\r\n    division: any[] = [];\r\n    CostcenterList: any[] = [];\r\n    userProfile: any;\r\n    date1: any;\r\n    date2: any;\r\n    instanceWiseRepName:string='Debtors Report';\r\n    AreaList: any[] = [];\r\n    PartyGroupList:any[]=[];\r\n    PartyCategoryList:any[]=[];\r\n  @ViewChild(\"genericeSalesManList\")\r\n  genericeSalesManList: GenericPopUpComponent;\r\n  gridSalesmanListPopupSettings: GenericPopUpSettings = new GenericPopUpSettings();\r\n\r\n    @Output() reportdataEmit = new EventEmitter();\r\n    constructor(private masterService: MasterRepo,private _authService: AuthService,\r\n        private _reportFilterService:ReportMainService, private arouter: Router,public _ActivatedRoute: ActivatedRoute,\r\n        public reportService: ReportFilterService, private alertService: AlertService,\r\n        public dialogref: MdDialogRef<DebtorsReport>,\r\n        @Inject(MD_DIALOG_DATA) public data: DialogInfo) {\r\n        this.userProfile = this._authService.getUserProfile();\r\n\r\n        this.division=[];\r\n        //let data: Array<IDivision> = [];\r\n        if(this.masterService.userSetting.userwisedivision == 1){\r\n          this.masterService.getDivisionFromRightPrivelege().subscribe(res=>{\r\n              if(res.status == 'ok'){\r\n                  this.division = res.result;\r\n              }\r\n          })\r\n        }\r\n        else{\r\n         this.masterService.getAllDivisions()\r\n         .subscribe(res => {\r\n           //////console.log(\"div\" + JSON.stringify(res));\r\n           this.division.push(<Division>res);\r\n         }, error => {\r\n           this.masterService.resolveError(error, \"divisions - getDivisions\");\r\n         });\r\n        }\r\n\r\n            this.masterService.getCostcenter().subscribe(res => {\r\n                this.CostcenterList = res;\r\n            })\r\n            this.masterService.getAreaList().subscribe(res => {\r\n              this.AreaList = res.result;\r\n          })\r\n\r\n          this.masterService.getPartyGroupList().subscribe(res => {\r\n            this.PartyGroupList = res.result;\r\n        })\r\n\r\n        this.masterService.getPartyCategoryList().subscribe(res => {\r\n          this.PartyCategoryList = res.result;\r\n      })\r\n\r\n            // this.masterService.getAccDivList();\r\n\r\n    }\r\n\r\n    ngOnInit(){\r\n        this._ActivatedRoute.queryParams.subscribe(params => {\r\n            const mode = params.mode;\r\n            if (mode == \"DRILL\" && this.reportService.drillParam.returnUrl && this.reportService.drillParam.reportname=='Debtors Report' && this._reportFilterService.DebtorsReportObj.assignPrevioiusDate != true) {\r\n            this._reportFilterService.DebtorsReportObj.Debtors_DATE1=this.reportService.drillParam.reportparam.DATE1;\r\n            this._reportFilterService.DebtorsReportObj.Debtors_DATE2=this.reportService.drillParam.reportparam.DATE2;\r\n            this._reportFilterService.DebtorsReportObj.Debtors_DIV=this.reportService.drillParam.reportparam.DIV;\r\n            this._reportFilterService.DebtorsReportObj.Debtors_CostCenter=this.reportService.drillParam.reportparam.COSTCENTER;\r\n            }else{\r\n                if(this._reportFilterService.DebtorsReportObj.assignPrevioiusDate != true){\r\n                  this.masterService.getAccDivList();\r\n                    this._reportFilterService.DebtorsReportObj.Debtors_DATE1=this.masterService.PhiscalObj.BeginDate.split('T')[0];\r\n                    if (this.userProfile.CompanyInfo.ActualFY == this.masterService.PhiscalObj.PhiscalID) {\r\n                        this._reportFilterService.DebtorsReportObj.Debtors_DATE2  = new Date().toJSON().split('T')[0];\r\n                        this.changeEndDate(this._reportFilterService.DebtorsReportObj.Debtors_DATE2  , \"AD\");\r\n                      }\r\n                      else {\r\n                            this._reportFilterService.DebtorsReportObj.Debtors_DATE2  = this.masterService.PhiscalObj.EndDate.split('T')[0];\r\n                            this.changeEndDate(this._reportFilterService.DebtorsReportObj.Debtors_DATE2  , \"AD\");\r\n                    }\r\n                    // this._reportFilterService.DebtorsReportObj.Debtors_DATE2 = new Date().toJSON().split('T')[0];\r\n                    this._reportFilterService.DebtorsReportObj.REPORTMODE='0';\r\n                    // this._reportFilterService.DebtorsReportObj.Debtors_DIV=this.masterService.userProfile.CompanyInfo.INITIAL;\r\n                    this.masterService.viewDivision.subscribe(() => {\r\n                      if(this.masterService.userSetting.userwisedivision==0 ||  this.masterService.showAll == true){ //ALL OPTION SELECTION IN DIVISION IN REPORT DIALOG BOX\r\n                        this._reportFilterService.DebtorsReportObj.Debtors_DIV='%';\r\n                    }else{\r\n                      if(this.masterService.userSetting.userwisedivision==1 && this.division.length ==1){\r\n                        this._reportFilterService.DebtorsReportObj.Debtors_DIV=this.division[0].INITIAL;\r\n                      }else{\r\n                        this._reportFilterService.DebtorsReportObj.Debtors_DIV=this.masterService.userProfile.CompanyInfo.INITIAL;\r\n                      }\r\n                    }\r\n                    })\r\n                    this._reportFilterService.DebtorsReportObj.Debtors_CostCenter ='%';\r\n                    this._reportFilterService.DebtorsReportObj.DebtorsReport_AreaWise=0;\r\n                    this._reportFilterService.DebtorsReportObj.DebtorsReport_PartyGroup='%';\r\n                    this._reportFilterService.DebtorsReportObj.DebtorsReport_PartyCategory ='%';\r\n\r\n\r\n                    }\r\n\r\n                    if(params.instancename){\r\n                        // ////console.log(\"@@[Debtors Report0]\",params.instancename,this._reportFilterService.reportDataStore[params.instancename].param.reportparam)\r\n                        this._reportFilterService.DebtorsReportObj.Debtors_DATE1=this._reportFilterService.reportDataStore[params.instancename].param.reportparam.DATE1;\r\n                        this._reportFilterService.DebtorsReportObj.Debtors_DATE2=this._reportFilterService.reportDataStore[params.instancename].param.reportparam.DATE2;\r\n                        this._reportFilterService.DebtorsReportObj.Debtors_DIV=this._reportFilterService.reportDataStore[params.instancename].param.reportparam.DIV;\r\n                        this._reportFilterService.DebtorsReportObj.Debtors_CostCenter=this._reportFilterService.reportDataStore[params.instancename].param.reportparam.COSTCENTER;\r\n                        this._reportFilterService.DebtorsReportObj.GROUPBY=this._reportFilterService.reportDataStore[params.instancename].param.reportparam.GROUPBY;\r\n                        this._reportFilterService.DebtorsReportObj.Debtors_OPNINGBLONLY=this._reportFilterService.reportDataStore[params.instancename].param.reportparam.OPNINGBLONLY;\r\n                        this._reportFilterService.DebtorsReportObj.REPORTMODE=this._reportFilterService.reportDataStore[params.instancename].param.reportparam.REPORTMODE;\r\n                        this._reportFilterService.DebtorsReportObj.SHOWDPARTYDETAIL=this._reportFilterService.reportDataStore[params.instancename].param.reportparam.SHOWDPARTYDETAIL;\r\n                        this._reportFilterService.DebtorsReportObj.Debtors_INCLUDEPOSTEDTRANSACTION=this._reportFilterService.reportDataStore[params.instancename].param.reportparam.Debtors_INCLUDEPOSTEDTRANSACTION;\r\n                        this._reportFilterService.DebtorsReportObj.DebtorsReport_PartyCategory =this._reportFilterService.reportDataStore[params.instancename].param.reportparam.PARTYCATEGORY;\r\n                        this._reportFilterService.DebtorsReportObj.Debtors_SHOWBRANCHBL = this._reportFilterService.reportDataStore[params.instancename].param.reportparam.SHOWBRANCHBL;\r\n                        this._reportFilterService.DebtorsReportObj.DebtorsReport_INCLUDEPOSTDATE = this._reportFilterService.reportDataStore[params.instancename].param.reportparam.IncPostDatedTransaction;\r\n                    }\r\n            }\r\n        });\r\n\r\n        this.changeEntryDate(this._reportFilterService.DebtorsReportObj.Debtors_DATE1, \"AD\");\r\n        this.changeEndDate(this._reportFilterService.DebtorsReportObj.Debtors_DATE2, \"AD\");\r\n\r\n    }\r\n\r\n    changeEntryDate(value, format: string) {\r\n        var adbs = require(\"ad-bs-converter\");\r\n        if (format == \"AD\") {\r\n            var adDate = (value.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n            var bsDate = adbs.ad2bs(adDate);\r\n            this._reportFilterService.DebtorsReportObj.Debtors_BSDATE1 = this.masterService.toBSDate(value);\r\n        }\r\n        else if (format == \"BS\") {\r\n          var datearr = value.split('/');\r\n          const bsDate = datearr[2]+\"/\"+datearr[1]+\"/\"+datearr[0];\r\n          // var bsDate = (value.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n            var adDate = adbs.bs2ad(bsDate);\r\n            var Engdate = this.masterService.toADDate(value);\r\n            const Validatedata = this.masterService.ValidateNepaliDate(Engdate)\r\n            if(Validatedata == true){\r\n              const bsDate1 = datearr[2]+\"/\"+datearr[1]+\"/\"+datearr[0];\r\n              var adDate1 = adbs.bs2ad(bsDate1);\r\n              this._reportFilterService.DebtorsReportObj.Debtors_DATE1 = this.masterService.toADDate(value);\r\n            }else{\r\n                this.alertService.error(\"Cannot Change the date\");\r\n              return;\r\n            } \r\n\r\n\r\n        }\r\n    }\r\n\r\n    changeEndDate(value, format: string) {\r\n        var adbs = require(\"ad-bs-converter\");\r\n        if (format == \"AD\") {\r\n            var adDate = (value.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n            var bsDate = adbs.ad2bs(adDate);\r\n            this._reportFilterService.DebtorsReportObj.Debtors_BSDATE2 = this.masterService.toBSDate(value);\r\n        }\r\n        else if (format == \"BS\") {\r\n          var datearr = value.split('/');\r\n          const bsDate = datearr[2]+\"/\"+datearr[1]+\"/\"+datearr[0];\r\n          // var bsDate = (value.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n            var adDate = adbs.bs2ad(bsDate);\r\n            var Engdate = this.masterService.toADDate(value);\r\n            const Validatedata = this.masterService.ValidateNepaliDate(Engdate)\r\n            if(Validatedata == true){\r\n              const bsDate1 = datearr[2]+\"/\"+datearr[1]+\"/\"+datearr[0];\r\n              var adDate1 = adbs.bs2ad(bsDate1);\r\n              this._reportFilterService.DebtorsReportObj.Debtors_DATE2 = this.masterService.toADDate(value);\r\n            }else{\r\n                this.alertService.error(\"Cannot Change the date\");\r\n              return;\r\n            }\r\n\r\n          }\r\n    }\r\n\r\n    onload() {\r\n        this.DialogClosedResult(\"ok\");\r\n    }\r\n\r\n    closeReportBox() {\r\n        this.DialogClosedResult(\"Error!\");\r\n    }\r\n\r\n    public DialogClosedResult(res) {\r\n        this._reportFilterService.DebtorsReportObj.Debtors_DIV = (this._reportFilterService.DebtorsReportObj.Debtors_DIV== null || this._reportFilterService.DebtorsReportObj.Debtors_DIV == \"\") ? \"%\" : this._reportFilterService.DebtorsReportObj.Debtors_DIV;\r\n\r\n       let multipleReportFormateName = '';\r\n       if(this._reportFilterService.DebtorsReportObj.SHOWDPARTYDETAIL == 1){\r\n           multipleReportFormateName = 'Debtors Report_1'\r\n       }else{\r\n           multipleReportFormateName = 'Debtors Report'\r\n       }\r\n\r\n       if (this._reportFilterService.DebtorsReportObj.Debtors_DIV && this._reportFilterService.DebtorsReportObj.Debtors_DIV == '%') {\r\n        this._reportFilterService.DebtorsReportObj.Debtors_DIVISIONNAME = 'All';\r\n      }else if( this._reportFilterService.DebtorsReportObj.Debtors_DIV && this._reportFilterService.DebtorsReportObj.Debtors_DIV!= '%'){\r\n        let abc = this.division.filter(x=>x.INITIAL == this._reportFilterService.DebtorsReportObj.Debtors_DIV);\r\n          if(abc && abc.length>0 && abc[0]){\r\n            this._reportFilterService.DebtorsReportObj.Debtors_DIVISIONNAME = abc[0].NAME;\r\n          }else{\r\n            this._reportFilterService.DebtorsReportObj.Debtors_DIVISIONNAME = '';\r\n          }\r\n      }else{\r\n        this._reportFilterService.DebtorsReportObj.Debtors_DIVISIONNAME = '';\r\n      }\r\n\r\n      if (this._reportFilterService.DebtorsReportObj.Debtors_CostCenter && this._reportFilterService.DebtorsReportObj.Debtors_CostCenter == '%') {\r\n        this._reportFilterService.DebtorsReportObj.Debtors_COSTCENTERDISPLAYNAME = '';\r\n      }\r\n      else if (this._reportFilterService.DebtorsReportObj.Debtors_CostCenter != '%') {\r\n        let abc = this.CostcenterList.filter(x=>x.CCID == this._reportFilterService.DebtorsReportObj.Debtors_CostCenter);\r\n        if(abc && abc.length>0 && abc[0]){\r\n          this._reportFilterService.DebtorsReportObj.Debtors_COSTCENTERDISPLAYNAME = abc[0].COSTCENTERNAME;\r\n        }else{\r\n          this._reportFilterService.DebtorsReportObj.Debtors_COSTCENTERDISPLAYNAME = '';\r\n        }\r\n      } else {\r\n        this._reportFilterService.DebtorsReportObj.Debtors_COSTCENTERDISPLAYNAME = '';\r\n      }\r\n\r\n      \r\n      if (this._reportFilterService.DebtorsReportObj.DebtorsReport_AreaWise && this._reportFilterService.DebtorsReportObj.DebtorsReport_AreaWise == 0) {\r\n        this._reportFilterService.DebtorsReportObj.DebtorsReport_AreaWiseDisplayName = '';\r\n      }\r\n      else if (this._reportFilterService.DebtorsReportObj.DebtorsReport_AreaWise != 0) {\r\n        let abc = this.AreaList.filter(x=>x.AREA_ID == this._reportFilterService.DebtorsReportObj.DebtorsReport_AreaWise);\r\n        if(abc && abc.length>0 && abc[0]){\r\n          this._reportFilterService.DebtorsReportObj.DebtorsReport_AreaWiseDisplayName = abc[0].AREA_NAME;\r\n        }else{\r\n          this._reportFilterService.DebtorsReportObj.DebtorsReport_AreaWiseDisplayName = '';\r\n        }\r\n      } else {\r\n        this._reportFilterService.DebtorsReportObj.DebtorsReport_AreaWiseDisplayName = '';\r\n      }\r\n\r\n      if (this._reportFilterService.DebtorsReportObj.DebtorsReport_PartyGroup && this._reportFilterService.DebtorsReportObj.DebtorsReport_PartyGroup == 0) {\r\n        this._reportFilterService.DebtorsReportObj.DebtorsReport_PartyGroupDisplayName = '';\r\n      }\r\n      else if (this._reportFilterService.DebtorsReportObj.DebtorsReport_PartyGroup != 0) {\r\n        let abc = this.PartyGroupList.filter(x=>x.ACID == this._reportFilterService.DebtorsReportObj.DebtorsReport_PartyGroup);\r\n        if(abc && abc.length>0 && abc[0]){\r\n          this._reportFilterService.DebtorsReportObj.DebtorsReport_PartyGroupDisplayName = abc[0].ACNAME;\r\n        }else{\r\n          this._reportFilterService.DebtorsReportObj.DebtorsReport_PartyGroupDisplayName = '';\r\n        }\r\n      } else {\r\n        this._reportFilterService.DebtorsReportObj.DebtorsReport_PartyGroupDisplayName = '';\r\n      }\r\n\r\n      if (this._reportFilterService.DebtorsReportObj.DebtorsReport_PartyCategory && this._reportFilterService.DebtorsReportObj.DebtorsReport_PartyCategory == 0) {\r\n        this._reportFilterService.DebtorsReportObj.DebtorsReport_PartyCategoryDisplayName = '';\r\n      }\r\n      else if (this._reportFilterService.DebtorsReportObj.DebtorsReport_PartyCategory != 0) {\r\n        let abc = this.PartyCategoryList.filter(x=>x.CATEGORY_ID == this._reportFilterService.DebtorsReportObj.DebtorsReport_PartyCategory);\r\n        if(abc && abc.length>0 && abc[0]){\r\n          this._reportFilterService.DebtorsReportObj.DebtorsReport_PartyCategoryDisplayName = abc[0].CATEGORYNAME;\r\n        }else{\r\n          this._reportFilterService.DebtorsReportObj.DebtorsReport_PartyCategoryDisplayName = '';\r\n        }\r\n      } else {\r\n        this._reportFilterService.DebtorsReportObj.DebtorsReport_PartyCategoryDisplayName = '';\r\n      }\r\n      \r\n\r\n       if(res == \"ok\"){\r\n       this._reportFilterService.DebtorsReportObj.assignPrevioiusDate = true;\r\n       let routepaths = this.arouter.url.split('/');\r\n        let activeurlpath2;\r\n              if(routepaths&& routepaths.length){\r\n                activeurlpath2=routepaths[routepaths.length-1]\r\n              }\r\n\r\n              if(this._reportFilterService.loadedTimesD == 0){\r\n                this._reportFilterService.previouslyLoadedReportList.push(\r\n                    {reportname: 'Debtors Report',\r\n                    activeurlpath: this.arouter.url,\r\n                    instanceWiseRepName:this.instanceWiseRepName +this._reportFilterService.loadedTimesD,\r\n                    activerurlpath2: activeurlpath2,\r\n                });\r\n            }else{\r\n                this._reportFilterService.previouslyLoadedReportList.push(\r\n                    {reportname: 'Debtors Report' +'_'+this._reportFilterService.loadedTimesD,\r\n                    activeurlpath: this.arouter.url,\r\n                    instanceWiseRepName:this.instanceWiseRepName +this._reportFilterService.loadedTimesD,\r\n                    activerurlpath2: activeurlpath2,\r\n                });\r\n            }\r\n\r\n       }\r\n\r\n        this.reportdataEmit.emit({\r\n            status: res, data: {\r\n                REPORTDISPLAYNAME : 'Debtors Report',\r\n                reportname: multipleReportFormateName,instanceWiseRepName:this.instanceWiseRepName +this._reportFilterService.loadedTimesD, reportparam: {\r\n                    DATE1: this._reportFilterService.DebtorsReportObj.Debtors_DATE1,\r\n                    DATE2: this._reportFilterService.DebtorsReportObj.Debtors_DATE2,\r\n                    BSDATE1: this._reportFilterService.DebtorsReportObj.Debtors_BSDATE1,\r\n                    BSDATE2: this._reportFilterService.DebtorsReportObj.Debtors_BSDATE2,\r\n                    DIV: this._reportFilterService.DebtorsReportObj.Debtors_DIV,\r\n                    PHISCALID: this.masterService.PhiscalObj.PhiscalID,\r\n                    COMID: this.masterService.userProfile.CompanyInfo.COMPANYID,\r\n                    CostCenter: this._reportFilterService.DebtorsReportObj.Debtors_CostCenter,\r\n                    SHOWDPARTYDETAIL: this._reportFilterService.DebtorsReportObj.SHOWDPARTYDETAIL,\r\n                    OPNINGBLONLY: this._reportFilterService.DebtorsReportObj.Debtors_OPNINGBLONLY,\r\n                    REPORTMODE: this._reportFilterService.DebtorsReportObj.REPORTMODE,\r\n                    GROUPBY: this._reportFilterService.DebtorsReportObj.GROUPBY?this._reportFilterService.DebtorsReportObj.GROUPBY:0,\r\n                    COSTCENTER: this._reportFilterService.DebtorsReportObj.Debtors_CostCenter,\r\n                    DIVISIONNAME : this._reportFilterService.DebtorsReportObj.Debtors_DIVISIONNAME ? this._reportFilterService.DebtorsReportObj.Debtors_DIVISIONNAME : '',\r\n                    COSTCENTERDISPLAYNAME: this._reportFilterService.DebtorsReportObj.Debtors_COSTCENTERDISPLAYNAME?this._reportFilterService.DebtorsReportObj.Debtors_COSTCENTERDISPLAYNAME:'',\r\n                    AREA : this._reportFilterService.DebtorsReportObj.DebtorsReport_AreaWise?this._reportFilterService.DebtorsReportObj.DebtorsReport_AreaWise:0,\r\n                    PARTYGROUP : this._reportFilterService.DebtorsReportObj.DebtorsReport_PartyGroup?this._reportFilterService.DebtorsReportObj.DebtorsReport_PartyGroup:'%',\r\n                    SHOWBRANCHBL: this._reportFilterService.DebtorsReportObj.Debtors_SHOWBRANCHBL,\r\n                    PARTYCATEGORY:this._reportFilterService.DebtorsReportObj.DebtorsReport_PartyCategory ? this._reportFilterService.DebtorsReportObj.DebtorsReport_PartyCategory :'%',\r\n                    AREAWISEDISPLAYNAME:this._reportFilterService.DebtorsReportObj.DebtorsReport_AreaWiseDisplayName ?this._reportFilterService.DebtorsReportObj.DebtorsReport_AreaWiseDisplayName:'',\r\n                    PARTYGROUPDISPLAYNAME:this._reportFilterService.DebtorsReportObj.DebtorsReport_PartyGroupDisplayName ?this._reportFilterService.DebtorsReportObj.DebtorsReport_PartyGroupDisplayName:'',\r\n                    PARTYCATEGORYDISPLAYNAME:this._reportFilterService.DebtorsReportObj.DebtorsReport_PartyCategoryDisplayName ?this._reportFilterService.DebtorsReportObj.DebtorsReport_PartyCategoryDisplayName:'',\r\n                    //IncPostDatedTransaction :this._reportFilterService.DebtorsReportObj.DebtorsReport_INCLUDEPOSTDATE ? this._reportFilterService.DebtorsReportObj.DebtorsReport_INCLUDEPOSTDATE:0,\r\n                    INCLUDEPOSTEDTRANSACTION: this._reportFilterService.DebtorsReportObj.Debtors_INCLUDEPOSTEDTRANSACTION?this._reportFilterService.DebtorsReportObj.Debtors_INCLUDEPOSTEDTRANSACTION :0,\r\n                    // SALESMAN:this._reportFilterService.DebtorsReportObj.Debtors_salesman_ID?this._reportFilterService.DebtorsReportObj.Debtors_salesman_ID:'%'\r\n                }\r\n            }\r\n        });\r\n\r\n        if(res == \"ok\"){\r\n            this._reportFilterService.loadedTimesD = this._reportFilterService.loadedTimesD+1;\r\n        }\r\n    }\r\n\r\n    checkValueForOpeningDebtors(){\r\n        if(this._reportFilterService.DebtorsReportObj.Debtors_OPNINGBLONLY == true){\r\n            this._reportFilterService.DebtorsReportObj.Debtors_OPNINGBLONLY = 1;\r\n            this.date1 = this._reportFilterService.DebtorsReportObj.Debtors_DATE1;\r\n            this.date2=this._reportFilterService.DebtorsReportObj.Debtors_DATE2;\r\n            this._reportFilterService.DebtorsReportObj.Debtors_DATE1=this.masterService.PhiscalObj.BeginDate.split('T')[0];\r\n            this._reportFilterService.DebtorsReportObj.Debtors_DATE2=this.masterService.PhiscalObj.EndDate.split('T')[0];\r\n            this.changeEntryDate(this._reportFilterService.DebtorsReportObj.Debtors_DATE1, \"AD\");\r\n            this.changeEndDate(this._reportFilterService.DebtorsReportObj.Debtors_DATE2, \"AD\");\r\n        }else{\r\n            this._reportFilterService.DebtorsReportObj.Debtors_OPNINGBLONLY = 0;\r\n            this._reportFilterService.DebtorsReportObj.Debtors_DATE1= this.date1?this.date1:this._reportFilterService.DebtorsReportObj.Debtors_DATE1;\r\n            this._reportFilterService.DebtorsReportObj.Debtors_DATE2= this.date2?this.date2:this._reportFilterService.DebtorsReportObj.Debtors_DATE2;\r\n            this.changeEntryDate(this._reportFilterService.DebtorsReportObj.Debtors_DATE1, \"AD\");\r\n            this.changeEndDate(this._reportFilterService.DebtorsReportObj.Debtors_DATE2, \"AD\");\r\n        }\r\n\r\n    }\r\n\r\n    showSalesmanList() {\r\n      this.gridSalesmanListPopupSettings = {\r\n        title: \"Salesman\",\r\n        apiEndpoints: `/getAllSalesmanList`,\r\n        defaultFilterIndex: 0,\r\n        columns: [\r\n          {\r\n            key: \"NAME\",\r\n            title: \"Salesman\",\r\n            hidden: false,\r\n            noSearch: false\r\n          }\r\n        ]\r\n      };\r\n  \r\n      this.genericeSalesManList.show();\r\n    }\r\n\r\n    onSalesManSelect(event){\r\n      //console.log(\"@@EVENT\",event);\r\n      this._reportFilterService.DebtorsReportObj.Debtors_salesman = event.NAME;\r\n      this._reportFilterService.DebtorsReportObj.Debtors_salesman_ID= event.SALESMANID;\r\n    }\r\n\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/pages/ReportDialogs/Debtors Report/debtorsreport.component.ts","import {NgaModule} from '../../../theme/nga.module';\r\nimport {Component, Inject, Output, EventEmitter} from '@angular/core';\r\nimport {MdDialogRef, MD_DIALOG_DATA} from '@angular/material';\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { MasterRepo } from '../../../common/repositories';\r\nimport { Division } from '../../../common/interfaces';\r\nimport { Subscriber } from 'rxjs';\r\n\r\nexport interface DialogInfo{\r\n    header: string;\r\n    message: Observable<string>;\r\n\r\n}\r\n@Component({\r\n    selector : 'result-duevoucherreport-dialog',\r\n    template: require('./duevoucherreport.component.html'),\r\n    styles: [require('../../Reports/reportStyle.css'),require('../../modal-style.css')]\r\n\r\n})\r\n\r\nexport class DueVoucherReport{\r\n    ReportParameters:any=<any>{};\r\n    cusSupList: any[]=[];\r\n    \r\n   \r\n    @Output() reportdataEmit = new EventEmitter();\r\n    constructor(private masterService: MasterRepo,public dialogref:MdDialogRef<DueVoucherReport>, @Inject(MD_DIALOG_DATA) public data: DialogInfo){\r\n       //-------Default value on page load\r\n        this.ReportParameters.DATE1 = new Date().toJSON().split('T')[0];\r\n        this.changestartDate(this.ReportParameters.DATE1,'AD');  \r\n\r\n        this.ReportParameters.ROPTION = \"1\";\r\n        // this.masterService.getCusSup().subscribe(res => {\r\n        //     //console.log(res);\r\n        //     //console.log(JSON.stringify(res));\r\n        // });\r\n    }\r\n    \r\n    onload()\r\n    {\r\n        this.DialogClosedResult(\"ok\");\r\n    }\r\n\r\n    closeReportBox(){\r\n        this.DialogClosedResult(\"Error!\");\r\n    }\r\n\r\n    public DialogClosedResult(res) {\r\n        this.ReportParameters.PARTY =  (this.ACID == null || this.ACID == \"\")?\"%\":this.ACID;\r\n\r\n        //alert(\"party--\"+this.ReportParameters.PARTY + \"ptype--\" + this.PTYPE);\r\n\r\n        if (this.PTYPE == \"V\"){this.ReportParameters.FLG = \"1\";}\r\n        else{this.ReportParameters.FLG = \"2\";}\r\n        this.reportdataEmit.emit({ status: res, data: {reportname:'Due Voucher Report', reportparam:this.ReportParameters}});\r\n\r\n    }   \r\n    \r\n    changestartDate(value, format: string) {\r\n        try{\r\n            var adbs = require(\"ad-bs-converter\");\r\n            if (format == \"AD\") {\r\n                var adDate = (value.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n                var bsDate = adbs.ad2bs(adDate);\r\n                this.ReportParameters.BSDATE1 = this.masterService.toBSDate(value);\r\n                \r\n            }\r\n            else if (format == \"BS\") {\r\n                var bsDate = (value.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n                var adDate = adbs.bs2ad(bsDate);  \r\n                this.ReportParameters.DATE1 = this.masterService.toADDate(value);          \r\n            }\r\n        }catch(e){}\r\n      \r\n    }\r\n\r\n    //Autocomplete begins\r\n    dropListItem = (keyword: any): Observable<Array<any>> => {\r\n\r\n        return new Observable((observer: Subscriber<Array<any>>) => {\r\n            this.masterService.getCusSup().map(data=>{\r\n                return data.filter(ac => ac.ACNAME.toUpperCase().indexOf(keyword.toUpperCase()) > -1);\r\n            }\r\n            ).subscribe(res =>{observer.next(res);})\r\n        }).share();\r\n    }\r\n\r\n    ACCNAME : string = '';\r\n    ACCODE : string = '';\r\n    ACID: string = '';\r\n    PTYPE: string = '';\r\n\r\n    accodeChanged(value :string){\r\n        var item = this.masterService.accountList.find(x => x.ACCODE == value);\r\n        //console.log({valueType: value,found : item ,items : this.masterService.accountList});\r\n        this.ACCNAME = '';\r\n        if (item){\r\n            value = item.ACNAME;\r\n            //console.log(value + \"****\");\r\n            this.ACCNAME = value;\r\n        }\r\n\r\n    }\r\n\r\n    itemChanged(value : any){\r\n        //console.log({itemChangedValue: value});\r\n        if (typeof(value) === \"object\"){\r\n            this.ACCNAME = value.ACNAME;\r\n            this.ACCODE = value.ACCODE;\r\n            this.ACID = value.ACID;\r\n            this.PTYPE = value.PType;\r\n        }\r\n    }\r\n\r\n    //end autocomplete\r\n\r\n\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/pages/ReportDialogs/DueVoucherReport/duevoucherreport.ts","import { Component, Inject, Output, EventEmitter, ViewChild, Input } from '@angular/core';\r\nimport { MasterRepo } from '../../../common/repositories';\r\nimport { Observable, Subscriber } from \"rxjs\";\r\nimport * as moment from 'moment'\r\nimport { GenericPopUpComponent, GenericPopUpSettings } from '../../../common/popupLists/generic-grid/generic-popup-grid.component';\r\nimport { TransactionService } from '../../../common/Transaction Components/transaction.service';\r\n\r\n\r\n@Component({\r\n  selector: 'gst-purchase-summary',\r\n  template: require('./gst-purchase-summary.component.html'),\r\n  styles: [require('../../modal-style.css'), require('../../Reports/reportStyle.css')],\r\nproviders:[TransactionService]\r\n\r\n})\r\nexport class GstPurchaseSummary {\r\n \r\n  \r\n  public isActive: boolean = false;\r\n  ACCNAME : string;\r\n  accountpayableObj={\r\n    reportname:\"\",\r\n    reportparam:{\r\n      DATE1:\"\",\r\n      DATE2:\"\"  \r\n    }\r\n\r\n    \r\n  };\r\n  selectedDate: { startDate: moment.Moment, endDate: moment.Moment };\r\n  showopeningBl: string\r\n  @Output() reportdataEmit = new EventEmitter();\r\n  @Input() reportType:string;\r\n  constructor(public masterService: MasterRepo,  public _trnMainService: TransactionService) {\r\n   \r\n  }\r\n  alwaysShowCalendars: boolean = true;\r\n  ranges: any = {\r\n    'Today': [moment(), moment()],\r\n    'Yesterday': [moment().subtract(1, 'days'), moment().subtract(1, 'days')],\r\n    'Last 7 Days': [moment().subtract(6, 'days'), moment()],\r\n    'Last 30 Days': [moment().subtract(29, 'days'), moment()],\r\n    'This Month': [moment().startOf('month'), moment().endOf('month')],\r\n    'Last Month': [moment().subtract(1, 'month').startOf('month'), moment().subtract(1, 'month').endOf('month')],\r\n    'Financial Year': [moment().set('date', 1).set('month', 3), moment().endOf('month').set('month', 2).add(1, 'year')],\r\n\r\n  }\r\n  locale = {\r\n    format: 'DD/MM/YYYY',\r\n    direction: 'ltr', // could be rtl\r\n    weekLabel: 'W',\r\n    separator: ' - ', // default is ' - '\r\n    cancelLabel: 'Cancel', // detault is 'Cancel'\r\n    applyLabel: 'Okay', // detault is 'Apply'\r\n    clearLabel: 'Clear', // detault is 'Clear'\r\n    customRangeLabel: 'Custom Range',\r\n    daysOfWeek: moment.weekdaysMin(),\r\n    monthNames: moment.monthsShort(),\r\n    firstDay: 0 // first day is monday\r\n  }\r\n  \r\n  onload() {\r\n    this. accountpayableObj.reportname='GST PURCHASE SUMMARY';\r\n    \r\n    this.reportdataEmit.emit({status:\"ok\",data:this. accountpayableObj});\r\n\r\n  }\r\n\r\n  closeReportBox(){\r\n    this.reportdataEmit.emit({status:\"Error!\",data:this. accountpayableObj});\r\n}\r\n  \r\n  dateChanged(date) {\r\n    this. accountpayableObj.reportparam.DATE1 = moment(this.selectedDate.startDate).format('MM-DD-YYYY')\r\n    this. accountpayableObj.reportparam.DATE2 = moment(this.selectedDate.endDate).format('MM-DD-YYYY')\r\n  }\r\n\r\n \r\n  preventInput($event){\r\n    $event.preventDefault();\r\n    return false;\r\n}\r\n}\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/pages/ReportDialogs/GST-Purchase-Summary/gst-purchase-summary.component.ts","import { Component, Inject, Output, EventEmitter, ViewChild, Input } from '@angular/core';\r\nimport { MasterRepo } from '../../../common/repositories';\r\nimport { Observable, Subscriber } from \"rxjs\";\r\nimport * as moment from 'moment'\r\nimport { GenericPopUpComponent, GenericPopUpSettings } from '../../../common/popupLists/generic-grid/generic-popup-grid.component';\r\nimport { TransactionService } from '../../../common/Transaction Components/transaction.service';\r\n\r\n\r\n@Component({\r\n  selector: 'gst-sales-summary',\r\n  template: require('./gst-sales-summary.component.html'),\r\n  styles: [require('../../modal-style.css'), require('../../Reports/reportStyle.css')],\r\nproviders:[TransactionService]\r\n\r\n})\r\nexport class GstSalesSummary {\r\n \r\n  \r\n  public isActive: boolean = false;\r\n  ACCNAME : string;\r\n  accountpayableObj={\r\n    reportname:\"\",\r\n    reportparam:{\r\n      DATE1:\"\",\r\n      DATE2:\"\"\r\n    }\r\n\r\n    \r\n  };\r\n  selectedDate: { startDate: moment.Moment, endDate: moment.Moment };\r\n  showopeningBl: string\r\n  @Output() reportdataEmit = new EventEmitter();\r\n  @Input() reportType:string;\r\n  constructor(public masterService: MasterRepo,  public _trnMainService: TransactionService) {\r\n   \r\n  }\r\n  alwaysShowCalendars: boolean = true;\r\n  ranges: any = {\r\n    'Today': [moment(), moment()],\r\n    'Yesterday': [moment().subtract(1, 'days'), moment().subtract(1, 'days')],\r\n    'Last 7 Days': [moment().subtract(6, 'days'), moment()],\r\n    'Last 30 Days': [moment().subtract(29, 'days'), moment()],\r\n    'This Month': [moment().startOf('month'), moment().endOf('month')],\r\n    'Last Month': [moment().subtract(1, 'month').startOf('month'), moment().subtract(1, 'month').endOf('month')],\r\n    'Financial Year': [moment().set('date', 1).set('month', 3), moment().endOf('month').set('month', 2).add(1, 'year')],\r\n\r\n  }\r\n  locale = {\r\n    format: 'DD/MM/YYYY',\r\n    direction: 'ltr', // could be rtl\r\n    weekLabel: 'W',\r\n    separator: ' - ', // default is ' - '\r\n    cancelLabel: 'Cancel', // detault is 'Cancel'\r\n    applyLabel: 'Okay', // detault is 'Apply'\r\n    clearLabel: 'Clear', // detault is 'Clear'\r\n    customRangeLabel: 'Custom Range',\r\n    daysOfWeek: moment.weekdaysMin(),\r\n    monthNames: moment.monthsShort(),\r\n    firstDay: 0 // first day is monday\r\n  }\r\n  \r\n  onload() {\r\n    this. accountpayableObj.reportname='GST SALES SUMMARY';\r\n    \r\n    this.reportdataEmit.emit({status:\"ok\",data:this. accountpayableObj});\r\n\r\n  }\r\n\r\n  closeReportBox(){\r\n    this.reportdataEmit.emit({status:\"Error!\",data:this. accountpayableObj});\r\n}\r\n  \r\n \r\n  dateChanged(date) {\r\n    this. accountpayableObj.reportparam.DATE1 = moment(this.selectedDate.startDate).format('MM-DD-YYYY')\r\n    this. accountpayableObj.reportparam.DATE2 = moment(this.selectedDate.endDate).format('MM-DD-YYYY')\r\n   \r\n  }\r\n\r\n \r\n  preventInput($event){\r\n    $event.preventDefault();\r\n    return false;\r\n}\r\n}\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/pages/ReportDialogs/GST-Sales-Summary/gst-sales-summary.component.ts","import { Component, EventEmitter, Output } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { MasterRepo } from '../../../common/repositories';\r\nimport { AlertService } from '../../../common/services/alert/alert.service';\r\nimport { AuthService } from '../../../common/services/permission/authService.service';\r\nimport { ReportMainService } from '../../Reports/components/ReportMain/ReportMain.service';\r\n\r\nexport interface DialogInfo {\r\n  header: string;\r\n  message: Observable<string>;\r\n\r\n}\r\n\r\n@Component({\r\n  selector: 'incometax-depreciation-report',\r\n  template: require('./incometax-depreciation-report.component.html'),\r\n  styles: [require('../../Reports/reportStyle.css'), require('../../modal-style.css')],\r\n})\r\n\r\nexport class IncomeTaxDepreciationReport {\r\n  ReportParameters: any = <any>{};\r\n  instanceWiseRepName: string = 'DEPRECIATION REPORT AS PER INCOME TAX';\r\n\r\n  REPORTOPTION: any[] = [\r\n    { Mode: '1', ReportOptionName: 'Pool Wise' },\r\n    { Mode: '2', ReportOptionName: 'Block Wise' }\r\n  ]\r\n\r\n  poolName: any[] = [];\r\n  @Output() reportdataEmit = new EventEmitter();\r\n\r\n  constructor(private masterService: MasterRepo, private arouter: Router, private _authService: AuthService, public _ActivatedRoute: ActivatedRoute, private _reportFilterService: ReportMainService, private alertService: AlertService,) {\r\n    this._reportFilterService.IncomeTaxObj.Reportnameis = \"DEPRECIATION REPORT AS PER INCOME TAX\";\r\n    this._reportFilterService.IncomeTaxObj.IncomeTax_REPORTOPTION = '1';\r\n\r\n    this.poolName = [];\r\n\r\n    this.masterService.getPoolName().subscribe(res => {\r\n      this.poolName = res;\r\n    });\r\n  }\r\n\r\n\r\n  ngOnInit() {\r\n    this._ActivatedRoute.queryParams.subscribe(params => {\r\n      this._reportFilterService.IncomeTaxObj.IncomeTax_REPORTTYPE = '1';\r\n\r\n      if (params.instancename) {\r\n        this._reportFilterService.IncomeTaxObj.IncomeTax_REPORTOPTION = this._reportFilterService.reportDataStore[params.instancename].param.reportparam.MODE;\r\n        this._reportFilterService.IncomeTaxObj.IncomeTax_POOLNAME = this._reportFilterService.reportDataStore[params.instancename].param.reportparam.POOL;\r\n        this._reportFilterService.IncomeTaxObj.IncomeTax_REPORTTYPE = this._reportFilterService.reportDataStore[params.instancename].param.reportparam.SUMMARY;\r\n\r\n      }\r\n    })\r\n  }\r\n\r\n\r\n  onload() {\r\n    this.DialogClosedResult(\"ok\");\r\n  }\r\n\r\n  closeReportBox() {\r\n    this.DialogClosedResult(\"Error!\");\r\n  }\r\n\r\n  public DialogClosedResult(res) {\r\n    let multipleReportFormateName = '';\r\n\r\n    if (this._reportFilterService.IncomeTaxObj.IncomeTax_REPORTOPTION == '1') {\r\n      multipleReportFormateName = 'DEPRECIATION REPORT AS PER INCOME TAX_1';\r\n    } else if (this._reportFilterService.IncomeTaxObj.IncomeTax_REPORTOPTION == '2') {\r\n      multipleReportFormateName = 'DEPRECIATION REPORT AS PER INCOME TAX_2';\r\n    } else {\r\n      multipleReportFormateName = 'DEPRECIATION REPORT AS PER INCOME TAX'\r\n    }\r\n\r\n    if(this._reportFilterService.IncomeTaxObj.IncomeTax_TAXWISE == 1){\r\n      multipleReportFormateName = 'DEPRECIATION REPORT AS PER INCOME TAX_2'\r\n    }else {\r\n      if (this._reportFilterService.IncomeTaxObj.IncomeTax_REPORTTYPE == \"0\") {\r\n        multipleReportFormateName = 'DEPRECIATION REPORT AS PER INCOME TAX';\r\n      } else if (this._reportFilterService.IncomeTaxObj.IncomeTax_REPORTTYPE == \"1\") {\r\n        multipleReportFormateName = 'DEPRECIATION REPORT AS PER INCOME TAX_1';\r\n      }\r\n    }\r\n\r\n    if (res == \"ok\") {\r\n      let routepaths = this.arouter.url.split('/');\r\n      let activeurlpath2;\r\n      if (routepaths && routepaths.length) {\r\n        activeurlpath2 = routepaths[routepaths.length - 1]\r\n      }\r\n\r\n      if (this._reportFilterService.IncomeTax_loadedTimes == 0) {\r\n        this._reportFilterService.previouslyLoadedReportList.push(\r\n          {\r\n            reportname: 'DEPRECIATION REPORT AS PER INCOME TAX',\r\n            activeurlpath: this.arouter.url,\r\n            activerurlpath2: activeurlpath2,\r\n            instanceWiseRepName: this.instanceWiseRepName + this._reportFilterService.IncomeTax_loadedTimes,\r\n          });\r\n      } else {\r\n        this._reportFilterService.previouslyLoadedReportList.push(\r\n          {\r\n            reportname: 'DEPRECIATION REPORT AS PER INCOME TAX' + '_' + this._reportFilterService.IncomeTax_loadedTimes,\r\n            activeurlpath: this.arouter.url,\r\n            activerurlpath2: activeurlpath2,\r\n            instanceWiseRepName: this.instanceWiseRepName + this._reportFilterService.IncomeTax_loadedTimes,\r\n          });\r\n      }\r\n\r\n    }\r\n\r\n\r\n    this.reportdataEmit.emit({\r\n      status: res, data: {\r\n        REPORTDISPLAYNAME: 'DEPRECIATION REPORT (AS PER INCOME TAX)',\r\n        reportname: multipleReportFormateName,\r\n        instanceWiseRepName: this.instanceWiseRepName + this._reportFilterService.IncomeTax_loadedTimes,\r\n        reportparam: {\r\n          MODE: this._reportFilterService.IncomeTaxObj.IncomeTax_REPORTOPTION,\r\n          PHISCALID: this.masterService.PhiscalObj.PhiscalID,\r\n          POOL: this._reportFilterService.IncomeTaxObj.IncomeTax_POOLNAME ? this._reportFilterService.IncomeTaxObj.IncomeTax_POOLNAME : '%',\r\n          SUMMARY: this._reportFilterService.IncomeTaxObj.IncomeTax_REPORTTYPE,\r\n          TAXWISE: this._reportFilterService.IncomeTaxObj.IncomeTax_TAXWISE? this._reportFilterService.IncomeTaxObj.IncomeTax_TAXWISE : 0\r\n        }\r\n      }\r\n    });\r\n    if (res == \"ok\") {\r\n      this._reportFilterService.IncomeTax_loadedTimes = this._reportFilterService.IncomeTax_loadedTimes + 1;\r\n    }\r\n  }\r\n\r\n\r\n  checkValue() {\r\n    if (this._reportFilterService.IncomeTaxObj.IncomeTax_TAXWISE == true) {\r\n      this._reportFilterService.IncomeTaxObj.IncomeTax_TAXWISE=1;\r\n    }\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/pages/ReportDialogs/IncomeTax-Depreciation-Report/incometax-depreciation-report.component.ts","import {NgaModule} from '../../../theme/nga.module';\r\nimport {Component, Inject, Output, EventEmitter} from '@angular/core';\r\nimport {MdDialogRef, MD_DIALOG_DATA} from '@angular/material';\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { Division } from '../../../common/interfaces';\r\nimport { MasterRepo } from '../../../common/repositories';\r\n\r\n\r\nexport interface DialogInfo{\r\n    header: string;\r\n    message: Observable<string>;\r\n}\r\n\r\n@Component({\r\n    selector:'result-journalbook-dialog',\r\n//     template:`\r\n//         <div class=\"modal-dialog modal-md\">\r\n//         <div class=\"modal-content\">\r\n//         <div class=\"modal-footer\">\r\n//         <input type=\"text\" style=\"height:25px;width:100%\"   [(ngModel)]=\"ReportParameters.input1\"/>\r\n//         <input type=\"text\" style=\"height:25px;width:100%\"  [(ngModel)]=\"ReportParameters.input2\"/>\r\n//         <input type=\"text\" style=\"height:25px;width:100%\"   [(ngModel)]=\"ReportParameters.input3\"/>\r\n//         <input type=\"text\" style=\"height:25px;width:100%\"   [(ngModel)]=\"ReportParameters.input1\"/>\r\n//         <input type=\"text\" style=\"height:25px;width:100%\"  [(ngModel)]=\"ReportParameters.input2\"/>\r\n//         <input type=\"text\" style=\"height:25px;width:100%\"   [(ngModel)]=\"ReportParameters.input3\"/>\r\n//         <button class=\"btn btn-info confirm-btn\" type=\"button\"  (click)=onload()>RUN</button>\r\n//         </div>\r\n//         </div>\r\n//         </div>\r\n// `\r\n\r\n  template:require('./journalbook.component.html'),\r\n  styles: [require('../../Reports/reportStyle.css'),require('../../modal-style.css')]\r\n})\r\nexport class JournalBook{\r\n ReportParameters:any=<any>{};\r\n division: any[]=[];   \r\n aclist : any[]=[];\r\n\r\n @Output() reportdataEmit = new EventEmitter();\r\n\r\n    constructor(private masterService: MasterRepo,public dialogref:MdDialogRef<JournalBook>, @Inject(MD_DIALOG_DATA) public data: DialogInfo){\r\n\r\n        //-----Default value on page load\r\n        this.ReportParameters.DATE1 = new Date().toJSON().split('T')[0];\r\n        this.changestartDate(this.ReportParameters.DATE1,'AD');\r\n        this.ReportParameters.DATE2 = new Date().toJSON().split('T')[0];\r\n        this.changeEndDate(this.ReportParameters.DATE2,'AD');\r\n\r\n        this.ReportParameters.OPT_REPMODE = \"0\";\r\n        this.ReportParameters.VNO1 = \"0\";\r\n        this.ReportParameters.VNO2 = \"0\";\r\n        this.ReportParameters.DIVISION = \"%\";\r\n\r\n        //---------------\r\n\r\n        this.division=[];\r\n        this.masterService.getAllDivisions()\r\n          .subscribe(res => {\r\n            //////console.log(\"div\" + JSON.stringify(res));\r\n            this.division.push(<Division>res);                \r\n          }, error => {\r\n            this.masterService.resolveError(error, \"divisions - getDivisions\");\r\n        });\r\n\r\n        this.aclist = [];\r\n        this.masterService.getAcList()\r\n        .subscribe(res => {\r\n            this.aclist.push(res);\r\n        });\r\n    }\r\n    onload()\r\n    {\r\n        this.DialogClosedResult(\"ok\");\r\n    }\r\n    \r\n    closeReportBox(){\r\n        this.DialogClosedResult(\"error\");\r\n    }\r\n   public DialogClosedResult(res) {\r\n\r\n    this.ReportParameters.DIVISION = (this.ReportParameters.DIVISION == null || this.ReportParameters.DIVISION == \"\")?\"%\":this.ReportParameters.DIVISION;\r\n    this.ReportParameters.SERIES = \"%\";\r\n    this.ReportParameters.CCENTER = \"%\";\r\n    \r\n    this.reportdataEmit.emit({ status: res, data: {reportname:'Journal Book', reportparam:this.ReportParameters}});\r\n      \r\n    }\r\n\r\n    changestartDate(value, format: string) {\r\n        try{\r\n            var adbs = require(\"ad-bs-converter\");\r\n            if (format == \"AD\") {\r\n                var adDate = (value.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n                var bsDate = adbs.ad2bs(adDate);\r\n                this.ReportParameters.BSDATE1 = this.masterService.toBSDate(value);\r\n                \r\n            }\r\n            else if (format == \"BS\") {\r\n                var bsDate = (value.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n                var adDate = adbs.bs2ad(bsDate);  \r\n                this.ReportParameters.DATE1 = this.masterService.toADDate(value);          \r\n            }\r\n        }catch(e){}\r\n      \r\n    }\r\n    changeEndDate(value, format: string) {\r\n        try{\r\n            var adbs = require(\"ad-bs-converter\");\r\n            if (format == \"AD\") {\r\n                var adDate = (value.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n                var bsDate = adbs.ad2bs(adDate);         \r\n                this.ReportParameters.BSDATE2 = this.masterService.toBSDate(value);\r\n            }\r\n            else if (format == \"BS\") {\r\n                var bsDate = (value.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n                var adDate = adbs.bs2ad(bsDate);         \r\n                this.ReportParameters.DATE2 = this.masterService.toADDate(value);\r\n    \r\n            }\r\n        }\r\n          catch(e){}\r\n      \r\n    }\r\n  \r\n}\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/pages/ReportDialogs/JournalBook/journalbook.component.ts","import { Component, EventEmitter, Inject, OnInit, Output, ViewChild } from '@angular/core';\r\nimport { MdDialogRef, MD_DIALOG_DATA } from '@angular/material';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { GenericPopUpComponent, GenericPopUpSettings } from '../../../common/popupLists/generic-grid/generic-popup-grid.component';\r\nimport { MasterRepo } from '../../../common/repositories';\r\nimport { AlertService } from '../../../common/services/alert/alert.service';\r\nimport { AuthService } from '../../../common/services/permission';\r\nimport { ReportMainService } from '../../Reports/components/ReportMain/ReportMain.service';\r\nimport { DialogInfo } from '../MasterDialogReport/MasterDialogReport';\r\n\r\n\r\n@Component({\r\n    selector: 'localpurchasecost-allocation-report',\r\n    template: require('./localpurchasecost-allocation-report.component.html'),\r\n    styles: [require('../../Reports/reportStyle.css'), require('../../modal-style.css')]\r\n})\r\n\r\nexport class LocalPurchaseCostAllocationReport implements OnInit {\r\n    instanceWiseRepName: string = 'Local Purchase Cost Allocation Report';\r\n    loadInitially: boolean = true;\r\n    \r\n\r\n    @Output() reportdataEmit = new EventEmitter();\r\n    @ViewChild(\"genericGridLocalPurchaseCostAccount\") genericGridLocalPurchaseCostAccount: GenericPopUpComponent;\r\n    gridPopupSettingsForAccountList: GenericPopUpSettings = new GenericPopUpSettings();\r\n\r\n    @ViewChild(\"genericGridLocalPurchasePIVoucher\") genericGridLocalPurchasePIVoucher: GenericPopUpComponent;\r\n    gridPopupSettingsForLocalPurchasePIVoucher: GenericPopUpSettings = new GenericPopUpSettings();\r\n\r\n    @ViewChild(\"genericGridCPVoucher\") genericGridCPVoucher: GenericPopUpComponent;\r\n    gridCPVoucherPopupSettings: GenericPopUpSettings = new GenericPopUpSettings();\r\n\r\n    constructor(private masterService: MasterRepo, private alertService: AlertService, private _authService: AuthService, private arouter: Router,\r\n        public dialogref: MdDialogRef<LocalPurchaseCostAllocationReport>,\r\n        @Inject(MD_DIALOG_DATA) public data: DialogInfo,\r\n        private _reportFilterService: ReportMainService, public _ActivatedRoute: ActivatedRoute,) {\r\n            \r\n    }\r\n\r\n\r\n    ngOnInit(): void {\r\n        \r\n            if(this._reportFilterService.LocalPurchaseCostAllocationObj.assignPrevioiusDate != true){\r\n            this._reportFilterService.LocalPurchaseCostAllocationObj.LocalPurchaseCostAllocation_REPORTMODE='0';\r\n         \r\n        }\r\n       \r\n    }\r\n\r\n    onload() {\r\n        this.DialogClosedResult(\"ok\");\r\n    }\r\n\r\n    closeReportBox() {\r\n        this.DialogClosedResult(\"Error!\");\r\n    }\r\n\r\n    public DialogClosedResult(res) {\r\n\r\n        if(this._reportFilterService.LocalPurchaseCostAllocationObj.LocalPurchaseCostAllocation_ACCNAME == \"\"||\r\n        this._reportFilterService.LocalPurchaseCostAllocationObj.LocalPurchaseCostAllocation_ACCNAME == null ||\r\n        this._reportFilterService.LocalPurchaseCostAllocationObj.LocalPurchaseCostAllocation_ACCNAME == undefined){\r\n            this._reportFilterService.LocalPurchaseCostAllocationObj.LocalPurchaseCostAllocation_ACID='%';\r\n        }\r\n        if (res == \"ok\") {\r\n            this._reportFilterService.LocalPurchaseCostAllocationObj.assignPrevioiusDate = true;\r\n            let routepaths = this.arouter.url.split('/');\r\n            let activeurlpath2;\r\n            if (routepaths && routepaths.length) {\r\n                activeurlpath2 = routepaths[routepaths.length - 1]\r\n            }\r\n\r\n            if (this._reportFilterService.LocalPurchaseCostAlloc_loadedTimes == 0) {\r\n                this._reportFilterService.previouslyLoadedReportList.push(\r\n                    {\r\n                        reportname: 'Local Purchase Cost Allocation Report',\r\n                        activeurlpath: this.arouter.url,\r\n                        activerurlpath2: activeurlpath2,\r\n                        instanceWiseRepName: this.instanceWiseRepName + this._reportFilterService.LocalPurchaseCostAlloc_loadedTimes,\r\n                    });\r\n            } else {\r\n                this._reportFilterService.previouslyLoadedReportList.push(\r\n                    {\r\n                        reportname: 'Local Purchase Cost Allocation Report' + '_' + this._reportFilterService.LocalPurchaseCostAlloc_loadedTimes,\r\n                        activeurlpath: this.arouter.url,\r\n                        activerurlpath2: activeurlpath2,\r\n                        instanceWiseRepName: this.instanceWiseRepName + this._reportFilterService.LocalPurchaseCostAlloc_loadedTimes,\r\n                    });\r\n            }\r\n        }\r\n\r\n        this.reportdataEmit.emit({\r\n            status: res, data: {\r\n                REPORTDISPLAYNAME: 'Local Purchase Cost Allocation Report',\r\n                reportname: 'Local Purchase Cost Allocation Report',\r\n                instanceWiseRepName: this.instanceWiseRepName + this._reportFilterService.LocalPurchaseCostAlloc_loadedTimes,\r\n                reportparam: {\r\n                    REPORTOPTIONDISPLAYNAME: this._reportFilterService.LocalPurchaseCostAllocationObj.LocalPurchaseCostAllocation_REPORTOPTIONDISPLAYNAME ? this._reportFilterService.LocalPurchaseCostAllocationObj.LocalPurchaseCostAllocation_REPORTOPTIONDISPLAYNAME : '',\r\n                    COMPANYID: this.masterService.userProfile.CompanyInfo.COMPANYID,\r\n                    PHISCALID: this.masterService.PhiscalObj.PhiscalID,\r\n                    REPORTMODE:  this._reportFilterService.LocalPurchaseCostAllocationObj.LocalPurchaseCostAllocation_REPORTMODE?parseInt(this._reportFilterService.LocalPurchaseCostAllocationObj.LocalPurchaseCostAllocation_REPORTMODE):0,\r\n                    ACID: this._reportFilterService.LocalPurchaseCostAllocationObj.LocalPurchaseCostAllocation_ACID ? this._reportFilterService.LocalPurchaseCostAllocationObj.LocalPurchaseCostAllocation_ACID : '%',\r\n                    ACNAME: this._reportFilterService.LocalPurchaseCostAllocationObj.LocalPurchaseCostAllocation_ACCNAME ? this._reportFilterService.LocalPurchaseCostAllocationObj.LocalPurchaseCostAllocation_ACCNAME : '',\r\n                    PIVNO: this._reportFilterService.LocalPurchaseCostAllocationObj.LocalPurchaseCostAllocation_PI_VOUCHERNO ? this._reportFilterService.LocalPurchaseCostAllocationObj.LocalPurchaseCostAllocation_PI_VOUCHERNO : '%',\r\n                    REFVNO: this._reportFilterService.LocalPurchaseCostAllocationObj.LocalPurchaseCostAllocation_CAPITALPURCHASE_VCHRNO ? this._reportFilterService.LocalPurchaseCostAllocationObj.LocalPurchaseCostAllocation_CAPITALPURCHASE_VCHRNO : '%',\r\n                }\r\n            }\r\n        })\r\n        this._reportFilterService.LocalPurchaseCostAlloc_loadedTimes = this._reportFilterService.LocalPurchaseCostAlloc_loadedTimes + 1;\r\n    }\r\n\r\n    AccountEnterClicked() {\r\n        this.gridPopupSettingsForAccountList = {\r\n            title: \"Account List\",\r\n            apiEndpoints: '/getACIDForLocalPIReport',\r\n            defaultFilterIndex: 0,\r\n            columns: [\r\n                {\r\n                    key: \"ACNAME\",\r\n                    title: \"Account Name\",\r\n                    hidden: false,\r\n                    noSearch: false,\r\n                }\r\n            ],\r\n        };\r\n        this.genericGridLocalPurchaseCostAccount.show();\r\n    }\r\n\r\n    dblClickAccountSelect(account) {\r\n        this._reportFilterService.LocalPurchaseCostAllocationObj.LocalPurchaseCostAllocation_ACID = account.ACID;\r\n        this._reportFilterService.LocalPurchaseCostAllocationObj.LocalPurchaseCostAllocation_ACCNAME = account.ACNAME;\r\n    }\r\n\r\n    PiVoucherEnterClicked() {\r\n        this.gridPopupSettingsForLocalPurchasePIVoucher = {\r\n            title: \"Vouchers\",\r\n            apiEndpoints: '/getPIVoucherNoForLocalPIReport',\r\n            defaultFilterIndex: 0,\r\n            columns: [\r\n                {\r\n                    key: \"PI_VOUCHERNO\",\r\n                    title: \"PI Voucher No\",\r\n                    hidden: false,\r\n                    noSearch: false,\r\n                }\r\n            ],\r\n        };\r\n        this.genericGridLocalPurchasePIVoucher.show();\r\n    }\r\n\r\n    dblClickPurchasePIVoucherSelect(value) {\r\n        this._reportFilterService.LocalPurchaseCostAllocationObj.LocalPurchaseCostAllocation_PI_VOUCHERNO = value.PI_VOUCHERNO;\r\n\r\n    }\r\n\r\n    CPVoucherPopup() {\r\n        this.gridCPVoucherPopupSettings = {\r\n            title: \"Ref Vouchers\",\r\n            apiEndpoints: '/getRefVoucherNoForLocalPIReport',\r\n            defaultFilterIndex: 0,\r\n            columns: [\r\n                {\r\n                    key: \"CAPITALPURCHASE_VCHRNO\",\r\n                    title: \"Ref Voucher No\",\r\n                    hidden: false,\r\n                    noSearch: false,\r\n                }, {\r\n                    key: \"TOTALAMOUNT\",\r\n                    title: \"Total Amount\",\r\n                    hidden: false,\r\n                    noSearch: false,\r\n                }\r\n            ],\r\n        };\r\n        this.genericGridCPVoucher.show();\r\n    }\r\n\r\n    DblClickCPVoucherSelect(value) {\r\n        this._reportFilterService.LocalPurchaseCostAllocationObj.LocalPurchaseCostAllocation_CAPITALPURCHASE_VCHRNO = value.CAPITALPURCHASE_VCHRNO;\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/pages/ReportDialogs/LocalPurchasecost-allocation-report/localpurchasecost-allocation-report.component.ts","import { Component, Inject, Output, EventEmitter, OnInit, ViewChild } from '@angular/core';\r\nimport { MdDialogRef, MD_DIALOG_DATA } from '@angular/material';\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { MasterRepo } from '../../../common/repositories';\r\nimport { ReportMainService } from '../../Reports/components/ReportMain/ReportMain.service';\r\nimport { AlertService } from '../../../common/services/alert/alert.service';\r\nimport { AuthService } from '../../../common/services/permission/authService.service';\r\nimport { Division } from '../../../common/interfaces';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { GenericPopUpSettings, GenericPopUpComponent } from '../../../common/popupLists/generic-grid/generic-popup-grid.component';\r\nexport interface DialogInfo {\r\n    header: string;\r\n    message: Observable<string>;\r\n}\r\n@Component({\r\n    selector: 'monthly-sales-payment',\r\n    template: require('./monthly-sales-payement-report.component.html'),\r\n    styles: [require('../../Reports/reportStyle.css'), require('../../modal-style.css')]\r\n})\r\n\r\nexport class MonthlySalesPaymentReport implements OnInit {\r\n    acname: string;\r\n    accode: string;\r\n    userProfile: any;\r\n    division: any[] = [];\r\n    account: any[] = [];\r\n    account2: any[] = [];\r\n    instanceWiseRepName:string='MonthlySalesPaymentReport';\r\n\r\n    @Output() reportdataEmit = new EventEmitter();\r\n    @ViewChild(\"genericGridMonthlysalesPayment\") genericGridMonthlysalesPayment: GenericPopUpComponent;\r\n    gridPopupSettingsForAccountList: GenericPopUpSettings = new GenericPopUpSettings();\r\n    constructor(private masterService: MasterRepo,\r\n        public dialogref: MdDialogRef<MonthlySalesPaymentReport>,\r\n        @Inject(MD_DIALOG_DATA) public data: DialogInfo,\r\n        private _reportFilterService: ReportMainService,  public _ActivatedRoute: ActivatedRoute,\r\n        private alertService: AlertService, private _authService: AuthService, private arouter: Router\r\n    ) {\r\n \r\n        this._reportFilterService.MonthlySalesPaymentObj.Reportnameis = 'MonthlySalesPaymentReport';\r\n        this.userProfile = this._authService.getUserProfile();\r\n\r\n        this.division=[];\r\n        if(this.masterService.userSetting.userwisedivision == 1){\r\n          this.masterService.getDivisionFromRightPrivelege().subscribe(res=>{\r\n              if(res.status == 'ok'){\r\n                  this.division = res.result;\r\n              }\r\n          })\r\n        }\r\n        else{\r\n         this.masterService.getAllDivisions()\r\n         .subscribe(res => {\r\n           //////console.log(\"div\" + JSON.stringify(res));\r\n           this.division.push(<Division>res);\r\n         }, error => {\r\n           this.masterService.resolveError(error, \"divisions - getDivisions\");\r\n         });\r\n        }\r\n\r\n        // this.masterService.getAccDivList();\r\n\r\n    }\r\n\r\n    ngOnInit() {\r\n        this._ActivatedRoute.queryParams.subscribe(params => {\r\n            if (this._reportFilterService.MonthlySalesPaymentObj.assignPrevioiusDate != true) {\r\n                this.masterService.getAccDivList();\r\n            this._reportFilterService.MonthlySalesPaymentObj.MonthlySalesPayment_DATE1 = this.masterService.PhiscalObj.BeginDate.split('T')[0];\r\n            if (this.masterService.userProfile.CompanyInfo.ActualFY == this.masterService.PhiscalObj.PhiscalID) {\r\n                    this._reportFilterService.MonthlySalesPaymentObj.MonthlySalesPayment_DATE2 = new Date().toJSON().split('T')[0];\r\n                    this.changeEndDate(this._reportFilterService.MonthlySalesPaymentObj.MonthlySalesPayment_DATE2, \"AD\");\r\n                  }\r\n                  else {\r\n\r\n                this._reportFilterService.MonthlySalesPaymentObj.MonthlySalesPayment_DATE2 = this.masterService.PhiscalObj.EndDate.split('T')[0];\r\n                        this.changeEndDate(this._reportFilterService.MonthlySalesPaymentObj.MonthlySalesPayment_DATE2, \"AD\");\r\n\r\n\r\n                }\r\n                // this._reportFilterService.MonthlySalesPaymentObj.MonthlySalesPayment_DATE2 = new Date().toJSON().split('T')[0];\r\n                // this._reportFilterService.MonthlySalesPaymentObj.  MonthlySalesPayment_DIV = this.masterService.userProfile.CompanyInfo.INITIAL;\r\n            }\r\n\r\n            if(params.instancename){\r\n                // ////console.log(\"@@[Monthly Sales Payment0]\",params.instancename,this._reportFilterService.reportDataStore[params.instancename].param.reportparam)\r\n                this._reportFilterService.MonthlySalesPaymentObj.MonthlySalesPayment_DATE1=this._reportFilterService.reportDataStore[params.instancename].param.reportparam.DATE1;\r\n                this._reportFilterService.MonthlySalesPaymentObj.MonthlySalesPayment_DATE2=this._reportFilterService.reportDataStore[params.instancename].param.reportparam.DATE2;\r\n                this._reportFilterService.MonthlySalesPaymentObj.MonthlySalesPayment_DIV=this._reportFilterService.reportDataStore[params.instancename].param.reportparam.DIV;\r\n                this._reportFilterService.MonthlySalesPaymentObj.MonthlySalesPayment_ACID=this._reportFilterService.reportDataStore[params.instancename].param.reportparam.ACID;\r\n                this._reportFilterService.MonthlySalesPaymentObj.MonthlySalesPayment_ACCNAME=this._reportFilterService.reportDataStore[params.instancename].param.reportparam.ACNAME;\r\n\r\n            }\r\n\r\n        })\r\n\r\n        this.changeEntryDate(this._reportFilterService.MonthlySalesPaymentObj.MonthlySalesPayment_DATE1, \"AD\");\r\n        this.changeEndDate(this._reportFilterService.MonthlySalesPaymentObj.MonthlySalesPayment_DATE2, \"AD\");\r\n    }\r\n    focusOutFromDate(value) {\r\n        this.masterService.validateDate(value).subscribe(x => {\r\n            if (x == \"error\") {\r\n                this.alertService.warning(\"Date should be within Fiscal year\");\r\n                this._reportFilterService.MonthlySalesPaymentObj.MonthlySalesPayment_DATE1 = new Date().toJSON().split('T')[0];\r\n            }\r\n        });\r\n    }\r\n    changeEntryDate(value, format: string) {\r\n\r\n        var adbs = require(\"ad-bs-converter\");\r\n        if (format == \"AD\") {\r\n            var adDate = (value.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n            var bsDate = adbs.ad2bs(adDate);\r\n            this._reportFilterService.MonthlySalesPaymentObj.MonthlySalesPayment_BSDATE1 = this.masterService.toBSDate(value);\r\n        }\r\n        else if (format == \"BS\") {\r\n          var datearr = value.split('/');\r\n          const bsDate = datearr[2]+\"/\"+datearr[1]+\"/\"+datearr[0];\r\n            // var bsDate = (value.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n            var adDate = adbs.bs2ad(bsDate);\r\n            var Engdate = this.masterService.toADDate(value);\r\n            const Validatedata = this.masterService.ValidateNepaliDate(Engdate)\r\n            if(Validatedata == true){\r\n              const bsDate1 = datearr[2]+\"/\"+datearr[1]+\"/\"+datearr[0];\r\n              var adDate1 = adbs.bs2ad(bsDate1);\r\n              this._reportFilterService.MonthlySalesPaymentObj.MonthlySalesPayment_DATE1 = this.masterService.toADDate(value);\r\n            }else{\r\n                this.alertService.error(\"Cannot Change the date\");\r\n              return;\r\n            }\r\n            // this._reportFilterService.MonthlySalesPaymentObj.MonthlySalesPayment_DATE1 = this.masterService.toBSDate(value);\r\n        }\r\n\r\n    }\r\n\r\n    changeEndDate(value, format: string) {\r\n        var adbs = require(\"ad-bs-converter\");\r\n        if (format == \"AD\") {\r\n            var adDate = (value.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n            var bsDate = adbs.ad2bs(adDate);\r\n            this._reportFilterService.MonthlySalesPaymentObj.MonthlySalesPayment_BSDATE2 = this.masterService.toBSDate(value);\r\n        }\r\n        else if (format == \"BS\") {\r\n          var datearr = value.split('/');\r\n          const bsDate = datearr[2]+\"/\"+datearr[1]+\"/\"+datearr[0];\r\n            // var bsDate = (value.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n            var adDate = adbs.bs2ad(bsDate);\r\n            var Engdate = this.masterService.toADDate(value);\r\n                const Validatedata = this.masterService.ValidateNepaliDate(Engdate)\r\n                if(Validatedata == true){\r\n                  const bsDate1 = datearr[2]+\"/\"+datearr[1]+\"/\"+datearr[0];\r\n                  var adDate1 = adbs.bs2ad(bsDate1);\r\n                  this._reportFilterService.MonthlySalesPaymentObj.MonthlySalesPayment_DATE2= this.masterService.toADDate(value);\r\n                }else{\r\n                    this.alertService.error(\"Cannot Change the date\");\r\n                  return;\r\n                }\r\n            // this._reportFilterService.MonthlySalesPaymentObj.MonthlySalesPayment_DATE2 = this.masterService.toBSDate(value);\r\n        }\r\n    }\r\n\r\n    onload() {\r\n\r\n            // if (this._reportFilterService.MonthlySalesPaymentObj.MonthlySalesPayment_ACCNAME == null || this._reportFilterService.MonthlySalesPaymentObj.MonthlySalesPayment_ACCNAME == '' || this._reportFilterService.MonthlySalesPaymentObj.MonthlySalesPayment_ACCNAME == undefined) {\r\n            //     this.alertService.info(\"Please Select Account\");\r\n            //     return;\r\n            // }\r\n            this.DialogClosedResult(\"ok\"); \r\n        \r\n    }\r\n\r\n    closeReportBox() {\r\n        this.DialogClosedResult(\"Error!\");\r\n    }\r\n\r\n    public DialogClosedResult(res) {\r\n        this._reportFilterService.MonthlySalesPaymentObj.MonthlySalesPayment_DIV = (this._reportFilterService.MonthlySalesPaymentObj.MonthlySalesPayment_DIV == null || this._reportFilterService.MonthlySalesPaymentObj.  MonthlySalesPayment_DIV == \"\") ? \"%\" : this._reportFilterService.MonthlySalesPaymentObj.  MonthlySalesPayment_DIV;\r\n\r\n        if (this._reportFilterService.MonthlySalesPaymentObj.MonthlySalesPayment_DIV && this._reportFilterService.MonthlySalesPaymentObj.MonthlySalesPayment_DIV == '%') {\r\n            this._reportFilterService.MonthlySalesPaymentObj.MonthlySalesPayment_DIVISIONAME = 'All';\r\n          }else if( this._reportFilterService.MonthlySalesPaymentObj.MonthlySalesPayment_DIV && this._reportFilterService.MonthlySalesPaymentObj.MonthlySalesPayment_DIV!= '%'){\r\n            let abc = this.division.filter(x=>x.INITIAL == this._reportFilterService.MonthlySalesPaymentObj.MonthlySalesPayment_DIV);\r\n              if(abc && abc.length>0 && abc[0]){\r\n                this._reportFilterService.MonthlySalesPaymentObj.MonthlySalesPayment_DIVISIONAME = abc[0].NAME;\r\n              }else{\r\n                this._reportFilterService.MonthlySalesPaymentObj.MonthlySalesPayment_DIVISIONAME = '';\r\n              }\r\n          }else{\r\n            this._reportFilterService.MonthlySalesPaymentObj.MonthlySalesPayment_DIVISIONAME = '';\r\n          }\r\n\r\n        if (res == \"ok\") {\r\n            this._reportFilterService.MonthlySalesPaymentObj.assignPrevioiusDate = true;\r\n            let routepaths = this.arouter.url.split('/');\r\n            let activeurlpath2;\r\n            if (routepaths && routepaths.length) {\r\n                activeurlpath2 = routepaths[routepaths.length - 1]\r\n            }\r\n\r\n            if(this._reportFilterService.Monthlysales_Payment_loadedTimes == 0){\r\n                this._reportFilterService.previouslyLoadedReportList.push(\r\n                    {\r\n                        reportname: 'MonthlySalesPaymentReport',\r\n                        activeurlpath: this.arouter.url,\r\n                        activerurlpath2: activeurlpath2,\r\n                        instanceWiseRepName:this.instanceWiseRepName +this._reportFilterService.Monthlysales_Payment_loadedTimes,\r\n                    });\r\n            }else{\r\n                this._reportFilterService.previouslyLoadedReportList.push(\r\n                    {\r\n                        reportname: 'MonthlySalesPaymentReport'+'_'+this._reportFilterService.Monthlysales_Payment_loadedTimes,\r\n                        activeurlpath: this.arouter.url,\r\n                        activerurlpath2: activeurlpath2,\r\n                        instanceWiseRepName:this.instanceWiseRepName +this._reportFilterService.Monthlysales_Payment_loadedTimes,\r\n                    });\r\n            }\r\n\r\n        }\r\n\r\n\r\n        this.reportdataEmit.emit({\r\n            status: res, data: {\r\n                REPORTDISPLAYNAME : 'Monthly Sales Payment Report',\r\n                reportname:'Monthly Sales Payment Report',\r\n                instanceWiseRepName:this.instanceWiseRepName+this._reportFilterService.Monthlysales_Payment_loadedTimes,\r\n                reportparam: {\r\n                    REPORTOPTIONDISPLAYNAME: this._reportFilterService.MonthlySalesPaymentObj.MonthlySalesPayment_REPORTOPTIONDISPLAYNAME?this._reportFilterService.MonthlySalesPaymentObj.MonthlySalesPayment_REPORTOPTIONDISPLAYNAME:'',\r\n                    DATE1: this._reportFilterService.MonthlySalesPaymentObj.MonthlySalesPayment_DATE1,\r\n                    DATE2: this._reportFilterService.MonthlySalesPaymentObj.MonthlySalesPayment_DATE2,\r\n                    BSDATE1: this._reportFilterService.MonthlySalesPaymentObj.MonthlySalesPayment_BSDATE1,\r\n                    BSDATE2: this._reportFilterService.MonthlySalesPaymentObj.MonthlySalesPayment_BSDATE2,\r\n                    DIV: this._reportFilterService.MonthlySalesPaymentObj.MonthlySalesPayment_DIV,\r\n                    COMPANYID: this.masterService.userProfile.CompanyInfo.COMPANYID,\r\n                    PHISCALID: this.masterService.PhiscalObj.PhiscalID, \r\n                    ACID: this._reportFilterService.MonthlySalesPaymentObj.MonthlySalesPayment_ACID ? this._reportFilterService.MonthlySalesPaymentObj.MonthlySalesPayment_ACID : '%',\r\n                    ACNAME: this._reportFilterService.MonthlySalesPaymentObj.MonthlySalesPayment_ACCNAME,\r\n                    DIVISIONNAME : this._reportFilterService.MonthlySalesPaymentObj.MonthlySalesPayment_DIVISIONAME ? this._reportFilterService.MonthlySalesPaymentObj.MonthlySalesPayment_DIVISIONAME : '',\r\n                   \r\n                }\r\n            }\r\n        })\r\n        this._reportFilterService.Monthlysales_Payment_loadedTimes = this._reportFilterService.Monthlysales_Payment_loadedTimes+1;\r\n    }\r\n\r\n\r\n    AccountEnterClicked() {\r\n        this.gridPopupSettingsForAccountList = this.masterService.getGenericGridPopUpSettings('AllAcountList');\r\n        this.genericGridMonthlysalesPayment.show();\r\n    }\r\n\r\n    dblClickAccountSelect(account) {\r\n        this._reportFilterService.MonthlySalesPaymentObj.MonthlySalesPayment_ACID = account.ACID;\r\n        this._reportFilterService.MonthlySalesPaymentObj.MonthlySalesPayment_ACCNAME = account.ACNAME;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/pages/ReportDialogs/MonthlySalesPaymentReport/monthly-sales-payement-report.component.ts","import { Component, Output, EventEmitter, ViewChild, Input, ElementRef } from '@angular/core';\r\nimport { MasterRepo } from '../../../common/repositories';\r\n\r\n@Component({\r\n  selector: 'one-lakh-above-SALES-report',\r\n  template: require('./one-lakh-above-SALES-report.component.html'),\r\n  styles: [require('../../modal-style.css'), require('../../Reports/reportStyle.css')],\r\n})\r\nexport class OneLakhAboveSALESreportComponent {\r\n  OneLakhAboveSalesReport: any = <any>{};\r\n\r\n  @ViewChild('division') division: ElementRef\r\n  private divisionList = []\r\n  showopeningBl: string\r\n  @Output() reportdataEmit = new EventEmitter();\r\n  @Input() reportType: string;\r\n\r\n\r\n  constructor(public masterService: MasterRepo) {\r\n    this.OneLakhAboveSalesReport.DATE1 = new Date().toJSON().split('T')[0];\r\n    this.changeEntryDate(this.OneLakhAboveSalesReport.DATE1, \"AD\");\r\n    this.OneLakhAboveSalesReport.DATE = new Date().toJSON().split('T')[0];\r\n    this.changeEndDate(this.OneLakhAboveSalesReport.DATE, \"AD\");\r\n\r\n    this.masterService.getAllDivisions().subscribe((res) => {\r\n      this.divisionList.push(res)\r\n    })\r\n  }\r\n\r\n  onload() {\r\n    this.DialogClosedResult(\"ok\");\r\n\r\n  }\r\n\r\n  public DialogClosedResult(res) {\r\n    if (this.OneLakhAboveSalesReport.isR1 == true) {\r\n      this.OneLakhAboveSalesReport.R1 = '1'\r\n    } else {\r\n      this.OneLakhAboveSalesReport.R1 = ''\r\n    }\r\n    if (this.OneLakhAboveSalesReport.isR2 == true) {\r\n      this.OneLakhAboveSalesReport.R2 = '1'\r\n    } else {\r\n      this.OneLakhAboveSalesReport.R2 = ''\r\n    }\r\n    if (this.OneLakhAboveSalesReport.isR3 == true) {\r\n      this.OneLakhAboveSalesReport.R3 = '1'\r\n    } else {\r\n      this.OneLakhAboveSalesReport.R3 = ''\r\n    }\r\n    this.reportdataEmit.emit({\r\n      status: res, data: {\r\n        reportname: 'One Lakh Above Sales Report', reportparam: {\r\n          DATE1: this.OneLakhAboveSalesReport.DATE1,\r\n          DATE2: this.OneLakhAboveSalesReport.DATE,\r\n          DIV: this.OneLakhAboveSalesReport.DIV,\r\n          COMPANYID: this.masterService.userProfile.CompanyInfo.COMPANYID,\r\n          R1: this.OneLakhAboveSalesReport.R1,\r\n          R2: this.OneLakhAboveSalesReport.R2,\r\n          R3: this.OneLakhAboveSalesReport.R3,\r\n          DETAIL: '0',\r\n          PARTY: '%',\r\n          VATNO: '%',\r\n          isR1: false,\r\n          isR2: false,\r\n          isR3: false\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  divisionChanged() {\r\n    this.OneLakhAboveSalesReport.DIV = this.division.nativeElement.value\r\n  }\r\n\r\n  hide() {\r\n    this.DialogClosedResult(\"Error\");\r\n  }\r\n\r\n  changeEntryDate(value, format: string) {\r\n    var adbs = require(\"ad-bs-converter\");\r\n    if (format == \"AD\") {\r\n      var adDate = (value.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n      var bsDate = adbs.ad2bs(adDate);\r\n      this.OneLakhAboveSalesReport.BSDATE1 = this.masterService.toBSDate(value);\r\n    }\r\n    else if (format == \"BS\") {\r\n      var bsDate = (value.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n      var adDate = adbs.bs2ad(bsDate);\r\n      this.OneLakhAboveSalesReport.DATE1 = this.masterService.toADDate(value);\r\n    }\r\n  }\r\n\r\n  changeEndDate(value, format: string) {\r\n    var adbs = require(\"ad-bs-converter\");\r\n    if (format == \"AD\") {\r\n      var adDate = (value.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n      var bsDate = adbs.ad2bs(adDate);\r\n      this.OneLakhAboveSalesReport.BSDATE2 = this.masterService.toBSDate(value);\r\n    }\r\n    else if (format == \"BS\") {\r\n      var bsDate = (value.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n      var adDate = adbs.bs2ad(bsDate);\r\n      this.OneLakhAboveSalesReport.DATE = this.masterService.toADDate(value);\r\n    }\r\n  }\r\n\r\n  cancel() {\r\n    this.DialogClosedResult(\"cancel\");\r\n  }\r\n\r\n  preventInput($event) {\r\n    $event.preventDefault();\r\n    return false;\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/pages/ReportDialogs/One-Lakh-Above-SALES-Report/one-lakh-above-SALES-report.component.ts","import { Component, Output, EventEmitter, ViewChild, ElementRef } from '@angular/core';\r\nimport { MasterRepo } from '../../../common/repositories';\r\nimport { Division } from '../../../common/interfaces';\r\nimport { AuthService } from '../../../common/services/permission/authService.service';\r\nimport { PLedgerComponent } from '../../masters/components/PLedger/PLedger.component';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { Subscriber } from 'rxjs/Subscriber';\r\nimport { AlertService } from '../../../common/services/alert/alert.service';\r\nimport { ReportMainService } from '../../Reports/components/ReportMain/ReportMain.service';\r\nimport { GenericPopUpComponent, GenericPopUpSettings } from '../../../common/popupLists/generic-grid/generic-popup-grid.component';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ReportFilterService } from '../../../common/popupLists/report-filter/report-filter.service';\r\nimport * as moment from 'moment';\r\n\r\n@Component({\r\n    selector: 'party-ledger-report',\r\n    template: require('./party-ledger-report.component.html'),\r\n    styles: [require('../../modal-style.css'), require('../../Reports/reportStyle.css')],\r\n})\r\nexport class PartyLedgerReport {\r\n    showCCtable: boolean;\r\n    showAreaTable: boolean;\r\n    showLedgerTable: boolean;\r\n    showCombineLedgerList: boolean;\r\n    showMergeCombineLedger: boolean;\r\n    reportNameFormatWise:string;\r\n    acname:string ='';\r\n    accode:string = '';\r\n    userProfile: any;\r\n    account:any[]=[];\r\n    result: any;\r\n    division: any[] = [];\r\n    CostcenterList: any[] = [];\r\n    PartyLedger_result: boolean;\r\n    showMultipleCC: boolean;\r\n    AreaList: any[] = [];\r\n    instanceWiseRepName:string='Party Ledger Report';\r\n    REPORTDISPLAYNAME:string;\r\n    showAccGrpTable:boolean;\r\n\r\n    @ViewChild(\"PLedgerChild\") PLedgerChild: PLedgerComponent;\r\n    @Output() reportdataEmit = new EventEmitter();\r\n    @ViewChild(\"genericGridPartyLedger\") genericGridPartyLedger: GenericPopUpComponent;\r\n    gridPopupSettingsForPartyLedgerList: GenericPopUpSettings = new GenericPopUpSettings();\r\n    @ViewChild(\"genericGridMultiplePartyLedger\") genericGridMultiplePartyLedger: GenericPopUpComponent;\r\n    gridPopupSettingsForMultiplePartyLedgerList: GenericPopUpSettings = new GenericPopUpSettings();\r\n    @ViewChild(\"genericGridMultipleGroupAccount\") genericGridMultipleGroupAccount: GenericPopUpComponent;\r\n    gridPopupSettingsForMultipleGroupAccountList: GenericPopUpSettings = new GenericPopUpSettings();\r\n    @ViewChild('partyAccountSelection') partyAccountSelection: ElementRef;\r\n    \r\n    constructor(public masterService: MasterRepo,\r\n        private alertService: AlertService,\r\n        private _reportFilterService: ReportMainService,\r\n        private _authService: AuthService, private arouter: Router,public _ActivatedRoute: ActivatedRoute,\r\n        public reportService: ReportFilterService,\r\n        ) {\r\n\r\n            this._reportFilterService.PartyLedgerObj.IGNOREOPPOSITAC=true;\r\n            // this._reportFilterService.PartyLedgerObj.PartyLedger_HIDENARATION=true;\r\n\r\n        this._reportFilterService.showAllcontactsInCC = true;\r\n        this._reportFilterService.PartyLedgerObj.Reportnameis = 'partyledger';\r\n        this.reportNameFormatWise = 'Party Ledger Report';\r\n        this.userProfile = this._authService.getUserProfile();\r\n        \r\n        this.masterService.getAccountListACIDLikePA().subscribe(res => {\r\n            this.account=res.data;\r\n            if(this.account.length!=0){\r\n                this.PartyLedger_result=true;\r\n            }else{\r\n                this.PartyLedger_result=false;\r\n            } \r\n        })\r\n\r\n        this.division = [];\r\n        this.division=[];\r\n        //let data: Array<IDivision> = [];\r\n        if(this.masterService.userSetting.userwisedivision == 1){\r\n          this.masterService.getDivisionFromRightPrivelege().subscribe(res=>{\r\n              if(res.status == 'ok'){\r\n                  this.division = res.result;\r\n              }\r\n          })\r\n        }\r\n        else{\r\n         this.masterService.getAllDivisions()\r\n         .subscribe(res => {\r\n           //////console.log(\"div\" + JSON.stringify(res));\r\n           this.division.push(<Division>res);                \r\n         }, error => {\r\n           this.masterService.resolveError(error, \"divisions - getDivisions\");\r\n         });\r\n        } \r\n\r\n            this.masterService.getCostcenter().subscribe(res => {\r\n                this.CostcenterList = res;\r\n            })\r\n\r\n            this.masterService.getAreaList().subscribe(res => {\r\n                this.AreaList = res.result;\r\n            })\r\n\r\n        this.showMultipleCC = true;\r\n        this.checkValueForCombine();\r\n        // this.masterService.getAccDivList();\r\n       \r\n    }\r\n\r\n\r\n  \r\n\r\n    ngOnInit(){\r\n        this._ActivatedRoute.queryParams.subscribe(params => {\r\n            const mode = params.mode;\r\n            // ////console.log(\"@@this.reportMasterService.drillParam.returnUrl\",params.mode,this.reportService.drillParam.returnUrl);\r\n            // ////console.log(\"@@partyled\",this.reportService.drillParam)\r\n            if (mode == \"DRILL\" && this.reportService.drillParam.returnUrl && this.reportService.drillParam.reportname.startsWith('Party Ledger Report')) {\r\n            this._reportFilterService.PartyLedgerObj.PartyLedger_DATE1=moment(this.reportService.drillParam.reportparam.DATE1).format('YYYY-MM-DD');\r\n            this._reportFilterService.PartyLedgerObj.PartyLedger_DATE2=moment(this.reportService.drillParam.reportparam.DATE2).format('YYYY-MM-DD');\r\n            this._reportFilterService.PartyLedgerObj.PartyLedger_BSDATE1=this.reportService.drillParam.reportparam.BSDATE1;\r\n            this._reportFilterService.PartyLedgerObj.PartyLedger_BSDATE2=this.reportService.drillParam.reportparam.BSDATE2;\r\n            this._reportFilterService.PartyLedgerObj.PartyLedger_DIV=this.reportService.drillParam.reportparam.DIV;\r\n            this._reportFilterService.PartyLedgerObj.PartyLedger_CostCenter=this.reportService.drillParam.reportparam.COSTCENTER;\r\n            this._reportFilterService.PartyLedgerObj.PartyLedger_ReportType =2;\r\n            this._reportFilterService.PartyLedgerObj.PartyLedger_ACCNAME=this.reportService.drillParam.reportparam.CUSTOMERNAME;\r\n            this._reportFilterService.PartyLedgerObj.PartyLedger_ACID=this.reportService.drillParam.reportparam.ACID;\r\n            this._reportFilterService.PartyLedgerObj.PartyLedger_SingleAccount=this.reportService.drillParam.reportparam.ACID;\r\n\r\n            this.showLedgerTable = true;\r\n            this._reportFilterService.PartyLedgerObj.EnableCombineLedger = false;\r\n            this._reportFilterService.PartyLedgerObj.PartyLedger_AreaWise = [];\r\n            this._reportFilterService.PartyLedgerObj.PartyLedger_AreaWise = 0;\r\n\r\n            this._reportFilterService.PartyLedgerObj.PartyLedger_multipleAccounts = [];\r\n            this._reportFilterService.PartyLedgerObj.PartyLedger_multipleCostcenter = [];\r\n            this._reportFilterService.PartyLedgerObj.PartyLedger_multipleGroupAccounts=[];\r\n            // this.changeEntryDate(this._reportFilterService.PartyLedgerObj.PartyLedger_DATE1, \"AD\");\r\n            // this.changeEndDate(this._reportFilterService.PartyLedgerObj.PartyLedger_DATE2, \"AD\");\r\n            if(this.reportService.drillParam.reportname == 'Party Ledger Report_2'){\r\n                this._reportFilterService.PartyLedgerObj.PartyLedger_SUMMARYREPORT='1';\r\n            }else{\r\n                this._reportFilterService.PartyLedgerObj.PartyLedger_SUMMARYREPORT='0';\r\n            }\r\n\r\n            if(this.masterService.userSetting.DISPLAY == 1){\r\n                this._reportFilterService.PartyLedgerObj.IGNOREOPPOSITAC=true;\r\n            }else{\r\n                this._reportFilterService.PartyLedgerObj.IGNOREOPPOSITAC=false;\r\n            }\r\n            }\r\n        else{\r\n            if(this._reportFilterService.PartyLedgerObj.assignPrevioiusDate != true){\r\n                this.masterService.getAccDivList();\r\n                this._reportFilterService.PartyLedgerObj.PartyLedger_DATE1=this.masterService.PhiscalObj.BeginDate.split('T')[0];\r\n                //console.log(\"@@01BeginDate\",this.masterService.PhiscalObj.BeginDate)\r\n                if (this.userProfile.CompanyInfo.ActualFY == this.masterService.PhiscalObj.PhiscalID) {\r\n                    this._reportFilterService.PartyLedgerObj.PartyLedger_DATE2 = new Date().toJSON().split('T')[0];\r\n                    this.changeEndDate(this._reportFilterService.PartyLedgerObj.PartyLedger_DATE2, \"AD\");\r\n                  }\r\n                  else {\r\n                    //console.log(\"@@02EndDate\",this.masterService.PhiscalObj.EndDate)\r\n                        this._reportFilterService.PartyLedgerObj.PartyLedger_DATE2 = this.masterService.PhiscalObj.EndDate.split('T')[0];\r\n                        this.changeEndDate(this._reportFilterService.PartyLedgerObj.PartyLedger_DATE2, \"AD\");  \r\n          \r\n                    \r\n                }\r\n                // this._reportFilterService.PartyLedgerObj.PartyLedger_DATE2 = new Date().toJSON().split('T')[0];\r\n                this.masterService.viewDivision.subscribe(() => {\r\n                      if(this.masterService.userSetting.userwisedivision==0 ||  this.masterService.showAll == true){ //ALL OPTION SELECTION IN DIVISION IN REPORT DIALOG BOX\r\n                        this._reportFilterService.PartyLedgerObj.PartyLedger_DIV='%';\r\n                    }else{\r\n                        if(this.masterService.userSetting.userwisedivision==1 && this.division.length ==1){\r\n                            this._reportFilterService.PartyLedgerObj.PartyLedger_DIV=this.division[0].INITIAL;\r\n                          }else{\r\n                            this._reportFilterService.PartyLedgerObj.PartyLedger_DIV=this.masterService.userProfile.CompanyInfo.INITIAL;\r\n                        }\r\n                    }\r\n                    })              \r\n                this._reportFilterService.PartyLedgerObj.PartyLedger_CostCenter ='%'\r\n                this._reportFilterService.PartyLedgerObj.PartyLedger_ReportType =2;\r\n                // this._reportFilterService.PartyLedgerObj.IGNOREOPPOSITAC =1;\r\n                if(this.masterService.userSetting.DISPLAY == 1){\r\n                    this._reportFilterService.PartyLedgerObj.PartyLedger_SUMMARYREPORT ='0';\r\n                    this._reportFilterService.PartyLedgerObj.IGNOREOPPOSITAC = true;\r\n                }else{\r\n                    this._reportFilterService.PartyLedgerObj.PartyLedger_SUMMARYREPORT ='0';\r\n                }\r\n                this.checkValue();\r\n                this._reportFilterService.PartyLedgerObj.PartyLedger_AreaWise = 0;\r\n                if(this._reportFilterService.PartyLedgerObj.EnableCombineLedger == true){\r\n                    this.checkValue();\r\n                } else{\r\n                    this.checkValueForCombine();\r\n                } \r\n                this._reportFilterService.PartyLedgerObj.PartyLedger_multipleAccounts = [];\r\n                this._reportFilterService.PartyLedgerObj.PartyLedger_multipleCostcenter = [];\r\n                this._reportFilterService.PartyLedgerObj.PartyLedger_multipleGroupAccounts=[];\r\n                this.changeEntryDate(this._reportFilterService.PartyLedgerObj.PartyLedger_DATE1, \"AD\");\r\n                this.changeEndDate(this._reportFilterService.PartyLedgerObj.PartyLedger_DATE2, \"AD\"); \r\n                this._reportFilterService.PartyLedgerObj.PartyLedger_HIDECOSTCENTER = 0;\r\n            }\r\n    \r\n            \r\n\r\n            if(params.instancename){\r\n                // ////console.log(\"@@[Party Ledger Report0]\",params.instancename,this._reportFilterService.reportDataStore[params.instancename].param.reportparam)\r\n                this._reportFilterService.PartyLedgerObj.PartyLedger_DATE1=this._reportFilterService.reportDataStore[params.instancename].param.reportparam.DATE1;\r\n                this._reportFilterService.PartyLedgerObj.PartyLedger_DATE2=this._reportFilterService.reportDataStore[params.instancename].param.reportparam.DATE2;\r\n                this.changeEntryDate(this._reportFilterService.PartyLedgerObj.PartyLedger_DATE1, \"AD\");\r\n                this.changeEndDate(this._reportFilterService.PartyLedgerObj.PartyLedger_DATE2, \"AD\");  \r\n                this._reportFilterService.PartyLedgerObj.PartyLedger_DIV=this._reportFilterService.reportDataStore[params.instancename].param.reportparam.DIV;\r\n                this._reportFilterService.PartyLedgerObj.CCENTER=this._reportFilterService.reportDataStore[params.instancename].param.reportparam.COSTCENTER;\r\n                this._reportFilterService.PartyLedgerObj.PartyLedger_ReportType =this._reportFilterService.reportDataStore[params.instancename].param.reportparam.REPORTTYPE;\r\n                this._reportFilterService.PartyLedgerObj.PartyLedger_ACCNAME=this._reportFilterService.reportDataStore[params.instancename].param.reportparam.ACNAME;\r\n                this._reportFilterService.PartyLedgerObj.PartyLedger_ACID=this._reportFilterService.reportDataStore[params.instancename].param.reportparam.ACID;\r\n                this._reportFilterService.PartyLedgerObj.PartyLedger_SingleAccount=this._reportFilterService.reportDataStore[params.instancename].param.reportparam.ACID;\r\n                this._reportFilterService.PartyLedgerObj.PartyLedger_AreaWise=this._reportFilterService.reportDataStore[params.instancename].param.reportparam.AREA;   \r\n                this._reportFilterService.PartyLedgerObj.IGNOREOPPOSITAC=this._reportFilterService.reportDataStore[params.instancename].param.reportparam.IGNOREOPPOSITAC;\r\n                this._reportFilterService.PartyLedgerObj.MERGEREPORT=this._reportFilterService.reportDataStore[params.instancename].param.reportparam.MERGEREPORT;\r\n                this._reportFilterService.PartyLedgerObj.SHOWNARATION=this._reportFilterService.reportDataStore[params.instancename].param.reportparam.SHOWNARATION;\r\n                this._reportFilterService.PartyLedgerObj.SHOWNDATE=this._reportFilterService.reportDataStore[params.instancename].param.reportparam.SHOWNDATE;\r\n                this._reportFilterService.PartyLedgerObj.PartyLedger_SUMMARYREPORT = this._reportFilterService.reportDataStore[params.instancename].param.reportparam.SUMMARYLEDGER;\r\n                this._reportFilterService.PartyLedgerObj.PartyLedger_HIDENARATION = this._reportFilterService.reportDataStore[params.instancename].param.reportparam.HIDENARATION; \r\n                this._reportFilterService.PartyLedgerObj.PartyLedger_HIDEVOUCHERTYPE = this._reportFilterService.reportDataStore[params.instancename].param.reportparam.HIDEVOUCHERTYPE; \r\n                this._reportFilterService.PartyLedgerObj.PartyLedger_SHOWITEMDETAIL =this._reportFilterService.reportDataStore[params.instancename].param.reportparam.SHOWITEMDETAIL; \r\n                this._reportFilterService.PartyLedgerObj.PartyLedger_INCLUDEPOSTDATE =this._reportFilterService.reportDataStore[params.instancename].param.reportparam.INCLUDEPOSTEDTRANSACTION ; \r\n                this._reportFilterService.PartyLedgerObj.PartyLedger_HIDECOSTCENTER =this._reportFilterService.reportDataStore[params.instancename].param.reportparam.HIDECOSTCENTER ; \r\n            }\r\n        } \r\n\r\n    });\r\n    }\r\n    ngAfterViewInit(){\r\n        var a = this.masterService.AccListDiv.forEach(x=>x.isSelected == 1);\r\n        this.applyHostListener();\r\n        \r\n        \r\n    }\r\n\r\n    changeEntryDate(value, format: string) {\r\n        var adbs = require(\"ad-bs-converter\");\r\n        if (format == \"AD\") {\r\n            var adDate = (value.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n            var bsDate = adbs.ad2bs(adDate);\r\n            this._reportFilterService.PartyLedgerObj.PartyLedger_BSDATE1 = this.masterService.toBSDate(value);\r\n        } \r\n        else if (format == \"BS\") {\r\n            var datearr = value.split('/');\r\n            const bsDate = datearr[2]+\"/\"+datearr[1]+\"/\"+datearr[0];\r\n            // var bsDate = (value.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n            var adDate = adbs.bs2ad(bsDate);\r\n            var Engdate = this.masterService.toADDate(value);\r\n              const Validatedata = this.masterService.ValidateNepaliDate(Engdate)\r\n              if(Validatedata == true){\r\n                const bsDate1 = datearr[2]+\"/\"+datearr[1]+\"/\"+datearr[0];\r\n                var adDate1 = adbs.bs2ad(bsDate1);\r\n                this._reportFilterService.PartyLedgerObj.PartyLedger_DATE1= this.masterService.toADDate(value);\r\n              }else{\r\n                  this.alertService.error(\"Cannot Change the date\");\r\n                return;\r\n              }\r\n            // this._reportFilterService.PartyLedgerObj.PartyLedger_DATE1 = this.masterService.toBSDate(value);\r\n        }\r\n    }\r\n\r\n    changeEndDate(value, format: string) {\r\n        var adbs = require(\"ad-bs-converter\");\r\n        if (format == \"AD\") {\r\n            var adDate = (value.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n            var bsDate = adbs.ad2bs(adDate);\r\n            this._reportFilterService.PartyLedgerObj.PartyLedger_BSDATE2 = this.masterService.toBSDate(value);\r\n        }\r\n        else if (format == \"BS\") {\r\n            var datearr = value.split('/');\r\n            const bsDate = datearr[2]+\"/\"+datearr[1]+\"/\"+datearr[0];\r\n            // var bsDate = (value.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n            var adDate = adbs.bs2ad(bsDate);\r\n            var Engdate = this.masterService.toADDate(value);\r\n              const Validatedata = this.masterService.ValidateNepaliDate(Engdate)\r\n              if(Validatedata == true){\r\n                const bsDate1 = datearr[2]+\"/\"+datearr[1]+\"/\"+datearr[0];\r\n                var adDate1 = adbs.bs2ad(bsDate1);\r\n                this._reportFilterService.PartyLedgerObj.PartyLedger_DATE2 = this.masterService.toADDate(value);\r\n              }else{\r\n                  this.alertService.error(\"Cannot Change the date\");\r\n                return;\r\n              }\r\n\r\n            // this._reportFilterService.PartyLedgerObj.PartyLedger_DATE2 = this.masterService.toBSDate(value);\r\n        }\r\n    }\r\n\r\n    onload() {\r\n        if (this._reportFilterService.PartyLedgerObj.EnableCombineLedger==true && this._reportFilterService.PartyLedgerObj.PartyLedger_ReportType == 2 && (this._reportFilterService.PartyLedgerObj.PartyLedger_multipleAccounts === undefined || this._reportFilterService.PartyLedgerObj.PartyLedger_multipleAccounts.length == 0)) {\r\n            this.alertService.info(\"Please Select Account\");\r\n            return;\r\n        } else if (this._reportFilterService.PartyLedgerObj.EnableCombineLedger==true && this._reportFilterService.PartyLedgerObj.PartyLedger_ReportType == 1 && this._reportFilterService.PartyLedgerObj.PartyLedger_AreaWise === undefined) {\r\n            this.alertService.info(\"Please Select Area\");\r\n            return;\r\n        } else if ((this._reportFilterService.PartyLedgerObj.EnableCombineLedger==true && this._reportFilterService.PartyLedgerObj.PartyLedger_ReportType == 4 && (this._reportFilterService.PartyLedgerObj.PartyLedger_showAllContacts == false || this._reportFilterService.PartyLedgerObj.PartyLedger_showAllContacts===undefined)) && (this._reportFilterService.PartyLedgerObj.PartyLedger_multipleCostcenter === undefined || this._reportFilterService.PartyLedgerObj.PartyLedger_multipleCostcenter.length == 0)) {\r\n            this.alertService.info(\"Please Select Costcenter\");\r\n            return;\r\n        } else if ((this._reportFilterService.PartyLedgerObj.PartyLedger_ReportType == 1 || this._reportFilterService.PartyLedgerObj.PartyLedger_ReportType == 4 || this._reportFilterService.PartyLedgerObj.PartyLedger_showAllContacts) && (this._reportFilterService.PartyLedgerObj.PartyLedger_SingleAccount === undefined || this._reportFilterService.PartyLedgerObj.PartyLedger_SingleAccount == '' || this._reportFilterService.PartyLedgerObj.PartyLedger_ACCNAME == '')) {\r\n            this.alertService.info(\"Please Select Account\");\r\n            return;\r\n        }else if (this.PartyLedger_result == true && ( this._reportFilterService.PartyLedgerObj.EnableCombineLedger === undefined ||this._reportFilterService.PartyLedgerObj.PartyLedger_ReportType ==0)) {\r\n            if (this._reportFilterService.PartyLedgerObj.PartyLedger_SingleAccount === undefined || this._reportFilterService.PartyLedgerObj.PartyLedger_SingleAccount=='' || this._reportFilterService.PartyLedgerObj.PartyLedger_ACCNAME == '') {\r\n                this.alertService.info(\"Please Select Account\");\r\n                return;\r\n            }\r\n            this.DialogClosedResult(\"ok\");\r\n        }\r\n        else {\r\n            this.DialogClosedResult(\"ok\");\r\n        }\r\n\r\n    }\r\n\r\n    public DialogClosedResult(res) {\r\n\r\n        let multipleSelectedCC = [];\r\n        let SelectedCC = '';\r\n        if (this._reportFilterService.PartyLedgerObj.PartyLedger_multipleCostcenter === undefined) {\r\n            SelectedCC = this._reportFilterService.PartyLedgerObj.CCENTER;\r\n        } else {\r\n            if (this._reportFilterService.PartyLedgerObj.PartyLedger_multipleCostcenter.length != 0) {\r\n                this._reportFilterService.PartyLedgerObj.PartyLedger_multipleCostcenter.forEach(COSTCENTER => {\r\n                    multipleSelectedCC.push(COSTCENTER.CCID)\r\n                    SelectedCC += `${multipleSelectedCC},`\r\n                });\r\n            } else {\r\n                SelectedCC = this._reportFilterService.PartyLedgerObj.CCENTER\r\n            }\r\n        }\r\n\r\n        let multipleSelectedAccount = [];\r\n\r\n        if (this._reportFilterService.PartyLedgerObj.PartyLedger_multipleAccounts === undefined) {\r\n            this._reportFilterService.selectedAccountParty = this._reportFilterService.PartyLedgerObj.PartyLedger_SingleAccount\r\n        } else {\r\n            if (this._reportFilterService.PartyLedgerObj.PartyLedger_multipleAccounts.length != 0) {\r\n                this._reportFilterService.PartyLedgerObj.PartyLedger_multipleAccounts.forEach(acList => {\r\n                    this._reportFilterService.selectedAccountParty=''\r\n                    multipleSelectedAccount.push(acList.ACID)\r\n                    this._reportFilterService.selectedAccountParty += `${multipleSelectedAccount},`\r\n                });\r\n                var nameArr = this._reportFilterService.selectedAccountParty.split(',');\r\n                var myArr = nameArr;\r\n                let item = myArr.filter((el, i, a) => i === a.indexOf(el))\r\n                // ////console.log(\"@@item\",item)\r\n                this._reportFilterService.selectedAccountParty= item.toString();\r\n                // ////console.log(\"@@this._reportFilterService.selectedAccountParty\",this._reportFilterService.selectedAccountParty)\r\n            } else {\r\n                this._reportFilterService.selectedAccountParty = this._reportFilterService.PartyLedgerObj.PartyLedger_SingleAccount\r\n            }\r\n        }\r\n\r\n        let multipleSelectedGroupACC = [];\r\n        // let SelectedGroupACC = '';\r\n        if (this._reportFilterService.PartyLedgerObj.PartyLedger_multipleGroupAccounts === undefined) {\r\n            this._reportFilterService.selectedGroupAccountParty = '%';\r\n        } else {\r\n            if (this._reportFilterService.PartyLedgerObj.PartyLedger_multipleGroupAccounts.length != 0) {\r\n                this._reportFilterService.PartyLedgerObj.PartyLedger_multipleGroupAccounts.forEach(acList => {\r\n                    this._reportFilterService.selectedGroupAccountParty =''\r\n                    multipleSelectedGroupACC.push(acList.ACID)\r\n                    this._reportFilterService.selectedGroupAccountParty += `${multipleSelectedGroupACC},`\r\n                });\r\n                var nameArr = this._reportFilterService.selectedGroupAccountParty.split(',');\r\n                var myArr = nameArr;\r\n                let item = myArr.filter((el, i, a) => i === a.indexOf(el))\r\n                // ////console.log(\"@@item\",item)\r\n                this._reportFilterService.selectedGroupAccountParty= item.toString();\r\n            } else {\r\n                this._reportFilterService.selectedGroupAccountParty = '%';\r\n            }\r\n        }\r\n\r\n        if (this._reportFilterService.PartyLedgerObj.PartyLedger_ReportType != 4) {\r\n            SelectedCC = this._reportFilterService.PartyLedgerObj.PartyLedger_CostCenter\r\n        }\r\n\r\n        if (this._reportFilterService.PartyLedgerObj.IGNOREOPPOSITAC == true) {\r\n            this._reportFilterService.PartyLedgerObj.IGNOREOPPOSITAC = 1;\r\n            this.reportNameFormatWise = 'Party Ledger Report_1';\r\n        } else {\r\n            this._reportFilterService.PartyLedgerObj.IGNOREOPPOSITAC = 0;\r\n            this.reportNameFormatWise = 'Party Ledger Report';\r\n        }\r\n\r\n        if(this._reportFilterService.PartyLedgerObj.PartyLedger_SUMMARYREPORT == 1){\r\n            this.reportNameFormatWise = 'Party Ledger Report_2';\r\n        }\r\n\r\n        if (this._reportFilterService.PartyLedgerObj.SHOWNDATE == true) {\r\n            this._reportFilterService.PartyLedgerObj.SHOWNDATE = 1;\r\n        } else {\r\n            this._reportFilterService.PartyLedgerObj.SHOWNDATE = 0;\r\n        }\r\n\r\n        if (this._reportFilterService.PartyLedgerObj.MERGEREPORT == true) {\r\n            this._reportFilterService.PartyLedgerObj.MERGEREPORT = 1;\r\n        } else {\r\n            this._reportFilterService.PartyLedgerObj.MERGEREPORT = 0;\r\n        }\r\n\r\n        if (this._reportFilterService.PartyLedgerObj.PartyLedger_showAllContacts == true) {\r\n            this._reportFilterService.PartyLedgerObj.PartyLedger_ReportType = 3;\r\n            SelectedCC = '%';\r\n        }\r\n\r\n        if(this._reportFilterService.PartyLedgerObj.EnableCombineLedger !=true){\r\n            this._reportFilterService.selectedAccountParty = this._reportFilterService.PartyLedgerObj.PartyLedger_SingleAccount;\r\n            this._reportFilterService.PartyLedgerObj.PartyLedger_ReportType = 0;\r\n        }\r\n\r\n        if(this._reportFilterService.PartyLedgerObj.PartyLedger_ReportType != 2){\r\n            this._reportFilterService.selectedAccountParty = this._reportFilterService.PartyLedgerObj.PartyLedger_SingleAccount;\r\n        }\r\n\r\n        if(this._reportFilterService.PartyLedgerObj.PartyLedger_ReportType != 1){\r\n            this._reportFilterService.PartyLedgerObj.PartyLedger_AreaWise = 0;\r\n        }\r\n\r\n        if (this._reportFilterService.PartyLedgerObj.PartyLedger_DIV && this._reportFilterService.PartyLedgerObj.PartyLedger_DIV == '%') {\r\n            this._reportFilterService.PartyLedgerObj.PartyLedger_DIVISIONNAME = 'All';\r\n          }else if( this._reportFilterService.PartyLedgerObj.PartyLedger_DIV && this._reportFilterService.PartyLedgerObj.PartyLedger_DIV!= '%'){\r\n            let abc = this.division.filter(x=>x.INITIAL == this._reportFilterService.PartyLedgerObj.PartyLedger_DIV);\r\n              if(abc && abc.length>0 && abc[0]){\r\n                this._reportFilterService.PartyLedgerObj.PartyLedger_DIVISIONNAME = abc[0].NAME;\r\n              }else{\r\n                this._reportFilterService.PartyLedgerObj.PartyLedger_DIVISIONNAME = '';\r\n              }\r\n          }else{\r\n            this._reportFilterService.PartyLedgerObj.PartyLedger_DIVISIONNAME = '';\r\n          }\r\n\r\n          if (this._reportFilterService.PartyLedgerObj.EnableCombineLedger != true) {\r\n          this.REPORTDISPLAYNAME = 'Party Ledger';\r\n          this._reportFilterService.PartyLedgerObj.PartyLedger_LABELDISPLAYNAME = 'Ledger';\r\n          this._reportFilterService.PartyLedgerObj.PartyLedger_LEDGERDISPLAYNAME = this._reportFilterService.PartyLedgerObj.PartyLedger_ACCNAME;\r\n\r\n          if (this._reportFilterService.PartyLedgerObj.PartyLedger_CostCenter && this._reportFilterService.PartyLedgerObj.PartyLedger_CostCenter == '%') {\r\n            this._reportFilterService.PartyLedgerObj.PartyLedger_COSTCENTERDISPLAYNAME = 'All';\r\n          }else if (this._reportFilterService.PartyLedgerObj.PartyLedger_CostCenter != '%') {\r\n            let abc = this.CostcenterList.filter(x=>x.CCID == this._reportFilterService.PartyLedgerObj.PartyLedger_CostCenter);\r\n            if(abc && abc.length>0 && abc[0]){\r\n              this._reportFilterService.PartyLedgerObj.PartyLedger_COSTCENTERDISPLAYNAME = abc[0].COSTCENTERNAME;\r\n            }else{\r\n              this._reportFilterService.PartyLedgerObj.PartyLedger_COSTCENTERDISPLAYNAME = '';\r\n            }\r\n          } else {\r\n            this._reportFilterService.PartyLedgerObj.PartyLedger_COSTCENTERDISPLAYNAME = '';\r\n          }\r\n        }\r\n\r\n        if (this._reportFilterService.PartyLedgerObj.EnableCombineLedger == true) {\r\n            this.REPORTDISPLAYNAME = 'Party Ledger';\r\n            this._reportFilterService.PartyLedgerObj.PartyLedger_LABELDISPLAYNAME = 'Ledger';\r\n            this._reportFilterService.PartyLedgerObj.PartyLedger_LEDGERDISPLAYNAME = 'Combine Ledger Selection';\r\n    }\r\n\r\n        if(res == \"ok\"){\r\n        this._reportFilterService.PartyLedgerObj.assignPrevioiusDate = true;\r\n        let routepaths = this.arouter.url.split('/');\r\n        let activeurlpath2;\r\n              if(routepaths&& routepaths.length){\r\n                activeurlpath2=routepaths[routepaths.length-1]\r\n                // ////console.log(\"@@activeurlpath2\",activeurlpath2)\r\n              } \r\n\r\n        if(this._reportFilterService.PartyLedger_loadedTimes == 0){\r\n            this._reportFilterService.previouslyLoadedReportList.push(\r\n                {reportname: 'Party Ledger Report',\r\n                activeurlpath: this.arouter.url,\r\n                activerurlpath2: activeurlpath2,\r\n                instanceWiseRepName:this.instanceWiseRepName +this._reportFilterService.PartyLedger_loadedTimes,\r\n            });\r\n        }else{\r\n            this._reportFilterService.previouslyLoadedReportList.push(\r\n                {reportname: 'Party Ledger Report'+'_'+this._reportFilterService.PartyLedger_loadedTimes,\r\n                activeurlpath: this.arouter.url,\r\n                activerurlpath2: activeurlpath2,\r\n                instanceWiseRepName:this.instanceWiseRepName +this._reportFilterService.PartyLedger_loadedTimes,\r\n            });\r\n        }\r\n     \r\n        }\r\n        this.reportdataEmit.emit({\r\n            status: res, data: {\r\n                REPORTDISPLAYNAME : 'Party Ledger',\r\n                reportname: this.reportNameFormatWise,\r\n                instanceWiseRepName:this.instanceWiseRepName+this._reportFilterService.PartyLedger_loadedTimes, \r\n                reportparam: {\r\n                    LABELDISPLAYNAME : this._reportFilterService.PartyLedgerObj.PartyLedger_LABELDISPLAYNAME?this._reportFilterService.PartyLedgerObj.PartyLedger_LABELDISPLAYNAME:'',\r\n                    LEDGERDISPLAYNAME : this._reportFilterService.PartyLedgerObj.PartyLedger_LEDGERDISPLAYNAME?this._reportFilterService.PartyLedgerObj.PartyLedger_LEDGERDISPLAYNAME:'',\r\n                    DATE1: this._reportFilterService.PartyLedgerObj.PartyLedger_DATE1,\r\n                    DATE2: this._reportFilterService.PartyLedgerObj.PartyLedger_DATE2,\r\n                    BSDATE1: this._reportFilterService.PartyLedgerObj.PartyLedger_BSDATE1,\r\n                    BSDATE2: this._reportFilterService.PartyLedgerObj.PartyLedger_BSDATE2,\r\n                    DIV: this._reportFilterService.PartyLedgerObj.PartyLedger_DIV ? this._reportFilterService.PartyLedgerObj.PartyLedger_DIV : '%',\r\n                    COSTCENTER: SelectedCC ? SelectedCC : '%',\r\n                    AREA: this._reportFilterService.PartyLedgerObj.PartyLedger_AreaWise ? this._reportFilterService.PartyLedgerObj.PartyLedger_AreaWise : 0,\r\n                    COMID: this.masterService.userProfile.CompanyInfo.COMPANYID,\r\n                    REPORTTYPE: this._reportFilterService.PartyLedgerObj.PartyLedger_ReportType?this._reportFilterService.PartyLedgerObj.PartyLedger_ReportType:0,\r\n                    IGNOREOPPOSITAC: this._reportFilterService.PartyLedgerObj.IGNOREOPPOSITAC,\r\n                    // SHOWNDATE: this._reportFilterService.PartyLedgerObj.SHOWNDATE,\r\n                    ACID: this._reportFilterService.selectedAccountParty ? this._reportFilterService.selectedAccountParty : '%',\r\n                    MERGEREPORT: this._reportFilterService.PartyLedgerObj.MERGEREPORT,\r\n                    ACNAME : this._reportFilterService.PartyLedgerObj.PartyLedger_ACCNAME,\r\n                    PHISCALID: this.masterService.PhiscalObj.PhiscalID,\r\n                    ADDRESS : this._reportFilterService.PartyLedgerObj.PartyLedger_ADDRESS?this._reportFilterService.PartyLedgerObj.PartyLedger_ADDRESS:'',\r\n                    VATNO : this._reportFilterService.PartyLedgerObj.PartyLedger_VATNO?this._reportFilterService.PartyLedgerObj.PartyLedger_VATNO:'',\r\n                    PHONE : this._reportFilterService.PartyLedgerObj.PartyLedger_PHONE?this._reportFilterService.PartyLedgerObj.PartyLedger_PHONE:'',\r\n                    EMAIL : this._reportFilterService.PartyLedgerObj.PartyLedger_EMAIL?this._reportFilterService.PartyLedgerObj.PartyLedger_EMAIL:'',\r\n                    // REPORTDISPLAYNAME : this.REPORTDISPLAYNAME ? this.REPORTDISPLAYNAME : this.reportNameFormatWise,\r\n                    DIVISIONNAME : this._reportFilterService.PartyLedgerObj.PartyLedger_DIVISIONNAME ? this._reportFilterService.PartyLedgerObj.PartyLedger_DIVISIONNAME : '',\r\n\r\n                    COSTCENTERDISPLAYNAME: this._reportFilterService.PartyLedgerObj.PartyLedger_COSTCENTERDISPLAYNAME?this._reportFilterService.PartyLedgerObj.PartyLedger_COSTCENTERDISPLAYNAME:'',\r\n                    SUMMARYLEDGER:this._reportFilterService.PartyLedgerObj.PartyLedger_SUMMARYREPORT ? this._reportFilterService.PartyLedgerObj.PartyLedger_SUMMARYREPORT: 0,\r\n                    HIDENARATION: this._reportFilterService.PartyLedgerObj.PartyLedger_HIDENARATION ? this._reportFilterService.PartyLedgerObj.PartyLedger_HIDENARATION:0,\r\n                    HIDEVOUCHERTYPE:this._reportFilterService.PartyLedgerObj.PartyLedger_HIDEVOUCHERTYPE ? this._reportFilterService.PartyLedgerObj.PartyLedger_HIDEVOUCHERTYPE:0,\r\n                    SHOWITEMDETAIL:this._reportFilterService.PartyLedgerObj.PartyLedger_SHOWITEMDETAIL? this._reportFilterService.PartyLedgerObj.PartyLedger_SHOWITEMDETAIL:0,\r\n                    INCLUDEPOSTEDTRANSACTION :this._reportFilterService.PartyLedgerObj.PartyLedger_INCLUDEPOSTDATE ? this._reportFilterService.PartyLedgerObj.PartyLedger_INCLUDEPOSTDATE:0,\r\n                    HIDECOSTCENTER:this._reportFilterService.PartyLedgerObj.PartyLedger_HIDECOSTCENTER ? this._reportFilterService.PartyLedgerObj.PartyLedger_HIDECOSTCENTER:0,\r\n                    GROUP_ACID :this._reportFilterService.selectedGroupAccountParty ? this._reportFilterService.selectedGroupAccountParty :'%',\r\n\r\n                }\r\n            }\r\n        });\r\n\r\n        if(res == \"ok\"){\r\n            this._reportFilterService.PartyLedger_loadedTimes = this._reportFilterService.PartyLedger_loadedTimes+1;\r\n        }\r\n    }\r\n\r\n    // Close Method\r\n    closeReportBox() {\r\n        this.DialogClosedResult(\"cancel\");\r\n    }\r\n\r\n    checkValue() {\r\n        if (this._reportFilterService.PartyLedgerObj.PartyLedger_ReportType == 2) {\r\n            this.showLedgerTable = true;\r\n            this.acname = this._reportFilterService.PartyLedgerObj.PartyLedger_ACCNAME;\r\n            this._reportFilterService.PartyLedgerObj.PartyLedger_ACCNAME = '';\r\n            this.accode = this._reportFilterService.PartyLedgerObj.PartyLedger_ACCODE;\r\n            this._reportFilterService.PartyLedgerObj.PartyLedger_ACID = '';\r\n            this._reportFilterService.PartyLedgerObj.PartyLedger_SingleAccount = '';\r\n            this._reportFilterService.PartyLedgerObj.PartyLedger_multipleCostcenter = [];\r\n            this._reportFilterService.PartyLedgerObj.PartyLedger_AreaWise = [];\r\n            this._reportFilterService.PartyLedgerObj.PartyLedger_multipleGroupAccounts=[];\r\n        } else {\r\n            this.showLedgerTable = false;\r\n            this._reportFilterService.PartyLedgerObj.PartyLedger_ACCNAME = this.acname;\r\n            this._reportFilterService.PartyLedgerObj.PartyLedger_ACID = this.accode;\r\n            this._reportFilterService.PartyLedgerObj.PartyLedger_SingleAccount = this.accode;\r\n        }\r\n        if (this._reportFilterService.PartyLedgerObj.PartyLedger_ReportType == 1) {\r\n            this.showAreaTable = true;\r\n            this._reportFilterService.PartyLedgerObj.PartyLedger_multipleCostcenter = [];\r\n            this._reportFilterService.PartyLedgerObj.PartyLedger_multipleAccounts = [];\r\n            this._reportFilterService.PartyLedgerObj.PartyLedger_multipleGroupAccounts=[];\r\n        } else {\r\n            this.showAreaTable = false;\r\n        }\r\n        if (this._reportFilterService.PartyLedgerObj.PartyLedger_ReportType == 4) {\r\n            this.showCCtable = true;\r\n            this._reportFilterService.PartyLedgerObj.PartyLedger_multipleAccounts = [];\r\n            this._reportFilterService.PartyLedgerObj.PartyLedger_AreaWise = 0;\r\n            this._reportFilterService.PartyLedgerObj.PartyLedger_multipleGroupAccounts=[];\r\n        } else {\r\n            this.showCCtable = false;\r\n        }\r\n        if (this._reportFilterService.PartyLedgerObj.PartyLedger_ReportType == 5) {\r\n            this.showAccGrpTable = true;\r\n            this._reportFilterService.PartyLedgerObj.PartyLedger_AreaWise = 0;\r\n            this._reportFilterService.PartyLedgerObj.PartyLedger_multipleCostcenter = [];\r\n            this._reportFilterService.PartyLedgerObj.PartyLedger_multipleAccounts = [];\r\n        } else {\r\n            this.showAccGrpTable = false;\r\n        }\r\n        \r\n\r\n    }\r\n\r\n    checkValueForCombine(){\r\n        if (this._reportFilterService.PartyLedgerObj.EnableCombineLedger == true) {\r\n            this.showCombineLedgerList = true;\r\n            this.acname = this._reportFilterService.PartyLedgerObj.PartyLedger_ACCNAME;\r\n            this._reportFilterService.PartyLedgerObj.PartyLedger_ACCNAME = '';\r\n            this.accode = this._reportFilterService.PartyLedgerObj.PartyLedger_ACCODE;\r\n            this._reportFilterService.PartyLedgerObj.PartyLedger_ACID = '';\r\n            this._reportFilterService.PartyLedgerObj.PartyLedger_SingleAccount = '';\r\n            this.showMergeCombineLedger = true;\r\n            if(this._reportFilterService.PartyLedgerObj.PartyLedger_ReportType == 2){\r\n                this.showLedgerTable = true;\r\n            }else if (this._reportFilterService.PartyLedgerObj.PartyLedger_ReportType == 4){\r\n                this.showCCtable = true;\r\n            }else if(this._reportFilterService.PartyLedgerObj.PartyLedger_ReportType == 1){\r\n                this.showAreaTable = true;\r\n            }else if (this._reportFilterService.PartyLedgerObj.PartyLedger_ReportType == 5){\r\n                this.showAccGrpTable = true;\r\n            }\r\n        } else {\r\n            this.showCombineLedgerList = false;\r\n            this.showMergeCombineLedger = false;\r\n            this._reportFilterService.PartyLedgerObj.PartyLedger_multipleCostcenter = [];\r\n            this._reportFilterService.PartyLedgerObj.PartyLedger_multipleAccounts = [];\r\n            this._reportFilterService.PartyLedgerObj.PartyLedger_multipleGroupAccounts=[];\r\n            this._reportFilterService.PartyLedgerObj.PartyLedger_AreaWise = 0;\r\n            this.showLedgerTable = false;\r\n            this.showCCtable = false;\r\n            this.showAreaTable = false;\r\n            this.showAccGrpTable = false;\r\n        }\r\n    }\r\n\r\n    AccountEnterClicked() {\r\n        this.gridPopupSettingsForPartyLedgerList = this.masterService.getGenericGridPopUpSettings('PartyLedgerListForReport');\r\n        this.genericGridPartyLedger.show();\r\n    }\r\n\r\n    dblClickAccountSelect(account) {\r\n        this._reportFilterService.PartyLedgerObj.PartyLedger_ACID = account.ACID;\r\n        this._reportFilterService.PartyLedgerObj.PartyLedger_ACCNAME = account.ACNAME;\r\n        this._reportFilterService.PartyLedgerObj.PartyLedger_SingleAccount = account.ACID;\r\n        this._reportFilterService.PartyLedgerObj.PartyLedger_ADDRESS = account.ADDRESS;\r\n        this._reportFilterService.PartyLedgerObj.PartyLedger_VATNO = account.VATNO?account.VATNO:account.GSTNO;\r\n        this._reportFilterService.PartyLedgerObj.PartyLedger_PHONE= account.PHONE;\r\n        this._reportFilterService.PartyLedgerObj.PartyLedger_EMAIL = account.EMAIL;\r\n\r\n    }\r\n\r\n    addAccountToList() {\r\n        let selectACList = this._reportFilterService.PartyLedgerObj.PartyLedger_multipleAccounts.filter(acList => acList.ACID == this._reportFilterService.PartyLedgerObj.multipleACID)\r\n        if (\r\n            this._reportFilterService.PartyLedgerObj.multipleACNAME === \"\" ||\r\n            this._reportFilterService.PartyLedgerObj.multipleACNAME === null ||\r\n            this._reportFilterService.PartyLedgerObj.multipleACNAME === undefined\r\n        ) {\r\n            return;\r\n        }\r\n\r\n        if (selectACList.length === 0) {\r\n            this._reportFilterService.PartyLedgerObj.PartyLedger_multipleAccounts.push({ ACID: this._reportFilterService.PartyLedgerObj.multipleACID, ACNAME: this._reportFilterService.PartyLedgerObj.multipleACNAME })\r\n                this._reportFilterService.PartyLedgerObj.multipleACNAME='';\r\n                this._reportFilterService.PartyLedgerObj.multipleACCODE='';\r\n        }\r\n    }\r\n\r\n    deleteAccount(index) {\r\n        this._reportFilterService.PartyLedgerObj.PartyLedger_multipleAccounts.splice(index, 1);\r\n        this._reportFilterService.selectedAccountParty= '';\r\n    }\r\n\r\n    \r\n    MultipleAccountEnterClicked() {\r\n        this.gridPopupSettingsForMultiplePartyLedgerList = this.masterService.getGenericGridPopUpSettings('PartyLedgerListForReport');\r\n        this.genericGridMultiplePartyLedger.show();\r\n    }\r\n\r\n    dblClickMultipleAccountSelect(account) {\r\n        this._reportFilterService.PartyLedgerObj.multipleACID = account.ACID;\r\n        this._reportFilterService.PartyLedgerObj.multipleACNAME = account.ACNAME;\r\n    }\r\n\r\n    checkCostCenterValue() {\r\n        if (this._reportFilterService.PartyLedgerObj.PartyLedger_showAllContacts == true) {\r\n            this.showMultipleCC = false;\r\n        } else {\r\n            this.showMultipleCC = true;\r\n        }\r\n    }\r\n\r\n    addCostcenterToList() {\r\n        const ccData = this._reportFilterService.PartyLedgerObj.CCENTER;\r\n        this._reportFilterService.PartyLedgerObj.CCENTER = ccData && ccData.CCID ? ccData.CCID : '';\r\n        let selectCCenterList = this._reportFilterService.PartyLedgerObj.PartyLedger_multipleCostcenter.filter(centerList => centerList.COSTCENTERNAME == ccData.COSTCENTERNAME)\r\n        if (\r\n            ccData.COSTCENTERNAME === \"\" ||\r\n            ccData.COSTCENTERNAME === null ||\r\n            ccData.COSTCENTERNAME === undefined\r\n        ) {\r\n            return;\r\n        }\r\n\r\n        if (selectCCenterList.length === 0) {\r\n            this._reportFilterService.PartyLedgerObj.PartyLedger_multipleCostcenter.push({ CCID: ccData.CCID, COSTCENTERNAME: ccData.COSTCENTERNAME })\r\n        }\r\n\r\n    }\r\n\r\n    deleteCostcenter(index) {\r\n        this._reportFilterService.PartyLedgerObj.PartyLedger_multipleCostcenter.splice(index, 1)\r\n    }\r\n\r\n    GroupAccountclick(){   \r\n        this.gridPopupSettingsForMultipleGroupAccountList = this.masterService.getGenericGridPopUpSettings('PartyGroupList');\r\n        this.genericGridMultipleGroupAccount.show();\r\n    }\r\n\r\n    dblClickGroupAccountSelect(account) {\r\n        this._reportFilterService.PartyLedgerObj.Multiple_GROUP_ACID = account.ACID;\r\n        this._reportFilterService.PartyLedgerObj.Multiple_GROUP_ACNAME = account.ACNAME;\r\n    }\r\n\r\n    addGroupAccountToList(){\r\n        let selectACList = this._reportFilterService.PartyLedgerObj.PartyLedger_multipleGroupAccounts.filter(acList => acList.ACNAME == this._reportFilterService.PartyLedgerObj.Multiple_GROUP_ACNAME)\r\n        if (\r\n            this._reportFilterService.PartyLedgerObj.Multiple_GROUP_ACNAME === \"\" ||\r\n            this._reportFilterService.PartyLedgerObj.Multiple_GROUP_ACNAME === null ||\r\n            this._reportFilterService.PartyLedgerObj.Multiple_GROUP_ACNAME === undefined\r\n        ) {\r\n            return;\r\n        }\r\n\r\n        if (selectACList.length === 0) {\r\n            this._reportFilterService.PartyLedgerObj.PartyLedger_multipleGroupAccounts.push({ ACID: this._reportFilterService.PartyLedgerObj.Multiple_GROUP_ACID, ACNAME: this._reportFilterService.PartyLedgerObj.Multiple_GROUP_ACNAME })\r\n                this._reportFilterService.PartyLedgerObj.Multiple_GROUP_ACNAME='';\r\n                this._reportFilterService.PartyLedgerObj.multiple_Group_ACCODE='';\r\n        }\r\n    }\r\n\r\n    deleteGroupAccount(index) {\r\n        this._reportFilterService.PartyLedgerObj.PartyLedger_multipleGroupAccounts.splice(index, 1);\r\n        this._reportFilterService.selectedGroupAccountParty='';\r\n\r\n    }\r\n\r\n    preventInput($event) {\r\n        $event.preventDefault();\r\n        return false;\r\n      }\r\n    applyHostListener(): void {\r\n        if (this.partyAccountSelection && this.partyAccountSelection.nativeElement) {\r\n          this.partyAccountSelection.nativeElement.addEventListener('keydown', (event: KeyboardEvent) => {\r\n            if (event.key !== 'Backspace') {\r\n              event.preventDefault(); // Prevent typing any character except the backspace\r\n            }\r\n          });\r\n        }\r\n      }\r\n   \r\n}\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/pages/ReportDialogs/PartyLedgerReport/party-ledger-report.component.ts","import {NgaModule} from '../../../theme/nga.module';\r\nimport {Component, Inject, Output, EventEmitter} from '@angular/core';\r\nimport {MdDialogRef, MD_DIALOG_DATA} from '@angular/material';\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { MasterRepo } from '../../../common/repositories';\r\nimport { Division } from '../../../common/interfaces';\r\nimport { TAcList } from '../../../common/interfaces/Account.interface';\r\nimport { Subscriber } from 'rxjs';\r\nimport { Subscription } from 'rxjs/Subscription';\r\n\r\n\r\n\r\nexport interface DialogInfo{\r\n    header: string;\r\n    message: Observable<string>;\r\n\r\n}\r\n\r\n@Component({\r\n    selector : 'result-partyledger-dialog',\r\n    template: require('./partyLedger.component.html'),\r\n    styles: [require('../../Reports/reportStyle.css'),require('../../modal-style.css')]\r\n\r\n})\r\n\r\nexport class PartyLedger{\r\n    ReportParameters:any=<any>{};\r\n    division: any[]=[];\r\n    accountDetails: any[] = [];\r\n    showAll:Boolean;\r\n   \r\n    @Output() reportdataEmit = new EventEmitter();\r\n       constructor( private masterService: MasterRepo,public dialogref:MdDialogRef<PartyLedger>, @Inject(MD_DIALOG_DATA) public data: DialogInfo){\r\n                //------Default values on load\r\n                this.ReportParameters.DATE1 = new Date().toJSON().split('T')[0];\r\n                this.changestartDate(this.ReportParameters.DATE1,'AD');\r\n                this.ReportParameters.DATE2 = new Date().toJSON().split('T')[0];\r\n                this.changeEndDate(this.ReportParameters.DATE2,'AD'); \r\n\r\n                this.ReportParameters.CostCenter = \" \";\r\n                this.ReportParameters.showNdate = \"0\";\r\n                this.ReportParameters.InSingleLedger = \"0\";\r\n                this.ReportParameters.IsAccountLedger = \"0\";\r\n                this.ReportParameters.REPORTBYCOSTCENTER = \"0\";\r\n                this.ReportParameters.HASMULTILEDGER = \"0\";\r\n                this.ReportParameters.SHOWPRODUCTDETAIL = \"0\";\r\n                this.ReportParameters.CheckSummaryReport = \"1\";\r\n                this.ReportParameters.SELECTEDACIDLIST = \" \";\r\n                this.ReportParameters.DIVISION = \"%\";\r\n                this.ReportParameters.OPT_SHOWSUMMARY_REPORT = \"1\";\r\n                \r\n                //-----------------------\r\n\r\n               this.division=[];\r\n               //let data: Array<IDivision> = [];\r\n               if(this.masterService.userSetting.userwisedivision == 1){\r\n                 this.masterService.getDivisionFromRightPrivelege().subscribe(res=>{\r\n                     if(res.status == 'ok'){\r\n                         this.division = res.result;\r\n                     }\r\n                 })\r\n               }\r\n               else{\r\n                this.masterService.getAllDivisions()\r\n                .subscribe(res => {\r\n                  //////console.log(\"div\" + JSON.stringify(res));\r\n                  this.division.push(<Division>res);                \r\n                }, error => {\r\n                  this.masterService.resolveError(error, \"divisions - getDivisions\");\r\n                });\r\n               }\r\n            \r\n                             \r\n                /* let dataa: Array<TAcList> = [];\r\n                 this.accountDetails = [];\r\n                 this.masterService.getAcList()\r\n                   .subscribe(res => {\r\n                       \r\n                      this.accountDetails.push(res);                   \r\n                 \r\n                       res = JSON.stringify(res);\r\n                       ////console.log(\"acaayo\"+res);                \r\n                   });*/\r\n                   this.masterService.getAccDivList();\r\n       }\r\n\r\n       onload()\r\n       {   \r\n            this.DialogClosedResult(\"ok\");\r\n       }\r\n\r\n       closeReportBox(){\r\n           this.dialogref.close();\r\n       }\r\n     \r\n       public DialogClosedResult(res) {\r\n        ////console.log(\"CheckValuee%\",this.ReportParameters)\r\n        this.ReportParameters.DIVISION = (this.ReportParameters.DIVISION == null || this.ReportParameters.DIVISION == \"\")?\"%\":this.ReportParameters.DIVISION;\r\n\r\n        if (res == \"ok\"){\r\n\r\n            if (this.ACID == \"\" || this.ACID == null ){\r\n                alert(\"Please choose Account!!!\");            \r\n            }\r\n            else{\r\n                this.ReportParameters.PLEDGER_ACID = this.ACID;\r\n                // ////console.log(\"Party££££££%%\",this.ReportParameters)\r\n                this.reportdataEmit.emit({ status: res, data: {reportname:'Party Ledger', reportparam:this.ReportParameters}});\r\n            }      \r\n        }\r\n        else{\r\n            this.reportdataEmit.emit({ status: res, data: {reportname:'Party Ledger', reportparam:this.ReportParameters}});\r\n        }   \r\n       }\r\n\r\n    changestartDate(value, format: string) {\r\n        try{\r\n            var adbs = require(\"ad-bs-converter\");\r\n            if (format == \"AD\") {\r\n                var adDate = (value.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n                var bsDate = adbs.ad2bs(adDate);\r\n                this.ReportParameters.BSDATE1 = this.masterService.toBSDate(value);\r\n                \r\n            }\r\n            else if (format == \"BS\") {\r\n                var bsDate = (value.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n                var adDate = adbs.bs2ad(bsDate);  \r\n                this.ReportParameters.DATE1 = this.masterService.toADDate(value);          \r\n            }\r\n        }catch(e){}\r\n      \r\n    }\r\n    changeEndDate(value, format: string) {\r\n        try{\r\n            var adbs = require(\"ad-bs-converter\");\r\n            if (format == \"AD\") {\r\n                var adDate = (value.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n                var bsDate = adbs.ad2bs(adDate);         \r\n                this.ReportParameters.BSDATE2 = this.masterService.toBSDate(value);\r\n            }\r\n            else if (format == \"BS\") {\r\n                var bsDate = (value.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n                var adDate = adbs.bs2ad(bsDate);         \r\n                this.ReportParameters.DATE2 = this.masterService.toADDate(value);\r\n    \r\n            }\r\n        }\r\n          catch(e){}\r\n      \r\n    }\r\n\r\n\r\n    dateString: any = '';\r\n    date1: any = '';\r\n    daysPrior: any = '';\r\n    dateId: any = '';\r\n    finalDate: any= '';\r\n    changeDateByRange(value:any){\r\n\r\n        if (value == \"1\"){\r\n            //alert(\"week selected!!\"); yy-mm-dd\r\n            \r\n            this.dateId = 7;\r\n            this.dateString = \"\"+ this.getCurrentDate() +\"\";\r\n            this.date1 = new Date(this.dateString);\r\n            this.daysPrior = parseInt(this.dateId);\r\n            this.date1.setDate(this.date1.getDate() - this.daysPrior);\r\n            this.finalDate =  (this.date1.toISOString().slice(0, 11).replace('T', ' '));\r\n\r\n            //alert(this.finalDate);\r\n            this.ReportParameters.DATE1 = (this.finalDate).trim();\r\n            this.changestartDate(this.ReportParameters.DATE1,'AD');\r\n \r\n        }\r\n         else if (value == \"2\"){\r\n        //     //alert(\"month selected!!\");\r\n            this.dateId = 30;\r\n            this.dateString = \"\"+ this.getCurrentDate() +\"\";\r\n            this.date1 = new Date(this.dateString);\r\n            this.daysPrior = parseInt(this.dateId);\r\n            this.date1.setDate(this.date1.getDate() - this.daysPrior);\r\n            this.finalDate =  (this.date1.toISOString().slice(0, 11).replace('T', ' '));\r\n\r\n            //alert(this.finalDate);\r\n            this.ReportParameters.DATE1 = (this.finalDate).trim();\r\n            this.changestartDate(this.ReportParameters.DATE1,'AD');\r\n         }\r\n        else{\r\n        // alert(\"year selected\");\r\n        this.dateId = 365;\r\n        this.dateString = \"\"+ this.getCurrentDate() +\"\";\r\n        this.date1 = new Date(this.dateString);\r\n        this.daysPrior = parseInt(this.dateId);\r\n        this.date1.setDate(this.date1.getDate() - this.daysPrior);\r\n        this.finalDate =  (this.date1.toISOString().slice(0, 11).replace('T', ' '));\r\n\r\n        //alert(this.finalDate);\r\n        this.ReportParameters.DATE1 = (this.finalDate).trim();\r\n        this.changestartDate(this.ReportParameters.DATE1,'AD');\r\n         }\r\n    }\r\n\r\n\r\n    dd: any;\r\n    mm: any;\r\n    yyyy: any;\r\n    today: any;\r\n    getCurrentDate(){\r\n        this.today = new Date();\r\n        this.dd = this.today.getDate();\r\n        this.mm = this.today.getMonth() + 1; //January is 0!\r\n    \r\n        this.yyyy = this.today.getFullYear();\r\n        if (this.dd < 10) {\r\n            this.dd = '0' + this.dd;\r\n        }\r\n        if (this.mm < 10) {\r\n            this.mm = '0' + this.mm;\r\n        }\r\n        this.today = this.mm + '/' + this.dd + '/' + this.yyyy;\r\n               \r\n        return this.today;\r\n    }\r\n\r\n    //Autocomplete Functions\r\n\r\n    results: Observable<TAcList[]>;\r\n    subscriptions: Subscription[] = [];\r\n    listFilterHolder: any[] = [];\r\n\r\n    dropListItem = (keyword: any): Observable<Array<any>> => {\r\n     return new Observable((observer: Subscriber<Array<any>>) => {\r\n            this.masterService.getAccount(\"from partyreport\").map(res=>{ \r\n                return res.filter(x=>x.ACID.substring(0,2).toUpperCase()=='PA');}).map(data=>{\r\n                return data.filter(ac => ac.ACNAME.toUpperCase().indexOf(keyword.toUpperCase()) > -1);\r\n            }\r\n            ).subscribe(res =>{observer.next(res);})\r\n        }).share();\r\n    }       \r\n    \r\n    ACCNAME : string = '';\r\n    ACCODE : string = '';\r\n    ACID: string = '';\r\n\r\n    accodeChanged(value :string){\r\n        var item = this.masterService.accountList.find(x => x.ACCODE == value);\r\n        //console.log({valueType: value,found : item ,items : this.masterService.accountList});\r\n        this.ACCNAME = '';\r\n        if (item){\r\n            value = item.ACNAME;\r\n           \r\n            this.ACCNAME = value;\r\n        }\r\n\r\n    }\r\n\r\n    itemChanged(value : any){\r\n        //console.log({itemChangedValue: value});\r\n        if (typeof(value) === \"object\"){\r\n            this.ACCNAME = value.ACNAME;\r\n            this.ACCODE = value.ACCODE;\r\n            this.ACID = value.ACID;\r\n        }\r\n    }\r\n\r\n    //autocomplete ends\r\n\r\n   \r\n}\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/pages/ReportDialogs/PartyLedger/partyLedger.component.ts","import { Component, Inject, Output, EventEmitter, OnInit, ViewChild } from '@angular/core';\r\nimport { MdDialogRef, MD_DIALOG_DATA } from '@angular/material';\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { MasterRepo } from '../../../common/repositories';\r\nimport { Division } from '../../../common/interfaces';\r\nimport { AuthService } from '../../../common/services/permission/authService.service';\r\nimport { ReportMainService } from '../../Reports/components/ReportMain/ReportMain.service';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { ReportFilterService } from '../../../common/popupLists/report-filter/report-filter.service';\r\nimport { AlertService } from '../../../common/services/alert/alert.service';\r\nimport { GenericPopUpComponent, GenericPopUpSettings } from '../../../common/popupLists/generic-grid/generic-popup-grid.component';\r\nimport { TransactionService } from '../../../common/Transaction Components/transaction.service';\r\nexport interface DialogInfo {\r\n  header: string;\r\n  message: Observable<string>;\r\n}\r\n@Component({\r\n  selector: 'postdated-report-selector',\r\n  template: require('./post-dated-chequereport.component.html'),\r\n  styles: [require('../../Reports/reportStyle.css'), require('../../modal-style.css')],\r\n})\r\n\r\nexport class PostDatedChequeVoucherReport implements OnInit {\r\n  division: any[] = [];\r\n  CostcenterList: any[] = [];\r\n  userProfile: any;\r\n  date1: any;\r\n  date2: any;\r\n  instanceWiseRepName: string = 'Post Dated Cheque Voucher Report';\r\n  @ViewChild(\"genericGridPartyLedger\") genericGridPartyLedger: GenericPopUpComponent;\r\n    gridPopupSettingsForPartyLedgerList: GenericPopUpSettings = new GenericPopUpSettings();\r\n    @ViewChild(\"genericGridACListParty\")\r\n    genericGridACListParty: GenericPopUpComponent;\r\n    gridACListPartyPopupSettings: GenericPopUpSettings = new GenericPopUpSettings();\r\n\r\n  @Output() reportdataEmit = new EventEmitter();\r\n  constructor(private masterService: MasterRepo, private _authService: AuthService,\r\n    private _reportFilterService: ReportMainService, private arouter: Router, public _ActivatedRoute: ActivatedRoute,\r\n    public reportService: ReportFilterService, private alertService: AlertService,private _transactionService: TransactionService,\r\n    public dialogref: MdDialogRef<PostDatedChequeVoucherReport>,\r\n    @Inject(MD_DIALOG_DATA) public data: DialogInfo) {\r\n    this.userProfile = this._authService.getUserProfile();\r\n\r\n    this.division = [];\r\n    if (this.masterService.userSetting.userwisedivision == 1) {\r\n      this.masterService.getDivisionFromRightPrivelege().subscribe(res => {\r\n        if (res.status == 'ok') {\r\n          this.division = res.result;\r\n        }\r\n      })\r\n    }\r\n    else {\r\n      this.masterService.getAllDivisions()\r\n        .subscribe(res => {\r\n          this.division.push(<Division>res);\r\n        }, error => {\r\n          this.masterService.resolveError(error, \"divisions - getDivisions\");\r\n        });\r\n    }\r\n\r\n    this.masterService.getCostcenter().subscribe(res => {\r\n      this.CostcenterList = res;\r\n    })\r\n  }\r\n\r\n  ngOnInit() {\r\n    this._ActivatedRoute.queryParams.subscribe(params => {\r\n      const mode = params.mode;\r\n      if (mode == \"DRILL\" && this.reportService.drillParam.returnUrl && this.reportService.drillParam.reportname == 'Post Dated Cheque Voucher Report' && this._reportFilterService.PostDatedChequeObj.assignPrevioiusDate != true) {\r\n        this._reportFilterService.PostDatedChequeObj.PostDatedCheque_DATE1 = this.reportService.drillParam.reportparam.DATE1;\r\n        this._reportFilterService.PostDatedChequeObj.PostDatedCheque_DATE2 = this.reportService.drillParam.reportparam.DATE2;\r\n        this._reportFilterService.PostDatedChequeObj.PostDatedCheque_DIV = this.reportService.drillParam.reportparam.DIV;\r\n        this._reportFilterService.PostDatedChequeObj.PostDatedCheque_CostCenter = this.reportService.drillParam.reportparam.COSTCENTER;\r\n      } else {\r\n        if (this._reportFilterService.PostDatedChequeObj.assignPrevioiusDate != true) {\r\n          this.masterService.getAccDivList();\r\n          // this._reportFilterService.PostDatedChequeObj.PostDatedCheque_DATE1 = this.masterService.PhiscalObj.BeginDate.split('T')[0];\r\n          // if (this.userProfile.CompanyInfo.ActualFY == this.masterService.PhiscalObj.PhiscalID) {\r\n          //   this._reportFilterService.PostDatedChequeObj.PostDatedCheque_DATE2 = new Date().toJSON().split('T')[0];\r\n          //   this.changeEndDate(this._reportFilterService.PostDatedChequeObj.PostDatedCheque_DATE2, \"AD\");\r\n          // }\r\n          // else {\r\n          //   this._reportFilterService.PostDatedChequeObj.PostDatedCheque_DATE2 = this.masterService.PhiscalObj.EndDate.split('T')[0];\r\n          //   this.changeEndDate(this._reportFilterService.PostDatedChequeObj.PostDatedCheque_DATE2, \"AD\");\r\n          // }\r\n          this.masterService.viewDivision.subscribe(() => {\r\n            if (this.masterService.userSetting.userwisedivision == 0 || this.masterService.showAll == true) { //ALL OPTION SELECTION IN DIVISION IN REPORT DIALOG BOX\r\n              this._reportFilterService.PostDatedChequeObj.PostDatedCheque_DIV = '%';\r\n            } else {\r\n              if (this.masterService.userSetting.userwisedivision == 1 && this.division.length == 1) {\r\n                this._reportFilterService.PostDatedChequeObj.PostDatedCheque_DIV = this.division[0].INITIAL;\r\n              } else {\r\n                this._reportFilterService.PostDatedChequeObj.PostDatedCheque_DIV = this.masterService.userProfile.CompanyInfo.INITIAL;\r\n              }\r\n            }\r\n          })\r\n          this._reportFilterService.PostDatedChequeObj.PostDatedCheque_CostCenter = '%';\r\n          this._reportFilterService.PostDatedChequeObj.PostDatedCheque_TRANTYPE = 'Party Receipt';\r\n          this._reportFilterService.PostDatedChequeObj.PostDatedCheque_DETAILSREPORT = '0';\r\n          this._reportFilterService.PostDatedChequeObj.PostDatedCheque_TRANSACTIONMODE = '0';\r\n          this._reportFilterService.PostDatedChequeObj.PostDatedCheque_CHEQUEDATEWISEREPORT = '0';\r\n          this.ChangeDate();\r\n        }\r\n\r\n        if (params.instancename) {\r\n          // ////console.log(\"@@[Report0]\",params.instancename,this._reportFilterService.reportDataStore[params.instancename].param.reportparam)\r\n          this._reportFilterService.PostDatedChequeObj.PostDatedCheque_DATE1 = this._reportFilterService.reportDataStore[params.instancename].param.reportparam.DATE1;\r\n          this._reportFilterService.PostDatedChequeObj.PostDatedCheque_DATE2 = this._reportFilterService.reportDataStore[params.instancename].param.reportparam.DATE2;\r\n          this._reportFilterService.PostDatedChequeObj.PostDatedCheque_DIV = this._reportFilterService.reportDataStore[params.instancename].param.reportparam.DIV;\r\n          this._reportFilterService.PostDatedChequeObj.PostDatedCheque_CostCenter = this._reportFilterService.reportDataStore[params.instancename].param.reportparam.COSTCENTER;\r\n        }\r\n      }\r\n    });\r\n\r\n    this.changeEntryDate(this._reportFilterService.PostDatedChequeObj.PostDatedCheque_DATE1, \"AD\");\r\n    this.changeEndDate(this._reportFilterService.PostDatedChequeObj.PostDatedCheque_DATE2, \"AD\");\r\n\r\n  }\r\n\r\n  changeEntryDate(value, format: string) {\r\n    var adbs = require(\"ad-bs-converter\");\r\n    if (format == \"AD\") {\r\n      var adDate = (value.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n      var bsDate = adbs.ad2bs(adDate);\r\n      this._reportFilterService.PostDatedChequeObj.PostDatedCheque_BSDATE1 = this.masterService.toBSDate(value);\r\n    }\r\n    else if (format == \"BS\") {\r\n      var datearr = value.split('/');\r\n      const bsDate = datearr[2] + \"/\" + datearr[1] + \"/\" + datearr[0];\r\n      // var bsDate = (value.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n      var adDate = adbs.bs2ad(bsDate);\r\n      var Engdate = this.masterService.toADDate(value);\r\n      if(this._reportFilterService.PostDatedChequeObj.PostDatedCheque_CHEQUEDATEWISEREPORT == 0){\r\n        const Validatedata = this.masterService.ValidateNepaliDate(Engdate)\r\n        if (Validatedata == true) {\r\n          const bsDate1 = datearr[2] + \"/\" + datearr[1] + \"/\" + datearr[0];\r\n          var adDate1 = adbs.bs2ad(bsDate1);\r\n          this._reportFilterService.PostDatedChequeObj.PostDatedCheque_DATE1 = this.masterService.toADDate(value);\r\n        } else {\r\n          this.alertService.error(\"Cannot Change the date\");\r\n          return;\r\n        }\r\n      }else{\r\n        this._reportFilterService.PostDatedChequeObj.PostDatedCheque_DATE1=this.masterService.toADDate(value);\r\n\r\n      }\r\n  \r\n\r\n\r\n    }\r\n  }\r\n\r\n  changeEndDate(value, format: string) {\r\n    var adbs = require(\"ad-bs-converter\");\r\n    if (format == \"AD\") {\r\n      var adDate = (value.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n      var bsDate = adbs.ad2bs(adDate);\r\n      this._reportFilterService.PostDatedChequeObj.PostDatedCheque_BSDATE2 = this.masterService.toBSDate(value);\r\n    }\r\n    else if (format == \"BS\") {\r\n      var datearr = value.split('/');\r\n      const bsDate = datearr[2] + \"/\" + datearr[1] + \"/\" + datearr[0];\r\n      // var bsDate = (value.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n      var adDate = adbs.bs2ad(bsDate);\r\n      var Engdate = this.masterService.toADDate(value);\r\n      const Validatedata = this.masterService.ValidateNepaliDate(Engdate)\r\n      // if (Validatedata == true) {\r\n        const bsDate1 = datearr[2] + \"/\" + datearr[1] + \"/\" + datearr[0];\r\n        var adDate1 = adbs.bs2ad(bsDate1);\r\n        this._reportFilterService.PostDatedChequeObj.PostDatedCheque_DATE2 = this.masterService.toADDate(value);\r\n      // } else {\r\n      //   this.alertService.error(\"Cannot Change the date\");\r\n      //   return;\r\n      // }\r\n\r\n    }\r\n  }\r\n\r\n  changeEntryCDate(value, format: string) { }\r\n  changeEndCDate(value, format: string) { }\r\n\r\n  onload() {\r\n    this.DialogClosedResult(\"ok\");\r\n  }\r\n\r\n  closeReportBox() {\r\n    this.DialogClosedResult(\"Error!\");\r\n  }\r\n\r\n  public DialogClosedResult(res) {\r\n    this._reportFilterService.PostDatedChequeObj.PostDatedCheque_DIV = (this._reportFilterService.PostDatedChequeObj.PostDatedCheque_DIV == null || this._reportFilterService.PostDatedChequeObj.PostDatedCheque_DIV == \"\") ? \"%\" : this._reportFilterService.PostDatedChequeObj.PostDatedCheque_DIV;\r\n\r\n    let multipleReportFormateName = '';\r\n    if (this._reportFilterService.PostDatedChequeObj.PostDatedCheque_DETAILSREPORT == 1) {\r\n      multipleReportFormateName = 'Post Dated Cheque Voucher Report_1';\r\n    } else {\r\n      multipleReportFormateName = 'Post Dated Cheque Voucher Report';\r\n    }\r\n\r\n    if (this._reportFilterService.PostDatedChequeObj.PostDatedCheque_DIV && this._reportFilterService.PostDatedChequeObj.PostDatedCheque_DIV == '%') {\r\n      this._reportFilterService.PostDatedChequeObj.PostDatedCheque_DIVISIONNAME = 'All';\r\n    } else if (this._reportFilterService.PostDatedChequeObj.PostDatedCheque_DIV && this._reportFilterService.PostDatedChequeObj.PostDatedCheque_DIV != '%') {\r\n      let abc = this.division.filter(x => x.INITIAL == this._reportFilterService.PostDatedChequeObj.PostDatedCheque_DIV);\r\n      if (abc && abc.length > 0 && abc[0]) {\r\n        this._reportFilterService.PostDatedChequeObj.PostDatedCheque_DIVISIONNAME = abc[0].NAME;\r\n      } else {\r\n        this._reportFilterService.PostDatedChequeObj.PostDatedCheque_DIVISIONNAME = '';\r\n      }\r\n    } else {\r\n      this._reportFilterService.PostDatedChequeObj.PostDatedCheque_DIVISIONNAME = '';\r\n    }\r\n\r\n    if (this._reportFilterService.PostDatedChequeObj.PostDatedCheque_CostCenter && this._reportFilterService.PostDatedChequeObj.PostDatedCheque_CostCenter == '%') {\r\n      this._reportFilterService.PostDatedChequeObj.PostDatedCheque_COSTCENTERDISPLAYNAME = '';\r\n    }\r\n    else if (this._reportFilterService.PostDatedChequeObj.PostDatedCheque_CostCenter != '%') {\r\n      let abc = this.CostcenterList.filter(x => x.CCID == this._reportFilterService.PostDatedChequeObj.PostDatedCheque_CostCenter);\r\n      if (abc && abc.length > 0 && abc[0]) {\r\n        this._reportFilterService.PostDatedChequeObj.PostDatedCheque_COSTCENTERDISPLAYNAME = abc[0].COSTCENTERNAME;\r\n      } else {\r\n        this._reportFilterService.PostDatedChequeObj.PostDatedCheque_COSTCENTERDISPLAYNAME = '';\r\n      }\r\n    } else {\r\n      this._reportFilterService.PostDatedChequeObj.PostDatedCheque_COSTCENTERDISPLAYNAME = '';\r\n    }\r\n\r\n    if(this._reportFilterService.PostDatedChequeObj.PostDatedCheque_PARTYNAME==\"\"){\r\n      this._reportFilterService.PostDatedChequeObj.PostDatedCheque_PARTYID='%';\r\n    }\r\n\r\n    if(this._reportFilterService.PostDatedChequeObj.PostDatedCheque_BANKNAME==\"\"){\r\n      this._reportFilterService.PostDatedChequeObj.PostDatedCheque_BANKID='%';\r\n    }\r\n\r\n    if (res == \"ok\") {\r\n      this._reportFilterService.PostDatedChequeObj.assignPrevioiusDate = true;\r\n      let routepaths = this.arouter.url.split('/');\r\n      let activeurlpath2;\r\n      if (routepaths && routepaths.length) {\r\n        activeurlpath2 = routepaths[routepaths.length - 1]\r\n      }\r\n\r\n      if (this._reportFilterService.loadedTimesD == 0) {\r\n        this._reportFilterService.previouslyLoadedReportList.push(\r\n          {\r\n            reportname: 'Post Dated Cheque Report',\r\n            activeurlpath: this.arouter.url,\r\n            instanceWiseRepName: this.instanceWiseRepName + this._reportFilterService.loadedTimesD,\r\n            activerurlpath2: activeurlpath2,\r\n          });\r\n      } else {\r\n        this._reportFilterService.previouslyLoadedReportList.push(\r\n          {\r\n            reportname: 'Post Dated Cheque Report' + '_' + this._reportFilterService.loadedTimesD,\r\n            activeurlpath: this.arouter.url,\r\n            instanceWiseRepName: this.instanceWiseRepName + this._reportFilterService.loadedTimesD,\r\n            activerurlpath2: activeurlpath2,\r\n          });\r\n      }\r\n\r\n    }\r\n\r\n    this.reportdataEmit.emit({\r\n      status: res, data: {\r\n        REPORTDISPLAYNAME: 'Post Dated Cheque Voucher Report',\r\n        reportname: multipleReportFormateName, instanceWiseRepName: this.instanceWiseRepName + this._reportFilterService.loadedTimesD, reportparam: {\r\n          DATE1: this._reportFilterService.PostDatedChequeObj.PostDatedCheque_DATE1,\r\n          DATE2: this._reportFilterService.PostDatedChequeObj.PostDatedCheque_DATE2,\r\n          BSDATE1: this._reportFilterService.PostDatedChequeObj.PostDatedCheque_BSDATE1,\r\n          BSDATE2: this._reportFilterService.PostDatedChequeObj.PostDatedCheque_BSDATE2,\r\n          DIV: this._reportFilterService.PostDatedChequeObj.PostDatedCheque_DIV,\r\n          PHISCALID: this.masterService.PhiscalObj.PhiscalID,\r\n          COMID: this.masterService.userProfile.CompanyInfo.COMPANYID,\r\n          CCENTER: this._reportFilterService.PostDatedChequeObj.PostDatedCheque_CostCenter ? this._reportFilterService.PostDatedChequeObj.PostDatedCheque_CostCenter : '%',\r\n          TRANTYPE: this._reportFilterService.PostDatedChequeObj.PostDatedCheque_TRANTYPE,\r\n          DETAILSREPORT: this._reportFilterService.PostDatedChequeObj.PostDatedCheque_DETAILSREPORT,\r\n          TRANSACTIONMODE: this._reportFilterService.PostDatedChequeObj.PostDatedCheque_TRANSACTIONMODE,\r\n          CHEQUEDATEWISEREPORT: this._reportFilterService.PostDatedChequeObj.PostDatedCheque_CHEQUEDATEWISEREPORT,\r\n          COSTCENTER: this._reportFilterService.PostDatedChequeObj.PostDatedCheque_CostCenter,\r\n          DIVISIONNAME: this._reportFilterService.PostDatedChequeObj.PostDatedCheque_DIVISIONNAME ? this._reportFilterService.PostDatedChequeObj.PostDatedCheque_DIVISIONNAME : '',\r\n          COSTCENTERDISPLAYNAME: this._reportFilterService.PostDatedChequeObj.PostDatedCheque_COSTCENTERDISPLAYNAME ? this._reportFilterService.PostDatedChequeObj.PostDatedCheque_COSTCENTERDISPLAYNAME : '',\r\n          BANK_ACID:this._reportFilterService.PostDatedChequeObj.PostDatedCheque_BANKID ? this._reportFilterService.PostDatedChequeObj.PostDatedCheque_BANKID : '%',\r\n          ACID: this._reportFilterService.PostDatedChequeObj.PostDatedCheque_PARTYID ? this._reportFilterService.PostDatedChequeObj.PostDatedCheque_PARTYID :'%',\r\n          PARTYDISPLAYNAME: this._reportFilterService.PostDatedChequeObj.PostDatedCheque_PARTYNAME ?  this._reportFilterService.PostDatedChequeObj.PostDatedCheque_PARTYNAME :'',\r\n          BANKDISPLAYNAME:this._reportFilterService.PostDatedChequeObj.PostDatedCheque_BANKNAME ? this._reportFilterService.PostDatedChequeObj.PostDatedCheque_BANKNAME:'',\r\n        }\r\n      }\r\n    });\r\n\r\n    if (res == \"ok\") {\r\n      this._reportFilterService.loadedTimesD = this._reportFilterService.loadedTimesD + 1;\r\n    }\r\n  }\r\n\r\n  ChangeDate() {\r\n    if (this._reportFilterService.PostDatedChequeObj.PostDatedCheque_CHEQUEDATEWISEREPORT == 0) {\r\n      this._reportFilterService.PostDatedChequeObj.PostDatedCheque_DATE1 = this.masterService.PhiscalObj.BeginDate.split('T')[0];\r\n      if (this.userProfile.CompanyInfo.ActualFY == this.masterService.PhiscalObj.PhiscalID) {\r\n        this._reportFilterService.PostDatedChequeObj.PostDatedCheque_DATE2 = new Date().toJSON().split('T')[0];\r\n      }\r\n      else {\r\n        this._reportFilterService.PostDatedChequeObj.PostDatedCheque_DATE2 = this.masterService.PhiscalObj.EndDate.split('T')[0];\r\n      }\r\n    } else if (this._reportFilterService.PostDatedChequeObj.PostDatedCheque_CHEQUEDATEWISEREPORT == 1) {\r\n      this._reportFilterService.PostDatedChequeObj.PostDatedCheque_DATE1 = new Date().toJSON().split('T')[0];;\r\n      this._reportFilterService.PostDatedChequeObj.PostDatedCheque_DATE2 = new Date().toJSON().split('T')[0];;\r\n    }\r\n\r\n    this.changeEntryDate(this._reportFilterService.PostDatedChequeObj.PostDatedCheque_DATE1, \"AD\");\r\n    this.changeEndDate(this._reportFilterService.PostDatedChequeObj.PostDatedCheque_DATE2, \"AD\");\r\n\r\n  }\r\n\r\n  PartyEnterCommand() {\r\n    this.gridPopupSettingsForPartyLedgerList = this.masterService.getGenericGridPopUpSettings('PartyLedgerList');\r\n    this.genericGridPartyLedger.show();\r\n}\r\n\r\n\r\n  onPartySelect(event) {\r\n    this._reportFilterService.PostDatedChequeObj.PostDatedCheque_PARTYID = event.ACID;\r\n    this._reportFilterService.PostDatedChequeObj.PostDatedCheque_PARTYNAME = event.ACNAME;\r\n\r\n}\r\n  BankEntercommand(){\r\n    var TRNMODE = `${this._transactionService.TrnMainObj.TRNMODE}`;\r\n    TRNMODE = \"Bank Deposit Voucher\";\r\n    this.gridACListPartyPopupSettings = {\r\n      title: \"Accounts\",\r\n      apiEndpoints: `/getAccountPagedListByMapId/Default/${TRNMODE}/`,\r\n      defaultFilterIndex: 1,\r\n      columns: [\r\n        {\r\n          key: \"ACCODE\",\r\n          title: \"AC CODE\",\r\n          hidden: false,\r\n          noSearch: false\r\n        },\r\n        {\r\n          key: \"ACNAME\",\r\n          title: \"A/C NAME\",\r\n          hidden: false,\r\n          noSearch: false\r\n        }\r\n      ]\r\n    };\r\n    this.genericGridACListParty.show();\r\n  }\r\n\r\n  onBankNameSelect(event){\r\n    this._reportFilterService.PostDatedChequeObj.PostDatedCheque_BANKID = event.ACID;\r\n    this._reportFilterService.PostDatedChequeObj.PostDatedCheque_BANKNAME = event.ACNAME;\r\n  }\r\n\r\nmax1(){\r\n  let  max:string\r\n  if(this._reportFilterService.PostDatedChequeObj.PostDatedCheque_CHEQUEDATEWISEREPORT == 0){\r\n    max=this.masterService.date1\r\n  }\r\nelse{\r\n  max=\"\"\r\n}\r\nreturn max;\r\n\r\n}\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/pages/ReportDialogs/PostDatedChequeVoucherReport/post-dated-chequereport.component.ts","import { Component, Inject, Output, EventEmitter, OnInit } from '@angular/core';\r\nimport { MdDialogRef, MD_DIALOG_DATA } from '@angular/material';\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { MasterRepo } from '../../../common/repositories';\r\nimport { Division } from '../../../common/interfaces';\r\nimport { AuthService } from '../../../common/services/permission/authService.service';\r\nimport { ReportMainService } from '../../Reports/components/ReportMain/ReportMain.service';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { AlertService } from '../../../common/services/alert/alert.service';\r\n\r\nexport interface DialogInfo {\r\n    header: string;\r\n    message: Observable<string>;\r\n}\r\n\r\n@Component({\r\n    selector: 'profitloss-report',\r\n    template: require('./profit-loss-report.component.html'),\r\n    styles: [require('../../Reports/reportStyle.css'), require('../../modal-style.css')],\r\n})\r\n\r\nexport class ProfitLossReport implements OnInit {\r\n    division: any[] = [];\r\n    userProfile: any;\r\n    date1: any;\r\n    date2: any;\r\n    instanceWiseRepName: string = 'Profit Loss Report';\r\n    userSetting: any;\r\n    CostcenterList: any[] = [];\r\n\r\n    @Output() reportdataEmit = new EventEmitter();\r\n    constructor(private masterService: MasterRepo, private _authService: AuthService,\r\n        private _reportFilterService: ReportMainService, private arouter: Router, private alertService: AlertService,\r\n        public dialogref: MdDialogRef<ProfitLossReport>, public _ActivatedRoute: ActivatedRoute,\r\n        @Inject(MD_DIALOG_DATA) public data: DialogInfo) {\r\n        this.userProfile = this._authService.getUserProfile();\r\n        this.userSetting = _authService.getSetting();\r\n        this.division = [];\r\n        if (this.masterService.userSetting.userwisedivision == 1) {\r\n            this.masterService.getDivisionFromRightPrivelege().subscribe(res => {\r\n                if (res.status == 'ok') {\r\n                    this.division = res.result;\r\n                }\r\n            })\r\n        }\r\n        else {\r\n            this.masterService.getAllDivisions()\r\n                .subscribe(res => {\r\n                    this.division.push(<Division>res);\r\n                }, error => {\r\n                    this.masterService.resolveError(error, \"divisions - getDivisions\");\r\n                });\r\n        }\r\n\r\n        this.masterService.getCostcenter().subscribe(res => {\r\n            this.CostcenterList = res;\r\n        })\r\n\r\n        // this.masterService.getAccDivList();\r\n\r\n    }\r\n\r\n    ngOnInit() {\r\n        this._ActivatedRoute.queryParams.subscribe(params => {\r\n            if (this._reportFilterService.ProfitLossObj.assignPrevioiusDate != true) {\r\n                this.masterService.getAccDivList();\r\n                this._reportFilterService.ProfitLossObj.ProfitLoss_DATE1 = this.masterService.PhiscalObj.BeginDate.split('T')[0];\r\n                if (this.userProfile.CompanyInfo.ActualFY == this.masterService.PhiscalObj.PhiscalID) {\r\n                    this._reportFilterService.ProfitLossObj.ProfitLoss_DATE2 = new Date().toJSON().split('T')[0]; \r\n                  }\r\n                  else {\r\n                    this._reportFilterService.ProfitLossObj.ProfitLoss_DATE2 = this.masterService.PhiscalObj.EndDate.split('T')[0];\r\n                }\r\n                this.masterService.viewDivision.subscribe(() => {\r\n                    if(this.masterService.userSetting.userwisedivision==0 ||  this.masterService.showAll == true){ //ALL OPTION SELECTION IN DIVISION IN REPORT DIALOG BOX\r\n                      this._reportFilterService.ProfitLossObj.ProfitLoss_DIV='%';\r\n                  }else{\r\n                    if(this.masterService.userSetting.userwisedivision==1 && this.division.length ==1){\r\n                        this._reportFilterService.ProfitLossObj.ProfitLoss_DIV=this.division[0].INITIAL;\r\n                      }else{\r\n                        this._reportFilterService.ProfitLossObj.ProfitLoss_DIV=this.masterService.userProfile.CompanyInfo.INITIAL;\r\n                    }\r\n                  }\r\n                  })\r\n                this._reportFilterService.ProfitLossObj.ProfitLoss_VERTICALFORMAT = '1';\r\n                // this._reportFilterService.ProfitLossObj.ProfitLoss_OSTOCK = 0;\r\n                // this._reportFilterService.ProfitLossObj.ProfitLoss_CSTOCK = 0;\r\n                this._reportFilterService.ProfitLossObj.ProfitLoss_SHOWSUBLEDGER = 0;\r\n                this._reportFilterService.ProfitLossObj.ProfitLoss_CostCenter = '%';\r\n                if (this.userSetting.IS_NESTLE == 1) {\r\n                    this._reportFilterService.ProfitLossObj.ProfitLoss_COMPANYTYPE = 'DMS';\r\n                } else {\r\n                    this._reportFilterService.ProfitLossObj.ProfitLoss_COMPANYTYPE = 'NONDMS';\r\n                }\r\n            }\r\n\r\n            if (params.instancename) {\r\n                // ////console.log(\"@@[plreport0]\",params.instancename,this._reportFilterService.reportDataStore[params.instancename].param.reportparam)\r\n                this._reportFilterService.ProfitLossObj.ProfitLoss_DATE1 = this._reportFilterService.reportDataStore[params.instancename].param.reportparam.DATE1;\r\n                this._reportFilterService.ProfitLossObj.ProfitLoss_DATE2 = this._reportFilterService.reportDataStore[params.instancename].param.reportparam.DATE2;\r\n                this._reportFilterService.ProfitLossObj.ProfitLoss_DIV = this._reportFilterService.reportDataStore[params.instancename].param.reportparam.DIV;\r\n                this._reportFilterService.ProfitLossObj.ProfitLoss_SHOWSUBLEDGER = this._reportFilterService.reportDataStore[params.instancename].param.reportparam.SHOWSUBLEDGER;\r\n                this._reportFilterService.ProfitLossObj.ProfitLoss_VERTICALFORMAT = this._reportFilterService.reportDataStore[params.instancename].param.reportparam.VERTICALFORMAT;\r\n                this._reportFilterService.ProfitLossObj.ProfitLoss_OSTOCK = this._reportFilterService.reportDataStore[params.instancename].param.reportparam.OSTOCK;\r\n                this._reportFilterService.ProfitLossObj.ProfitLoss_CSTOCK = this._reportFilterService.reportDataStore[params.instancename].param.reportparam.CSTOCK;\r\n                if (this.userSetting.IS_NESTLE == 1) {\r\n                    this._reportFilterService.ProfitLossObj.ProfitLoss_COMPANYTYPE = 'DMS';\r\n                } else {\r\n                    this._reportFilterService.ProfitLossObj.ProfitLoss_COMPANYTYPE = 'NONDMS';\r\n                }\r\n                this._reportFilterService.ProfitLossObj.ProfitLoss_CostCenter=this._reportFilterService.reportDataStore[params.instancename].param.reportparam.COSTCENTER;\r\n            }\r\n        })\r\n\r\n        // this.calcStock();\r\n        this.changeEntryDate(this._reportFilterService.ProfitLossObj.ProfitLoss_DATE1, \"AD\");\r\n        this.changeEndDate(this._reportFilterService.ProfitLossObj.ProfitLoss_DATE2, \"AD\");\r\n\r\n    }\r\n\r\n    changeEntryDate(value, format: string) {\r\n        var adbs = require(\"ad-bs-converter\");\r\n        if (format == \"AD\") {\r\n            var adDate = (value.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n            var bsDate = adbs.ad2bs(adDate);\r\n            this._reportFilterService.ProfitLossObj.ProfitLoss_BSDATE1 = this.masterService.toBSDate(value);\r\n        }\r\n        else if (format == \"BS\") {\r\n            var datearr = value.split('/');\r\n            const bsDate = datearr[2] + \"/\" + datearr[1] + \"/\" + datearr[0]\r\n            var adDate = adbs.bs2ad(bsDate);\r\n            var Engdate = this.masterService.toADDate(value);\r\n            const Validatedata = this.masterService.ValidateNepaliDate(Engdate)\r\n            if (Validatedata == true) {\r\n                const bsDate1 = datearr[2] + \"/\" + datearr[1] + \"/\" + datearr[0];\r\n                var adDate1 = adbs.bs2ad(bsDate1);\r\n                this._reportFilterService.ProfitLossObj.ProfitLoss_DATE1 = this.masterService.toADDate(value);\r\n            } else {\r\n                this.alertService.error(\"Cannot Change the date\");\r\n                return;\r\n            }\r\n        }\r\n    }\r\n\r\n    changeEndDate(value, format: string) {\r\n        var adbs = require(\"ad-bs-converter\");\r\n        if (format == \"AD\") {\r\n            var adDate = (value.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n            var bsDate = adbs.ad2bs(adDate);\r\n            this._reportFilterService.ProfitLossObj.ProfitLoss_BSDATE2 = this.masterService.toBSDate(value);\r\n        }\r\n        else if (format == \"BS\") {\r\n            var datearr = value.split('/');\r\n            const bsDate = datearr[2] + \"/\" + datearr[1] + \"/\" + datearr[0]\r\n            var adDate = adbs.bs2ad(bsDate);\r\n            this._reportFilterService.ProfitLossObj.ProfitLoss_DATE2 = this.masterService.toADDate(value);\r\n        }\r\n    }\r\n\r\n    onload() {\r\n        this.DialogClosedResult(\"ok\");\r\n    }\r\n\r\n    closeReportBox() {\r\n        this.DialogClosedResult(\"Error!\");\r\n    }\r\n\r\n    public DialogClosedResult(res) {\r\n        //console.log(\"ProfitLoss_OSTOCK\",this._reportFilterService.ProfitLossObj.ProfitLoss_OSTOCK,this._reportFilterService.ProfitLossObj.ProfitLoss_CSTOCK)\r\n        // if (this._reportFilterService.ProfitLossObj.ProfitLoss_OSTOCK === '' || this._reportFilterService.ProfitLossObj.ProfitLoss_OSTOCK === null ||\r\n        //     this._reportFilterService.ProfitLossObj.ProfitLoss_OSTOCK === undefined || this._reportFilterService.ProfitLossObj.ProfitLoss_CSTOCK === '' || this._reportFilterService.ProfitLossObj.ProfitLoss_CSTOCK === null ||\r\n        //     this._reportFilterService.ProfitLossObj.ProfitLoss_CSTOCK === undefined) {\r\n        //     this.alertService.info(\"Please Calculate Stock!!\");\r\n        //     return;\r\n        // }\r\n\r\n        let multipleReportFormateName = 'Profit Loss Report';\r\n        if (this._reportFilterService.ProfitLossObj.ProfitLoss_VERTICALFORMAT == 1) {\r\n            multipleReportFormateName = 'Profit Loss Report';\r\n        } else if (this._reportFilterService.ProfitLossObj.ProfitLoss_VERTICALFORMAT == 0) {\r\n            multipleReportFormateName = 'PLACCOUNT';\r\n        }\r\n\r\n        if (this._reportFilterService.ProfitLossObj.ProfitLoss_DIV && this._reportFilterService.ProfitLossObj.ProfitLoss_DIV == '%') {\r\n            this._reportFilterService.ProfitLossObj.ProfitLoss_DIVISIONNAME = 'All';\r\n        } else if (this._reportFilterService.ProfitLossObj.ProfitLoss_DIV && this._reportFilterService.ProfitLossObj.ProfitLoss_DIV != '%') {\r\n            let abc = this.division.filter(x => x.INITIAL == this._reportFilterService.ProfitLossObj.ProfitLoss_DIV);\r\n            if (abc && abc.length > 0 && abc[0]) {\r\n                this._reportFilterService.ProfitLossObj.ProfitLoss_DIVISIONNAME = abc[0].NAME;\r\n            } else {\r\n                this._reportFilterService.ProfitLossObj.ProfitLoss_DIVISIONNAME = '';\r\n            }\r\n        } else {\r\n            this._reportFilterService.ProfitLossObj.ProfitLoss_DIVISIONNAME = '';\r\n        }\r\n\r\n        if (this._reportFilterService.ProfitLossObj.ProfitLoss_CostCenter && this._reportFilterService.ProfitLossObj.ProfitLoss_CostCenter == '%') {\r\n            this._reportFilterService.ProfitLossObj.ProfitLoss_COSTCENTERDISPLAYNAME = 'All';\r\n        } else if (this._reportFilterService.ProfitLossObj.ProfitLoss_CostCenter != '%') {\r\n            let abc = this.CostcenterList.filter(x => x.CCID == this._reportFilterService.ProfitLossObj.ProfitLoss_CostCenter);\r\n            if (abc && abc.length > 0 && abc[0]) {\r\n                this._reportFilterService.ProfitLossObj.ProfitLoss_COSTCENTERDISPLAYNAME = abc[0].COSTCENTERNAME;\r\n            } else {\r\n                this._reportFilterService.ProfitLossObj.ProfitLoss_COSTCENTERDISPLAYNAME = '';\r\n            }\r\n        } else {\r\n            this._reportFilterService.ProfitLossObj.ProfitLoss_COSTCENTERDISPLAYNAME = '';\r\n        }\r\n\r\n        if (res == \"ok\") {\r\n            this._reportFilterService.ProfitLossObj.assignPrevioiusDate = true;\r\n            let routepaths = this.arouter.url.split('/');\r\n            let activeurlpath2;\r\n            if (routepaths && routepaths.length) {\r\n                activeurlpath2 = routepaths[routepaths.length - 1]\r\n            }\r\n\r\n            if (this._reportFilterService.ProfitLoss_loadedTimes == 0) {\r\n                this._reportFilterService.previouslyLoadedReportList.push(\r\n                    {\r\n                        reportname: 'Profit Loss Report',\r\n                        activeurlpath: this.arouter.url,\r\n                        activerurlpath2: activeurlpath2,\r\n                        instanceWiseRepName: this.instanceWiseRepName + this._reportFilterService.ProfitLoss_loadedTimes,\r\n                    });\r\n            } else {\r\n                this._reportFilterService.previouslyLoadedReportList.push(\r\n                    {\r\n                        reportname: 'Profit Loss Report' + '_' + this._reportFilterService.ProfitLoss_loadedTimes,\r\n                        activeurlpath: this.arouter.url,\r\n                        activerurlpath2: activeurlpath2,\r\n                        instanceWiseRepName: this.instanceWiseRepName + this._reportFilterService.ProfitLoss_loadedTimes,\r\n                    });\r\n            }\r\n\r\n        }\r\n\r\n        this.reportdataEmit.emit({\r\n            status: res, data: {\r\n                REPORTDISPLAYNAME: 'Profit Loss Report',\r\n                reportname: multipleReportFormateName,\r\n                instanceWiseRepName: this.instanceWiseRepName + this._reportFilterService.ProfitLoss_loadedTimes,\r\n                reportparam: {\r\n                    DATE1: this._reportFilterService.ProfitLossObj.ProfitLoss_DATE1,\r\n                    DATE2: this._reportFilterService.ProfitLossObj.ProfitLoss_DATE2,\r\n                    BSDATE1: this._reportFilterService.ProfitLossObj.ProfitLoss_BSDATE1,\r\n                    BSDATE2: this._reportFilterService.ProfitLossObj.ProfitLoss_BSDATE2,\r\n                    DIV: this._reportFilterService.ProfitLossObj.ProfitLoss_DIV ? this._reportFilterService.ProfitLossObj.ProfitLoss_DIV : '%',\r\n                    PHISCALID: this.masterService.PhiscalObj.PhiscalID,\r\n                    CID: this.masterService.userProfile.CompanyInfo.COMPANYID,\r\n                    SHOWSUBLEDGER: this._reportFilterService.ProfitLossObj.ProfitLoss_SHOWSUBLEDGER?this._reportFilterService.ProfitLossObj.ProfitLoss_SHOWSUBLEDGER:0,\r\n                    COMPANYID: this.masterService.userProfile.CompanyInfo.COMPANYID,\r\n                    COMPANYTYPE: this._reportFilterService.ProfitLossObj.ProfitLoss_COMPANYTYPE ? this._reportFilterService.ProfitLossObj.ProfitLoss_COMPANYTYPE : 'NONDMS',\r\n                    OSTOCK: this._reportFilterService.ProfitLossObj.ProfitLoss_OSTOCK ?this._reportFilterService.ProfitLossObj.ProfitLoss_OSTOCK:0,\r\n                    CSTOCK: this._reportFilterService.ProfitLossObj.ProfitLoss_CSTOCK ?this._reportFilterService.ProfitLossObj.ProfitLoss_CSTOCK:0,\r\n                    SUMMARY: 0,\r\n                    LEV: 100,\r\n                    VERTICALFORMAT: this._reportFilterService.ProfitLossObj.ProfitLoss_VERTICALFORMAT ? this._reportFilterService.ProfitLossObj.ProfitLoss_VERTICALFORMAT : 1,\r\n                    DIVISIONNAME: this._reportFilterService.ProfitLossObj.ProfitLoss_DIVISIONNAME ? this._reportFilterService.ProfitLossObj.ProfitLoss_DIVISIONNAME : '',\r\n                    COSTCENTER: this._reportFilterService.ProfitLossObj.ProfitLoss_CostCenter ? this._reportFilterService.ProfitLossObj.ProfitLoss_CostCenter : '%',\r\n                    COSTCENTERDISPLAYNAME: this._reportFilterService.ProfitLossObj.ProfitLoss_COSTCENTERDISPLAYNAME ? this._reportFilterService.ProfitLossObj.ProfitLoss_COSTCENTERDISPLAYNAME : '',\r\n                }\r\n            }\r\n        });\r\n\r\n        if (res == \"ok\") {\r\n            this._reportFilterService.ProfitLoss_loadedTimes = this._reportFilterService.ProfitLoss_loadedTimes + 1;\r\n        }\r\n    }\r\n\r\n    calcStock() {\r\n        let reportparam: any = {};\r\n        reportparam.DATE1 = this._reportFilterService.ProfitLossObj.ProfitLoss_DATE1;\r\n        reportparam.DATE2 = this._reportFilterService.ProfitLossObj.ProfitLoss_DATE2;\r\n        reportparam.DIV = this._reportFilterService.ProfitLossObj.ProfitLoss_DIV;\r\n        reportparam.COMPANYTYPE = this._reportFilterService.ProfitLossObj.ProfitLoss_COMPANYTYPE;\r\n        reportparam.PHISCALID = this.masterService.PhiscalObj.PhiscalID;\r\n        \r\n        this._reportFilterService.ProfitLossObj.ProfitLoss_OSTOCK = 0;\r\n        this._reportFilterService.ProfitLossObj.ProfitLoss_CSTOCK = 0;\r\n        this._reportFilterService.stockCalculation(reportparam).subscribe((res) => {\r\n            this._reportFilterService.ProfitLossObj.ProfitLoss_OSTOCK = res.result;\r\n            this._reportFilterService.ProfitLossObj.ProfitLoss_CSTOCK = res.result2;\r\n        })\r\n    }\r\n\r\n    changeDivision() {\r\n        this._reportFilterService.ProfitLossObj.ProfitLoss_OSTOCK = 0;\r\n        this._reportFilterService.ProfitLossObj.ProfitLoss_CSTOCK = 0;\r\n    }\r\n\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/pages/ReportDialogs/ProfitLossReport/profit-loss-report.component.ts","import { NgaModule } from '../../../theme/nga.module';\r\nimport { Component, Inject, Output, EventEmitter } from '@angular/core';\r\nimport { MdDialogRef, MD_DIALOG_DATA } from '@angular/material';\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { MasterRepo } from '../../../common/repositories';\r\nimport { Division } from '../../../common/interfaces';\r\n\r\n\r\nexport interface DialogInfo {\r\n    header: string;\r\n    message: Observable<string>;\r\n\r\n}\r\n\r\n@Component({\r\n    selector: 'result-purchasebookreport-dialog',\r\n    //     template:`\r\n    //         <div class=\"modal-dialog modal-md\">\r\n    //         <div class=\"modal-content\">\r\n    //         <div class=\"modal-footer\">\r\n    //         <input type=\"text\" style=\"height:25px;width:100%\"   [(ngModel)]=\"ReportParameters.input1\"/>\r\n    //         <input type=\"text\" style=\"height:25px;width:100%\"  [(ngModel)]=\"ReportParameters.input2\"/>\r\n    //         <input type=\"text\" style=\"height:25px;width:100%\"   [(ngModel)]=\"ReportParameters.input3\"/>\r\n    //         <input type=\"text\" style=\"height:25px;width:100%\"   [(ngModel)]=\"ReportParameters.input1\"/>\r\n    //         <input type=\"text\" style=\"height:25px;width:100%\"  [(ngModel)]=\"ReportParameters.input2\"/>\r\n    //         <input type=\"text\" style=\"height:25px;width:100%\"   [(ngModel)]=\"ReportParameters.input3\"/>\r\n    //         <button class=\"btn btn-info confirm-btn\" type=\"button\"  (click)=onload()>RUN</button>\r\n    //         </div>\r\n    //         </div>\r\n    //         </div>\r\n    // `\r\n\r\n    template: require('./purchasebookreport.component.html'),\r\n    styles: [require('../../Reports/reportStyle.css'), require('../../modal-style.css')]\r\n\r\n})\r\nexport class PurchaseBookReport {\r\n    ReportParameters: any = <any>{};\r\n    division: any[] = [];\r\n    supplierList: any[] = [];\r\n\r\n\r\n    @Output() reportdataEmit = new EventEmitter();\r\n    constructor(private masterService: MasterRepo, public dialogref: MdDialogRef<PurchaseBookReport>, @Inject(MD_DIALOG_DATA) public data: DialogInfo) {\r\n\r\n        //------Default values on load\r\n        this.ReportParameters.DATE1 = new Date().toJSON().split('T')[0];\r\n        this.changestartDate(this.ReportParameters.DATE1, 'AD');\r\n        this.ReportParameters.DATE2 = new Date().toJSON().split('T')[0];\r\n        this.changeEndDate(this.ReportParameters.DATE2, 'AD')\r\n\r\n        this.ReportParameters.OPT_REPORT_TYPE = \"1\";\r\n        this.ReportParameters.OPT_SHOWDETAL_REPORT = \"0\";\r\n        this.ReportParameters.CHK_INCLUDE_RETURN = \"0\";\r\n        this.ReportParameters.VCHR = \"A\";\r\n        this.ReportParameters.OPT_INAD = \"0\";\r\n        this.ReportParameters.FX_VOUCHER_TYPE = \"SI\";\r\n        this.ReportParameters.DIVISION = \"%\";\r\n        this.ReportParameters.SUPPLIER_ACID = \"%\";\r\n        //----------------\r\n        this.division = [];\r\n        //let data: Array<IDivision> = [];\r\n        this.masterService.getAllDivisions()\r\n            .subscribe(res => {\r\n                //////console.log(\"div\" + res);\r\n                this.division.push(<Division>res);\r\n            }, error => {\r\n                this.masterService.resolveError(error, \"divisions - getDivisions\");\r\n            });\r\n\r\n        //let dataa: Array<TAcList> = [];\r\n        this.supplierList = [];\r\n        this.masterService.getSupplierList()\r\n            .subscribe(res => {\r\n\r\n                this.supplierList.push(res);\r\n\r\n                //res = JSON.stringify(res);\r\n                //////console.log(\"aayo\"+res);                \r\n            });\r\n    }\r\n    onload() {\r\n\r\n        this.DialogClosedResult(\"ok\");\r\n    }\r\n\r\n    closeReportBox() {\r\n        this.DialogClosedResult(\"Error!\");\r\n    }\r\n\r\n    public DialogClosedResult(res) {\r\n\r\n        this.ReportParameters.DIVISION = (this.ReportParameters.DIVISION == null || this.ReportParameters.DIVISION == \"\") ? \"%\" : this.ReportParameters.DIVISION;\r\n        this.ReportParameters.SUPPLIER_ACID = (this.ReportParameters.SUPPLIER_ACID == null || this.ReportParameters.SUPPLIER_ACID == \"\") ? \"%\" : this.ReportParameters.SUPPLIER_ACID;\r\n\r\n        //alert(\"supaC-\"+this.ReportParameters.SUPPLIER_ACID+\"~~~DIV\" + this.ReportParameters.DIVISION + \"```DT\" + this.ReportParameters.DATE1+ \"~~~DT\" + this.ReportParameters.DATE2+ \"~~~CHK\" + this.ReportParameters.CHK_INCLUDE_RETURN+ \"~~~TYPE\" + this.ReportParameters.OPT_REPORT_TYPE+ \"~~~SHOW\" + this.ReportParameters.OPT_SHOWDETAL_REPORT);\r\n        this.reportdataEmit.emit({ status: res, data: { reportname: 'Purchase Book Report', reportparam: this.ReportParameters } });\r\n\r\n    }\r\n\r\n\r\n    changestartDate(value, format: string) {\r\n        try {\r\n            var adbs = require(\"ad-bs-converter\");\r\n            if (format == \"AD\") {\r\n                var adDate = (value.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n                var bsDate = adbs.ad2bs(adDate);\r\n                this.ReportParameters.BSDATE1 = this.masterService.toBSDate(value);\r\n\r\n            }\r\n            else if (format == \"BS\") {\r\n                var bsDate = (value.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n                var adDate = adbs.bs2ad(bsDate);\r\n                this.ReportParameters.DATE1 = this.masterService.toADDate(value);\r\n            }\r\n        } catch (e) { }\r\n\r\n    }\r\n    changeEndDate(value, format: string) {\r\n        try {\r\n            var adbs = require(\"ad-bs-converter\");\r\n            if (format == \"AD\") {\r\n                var adDate = (value.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n                var bsDate = adbs.ad2bs(adDate);\r\n                this.ReportParameters.BSDATE2 = this.masterService.toBSDate(value);\r\n            }\r\n            else if (format == \"BS\") {\r\n                var bsDate = (value.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n                var adDate = adbs.bs2ad(bsDate);\r\n                this.ReportParameters.DATE2 = this.masterService.toADDate(value);\r\n\r\n            }\r\n        }\r\n        catch (e) { }\r\n\r\n    }\r\n\r\n    dateString: any = '';\r\n    date1: any = '';\r\n    daysPrior: any = '';\r\n    dateId: any = '';\r\n    finalDate: any = '';\r\n    changeDateByRange(value: any) {\r\n\r\n        if (value == \"1\") {\r\n            //alert(\"week selected!!\"); yy-mm-dd\r\n\r\n            this.dateId = 7;\r\n            this.dateString = \"\" + this.getCurrentDate() + \"\";\r\n            this.date1 = new Date(this.dateString);\r\n            this.daysPrior = parseInt(this.dateId);\r\n            this.date1.setDate(this.date1.getDate() - this.daysPrior);\r\n            this.finalDate = (this.date1.toISOString().slice(0, 11).replace('T', ' '));\r\n\r\n            //alert(this.finalDate);\r\n            this.ReportParameters.DATE1 = (this.finalDate).trim();\r\n            this.changestartDate(this.ReportParameters.DATE1, 'AD');\r\n\r\n        }\r\n        else if (value == \"2\") {\r\n            //     //alert(\"month selected!!\");\r\n            this.dateId = 30;\r\n            this.dateString = \"\" + this.getCurrentDate() + \"\";\r\n            this.date1 = new Date(this.dateString);\r\n            this.daysPrior = parseInt(this.dateId);\r\n            this.date1.setDate(this.date1.getDate() - this.daysPrior);\r\n            this.finalDate = (this.date1.toISOString().slice(0, 11).replace('T', ' '));\r\n\r\n            //alert(this.finalDate);\r\n            this.ReportParameters.DATE1 = (this.finalDate).trim();\r\n            this.changestartDate(this.ReportParameters.DATE1, 'AD');\r\n        }\r\n        else {\r\n            // alert(\"year selected\");\r\n            this.dateId = 365;\r\n            this.dateString = \"\" + this.getCurrentDate() + \"\";\r\n            this.date1 = new Date(this.dateString);\r\n            this.daysPrior = parseInt(this.dateId);\r\n            this.date1.setDate(this.date1.getDate() - this.daysPrior);\r\n            this.finalDate = (this.date1.toISOString().slice(0, 11).replace('T', ' '));\r\n\r\n            //alert(this.finalDate);\r\n            this.ReportParameters.DATE1 = (this.finalDate).trim();\r\n            this.changestartDate(this.ReportParameters.DATE1, 'AD');\r\n        }\r\n    }\r\n\r\n\r\n    dd: any;\r\n    mm: any;\r\n    yyyy: any;\r\n    today: any;\r\n    getCurrentDate() {\r\n        this.today = new Date();\r\n        this.dd = this.today.getDate();\r\n        this.mm = this.today.getMonth() + 1; //January is 0!\r\n\r\n        this.yyyy = this.today.getFullYear();\r\n        if (this.dd < 10) {\r\n            this.dd = '0' + this.dd;\r\n        }\r\n        if (this.mm < 10) {\r\n            this.mm = '0' + this.mm;\r\n        }\r\n        this.today = this.mm + '/' + this.dd + '/' + this.yyyy;\r\n\r\n        return this.today;\r\n    }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/pages/ReportDialogs/PurchaseBookReport/PurchaseBookReport.ts","import {NgaModule} from '../../../theme/nga.module';\r\nimport {Component, Inject, Output, EventEmitter} from '@angular/core';\r\nimport {MdDialogRef, MD_DIALOG_DATA} from '@angular/material';\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { MasterRepo } from '../../../common/repositories';\r\nimport { Division } from '../../masters/components/sales-terminal/sales-terminal.interface';\r\nimport { Subscriber } from 'rxjs';\r\nimport { Subscription } from 'rxjs/Subscription';\r\n\r\n\r\nexport interface DialogInfo{\r\n    header: string;\r\n    message: Observable<string>;\r\n}\r\n\r\n@Component({\r\n    selector:'result-salesbookreport-dialog',\r\n//     template:`\r\n//         <div class=\"modal-dialog modal-md\">\r\n//         <div class=\"modal-content\">\r\n//         <div class=\"modal-footer\">\r\n//         <input type=\"text\" style=\"height:25px;width:100%\"   [(ngModel)]=\"ReportParameters.input1\"/>\r\n//         <input type=\"text\" style=\"height:25px;width:100%\"  [(ngModel)]=\"ReportParameters.input2\"/>\r\n//         <input type=\"text\" style=\"height:25px;width:100%\"   [(ngModel)]=\"ReportParameters.input3\"/>\r\n//         <input type=\"text\" style=\"height:25px;width:100%\"   [(ngModel)]=\"ReportParameters.input1\"/>\r\n//         <input type=\"text\" style=\"height:25px;width:100%\"  [(ngModel)]=\"ReportParameters.input2\"/>\r\n//         <input type=\"text\" style=\"height:25px;width:100%\"   [(ngModel)]=\"ReportParameters.input3\"/>\r\n//         <button class=\"btn btn-info confirm-btn\" type=\"button\"  (click)=onload()>RUN</button>\r\n//         </div>\r\n//         </div>\r\n//         </div>\r\n// `\r\n\r\n  template:require('./salesbookreport.component.html'),\r\n  styles: [require('../../Reports/reportStyle.css'),require('../../modal-style.css')],\r\n})\r\nexport class SalesBookReport{\r\n ReportParameters:any=<any>{};\r\n division: any[]=[];   \r\n customeraclist : any[]=[];\r\n\r\n @Output() reportdataEmit = new EventEmitter();\r\n\r\n    constructor(private masterService:MasterRepo,public dialogref:MdDialogRef<SalesBookReport>, @Inject(MD_DIALOG_DATA) public data: DialogInfo){\r\n\r\n        //----------Default values on load\r\n        this.ReportParameters.DATE1 = new Date().toJSON().split('T')[0];\r\n        this.changestartDate(this.ReportParameters.DATE1,'AD');\r\n        this.ReportParameters.DATE2 = new Date().toJSON().split('T')[0];\r\n        this.changeEndDate(this.ReportParameters.DATE2,'AD');\r\n\r\n        this.ReportParameters.OPT_REPORT_TYPE = \"1\";\r\n        this.ReportParameters.OPT_SHOWDETAL_REPORT = \"0\";\r\n        this.ReportParameters.OPT_COUNTERSALES = \"0\";\r\n        this.ReportParameters.OPT_INAD = \"0\";\r\n        this.ReportParameters.DISRATE = \"0\";\r\n        this.ReportParameters.CHK_SALESMANWISESUMMARY = \"0\";\r\n        this.ReportParameters.OPT_DISCOUNTEDSALES = \"0\";\r\n        this.ReportParameters.CHK_INCLUDE_RETURN = \"0\";\r\n        this.ReportParameters.DIVISION = \"%\";\r\n        //-------------------------------\r\n\r\n\r\n        this.division=[];\r\n        this.masterService.getAllDivisions()\r\n          .subscribe(res => {\r\n            this.division.push(<Division>res);                \r\n          }, error => {\r\n            this.masterService.resolveError(error, \"divisions - getDivisions\");\r\n          });\r\n\r\n        // this.customeraclist = [];\r\n        // this.masterService.getCustomers()\r\n        // .subscribe(res => {\r\n        //     ////console.log(\"customer\" + JSON.stringify(res));\r\n        //     //this.customeraclist.push(res);\r\n        // },error => {\r\n        //     this.masterService.resolveError(error, \"customer - customerlist\");        \r\n        // });\r\n    }\r\n    onload()\r\n    {\r\n        this.DialogClosedResult(\"ok\");\r\n    }\r\n\r\n    closeReportBox(){\r\n        this.DialogClosedResult(\"Error!!\");\r\n    }\r\n   public DialogClosedResult(res) {\r\n\r\n    this.ReportParameters.DIVISION =  (this.ReportParameters.DIVISION == null || this.ReportParameters.DIVISION == \"\")?\"%\":this.ReportParameters.DIVISION;\r\n    this.ReportParameters.ACID =  (this.ACID == null || this.ACID == \"\")?\"%\":this.ACID;\r\n    this.ReportParameters.SALESMAN = \"%\";\r\n    this.ReportParameters.VCHR = \"A\";\r\n    this.ReportParameters.FX_VOUCHER_TYPE = \"SI\";\r\n\r\n    //alert(\"chksalesmanwise\"+this.ReportParameters.CHK_SALESMANWISESUMMARY+\"--salesman\"+this.ReportParameters.SALESMAN+\"--acid\"+this.ReportParameters.ACID+ \"--div\" +this.ReportParameters.DIVISION+ \"--disrate\" + this.ReportParameters.DISRATE + \"--rep type\" + this.ReportParameters.OPT_REPORT_TYPE + \"--show detail--\" + this.ReportParameters.OPT_SHOWDETAL_REPORT + \"--countersales--\" + this.ReportParameters.OPT_COUNTERSALES+ \"-inad--\" + this.ReportParameters.OPT_INAD +\"~\"+ this.ReportParameters.DATE1 +\"~\"+ this.ReportParameters.DATE2 );\r\n    \r\n    this.reportdataEmit.emit({ status: res, data: {reportname:'Sales Book Report', reportparam:this.ReportParameters}});\r\n      \r\n    }\r\n\r\n\r\n    //Autocomplete begins\r\n    dropListItem = (keyword: any): Observable<Array<any>> => {\r\n\r\n        return new Observable((observer: Subscriber<Array<any>>) => {\r\n            this.masterService.getCustomers().map(data=>{\r\n                return data.filter(ac => ac.ACNAME.toUpperCase().indexOf(keyword.toUpperCase()) > -1);\r\n            }\r\n            ).subscribe(res =>{observer.next(res);})\r\n        }).share();\r\n    }\r\n\r\n    ACCNAME : string = '';\r\n    ACCODE : string = '';\r\n    ACID: string = '';\r\n\r\n    accodeChanged(value :string){\r\n        var item = this.masterService.accountList.find(x => x.ACCODE == value);\r\n        //console.log({valueType: value,found : item ,items : this.masterService.accountList});\r\n        this.ACCNAME = '';\r\n        if (item){\r\n            value = item.ACNAME;\r\n            //console.log(value + \"****\");\r\n            this.ACCNAME = value;\r\n        }\r\n\r\n    }\r\n\r\n    itemChanged(value : any){\r\n        //console.log({itemChangedValue: value});\r\n        if (typeof(value) === \"object\"){\r\n            this.ACCNAME = value.ACNAME;\r\n            this.ACCODE = value.ACCODE;\r\n            this.ACID = value.ACID;\r\n        }\r\n    }\r\n\r\n    //end autocomplete\r\n\r\n    changestartDate(value, format: string) {\r\n        try{\r\n            var adbs = require(\"ad-bs-converter\");\r\n            if (format == \"AD\") {\r\n                var adDate = (value.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n                var bsDate = adbs.ad2bs(adDate);\r\n                this.ReportParameters.BSDATE1 =this.masterService.toBSDate(value);\r\n                \r\n            }\r\n            else if (format == \"BS\") {\r\n                var bsDate = (value.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n                var adDate = adbs.bs2ad(bsDate);  \r\n                this.ReportParameters.DATE1 = this.masterService.toADDate(value);          \r\n            }\r\n        }catch(e){}\r\n      \r\n    }\r\n    changeEndDate(value, format: string) {\r\n        try{\r\n            var adbs = require(\"ad-bs-converter\");\r\n            if (format == \"AD\") {\r\n                var adDate = (value.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n                var bsDate = adbs.ad2bs(adDate);         \r\n                this.ReportParameters.BSDATE2 = this.masterService.toBSDate(value);\r\n            }\r\n            else if (format == \"BS\") {\r\n                var bsDate = (value.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n                var adDate = adbs.bs2ad(bsDate);         \r\n                this.ReportParameters.DATE2 = this.masterService.toADDate(value);\r\n    \r\n            }\r\n        }\r\n          catch(e){}\r\n      \r\n    }\r\n\r\n    dateString: any = '';\r\n    date1: any = '';\r\n    daysPrior: any = '';\r\n    dateId: any = '';\r\n    finalDate: any= '';\r\n    changeDateByRange(value:any){\r\n\r\n        if (value == \"1\"){\r\n            //alert(\"week selected!!\"); yy-mm-dd\r\n            \r\n            this.dateId = 7;\r\n            this.dateString = \"\"+ this.getCurrentDate() +\"\";\r\n            this.date1 = new Date(this.dateString);\r\n            this.daysPrior = parseInt(this.dateId);\r\n            this.date1.setDate(this.date1.getDate() - this.daysPrior);\r\n            this.finalDate =  (this.date1.toISOString().slice(0, 11).replace('T', ' '));\r\n\r\n            //alert(this.finalDate);\r\n            this.ReportParameters.DATE1 = (this.finalDate).trim();\r\n            this.changestartDate(this.ReportParameters.DATE1,'AD');\r\n \r\n        }\r\n         else if (value == \"2\"){\r\n        //     //alert(\"month selected!!\");\r\n            this.dateId = 30;\r\n            this.dateString = \"\"+ this.getCurrentDate() +\"\";\r\n            this.date1 = new Date(this.dateString);\r\n            this.daysPrior = parseInt(this.dateId);\r\n            this.date1.setDate(this.date1.getDate() - this.daysPrior);\r\n            this.finalDate =  (this.date1.toISOString().slice(0, 11).replace('T', ' '));\r\n\r\n            //alert(this.finalDate);\r\n            this.ReportParameters.DATE1 = (this.finalDate).trim();\r\n            this.changestartDate(this.ReportParameters.DATE1,'AD');\r\n         }\r\n        else{\r\n        // alert(\"year selected\");\r\n        this.dateId = 365;\r\n        this.dateString = \"\"+ this.getCurrentDate() +\"\";\r\n        this.date1 = new Date(this.dateString);\r\n        this.daysPrior = parseInt(this.dateId);\r\n        this.date1.setDate(this.date1.getDate() - this.daysPrior);\r\n        this.finalDate =  (this.date1.toISOString().slice(0, 11).replace('T', ' '));\r\n\r\n        //alert(this.finalDate);\r\n        this.ReportParameters.DATE1 = (this.finalDate).trim();\r\n        this.changestartDate(this.ReportParameters.DATE1,'AD');\r\n         }\r\n    }\r\n\r\n\r\n    dd: any;\r\n    mm: any;\r\n    yyyy: any;\r\n    today: any;\r\n    getCurrentDate(){\r\n        this.today = new Date();\r\n        this.dd = this.today.getDate();\r\n        this.mm = this.today.getMonth() + 1; //January is 0!\r\n    \r\n        this.yyyy = this.today.getFullYear();\r\n        if (this.dd < 10) {\r\n            this.dd = '0' + this.dd;\r\n        }\r\n        if (this.mm < 10) {\r\n            this.mm = '0' + this.mm;\r\n        }\r\n        this.today = this.mm + '/' + this.dd + '/' + this.yyyy;\r\n               \r\n        return this.today;\r\n    }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/pages/ReportDialogs/SalesBookReport/salesbookreport.ts","import { Component, Inject, Output, EventEmitter, OnInit, ViewChild } from '@angular/core';\r\nimport { MdDialogRef, MD_DIALOG_DATA } from '@angular/material';\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { MasterRepo } from '../../../common/repositories';\r\nimport { Division } from '../../../common/interfaces';\r\nimport { ReportMainService } from '../../Reports/components/ReportMain/ReportMain.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { GenericPopUpComponent, GenericPopUpSettings } from '../../../common/popupLists/generic-grid/generic-popup-grid.component';\r\nimport { AlertService } from '../../../common/services/alert/alert.service';\r\n\r\n\r\nexport interface DialogInfo {\r\n    header: string;\r\n    message: Observable<string>;\r\n}\r\n@Component({\r\n    selector: 'sales-return-reportdetail',\r\n    template: require('./salesreturn-reportdetail.component.html'),\r\n    styles: [require('../../Reports/reportStyle.css'), require('../../modal-style.css')]\r\n})\r\n\r\nexport class SalesReturnReportDetail implements OnInit {\r\n    ReportParameters: any = <any>{};\r\n    multipleReportFormateName: string;\r\n    division: any[] = [];\r\n    CostcenterList: any[] = [];\r\n    instanceWiseRepName: string = 'Sales Return Report Detail';\r\n\r\n    @Output() reportdataEmit = new EventEmitter();\r\n    @ViewChild(\"genericGridProduct\") genericGridProduct: GenericPopUpComponent;\r\n    gridPopupSettingsForProduct: GenericPopUpSettings = new GenericPopUpSettings();\r\n    @ViewChild(\"genericGridBrand\") genericGridBrand: GenericPopUpComponent;\r\n    gridPopupSettingsForBrand: GenericPopUpSettings = new GenericPopUpSettings();\r\n    @ViewChild(\"genericGridRetailer\") genericGridRetailer: GenericPopUpComponent;\r\n    gridPopupSettingsForRetailer: GenericPopUpSettings = new GenericPopUpSettings();\r\n\r\n    constructor(private masterService: MasterRepo,\r\n        public dialogref: MdDialogRef<SalesReturnReportDetail>,\r\n        @Inject(MD_DIALOG_DATA) public data: DialogInfo, public _ActivatedRoute: ActivatedRoute, private alertService: AlertService,\r\n        private _reportFilterService: ReportMainService, private arouter: Router) {\r\n        //----------Default values on load\r\n        this.ReportParameters.COMID = this.masterService.userProfile.CompanyInfo.COMPANYID;\r\n\r\n        this.division = [];\r\n        if (this.masterService.userSetting.userwisedivision == 1) {\r\n            this.masterService.getDivisionFromRightPrivelege().subscribe(res => {\r\n                if (res.status == 'ok') {\r\n                    this.division = res.result;\r\n                }\r\n            })\r\n        }\r\n        else {\r\n            this.masterService.getAllDivisions()\r\n                .subscribe(res => {\r\n                    this.division.push(<Division>res);\r\n                }, error => {\r\n                    this.masterService.resolveError(error, \"divisions - getDivisions\");\r\n                });\r\n        }\r\n\r\n        // this.masterService.getAccDivList();\r\n    }\r\n\r\n    ngOnInit() {\r\n        this._ActivatedRoute.queryParams.subscribe(params => {\r\n            if (this._reportFilterService.SalesReturnReportDetailObj.assignPrevioiusDate != true) {\r\n                this.masterService.getAccDivList();\r\n                this._reportFilterService.SalesReturnReportDetailObj.SalesReturnReportDetail_DATE1 = this.masterService.PhiscalObj.BeginDate.split('T')[0];\r\n                this._reportFilterService.SalesReturnReportDetailObj.SalesReturnReportDetail_DATE2 = this.masterService.PhiscalObj.EndDate.split('T')[0];\r\n                this.changestartDate(this._reportFilterService.SalesReturnReportDetailObj.SalesReturnReportDetail_DATE1, \"AD\");\r\n                this.changeEndDate(this._reportFilterService.SalesReturnReportDetailObj.SalesReturnReportDetail_DATE2, \"AD\");\r\n                this.masterService.viewDivision.subscribe(() => {\r\n                    if(this.masterService.userSetting.userwisedivision==0 ||  this.masterService.showAll == true){ //ALL OPTION SELECTION IN DIVISION IN REPORT DIALOG BOX\r\n                      this._reportFilterService.SalesReturnReportDetailObj.SalesReturnReportDetail_DIV='%';\r\n                  }else{\r\n                      this._reportFilterService.SalesReturnReportDetailObj.SalesReturnReportDetail_DIV=this.masterService.userProfile.CompanyInfo.INITIAL;\r\n                  }\r\n                  })\r\n            }\r\n\r\n            if (params.instancename) {\r\n                // ////console.log(\"@@SalesReturnReportDetailObj\",params.instancename,this._reportFilterService.reportDataStore[params.instancename].param.reportparam)\r\n                this._reportFilterService.SalesReturnReportDetailObj.SalesReturnReportDetail_DATE1 = this._reportFilterService.reportDataStore[params.instancename].param.reportparam.DATE1;\r\n                this._reportFilterService.SalesReturnReportDetailObj.SalesReturnReportDetail_DATE2 = this._reportFilterService.reportDataStore[params.instancename].param.reportparam.DATE2;\r\n                this._reportFilterService.SalesReturnReportDetailObj.SalesReturnReportDetail_DIV = this._reportFilterService.reportDataStore[params.instancename].param.reportparam.DIV;\r\n            }\r\n        })\r\n\r\n\r\n        this.changestartDate(this._reportFilterService.SalesReturnReportDetailObj.SalesReturnReportDetail_DATE1, \"AD\");\r\n        this.changeEndDate(this._reportFilterService.SalesReturnReportDetailObj.SalesReturnReportDetail_DATE2, \"AD\")\r\n    }\r\n\r\n    onload() {\r\n        this.DialogClosedResult(\"ok\");\r\n    }\r\n\r\n    closeReportBox() {\r\n        this.DialogClosedResult(\"Error!\");\r\n    }\r\n\r\n    public DialogClosedResult(res) {\r\n\r\n        this._reportFilterService.SalesReturnReportDetailObj.SalesReturnReportDetail_DIV = (this._reportFilterService.SalesReturnReportDetailObj.SalesReturnReportDetail_DIV == null || this._reportFilterService.SalesReturnReportDetailObj.SalesReturnReportDetail_DIV == \"\") ? \"%\" : this._reportFilterService.SalesReturnReportDetailObj.SalesReturnReportDetail_DIV;\r\n        if(this._reportFilterService.SalesReturnReportDetailObj.SalesReturnReportDetail_RetailerName == ''){\r\n            this._reportFilterService.SalesReturnReportDetailObj.SalesReturnReportDetail_RetailerID='%';\r\n        }\r\n        if(this._reportFilterService.SalesReturnReportDetailObj.SalesReturnReportDetail_ProductName == ''){\r\n            this._reportFilterService.SalesReturnReportDetailObj.SalesReturnReportDetail_ProductID='%';\r\n        }\r\n        if(this._reportFilterService.SalesReturnReportDetailObj.SalesReturnReportDetail_BrandName == ''){\r\n            this._reportFilterService.SalesReturnReportDetailObj.SalesReturnReportDetail_BrandID='%';\r\n        }\r\n        this.multipleReportFormateName = 'Sales Return Report Detail_Account';\r\n\r\n        if (res == \"ok\") {\r\n            this._reportFilterService.SalesReturnReportDetailObj.assignPrevioiusDate = true;\r\n            let routepaths = this.arouter.url.split('/');\r\n            let activeurlpath2;\r\n            if (routepaths && routepaths.length) {\r\n                activeurlpath2 = routepaths[routepaths.length - 1]\r\n            }\r\n\r\n            if (this._reportFilterService.SalesReturnReportDetail_loadedTimes == 0) {\r\n                this._reportFilterService.previouslyLoadedReportList.push(\r\n                    {\r\n                        reportname: 'Sales Return Report Detail',\r\n                        activeurlpath: this.arouter.url,\r\n                        activerurlpath2: activeurlpath2,\r\n                        instanceWiseRepName: this.instanceWiseRepName + this._reportFilterService.SalesReturnReportDetail_loadedTimes,\r\n                    });\r\n            } else {\r\n                this._reportFilterService.previouslyLoadedReportList.push(\r\n                    {\r\n                        reportname: 'Sales Return Report Detail' + '_' + this._reportFilterService.SalesReturnReportDetail_loadedTimes,\r\n                        activeurlpath: this.arouter.url,\r\n                        activerurlpath2: activeurlpath2,\r\n                        instanceWiseRepName: this.instanceWiseRepName + this._reportFilterService.SalesReturnReportDetail_loadedTimes,\r\n                    });\r\n            }\r\n        }\r\n\r\n        this.reportdataEmit.emit({\r\n            status: res, data: {\r\n                reportname: this.multipleReportFormateName,\r\n                instanceWiseRepName: this.instanceWiseRepName + this._reportFilterService.SalesReturnReportDetail_loadedTimes,\r\n                reportparam: {\r\n                    DIVISION: this._reportFilterService.SalesReturnReportDetailObj.SalesReturnReportDetail_DIV,\r\n                    PHISCALID: this.masterService.PhiscalObj.PhiscalID,\r\n                    COMID: this.ReportParameters.COMID,\r\n                    DATE1: this._reportFilterService.SalesReturnReportDetailObj.SalesReturnReportDetail_DATE1,\r\n                    DATE2: this._reportFilterService.SalesReturnReportDetailObj.SalesReturnReportDetail_DATE2,\r\n                    PRODUCTID: this._reportFilterService.SalesReturnReportDetailObj.SalesReturnReportDetail_ProductID?this._reportFilterService.SalesReturnReportDetailObj.SalesReturnReportDetail_ProductID:'%',\r\n                    BRAND: this._reportFilterService.SalesReturnReportDetailObj.SalesReturnReportDetail_BrandID?this._reportFilterService.SalesReturnReportDetailObj.SalesReturnReportDetail_BrandID:'%',\r\n                    RETAILER:this._reportFilterService.SalesReturnReportDetailObj.SalesReturnReportDetail_RetailerID?this._reportFilterService.SalesReturnReportDetailObj.SalesReturnReportDetail_RetailerID:'%'\r\n                }\r\n            }\r\n        });\r\n\r\n        if (res == \"ok\") {\r\n            this._reportFilterService.SalesReturnReportDetail_loadedTimes = this._reportFilterService.SalesReturnReportDetail_loadedTimes + 1;\r\n        }\r\n    }\r\n\r\n    changestartDate(value, format: string) {\r\n        var adbs = require(\"ad-bs-converter\");\r\n        if (format == \"AD\") {\r\n            var adDate = (value.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n            var bsDate = adbs.ad2bs(adDate);\r\n            this._reportFilterService.SalesReturnReportDetailObj.SalesReturnReportDetail_BSDATE1 = this.masterService.toBSDate(value);\r\n        }\r\n        else if (format == \"BS\") {\r\n            var datearr = value.split('/');\r\n            const bsDate = datearr[2] + \"/\" + datearr[1] + \"/\" + datearr[0];\r\n            // var bsDate = (value.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n            var adDate = adbs.bs2ad(bsDate);\r\n            var Engdate = this.masterService.toADDate(value);\r\n            const Validatedata = this.masterService.ValidateNepaliDate(Engdate)\r\n            if (Validatedata == true) {\r\n                const bsDate1 = datearr[2] + \"/\" + datearr[1] + \"/\" + datearr[0];\r\n                var adDate1 = adbs.bs2ad(bsDate1);\r\n                this._reportFilterService.SalesReturnReportDetailObj.SalesReturnReportDetail_DATE1 = this.masterService.toADDate(value);\r\n            } else {\r\n                this.alertService.error(\"Cannot Change the date\");\r\n                return;\r\n            }\r\n        }\r\n    }\r\n\r\n    changeEndDate(value, format: string) {\r\n        try {\r\n            var adbs = require(\"ad-bs-converter\");\r\n            if (format == \"AD\") {\r\n                var adDate = (value.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n                var bsDate = adbs.ad2bs(adDate);\r\n                this._reportFilterService.SalesReturnReportDetailObj.SalesReturnReportDetail_BSDATE2 = this.masterService.toBSDate(value);\r\n            }\r\n            else if (format == \"BS\") {\r\n                var datearr = value.split('/');\r\n                const bsDate = datearr[2] + \"/\" + datearr[1] + \"/\" + datearr[0];\r\n                // var bsDate = (value.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n                var adDate = adbs.bs2ad(bsDate);\r\n                var Engdate = this.masterService.toADDate(value);\r\n                const Validatedata = this.masterService.ValidateNepaliDate(Engdate)\r\n                if (Validatedata == true) {\r\n                    const bsDate1 = datearr[2] + \"/\" + datearr[1] + \"/\" + datearr[0];\r\n                    var adDate1 = adbs.bs2ad(bsDate1);\r\n                    this._reportFilterService.SalesReturnReportDetailObj.SalesReturnReportDetail_DATE2 = this.masterService.toADDate(value);\r\n                } else {\r\n                    this.alertService.error(\"Cannot Change the date\");\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n        catch (e) { }\r\n    }\r\n\r\n\r\n\r\n    ProductEnterClicked() {\r\n        this.gridPopupSettingsForProduct = this.masterService.getGenericGridPopUpSettings('ProductList');\r\n        this.genericGridProduct.show();\r\n    }\r\n\r\n    dblClickProductSelect(product) {\r\n      this._reportFilterService.SalesReturnReportDetailObj.SalesReturnReportDetail_ProductID = product.MCODE;\r\n      this._reportFilterService.SalesReturnReportDetailObj.SalesReturnReportDetail_ProductName = product.DESCA;\r\n    }\r\n\r\n    BrandEnterClicked() {\r\n        this.BrandList();\r\n        this.genericGridBrand.show();\r\n    }\r\n\r\n    BrandList() {\r\n        this.gridPopupSettingsForBrand = this.masterService.getGenericGridPopUpSettings('BrandList');\r\n    }\r\n\r\n    dblClickBrandSelect(product) {\r\n      this._reportFilterService.SalesReturnReportDetailObj.SalesReturnReportDetail_BrandID = product.BRANDCODE;\r\n        this._reportFilterService.SalesReturnReportDetailObj.SalesReturnReportDetail_BrandName = product.BRANDCODE;\r\n    }\r\n\r\n    RetailerEnterClicked() {\r\n        this.RetailerList();\r\n        this.genericGridRetailer.show();\r\n    }\r\n\r\n    RetailerList() {\r\n        this.gridPopupSettingsForRetailer = this.masterService.getGenericGridPopUpSettings('RetailerList');\r\n    }\r\n\r\n    dblClickRetailerSelect(retailer) {\r\n        this._reportFilterService.SalesReturnReportDetailObj.SalesReturnReportDetail_RetailerName = retailer.ACNAME;\r\n        this._reportFilterService.SalesReturnReportDetailObj.SalesReturnReportDetail_RetailerID= retailer.customerID;\r\n    }\r\n\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/pages/ReportDialogs/SalesReturnReportDetail/salesreturn-reportdetail.component.ts","import { Component, Inject, Output, EventEmitter, OnInit, ViewChild } from '@angular/core';\r\nimport { MdDialogRef, MD_DIALOG_DATA } from '@angular/material';\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { MasterRepo } from '../../../common/repositories';\r\nimport { Division } from '../../../common/interfaces';\r\nimport { ReportMainService } from '../../Reports/components/ReportMain/ReportMain.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { GenericPopUpComponent, GenericPopUpSettings } from '../../../common/popupLists/generic-grid/generic-popup-grid.component';\r\nimport { AlertService } from '../../../common/services/alert/alert.service';\r\n\r\n\r\nexport interface DialogInfo {\r\n    header: string;\r\n    message: Observable<string>;\r\n}\r\n@Component({\r\n    selector: 'salesreturn-summary-report',\r\n    template: require('./salesreturn-summary-report.component.html'),\r\n    styles: [require('../../Reports/reportStyle.css'), require('../../modal-style.css')]\r\n})\r\n\r\nexport class SalesReturnSummaryReport implements OnInit {\r\n    ReportParameters: any = <any>{};\r\n    multipleReportFormateName: string;\r\n    division: any[] = [];\r\n    CostcenterList: any[] = [];\r\n    instanceWiseRepName: string = 'Sales Return Summary Report';\r\n\r\n    @Output() reportdataEmit = new EventEmitter();\r\n    constructor(private masterService: MasterRepo,\r\n        public dialogref: MdDialogRef<SalesReturnSummaryReport>,\r\n        @Inject(MD_DIALOG_DATA) public data: DialogInfo, public _ActivatedRoute: ActivatedRoute, private alertService: AlertService,\r\n        private _reportFilterService: ReportMainService, private arouter: Router) {\r\n        //----------Default values on load\r\n        this.ReportParameters.COMID = this.masterService.userProfile.CompanyInfo.COMPANYID;\r\n\r\n        this.division = [];\r\n        if (this.masterService.userSetting.userwisedivision == 1) {\r\n            this.masterService.getDivisionFromRightPrivelege().subscribe(res => {\r\n                if (res.status == 'ok') {\r\n                    this.division = res.result;\r\n                }\r\n            })\r\n        }\r\n        else {\r\n            this.masterService.getAllDivisions()\r\n                .subscribe(res => {\r\n                    this.division.push(<Division>res);\r\n                }, error => {\r\n                    this.masterService.resolveError(error, \"divisions - getDivisions\");\r\n                });\r\n        }\r\n\r\n        // this.masterService.getAccDivList();\r\n    }\r\n\r\n    ngOnInit() {\r\n        this._ActivatedRoute.queryParams.subscribe(params => {\r\n            if (this._reportFilterService.SalesReturnSummaryObj.assignPrevioiusDate != true) {\r\n                this.masterService.getAccDivList();\r\n                this._reportFilterService.SalesReturnSummaryObj.SalesReturnSummary_DATE1 = this.masterService.PhiscalObj.BeginDate.split('T')[0];\r\n                this._reportFilterService.SalesReturnSummaryObj.SalesReturnSummary_DATE2 = this.masterService.PhiscalObj.EndDate.split('T')[0];\r\n                this.changestartDate(this._reportFilterService.SalesReturnSummaryObj.SalesReturnSummary_DATE1, \"AD\");\r\n                this.changeEndDate(this._reportFilterService.SalesReturnSummaryObj.SalesReturnSummary_DATE2, \"AD\");\r\n                this.masterService.viewDivision.subscribe(() => {\r\n                    if(this.masterService.userSetting.userwisedivision==0 ||  this.masterService.showAll == true){ //ALL OPTION SELECTION IN DIVISION IN REPORT DIALOG BOX\r\n                      this._reportFilterService.SalesReturnSummaryObj.SalesReturnSummary_DIV='%';\r\n                  }else{\r\n                      this._reportFilterService.SalesReturnSummaryObj.SalesReturnSummary_DIV=this.masterService.userProfile.CompanyInfo.INITIAL;\r\n                  }\r\n                  })\r\n            }\r\n\r\n            if (params.instancename) {\r\n                // ////console.log(\"@@SalesReturnSummaryObj\",params.instancename,this._reportFilterService.reportDataStore[params.instancename].param.reportparam)\r\n                this._reportFilterService.SalesReturnSummaryObj.SalesReturnSummary_DATE1 = this._reportFilterService.reportDataStore[params.instancename].param.reportparam.DATE1;\r\n                this._reportFilterService.SalesReturnSummaryObj.SalesReturnSummary_DATE2 = this._reportFilterService.reportDataStore[params.instancename].param.reportparam.DATE2;\r\n                this._reportFilterService.SalesReturnSummaryObj.SalesReturnSummary_DIV = this._reportFilterService.reportDataStore[params.instancename].param.reportparam.DIV;\r\n            }\r\n        })\r\n\r\n\r\n        this.changestartDate(this._reportFilterService.SalesReturnSummaryObj.SalesReturnSummary_DATE1, \"AD\");\r\n        this.changeEndDate(this._reportFilterService.SalesReturnSummaryObj.SalesReturnSummary_DATE2, \"AD\")\r\n    }\r\n\r\n    onload() {\r\n        this.DialogClosedResult(\"ok\");\r\n    }\r\n\r\n    closeReportBox() {\r\n        this.DialogClosedResult(\"Error!\");\r\n    }\r\n\r\n    public DialogClosedResult(res) {\r\n        this._reportFilterService.SalesReturnSummaryObj.SalesReturnSummary_DIV = (this._reportFilterService.SalesReturnSummaryObj.SalesReturnSummary_DIV == null || this._reportFilterService.SalesReturnSummaryObj.SalesReturnSummary_DIV == \"\") ? \"%\" : this._reportFilterService.SalesReturnSummaryObj.SalesReturnSummary_DIV;\r\n\r\n\r\n        this.multipleReportFormateName = 'Sales Return Summary Report_Account';\r\n\r\n        if (res == \"ok\") {\r\n            this._reportFilterService.SalesReturnSummaryObj.assignPrevioiusDate = true;\r\n            let routepaths = this.arouter.url.split('/');\r\n            let activeurlpath2;\r\n            if (routepaths && routepaths.length) {\r\n                activeurlpath2 = routepaths[routepaths.length - 1]\r\n            }\r\n\r\n            if (this._reportFilterService.SalesReturnSummary_loadedTimes == 0) {\r\n                this._reportFilterService.previouslyLoadedReportList.push(\r\n                    {\r\n                        reportname: 'Sales Return Summary Report',\r\n                        activeurlpath: this.arouter.url,\r\n                        activerurlpath2: activeurlpath2,\r\n                        instanceWiseRepName: this.instanceWiseRepName + this._reportFilterService.SalesReturnSummary_loadedTimes,\r\n                    });\r\n            } else {\r\n                this._reportFilterService.previouslyLoadedReportList.push(\r\n                    {\r\n                        reportname: 'Sales Return Summary Report' + '_' + this._reportFilterService.SalesReturnSummary_loadedTimes,\r\n                        activeurlpath: this.arouter.url,\r\n                        activerurlpath2: activeurlpath2,\r\n                        instanceWiseRepName: this.instanceWiseRepName + this._reportFilterService.SalesReturnSummary_loadedTimes,\r\n                    });\r\n            }\r\n        }\r\n\r\n        this.reportdataEmit.emit({\r\n            status: res, data: {\r\n                reportname: this.multipleReportFormateName,\r\n                instanceWiseRepName: this.instanceWiseRepName + this._reportFilterService.SalesReturnSummary_loadedTimes,\r\n                reportparam: {\r\n                    DIVISION: this._reportFilterService.SalesReturnSummaryObj.SalesReturnSummary_DIV,\r\n                    PHISCALID: this.masterService.PhiscalObj.PhiscalID,\r\n                    COMID: this.ReportParameters.COMID,\r\n                    DATE1: this._reportFilterService.SalesReturnSummaryObj.SalesReturnSummary_DATE1,\r\n                    DATE2: this._reportFilterService.SalesReturnSummaryObj.SalesReturnSummary_DATE2,\r\n                    SDATE: this._reportFilterService.SalesReturnSummaryObj.SalesReturnSummary_DATE1,\r\n                    EDATE: this._reportFilterService.SalesReturnSummaryObj.SalesReturnSummary_DATE2,\r\n                }\r\n            }\r\n        });\r\n\r\n        if (res == \"ok\") {\r\n            this._reportFilterService.SalesReturnSummary_loadedTimes = this._reportFilterService.SalesReturnSummary_loadedTimes + 1;\r\n        }\r\n    }\r\n\r\n    changestartDate(value, format: string) {\r\n        var adbs = require(\"ad-bs-converter\");\r\n        if (format == \"AD\") {\r\n            var adDate = (value.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n            var bsDate = adbs.ad2bs(adDate);\r\n            this._reportFilterService.SalesReturnSummaryObj.SalesReturnSummary_BSDATE1 = this.masterService.toBSDate(value);\r\n        }\r\n        else if (format == \"BS\") {\r\n            var datearr = value.split('/');\r\n            const bsDate = datearr[2] + \"/\" + datearr[1] + \"/\" + datearr[0];\r\n            // var bsDate = (value.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n            var adDate = adbs.bs2ad(bsDate);\r\n            var Engdate = this.masterService.toADDate(value);\r\n            const Validatedata = this.masterService.ValidateNepaliDate(Engdate)\r\n            if (Validatedata == true) {\r\n                const bsDate1 = datearr[2] + \"/\" + datearr[1] + \"/\" + datearr[0];\r\n                var adDate1 = adbs.bs2ad(bsDate1);\r\n                this._reportFilterService.SalesReturnSummaryObj.SalesReturnSummary_DATE1 = this.masterService.toADDate(value);\r\n            } else {\r\n                this.alertService.error(\"Cannot Change the date\");\r\n                return;\r\n            }\r\n        }\r\n    }\r\n\r\n    changeEndDate(value, format: string) {\r\n        try {\r\n            var adbs = require(\"ad-bs-converter\");\r\n            if (format == \"AD\") {\r\n                var adDate = (value.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n                var bsDate = adbs.ad2bs(adDate);\r\n                this._reportFilterService.SalesReturnSummaryObj.SalesReturnSummary_BSDATE2 = this.masterService.toBSDate(value);\r\n            }\r\n            else if (format == \"BS\") {\r\n                var datearr = value.split('/');\r\n                const bsDate = datearr[2] + \"/\" + datearr[1] + \"/\" + datearr[0];\r\n                // var bsDate = (value.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n                var adDate = adbs.bs2ad(bsDate);\r\n                var Engdate = this.masterService.toADDate(value);\r\n                const Validatedata = this.masterService.ValidateNepaliDate(Engdate)\r\n                if (Validatedata == true) {\r\n                    const bsDate1 = datearr[2] + \"/\" + datearr[1] + \"/\" + datearr[0];\r\n                    var adDate1 = adbs.bs2ad(bsDate1);\r\n                    this._reportFilterService.SalesReturnSummaryObj.SalesReturnSummary_DATE2 = this.masterService.toADDate(value);\r\n                } else {\r\n                    this.alertService.error(\"Cannot Change the date\");\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n        catch (e) { }\r\n    }\r\n\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/pages/ReportDialogs/SalesReturnSummaryReport/salesreturn-summary-report.component.ts","import { Component, Inject, Output, EventEmitter, OnInit, ViewChild } from '@angular/core';\r\nimport { MdDialogRef, MD_DIALOG_DATA } from '@angular/material';\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { MasterRepo } from '../../../common/repositories';\r\nimport { Division } from '../../../common/interfaces';\r\nimport { ReportMainService } from '../../Reports/components/ReportMain/ReportMain.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { GenericPopUpComponent, GenericPopUpSettings } from '../../../common/popupLists/generic-grid/generic-popup-grid.component';\r\nimport { AlertService } from '../../../common/services/alert/alert.service';\r\n\r\n\r\nexport interface DialogInfo {\r\n    header: string;\r\n    message: Observable<string>;\r\n}\r\n@Component({\r\n    selector: 'salesreturnsummary-retailerreport',\r\n    template: require('./salesreturnsummary-retailerreport.component.html'),\r\n    styles: [require('../../Reports/reportStyle.css'), require('../../modal-style.css')]\r\n})\r\n\r\nexport class SalesReturnSummaryRetailerReport implements OnInit {\r\n    ReportParameters: any = <any>{};\r\n    multipleReportFormateName: string;\r\n    division: any[] = [];\r\n    CostcenterList: any[] = [];\r\n    instanceWiseRepName: string = 'Sales Return Summary Retailer Report';\r\n\r\n    @Output() reportdataEmit = new EventEmitter();\r\n    @ViewChild(\"genericGridSalesman\") genericGridSalesman: GenericPopUpComponent;\r\n    gridPopupSettingsForSalesman: GenericPopUpSettings = new GenericPopUpSettings();\r\n    @ViewChild(\"genericGridRetailer\") genericGridRetailer: GenericPopUpComponent;\r\n    gridPopupSettingsForRetailerListBySalesman: GenericPopUpSettings = new GenericPopUpSettings();\r\n\r\n    constructor(private masterService: MasterRepo,\r\n        public dialogref: MdDialogRef<SalesReturnSummaryRetailerReport>,\r\n        @Inject(MD_DIALOG_DATA) public data: DialogInfo, public _ActivatedRoute: ActivatedRoute, private alertService: AlertService,\r\n        private _reportFilterService: ReportMainService, private arouter: Router) {\r\n        //----------Default values on load\r\n        this.ReportParameters.COMID = this.masterService.userProfile.CompanyInfo.COMPANYID;\r\n\r\n        this.division = [];\r\n        if (this.masterService.userSetting.userwisedivision == 1) {\r\n            this.masterService.getDivisionFromRightPrivelege().subscribe(res => {\r\n                if (res.status == 'ok') {\r\n                    this.division = res.result;\r\n                }\r\n            })\r\n        }\r\n        else {\r\n            this.masterService.getAllDivisions()\r\n                .subscribe(res => {\r\n                    this.division.push(<Division>res);\r\n                }, error => {\r\n                    this.masterService.resolveError(error, \"divisions - getDivisions\");\r\n                });\r\n        }\r\n\r\n        // this.masterService.getAccDivList();\r\n    }\r\n\r\n    ngOnInit() {\r\n        this._ActivatedRoute.queryParams.subscribe(params => {\r\n            if (this._reportFilterService.SalesReturnSummaryRetailerObj.assignPrevioiusDate != true) {\r\n                this.masterService.getAccDivList();\r\n                this._reportFilterService.SalesReturnSummaryRetailerObj.SalesReturnSummaryRetailer_DATE1 = this.masterService.PhiscalObj.BeginDate.split('T')[0];\r\n                this._reportFilterService.SalesReturnSummaryRetailerObj.SalesReturnSummaryRetailer_DATE2 = this.masterService.PhiscalObj.EndDate.split('T')[0];\r\n                this.changestartDate(this._reportFilterService.SalesReturnSummaryRetailerObj.SalesReturnSummaryRetailer_DATE1, \"AD\");\r\n                this.changeEndDate(this._reportFilterService.SalesReturnSummaryRetailerObj.SalesReturnSummaryRetailer_DATE2, \"AD\");\r\n                this.masterService.viewDivision.subscribe(() => {\r\n                    if(this.masterService.userSetting.userwisedivision==0 ||  this.masterService.showAll == true){ //ALL OPTION SELECTION IN DIVISION IN REPORT DIALOG BOX\r\n                      this._reportFilterService.SalesReturnSummaryRetailerObj.SalesReturnSummaryRetailer_DIV='%';\r\n                  }else{\r\n                      this._reportFilterService.SalesReturnSummaryRetailerObj.SalesReturnSummaryRetailer_DIV=this.masterService.userProfile.CompanyInfo.INITIAL;\r\n                  }\r\n                  })\r\n            }\r\n\r\n            if (params.instancename) {\r\n                // ////console.log(\"@@SalesReturnSummaryRetailerObj\",params.instancename,this._reportFilterService.reportDataStore[params.instancename].param.reportparam)\r\n                this._reportFilterService.SalesReturnSummaryRetailerObj.SalesReturnSummaryRetailer_DATE1 = this._reportFilterService.reportDataStore[params.instancename].param.reportparam.DATE1;\r\n                this._reportFilterService.SalesReturnSummaryRetailerObj.SalesReturnSummaryRetailer_DATE2 = this._reportFilterService.reportDataStore[params.instancename].param.reportparam.DATE2;\r\n                this._reportFilterService.SalesReturnSummaryRetailerObj.SalesReturnSummaryRetailer_DIV = this._reportFilterService.reportDataStore[params.instancename].param.reportparam.DIV;\r\n            }\r\n        })\r\n\r\n\r\n        this.changestartDate(this._reportFilterService.SalesReturnSummaryRetailerObj.SalesReturnSummaryRetailer_DATE1, \"AD\");\r\n        this.changeEndDate(this._reportFilterService.SalesReturnSummaryRetailerObj.SalesReturnSummaryRetailer_DATE2, \"AD\")\r\n    }\r\n\r\n    onload() {\r\n        this.DialogClosedResult(\"ok\");\r\n    }\r\n\r\n    closeReportBox() {\r\n        this.DialogClosedResult(\"Error!\");\r\n    }\r\n\r\n    public DialogClosedResult(res) {\r\n\r\n        let multipleSelectedSalesman = [];\r\n        let SelectedSalesman = '';\r\n        if (this._reportFilterService.SalesReturnSummaryRetailerObj.SalesReturnSummaryRetailer_MultipleSalesman != null && this._reportFilterService.SalesReturnSummaryRetailerObj.SalesReturnSummaryRetailer_MultipleSalesman.length != 0) {\r\n            this._reportFilterService.SalesReturnSummaryRetailerObj.SalesReturnSummaryRetailer_MultipleSalesman.forEach(Salesman => {\r\n                multipleSelectedSalesman.push(Salesman.SalesmanID)\r\n                SelectedSalesman += `${multipleSelectedSalesman},`\r\n            });\r\n        } else {\r\n            SelectedSalesman = this._reportFilterService.SalesReturnSummaryRetailerObj.SalesReturnSummaryRetailer_SalesmanID\r\n        }\r\n\r\n        let multipleSelectedRetailer = [];\r\n        let SelectedRetailer = '';\r\n        if (this._reportFilterService.SalesReturnSummaryRetailerObj.SalesReturnSummaryRetailer_MultipleRetailer != null && this._reportFilterService.SalesReturnSummaryRetailerObj.SalesReturnSummaryRetailer_MultipleRetailer.length != 0) {\r\n            this._reportFilterService.SalesReturnSummaryRetailerObj.SalesReturnSummaryRetailer_MultipleRetailer.forEach(Retailer => {\r\n                multipleSelectedRetailer.push(Retailer.ACID)\r\n                SelectedRetailer += `${multipleSelectedRetailer},`\r\n            });\r\n        } else {\r\n            SelectedRetailer = this._reportFilterService.SalesReturnSummaryRetailerObj.SalesReturnSummaryRetailer_RetailerID\r\n        }\r\n\r\n        this._reportFilterService.SalesReturnSummaryRetailerObj.SalesReturnSummaryRetailer_DIV = (this._reportFilterService.SalesReturnSummaryRetailerObj.SalesReturnSummaryRetailer_DIV == null || this._reportFilterService.SalesReturnSummaryRetailerObj.SalesReturnSummaryRetailer_DIV == \"\") ? \"%\" : this._reportFilterService.SalesReturnSummaryRetailerObj.SalesReturnSummaryRetailer_DIV;\r\n        if(this._reportFilterService.SalesReturnSummaryRetailerObj.SalesReturnSummaryRetailer_RetailerName == ''){\r\n            this._reportFilterService.SalesReturnSummaryRetailerObj.SalesReturnSummaryRetailer_RetailerID='%';\r\n        }\r\n        if(this._reportFilterService.SalesReturnSummaryRetailerObj.SalesReturnSummaryRetailer_Salesman == ''){\r\n            this._reportFilterService.SalesReturnSummaryRetailerObj.SalesReturnSummaryRetailer_SalesmanID='%';\r\n        }\r\n        this.multipleReportFormateName = 'Sales Return Summary Retailer Report_Account';\r\n\r\n        if (res == \"ok\") {\r\n            this._reportFilterService.SalesReturnSummaryRetailerObj.assignPrevioiusDate = true;\r\n            let routepaths = this.arouter.url.split('/');\r\n            let activeurlpath2;\r\n            if (routepaths && routepaths.length) {\r\n                activeurlpath2 = routepaths[routepaths.length - 1]\r\n            }\r\n\r\n            if (this._reportFilterService.SalesReturnSummaryRetailer_loadedTimes == 0) {\r\n                this._reportFilterService.previouslyLoadedReportList.push(\r\n                    {\r\n                        reportname: 'Sales Return Summary Retailer Report',\r\n                        activeurlpath: this.arouter.url,\r\n                        activerurlpath2: activeurlpath2,\r\n                        instanceWiseRepName: this.instanceWiseRepName + this._reportFilterService.SalesReturnSummaryRetailer_loadedTimes,\r\n                    });\r\n            } else {\r\n                this._reportFilterService.previouslyLoadedReportList.push(\r\n                    {\r\n                        reportname: 'Sales Return Summary Retailer Report' + '_' + this._reportFilterService.SalesReturnSummaryRetailer_loadedTimes,\r\n                        activeurlpath: this.arouter.url,\r\n                        activerurlpath2: activeurlpath2,\r\n                        instanceWiseRepName: this.instanceWiseRepName + this._reportFilterService.SalesReturnSummaryRetailer_loadedTimes,\r\n                    });\r\n            }\r\n        }\r\n\r\n        this.reportdataEmit.emit({\r\n            status: res, data: {\r\n                reportname: this.multipleReportFormateName,\r\n                instanceWiseRepName: this.instanceWiseRepName + this._reportFilterService.SalesReturnSummaryRetailer_loadedTimes,\r\n                reportparam: {\r\n                    DIVISION: this._reportFilterService.SalesReturnSummaryRetailerObj.SalesReturnSummaryRetailer_DIV,\r\n                    DIV: this._reportFilterService.SalesReturnSummaryRetailerObj.SalesReturnSummaryRetailer_DIV,\r\n                    PHISCALID: this.masterService.PhiscalObj.PhiscalID,\r\n                    COMID: this.ReportParameters.COMID,\r\n                    DATE1: this._reportFilterService.SalesReturnSummaryRetailerObj.SalesReturnSummaryRetailer_DATE1,\r\n                    DATE2: this._reportFilterService.SalesReturnSummaryRetailerObj.SalesReturnSummaryRetailer_DATE2,\r\n                    SDATE: this._reportFilterService.SalesReturnSummaryRetailerObj.SalesReturnSummaryRetailer_DATE1,\r\n                    EDATE: this._reportFilterService.SalesReturnSummaryRetailerObj.SalesReturnSummaryRetailer_DATE2,\r\n                    SALESMANID: SelectedSalesman ? SelectedSalesman : '%',\r\n                    RETAILER: SelectedRetailer ? SelectedRetailer :'%',\r\n                }\r\n            }\r\n        });\r\n\r\n        if (res == \"ok\") {\r\n            this._reportFilterService.SalesReturnSummaryRetailer_loadedTimes = this._reportFilterService.SalesReturnSummaryRetailer_loadedTimes + 1;\r\n        }\r\n    }\r\n\r\n    changestartDate(value, format: string) {\r\n        var adbs = require(\"ad-bs-converter\");\r\n        if (format == \"AD\") {\r\n            var adDate = (value.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n            var bsDate = adbs.ad2bs(adDate);\r\n            this._reportFilterService.SalesReturnSummaryRetailerObj.SalesReturnSummaryRetailer_BSDATE1 = this.masterService.toBSDate(value);\r\n        }\r\n        else if (format == \"BS\") {\r\n            var datearr = value.split('/');\r\n            const bsDate = datearr[2] + \"/\" + datearr[1] + \"/\" + datearr[0];\r\n            // var bsDate = (value.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n            var adDate = adbs.bs2ad(bsDate);\r\n            var Engdate = this.masterService.toADDate(value);\r\n            const Validatedata = this.masterService.ValidateNepaliDate(Engdate)\r\n            if (Validatedata == true) {\r\n                const bsDate1 = datearr[2] + \"/\" + datearr[1] + \"/\" + datearr[0];\r\n                var adDate1 = adbs.bs2ad(bsDate1);\r\n                this._reportFilterService.SalesReturnSummaryRetailerObj.SalesReturnSummaryRetailer_DATE1 = this.masterService.toADDate(value);\r\n            } else {\r\n                this.alertService.error(\"Cannot Change the date\");\r\n                return;\r\n            }\r\n        }\r\n    }\r\n\r\n    changeEndDate(value, format: string) {\r\n        try {\r\n            var adbs = require(\"ad-bs-converter\");\r\n            if (format == \"AD\") {\r\n                var adDate = (value.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n                var bsDate = adbs.ad2bs(adDate);\r\n                this._reportFilterService.SalesReturnSummaryRetailerObj.SalesReturnSummaryRetailer_BSDATE2 = this.masterService.toBSDate(value);\r\n            }\r\n            else if (format == \"BS\") {\r\n                var datearr = value.split('/');\r\n                const bsDate = datearr[2] + \"/\" + datearr[1] + \"/\" + datearr[0];\r\n                // var bsDate = (value.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n                var adDate = adbs.bs2ad(bsDate);\r\n                var Engdate = this.masterService.toADDate(value);\r\n                const Validatedata = this.masterService.ValidateNepaliDate(Engdate)\r\n                if (Validatedata == true) {\r\n                    const bsDate1 = datearr[2] + \"/\" + datearr[1] + \"/\" + datearr[0];\r\n                    var adDate1 = adbs.bs2ad(bsDate1);\r\n                    this._reportFilterService.SalesReturnSummaryRetailerObj.SalesReturnSummaryRetailer_DATE2 = this.masterService.toADDate(value);\r\n                } else {\r\n                    this.alertService.error(\"Cannot Change the date\");\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n        catch (e) { }\r\n    }\r\n\r\n\r\n    SalesmanEnterClicked() {\r\n        this.gridPopupSettingsForSalesman = this.masterService.getGenericGridPopUpSettings('SalesManList');\r\n        this.genericGridSalesman.show();\r\n    }\r\n\r\n    dblClickSalesmanSelect(salesman) {\r\n        this._reportFilterService.SalesReturnSummaryRetailerObj.SalesReturnSummaryRetailer_SalesmanID = salesman.SALESMANID;\r\n        this._reportFilterService.SalesReturnSummaryRetailerObj.SalesReturnSummaryRetailer_Salesman = salesman.NAME;\r\n\r\n    }\r\n\r\n    RetailerEnterClicked() {\r\n        this.RetailerList();\r\n        this.genericGridRetailer.show();\r\n    }\r\n\r\n\r\n    RetailerList() {\r\n        this.gridPopupSettingsForRetailerListBySalesman = this.masterService.getGridSettingForRetailerBySalesman(this._reportFilterService.SalesReturnSummaryRetailerObj.SalesReturnSummaryRetailer_SalesmanID);\r\n\r\n    }\r\n\r\n    dblClickRetailerPopup(retailer) {\r\n        this._reportFilterService.SalesReturnSummaryRetailerObj.SalesReturnSummaryRetailer_RetailerName = retailer.ACNAME,\r\n            this._reportFilterService.SalesReturnSummaryRetailerObj.SalesReturnSummaryRetailer_RetailerID = retailer.customerID\r\n    }\r\n\r\n    checkValue() {\r\n        if (this._reportFilterService.SalesReturnSummaryRetailerObj.SalesReturnSummaryRetailer_EnableSalesman == true) {\r\n            this._reportFilterService.showMultipleSalesman = true;\r\n        } else {\r\n            this._reportFilterService.showMultipleSalesman = false;\r\n        }\r\n        if (this._reportFilterService.SalesReturnSummaryRetailerObj.SalesReturnSummaryRetailer_EnableRetailer == true) {\r\n            this._reportFilterService.showMultipleRetailer = true;\r\n        } else {\r\n            this._reportFilterService.showMultipleRetailer = false;\r\n        }\r\n    }\r\n\r\n    addSalesmanToList() {\r\n        if (this._reportFilterService.SalesReturnSummaryRetailerObj.SalesReturnSummaryRetailer_MultipleSalesman == null) { this._reportFilterService.SalesReturnSummaryRetailerObj.SalesReturnSummaryRetailer_MultipleSalesman = [] }\r\n        let selectSalesmanList = this._reportFilterService.SalesReturnSummaryRetailerObj.SalesReturnSummaryRetailer_MultipleSalesman.filter(x => x.SalesmanID == this._reportFilterService.SalesReturnSummaryRetailerObj.SalesReturnSummaryRetailer_SalesmanID)\r\n        if (this._reportFilterService.SalesReturnSummaryRetailerObj.SalesReturnSummaryRetailer_Salesman == \"\" || this._reportFilterService.SalesReturnSummaryRetailerObj.SalesReturnSummaryRetailer_Salesman == null || this._reportFilterService.SalesReturnSummaryRetailerObj.SalesReturnSummaryRetailer_Salesman === null || this._reportFilterService.SalesReturnSummaryRetailerObj.SalesReturnSummaryRetailer_Salesman === 'undefined') {\r\n            return;\r\n        }\r\n        if (selectSalesmanList.length == 0) {\r\n            this._reportFilterService.SalesReturnSummaryRetailerObj.SalesReturnSummaryRetailer_MultipleSalesman.push({ SalesmanID: this._reportFilterService.SalesReturnSummaryRetailerObj.SalesReturnSummaryRetailer_SalesmanID, SalesmanName: this._reportFilterService.SalesReturnSummaryRetailerObj.SalesReturnSummaryRetailer_Salesman })\r\n        }\r\n    }\r\n\r\n    deleteSalesman(index) {\r\n        this._reportFilterService.SalesReturnSummaryRetailerObj.SalesReturnSummaryRetailer_MultipleSalesman.splice(index, 1)\r\n    }\r\n\r\n    hideSalesmanTable() {\r\n        this._reportFilterService.showMultipleSalesman = false;\r\n        // this.SalesReturnSummaryRetailerReport.multiSalesman = false;\r\n    }\r\n\r\n    addRetailerToList() {\r\n        if (this._reportFilterService.SalesReturnSummaryRetailerObj.SalesReturnSummaryRetailer_MultipleRetailer == null) { this._reportFilterService.SalesReturnSummaryRetailerObj.SalesReturnSummaryRetailer_MultipleRetailer = [] }\r\n        let selectRetailerList = this._reportFilterService.SalesReturnSummaryRetailerObj.SalesReturnSummaryRetailer_MultipleRetailer.filter(x => x.ACID == this._reportFilterService.SalesReturnSummaryRetailerObj.SalesReturnSummaryRetailer_RetailerID)\r\n        if (this._reportFilterService.SalesReturnSummaryRetailerObj.SalesReturnSummaryRetailer_RetailerName == \"\" || this._reportFilterService.SalesReturnSummaryRetailerObj.SalesReturnSummaryRetailer_RetailerName == null || this._reportFilterService.SalesReturnSummaryRetailerObj.SalesReturnSummaryRetailer_RetailerName === null || this._reportFilterService.SalesReturnSummaryRetailerObj.SalesReturnSummaryRetailer_RetailerName === 'undefined') {\r\n            return;\r\n        }\r\n        if (selectRetailerList.length == 0) {\r\n            this._reportFilterService.SalesReturnSummaryRetailerObj.SalesReturnSummaryRetailer_MultipleRetailer.push({ ACID: this._reportFilterService.SalesReturnSummaryRetailerObj.SalesReturnSummaryRetailer_RetailerID, RETAILER: this._reportFilterService.SalesReturnSummaryRetailerObj.SalesReturnSummaryRetailer_RetailerName })\r\n        }\r\n    }\r\n\r\n    deleteRetailer(index) {\r\n        this._reportFilterService.SalesReturnSummaryRetailerObj.SalesReturnSummaryRetailer_MultipleRetailer.splice(index, 1)\r\n    }\r\n\r\n    hideRetailerTable() {\r\n        this._reportFilterService.showMultipleRetailer = false;\r\n        // this.SalesReturnSummaryRetailerReport.multiRetailer = false;\r\n    }\r\n\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/pages/ReportDialogs/SalesReturnSummaryRetailerReport/salesreturnsummary-retailerreport.component.ts","import { NgaModule } from '../../../theme/nga.module';\r\nimport { Component, Inject, Output, EventEmitter, OnInit, ViewChild } from '@angular/core';\r\nimport { MdDialogRef, MD_DIALOG_DATA } from '@angular/material';\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { MasterRepo } from '../../../common/repositories';\r\nimport { Division } from '../../../common/interfaces';\r\nimport { AuthService } from '../../../common/services/permission/authService.service';\r\nimport { ReportMainService } from '../../Reports/components/ReportMain/ReportMain.service';\r\nimport { Router, NavigationEnd, ActivatedRoute } from '@angular/router';\r\nimport { ReportFilterService } from '../../../common/popupLists/report-filter/report-filter.service';\r\nimport { AlertService } from '../../../common/services/alert/alert.service';\r\nimport { GenericPopUpComponent, GenericPopUpSettings } from '../../../common/popupLists/generic-grid/generic-popup-grid.component';\r\n\r\nexport interface DialogInfo {\r\n    header: string;\r\n    message: Observable<string>;\r\n}\r\n\r\n@Component({\r\n    selector: 'stockabc-analysis-account',\r\n    template: require('./stockabc-analysisreport-account.component.html'),\r\n    styles: [require('../../Reports/reportStyle.css'), require('../../modal-style.css')],\r\n})\r\n\r\nexport class StockAbcAnalysisReportAccount implements OnInit {\r\n    userProfile: any;\r\n    instanceWiseRepName: string = 'Stock Abc Analysis Report';\r\n    @ViewChild(\"genericGridProduct\") genericGridProduct: GenericPopUpComponent;\r\n    gridPopupSettingsForProduct: GenericPopUpSettings = new GenericPopUpSettings();\r\n    @ViewChild(\"genericGridBrand\") genericGridBrand: GenericPopUpComponent;\r\n    gridPopupSettingsForBrand: GenericPopUpSettings = new GenericPopUpSettings();\r\n    @ViewChild(\"genericGridSupplier\") genericGridSupplier: GenericPopUpComponent;\r\n    gridPopupSettingsForSupplier: GenericPopUpSettings = new GenericPopUpSettings();\r\n    @ViewChild(\"genericGridWarehouse\") genericGridWarehouse: GenericPopUpComponent;\r\n    gridPopupSettingsForWarehouse: GenericPopUpSettings = new GenericPopUpSettings();\r\n\r\n    @Output() reportdataEmit = new EventEmitter();\r\n    constructor(private masterService: MasterRepo, private _authService: AuthService,\r\n        private _reportFilterService: ReportMainService, private arouter: Router, public _ActivatedRoute: ActivatedRoute,\r\n        public reportService: ReportFilterService, private alertService: AlertService,\r\n        public dialogref: MdDialogRef<StockAbcAnalysisReportAccount>,\r\n        @Inject(MD_DIALOG_DATA) public data: DialogInfo) {\r\n        this.userProfile = this._authService.getUserProfile();\r\n    }\r\n\r\n    ngOnInit() {\r\n        if (this._reportFilterService.StockAbcAnalysisAccountObj.assignPrevioiusDate != true) {\r\n            this._reportFilterService.StockAbcAnalysisAccountObj.StockAbcAnalysisAccount_DATE1 = this.masterService.userProfile.CompanyInfo.FBDATE.split('T')[0];\r\n            this._reportFilterService.StockAbcAnalysisAccountObj.StockAbcAnalysisAccount_DATE2 = new Date().toJSON().split('T')[0];\r\n            this._reportFilterService.StockAbcAnalysisAccountObj.StockAbcAnalysisAccount_DIV = this.masterService.userProfile.CompanyInfo.INITIAL;\r\n            this._reportFilterService.StockAbcAnalysisAccountObj.StockAbcAnalysisAccount_REPORTTYPE = '0';\r\n            this._reportFilterService.StockAbcAnalysisAccountObj.StockAbcAnalysisAccount_ShowItemInGroupWiseReport = 0;\r\n        }\r\n\r\n        this.changeEntryDate(this._reportFilterService.StockAbcAnalysisAccountObj.StockAbcAnalysisAccount_DATE1, \"AD\");\r\n        this.changeEndDate(this._reportFilterService.StockAbcAnalysisAccountObj.StockAbcAnalysisAccount_DATE2, \"AD\");\r\n\r\n    }\r\n\r\n    changeEntryDate(value, format: string) {\r\n        var adbs = require(\"ad-bs-converter\");\r\n        if (format == \"AD\") {\r\n            var adDate = (value.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n            var bsDate = adbs.ad2bs(adDate);\r\n            this._reportFilterService.StockAbcAnalysisAccountObj.StockAbcAnalysisAccount_BSDATE1 = this.masterService.toBSDate(value);\r\n        }\r\n        else if (format == \"BS\") {\r\n            var datearr = value.split('/');\r\n            const bsDate = datearr[2] + \"/\" + datearr[1] + \"/\" + datearr[0];\r\n            // var bsDate = (value.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n            var adDate = adbs.bs2ad(bsDate);\r\n            var Engdate = this.masterService.toADDate(value);\r\n            const Validatedata = this.masterService.ValidateNepaliDate(Engdate)\r\n            if (Validatedata == true) {\r\n                const bsDate1 = datearr[2] + \"/\" + datearr[1] + \"/\" + datearr[0];\r\n                var adDate1 = adbs.bs2ad(bsDate1);\r\n                this._reportFilterService.StockAbcAnalysisAccountObj.StockAbcAnalysisAccount_DATE1 = this.masterService.toADDate(value);\r\n            } else {\r\n                this.alertService.error(\"Cannot Change the date\");\r\n                return;\r\n            }\r\n\r\n\r\n        }\r\n    }\r\n\r\n    changeEndDate(value, format: string) {\r\n        var adbs = require(\"ad-bs-converter\");\r\n        if (format == \"AD\") {\r\n            var adDate = (value.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n            var bsDate = adbs.ad2bs(adDate);\r\n            this._reportFilterService.StockAbcAnalysisAccountObj.StockAbcAnalysisAccount_BSDATE2 = this.masterService.toBSDate(value);\r\n        }\r\n        else if (format == \"BS\") {\r\n            var datearr = value.split('/');\r\n            const bsDate = datearr[2] + \"/\" + datearr[1] + \"/\" + datearr[0];\r\n            // var bsDate = (value.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n            var adDate = adbs.bs2ad(bsDate);\r\n            var Engdate = this.masterService.toADDate(value);\r\n            const Validatedata = this.masterService.ValidateNepaliDate(Engdate)\r\n            if (Validatedata == true) {\r\n                const bsDate1 = datearr[2] + \"/\" + datearr[1] + \"/\" + datearr[0];\r\n                var adDate1 = adbs.bs2ad(bsDate1);\r\n                this._reportFilterService.StockAbcAnalysisAccountObj.StockAbcAnalysisAccount_DATE2 = this.masterService.toADDate(value);\r\n            } else {\r\n                this.alertService.error(\"Cannot Change the date\");\r\n                return;\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    onload() {\r\n        this.DialogClosedResult(\"ok\");\r\n    }\r\n\r\n    closeReportBox() {\r\n        this.DialogClosedResult(\"Error!\");\r\n    }\r\n\r\n    public DialogClosedResult(res) {\r\n\r\n        if (res == \"ok\") {\r\n            this._reportFilterService.StockAbcAnalysisAccountObj.assignPrevioiusDate = true;\r\n            let routepaths = this.arouter.url.split('/');\r\n            let activeurlpath2;\r\n            if (routepaths && routepaths.length) {\r\n                activeurlpath2 = routepaths[routepaths.length - 1]\r\n            }\r\n\r\n            if (this._reportFilterService.StockAbcAnalysisAccount_loadedTimes == 0) {\r\n                this._reportFilterService.previouslyLoadedReportList.push(\r\n                    {\r\n                        reportname: 'Sales Abc Analysis Report',\r\n                        activeurlpath: this.arouter.url,\r\n                        instanceWiseRepName: this.instanceWiseRepName + this._reportFilterService.StockAbcAnalysisAccount_loadedTimes,\r\n                        activerurlpath2: activeurlpath2,\r\n                    });\r\n            } else {\r\n                this._reportFilterService.previouslyLoadedReportList.push(\r\n                    {\r\n                        reportname: 'Sales Abc Analysis Report' + '_' + this._reportFilterService.StockAbcAnalysisAccount_loadedTimes,\r\n                        activeurlpath: this.arouter.url,\r\n                        instanceWiseRepName: this.instanceWiseRepName + this._reportFilterService.StockAbcAnalysisAccount_loadedTimes,\r\n                        activerurlpath2: activeurlpath2,\r\n                    });\r\n            }\r\n\r\n        }\r\n        let multiplereportname = 'Sales Abc Analysis ReportAccount';\r\n        let REPORTTYPE = this._reportFilterService.StockAbcAnalysisAccountObj.StockAbcAnalysisAccount_REPORTTYPE;\r\n        let ITEMNAME = this._reportFilterService.StockAbcAnalysisAccountObj.StockAbcAnalysisAccount_ITEM;\r\n        let SUPPLIERNAME = this._reportFilterService.StockAbcAnalysisAccountObj.StockAbcAnalysisAccount_SUPPLIER;\r\n\r\n        if (REPORTTYPE == 0) {\r\n            this._reportFilterService.StockAbcAnalysisAccountObj.StockAbcAnalysisAccount_ShowItemInGroupWiseReport = 0;\r\n        }\r\n\r\n        if (ITEMNAME == \"\") {\r\n            this._reportFilterService.StockAbcAnalysisAccountObj.StockAbcAnalysisAccount_MCODE = '%';\r\n        }\r\n\r\n        if (SUPPLIERNAME == \"\") {\r\n            this._reportFilterService.StockAbcAnalysisAccountObj.StockAbcAnalysisAccount_SUPPLIERCODE = '%';\r\n        }\r\n\r\n        let ShowItemInGroupWiseReport = this._reportFilterService.StockAbcAnalysisAccountObj.StockAbcAnalysisAccount_ShowItemInGroupWiseReport;\r\n\r\n        if (REPORTTYPE == 0) {\r\n            multiplereportname = 'Stock Abc Analysis ReportAccount';\r\n        } else if (REPORTTYPE == 1 && ShowItemInGroupWiseReport == 0) {\r\n            multiplereportname = 'Stock Abc Analysis ReportAccount_1';\r\n        } else if (REPORTTYPE == 1 && ShowItemInGroupWiseReport == 1) {\r\n            multiplereportname = 'Stock Abc Analysis ReportAccount_2';\r\n        } else if (REPORTTYPE == 2 && ShowItemInGroupWiseReport == 0) {\r\n            multiplereportname = 'Stock Abc Analysis ReportAccount_3';\r\n        } else if (REPORTTYPE == 2 && ShowItemInGroupWiseReport == 1) {\r\n            multiplereportname = 'Stock Abc Analysis ReportAccount_4';\r\n        }\r\n        //console.log(\"@@multiplereportname\", multiplereportname)\r\n\r\n\r\n        this.reportdataEmit.emit({\r\n            status: res, data: {\r\n                reportname: multiplereportname, reportparam: {\r\n                    DATE1: this._reportFilterService.StockAbcAnalysisAccountObj.StockAbcAnalysisAccount_DATE1,\r\n                    DATE2: this._reportFilterService.StockAbcAnalysisAccountObj.StockAbcAnalysisAccount_DATE2,\r\n                    DIV: this.userProfile.CompanyInfo.INITIAL,\r\n                    COMID: this.userProfile.CompanyInfo.COMPANYID,\r\n                    COMPANYID: this.userProfile.CompanyInfo.COMPANYID,\r\n                    PHISCALID: this.userProfile.CompanyInfo.PhiscalID,\r\n                    MGROUP: '%',\r\n                    MCAT: '%',\r\n                    PTYPE: 100,\r\n                    ACID: this._reportFilterService.StockAbcAnalysisAccountObj.StockAbcAnalysisAccount_SUPPLIERCODE ? this._reportFilterService.StockAbcAnalysisAccountObj.StockAbcAnalysisAccount_SUPPLIERCODE : '%',\r\n                    REPORTYTYPE: this._reportFilterService.StockAbcAnalysisAccountObj.StockAbcAnalysisAccount_REPORTTYPE ? this._reportFilterService.StockAbcAnalysisAccountObj.StockAbcAnalysisAccount_REPORTTYPE : '0',\r\n                    SUPCODE: this._reportFilterService.StockAbcAnalysisAccountObj.StockAbcAnalysisAccount_SUPPLIERCODE ? this._reportFilterService.StockAbcAnalysisAccountObj.StockAbcAnalysisAccount_SUPPLIERCODE : '%',\r\n                    MCODE: this._reportFilterService.StockAbcAnalysisAccountObj.StockAbcAnalysisAccount_MCODE ? this._reportFilterService.StockAbcAnalysisAccountObj.StockAbcAnalysisAccount_MCODE : '%',\r\n                    REPORTTYPE: this._reportFilterService.StockAbcAnalysisAccountObj.StockAbcAnalysisAccount_REPORTTYPE ? this._reportFilterService.StockAbcAnalysisAccountObj.StockAbcAnalysisAccount_REPORTTYPE : 0,\r\n                    ShowItemInGroupWiseReport: this._reportFilterService.StockAbcAnalysisAccountObj.StockAbcAnalysisAccount_ShowItemInGroupWiseReport ? this._reportFilterService.StockAbcAnalysisAccountObj.StockAbcAnalysisAccount_ShowItemInGroupWiseReport : 0,\r\n                    ITEMNAME: this._reportFilterService.StockAbcAnalysisAccountObj.StockAbcAnalysisAccount_ITEM ? this._reportFilterService.StockAbcAnalysisAccountObj.StockAbcAnalysisAccount_ITEM : \"\",\r\n                    SUPPLIERNAME: this._reportFilterService.StockAbcAnalysisAccountObj.StockAbcAnalysisAccount_SUPPLIER ? this._reportFilterService.StockAbcAnalysisAccountObj.StockAbcAnalysisAccount_SUPPLIER : \"\"\r\n                }\r\n            }\r\n        });\r\n        if (res == \"ok\") {\r\n            this._reportFilterService.StockAbcAnalysisAccount_loadedTimes = this._reportFilterService.StockAbcAnalysisAccount_loadedTimes + 1;\r\n        }\r\n    }\r\n\r\n    ProductEnterClicked() {\r\n        this.gridPopupSettingsForProduct = this.masterService.getGenericGridPopUpSettings('ProductList');\r\n        this.genericGridProduct.show();\r\n    }\r\n\r\n    dblClickProductSelect(product) {\r\n        this._reportFilterService.StockAbcAnalysisAccountObj.StockAbcAnalysisAccount_MCODE = product.MCODE;\r\n        this._reportFilterService.StockAbcAnalysisAccountObj.StockAbcAnalysisAccount_ITEM = product.DESCA;\r\n    }\r\n\r\n    // BrandEnterClicked() {\r\n    //     this.gridPopupSettingsForBrand = this.masterService.getGenericGridPopUpSettings('BrandList');\r\n    //     this.genericGridBrand.show();\r\n    // }\r\n\r\n\r\n    // dblClickBrandSelect(brand) {\r\n    //     this._reportFilterService.StockAbcAnalysisAccountObj.StockAbcAnalysisAccount_BRANDID = brand.BRANDCODE;\r\n    //     this._reportFilterService.StockAbcAnalysisAccountObj.StockAbcAnalysisAccount_BRANDNAME = brand.BRANDNAME;\r\n    // }\r\n\r\n    SupplierEnterClicked() {\r\n        this.gridPopupSettingsForSupplier = this.masterService.getGenericGridPopUpSettings('SupplierList');\r\n        this.genericGridSupplier.show();\r\n    }\r\n\r\n    dblClickSupplierSelect(supplier) {\r\n        this._reportFilterService.StockAbcAnalysisAccountObj.StockAbcAnalysisAccount_SUPPLIERCODE = supplier.ACID;\r\n        this._reportFilterService.StockAbcAnalysisAccountObj.StockAbcAnalysisAccount_SUPPLIER = supplier.ACNAME;\r\n    }\r\n    \r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/pages/ReportDialogs/StockAbcAnalysisReportAccount/stockabc-analysisreport-account.component.ts","import { Component, Inject, Output, EventEmitter, OnInit, ViewChild } from '@angular/core';\r\nimport { MdDialogRef, MD_DIALOG_DATA } from '@angular/material';\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { MasterRepo } from '../../../common/repositories';\r\nimport { AuthService } from '../../../common/services/permission/authService.service';\r\nimport { ReportMainService } from '../../Reports/components/ReportMain/ReportMain.service';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { ReportFilterService } from '../../../common/popupLists/report-filter/report-filter.service';\r\nimport { AlertService } from '../../../common/services/alert/alert.service';\r\nimport { GenericPopUpComponent, GenericPopUpSettings } from '../../../common/popupLists/generic-grid/generic-popup-grid.component';\r\n\r\nexport interface DialogInfo {\r\n    header: string;\r\n    message: Observable<string>;\r\n}\r\n\r\n@Component({\r\n    selector: 'stock-ledger-report-account',\r\n    template: require('./stock-ledger-report-account.component.html'),\r\n    styles: [require('../../Reports/reportStyle.css'), require('../../modal-style.css')]\r\n})\r\n\r\nexport class StockLedgerReportAccount implements OnInit{\r\n\r\n   \r\n    userProfile: any;\r\n    instanceWiseRepName: string = 'Stock Ledger Report';\r\n    @ViewChild(\"genericGridProduct\") genericGridProduct: GenericPopUpComponent;\r\n    gridPopupSettingsForProduct: GenericPopUpSettings = new GenericPopUpSettings();\r\n    @ViewChild(\"genericGridWarehouse\") genericGridWarehouse: GenericPopUpComponent;\r\n    gridPopupSettingsForWarehouse: GenericPopUpSettings = new GenericPopUpSettings();\r\n\r\n    @Output() reportdataEmit = new EventEmitter();\r\n    constructor(private masterService: MasterRepo, private _authService: AuthService,\r\n        private _reportFilterService: ReportMainService, private arouter: Router, public _ActivatedRoute: ActivatedRoute,\r\n        public reportService: ReportFilterService, private alertService: AlertService,\r\n        public dialogref: MdDialogRef<StockLedgerReportAccount>,\r\n        @Inject(MD_DIALOG_DATA) public data: DialogInfo) {\r\n        this.userProfile = this._authService.getUserProfile();\r\n      }\r\n\r\n      \r\n  \r\n\r\n\r\nngOnInit() {\r\n   if (this._reportFilterService.StockLedgerAccountObj.assignPrevioiusDate != true){\r\n    this._reportFilterService.StockLedgerAccountObj.StockLedgerReportAcc_DATE1 = this.userProfile.CompanyInfo.FBDATE.split('T')[0];\r\n    this._reportFilterService.StockLedgerAccountObj.StockLedgerReportAcc_DATE2 = new Date().toJSON().split('T')[0];\r\n    this._reportFilterService.StockLedgerAccountObj.StockLedgerReportAcc_DIV =this.userProfile.CompanyInfo.INITIAL;\r\n    this._reportFilterService.StockLedgerAccountObj.StockLedgerReportAcc_ITEMGROUPWISE='0';\r\n    this._reportFilterService.StockLedgerAccountObj.StockLedgerReportAcc_SHOWDETAIL = 0;\r\n    this._reportFilterService.StockLedgerAccountObj.StockLedgerReportAcc_SHOWBATCHWISE = 0;\r\n    this._reportFilterService.StockLedgerAccountObj.StockLedgerReportAcc_ITEMGROUP='0';\r\n   }\r\n\r\n   this.changeEntryDate(this._reportFilterService.StockLedgerAccountObj.StockLedgerReportAcc_DATE1,\"AD\");\r\n   this.changeEndDate(this._reportFilterService.StockLedgerAccountObj.StockLedgerReportAcc_DATE2,\"AD\")\r\n}\r\n\r\nonload() {\r\n    if(this._reportFilterService.StockLedgerAccountObj.StockLedgerReportAcc_ITEM == \"\" || \r\n    this._reportFilterService.StockLedgerAccountObj.StockLedgerReportAcc_ITEM == null ||\r\n     this._reportFilterService.StockLedgerAccountObj.StockLedgerReportAcc_ITEM == undefined ||\r\n     this._reportFilterService.StockLedgerAccountObj.StockLedgerReportAcc_MCODE == \"\" ||\r\n     this._reportFilterService.StockLedgerAccountObj.StockLedgerReportAcc_MCODE == undefined ||\r\n     this._reportFilterService.StockLedgerAccountObj.StockLedgerReportAcc_MCODE == null ||\r\n     this._reportFilterService.StockLedgerAccountObj.StockLedgerReportAcc_MCODE == '%'){\r\n        this.alertService.info(\"Plese Select Item !\");\r\n        return;\r\n    }\r\n    this.DialogClosedResult(\"ok\");\r\n}\r\n\r\n\r\n\r\n\r\n\r\n  public DialogClosedResult(res) {\r\n\r\n    if (res == \"ok\") {\r\n\r\n        this._reportFilterService.StockLedgerAccountObj.assignPrevioiusDate = true;\r\n        let routepaths = this.arouter.url.split('/');\r\n        let activeurlpath2;\r\n        if (routepaths && routepaths.length) {\r\n            activeurlpath2 = routepaths[routepaths.length - 1]\r\n        }\r\n\r\n        if (this._reportFilterService.StockLedgerReportAcc_loadedTimes == 0) {\r\n            this._reportFilterService.previouslyLoadedReportList.push(\r\n                {\r\n                    reportname: 'Stock Ledger Report',\r\n                    activeurlpath: this.arouter.url,\r\n                    instanceWiseRepName: this.instanceWiseRepName + this._reportFilterService.StockLedgerReportAcc_loadedTimes,\r\n                    activerurlpath2: activeurlpath2,\r\n                });\r\n        } else {\r\n            this._reportFilterService.previouslyLoadedReportList.push(\r\n                {\r\n                    reportname: 'Stock Ledger Report' + '_' + this._reportFilterService.StockLedgerReportAcc_loadedTimes,\r\n                    activeurlpath: this.arouter.url,\r\n                    instanceWiseRepName: this.instanceWiseRepName + this._reportFilterService.StockLedgerReportAcc_loadedTimes,\r\n                    activerurlpath2: activeurlpath2,\r\n                });\r\n        }\r\n\r\n    }\r\n    let multiplereportname = 'Stock Ledger ReportAccount';\r\n    // let REPORTTYPE = this._reportFilterService.StockLedgerAccountObj.StockLedgerReportAcc_REPORTTYPE;\r\n    // let ShowItemInGroupWiseReport = this._reportFilterService.StockLedgerAccountObj.StockLedgerReportAcc_ShowItemInGroupWiseReport;\r\n    let ITEMNAME = this._reportFilterService.StockLedgerAccountObj.StockLedgerReportAcc_ITEM;\r\n    let SHOWDETAIL = this._reportFilterService.StockLedgerAccountObj.StockLedgerReportAcc_SHOWDETAIL;\r\n    let SHOWBATCH = this._reportFilterService.StockLedgerAccountObj.StockLedgerReportAcc_SHOWBATCHWISE;\r\n    if (SHOWDETAIL == 0 && SHOWBATCH == 0) {\r\n      multiplereportname = 'Stock Ledger ReportAccount';\r\n    } else if (SHOWDETAIL == 0 && SHOWBATCH == 1) {\r\n      multiplereportname = 'Stock Ledger ReportAccount_1';\r\n    } else if (SHOWDETAIL == 1 && SHOWBATCH == 0) {\r\n      multiplereportname = 'Stock Ledger ReportAccount_2';\r\n    } else if (SHOWDETAIL == 1 && SHOWBATCH == 1) {\r\n      multiplereportname = 'Stock Ledger ReportAccount_3';\r\n    }\r\n\r\n    if (ITEMNAME == \"\") {\r\n        this._reportFilterService.StockLedgerAccountObj.StockLedgerReportAcc_MCODE = '%';\r\n    }\r\n\r\n\r\n    //console.log(\"@@multiplereportname\", multiplereportname)\r\n    this.reportdataEmit.emit({\r\n        status: res, data: {\r\n            reportname: multiplereportname, reportparam: {\r\n                DATE1: this._reportFilterService.StockLedgerAccountObj.StockLedgerReportAcc_DATE1,\r\n                DATE2: this._reportFilterService.StockLedgerAccountObj.StockLedgerReportAcc_DATE2,\r\n                DIV: this.userProfile.CompanyInfo.INITIAL,\r\n                COMID: this.userProfile.CompanyInfo.COMPANYID,\r\n                COMPANYID: this.userProfile.CompanyInfo.COMPANYID,\r\n                PHISCALID: this.userProfile.CompanyInfo.PhiscalID,\r\n                MCODE: this._reportFilterService.StockLedgerAccountObj.StockLedgerReportAcc_MCODE ? this._reportFilterService.StockLedgerAccountObj.StockLedgerReportAcc_MCODE : '%',\r\n                WAREHOUSE: this._reportFilterService.StockLedgerAccountObj.StockLedgerReportAcc_WAREHOUSE ? this._reportFilterService.StockLedgerAccountObj.StockLedgerReportAcc_WAREHOUSE : '%',\r\n                SHOWDETAIL: this._reportFilterService.StockLedgerAccountObj.StockLedgerReportAcc_SHOWDETAIL ? this._reportFilterService.StockLedgerAccountObj.StockLedgerReportAcc_SHOWDETAIL : 0,\r\n                SHOWBATCH : this._reportFilterService.StockLedgerAccountObj.StockLedgerReportAcc_SHOWBATCHWISE ? this._reportFilterService.StockLedgerAccountObj.StockLedgerReportAcc_SHOWBATCHWISE : 0,\r\n                ITEMNAME: this._reportFilterService.StockLedgerAccountObj.StockValuationAccount_ITEM? this._reportFilterService.StockLedgerAccountObj.StockValuationAccount_ITEM : \"\"\r\n                // ITEMGROUPWISE:this._reportFilterService.StockLedgerAccountObj.StockLedgerReportAcc_ITEMGROUPWISE ? this._reportFilterService.StockLedgerAccountObj.StockLedgerReportAcc_ITEMGROUPWISE : 0,\r\n                // ITEMGROUP:this._reportFilterService.StockLedgerAccountObj.StockLedgerReportAcc_ITEMGROUP ? this._reportFilterService.StockLedgerAccountObj.StockLedgerReportAcc_ITEMGROUP : '%',\r\n            }\r\n\r\n        }\r\n    });\r\n    if (res == \"ok\") {\r\n        this._reportFilterService.StockLedgerReportAcc_loadedTimes = this._reportFilterService.StockLedgerReportAcc_loadedTimes + 1;\r\n    }\r\n}\r\n\r\n  \r\n\r\nchangeEntryDate(value, format: string) {\r\n    var adbs = require(\"ad-bs-converter\");\r\n    if (format == \"AD\") {\r\n        var adDate = (value.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n        var bsDate = adbs.ad2bs(adDate);\r\n        this._reportFilterService.StockLedgerAccountObj.StockLedgerReportAcc_BSDATE1= this.masterService.toBSDate(value);\r\n    }\r\n    else if (format == \"BS\") {\r\n        var datearr = value.split('/');\r\n        const bsDate = datearr[2] + \"/\" + datearr[1] + \"/\" + datearr[0];\r\n        // var bsDate = (value.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n        var adDate = adbs.bs2ad(bsDate);\r\n        var Engdate = this.masterService.toADDate(value);\r\n        const Validatedata = this.masterService.ValidateNepaliDate(Engdate)\r\n        if (Validatedata == true) {\r\n            const bsDate1 = datearr[2] + \"/\" + datearr[1] + \"/\" + datearr[0];\r\n            var adDate1 = adbs.bs2ad(bsDate1);\r\n            this._reportFilterService.StockLedgerAccountObj.StockLedgerReportAcc_DATE1 = this.masterService.toADDate(value);\r\n        } else {\r\n            this.alertService.error(\"Cannot Change the date\");\r\n            return;\r\n        }\r\n\r\n\r\n    }\r\n}\r\n\r\nchangeEndDate(value, format: string) {\r\n    var adbs = require(\"ad-bs-converter\");\r\n    if (format == \"AD\") {\r\n        var adDate = (value.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n        var bsDate = adbs.ad2bs(adDate);\r\n        this._reportFilterService.StockLedgerAccountObj.StockLedgerReportAcc_BSDATE2= this.masterService.toBSDate(value);\r\n    }\r\n    else if (format == \"BS\") {\r\n        var datearr = value.split('/');\r\n        const bsDate = datearr[2] + \"/\" + datearr[1] + \"/\" + datearr[0];\r\n        // var bsDate = (value.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n        var adDate = adbs.bs2ad(bsDate);\r\n        var Engdate = this.masterService.toADDate(value);\r\n        const Validatedata = this.masterService.ValidateNepaliDate(Engdate)\r\n        if (Validatedata == true) {\r\n            const bsDate1 = datearr[2] + \"/\" + datearr[1] + \"/\" + datearr[0];\r\n            var adDate1 = adbs.bs2ad(bsDate1);\r\n            this._reportFilterService.StockLedgerAccountObj.StockLedgerReportAcc_DATE2 = this.masterService.toADDate(value);\r\n        } else {\r\n            this.alertService.error(\"Cannot Change the date\");\r\n            return;\r\n        }\r\n\r\n    }\r\n}\r\n\r\ncloseReportBox() {  \r\n this.DialogClosedResult(\"Error!\");\r\n}\r\n\r\nWarehouseEnterClicked() {\r\n    this.gridPopupSettingsForWarehouse = this.masterService.getGenericGridPopUpSettings('WarehouseList');\r\n    this.genericGridWarehouse.show();\r\n}\r\ndblClickWarehouseSelect(warehouse) {\r\n    this._reportFilterService.StockLedgerAccountObj.StockLedgerReportAcc_WAREHOUSE = warehouse.NAME;\r\n}\r\n\r\n\r\nProductEnterClicked() {\r\n    this.gridPopupSettingsForProduct = this.masterService.getGenericGridPopUpSettings('ProductList');\r\n    this.genericGridProduct.show();\r\n}\r\n\r\ndblClickProductSelect(product) {\r\n    this._reportFilterService.StockLedgerAccountObj.StockLedgerReportAcc_MCODE = product.MCODE;\r\n    this._reportFilterService.StockLedgerAccountObj.StockLedgerReportAcc_ITEM = product.DESCA;\r\n}\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/pages/ReportDialogs/StockLedgerReportAcc/stock-ledger-report-account.component.ts","import { Component, Inject, Output, EventEmitter, OnInit, ViewChild } from '@angular/core';\r\nimport { MdDialogRef, MD_DIALOG_DATA } from '@angular/material';\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { MasterRepo } from '../../../common/repositories';\r\nimport { AuthService } from '../../../common/services/permission/authService.service';\r\nimport { ReportMainService } from '../../Reports/components/ReportMain/ReportMain.service';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { ReportFilterService } from '../../../common/popupLists/report-filter/report-filter.service';\r\nimport { AlertService } from '../../../common/services/alert/alert.service';\r\nimport { GenericPopUpComponent, GenericPopUpSettings } from '../../../common/popupLists/generic-grid/generic-popup-grid.component';\r\n\r\nexport interface DialogInfo {\r\n    header: string;\r\n    message: Observable<string>;\r\n}\r\n\r\n@Component({\r\n    selector: 'stocksummary-reportaccount',\r\n    template: require('./stocksummary-report-account.component.html'),\r\n    styles: [require('../../Reports/reportStyle.css'), require('../../modal-style.css')],\r\n})\r\n\r\nexport class StockSummaryReportAccount implements OnInit {\r\n    userProfile: any;\r\n    instanceWiseRepName: string = 'Stock Summary Report';\r\n    @ViewChild(\"genericGridProduct\") genericGridProduct: GenericPopUpComponent;\r\n    gridPopupSettingsForProduct: GenericPopUpSettings = new GenericPopUpSettings();\r\n    @ViewChild(\"genericGridBrand\") genericGridBrand: GenericPopUpComponent;\r\n    gridPopupSettingsForBrand: GenericPopUpSettings = new GenericPopUpSettings();\r\n    @ViewChild(\"genericGridSupplier\") genericGridSupplier: GenericPopUpComponent;\r\n    gridPopupSettingsForSupplier: GenericPopUpSettings = new GenericPopUpSettings();\r\n    @ViewChild(\"genericGridWarehouse\") genericGridWarehouse: GenericPopUpComponent;\r\n    gridPopupSettingsForWarehouse: GenericPopUpSettings = new GenericPopUpSettings();\r\n\r\n    @Output() reportdataEmit = new EventEmitter();\r\n    constructor(private masterService: MasterRepo, private _authService: AuthService,\r\n        private _reportFilterService: ReportMainService, private arouter: Router, public _ActivatedRoute: ActivatedRoute,\r\n        public reportService: ReportFilterService, private alertService: AlertService,\r\n        public dialogref: MdDialogRef<StockSummaryReportAccount>,\r\n        @Inject(MD_DIALOG_DATA) public data: DialogInfo) {\r\n        this.userProfile = this._authService.getUserProfile();\r\n    }\r\n\r\n    ngOnInit() {\r\n        if (this._reportFilterService.StockSummaryAccountObj.assignPrevioiusDate != true) {\r\n            this._reportFilterService.StockSummaryAccountObj.StockSummaryAccount_DATE1 = this.userProfile.CompanyInfo.FBDATE.split('T')[0];\r\n            this._reportFilterService.StockSummaryAccountObj.StockSummaryAccount_DATE2 = new Date().toJSON().split('T')[0];\r\n            this._reportFilterService.StockSummaryAccountObj.StockSummaryAccount_DIV = this.userProfile.CompanyInfo.INITIAL;\r\n            this._reportFilterService.StockSummaryAccountObj.StockSummaryAccount_REPORTTYPE = '0';\r\n            this._reportFilterService.StockSummaryAccountObj.StockSummaryAccount_ShowItemInGroupWiseReport = 0;\r\n            this._reportFilterService.StockSummaryAccountObj.StockSummaryAccount_DETAILFORMAT='0';\r\n            this._reportFilterService.StockSummaryAccountObj.StockSummaryAccount_ReportMode = '0';\r\n            this._reportFilterService.StockSummaryAccountObj.StockSummaryAccount_SHOWDETAIL = 0;\r\n            this._reportFilterService.StockSummaryAccountObj.StockSummaryAccount_SHOWBATCHWISE = 0;\r\n            this._reportFilterService.StockSummaryAccountObj.StockSummaryAccount_SHOWALTUNIT = 0;\r\n        }\r\n        this.changeEndDate(this._reportFilterService.StockSummaryAccountObj.StockSummaryAccount_DATE2, \"AD\");\r\n        this.changeEntryDate(this._reportFilterService.StockSummaryAccountObj.StockSummaryAccount_DATE1, \"AD\");\r\n    }\r\n\r\n    changeEntryDate(value, format: string) {\r\n        var adbs = require(\"ad-bs-converter\");\r\n        if (format == \"AD\") {\r\n            var adDate = (value.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n            var bsDate = adbs.ad2bs(adDate);\r\n            this._reportFilterService.StockSummaryAccountObj.StockSummaryAccount_BSDATE1 = this.masterService.toBSDate(value);\r\n        }\r\n        else if (format == \"BS\") {\r\n            var datearr = value.split('/');\r\n            const bsDate = datearr[2] + \"/\" + datearr[1] + \"/\" + datearr[0];\r\n            // var bsDate = (value.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n            var adDate = adbs.bs2ad(bsDate);\r\n            var Engdate = this.masterService.toADDate(value);\r\n            const Validatedata = this.masterService.ValidateNepaliDate(Engdate)\r\n            if (Validatedata == true) {\r\n                const bsDate1 = datearr[2] + \"/\" + datearr[1] + \"/\" + datearr[0];\r\n                var adDate1 = adbs.bs2ad(bsDate1);\r\n                this._reportFilterService.StockSummaryAccountObj.StockSummaryAccount_DATE1 = this.masterService.toADDate(value);\r\n            } else {\r\n                this.alertService.error(\"Cannot Change the date\");\r\n                return;\r\n            }\r\n\r\n\r\n        }\r\n    }\r\n\r\n    changeEndDate(value, format: string) {\r\n        var adbs = require(\"ad-bs-converter\");\r\n        if (format == \"AD\") {\r\n            var adDate = (value.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n            var bsDate = adbs.ad2bs(adDate);\r\n            this._reportFilterService.StockSummaryAccountObj.StockSummaryAccount_BSDATE2 = this.masterService.toADDate(value);\r\n        }\r\n        else if (format == \"BS\") {\r\n            var datearr = value.split('/');\r\n            const bsDate = datearr[2] + \"/\" + datearr[1] + \"/\" + datearr[0];\r\n            // var bsDate = (value.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n            var adDate = adbs.bs2ad(bsDate);\r\n            var Engdate = this.masterService.toBSDate(value);\r\n            const Validatedata = this.masterService.ValidateNepaliDate(Engdate)\r\n            if (Validatedata == true) {\r\n                const bsDate1 = datearr[2] + \"/\" + datearr[1] + \"/\" + datearr[0];\r\n                var adDate1 = adbs.bs2ad(bsDate1);\r\n                this._reportFilterService.StockSummaryAccountObj.StockSummaryAccount_DATE2 = this.masterService.toADDate(value);\r\n            } else {\r\n                this.alertService.error(\"Cannot Change the date\");\r\n                return;\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    onload() {\r\n        this.DialogClosedResult(\"ok\");\r\n    }\r\n\r\n    closeReportBox() {\r\n        this.DialogClosedResult(\"Error!\");\r\n    }\r\n\r\n    public DialogClosedResult(res) {\r\n\r\n        if (res == \"ok\") {\r\n            this._reportFilterService.StockSummaryAccountObj.assignPrevioiusDate = true;\r\n            let routepaths = this.arouter.url.split('/');\r\n            let activeurlpath2;\r\n            if (routepaths && routepaths.length) {\r\n                activeurlpath2 = routepaths[routepaths.length - 1]\r\n            }\r\n\r\n            if (this._reportFilterService.StockSummaryAccount_loadedTimes == 0) {\r\n                this._reportFilterService.previouslyLoadedReportList.push(\r\n                    {\r\n                        reportname: 'Stock Summary Report',\r\n                        activeurlpath: this.arouter.url,\r\n                        instanceWiseRepName: this.instanceWiseRepName + this._reportFilterService.StockSummaryAccount_loadedTimes,\r\n                        activerurlpath2: activeurlpath2,\r\n                    });\r\n            } else {\r\n                this._reportFilterService.previouslyLoadedReportList.push(\r\n                    {\r\n                        reportname: 'Stock Summary Report' + '_' + this._reportFilterService.StockSummaryAccount_loadedTimes,\r\n                        activeurlpath: this.arouter.url,\r\n                        instanceWiseRepName: this.instanceWiseRepName + this._reportFilterService.StockSummaryAccount_loadedTimes,\r\n                        activerurlpath2: activeurlpath2,\r\n                    });\r\n            }\r\n\r\n        }\r\n        let multiplereportname = 'Stock Summary ReportAccount';\r\n        let REPORTTYPE = this._reportFilterService.StockSummaryAccountObj.StockSummaryAccount_REPORTTYPE;\r\n        let ITEMNAME = this._reportFilterService.StockSummaryAccountObj.StockSummaryAccount_ITEM;\r\n        let DETAILFORMAT = this._reportFilterService.StockSummaryAccountObj.StockSummaryAccount_DETAILFORMAT;\r\n        let SUPPLIERNAME = this._reportFilterService.StockSummaryAccountObj.StockSummaryAccount_SUPPLIER;\r\n        let ShowDetail = this._reportFilterService.StockSummaryAccountObj.StockSummaryAccount_SHOWDETAIL;\r\n        let SHOWBATCHWISESTOCK = this._reportFilterService.StockSummaryAccountObj.StockSummaryAccount_SHOWBATCHWISE;\r\n\r\n\r\n        if (REPORTTYPE == 0) {\r\n            this._reportFilterService.StockSummaryAccountObj.StockSummaryAccount_ShowItemInGroupWiseReport = 0;\r\n        }\r\n\r\n        if (ITEMNAME == \"\") {\r\n            this._reportFilterService.StockSummaryAccountObj.StockSummaryAccount_MCODE = '%';\r\n        }\r\n\r\n        if (SUPPLIERNAME == \"\") {\r\n            this._reportFilterService.StockSummaryAccountObj.StockSummaryAccount_SUPPLIERCODE = '%';\r\n        }\r\n        let ShowItemInGroupWiseReport = this._reportFilterService.StockSummaryAccountObj.StockSummaryAccount_ShowItemInGroupWiseReport;\r\n\r\n\r\n        if (DETAILFORMAT == 0 && REPORTTYPE == 0 && ShowDetail == 0 && SHOWBATCHWISESTOCK == 0) {\r\n            multiplereportname = 'Stock Summary ReportAccount';\r\n        } else if (DETAILFORMAT == 0 && REPORTTYPE == 1 && ShowItemInGroupWiseReport == 0 && ShowDetail == 0 && SHOWBATCHWISESTOCK == 0) {\r\n            multiplereportname = 'Stock Summary ReportAccount_1';\r\n        } else if (DETAILFORMAT == 0 && REPORTTYPE == 1 && ShowItemInGroupWiseReport == 1 && ShowDetail == 0 && SHOWBATCHWISESTOCK == 0) {\r\n            multiplereportname = 'Stock Summary ReportAccount_2';\r\n        } else if (DETAILFORMAT == 0 && REPORTTYPE == 2 && ShowItemInGroupWiseReport == 0 && ShowDetail == 0 && SHOWBATCHWISESTOCK == 0) {\r\n            multiplereportname = 'Stock Summary ReportAccount_3';\r\n        } else if (DETAILFORMAT == 0 && REPORTTYPE == 2 && ShowItemInGroupWiseReport == 1 && ShowDetail == 0 && SHOWBATCHWISESTOCK == 0) {\r\n            multiplereportname = 'Stock Summary ReportAccount_4';\r\n        }\r\n        else if (DETAILFORMAT == 0 && REPORTTYPE == 0 && ShowDetail == 0 && SHOWBATCHWISESTOCK == 1) {\r\n            multiplereportname = 'Stock Summary ReportAccount_Batch';\r\n        } else if (DETAILFORMAT == 0 && REPORTTYPE == 1 && ShowItemInGroupWiseReport == 0 && ShowDetail == 0 && SHOWBATCHWISESTOCK == 1) {\r\n            multiplereportname = 'Stock Summary ReportAccount_1_Batch';\r\n        } else if (DETAILFORMAT == 0 && REPORTTYPE == 1 && ShowItemInGroupWiseReport == 1 && ShowDetail == 0 && SHOWBATCHWISESTOCK == 1) {\r\n            multiplereportname = 'Stock Summary ReportAccount_2_Batch';\r\n        } else if (DETAILFORMAT == 0 && REPORTTYPE == 2 && ShowItemInGroupWiseReport == 0 && ShowDetail == 0 && SHOWBATCHWISESTOCK == 1) {\r\n            multiplereportname = 'Stock Summary ReportAccount_3_Batch';\r\n        } else if (DETAILFORMAT == 0 && REPORTTYPE == 2 && ShowItemInGroupWiseReport == 1 && ShowDetail == 0 && SHOWBATCHWISESTOCK == 1) {\r\n            multiplereportname = 'Stock Summary ReportAccount_4_Batch';\r\n        }\r\n        else if (DETAILFORMAT == 0 && REPORTTYPE == 0 && ShowDetail == 1) {\r\n            multiplereportname = 'Stock Summary ReportAccount_A';\r\n        } else if (DETAILFORMAT == 0 && REPORTTYPE == 1 && ShowItemInGroupWiseReport == 0 && ShowDetail == 1) {\r\n            multiplereportname = 'Stock Summary ReportAccount_1A';\r\n        } else if (DETAILFORMAT == 0 && REPORTTYPE == 1 && ShowItemInGroupWiseReport == 1 && ShowDetail == 1) {\r\n            multiplereportname = 'Stock Summary ReportAccount_2A';\r\n        } else if (DETAILFORMAT == 0 && REPORTTYPE == 2 && ShowItemInGroupWiseReport == 0 && ShowDetail == 1) {\r\n            multiplereportname = 'Stock Summary ReportAccount_3A';\r\n        } else if (DETAILFORMAT == 0 && REPORTTYPE == 2 && ShowItemInGroupWiseReport == 1 && ShowDetail == 1) {\r\n            multiplereportname = 'Stock Summary ReportAccount_4A';\r\n        }\r\n\r\n        if (DETAILFORMAT == 1 && REPORTTYPE == 0 && ShowDetail == 0 && SHOWBATCHWISESTOCK == 0) {\r\n            multiplereportname = 'Stock Summary Report DetailAccount';\r\n        } else if (DETAILFORMAT == 1 && REPORTTYPE == 1 && ShowItemInGroupWiseReport == 0 && ShowDetail == 0 && SHOWBATCHWISESTOCK == 0) {\r\n            multiplereportname = 'Stock Summary Report DetailAccount_1';\r\n        } else if (DETAILFORMAT == 1 && REPORTTYPE == 1 && ShowItemInGroupWiseReport == 1 && ShowDetail == 0 && SHOWBATCHWISESTOCK == 0) {\r\n            multiplereportname = 'Stock Summary Report DetailAccount_2';\r\n        } else if (DETAILFORMAT == 1 && REPORTTYPE == 2 && ShowItemInGroupWiseReport == 0 && ShowDetail == 0 && SHOWBATCHWISESTOCK == 0) {\r\n            multiplereportname = 'Stock Summary Report DetailAccount_3';\r\n        } else if (DETAILFORMAT == 1 && REPORTTYPE == 2 && ShowItemInGroupWiseReport == 1 && ShowDetail == 0 && SHOWBATCHWISESTOCK == 0) {\r\n            multiplereportname = 'Stock Summary Report DetailAccount_4';\r\n        }\r\n        else if (DETAILFORMAT == 1 && REPORTTYPE == 0 && ShowDetail == 0 && SHOWBATCHWISESTOCK == 1) {\r\n            multiplereportname = 'Stock Summary Report DetailAccount_Batch';\r\n        } else if (DETAILFORMAT == 1 && REPORTTYPE == 1 && ShowItemInGroupWiseReport == 0 && ShowDetail == 0 && SHOWBATCHWISESTOCK == 1) {\r\n            multiplereportname = 'Stock Summary Report DetailAccount_1_Batch';\r\n        } else if (DETAILFORMAT == 1 && REPORTTYPE == 1 && ShowItemInGroupWiseReport == 1 && ShowDetail == 0 && SHOWBATCHWISESTOCK == 1) {\r\n            multiplereportname = 'Stock Summary Report DetailAccount_2_Batch';\r\n        } else if (DETAILFORMAT == 1 && REPORTTYPE == 2 && ShowItemInGroupWiseReport == 0 && ShowDetail == 0 && SHOWBATCHWISESTOCK == 1) {\r\n            multiplereportname = 'Stock Summary Report DetailAccount_3_Batch';\r\n        } else if (DETAILFORMAT == 1 && REPORTTYPE == 2 && ShowItemInGroupWiseReport == 1 && ShowDetail == 0 && SHOWBATCHWISESTOCK == 1) {\r\n            multiplereportname = 'Stock Summary Report DetailAccount_4_Batch';\r\n        }\r\n        else if (DETAILFORMAT == 1 && REPORTTYPE == 0 && ShowDetail == 1) {\r\n            multiplereportname = 'Stock Summary Report DetailAccount_A';\r\n        } else if (DETAILFORMAT == 1 && REPORTTYPE == 1 && ShowItemInGroupWiseReport == 0 && ShowDetail == 1) {\r\n            multiplereportname = 'Stock Summary Report DetailAccount_1A';\r\n        } else if (DETAILFORMAT == 1 && REPORTTYPE == 1 && ShowItemInGroupWiseReport == 1 && ShowDetail == 1) {\r\n            multiplereportname = 'Stock Summary Report DetailAccount_2A';\r\n        } else if (DETAILFORMAT == 1 && REPORTTYPE == 2 && ShowItemInGroupWiseReport == 0 && ShowDetail == 1) {\r\n            multiplereportname = 'Stock Summary Report DetailAccount_3A';\r\n        } else if (DETAILFORMAT == 1 && REPORTTYPE == 2 && ShowItemInGroupWiseReport == 1 && ShowDetail == 1) {\r\n            multiplereportname = 'Stock Summary Report DetailAccount_4A';\r\n        }\r\n\r\n        //console.log(\"@@multiplereportname\", multiplereportname)\r\n        this.reportdataEmit.emit({\r\n            status: res, data: {\r\n                reportname: multiplereportname, reportparam: {\r\n                    DATE1: this._reportFilterService.StockSummaryAccountObj.StockSummaryAccount_DATE1,\r\n                    DATE2: this._reportFilterService.StockSummaryAccountObj.StockSummaryAccount_DATE2,\r\n                    DIV: this.userProfile.CompanyInfo.INITIAL,\r\n                    COMID: this.userProfile.CompanyInfo.COMPANYID,\r\n                    COMPANYID: this.userProfile.CompanyInfo.COMPANYID,\r\n                    PHISCALID: this.userProfile.CompanyInfo.PhiscalID,\r\n                    MGROUP: '%',\r\n                    MCAT: this._reportFilterService.StockSummaryAccountObj.StockSummaryAccount_BRANDID ? this._reportFilterService.StockSummaryAccountObj.StockSummaryAccount_BRANDID : '%',\r\n                    PTYPE: 100,\r\n                    ACID: this._reportFilterService.StockSummaryAccountObj.StockSummaryAccount_SUPPLIERCODE ? this._reportFilterService.StockSummaryAccountObj.StockSummaryAccount_SUPPLIERCODE : '%',\r\n                    REPORTYTYPE: this._reportFilterService.StockSummaryAccountObj.StockSummaryAccount_REPORTTYPE ? this._reportFilterService.StockSummaryAccountObj.StockSummaryAccount_REPORTTYPE : '0',\r\n                    SUPCODE: this._reportFilterService.StockSummaryAccountObj.StockSummaryAccount_SUPPLIERCODE ? this._reportFilterService.StockSummaryAccountObj.StockSummaryAccount_SUPPLIERCODE : '%',\r\n                    MCODE: this._reportFilterService.StockSummaryAccountObj.StockSummaryAccount_MCODE ? this._reportFilterService.StockSummaryAccountObj.StockSummaryAccount_MCODE : '%',\r\n                    REPORTTYPE: this._reportFilterService.StockSummaryAccountObj.StockSummaryAccount_REPORTTYPE ? this._reportFilterService.StockSummaryAccountObj.StockSummaryAccount_REPORTTYPE : 0,\r\n                    ShowItemInGroupWiseReport: this._reportFilterService.StockSummaryAccountObj.StockSummaryAccount_ShowItemInGroupWiseReport ? this._reportFilterService.StockSummaryAccountObj.StockSummaryAccount_ShowItemInGroupWiseReport : 0,\r\n                    ITEMNAME: this._reportFilterService.StockSummaryAccountObj.StockSummaryAccount_ITEM ? this._reportFilterService.StockSummaryAccountObj.StockSummaryAccount_ITEM : \"\",\r\n                    SUPPLIERNAME: this._reportFilterService.StockSummaryAccountObj.StockSummaryAccount_SUPPLIER ? this._reportFilterService.StockSummaryAccountObj.StockSummaryAccount_SUPPLIER : \"\",\r\n                    VCHR: '%',\r\n                    DETAILFORMAT: this._reportFilterService.StockSummaryAccountObj.StockSummaryAccount_DETAILFORMAT ? this._reportFilterService.StockSummaryAccountObj.StockSummaryAccount_DETAILFORMAT : 0,\r\n                    ReportMode: this._reportFilterService.StockSummaryAccountObj.StockSummaryAccount_ReportMode ? this._reportFilterService.StockSummaryAccountObj.StockSummaryAccount_ReportMode : 0,\r\n                    WAREHOUSE: this._reportFilterService.StockSummaryAccountObj.StockSummaryAccount_WAREHOUSE ? this._reportFilterService.StockSummaryAccountObj.StockSummaryAccount_WAREHOUSE : '%',\r\n                    ShowDetail: this._reportFilterService.StockSummaryAccountObj.StockSummaryAccount_SHOWDETAIL ? this._reportFilterService.StockSummaryAccountObj.StockSummaryAccount_SHOWDETAIL : 0,\r\n                    SHOWBATCHWISESTOCK: this._reportFilterService.StockSummaryAccountObj.StockSummaryAccount_SHOWBATCHWISE ? this._reportFilterService.StockSummaryAccountObj.StockSummaryAccount_SHOWBATCHWISE : 0,\r\n                    ShowAltUnitStockReport: this._reportFilterService.StockSummaryAccountObj.StockSummaryAccount_SHOWALTUNIT ? this._reportFilterService.StockSummaryAccountObj.StockSummaryAccount_SHOWALTUNIT : 0,\r\n                    SHOWGROUPING: this._reportFilterService.StockSummaryAccountObj.StockSummaryAccount_SHOWGROUPING ? this._reportFilterService.StockSummaryAccountObj.StockSummaryAccount_SHOWGROUPING : 0,\r\n                }\r\n            }\r\n        });\r\n        if (res == \"ok\") {\r\n            this._reportFilterService.StockSummaryAccount_loadedTimes = this._reportFilterService.StockSummaryAccount_loadedTimes + 1;\r\n        }\r\n    }\r\n\r\n    ProductEnterClicked() {\r\n        this.gridPopupSettingsForProduct = this.masterService.getGenericGridPopUpSettings('ProductList');\r\n        this.genericGridProduct.show();\r\n    }\r\n\r\n    dblClickProductSelect(product) {\r\n        this._reportFilterService.StockSummaryAccountObj.StockSummaryAccount_MCODE = product.MCODE;\r\n        this._reportFilterService.StockSummaryAccountObj.StockSummaryAccount_ITEM = product.DESCA;\r\n    }\r\n\r\n    BrandEnterClicked() {\r\n        this.BrandList();\r\n        this.genericGridBrand.show();\r\n    }\r\n\r\n    BrandList() {\r\n        this.gridPopupSettingsForBrand = this.masterService.getGenericGridPopUpSettings('BrandList');\r\n    }\r\n\r\n    dblClickBrandSelect(brand) {\r\n        this._reportFilterService.StockSummaryAccountObj.StockSummaryAccount_BRANDID = brand.BRANDCODE;\r\n        this._reportFilterService.StockSummaryAccountObj.StockSummaryAccount_BRANDNAME = brand.BRANDNAME;\r\n    }\r\n\r\n    SupplierEnterClicked() {\r\n        this.gridPopupSettingsForSupplier = this.masterService.getGenericGridPopUpSettings('SupplierList');\r\n        this.genericGridSupplier.show();\r\n    }\r\n\r\n    dblClickSupplierSelect(supplier) {\r\n        this._reportFilterService.StockSummaryAccountObj.StockSummaryAccount_SUPPLIERCODE = supplier.ACID;\r\n        this._reportFilterService.StockSummaryAccountObj.StockSummaryAccount_SUPPLIER = supplier.ACNAME;\r\n    }\r\n\r\n    WarehouseEnterClicked() {\r\n        this.gridPopupSettingsForWarehouse = this.masterService.getGenericGridPopUpSettings('WarehouseList');\r\n        this.genericGridWarehouse.show();\r\n    }\r\n\r\n    dblClickWarehouseSelect(warehouse) {\r\n        this._reportFilterService.StockSummaryAccountObj.StockSummaryAccount_WAREHOUSE = warehouse.NAME;\r\n    }\r\n\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/pages/ReportDialogs/StockSummaryReportAccount/stocksummary-report-account.component.ts","import { Component, Inject, Output, EventEmitter, OnInit, ViewChild } from '@angular/core';\r\nimport { MdDialogRef, MD_DIALOG_DATA } from '@angular/material';\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { MasterRepo } from '../../../common/repositories';\r\nimport { Division } from '../../../common/interfaces';\r\nimport { ReportMainService } from '../../Reports/components/ReportMain/ReportMain.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { GenericPopUpComponent, GenericPopUpSettings } from '../../../common/popupLists/generic-grid/generic-popup-grid.component';\r\nimport { AlertService } from '../../../common/services/alert/alert.service';\r\nimport { AuthService } from '../../../common/services/permission';\r\nimport { ReportFilterService } from '../../../common/popupLists/report-filter/report-filter.service';\r\n\r\n\r\nexport interface DialogInfo {\r\n    header: string;\r\n    message: Observable<string>;\r\n}\r\n@Component({\r\n    selector: 'stock-valuation-report',\r\n    template: require('./stock-valuation-report.component.html'),\r\n    styles: [require('../../Reports/reportStyle.css'), require('../../modal-style.css')]\r\n})\r\n\r\nexport class StockValuationReport implements OnInit {\r\n\r\n    userProfile: any;\r\n    instanceWiseRepName: string = 'Stock Valuation Report';\r\n    @ViewChild(\"genericGridProduct\") genericGridProduct: GenericPopUpComponent;\r\n    gridPopupSettingsForProduct: GenericPopUpSettings = new GenericPopUpSettings();\r\n    @ViewChild(\"genericGridWarehouse\") genericGridWarehouse: GenericPopUpComponent;\r\n    gridPopupSettingsForWarehouse: GenericPopUpSettings = new GenericPopUpSettings();\r\n    @Output() reportdataEmit = new EventEmitter();\r\n    \r\n\r\n    constructor(private masterService: MasterRepo, private _authService: AuthService,\r\n        private _reportFilterService: ReportMainService, private arouter: Router, public _ActivatedRoute: ActivatedRoute,\r\n        public reportService: ReportFilterService, private alertService: AlertService,\r\n        public dialogref: MdDialogRef<StockValuationReport>,\r\n        @Inject(MD_DIALOG_DATA) public data: DialogInfo){\r\n           this.userProfile = this._authService.getUserProfile();\r\n\r\n    }\r\n\r\n    public ngOnInit() {\r\n        if (this._reportFilterService.StockValuationAccountObj.assignPrevioiusDate != true) {\r\n            this._reportFilterService.StockValuationAccountObj.StockValuationAccount_DATE1 = this.userProfile.CompanyInfo.FBDATE.split('T')[0];\r\n            this._reportFilterService.StockValuationAccountObj.StockValuationAccount_DATE2 = new Date().toJSON().split('T')[0];\r\n            this._reportFilterService.StockValuationAccountObj.StockValuationAccount_DIV = this.userProfile.CompanyInfo.INITIAL;\r\n            this._reportFilterService.StockValuationAccountObj.StockValuationAccount_SHOWDETAIL = '0';\r\n        }\r\n        this.changeEntryDate(this._reportFilterService.StockValuationAccountObj.StockValuationAccount_DATE1, \"AD\");\r\n    }\r\n\r\n    changeEntryDate(value, format: string) {\r\n        var adbs = require(\"ad-bs-converter\");\r\n        if (format == \"AD\") {\r\n            var adDate = (value.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n            var bsDate = adbs.ad2bs(adDate);\r\n            this._reportFilterService.StockValuationAccountObj.StockValuationAccount_BSDATE1 = this.masterService.toBSDate(value);\r\n        }\r\n        else if (format == \"BS\") {\r\n            var datearr = value.split('/');\r\n            const bsDate = datearr[2] + \"/\" + datearr[1] + \"/\" + datearr[0];\r\n            // var bsDate = (value.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n            var adDate = adbs.bs2ad(bsDate);\r\n            var Engdate = this.masterService.toADDate(value);\r\n            const Validatedata = this.masterService.ValidateNepaliDate(Engdate)\r\n            if (Validatedata == true) {\r\n                const bsDate1 = datearr[2] + \"/\" + datearr[1] + \"/\" + datearr[0];\r\n                var adDate1 = adbs.bs2ad(bsDate1);\r\n                this._reportFilterService.StockValuationAccountObj.StockValuationAccount_DATE1 = this.masterService.toADDate(value);\r\n            } else {\r\n                this.alertService.error(\"Cannot Change the date\");\r\n                return;\r\n            }\r\n\r\n\r\n        }\r\n    }\r\n\r\n    onload() {\r\n        this.DialogClosedResult(\"ok\");\r\n    }\r\n\r\n    closeReportBox() {\r\n        this.DialogClosedResult(\"Error!\");\r\n    }\r\n\r\n\r\n    public DialogClosedResult(res) {\r\n\r\n        if (res == \"ok\") {\r\n            this._reportFilterService.StockValuationAccountObj.assignPrevioiusDate = true;\r\n            let routepaths = this.arouter.url.split('/');\r\n            let activeurlpath2;\r\n            if (routepaths && routepaths.length) {\r\n                activeurlpath2 = routepaths[routepaths.length - 1]\r\n            }\r\n\r\n            if (this._reportFilterService.StockValuationAccount_loadedTimes == 0) {\r\n                this._reportFilterService.previouslyLoadedReportList.push(\r\n                    {\r\n                        reportname: 'Stock Valuation Report',\r\n                        activeurlpath: this.arouter.url,\r\n                        instanceWiseRepName: this.instanceWiseRepName + this._reportFilterService.StockValuationAccount_loadedTimes,\r\n                        activerurlpath2: activeurlpath2,\r\n                    });\r\n            } else {\r\n                this._reportFilterService.previouslyLoadedReportList.push(\r\n                    {\r\n                        reportname: 'Stock Valuation Report' + '_' + this._reportFilterService.StockValuationAccount_loadedTimes,\r\n                        activeurlpath: this.arouter.url,\r\n                        instanceWiseRepName: this.instanceWiseRepName + this._reportFilterService.StockValuationAccount_loadedTimes,\r\n                        activerurlpath2: activeurlpath2,\r\n                    });\r\n            }\r\n\r\n        }\r\n        let multiplereportname = 'Stock Valuation ReportAccount';\r\n        let ITEMNAME = this._reportFilterService.StockValuationAccountObj.StockValuationAccount_ITEM;\r\n        let ShowDetail = this._reportFilterService.StockValuationAccountObj.StockValuationAccount_SHOWDETAIL;\r\n        // let BARCODE = this._reportFilterService.StockValuationAccountObj.StockValuationAccount_BARCODE;\r\n\r\n\r\n       \r\n\r\n        if (ITEMNAME == \"\") {\r\n            this._reportFilterService.StockValuationAccountObj.StockValuationAccount_MCODE = '%';\r\n        }\r\n\r\n        \r\n\r\n    if(ShowDetail == 0){\r\n        multiplereportname = 'Stock Valuation ReportAccount';\r\n    }else if( ShowDetail == 1){\r\n        multiplereportname = 'Stock Valuation ReportAccount_1'\r\n    }\r\n        //console.log(\"@@multiplereportname\", multiplereportname)\r\n        this.reportdataEmit.emit({\r\n            status: res, data: {\r\n                reportname: multiplereportname, reportparam: {\r\n                    DATE: this._reportFilterService.StockValuationAccountObj.StockValuationAccount_DATE1,\r\n                    DIV: this.userProfile.CompanyInfo.INITIAL,\r\n                    COMID: this.userProfile.CompanyInfo.COMPANYID,\r\n                    COMPANYID: this.userProfile.CompanyInfo.COMPANYID,\r\n                    PHISCALID: this.userProfile.CompanyInfo.PhiscalID,\r\n                    MGROUP: '%',\r\n                    MCAT:'%',\r\n                    PTYPE: 100,\r\n                    MCODE: this._reportFilterService.StockValuationAccountObj.StockValuationAccount_MCODE ? this._reportFilterService.StockValuationAccountObj.StockValuationAccount_MCODE : '%',\r\n                    ITEMNAME: this._reportFilterService.StockValuationAccountObj.StockValuationAccount_ITEM ? this._reportFilterService.StockValuationAccountObj.StockValuationAccount_ITEM : \"\",\r\n                    SHOWDETAIL: this._reportFilterService.StockValuationAccountObj.StockValuationAccount_SHOWDETAIL ? this._reportFilterService.StockValuationAccountObj.StockValuationAccount_SHOWDETAIL : 0\r\n                }\r\n            }\r\n        });\r\n        if (res == \"ok\") {\r\n            this._reportFilterService.StockValuationAccount_loadedTimes = this._reportFilterService.StockValuationAccount_loadedTimes + 1;\r\n        }\r\n    }\r\n\r\n    ProductEnterClicked() {\r\n        this.gridPopupSettingsForProduct = this.masterService.getGenericGridPopUpSettings('ProductList');\r\n        this.genericGridProduct.show();\r\n    }\r\n\r\n    dblClickProductSelect(product) {\r\n        this._reportFilterService.StockValuationAccountObj.StockValuationAccount_MCODE = product.MCODE;\r\n        this._reportFilterService.StockValuationAccountObj.StockValuationAccount_ITEM = product.DESCA;\r\n        // this._reportFilterService.StockValuationAccountObj.StockValuationAccount_MENUCODE = product.MENUCODE;\r\n    }\r\n\r\n\r\n\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/pages/ReportDialogs/StockValuationReport/stock-valuation-report.component.ts","import { Component, Inject, Output, EventEmitter, OnInit, ViewChild } from '@angular/core';\r\nimport { MdDialogRef, MD_DIALOG_DATA } from '@angular/material';\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { MasterRepo } from '../../../common/repositories';\r\nimport { AuthService } from '../../../common/services/permission/authService.service';\r\nimport { ReportMainService } from '../../Reports/components/ReportMain/ReportMain.service';\r\nimport { Division } from '../../../common/interfaces';\r\nimport { Subscriber } from 'rxjs/Subscriber';\r\nimport { AlertService } from '../../../common/services/alert/alert.service';\r\nimport { GenericPopUpComponent, GenericPopUpSettings } from '../../../common/popupLists/generic-grid/generic-popup-grid.component';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\nexport interface DialogInfo {\r\n    header: string;\r\n    message: Observable<string>;\r\n}\r\n\r\n@Component({\r\n    selector: 'sub-ledger-acbase-report',\r\n    template: require('./sub-ledger-acbase-report.component.html'),\r\n    styles: [require('../../Reports/reportStyle.css'), require('../../modal-style.css')],\r\n})\r\n\r\nexport class SubLedgerAcbaseReport implements OnInit {\r\n    ReportParameters: any = <any>{};\r\n    division: any[] = [];\r\n    CostcenterList: any[] = [];\r\n    result: any;\r\n    account: any[] = [];\r\n    SubLedgerAcbase_result: boolean;\r\n    userProfile: any;\r\n    showSummaryTree: boolean;\r\n    showLedgerSegregation: boolean;\r\n    userSetting:any;\r\n    instanceWiseRepName:string='Sub Ledger Report ACBASE';\r\n\r\n    @Output() reportdataEmit = new EventEmitter();\r\n    @ViewChild(\"genericGridSubLedger\") genericGridSubLedger: GenericPopUpComponent;\r\n    gridPopupSettingsForSubLedgerList: GenericPopUpSettings = new GenericPopUpSettings();\r\n    @ViewChild(\"genericGridSubLedgerOnly\") genericGridSubLedgerOnly: GenericPopUpComponent;\r\n    gridPopupSettingsForSubLedgerListOnly: GenericPopUpSettings = new GenericPopUpSettings();\r\n\r\n    constructor(private masterService: MasterRepo, private _authService: AuthService,\r\n        private _reportFilterService: ReportMainService, private alertService: AlertService,\r\n        private arouter: Router, public _ActivatedRoute: ActivatedRoute,\r\n        public dialogref: MdDialogRef<SubLedgerAcbaseReport>,\r\n        @Inject(MD_DIALOG_DATA) public data: DialogInfo) {\r\n\r\n        this.userProfile = this._authService.getUserProfile();\r\n        this.userSetting = this._authService.getSetting();\r\n        // ////console.log(\"@@userSetting.ENABLESUBLEDGER\",this.userSetting.ENABLESUBLEDGER)\r\n\r\n        // this.masterService.getSubLedgerForReport().subscribe(res => {\r\n        //     this.account = res.data;\r\n        //     if (this.account.length != 0) {\r\n        //         this.SubLedgerAcbase_result = true;\r\n        //     } else {\r\n        //         this.SubLedgerAcbase_result = false;\r\n        //     }\r\n        // })\r\n\r\n\r\n\r\n        this.division = [];\r\n        this.division=[];\r\n        //let data: Array<IDivision> = [];\r\n        if(this.masterService.userSetting.userwisedivision == 1){\r\n          this.masterService.getDivisionFromRightPrivelege().subscribe(res=>{\r\n              if(res.status == 'ok'){\r\n                  this.division = res.result;\r\n              }\r\n          })\r\n        }\r\n        else{\r\n         this.masterService.getAllDivisions()\r\n         .subscribe(res => {\r\n           //////console.log(\"div\" + JSON.stringify(res));\r\n           this.division.push(<Division>res);\r\n         }, error => {\r\n           this.masterService.resolveError(error, \"divisions - getDivisions\");\r\n         });\r\n        }\r\n        this.masterService.getCostcenter().subscribe(res => {\r\n            this.CostcenterList = res;\r\n        })\r\n        // this.masterService.getAccDivList();\r\n    }\r\n\r\n    ngOnInit() {\r\n        this._ActivatedRoute.queryParams.subscribe(params => {\r\n            if (this._reportFilterService.SubLedgerAcbaseObj.assignPrevioiusDate != true) {\r\n                this.masterService.getAccDivList();\r\n        this._reportFilterService.SubLedgerAcbaseObj.SubLedgerAcbase_DATE1 = this.masterService.PhiscalObj.BeginDate.split('T')[0];\r\n                this.changeEntryDate(this._reportFilterService.SubLedgerAcbaseObj.SubLedgerAcbase_DATE1, \"AD\");\r\n        if (this.userProfile.CompanyInfo.ActualFY == this.masterService.PhiscalObj.PhiscalID) {\r\n                    this._reportFilterService.SubLedgerAcbaseObj.SubLedgerAcbase_DATE2 = new Date().toJSON().split('T')[0];\r\n                    this.changeEndDate(this._reportFilterService.SubLedgerAcbaseObj.SubLedgerAcbase_DATE2 , \"AD\");\r\n                  }\r\n                  else {\r\n\r\n                this._reportFilterService.SubLedgerAcbaseObj.SubLedgerAcbase_DATE2  = this.masterService.PhiscalObj.EndDate.split('T')[0];\r\n                        this.changeEndDate(this._reportFilterService.SubLedgerAcbaseObj.SubLedgerAcbase_DATE2 , \"AD\");\r\n\r\n\r\n                }\r\n                this._reportFilterService.SubLedgerAcbaseObj.SubLedgerAcbase_DIV = this.masterService.userProfile.CompanyInfo.INITIAL;\r\n                this.masterService.viewDivision.subscribe(() => {\r\n                    if(this.masterService.userSetting.userwisedivision==0 ||  this.masterService.showAll == true){ //ALL OPTION SELECTION IN DIVISION IN REPORT DIALOG BOX\r\n                      this._reportFilterService.SubLedgerAcbaseObj.SubLedgerAcbase_DIV='%';\r\n                  }else{\r\n                      this._reportFilterService.SubLedgerAcbaseObj.SubLedgerAcbase_DIV=this.masterService.userProfile.CompanyInfo.INITIAL;\r\n                  }\r\n                  })\r\n                this._reportFilterService.SubLedgerAcbaseObj.SubLedgerAcbase_CostCenter = '%';\r\n                this._reportFilterService.SubLedgerAcbaseObj.SubLedgerAcbase_REPORTTYPE = '0';\r\n                }\r\n\r\n                if(params.instancename){\r\n                    // ////console.log(\"@@[Sub Ledger Report acbase0]\",params.instancename,this._reportFilterService.reportDataStore[params.instancename].param.reportparam)\r\n                    this._reportFilterService.SubLedgerAcbaseObj.SubLedgerAcbase_DATE1=this._reportFilterService.reportDataStore[params.instancename].param.reportparam.DATE1;\r\n                    this._reportFilterService.SubLedgerAcbaseObj.SubLedgerAcbase_DATE2=this._reportFilterService.reportDataStore[params.instancename].param.reportparam.DATE2;\r\n                    this.changeEntryDate(this._reportFilterService.SubLedgerAcbaseObj.SubLedgerAcbase_DATE1, \"AD\");\r\n                    this.changeEndDate(this._reportFilterService.SubLedgerAcbaseObj.SubLedgerAcbase_DATE2, \"AD\");\r\n                    this._reportFilterService.SubLedgerAcbaseObj.SubLedgerAcbase_DIV=this._reportFilterService.reportDataStore[params.instancename].param.reportparam.DIV;\r\n                    this._reportFilterService.SubLedgerAcbaseObj.SubLedgerAcbase_CostCenter=this._reportFilterService.reportDataStore[params.instancename].param.reportparam.CCENTER;\r\n                    this._reportFilterService.SubLedgerAcbaseObj.SubLedgerAcbase_REPORTTYPE = this._reportFilterService.reportDataStore[params.instancename].param.reportparam.REPORTTYPE;\r\n                    this._reportFilterService.SubLedgerAcbaseObj.SubLedgerAcbase_SL_ACID=this._reportFilterService.reportDataStore[params.instancename].param.reportparam.SL_ACID;\r\n                    this._reportFilterService.SubLedgerAcbaseObj.SubLedgerAcbase_ACID=this._reportFilterService.reportDataStore[params.instancename].param.reportparam.ACID;\r\n                    this._reportFilterService.SubLedgerAcbaseObj.SubLedgerAcbase_ACCNAME=this._reportFilterService.reportDataStore[params.instancename].param.reportparam.ACCNAME;\r\n                    this._reportFilterService.SubLedgerAcbaseObj.SubLedgerAcbase_SL_ACNAME=this._reportFilterService.reportDataStore[params.instancename].param.reportparam.SL_ACNAME;\r\n                    this._reportFilterService.SubLedgerAcbaseObj.SubLedgerAcbase_LEDGERSEGREGATION = this._reportFilterService.reportDataStore[params.instancename].param.reportparam.LEDGERSEGREGATION;\r\n                    this._reportFilterService.SubLedgerAcbaseObj.SubLedgerAcbase_SHOWNDATE = this._reportFilterService.reportDataStore[params.instancename].param.reportparam.SHOWNDATE;\r\n                    this._reportFilterService.SubLedgerAcbaseObj.SubLedgerAcbase_SHOWSUMMARYINTREE = this._reportFilterService.reportDataStore[params.instancename].param.reportparam.SHOWSUMMARYINTREE;\r\n                }\r\n        });\r\n\r\n        this.checkValue();\r\n\r\n    }\r\n\r\n    changeEntryDate(value, format: string) {\r\n        var adbs = require(\"ad-bs-converter\");\r\n        if (format == \"AD\") {\r\n            var adDate = (value.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n            var bsDate = adbs.ad2bs(adDate);\r\n            this._reportFilterService.SubLedgerAcbaseObj.SubLedgerAcbase_BSDATE1 = this.masterService.toBSDate(value);\r\n        }\r\n        else if (format == \"BS\") {\r\n          var datearr = value.split('/');\r\n          const bsDate = datearr[2]+\"/\"+datearr[1]+\"/\"+datearr[0];\r\n            // var bsDate = (value.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n            var adDate = adbs.bs2ad(bsDate);\r\n            var Engdate = this.masterService.toADDate(value);\r\n              const Validatedata = this.masterService.ValidateNepaliDate(Engdate)\r\n              if(Validatedata == true){\r\n                const bsDate1 = datearr[2]+\"/\"+datearr[1]+\"/\"+datearr[0];\r\n                var adDate1 = adbs.bs2ad(bsDate1);\r\n                this._reportFilterService.SubLedgerAcbaseObj.SubLedgerAcbase_DATE1 = this.masterService.toADDate(value);\r\n              }else{\r\n                  this.alertService.error(\"Cannot Change the date\");\r\n                return;\r\n              }\r\n            // this._reportFilterService.SubLedgerAcbaseObj.SubLedgerAcbase_DATE1 = this.masterService.toBSDate(value);\r\n        }\r\n    }\r\n\r\n    changeEndDate(value, format: string) {\r\n        var adbs = require(\"ad-bs-converter\");\r\n        if (format == \"AD\") {\r\n            var adDate = (value.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n            var bsDate = adbs.ad2bs(adDate);\r\n            this._reportFilterService.SubLedgerAcbaseObj.SubLedgerAcbase_BSDATE2 =this.masterService.toBSDate(value);\r\n        }\r\n        else if (format == \"BS\") {\r\n          var datearr = value.split('/');\r\n          const bsDate = datearr[2]+\"/\"+datearr[1]+\"/\"+datearr[0];\r\n            // var bsDate = (value.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n            var adDate = adbs.bs2ad(bsDate);\r\n            var Engdate = this.masterService.toADDate(value);\r\n            const Validatedata = this.masterService.ValidateNepaliDate(Engdate)\r\n            if(Validatedata == true){\r\n              const bsDate1 = datearr[2]+\"/\"+datearr[1]+\"/\"+datearr[0];\r\n              var adDate1 = adbs.bs2ad(bsDate1);\r\n              this._reportFilterService.SubLedgerAcbaseObj.SubLedgerAcbase_DATE2 = this.masterService.toADDate(value);\r\n            }else{\r\n                this.alertService.error(\"Cannot Change the date\");\r\n              return;\r\n            }\r\n            // this._reportFilterService.SubLedgerAcbaseObj.SubLedgerAcbase_DATE2 = this.masterService.toBSDate(value);\r\n        }\r\n    }\r\n\r\n    onload() {\r\n        if(this._reportFilterService.SubLedgerAcbaseObj.SubLedgerAcbase_ACCNAME == '' || this._reportFilterService.SubLedgerAcbaseObj.SubLedgerAcbase_ACCNAME === undefined || this._reportFilterService.SubLedgerAcbaseObj.SubLedgerAcbase_ACCNAME === null){\r\n            this._reportFilterService.SubLedgerAcbaseObj.SubLedgerAcbase_ACID = '';\r\n        }\r\n        if(this._reportFilterService.SubLedgerAcbaseObj.SubLedgerAcbase_SL_ACNAME == '' || this._reportFilterService.SubLedgerAcbaseObj.SubLedgerAcbase_SL_ACNAME === undefined || this._reportFilterService.SubLedgerAcbaseObj.SubLedgerAcbase_SL_ACNAME === null){\r\n            this._reportFilterService.SubLedgerAcbaseObj.SubLedgerAcbase_SL_ACID = '';\r\n        }\r\n        if ((this._reportFilterService.SubLedgerAcbaseObj.SubLedgerAcbase_ACID === undefined ||\r\n                this._reportFilterService.SubLedgerAcbaseObj.SubLedgerAcbase_ACID == '' || this._reportFilterService.SubLedgerAcbaseObj.SubLedgerAcbase_ACCNAME == '')) {\r\n            this.alertService.info(\"Please Select Account\");\r\n            return;\r\n        }else{\r\n            this.DialogClosedResult(\"ok\");\r\n        }\r\n    }\r\n\r\n    closeReportBox() {\r\n        this.DialogClosedResult(\"Error!\");\r\n    }\r\n\r\n    public DialogClosedResult(res) {\r\n        this._reportFilterService.SubLedgerAcbaseObj.SubLedgerAcbase_DIV = (this._reportFilterService.SubLedgerAcbaseObj.SubLedgerAcbase_DIV == null || this._reportFilterService.SubLedgerAcbaseObj.SubLedgerAcbase_DIV == \"\") ? \"%\" : this._reportFilterService.SubLedgerAcbaseObj.SubLedgerAcbase_DIV;\r\n\r\n        let multipleReportFormateName = '';\r\n        // ////console.log(\"@@this.userSetting.ENABLESUBLEDGER\",this.userSetting.ENABLESUBLEDGER)\r\n            // if (this._reportFilterService.SubLedgerAcbaseObj.SubLedgerAcbase_REPORTTYPE == \"0\") {\r\n                multipleReportFormateName = 'Sub Ledger Report ACBASE'\r\n            // } else {\r\n            //     multipleReportFormateName = 'Sub Ledger Report ACBASE_1'\r\n            // }\r\n\r\n\r\n        if (this._reportFilterService.SubLedgerAcbaseObj.SubLedgerAcbase_SHOWSUMMARYINTREE == true && this._reportFilterService.SubLedgerAcbaseObj.SubLedgerAcbase_REPORTTYPE == \"0\") {\r\n            this._reportFilterService.SubLedgerAcbaseObj.SubLedgerAcbase_SHOWSUMMARYINTREE = 1;\r\n        } else {\r\n            this._reportFilterService.SubLedgerAcbaseObj.SubLedgerAcbase_SHOWSUMMARYINTREE = 0;\r\n        }\r\n\r\n        // if (this._reportFilterService.SubLedgerAcbaseObj.SubLedgerAcbase_LEDGERSEGREGATION == true && this._reportFilterService.SubLedgerAcbaseObj.SubLedgerAcbase_REPORTTYPE == \"1\") {\r\n        //     this._reportFilterService.SubLedgerAcbaseObj.SubLedgerAcbase_LEDGERSEGREGATION = 1;\r\n        // } else {\r\n        //     this._reportFilterService.SubLedgerAcbaseObj.SubLedgerAcbase_LEDGERSEGREGATION = 0;\r\n        // }\r\n\r\n        if (this._reportFilterService.SubLedgerAcbaseObj.SubLedgerAcbase_SHOWNDATE == true) {\r\n            this._reportFilterService.SubLedgerAcbaseObj.SubLedgerAcbase_SHOWNDATE = 1;\r\n        } else {\r\n            this._reportFilterService.SubLedgerAcbaseObj.SubLedgerAcbase_SHOWNDATE = 0;\r\n        }\r\n\r\n        if (this._reportFilterService.SubLedgerAcbaseObj.SubLedgerAcbase_DIV && this._reportFilterService.SubLedgerAcbaseObj.SubLedgerAcbase_DIV == '%') {\r\n            this._reportFilterService.SubLedgerAcbaseObj.SubLedgerAcbase_DIVISIONNAME = 'All';\r\n          }else if( this._reportFilterService.SubLedgerAcbaseObj.SubLedgerAcbase_DIV && this._reportFilterService.SubLedgerAcbaseObj.SubLedgerAcbase_DIV!= '%'){\r\n            let abc = this.division.filter(x=>x.INITIAL == this._reportFilterService.SubLedgerAcbaseObj.SubLedgerAcbase_DIV);\r\n              if(abc && abc.length>0 && abc[0]){\r\n                this._reportFilterService.SubLedgerAcbaseObj.SubLedgerAcbase_DIVISIONNAME = abc[0].NAME;\r\n              }else{\r\n                this._reportFilterService.SubLedgerAcbaseObj.SubLedgerAcbase_DIVISIONNAME = '';\r\n              }\r\n          }else{\r\n            this._reportFilterService.SubLedgerAcbaseObj.SubLedgerAcbase_DIVISIONNAME = '';\r\n          }\r\n\r\n          if (this._reportFilterService.SubLedgerAcbaseObj.SubLedgerAcbase_CostCenter && this._reportFilterService.SubLedgerAcbaseObj.SubLedgerAcbase_CostCenter == '%') {\r\n            this._reportFilterService.SubLedgerAcbaseObj.SubLedgerAcbase_COSTCENTERDISPLAYNAME = 'All';\r\n          }else if (this._reportFilterService.SubLedgerAcbaseObj.SubLedgerAcbase_CostCenter != '%') {\r\n            let abc = this.CostcenterList.filter(x=>x.CCID == this._reportFilterService.SubLedgerAcbaseObj.SubLedgerAcbase_CostCenter);\r\n            if(abc && abc.length>0 && abc[0]){\r\n              this._reportFilterService.SubLedgerAcbaseObj.SubLedgerAcbase_COSTCENTERDISPLAYNAME = abc[0].COSTCENTERNAME;\r\n            }else{\r\n              this._reportFilterService.SubLedgerAcbaseObj.SubLedgerAcbase_COSTCENTERDISPLAYNAME = '';\r\n            }\r\n          } else {\r\n            this._reportFilterService.SubLedgerAcbaseObj.SubLedgerAcbase_COSTCENTERDISPLAYNAME = '';\r\n          }\r\n\r\n        if(res == \"ok\"){\r\n        this._reportFilterService.SubLedgerAcbaseObj.assignPrevioiusDate = true;\r\n        let routepaths = this.arouter.url.split('/');\r\n        let activeurlpath2;\r\n              if(routepaths&& routepaths.length){\r\n                activeurlpath2=routepaths[routepaths.length-1]\r\n              }\r\n\r\n              if(this._reportFilterService.SubLedgerAcbase_loadedTimes == 0){\r\n                this._reportFilterService.previouslyLoadedReportList.push(\r\n                    {reportname: 'Sub Ledger - Summary Report',\r\n                    activeurlpath: this.arouter.url,\r\n                    activerurlpath2: activeurlpath2,\r\n                    instanceWiseRepName:this.instanceWiseRepName +this._reportFilterService.SubLedgerAcbase_loadedTimes,\r\n                });\r\n            }else{\r\n                this._reportFilterService.previouslyLoadedReportList.push(\r\n                    {reportname: 'Sub Ledger - Summary Report'+'_'+this._reportFilterService.SubLedgerAcbase_loadedTimes,\r\n                    activeurlpath: this.arouter.url,\r\n                    activerurlpath2: activeurlpath2,\r\n                    instanceWiseRepName:this.instanceWiseRepName +this._reportFilterService.SubLedgerAcbase_loadedTimes,\r\n                });\r\n            }\r\n\r\n        }\r\n\r\n        this.reportdataEmit.emit({\r\n            status: res, data: {\r\n                REPORTDISPLAYNAME : 'Sub Ledger - Summary Report',\r\n                reportname: multipleReportFormateName,\r\n                instanceWiseRepName:this.instanceWiseRepName+this._reportFilterService.SubLedgerAcbase_loadedTimes,\r\n                reportparam: {\r\n                    MAINLEDGERDISPLAYNAME : this._reportFilterService.SubLedgerAcbaseObj.SubLedgerAcbase_ACCNAME?this._reportFilterService.SubLedgerAcbaseObj.SubLedgerAcbase_ACCNAME:'',\r\n                    DATE1: this._reportFilterService.SubLedgerAcbaseObj.SubLedgerAcbase_DATE1,\r\n                    DATE2: this._reportFilterService.SubLedgerAcbaseObj.SubLedgerAcbase_DATE2,\r\n                    BSDATE1: this._reportFilterService.SubLedgerAcbaseObj.SubLedgerAcbase_BSDATE1,\r\n                    BSDATE2: this._reportFilterService.SubLedgerAcbaseObj.SubLedgerAcbase_BSDATE2,\r\n                    DIV: this._reportFilterService.SubLedgerAcbaseObj.SubLedgerAcbase_DIV ? this._reportFilterService.SubLedgerAcbaseObj.SubLedgerAcbase_DIV :'%',\r\n                    PHISCALID: this.masterService.PhiscalObj.PhiscalID,\r\n                    COMID: this.masterService.userProfile.CompanyInfo.COMPANYID,\r\n                    SHOWSUMMARYINTREE: this._reportFilterService.SubLedgerAcbaseObj.SubLedgerAcbase_SHOWSUMMARYINTREE,\r\n                    REPORTTYPE: 0,\r\n                    LEDGERSEGREGATION: 0,\r\n                    ACID: this._reportFilterService.SubLedgerAcbaseObj.SubLedgerAcbase_ACID ? this._reportFilterService.SubLedgerAcbaseObj.SubLedgerAcbase_ACID :'%',\r\n                    CCENTER: this._reportFilterService.SubLedgerAcbaseObj.SubLedgerAcbase_CostCenter ? this._reportFilterService.SubLedgerAcbaseObj.SubLedgerAcbase_CostCenter :'%',\r\n                    ACCNAME: this._reportFilterService.SubLedgerAcbaseObj.SubLedgerAcbase_ACCNAME,\r\n                    SL_ACID :'%',\r\n                    SHOWNDATE: this._reportFilterService.SubLedgerAcbaseObj.SubLedgerAcbase_SHOWNDATE?this._reportFilterService.SubLedgerAcbaseObj.SubLedgerAcbase_SHOWNDATE:0,\r\n                    SL_ACNAME: this._reportFilterService.SubLedgerAcbaseObj.SubLedgerAcbase_SL_ACNAME,\r\n                    DIVISIONNAME : this._reportFilterService.SubLedgerAcbaseObj.SubLedgerAcbase_DIVISIONNAME ? this._reportFilterService.SubLedgerAcbaseObj.SubLedgerAcbase_DIVISIONNAME : '',\r\n                    COSTCENTERDISPLAYNAME: this._reportFilterService.SubLedgerAcbaseObj.SubLedgerAcbase_COSTCENTERDISPLAYNAME?this._reportFilterService.SubLedgerAcbaseObj.SubLedgerAcbase_COSTCENTERDISPLAYNAME:'',\r\n                }\r\n            }\r\n        });\r\n        if(res == \"ok\"){\r\n            this._reportFilterService.SubLedgerAcbase_loadedTimes = this._reportFilterService.SubLedgerAcbase_loadedTimes+1;\r\n        }\r\n    }\r\n\r\n    dropListItem = (keyword: any): Observable<Array<any>> => {\r\n        return new Observable((observer: Subscriber<Array<any>>) => {\r\n            this.masterService.getSubLedgerForReport().map(data => {\r\n                this.result = data.result;\r\n                return this.result.filter(ac => ac.ACNAME.toUpperCase().indexOf(keyword.toUpperCase()) > -1);\r\n            }\r\n            ).subscribe(res => { observer.next(res); })\r\n        }).share();\r\n    }\r\n\r\n    accodeChanged(value: string) {\r\n        var item;\r\n        item = this.masterService.accountList.find(x => x.ACCODE == value);\r\n        this._reportFilterService.SubLedgerAcbaseObj.SubLedgerAcbase_ACCNAME = '';\r\n        if (item) {\r\n            value = item.ACNAME;\r\n            //console.log(value + \"****\");\r\n            this._reportFilterService.SubLedgerAcbaseObj.SubLedgerAcbase_ACCNAME = value;\r\n        }\r\n    }\r\n\r\n    onEnterAcnameChange(value) {\r\n        this.accodeChanged(value);\r\n    }\r\n\r\n    itemChanged(value: any) {\r\n        //console.log({ itemChangedValue: value });\r\n        if (typeof (value) === \"object\") {\r\n            this._reportFilterService.SubLedgerAcbaseObj.SubLedgerAcbase_ACCNAME = value.ACNAME;\r\n            this._reportFilterService.SubLedgerAcbaseObj.SubLedgerAcbase_ACCODE = value.ACCODE;\r\n            this._reportFilterService.SubLedgerAcbaseObj.SubLedgerAcbase_ACID = value.ACID;\r\n        }\r\n    }\r\n\r\n    checkValue() {\r\n        if (this._reportFilterService.SubLedgerAcbaseObj.SubLedgerAcbase_REPORTTYPE == \"0\") {\r\n            this.showSummaryTree = true\r\n        } else {\r\n            this.showSummaryTree = false;\r\n        }\r\n\r\n        if (this._reportFilterService.SubLedgerAcbaseObj.SubLedgerAcbase_REPORTTYPE == \"1\") {\r\n            this.showLedgerSegregation = true;\r\n        } else {\r\n            this.showLedgerSegregation = false;\r\n        }\r\n    }\r\n\r\n    AccountEnterClicked() {\r\n        if(this.userSetting.ENABLESUBLEDGER==2){\r\n            this.gridPopupSettingsForSubLedgerList = this.masterService.getGenericGridPopUpSettings('MainLedgerListAtSettingTwo');\r\n            this.genericGridSubLedger.show();\r\n        }else{\r\n            this.gridPopupSettingsForSubLedgerList = this.masterService.getGenericGridPopUpSettings('MainLedgerListAtSettingOne');\r\n            this.genericGridSubLedger.show();\r\n        }\r\n    }\r\n\r\n    dblClickAccountSelect(account) {\r\n        this._reportFilterService.SubLedgerAcbaseObj.SubLedgerAcbase_ACID = account.ACID;\r\n        this._reportFilterService.SubLedgerAcbaseObj.SubLedgerAcbase_ACCNAME = account.ACNAME;\r\n    }\r\n\r\n    SubLedgerEnterClicked() {\r\n        if(this.userSetting.ENABLESUBLEDGER==2){\r\n            this.gridPopupSettingsForSubLedgerListOnly = this.masterService.getGenericGridPopUpSettings('SubLedgerListAtSettingTwo');\r\n            this.genericGridSubLedgerOnly.show();\r\n        }else{\r\n            this.gridPopupSettingsForSubLedgerListOnly = this.masterService.getGenericGridPopUpSettings('SubLedgerListAtSettingOne');\r\n            this.genericGridSubLedgerOnly.show();\r\n        }\r\n    }\r\n\r\n    dblClickSubLedgerSelect(account) {\r\n        this._reportFilterService.SubLedgerAcbaseObj.SubLedgerAcbase_SL_ACID = account.ACID;\r\n        this._reportFilterService.SubLedgerAcbaseObj.SubLedgerAcbase_SL_ACNAME = account.ACNAME;\r\n    }\r\n\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/pages/ReportDialogs/SubLedgerAcbaseReport/sub-ledger-acbase-report.component.ts","import { Component, Inject, Output, EventEmitter, OnInit, ViewChild } from '@angular/core';\r\nimport { MdDialogRef, MD_DIALOG_DATA } from '@angular/material';\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { MasterRepo } from '../../../common/repositories';\r\nimport { AuthService } from '../../../common/services/permission/authService.service';\r\nimport { ReportMainService } from '../../Reports/components/ReportMain/ReportMain.service';\r\nimport { Division } from '../../../common/interfaces';\r\nimport { Subscriber } from 'rxjs/Subscriber';\r\nimport { AlertService } from '../../../common/services/alert/alert.service';\r\nimport { GenericPopUpComponent, GenericPopUpSettings } from '../../../common/popupLists/generic-grid/generic-popup-grid.component';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ReportFilterService } from '../../../common/popupLists/report-filter/report-filter.service';\r\n\r\nexport interface DialogInfo {\r\n    header: string;\r\n    message: Observable<string>;\r\n}\r\n\r\n@Component({\r\n    selector: 'sub-ledger-report',\r\n    template: require('./sub-ledger-report.component.html'),\r\n    styles: [require('../../Reports/reportStyle.css'), require('../../modal-style.css')],\r\n})\r\n\r\nexport class SubLedgerReport implements OnInit {\r\n    ReportParameters: any = <any>{};\r\n    division: any[] = [];\r\n    CostcenterList: any[] = [];\r\n    result: any;\r\n    account: any[] = [];\r\n    SubLedger_result: boolean;\r\n    userProfile: any;\r\n    showSummaryTree: boolean;\r\n    showLedgerSegregation: boolean;\r\n    userSetting:any;\r\n    instanceWiseRepName:string='Sub Ledger Report';\r\n\r\n    @Output() reportdataEmit = new EventEmitter();\r\n    @ViewChild(\"genericGridSubLedger\") genericGridSubLedger: GenericPopUpComponent;\r\n    gridPopupSettingsForSubLedgerList: GenericPopUpSettings = new GenericPopUpSettings();\r\n    @ViewChild(\"genericGridSubLedgerOnly\") genericGridSubLedgerOnly: GenericPopUpComponent;\r\n    gridPopupSettingsForSubLedgerListOnly: GenericPopUpSettings = new GenericPopUpSettings();\r\n\r\n    constructor(private masterService: MasterRepo, private _authService: AuthService,\r\n        private _reportFilterService: ReportMainService, private alertService: AlertService,\r\n        private arouter: Router, public _ActivatedRoute: ActivatedRoute, public reportService: ReportFilterService,\r\n        public dialogref: MdDialogRef<SubLedgerReport>,\r\n        @Inject(MD_DIALOG_DATA) public data: DialogInfo) {\r\n\r\n        this.userProfile = this._authService.getUserProfile();\r\n        this.userSetting = this._authService.getSetting();\r\n\r\n        // ////console.log(\"@@userSetting.ENABLESUBLEDGER\",this.userSetting.ENABLESUBLEDGER)\r\n\r\n        // this.masterService.getSubLedgerForReport().subscribe(res => {\r\n        //     this.account = res.data;\r\n        //     if (this.account.length != 0) {\r\n        //         this.SubLedger_result = true;\r\n        //     } else {\r\n        //         this.SubLedger_result = false;\r\n        //     }\r\n        // })\r\n\r\n\r\n\r\n\r\n        this.division=[];\r\n        //let data: Array<IDivision> = [];\r\n        if(this.masterService.userSetting.userwisedivision == 1){\r\n          this.masterService.getDivisionFromRightPrivelege().subscribe(res=>{\r\n              if(res.status == 'ok'){\r\n                  this.division = res.result;\r\n              }\r\n          })\r\n        }\r\n        else{\r\n         this.masterService.getAllDivisions()\r\n         .subscribe(res => {\r\n           //////console.log(\"div\" + JSON.stringify(res));\r\n           this.division.push(<Division>res);\r\n         }, error => {\r\n           this.masterService.resolveError(error, \"divisions - getDivisions\");\r\n         });\r\n        }\r\n\r\n        this.masterService.getCostcenter().subscribe(res => {\r\n            this.CostcenterList = res;\r\n        })\r\n        // this.masterService.getAccDivList();\r\n\r\n        \r\n    }\r\n\r\n    ngOnInit() {\r\n        this._ActivatedRoute.queryParams.subscribe(params => {\r\n            const mode = params.mode;\r\n            // ////console.log(\"@@this.reportMasterService.drillParam.returnUrl\",params.mode,this.reportService.drillParam.returnUrl);\r\n            // ////console.log(\"@@this.reportMasterService.drillParam\",this.reportService.drillParam)\r\n            if (mode == \"DRILL\" && this.reportService.drillParam.returnUrl && this.reportService.drillParam.reportname=='Sub Ledger Report' && this._reportFilterService.SubLedgerObj.assignPrevioiusDate != true) {\r\n            this._reportFilterService.SubLedgerObj.SubLedger_DATE1=this.reportService.drillParam.reportparam.DATE1;\r\n            this._reportFilterService.SubLedgerObj.SubLedger_DATE2=this.reportService.drillParam.reportparam.DATE2;\r\n            this._reportFilterService.SubLedgerObj.SubLedger_DIV=this.reportService.drillParam.reportparam.DIV;\r\n            this._reportFilterService.SubLedgerObj.SubLedger_CostCenter=this.reportService.drillParam.reportparam.COSTCENTER;\r\n            this._reportFilterService.SubLedgerObj.SubLedger_REPORTTYPE = '1';\r\n            this._reportFilterService.SubLedgerObj.SubLedger_SL_ACID=this.reportService.drillParam.reportparam.SL_ACID;\r\n            this._reportFilterService.SubLedgerObj.SubLedger_ACID=this.reportService.drillParam.reportparam.ACID;\r\n            this._reportFilterService.SubLedgerObj.SubLedger_ACCNAME=this.reportService.drillParam.reportparam.ACCNAME;\r\n            this._reportFilterService.SubLedgerObj.SubLedger_SL_ACNAME=this.reportService.drillParam.reportparam.SL_ACNAME;\r\n\r\n            this.changeEntryDate(this._reportFilterService.SubLedgerObj.SubLedger_DATE1, \"AD\");\r\n            this.changeEndDate(this._reportFilterService.SubLedgerObj.SubLedger_DATE2, \"AD\");\r\n            this.checkValue();\r\n            }\r\n\r\n        else {\r\n\r\n            if (this._reportFilterService.SubLedgerObj.assignPrevioiusDate != true) {\r\n                this.masterService.getAccDivList();\r\n        this._reportFilterService.SubLedgerObj.SubLedger_DATE1 = this.masterService.PhiscalObj.BeginDate.split('T')[0];\r\n        this.changeEntryDate(this._reportFilterService.SubLedgerObj.SubLedger_DATE1, \"AD\");\r\n        if (this.userProfile.CompanyInfo.ActualFY == this.masterService.PhiscalObj.PhiscalID) {\r\n\r\n                    this._reportFilterService.SubLedgerObj.SubLedger_DATE2 = new Date().toJSON().split('T')[0];\r\n                    this.changeEndDate(this._reportFilterService.SubLedgerObj.SubLedger_DATE2 , \"AD\");\r\n                  }\r\n                  else {\r\n\r\n                this._reportFilterService.SubLedgerObj.SubLedger_DATE2  = this.masterService.PhiscalObj.EndDate.split('T')[0];\r\n                        this.changeEndDate(this._reportFilterService.SubLedgerObj.SubLedger_DATE2 , \"AD\");\r\n\r\n\r\n                }\r\n                this.masterService.viewDivision.subscribe(() => {\r\n                    if(this.masterService.userSetting.userwisedivision==0 ||  this.masterService.showAll == true){ //ALL OPTION SELECTION IN DIVISION IN REPORT DIALOG BOX\r\n                      this._reportFilterService.SubLedgerObj.SubLedger_DIV='%';\r\n                  }else{\r\n                    if(this.masterService.userSetting.userwisedivision==1 && this.division.length ==1){\r\n                        this._reportFilterService.SubLedgerObj.SubLedger_DIV=this.division[0].INITIAL;\r\n                      }else{\r\n                        this._reportFilterService.SubLedgerObj.SubLedger_DIV=this.masterService.userProfile.CompanyInfo.INITIAL;\r\n                    }\r\n                  }\r\n                  })\r\n                this._reportFilterService.SubLedgerObj.SubLedger_CostCenter = '%';\r\n                this._reportFilterService.SubLedgerObj.SubLedger_REPORTTYPE = '0';\r\n                this.checkValue();\r\n                this._reportFilterService.SubLedgerObj.SubLedger_HIDECOSTCENTER = 0;\r\n                }\r\n\r\n            if(params.instancename){\r\n                // ////console.log(\"@@[Sub Ledger Report0]\",params.instancename,this._reportFilterService.reportDataStore[params.instancename].param.reportparam)\r\n                this._reportFilterService.SubLedgerObj.SubLedger_DATE1=this._reportFilterService.reportDataStore[params.instancename].param.reportparam.DATE1;\r\n                this._reportFilterService.SubLedgerObj.SubLedger_DATE2=this._reportFilterService.reportDataStore[params.instancename].param.reportparam.DATE2;\r\n                this.changeEntryDate(this._reportFilterService.SubLedgerObj.SubLedger_DATE1, \"AD\");\r\n                this.changeEndDate(this._reportFilterService.SubLedgerObj.SubLedger_DATE2, \"AD\");\r\n                this._reportFilterService.SubLedgerObj.SubLedger_DIV=this._reportFilterService.reportDataStore[params.instancename].param.reportparam.DIV;\r\n                this._reportFilterService.SubLedgerObj.SubLedger_CostCenter=this._reportFilterService.reportDataStore[params.instancename].param.reportparam.COSTCENTER;\r\n                this._reportFilterService.SubLedgerObj.SubLedger_REPORTTYPE = this._reportFilterService.reportDataStore[params.instancename].param.reportparam.REPORTTYPE;\r\n                this._reportFilterService.SubLedgerObj.SubLedger_SL_ACID=this._reportFilterService.reportDataStore[params.instancename].param.reportparam.SL_ACID;\r\n                this._reportFilterService.SubLedgerObj.SubLedger_ACID=this._reportFilterService.reportDataStore[params.instancename].param.reportparam.ACID;\r\n                this._reportFilterService.SubLedgerObj.SubLedger_ACCNAME=this._reportFilterService.reportDataStore[params.instancename].param.reportparam.ACCNAME;\r\n                this._reportFilterService.SubLedgerObj.SubLedger_SL_ACNAME=this._reportFilterService.reportDataStore[params.instancename].param.reportparam.SL_ACNAME;\r\n                this._reportFilterService.SubLedgerObj.SubLedger_LEDGERSEGREGATION = this._reportFilterService.reportDataStore[params.instancename].param.reportparam.LEDGERSEGREGATION;\r\n                this._reportFilterService.SubLedgerObj.SubLedger_SHOWNDATE = this._reportFilterService.reportDataStore[params.instancename].param.reportparam.SHOWNDATE;\r\n                this._reportFilterService.SubLedgerObj.SubLedger_SHOWSUMMARYINTREE = this._reportFilterService.reportDataStore[params.instancename].param.reportparam.SHOWSUMMARYINTREE;\r\n            }\r\n        }\r\n\r\n    })\r\n}\r\n\r\nchangeEntryDate(value, format: string) {\r\n  var adbs = require(\"ad-bs-converter\");\r\n  if (format == \"AD\") {\r\n      var adDate = (value.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n      var bsDate = adbs.ad2bs(adDate);\r\n      this._reportFilterService.SubLedgerObj.SubLedger_BSDATE1 = this.masterService.toBSDate(value);\r\n  //console.log(\"FROM BSDATE1\",this._reportFilterService.SubLedgerObj.SubLedger_BSDATE1);\r\n    }\r\n\r\n  else if (format == \"BS\") {\r\n    var datearr = value.split('/');\r\n    const bsDate = datearr[2]+\"/\"+datearr[1]+\"/\"+datearr[0];\r\n      // var bsDate = (value.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n      var adDate = adbs.bs2ad(bsDate);\r\n      var Engdate = this.masterService.toBSDate(value);\r\n                const Validatedata = this.masterService.ValidateNepaliDate(Engdate)\r\n                if(Validatedata == true){\r\n                  const bsDate1 = datearr[2]+\"/\"+datearr[1]+\"/\"+datearr[0];\r\n                  var adDate1 = adbs.bs2ad(bsDate1);\r\n                  this._reportFilterService.SubLedgerObj.SubLedger_DATE1  = this.masterService.toADDate(value);\r\n                }else{\r\n                    this.alertService.error(\"Cannot Change the date\");\r\n                  return;\r\n                }\r\n    //   this._reportFilterService.SubLedgerObj.SubLedger_DATE1 = this.masterService.toBSDate(value);\r\n  }\r\n}\r\n\r\n\r\n    changeEndDate(value, format: string) {\r\n        var adbs = require(\"ad-bs-converter\");\r\n        if (format == \"AD\") {\r\n            var adDate = (value.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n            var bsDate = adbs.ad2bs(adDate);\r\n            this._reportFilterService.SubLedgerObj.SubLedger_BSDATE2 = this.masterService.toBSDate(value);\r\n        }\r\n        else if (format == \"BS\") {\r\n          var datearr = value.split('/');\r\n          const bsDate = datearr[2]+\"/\"+datearr[1]+\"/\"+datearr[0];\r\n            // var bsDate = (value.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n            var adDate = adbs.bs2ad(bsDate);\r\n            this._reportFilterService.SubLedgerObj.SubLedger_DATE2 = this.masterService.toADDate(value);\r\n        }\r\n    }\r\n\r\n    onload() {\r\n        if(this._reportFilterService.SubLedgerObj.SubLedger_ACCNAME == '' || this._reportFilterService.SubLedgerObj.SubLedger_ACCNAME === undefined || this._reportFilterService.SubLedgerObj.SubLedger_ACCNAME === null){\r\n            this._reportFilterService.SubLedgerObj.SubLedger_ACID = '';\r\n        }\r\n        if(this._reportFilterService.SubLedgerObj.SubLedger_SL_ACNAME == '' || this._reportFilterService.SubLedgerObj.SubLedger_SL_ACNAME === undefined || this._reportFilterService.SubLedgerObj.SubLedger_SL_ACNAME === null){\r\n            this._reportFilterService.SubLedgerObj.SubLedger_SL_ACID = '';\r\n        }\r\n        // ////console.log(\"@@acid\",this._reportFilterService.SubLedgerObj.SubLedger_ACID,this._reportFilterService.SubLedgerObj.SubLedger_ACCNAME)\r\n        // ////console.log(\"@@slacid\",this._reportFilterService.SubLedgerObj.SubLedger_SL_ACID,this._reportFilterService.SubLedgerObj.SubLedger_SL_ACNAME)\r\n\r\n        if(this._reportFilterService.SubLedgerObj.SubLedger_SL_ACID === undefined || this._reportFilterService.SubLedgerObj.SubLedger_SL_ACID == ''){\r\n            if ((this._reportFilterService.SubLedgerObj.SubLedger_ACID === undefined ||\r\n                this._reportFilterService.SubLedgerObj.SubLedger_ACID == '' || this._reportFilterService.SubLedgerObj.SubLedger_ACCNAME == '')) {\r\n            this.alertService.info(\"Please Select Account\");\r\n            return;\r\n        }\r\n    }else if(this._reportFilterService.SubLedgerObj.SubLedger_ACID === undefined || this._reportFilterService.SubLedgerObj.SubLedger_ACID == '' ){\r\n        if ((this._reportFilterService.SubLedgerObj.SubLedger_SL_ACID === undefined ||\r\n            this._reportFilterService.SubLedgerObj.SubLedger_SL_ACID == '' || this._reportFilterService.SubLedgerObj.SubLedger_SL_ACNAME == '')) {\r\n    this.alertService.info(\"Please Select Account\");\r\n    return;\r\n    }\r\n        }\r\n            this.DialogClosedResult(\"ok\");\r\n\r\n    }\r\n\r\n    closeReportBox() {\r\n        this.DialogClosedResult(\"Error!\");\r\n    }\r\n\r\n    public DialogClosedResult(res) {\r\n        this._reportFilterService.SubLedgerObj.SubLedger_DIV = (this._reportFilterService.SubLedgerObj.SubLedger_DIV == null || this._reportFilterService.SubLedgerObj.SubLedger_DIV == \"\") ? \"%\" : this._reportFilterService.SubLedgerObj.SubLedger_DIV;\r\n\r\n        let multipleReportFormateName = '';\r\n        // ////console.log(\"@@this.userSetting.ENABLESUBLEDGER\",this.userSetting.ENABLESUBLEDGER)\r\n\r\n            // if (this._reportFilterService.SubLedgerObj.SubLedger_REPORTTYPE == \"0\") {\r\n                multipleReportFormateName = 'Sub Ledger Report'\r\n            // } else {\r\n            //     multipleReportFormateName = 'Sub Ledger Report_1'\r\n            // }\r\n\r\n\r\n\r\n        if (this._reportFilterService.SubLedgerObj.SubLedger_SHOWSUMMARYINTREE == true && this._reportFilterService.SubLedgerObj.SubLedger_REPORTTYPE == \"0\") {\r\n            this._reportFilterService.SubLedgerObj.SubLedger_SHOWSUMMARYINTREE = 1;\r\n        } else {\r\n            this._reportFilterService.SubLedgerObj.SubLedger_SHOWSUMMARYINTREE = 0;\r\n        }\r\n\r\n        // if (this._reportFilterService.SubLedgerObj.SubLedger_LEDGERSEGREGATION == true && this._reportFilterService.SubLedgerObj.SubLedger_REPORTTYPE == \"1\") {\r\n        //     this._reportFilterService.SubLedgerObj.SubLedger_LEDGERSEGREGATION = 1;\r\n        // } else {\r\n        //     this._reportFilterService.SubLedgerObj.SubLedger_LEDGERSEGREGATION = 0;\r\n        // }\r\n\r\n        if (this._reportFilterService.SubLedgerObj.SubLedger_SHOWNDATE == true) {\r\n            this._reportFilterService.SubLedgerObj.SubLedger_SHOWNDATE = 1;\r\n        } else {\r\n            this._reportFilterService.SubLedgerObj.SubLedger_SHOWNDATE = 0;\r\n        }\r\n\r\n        if (this._reportFilterService.SubLedgerObj.SubLedger_DIV && this._reportFilterService.SubLedgerObj.SubLedger_DIV == '%') {\r\n            this._reportFilterService.SubLedgerObj.SubLedger_DIVISIONNAME = 'All';\r\n          }else if( this._reportFilterService.SubLedgerObj.SubLedger_DIV && this._reportFilterService.SubLedgerObj.SubLedger_DIV!= '%'){\r\n            let abc = this.division.filter(x=>x.INITIAL == this._reportFilterService.SubLedgerObj.SubLedger_DIV);\r\n              if(abc && abc.length>0 && abc[0]){\r\n                this._reportFilterService.SubLedgerObj.SubLedger_DIVISIONNAME = abc[0].NAME;\r\n              }else{\r\n                this._reportFilterService.SubLedgerObj.SubLedger_DIVISIONNAME = '';\r\n              }\r\n          }else{\r\n            this._reportFilterService.SubLedgerObj.SubLedger_DIVISIONNAME = '';\r\n          }\r\n\r\n          if (this._reportFilterService.SubLedgerObj.SubLedger_CostCenter && this._reportFilterService.SubLedgerObj.SubLedger_CostCenter == '%') {\r\n            this._reportFilterService.SubLedgerObj.SubLedger_COSTCENTERDISPLAYNAME = 'All';\r\n          }else if (this._reportFilterService.SubLedgerObj.SubLedger_CostCenter != '%') {\r\n            let abc = this.CostcenterList.filter(x=>x.CCID == this._reportFilterService.SubLedgerObj.SubLedger_CostCenter);\r\n            if(abc && abc.length>0 && abc[0]){\r\n              this._reportFilterService.SubLedgerObj.SubLedger_COSTCENTERDISPLAYNAME = abc[0].COSTCENTERNAME;\r\n            }else{\r\n              this._reportFilterService.SubLedgerObj.SubLedger_COSTCENTERDISPLAYNAME = '';\r\n            }\r\n          } else {\r\n            this._reportFilterService.SubLedgerObj.SubLedger_COSTCENTERDISPLAYNAME = '';\r\n          }\r\n\r\n        if(res == \"ok\"){\r\n        this._reportFilterService.SubLedgerObj.assignPrevioiusDate = true;\r\n        let routepaths = this.arouter.url.split('/');\r\n        let activeurlpath2;\r\n              if(routepaths&& routepaths.length){\r\n                activeurlpath2=routepaths[routepaths.length-1]\r\n              }\r\n              if(this._reportFilterService.SubLedger_loadedTimes == 0){\r\n                this._reportFilterService.previouslyLoadedReportList.push(\r\n                    {reportname: 'Sub Ledger - Ledger Report',\r\n                    activeurlpath: this.arouter.url,\r\n                    activerurlpath2: activeurlpath2,\r\n                    instanceWiseRepName:this.instanceWiseRepName +this._reportFilterService.SubLedger_loadedTimes,\r\n                });\r\n            }else{\r\n                this._reportFilterService.previouslyLoadedReportList.push(\r\n                    {reportname: 'Sub Ledger - Ledger Report'+'_'+this._reportFilterService.SubLedger_loadedTimes,\r\n                    activeurlpath: this.arouter.url,\r\n                    activerurlpath2: activeurlpath2,\r\n                    instanceWiseRepName:this.instanceWiseRepName +this._reportFilterService.SubLedger_loadedTimes,\r\n                });\r\n            }\r\n\r\n        }\r\n\r\n        this.reportdataEmit.emit({\r\n            status: res, data: {\r\n                REPORTDISPLAYNAME : 'Sub Ledger - Ledger Report',\r\n                reportname: multipleReportFormateName,\r\n                instanceWiseRepName:this.instanceWiseRepName+this._reportFilterService.SubLedger_loadedTimes,\r\n                reportparam: {\r\n                    MAINLEDGERDISPLAYNAME : this._reportFilterService.SubLedgerObj.SubLedger_ACCNAME?this._reportFilterService.SubLedgerObj.SubLedger_ACCNAME:'',\r\n                    SUBLEDGERDISPLAYNAME : this._reportFilterService.SubLedgerObj.SubLedger_SL_ACNAME ?this._reportFilterService.SubLedgerObj.SubLedger_SL_ACNAME:'',\r\n                    DATE1: this._reportFilterService.SubLedgerObj.SubLedger_DATE1,\r\n                    DATE2: this._reportFilterService.SubLedgerObj.SubLedger_DATE2,\r\n                    BSDATE1: this._reportFilterService.SubLedgerObj.SubLedger_BSDATE1,\r\n                    BSDATE2: this._reportFilterService.SubLedgerObj.SubLedger_BSDATE2,\r\n                    DIV: this._reportFilterService.SubLedgerObj.SubLedger_DIV ? this._reportFilterService.SubLedgerObj.SubLedger_DIV :'%',\r\n                    PHISCALID: this.masterService.PhiscalObj.PhiscalID,\r\n                    COMID: this.masterService.userProfile.CompanyInfo.COMPANYID,\r\n                    SHOWSUMMARYINTREE: this._reportFilterService.SubLedgerObj.SubLedger_SHOWSUMMARYINTREE,\r\n                    REPORTTYPE: 1,\r\n                    LEDGERSEGREGATION: 0,\r\n                    ACID: this._reportFilterService.SubLedgerObj.SubLedger_ACID ? this._reportFilterService.SubLedgerObj.SubLedger_ACID :'%',\r\n                    CCENTER: this._reportFilterService.SubLedgerObj.SubLedger_CostCenter ? this._reportFilterService.SubLedgerObj.SubLedger_CostCenter :'%',\r\n                    ACCNAME: this._reportFilterService.SubLedgerObj.SubLedger_ACCNAME,\r\n                    SL_ACID :this._reportFilterService.SubLedgerObj.SubLedger_SL_ACID ?this._reportFilterService.SubLedgerObj.SubLedger_SL_ACID :'%',\r\n                    SHOWNDATE: this._reportFilterService.SubLedgerObj.SubLedger_SHOWNDATE?this._reportFilterService.SubLedgerObj.SubLedger_SHOWNDATE:0,\r\n                    SL_ACNAME :this._reportFilterService.SubLedgerObj.SubLedger_SL_ACNAME ?this._reportFilterService.SubLedgerObj.SubLedger_SL_ACNAME :'%',\r\n                    DIVISIONNAME : this._reportFilterService.SubLedgerObj.SubLedger_DIVISIONNAME ? this._reportFilterService.SubLedgerObj.SubLedger_DIVISIONNAME : '',\r\n                    COSTCENTERDISPLAYNAME: this._reportFilterService.SubLedgerObj.SubLedger_COSTCENTERDISPLAYNAME?this._reportFilterService.SubLedgerObj.SubLedger_COSTCENTERDISPLAYNAME:'',\r\n                    HIDECOSTCENTER:this._reportFilterService.SubLedgerObj.SubLedger_HIDECOSTCENTER ? this._reportFilterService.SubLedgerObj.SubLedger_HIDECOSTCENTER:0,\r\n                    HIDENARATION:this._reportFilterService.SubLedgerObj.SubLedger_HIDENARATION ? this._reportFilterService.SubLedgerObj.SubLedger_HIDENARATION:0,\r\n                    IGNOREOPPOSITAC:this._reportFilterService.SubLedgerObj.IGNOREOPPOSITAC ? this._reportFilterService.SubLedgerObj.IGNOREOPPOSITAC:0\r\n\r\n                }\r\n            }\r\n        });\r\n        if(res == \"ok\"){\r\n            this._reportFilterService.SubLedger_loadedTimes = this._reportFilterService.SubLedger_loadedTimes+1;\r\n        }\r\n    }\r\n\r\n    dropListItem = (keyword: any): Observable<Array<any>> => {\r\n        return new Observable((observer: Subscriber<Array<any>>) => {\r\n            this.masterService.getSubLedgerForReport().map(data => {\r\n                this.result = data.result;\r\n                return this.result.filter(ac => ac.ACNAME.toUpperCase().indexOf(keyword.toUpperCase()) > -1);\r\n            }\r\n            ).subscribe(res => { observer.next(res); })\r\n        }).share();\r\n    }\r\n\r\n    accodeChanged(value: string) {\r\n        var item;\r\n        item = this.masterService.accountList.find(x => x.ACCODE == value);\r\n        this._reportFilterService.SubLedgerObj.SubLedger_ACCNAME = '';\r\n        if (item) {\r\n            value = item.ACNAME;\r\n            //console.log(value + \"****\");\r\n            this._reportFilterService.SubLedgerObj.SubLedger_ACCNAME = value;\r\n        }\r\n    }\r\n\r\n    onEnterAcnameChange(value) {\r\n        this.accodeChanged(value);\r\n    }\r\n\r\n    itemChanged(value: any) {\r\n        //console.log({ itemChangedValue: value });\r\n        if (typeof (value) === \"object\") {\r\n            this._reportFilterService.SubLedgerObj.SubLedger_ACCNAME = value.ACNAME;\r\n            this._reportFilterService.SubLedgerObj.SubLedger_ACCODE = value.ACCODE;\r\n            this._reportFilterService.SubLedgerObj.SubLedger_ACID = value.ACID;\r\n        }\r\n    }\r\n\r\n    checkValue() {\r\n        if (this._reportFilterService.SubLedgerObj.SubLedger_REPORTTYPE == \"0\") {\r\n            this.showSummaryTree = true\r\n        } else {\r\n            this.showSummaryTree = false;\r\n        }\r\n\r\n        if (this._reportFilterService.SubLedgerObj.SubLedger_REPORTTYPE == \"1\") {\r\n            this.showLedgerSegregation = true;\r\n        } else {\r\n            this.showLedgerSegregation = false;\r\n        }\r\n    }\r\n\r\n    AccountEnterClicked() {\r\n        if(this.userSetting.ENABLESUBLEDGER==2){\r\n            this.gridPopupSettingsForSubLedgerList = this.masterService.getGenericGridPopUpSettings('MainLedgerListAtSettingTwo');\r\n            this.genericGridSubLedger.show();\r\n        }else{\r\n            this.gridPopupSettingsForSubLedgerList = this.masterService.getGenericGridPopUpSettings('MainLedgerListAtSettingOne');\r\n            this.genericGridSubLedger.show();\r\n        }\r\n    }\r\n\r\n    dblClickAccountSelect(account) {\r\n        this._reportFilterService.SubLedgerObj.SubLedger_ACID = account.ACID;\r\n        this._reportFilterService.SubLedgerObj.SubLedger_ACCNAME = account.ACNAME;\r\n    }\r\n\r\n    SubLedgerEnterClicked() {\r\n        if(this.userSetting.ENABLESUBLEDGER==2){\r\n            this.gridPopupSettingsForSubLedgerListOnly = this.masterService.getGenericGridPopUpSettings('SubLedgerListAtSettingTwo');\r\n            this.genericGridSubLedgerOnly.show();\r\n        }else{\r\n            if(this._reportFilterService.SubLedgerObj.SubLedger_ACCNAME == ''){\r\n                this._reportFilterService.SubLedgerObj.SubLedger_ACID='';\r\n            }\r\n            if(this._reportFilterService.SubLedgerObj.SubLedger_ACID){\r\n                this.gridPopupSettingsForSubLedgerListOnly = this.masterService.getGenericGridSettingForSubLedger(this._reportFilterService.SubLedgerObj.SubLedger_ACID);\r\n            }else{\r\n                this.gridPopupSettingsForSubLedgerListOnly = this.masterService.getGenericGridPopUpSettings('SubLedgerListAtSettingOne');\r\n            }\r\n            this.genericGridSubLedgerOnly.show();\r\n        }\r\n    }\r\n\r\n    dblClickSubLedgerSelect(account) {\r\n        this._reportFilterService.SubLedgerObj.SubLedger_SL_ACID = account.ACID;\r\n        this._reportFilterService.SubLedgerObj.SubLedger_SL_ACNAME = account.ACNAME;\r\n    }\r\n\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/pages/ReportDialogs/SubLedgerReport/sub-ledger-report.component.ts","import { Component, Inject, Output, EventEmitter, ViewChild, OnInit } from '@angular/core';\r\nimport { MasterRepo } from '../../../common/repositories';\r\nimport { TREE_ACTIONS, KEYS, IActionMapping, TreeNode, TreeComponent } from 'angular-tree-component';\r\nimport { LocalDataSource } from 'ng2-smart-table';\r\nimport { AuthService } from '../../../common/services/permission/authService.service';\r\nimport { Subscription } from 'rxjs/Subscription';\r\nimport { Subject } from 'rxjs/Subject';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { SpinnerService } from '../../../common/services/spinner/spinner.service';\r\nimport { PLedgerComponent } from '../../masters/components/PLedger/PLedger.component';\r\nimport { TreeViewAcService } from '../../masters/components/account-ledger/accountLedger.service';\r\nimport { ContextMenuComponent } from 'ngx-contextmenu';\r\nimport { ReportMainService, reportWiseParamandData } from '../../Reports/components/ReportMain/ReportMain.service';\r\nimport { AlertService } from '../../../common/services/alert/alert.service';\r\nimport { Division } from '../../../common/interfaces';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ReportFilterService } from '../../../common/popupLists/report-filter/report-filter.service';\r\n\r\nconst actionMapping: IActionMapping = {\r\n\r\n    mouse: {\r\n        contextMenu: (tree, node, $event) => {\r\n            $event.preventDefault();\r\n            alert(`context menu for ${node.data.name}`);\r\n        },\r\n        dblClick: (tree, node, $event) => {\r\n            if (node.hasChildren) TREE_ACTIONS.TOGGLE_EXPANDED(tree, node, $event);\r\n        },\r\n        click: (tree, node, $event) => {\r\n            $event.shiftKey\r\n                ? TREE_ACTIONS.TOGGLE_SELECTED_MULTI(tree, node, $event)\r\n                : TREE_ACTIONS.TOGGLE_SELECTED(tree, node, $event)\r\n        }\r\n    },\r\n    keys: {\r\n        [KEYS.ENTER]: (tree, node, $event) => node.setActiveAndVisible()\r\n        //[KEYS.ENTER]: (tree, node, $event) =>  alert(`This is ${node.data.name}`)\r\n    }\r\n};\r\n\r\n\r\n@Component({\r\n    selector: 'summary-ledger-report',\r\n    template: require('./summaryledgerreport.component.html'),\r\n    styles: [require('../../modal-style.css'), require('../../Reports/reportStyle.css')],\r\n    // styles:[require('../MasterDialogReport/Report.css')]\r\n    providers: [TreeViewAcService]\r\n\r\n\r\n})\r\nexport class SummaryLedgerReport implements OnInit {\r\n    showTree: boolean;\r\n    showCCtable: boolean;\r\n    PARENTacid: any;\r\n\r\n    @ViewChild(\"PLedgerChild\") PLedgerChild: PLedgerComponent;\r\n    @ViewChild(ContextMenuComponent) public contextMenu: ContextMenuComponent;\r\n\r\n\r\n    source: LocalDataSource = new LocalDataSource();\r\n    busy: Subscription;\r\n    loadListSubject: Subject<any> = new Subject<any>();\r\n    loadList$: Observable<any> = this.loadListSubject.asObservable();\r\n    formObj: any = <any>{}\r\n    isGroup: number;\r\n    PrimaryGrpObj: any;\r\n    UnderObj: any;\r\n    nodeObj: any = <any>{}\r\n    isOnlyMainParent = 0\r\n    Parent: any = <any>{}\r\n    BankPartyVerification: any = <any>{}\r\n    AdditionalInfo: number = 0;\r\n    showPLedgerInfo: number = 0;\r\n    showCustomer: number = 0;\r\n    showBank: number = 0\r\n    showAssets = 0;\r\n    PTypeForParty: any;\r\n    HSN_Active = 0;\r\n    Party: any;\r\n    isAccount = true;\r\n    public nodes: any[] = [];\r\n    reportnameFormatWise: string;\r\n\r\n    public mode: string;\r\n    public tree: TreeComponent;\r\n    public selectedNode: any;\r\n    selectedNodeEdit: number = 0;\r\n    modeTitle: string;\r\n    root: string;\r\n    addMode: boolean = false;\r\n    fromTreeTag: number;\r\n    userProfile: any;\r\n    division: any[] = [];\r\n    CostcenterList: any[] = [];\r\n    showMultipleCC: boolean;\r\n    @Output() reportdataEmit = new EventEmitter();\r\n\r\n    instanceWiseRepName:string='Summary Ledger Report';\r\n\r\n    constructor(public masterService: MasterRepo, private _authService: AuthService,\r\n        private loadingService: SpinnerService, private _reportFilterService: ReportMainService,\r\n        private alertService: AlertService, private arouter: Router,public _ActivatedRoute: ActivatedRoute, public reportService: ReportFilterService,\r\n    ) {\r\n        // this._reportFilterService.showAllcontactsInCC = false;\r\n\r\n        this.reportnameFormatWise = 'Summary Ledger Report';\r\n        this.mode = \"add\";\r\n        this.masterService.PType = '';\r\n\r\n        this.busy = this.masterService.getacListTree().map(x => { return x })\r\n            .subscribe(res => {\r\n                this.nodes = res;\r\n                if (this.tree != null) {\r\n                    this.tree.treeModel.update();\r\n                }\r\n            }, error => {\r\n                var err = this.masterService.resolveError(error, \"accountLedger - accountLedger\");\r\n                if (err) { alert(err.json()); }\r\n            }\r\n            );\r\n\r\n        this.userProfile = this._authService.getUserProfile();\r\n\r\n        this.division=[];\r\n        //let data: Array<IDivision> = [];\r\n        if(this.masterService.userSetting.userwisedivision == 1){\r\n          this.masterService.getDivisionFromRightPrivelege().subscribe(res=>{\r\n              if(res.status == 'ok'){\r\n                  this.division = res.result;\r\n              }\r\n          })\r\n        }\r\n        else{\r\n         this.masterService.getAllDivisions()\r\n         .subscribe(res => {\r\n           //////console.log(\"div\" + JSON.stringify(res));\r\n           this.division.push(<Division>res);\r\n         }, error => {\r\n           this.masterService.resolveError(error, \"divisions - getDivisions\");\r\n         });\r\n        }\r\n        // this.masterService.getAccDivList();\r\n        this.masterService.getCostcenter().subscribe(res => {\r\n            this.CostcenterList = res;\r\n        })\r\n    }\r\n\r\n    ngOnInit() {\r\n        this._ActivatedRoute.queryParams.subscribe(params => {\r\n            const mode = params.mode;\r\n            // ////console.log(\"@@drillParam\",this.reportService.drillParam)\r\n            if (mode == \"DRILL\" && this.reportService.drillParam.returnUrl && this.reportService.drillParam.reportname=='Summary Ledger Report' && this._reportFilterService.SummaryLedgerObj.assignPrevioiusDate != true) {\r\n            this._reportFilterService.SummaryLedgerObj.SummaryLedger_DATE1=this.reportService.drillParam.reportparam.DATE1;\r\n            this._reportFilterService.SummaryLedgerObj.SummaryLedger_DATE2=this.reportService.drillParam.reportparam.DATE2;\r\n            this._reportFilterService.SummaryLedgerObj.SummaryLedger_DIV=this.reportService.drillParam.reportparam.DIV;\r\n            this._reportFilterService.SummaryLedgerObj.CCENTER=this.reportService.drillParam.reportparam.COSTCENTER;\r\n            this._reportFilterService.SummaryLedgerObj.SummaryLedger_ReportType = 0;\r\n            this._reportFilterService.SummaryLedgerObj.SummaryLedger_selectedNode=this.reportService.drillParam.reportparam.PARENT;\r\n\r\n            this.changeEntryDate(this._reportFilterService.SummaryLedgerObj.SummaryLedger_DATE1, \"AD\");\r\n            this.changeEndDate(this._reportFilterService.SummaryLedgerObj.SummaryLedger_DATE2, \"AD\");\r\n            this.checkValue();\r\n\r\n            }else{\r\n                if (this._reportFilterService.SummaryLedgerObj.assignPrevioiusDate != true) {\r\n                    this.masterService.getAccDivList();\r\n                    this._reportFilterService.SummaryLedgerObj.SummaryLedger_DATE1 = this.masterService.PhiscalObj.BeginDate.split('T')[0];\r\n                    if (this.userProfile.CompanyInfo.ActualFY == this.masterService.PhiscalObj.PhiscalID) {\r\n                        this._reportFilterService.SummaryLedgerObj.SummaryLedger_DATE2 = new Date().toJSON().split('T')[0];\r\n                    }\r\n                    else {\r\n                        var x = this.masterService.PhiscalObj.EndDate\r\n                        x = x.substring(0, 10);\r\n                        this._reportFilterService.SummaryLedgerObj.SummaryLedger_DATE2 = x\r\n                    }\r\n\r\n                    // this._reportFilterService.SummaryLedgerObj.SummaryLedger_DIV = this.masterService.userProfile.CompanyInfo.INITIAL;\r\n                    this.masterService.viewDivision.subscribe(() => {\r\n                        if(this.masterService.userSetting.userwisedivision==0 ||  this.masterService.showAll == true){ //ALL OPTION SELECTION IN DIVISION IN REPORT DIALOG BOX\r\n                          this._reportFilterService.SummaryLedgerObj.SummaryLedger_DIV='%';\r\n                      }else{\r\n                        if(this.masterService.userSetting.userwisedivision==1 && this.division.length ==1){\r\n                            this._reportFilterService.SummaryLedgerObj.SummaryLedger_DIV=this.division[0].INITIAL;\r\n                          }else{\r\n                            this._reportFilterService.SummaryLedgerObj.SummaryLedger_DIV=this.masterService.userProfile.CompanyInfo.INITIAL;\r\n                        }\r\n                      }\r\n                      })\r\n                    this._reportFilterService.SummaryLedgerObj.SummaryLedger_CostCenter = '%'\r\n                    this._reportFilterService.SummaryLedgerObj.SummaryLedger_ReportType = 0;\r\n                    ////console.log(\"@@selecctednde\", this._reportFilterService.SummaryLedgerObj.SummaryLedger_selectedNode)\r\n                    this.changeEntryDate(this._reportFilterService.SummaryLedgerObj.SummaryLedger_DATE1, \"AD\");\r\n                    this.changeEndDate(this._reportFilterService.SummaryLedgerObj.SummaryLedger_DATE2, \"AD\");\r\n                    // this.checkValue();\r\n                }\r\n\r\n                if(params.instancename){\r\n                    // ////console.log(\"@@[Summary Ledger Report0]\",params.instancename,this._reportFilterService.reportDataStore[params.instancename].param.reportparam)\r\n                    this._reportFilterService.SummaryLedgerObj.SummaryLedger_DATE1=this._reportFilterService.reportDataStore[params.instancename].param.reportparam.DATE1;\r\n                    this.changeEntryDate(this._reportFilterService.SummaryLedgerObj.SummaryLedger_DATE1, \"AD\");\r\n                    this.changeEndDate(this._reportFilterService.SummaryLedgerObj.SummaryLedger_DATE2, \"AD\");\r\n                    this._reportFilterService.SummaryLedgerObj.SummaryLedger_DIV=this._reportFilterService.reportDataStore[params.instancename].param.reportparam.DIV;\r\n                    this._reportFilterService.SummaryLedgerObj.CCENTER=this._reportFilterService.reportDataStore[params.instancename].param.reportparam.COSTCENTER;\r\n                    this._reportFilterService.SummaryLedgerObj.SummaryLedger_ReportType =this._reportFilterService.reportDataStore[params.instancename].param.reportparam.REPORTTYPE;\r\n                    this._reportFilterService.SummaryLedgerObj.SummaryLedger_selectedNode=this._reportFilterService.reportDataStore[params.instancename].param.reportparam.PARENT;\r\n                }\r\n                this.checkValue();\r\n            }\r\n        });\r\n\r\n\r\n    }\r\n\r\n    changeEntryDate(value, format: string) {\r\n        var adbs = require(\"ad-bs-converter\");\r\n        if (format == \"AD\") {\r\n            var adDate = (value.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n            var bsDate = adbs.ad2bs(adDate);\r\n            this._reportFilterService.SummaryLedgerObj.SummaryLedger_BSDATE1 = this.masterService.toBSDate(value);\r\n        }\r\n        else if (format == \"BS\") {\r\n          var datearr = value.split('/');\r\n          const bsDate = datearr[2]+\"/\"+datearr[1]+\"/\"+datearr[0];\r\n            // var bsDate = (value.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n            var adDate = adbs.bs2ad(bsDate);\r\n            var Engdate = this.masterService.toADDate(value);\r\n                const Validatedata = this.masterService.ValidateNepaliDate(Engdate)\r\n                if(Validatedata == true){\r\n                  const bsDate1 = datearr[2]+\"/\"+datearr[1]+\"/\"+datearr[0];\r\n                  var adDate1 = adbs.bs2ad(bsDate1);\r\n                  this._reportFilterService.SummaryLedgerObj.SummaryLedger_DATE1= this.masterService.toADDate(value);\r\n                }else{\r\n                    this.alertService.error(\"Cannot Change the date\");\r\n                  return;\r\n                }\r\n            // this._reportFilterService.SummaryLedgerObj.SummaryLedger_DATE1 = this.masterService.toBSDate(value);\r\n        }\r\n    }\r\n\r\n    changeEndDate(value, format: string) {\r\n        var adbs = require(\"ad-bs-converter\");\r\n        if (format == \"AD\") {\r\n            var adDate = (value.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n            var bsDate = adbs.ad2bs(adDate);\r\n            this._reportFilterService.SummaryLedgerObj.SummaryLedger_BSDATE2 = this.masterService.toBSDate(value);\r\n        }\r\n        else if (format == \"BS\") {\r\n          var datearr = value.split('/');\r\n          const bsDate = datearr[2]+\"/\"+datearr[1]+\"/\"+datearr[0];\r\n            // var bsDate = (value.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n            var adDate = adbs.bs2ad(bsDate);\r\n            var Engdate = this.masterService.toADDate(value);\r\n            const Validatedata = this.masterService.ValidateNepaliDate(Engdate)\r\n            if(Validatedata == true){\r\n              const bsDate1 = datearr[2]+\"/\"+datearr[1]+\"/\"+datearr[0];\r\n              var adDate1 = adbs.bs2ad(bsDate1);\r\n              this._reportFilterService.SummaryLedgerObj.SummaryLedger_DATE2 = this.masterService.toADDate(value);\r\n            }else{\r\n                this.alertService.error(\"Cannot Change the date\");\r\n              return;\r\n            }\r\n            // this._reportFilterService.SummaryLedgerObj.SummaryLedger_DATE2 = this.masterService.toBSDate(value);\r\n        }\r\n    }\r\n\r\n    onload() {\r\n        if (this._reportFilterService.SummaryLedgerObj.SummaryLedger_ReportType == 0 && (this._reportFilterService.SummaryLedgerObj.SummaryLedger_selectedNode === undefined || this._reportFilterService.SummaryLedgerObj.SummaryLedger_selectedNode == '')) {\r\n            this.alertService.info(\"Please Select a Account Group\");\r\n            return;\r\n        } else if (this._reportFilterService.SummaryLedgerObj.SummaryLedger_ReportType == 2 && \r\n            ((this._reportFilterService.SummaryLedgerObj.SummaryLedger_multipleCostcenter === undefined || this._reportFilterService.SummaryLedgerObj.SummaryLedger_multipleCostcenter.length == 0) &&\r\n            this._reportFilterService.SummaryLedgerObj.SummaryLedger_showAllContacts!=true)) {\r\n            this.alertService.info(\"Please Select Costcenter\");\r\n            return;\r\n        } else {\r\n            this.DialogClosedResult(\"ok\");\r\n        }\r\n    }\r\n\r\n    public DialogClosedResult(res) {\r\n\r\n        let multipleSelectedCC = [];\r\n        let SelectedCC = '';\r\n        if (this._reportFilterService.SummaryLedgerObj.SummaryLedger_multipleCostcenter === undefined) {\r\n                SelectedCC = this._reportFilterService.SummaryLedgerObj.CCENTER;\r\n        } else {\r\n            if (this._reportFilterService.SummaryLedgerObj.SummaryLedger_multipleCostcenter.length != 0) {\r\n                this._reportFilterService.SummaryLedgerObj.SummaryLedger_multipleCostcenter.forEach(COSTCENTER => {\r\n                    multipleSelectedCC.push(COSTCENTER.CCID)\r\n                    SelectedCC += `${multipleSelectedCC},`\r\n                });\r\n            } else {\r\n                SelectedCC = this._reportFilterService.SummaryLedgerObj.CCENTER\r\n            }\r\n        }\r\n\r\n        if(this._reportFilterService.SummaryLedgerObj.SummaryLedger_showAllContacts==true){\r\n            SelectedCC='%';\r\n        }\r\n        \r\n        if (this._reportFilterService.SummaryLedgerObj.SummaryLedger_ReportType == 0) {\r\n            this.PARENTacid = this._reportFilterService.SummaryLedgerObj.SummaryLedger_selectedNode ? this._reportFilterService.SummaryLedgerObj.SummaryLedger_selectedNode : '%';\r\n        } else {\r\n            this.PARENTacid = '%';\r\n        }\r\n\r\n        if (this._reportFilterService.SummaryLedgerObj.SummaryLedger_ReportType != 2) {\r\n            SelectedCC = this._reportFilterService.SummaryLedgerObj.SummaryLedger_CostCenter\r\n        }\r\n\r\n        if (this._reportFilterService.SummaryLedgerObj.SummaryLedger_DIV && this._reportFilterService.SummaryLedgerObj.SummaryLedger_DIV == '%') {\r\n            this._reportFilterService.SummaryLedgerObj.SummaryLedger_DIVISIONNAME = 'All';\r\n          }else if( this._reportFilterService.SummaryLedgerObj.SummaryLedger_DIV && this._reportFilterService.SummaryLedgerObj.SummaryLedger_DIV!= '%'){\r\n            let abc = this.division.filter(x=>x.INITIAL == this._reportFilterService.SummaryLedgerObj.SummaryLedger_DIV);\r\n              if(abc && abc.length>0 && abc[0]){\r\n                this._reportFilterService.SummaryLedgerObj.SummaryLedger_DIVISIONNAME = abc[0].NAME;\r\n              }else{\r\n                this._reportFilterService.SummaryLedgerObj.SummaryLedger_DIVISIONNAME = '';\r\n              }\r\n          }else{\r\n            this._reportFilterService.SummaryLedgerObj.SummaryLedger_DIVISIONNAME = '';\r\n          }\r\n\r\n          if (this._reportFilterService.SummaryLedgerObj.SummaryLedger_CostCenter && this._reportFilterService.SummaryLedgerObj.SummaryLedger_CostCenter == '%') {\r\n            this._reportFilterService.SummaryLedgerObj.SummaryLedger_COSTCENTERDISPLAYNAME = 'All';\r\n          }else if (this._reportFilterService.SummaryLedgerObj.SummaryLedger_CostCenter != '%') {\r\n            let abc = this.CostcenterList.filter(x=>x.CCID == this._reportFilterService.SummaryLedgerObj.SummaryLedger_CostCenter);\r\n            if(abc && abc.length>0 && abc[0]){\r\n              this._reportFilterService.SummaryLedgerObj.SummaryLedger_COSTCENTERDISPLAYNAME = abc[0].COSTCENTERNAME;\r\n            }else{\r\n              this._reportFilterService.SummaryLedgerObj.SummaryLedger_COSTCENTERDISPLAYNAME = '';\r\n            }\r\n          } else {\r\n            this._reportFilterService.SummaryLedgerObj.SummaryLedger_COSTCENTERDISPLAYNAME = '';\r\n          }\r\n\r\n        if (res == \"ok\") {\r\n            this._reportFilterService.SummaryLedgerObj.assignPrevioiusDate = true;\r\n            let routepaths = this.arouter.url.split('/');\r\n            let activeurlpath2;\r\n            if (routepaths && routepaths.length) {\r\n                activeurlpath2 = routepaths[routepaths.length - 1]\r\n            }\r\n            if(this._reportFilterService.loadedTimes == 0){\r\n                this._reportFilterService.previouslyLoadedReportList.push(\r\n                    {\r\n                        reportname: 'Account Group Ledger Report',\r\n                        activeurlpath: this.arouter.url,\r\n                        activerurlpath2: activeurlpath2,\r\n                        instanceWiseRepName: this.instanceWiseRepName+this._reportFilterService.loadedTimes\r\n                    });\r\n            }else{\r\n                this._reportFilterService.previouslyLoadedReportList.push(\r\n                    {\r\n                        reportname: 'Account Group Ledger Report' +'_'+this._reportFilterService.loadedTimes,\r\n                        activeurlpath: this.arouter.url,\r\n                        activerurlpath2: activeurlpath2,\r\n                        instanceWiseRepName: this.instanceWiseRepName+this._reportFilterService.loadedTimes\r\n                    });\r\n            }\r\n\r\n\r\n        }\r\n\r\n        this.reportdataEmit.emit({\r\n            status: res, data: {\r\n                REPORTDISPLAYNAME : 'Account Group Ledger',\r\n                reportname: this.reportnameFormatWise,instanceWiseRepName:this.instanceWiseRepName+this._reportFilterService.loadedTimes, reportparam: {\r\n                    ACCOUNTGROUPDISPLAYNAME : this._reportFilterService.SummaryLedgerObj.SummaryLedger_GROUPDISPLAYNAME?this._reportFilterService.SummaryLedgerObj.SummaryLedger_GROUPDISPLAYNAME:'',\r\n                    REPORTOPTIONDISPLAYNAME: this._reportFilterService.SummaryLedgerObj.SummaryLedger_REPORTOPTIONDISPLAYNAME?this._reportFilterService.SummaryLedgerObj.SummaryLedger_REPORTOPTIONDISPLAYNAME:'',\r\n                    DATE1: this._reportFilterService.SummaryLedgerObj.SummaryLedger_DATE1,\r\n                    DATE2: this._reportFilterService.SummaryLedgerObj.SummaryLedger_DATE2,\r\n                    BSDATE1: this._reportFilterService.SummaryLedgerObj.SummaryLedger_BSDATE1,\r\n                    BSDATE2: this._reportFilterService.SummaryLedgerObj.SummaryLedger_BSDATE2,\r\n                    DIV: this._reportFilterService.SummaryLedgerObj.SummaryLedger_DIV ? this._reportFilterService.SummaryLedgerObj.SummaryLedger_DIV : '%',\r\n                    PARENT: this.PARENTacid,\r\n                    CCENTER: SelectedCC ? SelectedCC : '%',\r\n                    AREA: '%',\r\n                    COMID: this.masterService.userProfile.CompanyInfo.COMPANYID,\r\n                    ISPARTYGROUPLEDGER: '0',\r\n                    REPORTTYPE: this._reportFilterService.SummaryLedgerObj.SummaryLedger_ReportType,\r\n                    PHISCALID: this.masterService.PhiscalObj.PhiscalID,\r\n                    DIVISIONNAME : this._reportFilterService.SummaryLedgerObj.SummaryLedger_DIVISIONNAME ? this._reportFilterService.SummaryLedgerObj.SummaryLedger_DIVISIONNAME : '',\r\n                    COSTCENTERDISPLAYNAME: this._reportFilterService.SummaryLedgerObj.SummaryLedger_COSTCENTERDISPLAYNAME?this._reportFilterService.SummaryLedgerObj.SummaryLedger_COSTCENTERDISPLAYNAME:'',\r\n\r\n\r\n                }\r\n            }\r\n        });\r\n        if(res == \"ok\"){\r\n            this._reportFilterService.loadedTimes = this._reportFilterService.loadedTimes+1;\r\n        }\r\n\r\n    }\r\n\r\n    // Close Method\r\n    closeReportBox() {\r\n        this.DialogClosedResult(\"cancel\");\r\n    }\r\n\r\n    checkValue() {\r\n        if (this._reportFilterService.SummaryLedgerObj.SummaryLedger_ReportType == 0) {\r\n            this.showTree = true;\r\n            this._reportFilterService.SummaryLedgerObj.SummaryLedger_multipleCostcenter = [];\r\n            this._reportFilterService.SummaryLedgerObj.SummaryLedger_multipleCostcenter = [];\r\n            this.reportnameFormatWise = 'Summary Ledger Report';\r\n            this._reportFilterService.SummaryLedgerObj.SummaryLedger_REPORTOPTIONDISPLAYNAME = '';\r\n        } else {\r\n            this.showTree = false;\r\n        }\r\n        if (this._reportFilterService.SummaryLedgerObj.SummaryLedger_ReportType == 2) {\r\n            this.showCCtable = true;\r\n            this.showMultipleCC=true;\r\n            this._reportFilterService.SummaryLedgerObj.SummaryLedger_selectedNode = '';\r\n            this.reportnameFormatWise = 'Summary Ledger Report_1';\r\n            this._reportFilterService.SummaryLedgerObj.SummaryLedger_REPORTOPTIONDISPLAYNAME = 'Cost Center Wise Report';\r\n            this._reportFilterService.showAllcontactsInCC=true;\r\n        } else {\r\n            this.showCCtable = false;\r\n        }\r\n    }\r\n\r\n    //Tree Part\r\n\r\n    getChildren(node: any) {\r\n        return new Promise((resolve, reject) => {\r\n            setTimeout(() => resolve(this.asyncChildren.map((c) => {\r\n                return Object.assign({}, c, {\r\n                    hasChildren: node.level < 5\r\n                });\r\n            })), 1000);\r\n        });\r\n    }\r\n\r\n    asyncChildren = [\r\n        {\r\n            name: 'child2.1',\r\n            subTitle: 'new and improved'\r\n        }, {\r\n            name: 'child2.2',\r\n            subTitle: 'new and improved2'\r\n        }\r\n    ];\r\n\r\n    customTemplateStringOptions = {\r\n        displayField: 'ACNAME',\r\n        isExpandedField: 'expanded',\r\n        idField: 'uuid',\r\n        getChildren: this.getChildren.bind(this),\r\n        actionMapping,\r\n        allowDrag: false\r\n    }\r\n\r\n    onEvent($event) {\r\n        // //console.log.bind(console);\r\n    }\r\n\r\n    onselect(tree, $event) {\r\n        this.source = new LocalDataSource();\r\n        this.AdditionalInfo = 0;\r\n        this.showBank = 0;\r\n        this.showPLedgerInfo = 0\r\n        this.selectedNode = tree.treeModel.getFocusedNode().data;\r\n        this.selectedNodeEdit = this.selectedNode.ACID;\r\n        this._reportFilterService.SummaryLedgerObj.SummaryLedger_selectedNode = this.selectedNode.ACID;\r\n        this._reportFilterService.SummaryLedgerObj.SummaryLedger_GROUPDISPLAYNAME = this.selectedNode.ACNAME?this.selectedNode.ACNAME:'';\r\n\r\n        this.getRootParent(this.selectedNode, this.nodes);\r\n        this.loadListSubject.next(this.selectedNode);\r\n        this.formObj.ACNAME = this.selectedNode.ACNAME;\r\n\r\n        if (this.selectedNode.PARENT !== null && this.selectedNode !== null) {\r\n            if (this.selectedNode.ACNAME == 'BANK' || this.selectedNode.PARENT.MAPID == 'B' || this.selectedNode.MAPID == 'B') {\r\n                this.showBank = 1;\r\n                this.isGroup = 0;\r\n            } else {\r\n                this.isGroup = 0;\r\n                this.showBank = 0;\r\n            }\r\n        }\r\n        else {\r\n            this.showBank = 0;\r\n            this.showBank = 0;\r\n        }\r\n\r\n\r\n        this.formObj.HASSUBLEDGER = this.selectedNode.HASSUBLEDGER;\r\n        this.formObj.HSN_SACCODE = this.selectedNode.HSN_SACCODE;\r\n        var childAccountList = this.masterService.PartialAccountList.filter(a => a.PARENT == this.selectedNode.id);\r\n        this.mode = \"select\";\r\n        let customerData: any\r\n        let checkAcid = this.selectedNode.ACID.substring(0, 2);\r\n        if (this.selectedNode.PType == \"C\" && this.selectedNode.TYPE == \"A\") {\r\n\r\n            this.loadingService.show(\"Getting data, Please wait...\");\r\n            this.masterService.getAllAccount(this.selectedNode.ACID).subscribe(\r\n                data => {\r\n                    this.NewItem()\r\n                    this.modeTitle = 'View And Edit Customer'\r\n                    this.showPLedgerInfo = 1;\r\n                    this.isGroup = 0;\r\n                    this.Party = \"Customer\"\r\n                    this.PTypeForParty = this.selectedNode.PType\r\n                    this.formObj.ACNAME = this.selectedNode.ACNAME;\r\n                    this.formObj.mode = \"edit\"\r\n                    this.mode = \"view\"\r\n                    this.loadingService.hide();\r\n                    customerData = data.result;\r\n                    ////console.log(\"selectedData\", customerData);\r\n                    this.formObj.isAutoGSTApplicable = 0;\r\n                    this.formObj.isRCMApplicable = 0;\r\n                    this.PLedgerChild.setEditFromValue(customerData);\r\n\r\n                },\r\n                error => {\r\n                    this.loadingService.hide();\r\n                }\r\n            );\r\n        } else if ((this.selectedNode.PType == 'V' && checkAcid == 'PA') || this.selectedNode.ACID == 'LB1199') {\r\n            this.loadingService.show(\"Getting data, Please wait...\");\r\n            this.masterService.getAllAccount(this.selectedNode.ACID).subscribe(\r\n                data => {\r\n                    this.NewItem()\r\n                    this.modeTitle = 'View And Edit Supplier'\r\n                    this.showPLedgerInfo = 1;\r\n                    this.isGroup = 0;\r\n                    this.Party = \"Supplier\"\r\n                    this.PTypeForParty = this.selectedNode.PType\r\n                    this.formObj.ACNAME = this.selectedNode.ACNAME;\r\n                    this.formObj.mode = \"edit\"\r\n                    this.mode = \"view\"\r\n                    this.loadingService.hide();\r\n                    customerData = data.result;\r\n                    this.formObj.isAutoGSTApplicable = customerData.isAutoGSTApplicable;\r\n                    this.formObj.isRCMApplicable = customerData.isRCMApplicable;\r\n                    this.formObj.isReverseChargeApplicable = customerData.isReverseChargeApplicable;\r\n                    this.PLedgerChild.setEditFromValue(customerData);\r\n                },\r\n                error => {\r\n                    this.loadingService.hide();\r\n                }\r\n            );\r\n        }\r\n        else {\r\n            this.masterService.getAllAccount(this.selectedNode.ACID).subscribe(\r\n                data => {\r\n                    this.NewItem()\r\n                    this.modeTitle = 'View And Edit'\r\n                    this.PTypeForParty = this.selectedNode.PType\r\n                    this.formObj.ACNAME = this.selectedNode.ACNAME;\r\n                    this.formObj.mode = \"edit\"\r\n                    this.mode = \"view\"\r\n                    this.loadingService.hide();\r\n                    customerData = data.result;\r\n                    this.formObj.isAutoGSTApplicable = customerData.isAutoGSTApplicable;\r\n                    this.formObj.isRCMApplicable = customerData.isRCMApplicable;\r\n                    this.formObj.isReverseChargeApplicable = customerData.isReverseChargeApplicable;\r\n\r\n                },\r\n                error => {\r\n                    this.loadingService.hide();\r\n                }\r\n            );\r\n        }\r\n    }\r\n\r\n\r\n    getRootParent(node, list) {\r\n        this.nodeObj = node;\r\n        this.UnderObj = node.PARENT;\r\n        if (node.PARENTID == 'BS' || node.PARENTID == 'PL' || node.PARENTID == 'TD') {\r\n            this.PrimaryGrpObj = node; this.Parent.Primary = node.ACNAME;\r\n            this.isOnlyMainParent = 1; this.UnderObj = node; return;\r\n\r\n        }\r\n        for (let t of list) {\r\n            if (node.PARENTID != t.ACID) { this.loopingChild(node, t.children, t); }\r\n            else { this.root = node.PARENTID; this.PrimaryGrpObj = node }\r\n        }\r\n        this.Parent.Under = this.UnderObj.ACNAME;\r\n        if (node.TYPE == 'G') {\r\n            this.UnderObj = node;\r\n            this.isGroup == 1\r\n            this.modeTitle = 'View Group'\r\n        }\r\n        if (this.root == 'LB') {\r\n            this.Parent.Primary = 'LIABILITES'\r\n        }\r\n        else if (this.root == 'AT') {\r\n            this.Parent.Primary = 'ASSETS'\r\n        }\r\n        else if (this.root == 'DI') {\r\n            this.Parent.Primary = 'DIRECT INCOME'\r\n        }\r\n        else if (this.root == 'DE') {\r\n            this.Parent.Primary = 'DIRECT EXPENSES'\r\n        }\r\n        else if (this.root == 'IE') {\r\n            this.Parent.Primary = 'INDIRECT EXPENSES'\r\n        }\r\n        else if (this.root == 'II') {\r\n            this.Parent.Primary = 'INDIRECT INCOME'\r\n        }\r\n        else if (this.root == 'CA') {\r\n            this.Parent.Primary = 'Capital'\r\n        }\r\n\r\n        this.isOnlyMainParent = 0;\r\n    }\r\n\r\n    NewItem() {\r\n        //console.log(this.nodeObj)\r\n        //console.log(this.formObj.MAPID)\r\n        this.mode = \"add\"\r\n        this.isAccount = true;\r\n        this.addMode = true;\r\n        this.formObj.ACNAME = ''\r\n        this.modeTitle = 'New Account'\r\n        this.formObj.TYPE = 'A'\r\n        this.isGroup = 0\r\n        this.showBank = 0\r\n        this.showPLedgerInfo = 0\r\n        this.HSN_Active = 0;\r\n        this.BankPartyVerification.Bank = 0;\r\n        this.BankPartyVerification.Customer = 0;\r\n        this.BankPartyVerification.Supplier = 0;\r\n        this.BankPartyVerification.SupplierGrp = 0;\r\n        var checkAcid = this.nodeObj.ACID.substring(0, 2);\r\n\r\n        if (this.nodeObj.TYPE == 'G') {\r\n            this.Parent.Under = this.nodeObj.ACNAME;\r\n            this.formObj.PARENT = this.nodeObj.ACID;\r\n            this.formObj.MAPID = this.nodeObj.MAPID;\r\n            this.formObj.PType = this.nodeObj.PType\r\n            this.formObj.LEVELS = this.nodeObj.LEVELS + 1;\r\n            if (this.nodeObj.ACID.substring(0, 2) == 'IE' || this.nodeObj.ACID.substring(0, 2) == 'DE') {\r\n                this.HSN_Active = 1;\r\n            }\r\n        }\r\n        else {\r\n            this.Parent.Under = this.UnderObj.ACNAME;\r\n            this.formObj.PARENT = this.UnderObj.ACID;\r\n            this.formObj.MAPID = this.nodeObj.MAPID;\r\n            this.formObj.PType = this.nodeObj.PType\r\n            this.formObj.LEVELS = this.nodeObj.LEVELS\r\n        }\r\n\r\n        if (this.formObj.MAPID == 'B') {\r\n            this.AdditionalInfo = 1;\r\n            this.showBank = 1\r\n            this.isGroup = 0\r\n            this.BankPartyVerification.Bank = 1\r\n            this.formObj.MAPID = 'B';\r\n        }\r\n        else if (this.formObj.MAPID == 'C') {\r\n            this.showAssets = 1\r\n            this.formObj.MAPID = 'C'\r\n        }\r\n        else {\r\n            this.showAssets = 0\r\n            this.formObj.MAPID = ''\r\n        }\r\n\r\n        if (this.formObj.PType == 'C') {\r\n            this.AdditionalInfo = 1;\r\n            this.showPLedgerInfo = 1;\r\n            this.showCustomer = 1;\r\n            this.masterService.PType = 'C';\r\n            this.Party = \"Customer\"\r\n            this.isGroup = 0\r\n            this.BankPartyVerification.Customer = 1\r\n            this.fromTreeTag = 1;\r\n        }\r\n        if ((this.formObj.PType == 'V' && checkAcid == 'PA') || this.nodeObj.ACID == 'LB1199') {\r\n            this.AdditionalInfo = 1;\r\n            this.showPLedgerInfo = 1;\r\n            this.PTypeForParty = 'V'\r\n            this.Party = \"Supplier\"\r\n            this.isGroup = 0\r\n            this.showCustomer = 0;\r\n            this.masterService.PType = 'V';\r\n            this.BankPartyVerification.Supplier = 1\r\n            this.fromTreeTag = 2;\r\n\r\n        }\r\n\r\n    }\r\n\r\n    loopingChild(node, cList, root) {\r\n        for (let c of cList) {\r\n            if (c != node) { this.loopingChild(node, c.children, root); }\r\n            else { this.root = root.ACID; this.PrimaryGrpObj = root }\r\n        }\r\n    }\r\n\r\n    childrenCount(node: TreeNode): string {\r\n        return node && node.children ? `(${node.children.length})` : '';\r\n    }\r\n\r\n    filterNodes(text, tree) {\r\n        try {\r\n            tree.treeModel.filterNodes(text, true);\r\n        } catch (ex) {\r\n            //console.log(ex);\r\n            alert(ex);\r\n        }\r\n    }\r\n\r\n    checkCostCnterValue() {\r\n        if (this._reportFilterService.SummaryLedgerObj.SummaryLedger_showAllContacts == true) {\r\n            this.showMultipleCC = false;\r\n        } else {\r\n            this.showMultipleCC = true;\r\n        }\r\n    }\r\n\r\n    addCostcenterToList() {\r\n        const ccData = this._reportFilterService.SummaryLedgerObj.CCENTER;\r\n        this._reportFilterService.SummaryLedgerObj.CCENTER = ccData && ccData.CCID ? ccData.CCID : '';\r\n        let selectCCenterList = this._reportFilterService.SummaryLedgerObj.SummaryLedger_multipleCostcenter.filter(centerList => centerList.COSTCENTERNAME == ccData.COSTCENTERNAME)\r\n        if (\r\n            ccData.COSTCENTERNAME === \"\" ||\r\n            ccData.COSTCENTERNAME === null ||\r\n            ccData.COSTCENTERNAME === undefined\r\n        ) {\r\n            return;\r\n        }\r\n\r\n        if (selectCCenterList.length === 0) {\r\n            this._reportFilterService.SummaryLedgerObj.SummaryLedger_multipleCostcenter.push({ CCID: ccData.CCID, COSTCENTERNAME: ccData.COSTCENTERNAME })\r\n        }\r\n\r\n    }\r\n\r\n    deleteCostcenter(index) {\r\n        this._reportFilterService.SummaryLedgerObj.SummaryLedger_multipleCostcenter.splice(index, 1)\r\n    }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/pages/ReportDialogs/SummaryLedgerReport/summaryledgerreport.component.ts","import { Component, Inject, Output, EventEmitter, ViewChild, OnInit } from '@angular/core';\r\nimport { MasterRepo } from '../../../common/repositories';\r\nimport { Division } from '../../../common/interfaces';\r\nimport { TREE_ACTIONS, KEYS, IActionMapping, TreeNode, TreeComponent } from 'angular-tree-component';\r\nimport { LocalDataSource } from 'ng2-smart-table';\r\nimport { AuthService } from '../../../common/services/permission/authService.service';\r\nimport { Subscription } from 'rxjs/Subscription';\r\nimport { Subject } from 'rxjs/Subject';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { SpinnerService } from '../../../common/services/spinner/spinner.service';\r\nimport { PLedgerComponent } from '../../masters/components/PLedger/PLedger.component';\r\nimport { ContextMenuComponent } from 'ngx-contextmenu';\r\nimport * as _ from 'lodash';\r\nimport { TreeViewPartyervice } from '../../masters/components/party-ledger/partyledger.service';\r\nimport { ReportMainService } from '../../Reports/components/ReportMain/ReportMain.service';\r\nimport { AlertService } from '../../../common/services/alert/alert.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ReportFilterService } from '../../../common/popupLists/report-filter/report-filter.service';\r\n\r\nconst actionMapping: IActionMapping = {\r\n\r\n    mouse: {\r\n        contextMenu: (tree, node, $event) => {\r\n            $event.preventDefault();\r\n            alert(`context menu for ${node.data.name}`);\r\n        },\r\n        dblClick: (tree, node, $event) => {\r\n            if (node.hasChildren) TREE_ACTIONS.TOGGLE_EXPANDED(tree, node, $event);\r\n        },\r\n        click: (tree, node, $event) => {\r\n            $event.shiftKey\r\n                ? TREE_ACTIONS.TOGGLE_SELECTED_MULTI(tree, node, $event)\r\n                : TREE_ACTIONS.TOGGLE_SELECTED(tree, node, $event)\r\n        }\r\n    },\r\n    keys: {\r\n        [KEYS.ENTER]: (tree, node, $event) => node.setActiveAndVisible()\r\n        //[KEYS.ENTER]: (tree, node, $event) =>  alert(`This is ${node.data.name}`)\r\n    }\r\n};\r\n\r\n\r\n@Component({\r\n    selector: 'summary-party-ledger',\r\n    template: require('./summary-party-ledger.component.html'),\r\n    styles: [require('../../modal-style.css'), require('../../Reports/reportStyle.css')],\r\n    // styles:[require('../MasterDialogReport/Report.css')]\r\n    providers: [TreeViewPartyervice]\r\n})\r\n\r\nexport class SummaryPartyLedger  implements OnInit{\r\n    showTree: boolean;\r\n    showCCtable: boolean;\r\n    PARENTacid: any;\r\n    showAreaTable: boolean;\r\n    reportNameFormatWise:string;\r\n    userProfile:any;\r\n    isUserwiseDivision:boolean;\r\n\r\n    @ViewChild(\"PLedgerChild\") PLedgerChild: PLedgerComponent;\r\n    @ViewChild(ContextMenuComponent) public contextMenu: ContextMenuComponent;\r\n\r\n    source: LocalDataSource = new LocalDataSource();\r\n    busy: Subscription;\r\n    loadListSubject: Subject<any> = new Subject<any>();\r\n    loadList$: Observable<any> = this.loadListSubject.asObservable();\r\n    public nodes: any[] = [];\r\n    public mode: string;\r\n    public tree: TreeComponent;\r\n    public selectedNode: any;\r\n    root: string;\r\n    division: any[] = [];\r\n    CostcenterList: any[] = [];\r\n    showMultipleCC: boolean;\r\n    AreaList:any[]=[];\r\n    instanceWiseRepName:string='Summary Party Ledger Report';\r\n\r\n    @Output() reportdataEmit = new EventEmitter();\r\n    constructor(public masterService: MasterRepo, private _authService: AuthService,\r\n        private partyservice: TreeViewPartyervice, private _reportFilterService: ReportMainService,\r\n        private alertService: AlertService,private arouter: Router,public _ActivatedRoute: ActivatedRoute,\r\n        public reportService: ReportFilterService,\r\n    ) {\r\n        this.reportNameFormatWise = 'Summary Party Ledger Report';\r\n        \r\n        this.mode = \"add\";\r\n        this.busy = this.masterService.getpartyListTree().map(x => { return x })\r\n            .subscribe(res => {\r\n                //console.log(res);\r\n                this.nodes = res;\r\n                //console.log(this.nodes);\r\n                if (this.tree != null) {\r\n                    this.tree.treeModel.update();\r\n                }\r\n                //console.log(this.tree);\r\n            }, error => {\r\n                this.masterService.resolveError(error, \"partyLedger - PartyLedger\");\r\n            });\r\n\r\n           \r\n   this.division = [];\r\n   this.division=[];\r\n   //let data: Array<IDivision> = [];\r\n   if(this.masterService.userSetting.userwisedivision == 1){\r\n     this.masterService.getDivisionFromRightPrivelege().subscribe(res=>{\r\n         if(res.status == 'ok'){\r\n             this.division = res.result;\r\n         }\r\n     })\r\n   }\r\n   else{\r\n    this.masterService.getAllDivisions()\r\n    .subscribe(res => {\r\n      //////console.log(\"div\" + JSON.stringify(res));\r\n      this.division.push(<Division>res);                \r\n    }, error => {\r\n      this.masterService.resolveError(error, \"divisions - getDivisions\");\r\n    });\r\n   } \r\n\r\n            this.masterService.getCostcenter().subscribe(res => {\r\n                this.CostcenterList = res;\r\n            })\r\n            this.masterService.getAreaList().subscribe(res => {\r\n                this.AreaList = res.result;\r\n            })\r\n            \r\n            this.showMultipleCC = true;\r\n            // this.masterService.getAccDivList();\r\n    }\r\n\r\n    ngOnInit(){\r\n        this.userProfile = this._authService.getUserProfile();\r\n        this.isUserwiseDivision = this.masterService.userSetting.UserwiseDivision\r\n        this._ActivatedRoute.queryParams.subscribe(params => {\r\n            const mode = params.mode;\r\n            // ////console.log(\"@@this.reportMasterService.drillParam.returnUrl\",params.mode,this.reportService.drillParam.returnUrl);\r\n            // ////console.log(\"@@this.reportMasterService.drillParam\",this.reportService.drillParam)\r\n            if (mode == \"DRILL\" && this.reportService.drillParam.returnUrl && this.reportService.drillParam.reportname=='Summary Party Ledger Report' && this._reportFilterService.SummaryPartyLedgerObj.assignPrevioiusDate != true) {\r\n            this._reportFilterService.SummaryPartyLedgerObj.SummaryPartyLedger_DATE1=this.reportService.drillParam.reportparam.DATE1;\r\n            this._reportFilterService.SummaryPartyLedgerObj.SummaryPartyLedger_DATE2=this.reportService.drillParam.reportparam.DATE2;\r\n            this._reportFilterService.SummaryPartyLedgerObj.SummaryPartyLedger_DIV=this.reportService.drillParam.reportparam.DIV;\r\n            this._reportFilterService.SummaryPartyLedgerObj.SummaryPartyLedger_CostCenter=this.reportService.drillParam.reportparam.COSTCENTER;\r\n            this._reportFilterService.SummaryPartyLedgerObj.SummaryPartyLedger_ReportType =2;\r\n            this._reportFilterService.SummaryPartyLedgerObj.SummaryPartyLedger_ReportType = 0;\r\n            this._reportFilterService.SummaryPartyLedgerObj.SummaryPartyLedger_selectedNode=this.reportService.drillParam.reportparam.PARENT;\r\n            this.checkValue();\r\n            \r\n            this.changeEntryDate(this._reportFilterService.SummaryPartyLedgerObj.SummaryPartyLedger_DATE1, \"AD\");\r\n            this.changeEndDate(this._reportFilterService.SummaryPartyLedgerObj.SummaryPartyLedger_DATE2, \"AD\");\r\n            }else{\r\n                if(this._reportFilterService.SummaryPartyLedgerObj.assignPrevioiusDate != true){\r\n                    this.masterService.getAccDivList();\r\n                    this._reportFilterService.SummaryPartyLedgerObj.SummaryPartyLedger_DATE1=this.masterService.PhiscalObj.BeginDate.split('T')[0];\r\n                    this.changeEntryDate(this._reportFilterService.SummaryPartyLedgerObj.SummaryPartyLedger_DATE1, \"AD\");\r\n                    if (this.userProfile.CompanyInfo.ActualFY == this.masterService.PhiscalObj.PhiscalID) {\r\n                        this._reportFilterService.SummaryPartyLedgerObj.SummaryPartyLedger_DATE2 = new Date().toJSON().split('T')[0];\r\n                        this.changeEndDate(this._reportFilterService.SummaryPartyLedgerObj.SummaryPartyLedger_DATE2, \"AD\");\r\n                      }\r\n                      else {\r\n                        \r\n                            this._reportFilterService.SummaryPartyLedgerObj.SummaryPartyLedger_DATE2 = this.masterService.PhiscalObj.EndDate.split('T')[0];\r\n                            this.changeEndDate(this._reportFilterService.SummaryPartyLedgerObj.SummaryPartyLedger_DATE2, \"AD\");  \r\n              \r\n                        \r\n                    }\r\n                    this._reportFilterService.SummaryPartyLedgerObj.SummaryPartyLedger_DIV=this.masterService.userProfile.CompanyInfo.INITIAL;\r\n                    this.masterService.viewDivision.subscribe(() => {\r\n                        if(this.masterService.userSetting.userwisedivision==0 ||  this.masterService.showAll == true){ //ALL OPTION SELECTION IN DIVISION IN REPORT DIALOG BOX\r\n                          this._reportFilterService.SummaryPartyLedgerObj.SummaryLedger_DIV='%';\r\n                      }else{\r\n                        if(this.masterService.userSetting.userwisedivision==1 && this.division.length ==1){\r\n                            this._reportFilterService.SummaryPartyLedgerObj.SummaryLedger_DIV=this.division[0].INITIAL;\r\n                          }else{\r\n                            this._reportFilterService.SummaryPartyLedgerObj.SummaryLedger_DIV=this.masterService.userProfile.CompanyInfo.INITIAL;\r\n                        }\r\n                      }\r\n                      })\r\n                    this._reportFilterService.SummaryPartyLedgerObj.SummaryPartyLedger_CostCenter ='%'\r\n                    this._reportFilterService.SummaryPartyLedgerObj.SummaryPartyLedger_ReportType = 0;\r\n                    }\r\n            \r\n                  \r\n\r\n                    if(params.instancename){\r\n                        // ////console.log(\"@@[Summary Party Ledger Report0]\",params.instancename,this._reportFilterService.reportDataStore[params.instancename])\r\n                        this._reportFilterService.SummaryPartyLedgerObj.SummaryPartyLedger_DATE1=this._reportFilterService.reportDataStore[params.instancename].param.reportparam.DATE1;\r\n                        this._reportFilterService.SummaryPartyLedgerObj.SummaryPartyLedger_DATE2=this._reportFilterService.reportDataStore[params.instancename].param.reportparam.DATE2;\r\n                        this.changeEntryDate(this._reportFilterService.SummaryPartyLedgerObj.SummaryPartyLedger_DATE1, \"AD\");\r\n                        this.changeEndDate(this._reportFilterService.SummaryPartyLedgerObj.SummaryPartyLedger_DATE2, \"AD\");  \r\n                        this._reportFilterService.SummaryPartyLedgerObj.SummaryPartyLedger_DIV=this._reportFilterService.reportDataStore[params.instancename].param.reportparam.DIV;\r\n                        this._reportFilterService.SummaryPartyLedgerObj.SummaryPartyLedger_CostCenter=this._reportFilterService.reportDataStore[params.instancename].param.reportparam.CCENTER;\r\n                        this._reportFilterService.SummaryPartyLedgerObj.SummaryPartyLedger_ReportType =this._reportFilterService.reportDataStore[params.instancename].param.reportparam.REPORTTYPE;\r\n                        this._reportFilterService.SummaryPartyLedgerObj.SummaryPartyLedger_selectedNode=this._reportFilterService.reportDataStore[params.instancename].param.reportparam.PARENT;\r\n                        this._reportFilterService.SummaryPartyLedgerObj.SummaryPartyLedger_AreaWise=this._reportFilterService.reportDataStore[params.instancename].param.reportparam.AREA;\r\n                    }\r\n                    this.checkValue();\r\n\r\n            }\r\n        })\r\n        // this._reportFilterService.SummaryPartyLedgerObj.loadedTimes =0;\r\n        this.changeEntryDate(this._reportFilterService.SummaryPartyLedgerObj.SummaryPartyLedger_DATE1, \"AD\");\r\n        this.changeEndDate(this._reportFilterService.SummaryPartyLedgerObj.SummaryPartyLedger_DATE2, \"AD\");\r\n    }\r\n\r\n    \r\n\r\n    changeEntryDate(value, format: string) {\r\n        var adbs = require(\"ad-bs-converter\");\r\n        if (format == \"AD\") {\r\n            var adDate = (value.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n            var bsDate = adbs.ad2bs(adDate);\r\n            this._reportFilterService.SummaryPartyLedgerObj.SummaryPartyLedger_BSDATE1 = this.masterService.toBSDate(value);\r\n        } \r\n        else if (format == \"BS\") {\r\n            var datearr = value.split('/');\r\n            const bsDate = datearr[2]+\"/\"+datearr[1]+\"/\"+datearr[0];\r\n              // var bsDate = (value.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n              var adDate = adbs.bs2ad(bsDate);\r\n              var Engdate = this.masterService.toADDate(value);\r\n              const Validatedata = this.masterService.ValidateNepaliDate(Engdate)\r\n              if(Validatedata == true){\r\n                const bsDate1 = datearr[2]+\"/\"+datearr[1]+\"/\"+datearr[0];\r\n                var adDate1 = adbs.bs2ad(bsDate1);\r\n                this._reportFilterService.SummaryPartyLedgerObj.SummaryPartyLedger_DATE1= this.masterService.toADDate(value);\r\n              }else{\r\n                  this.alertService.error(\"Cannot Change the date\");\r\n                return;\r\n              }\r\n            // this._reportFilterService.SummaryPartyLedgerObj.SummaryPartyLedger_DATE1 = this.masterService.toBSDate(value);\r\n        }\r\n    }\r\n\r\n    changeEndDate(value, format: string) {\r\n        var adbs = require(\"ad-bs-converter\");\r\n        if (format == \"AD\") {\r\n            var adDate = (value.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n            var bsDate = adbs.ad2bs(adDate);\r\n            this._reportFilterService.SummaryPartyLedgerObj.SummaryPartyLedger_BSDATE2 = this.masterService.toBSDate(value);\r\n        }\r\n        else if (format == \"BS\") {\r\n            var datearr = value.split('/');\r\n            const bsDate = datearr[2]+\"/\"+datearr[1]+\"/\"+datearr[0];\r\n              // var bsDate = (value.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n              var adDate = adbs.bs2ad(bsDate);\r\n              var Engdate = this.masterService.toADDate(value);\r\n              const Validatedata = this.masterService.ValidateNepaliDate(Engdate)\r\n              if(Validatedata == true){\r\n                const bsDate1 = datearr[2]+\"/\"+datearr[1]+\"/\"+datearr[0];\r\n                var adDate1 = adbs.bs2ad(bsDate1);\r\n                this._reportFilterService.SummaryPartyLedgerObj.SummaryPartyLedger_DATE2= this.masterService.toADDate(value);\r\n              }else{\r\n                  this.alertService.error(\"Cannot Change the date\");\r\n                return;\r\n              }\r\n            \r\n            // this._reportFilterService.SummaryPartyLedgerObj.SummaryPartyLedger_DATE2 = this.masterService.toBSDate(value);\r\n        }\r\n    }\r\n\r\n\r\n    onload() {\r\n        if (this._reportFilterService.SummaryPartyLedgerObj.SummaryPartyLedger_ReportType == 0 && (this._reportFilterService.SummaryPartyLedgerObj.SummaryPartyLedger_selectedNode  === undefined || this._reportFilterService.SummaryPartyLedgerObj.SummaryPartyLedger_selectedNode =='')){\r\n            this.alertService.info(\"Please Select a Party Group\");\r\n            return\r\n        } else if (this._reportFilterService.SummaryPartyLedgerObj.SummaryPartyLedger_ReportType == 1 && (this._reportFilterService.SummaryPartyLedgerObj.SummaryPartyLedger_multipleAreas === undefined || this._reportFilterService.SummaryPartyLedgerObj.SummaryPartyLedger_multipleAreas.length==0)) {\r\n            this.alertService.info(\"Please Select Area\");\r\n            return;\r\n        }else if (this._reportFilterService.SummaryPartyLedgerObj.SummaryPartyLedger_ReportType == 2 && (this._reportFilterService.SummaryPartyLedgerObj.SummaryPartyLedger_multipleCostcenter === undefined || this._reportFilterService.SummaryPartyLedgerObj.SummaryPartyLedger_multipleCostcenter.length==0)) {\r\n            this.alertService.info(\"Please Select Costcenter\");\r\n            return;\r\n        }else {\r\n            this.DialogClosedResult(\"ok\");\r\n        }\r\n    }\r\n\r\n    public DialogClosedResult(res) {\r\n        // ////console.log(\"@@this._reportFilterService.SummaryPartyLedgerObj.SummaryPartyLedger_AreaWise\",this._reportFilterService.SummaryPartyLedgerObj.SummaryPartyLedger_AreaWise)\r\n        let multipleSelectedCC = [];\r\n        let SelectedCC = '';\r\n        if (this._reportFilterService.SummaryPartyLedgerObj.SummaryPartyLedger_multipleCostcenter === undefined) {\r\n            SelectedCC = this._reportFilterService.SummaryPartyLedgerObj.CCENTER;\r\n        } else {\r\n            if (this._reportFilterService.SummaryPartyLedgerObj.SummaryPartyLedger_multipleCostcenter.length != 0) {\r\n                this._reportFilterService.SummaryPartyLedgerObj.SummaryPartyLedger_multipleCostcenter.forEach(COSTCENTER => {\r\n                    multipleSelectedCC.push(COSTCENTER.CCID)\r\n                    SelectedCC += `${multipleSelectedCC},`\r\n                });\r\n            } else {\r\n                SelectedCC = this._reportFilterService.SummaryPartyLedgerObj.CCENTER\r\n            }\r\n        }\r\n\r\n        let multipleSelectedArea = [];\r\n        let SelectedArea = '';\r\n        if (this._reportFilterService.SummaryPartyLedgerObj.SummaryPartyLedger_multipleAreas === undefined) {\r\n            SelectedArea = this._reportFilterService.SummaryPartyLedgerObj.SummaryPartyLedger_AreaWise\r\n        } else {\r\n            if (this._reportFilterService.SummaryPartyLedgerObj.SummaryPartyLedger_multipleAreas.length != 0) {\r\n                this._reportFilterService.SummaryPartyLedgerObj.SummaryPartyLedger_multipleAreas.forEach(Area => {\r\n                    multipleSelectedArea.push(Area.AREA_ID)\r\n                    SelectedArea += `${multipleSelectedArea},`\r\n                });\r\n            } else {\r\n                SelectedArea = this._reportFilterService.SummaryPartyLedgerObj.SummaryPartyLedger_AreaWise\r\n            }\r\n        }\r\n\r\n        if (this._reportFilterService.SummaryPartyLedgerObj.SummaryPartyLedger_ReportType == 0) {\r\n            this.PARENTacid = this._reportFilterService.SummaryPartyLedgerObj.SummaryPartyLedger_selectedNode ? this._reportFilterService.SummaryPartyLedgerObj.SummaryPartyLedger_selectedNode : '%';\r\n        } else {\r\n            this.PARENTacid = '%';\r\n        }\r\n\r\n        if (this._reportFilterService.SummaryPartyLedgerObj.SummaryPartyLedger_ReportType != 2) {\r\n            SelectedCC = this._reportFilterService.SummaryPartyLedgerObj.SummaryPartyLedger_CostCenter\r\n        }\r\n        if(this._reportFilterService.SummaryPartyLedgerObj.SummaryPartyLedger_ReportType != 1){\r\n            SelectedArea='%';\r\n        }\r\n\r\n        if (this._reportFilterService.SummaryPartyLedgerObj.SummaryPartyLedger_DIV && this._reportFilterService.SummaryPartyLedgerObj.SummaryPartyLedger_DIV == '%') {\r\n            this._reportFilterService.SummaryPartyLedgerObj.SummaryPartyLedger_DIVISIONNAME = 'All';\r\n          }else if( this._reportFilterService.SummaryPartyLedgerObj.SummaryPartyLedger_DIV && this._reportFilterService.SummaryPartyLedgerObj.SummaryPartyLedger_DIV!= '%'){\r\n            let abc = this.division.filter(x=>x.INITIAL == this._reportFilterService.SummaryPartyLedgerObj.SummaryPartyLedger_DIV);\r\n              if(abc && abc.length>0 && abc[0]){\r\n                this._reportFilterService.SummaryPartyLedgerObj.SummaryPartyLedger_DIVISIONNAME = abc[0].NAME;\r\n              }else{\r\n                this._reportFilterService.SummaryPartyLedgerObj.SummaryPartyLedger_DIVISIONNAME = '';\r\n              }\r\n          }else{\r\n            this._reportFilterService.SummaryPartyLedgerObj.SummaryPartyLedger_DIVISIONNAME = '';\r\n          }\r\n\r\n          if (this._reportFilterService.SummaryPartyLedgerObj.SummaryPartyLedger_CostCenter && this._reportFilterService.SummaryPartyLedgerObj.SummaryPartyLedger_CostCenter == '%') {\r\n            this._reportFilterService.SummaryPartyLedgerObj.SummaryPartyLedger_COSTCENTERDISPLAYNAME = 'All';\r\n          }else if (this._reportFilterService.SummaryPartyLedgerObj.SummaryPartyLedger_CostCenter != '%') {\r\n            let abc = this.CostcenterList.filter(x=>x.CCID == this._reportFilterService.SummaryPartyLedgerObj.SummaryPartyLedger_CostCenter);\r\n            if(abc && abc.length>0 && abc[0]){\r\n              this._reportFilterService.SummaryPartyLedgerObj.SummaryPartyLedger_COSTCENTERDISPLAYNAME = abc[0].COSTCENTERNAME;\r\n            }else{\r\n              this._reportFilterService.SummaryPartyLedgerObj.SummaryPartyLedger_COSTCENTERDISPLAYNAME = '';\r\n            }\r\n          } else {\r\n            this._reportFilterService.SummaryPartyLedgerObj.SummaryPartyLedger_COSTCENTERDISPLAYNAME = '';\r\n          }\r\n\r\n        if(res == \"ok\"){\r\n        this._reportFilterService.SummaryPartyLedgerObj.assignPrevioiusDate = true;\r\n        let routepaths = this.arouter.url.split('/');\r\n        let activeurlpath2;\r\n              if(routepaths&& routepaths.length){\r\n                activeurlpath2=routepaths[routepaths.length-1]\r\n              } \r\n              if(this._reportFilterService.SummaryParty_loadedTimes == 0){\r\n                this._reportFilterService.previouslyLoadedReportList.push(\r\n                    {reportname: 'Party Group Ledger Report',\r\n                    activeurlpath: this.arouter.url,\r\n                    activerurlpath2: activeurlpath2,\r\n                    instanceWiseRepName:this.instanceWiseRepName +this._reportFilterService.SummaryParty_loadedTimes\r\n                });\r\n            }else{\r\n                this._reportFilterService.previouslyLoadedReportList.push(\r\n                    {reportname: 'Party Group Ledger Report'+'_'+this._reportFilterService.SummaryParty_loadedTimes,\r\n                    activeurlpath: this.arouter.url,\r\n                    activerurlpath2: activeurlpath2,\r\n                    instanceWiseRepName:this.instanceWiseRepName +this._reportFilterService.SummaryParty_loadedTimes\r\n                });\r\n            }\r\n       \r\n        }\r\n        \r\n        this.reportdataEmit.emit({\r\n            status: res, data: {\r\n                REPORTDISPLAYNAME : 'Party Group Ledger',\r\n                reportname: this.reportNameFormatWise,\r\n                instanceWiseRepName:this.instanceWiseRepName+this._reportFilterService.SummaryParty_loadedTimes, \r\n                reportparam: {\r\n                    PARTYGROUPDISPLAYNAME : this._reportFilterService.SummaryPartyLedgerObj.SummaryPartyLedger_GROUPDISPLAYNAME?this._reportFilterService.SummaryPartyLedgerObj.SummaryPartyLedger_GROUPDISPLAYNAME:'',\r\n                    REPORTOPTIONDISPLAYNAME: this._reportFilterService.SummaryPartyLedgerObj.SummaryPartyLedger_REPORTOPTIONDISPLAYNAME?this._reportFilterService.SummaryPartyLedgerObj.SummaryPartyLedger_REPORTOPTIONDISPLAYNAME:'',\r\n                    DATE1: this._reportFilterService.SummaryPartyLedgerObj.SummaryPartyLedger_DATE1,\r\n                    DATE2: this._reportFilterService.SummaryPartyLedgerObj.SummaryPartyLedger_DATE2,\r\n                    BSDATE1: this._reportFilterService.SummaryPartyLedgerObj.SummaryPartyLedger_BSDATE1,\r\n                    BSDATE2: this._reportFilterService.SummaryPartyLedgerObj.SummaryPartyLedger_BSDATE2,\r\n                    DIV: this._reportFilterService.SummaryPartyLedgerObj.SummaryPartyLedger_DIV ? this._reportFilterService.SummaryPartyLedgerObj.SummaryPartyLedger_DIV : '%',\r\n                    PARENT: this.PARENTacid,\r\n                    CCENTER: SelectedCC ? SelectedCC : '%',\r\n                    AREA: SelectedArea ? SelectedArea : '%',\r\n                    COMID: this.masterService.userProfile.CompanyInfo.COMPANYID,\r\n                    ISPARTYGROUPLEDGER: '1',\r\n                    REPORTTYPE: this._reportFilterService.SummaryPartyLedgerObj.SummaryPartyLedger_ReportType,\r\n                    PHISCALID: this.masterService.PhiscalObj.PhiscalID,\r\n                    DIVISIONNAME : this._reportFilterService.SummaryPartyLedgerObj.SummaryPartyLedger_DIVISIONNAME ? this._reportFilterService.SummaryPartyLedgerObj.SummaryPartyLedger_DIVISIONNAME : '',\r\n                    COSTCENTERDISPLAYNAME: this._reportFilterService.SummaryPartyLedgerObj.SummaryPartyLedger_COSTCENTERDISPLAYNAME?this._reportFilterService.SummaryPartyLedgerObj.SummaryPartyLedger_COSTCENTERDISPLAYNAME:'',\r\n                    \r\n                }\r\n            }\r\n        });\r\n        if(res == \"ok\"){\r\n            this._reportFilterService.SummaryParty_loadedTimes = this._reportFilterService.SummaryParty_loadedTimes+1;\r\n        }\r\n    }\r\n\r\n    // Close Method\r\n\r\n    closeReportBox() {\r\n        this.DialogClosedResult(\"cancel\");\r\n    }\r\n\r\n    checkValue() {\r\n        if (this._reportFilterService.SummaryPartyLedgerObj.SummaryPartyLedger_ReportType == 0) {\r\n            this.showTree = true;\r\n            this._reportFilterService.SummaryPartyLedgerObj.SummaryPartyLedger_multipleAreas = [];\r\n            this._reportFilterService.SummaryPartyLedgerObj.SummaryPartyLedger_multipleAreas = [];\r\n            this._reportFilterService.SummaryPartyLedgerObj.SummaryPartyLedger_multipleCostcenter = [];\r\n            this.reportNameFormatWise = 'Summary Party Ledger Report';\r\n            this._reportFilterService.SummaryPartyLedgerObj.SummaryPartyLedger_REPORTOPTIONDISPLAYNAME = '';\r\n        } else {\r\n            this.showTree = false;\r\n        }\r\n        if (this._reportFilterService.SummaryPartyLedgerObj.SummaryPartyLedger_ReportType == 1) {\r\n            this.showAreaTable = true;\r\n            this._reportFilterService.SummaryPartyLedgerObj.SummaryPartyLedger_selectedNode ='';\r\n            this._reportFilterService.SummaryPartyLedgerObj.SummaryPartyLedger_multipleCostcenter = [];\r\n            this._reportFilterService.SummaryPartyLedgerObj.SummaryPartyLedger_multipleCostcenter = [];\r\n            this.reportNameFormatWise = 'Summary Party Ledger Report_1';\r\n            this._reportFilterService.SummaryPartyLedgerObj.SummaryPartyLedger_REPORTOPTIONDISPLAYNAME = 'Area Wise Report';\r\n\r\n        } else {\r\n            this.showAreaTable = false;\r\n        }\r\n        if (this._reportFilterService.SummaryPartyLedgerObj.SummaryPartyLedger_ReportType == 2) {\r\n            this.showCCtable = true;\r\n            this._reportFilterService.SummaryPartyLedgerObj.SummaryPartyLedger_multipleAreas = [];\r\n            this._reportFilterService.SummaryPartyLedgerObj.SummaryPartyLedger_selectedNode ='';\r\n            this.reportNameFormatWise = 'Summary Party Ledger Report_2';\r\n            this._reportFilterService.SummaryPartyLedgerObj.SummaryPartyLedger_REPORTOPTIONDISPLAYNAME = 'Cost Center Wise Report';\r\n\r\n        } else {\r\n            this.showCCtable = false;\r\n        }\r\n    }\r\n\r\n    //Tree Part\r\n\r\n    getChildren(node: any) {\r\n        return new Promise((resolve, reject) => {\r\n            setTimeout(() => resolve(this.asyncChildren.map((c) => {\r\n                return Object.assign({}, c, {\r\n                    hasChildren: node.level < 5\r\n                });\r\n            })), 1000);\r\n        });\r\n    }\r\n\r\n    asyncChildren = [\r\n        {\r\n            name: 'child2.1',\r\n            subTitle: 'new and improved'\r\n        }, {\r\n            name: 'child2.2',\r\n            subTitle: 'new and improved2'\r\n        }\r\n    ];\r\n\r\n    customTemplateStringOptions = {\r\n        displayField: 'ACNAME',\r\n        isExpandedField: 'expanded',\r\n        idField: 'uuid',\r\n        getChildren: this.getChildren.bind(this),\r\n        actionMapping,\r\n        allowDrag: false\r\n    }\r\n\r\n    onEvent($event) {\r\n        // //console.log.bind(console);\r\n    }\r\n\r\n    addNode(addednode) {\r\n        this.tree.treeModel.getFocusedNode().data.children.push(addednode);\r\n        this.tree.treeModel.update();\r\n    }\r\n\r\n    onselect(tree, $event) {\r\n        this.source = new LocalDataSource();\r\n        this.selectedNode = tree.treeModel.getFocusedNode().data;\r\n        this.getRootParent(this.selectedNode, this.nodes);\r\n        this.loadListSubject.next(this.selectedNode);\r\n        this.partyservice.ParentInfo = this.selectedNode;\r\n        this._reportFilterService.SummaryPartyLedgerObj.SummaryPartyLedger_selectedNode = this.selectedNode.ACID;\r\n        this._reportFilterService.SummaryPartyLedgerObj.SummaryPartyLedger_GROUPDISPLAYNAME = this.selectedNode.ACNAME?this.selectedNode.ACNAME:'';\r\n    }\r\n\r\n    getRootParent(node, list) {\r\n        if (node.PARENTID == \"PA\") { this.root = node.ACID; return; }\r\n        for (let t of list) {\r\n            if (node.PARENTID != t.ACID) { this.loopingChild(node, t.children, t) }\r\n            else { this.root = t.ACID; }\r\n        }\r\n    }\r\n\r\n    loopingChild(node, cList, root) {\r\n        for (let c of cList) {\r\n            if (c != node) { this.loopingChild(node, c.children, root); }\r\n            else { this.root = root.ACID; }\r\n        }\r\n    }\r\n\r\n    childrenCount(node: TreeNode): string {\r\n        return node && node.children ? `(${node.children.length})` : '';\r\n    }\r\n\r\n    filterNodes(text, tree) {\r\n        try {\r\n            tree.treeModel.filterNodes(text, true);\r\n        } catch (ex) {\r\n            //console.log(ex);\r\n            alert(ex);\r\n        }\r\n    }\r\n\r\n    addAreaToList() {\r\n        const areaData = this._reportFilterService.SummaryPartyLedgerObj.SummaryPartyLedger_AreaWise;\r\n        this._reportFilterService.SummaryPartyLedgerObj.SummaryPartyLedger_AreaWise = areaData && areaData.AREA_ID ? areaData.AREA_ID : '';\r\n        let selectAreaList = this._reportFilterService.SummaryPartyLedgerObj.SummaryPartyLedger_multipleAreas.filter(areaList => areaList.AREA_NAME == areaData.AREA_NAME)\r\n        if (\r\n            areaData.AREA_NAME === \"\" ||\r\n            areaData.AREA_NAME === null ||\r\n            areaData.AREA_NAME === undefined\r\n        ) {\r\n            return;\r\n        }\r\n\r\n        if (selectAreaList.length === 0) {\r\n            this._reportFilterService.SummaryPartyLedgerObj.SummaryPartyLedger_multipleAreas.push({ AREA_ID: areaData.AREA_ID, AREA_NAME: areaData.AREA_NAME })\r\n        }\r\n    }\r\n\r\n    deleteArea(index) {\r\n        this._reportFilterService.SummaryPartyLedgerObj.SummaryPartyLedger_multipleAreas.splice(index, 1)\r\n    }\r\n    \r\n    checkCostCenterValue() {\r\n        if (this._reportFilterService.SummaryPartyLedgerObj.SummaryPartyLedger_showAllContacts == true) {\r\n            this.showMultipleCC = false;\r\n        } else {\r\n            this.showMultipleCC = true;\r\n        }\r\n    }\r\n\r\n    addCostcenterToList() {\r\n        const ccData = this._reportFilterService.SummaryPartyLedgerObj.CCENTER;\r\n        this._reportFilterService.SummaryPartyLedgerObj.CCENTER = ccData && ccData.CCID ? ccData.CCID : '';\r\n        let selectCCenterList = this._reportFilterService.SummaryPartyLedgerObj.SummaryPartyLedger_multipleCostcenter.filter(centerList => centerList.COSTCENTERNAME == ccData.COSTCENTERNAME)\r\n        if (\r\n            ccData.COSTCENTERNAME === \"\" ||\r\n            ccData.COSTCENTERNAME === null ||\r\n            ccData.COSTCENTERNAME === undefined\r\n        ) {\r\n            return;\r\n        }\r\n\r\n        if (selectCCenterList.length === 0) {\r\n            this._reportFilterService.SummaryPartyLedgerObj.SummaryPartyLedger_multipleCostcenter.push({ CCID: ccData.CCID, COSTCENTERNAME: ccData.COSTCENTERNAME })\r\n        }\r\n\r\n    }\r\n\r\n    deleteCostcenter(index) {\r\n        this._reportFilterService.SummaryPartyLedgerObj.SummaryPartyLedger_multipleCostcenter.splice(index, 1)\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/pages/ReportDialogs/SummaryPartyLedger/summary-party-ledger.component.ts","import { Component, Inject, Output, EventEmitter, OnInit, ViewChild } from '@angular/core';\r\nimport { MdDialogRef, MD_DIALOG_DATA } from '@angular/material';\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { MasterRepo } from '../../../common/repositories';\r\nimport { AuthService } from '../../../common/services/permission/authService.service';\r\nimport { ReportMainService } from '../../Reports/components/ReportMain/ReportMain.service';\r\nimport { Division } from '../../../common/interfaces';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { AlertService } from '../../../common/services/alert/alert.service';\r\nimport { GenericPopUpComponent, GenericPopUpSettings } from '../../../common/popupLists/generic-grid/generic-popup-grid.component';\r\n\r\nexport interface DialogInfo {\r\n    header: string;\r\n    message: Observable<string>;\r\n}\r\n\r\n@Component({\r\n    selector: 'tds-report',\r\n    template: require('./tds-report.comnponent.html'),\r\n    styles: [require('../../Reports/reportStyle.css'), require('../../modal-style.css')],\r\n})\r\n\r\nexport class TDSReport implements OnInit {\r\n    ReportParameters: any = <any>{};\r\n    voucherTypeList: any[] = [];\r\n    userList: any[] = [];\r\n    division: any[] = [];\r\n    instanceWiseRepName: string = 'TDS Report';\r\n\r\n    result: any;\r\n    @Output() reportdataEmit = new EventEmitter();\r\n\r\n    @ViewChild(\"genericGridACList\")\r\n    genericGridACList: GenericPopUpComponent;\r\n    gridACListPopupSettings: GenericPopUpSettings = new GenericPopUpSettings();\r\n\r\n    @ViewChild(\"genericGridPartyList\")\r\n    genericGridPartyList: GenericPopUpComponent;\r\n    gridPartyListPopupSettings: GenericPopUpSettings = new GenericPopUpSettings();\r\n    @ViewChild(\"gridSubLedgerSettingList\")\r\n    gridSubLedgerSettingList: GenericPopUpComponent;\r\n    gridSubLedgerSetting: GenericPopUpSettings = new GenericPopUpSettings();\r\n    constructor(private masterService: MasterRepo, private _authService: AuthService, private alertService: AlertService,\r\n        private _reportFilterService: ReportMainService, private arouter: Router, public _ActivatedRoute: ActivatedRoute,\r\n        public dialogref: MdDialogRef<TDSReport>,\r\n        @Inject(MD_DIALOG_DATA) public data: DialogInfo) {\r\n\r\n        this._reportFilterService.TDSObj.Reportnameis = 'TDS Report';\r\n\r\n        this.division = [];\r\n        //let data: Array<IDivision> = [];\r\n        if (this.masterService.userSetting.userwisedivision == 1) {\r\n            this.masterService.getDivisionFromRightPrivelege().subscribe(res => {\r\n                if (res.status == 'ok') {\r\n                    this.division = res.result;\r\n                }\r\n            })\r\n        }\r\n        else {\r\n            this.masterService.getAllDivisions()\r\n                .subscribe(res => {\r\n                    //////console.log(\"div\" + JSON.stringify(res));\r\n                    this.division.push(<Division>res);\r\n                }, error => {\r\n                    this.masterService.resolveError(error, \"divisions - getDivisions\");\r\n                });\r\n        }\r\n        // this.masterService.getAccDivList();\r\n    }\r\n\r\n    ngOnInit() {\r\n        this._ActivatedRoute.queryParams.subscribe(params => {\r\n            if (this._reportFilterService.TDSObj.assignPrevioiusDate != true) {\r\n                this.masterService.getAccDivList();\r\n                this._reportFilterService.TDSObj.TDS_DATE1 = this.masterService.PhiscalObj.BeginDate.split('T')[0];\r\n                if (this.masterService.userProfile.CompanyInfo.ActualFY == this.masterService.PhiscalObj.PhiscalID) {\r\n                    this._reportFilterService.TDSObj.TDS_DATE2 = new Date().toJSON().split('T')[0];\r\n                    this.changeEndDate(this._reportFilterService.TDSObj.TDS_DATE2, \"AD\");\r\n                }\r\n                else {\r\n\r\n                    this._reportFilterService.TDSObj.TDS_DATE2 = this.masterService.PhiscalObj.EndDate.split('T')[0];\r\n                    this.changeEndDate(this._reportFilterService.TDSObj.TDS_DATE2, \"AD\");\r\n\r\n\r\n                }\r\n                // this._reportFilterService.TDSObj.TDS_DIV = this.masterService.userProfile.CompanyInfo.INITIAL;\r\n                this.masterService.viewDivision.subscribe(() => {\r\n                    if(this.masterService.userSetting.userwisedivision==0 ||  this.masterService.showAll == true){ //ALL OPTION SELECTION IN DIVISION IN REPORT DIALOG BOX\r\n                      this._reportFilterService.TDSObj.TDS_DIV='%';\r\n                  }else{\r\n                    if(this.masterService.userSetting.userwisedivision==1 && this.division.length ==1){\r\n                        this._reportFilterService.TDSObj.TDS_DIV=this.division[0].INITIAL;\r\n                      }else{\r\n                        this._reportFilterService.TDSObj.TDS_DIV=this.masterService.userProfile.CompanyInfo.INITIAL;\r\n                    }\r\n                  }\r\n                  })\r\n                this._reportFilterService.TDSObj.TDS_REPORTTYPE = '0';\r\n\r\n            }\r\n\r\n            if (params.instancename) {\r\n\r\n                this._reportFilterService.TDSObj.TDS_DATE1 = this._reportFilterService.reportDataStore[params.instancename].param.reportparam.DATE1;\r\n                this._reportFilterService.TDSObj.TDS_DATE2 = this._reportFilterService.reportDataStore[params.instancename].param.reportparam.DATE2;\r\n                this._reportFilterService.TDSObj.TDS_DIV = this._reportFilterService.reportDataStore[params.instancename].param.reportparam.DIV;\r\n                this._reportFilterService.TDSObj.TDS_REPORTTYPE = this._reportFilterService.reportDataStore[params.instancename].param.reportparam.REPORTTYPE;\r\n                this._reportFilterService.TDSObj.TDS_TDSNAME = this._reportFilterService.reportDataStore[params.instancename].param.reportparam.TDSDISPLAYNAME;\r\n                this._reportFilterService.TDSObj.TDS_PARTYNAME = this._reportFilterService.reportDataStore[params.instancename].param.reportparam.TDS_PARTYNAME;\r\n            }\r\n        })\r\n\r\n\r\n        this.changeEntryDate(this._reportFilterService.TDSObj.TDS_DATE1, \"AD\");\r\n        this.changeEndDate(this._reportFilterService.TDSObj.TDS_DATE2, \"AD\");\r\n\r\n    }\r\n    changeEntryDate(value, format: string) {\r\n        var adbs = require(\"ad-bs-converter\");\r\n        if (format == \"AD\") {\r\n            var adDate = (value.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n            var bsDate = adbs.ad2bs(adDate);\r\n            this._reportFilterService.TDSObj.TDS_BSDATE1 = this.masterService.toBSDate(value);\r\n        }\r\n        else if (format == \"BS\") {\r\n            var datearr = value.split('/');\r\n            const bsDate = datearr[2] + \"/\" + datearr[1] + \"/\" + datearr[0];\r\n            // var bsDate = (value.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n            var adDate = adbs.bs2ad(bsDate);\r\n            var Engdate = this.masterService.toADDate(value);\r\n            const Validatedata = this.masterService.ValidateNepaliDate(Engdate)\r\n            if (Validatedata == true) {\r\n                const bsDate1 = datearr[2] + \"/\" + datearr[1] + \"/\" + datearr[0];\r\n                var adDate1 = adbs.bs2ad(bsDate1);\r\n                this._reportFilterService.TDSObj.TDS_DATE1 = this.masterService.toADDate(value);\r\n            } else {\r\n                this.alertService.error(\"Cannot Change the date\");\r\n                return;\r\n            }\r\n            // this._reportFilterService.TDSObj.TDS_DATE1 = this.masterService.toBSDate(value);\r\n        }\r\n    }\r\n\r\n    changeEndDate(value, format: string) {\r\n        var adbs = require(\"ad-bs-converter\");\r\n        if (format == \"AD\") {\r\n            var adDate = (value.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n            var bsDate = adbs.ad2bs(adDate);\r\n            this._reportFilterService.TDSObj.TDS_BSDATE2 = this.masterService.toBSDate(value);\r\n        }\r\n        else if (format == \"BS\") {\r\n            var datearr = value.split('/');\r\n            const bsDate = datearr[2] + \"/\" + datearr[1] + \"/\" + datearr[0];\r\n            // var bsDate = (value.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n            var adDate = adbs.bs2ad(bsDate);\r\n            var Engdate = this.masterService.toADDate(value);\r\n            const Validatedata = this.masterService.ValidateNepaliDate(Engdate)\r\n            if (Validatedata == true) {\r\n                const bsDate1 = datearr[2] + \"/\" + datearr[1] + \"/\" + datearr[0];\r\n                var adDate1 = adbs.bs2ad(bsDate1);\r\n                this._reportFilterService.TDSObj.TDS_DATE2 = this.masterService.toADDate(value);\r\n            } else {\r\n                this.alertService.error(\"Cannot Change the date\");\r\n                return;\r\n            }\r\n            // this._reportFilterService.TDSObj.TDS_DATE2 = this.masterService.toBSDate(value);\r\n        }\r\n    }\r\n\r\n    onload() {\r\n        if(this._reportFilterService.TDSObj.TDS_TDSNAME == \"\" ||this._reportFilterService.TDSObj.TDS_TDSNAME == null || \r\n        this._reportFilterService.TDSObj.TDS_TDSNAME == undefined ){\r\n            this._reportFilterService.TDSObj.TDS_TDSID = '%';\r\n        }\r\n        // if(!this._reportFilterService.TDSObj.TDS_TDSID){\r\n        //     this.alertService.warning(\"Please select TDS Account\")\r\n        //     return;\r\n        // }\r\n        this.DialogClosedResult(\"ok\");\r\n    }\r\n\r\n    closeReportBox() {\r\n        this.DialogClosedResult(\"Error!\");\r\n    }\r\n\r\n    public DialogClosedResult(res) {\r\n        this._reportFilterService.TDSObj.TDS_DIV = (this._reportFilterService.TDSObj.TDS_DIV == null || this._reportFilterService.TDSObj.TDS_DIV == \"\") ? \"%\" : this._reportFilterService.TDSObj.TDS_DIV;\r\n\r\n        let multipleReportFormateName = '';\r\n        if(this._reportFilterService.TDSObj.TDS_ISIRDFORMAT==1){\r\n            multipleReportFormateName = 'TDS Report_2';\r\n        }else{\r\n            if (this._reportFilterService.TDSObj.TDS_REPORTTYPE == \"0\") {\r\n                multipleReportFormateName = 'TDS Report';\r\n            } else if (this._reportFilterService.TDSObj.TDS_REPORTTYPE == \"1\") {\r\n                multipleReportFormateName = 'TDS Report_1';\r\n            }\r\n        }\r\n\r\n\r\n        if (this._reportFilterService.TDSObj.TDS_DIV && this._reportFilterService.TDSObj.TDS_DIV == '%') {\r\n            this._reportFilterService.TDSObj.TDS_DIVISIONNAME = 'All';\r\n        } else if (this._reportFilterService.TDSObj.TDS_DIV && this._reportFilterService.TDSObj.TDS_DIV != '%') {\r\n            let abc = this.division.filter(x => x.INITIAL == this._reportFilterService.TDSObj.TDS_DIV);\r\n            if (abc && abc.length > 0 && abc[0]) {\r\n                this._reportFilterService.TDSObj.TDS_DIVISIONNAME = abc[0].NAME;\r\n            } else {\r\n                this._reportFilterService.TDSObj.TDS_DIVISIONNAME = '';\r\n            }\r\n        } else {\r\n            this._reportFilterService.TDSObj.TDS_DIVISIONNAME = '';\r\n        }\r\n\r\n\r\n        if (res == \"ok\") {\r\n            this._reportFilterService.TDSObj.assignPrevioiusDate = true;\r\n            let routepaths = this.arouter.url.split('/');\r\n            let activeurlpath2;\r\n            if (routepaths && routepaths.length) {\r\n                activeurlpath2 = routepaths[routepaths.length - 1]\r\n            }\r\n\r\n            if (this._reportFilterService.TDS_loadedTimes == 0) {\r\n                this._reportFilterService.previouslyLoadedReportList.push(\r\n                    {\r\n                        reportname: 'TDS Report',\r\n                        activeurlpath: this.arouter.url,\r\n                        activerurlpath2: activeurlpath2,\r\n                        instanceWiseRepName: this.instanceWiseRepName + this._reportFilterService.TDS_loadedTimes,\r\n                    });\r\n            } else {\r\n                this._reportFilterService.previouslyLoadedReportList.push(\r\n                    {\r\n                        reportname: 'TDS Report' + '_' + this._reportFilterService.TDS_loadedTimes,\r\n                        activeurlpath: this.arouter.url,\r\n                        activerurlpath2: activeurlpath2,\r\n                        instanceWiseRepName: this.instanceWiseRepName + this._reportFilterService.TDS_loadedTimes,\r\n                    });\r\n            }\r\n\r\n        }\r\n\r\n        if (this._reportFilterService.TDSObj.TDS_TDSNAME == \"\" || this._reportFilterService.TDSObj.TDS_TDSNAME == null || this._reportFilterService.TDSObj.TDS_TDSNAME == undefined) {\r\n            this._reportFilterService.TDSObj.TDS_TDSID = '%';\r\n        }\r\n\r\n        if (this._reportFilterService.TDSObj.TDS_PARTYNAME == \"\" || this._reportFilterService.TDSObj.TDS_PARTYID == null || this._reportFilterService.TDSObj.TDS_PARTYID == undefined) {\r\n            this._reportFilterService.TDSObj.TDS_PARTYID = '%';\r\n        }\r\n        if (this._reportFilterService.TDSObj.TDS_SL_ACNAME == \"\" || this._reportFilterService.TDSObj.TDS_SL_ACNAME == null || this._reportFilterService.TDSObj.TDS_SL_ACNAME == undefined) {\r\n            this._reportFilterService.TDSObj.TDS_SL_ACID = '%';\r\n        }\r\n        this.reportdataEmit.emit({\r\n            status: res, data: {\r\n                REPORTDISPLAYNAME: 'TDS Report',\r\n                reportname: multipleReportFormateName,\r\n                instanceWiseRepName: this.instanceWiseRepName + this._reportFilterService.TDS_loadedTimes,\r\n                reportparam: {\r\n\r\n                    DATE1: this._reportFilterService.TDSObj.TDS_DATE1,\r\n                    DATE2: this._reportFilterService.TDSObj.TDS_DATE2,\r\n                    BSDATE1: this._reportFilterService.TDSObj.TDS_BSDATE1,\r\n                    BSDATE2: this._reportFilterService.TDSObj.TDS_BSDATE2,\r\n                    DIV: this._reportFilterService.TDSObj.TDS_DIV,\r\n                    PHISCALID: this.masterService.PhiscalObj.PhiscalID,\r\n                    COMID: this.masterService.userProfile.CompanyInfo.COMPANYID,\r\n                    TDSACID: this._reportFilterService.TDSObj.TDS_TDSID ? this._reportFilterService.TDSObj.TDS_TDSID : '%',\r\n                    ACID: this._reportFilterService.TDSObj.TDS_PARTYID ? this._reportFilterService.TDSObj.TDS_PARTYID : '%',\r\n                    REPORTTYPE: this._reportFilterService.TDSObj.TDS_REPORTTYPE,\r\n                    ISIRDFORMAT:this._reportFilterService.TDSObj.TDS_ISIRDFORMAT?this._reportFilterService.TDSObj.TDS_ISIRDFORMAT:0,\r\n                    DIVISIONNAME: this._reportFilterService.TDSObj.TDS_DIVISIONNAME ? this._reportFilterService.TDSObj.TDS_DIVISIONNAME : '',\r\n                    TDSDISPLAYNAME: this._reportFilterService.TDSObj.TDS_TDSNAME ? this._reportFilterService.TDSObj.TDS_TDSNAME : '',\r\n                    PARTYDISPLAYNAME: this._reportFilterService.TDSObj.TDS_PARTYNAME ? this._reportFilterService.TDSObj.TDS_PARTYNAME : '',\r\n                    SUBLEDGERDISPLAYNAME: this._reportFilterService.TDSObj.TDS_SL_ACNAME ? this._reportFilterService.TDSObj.TDS_SL_ACNAME : '',\r\n                    SL_ACID: this._reportFilterService.TDSObj.TDS_SL_ACID ? this._reportFilterService.TDSObj.TDS_SL_ACID : ''\r\n                }\r\n            }\r\n        });\r\n\r\n        if (res == \"ok\") {\r\n            this._reportFilterService.TDS_loadedTimes = this._reportFilterService.TDS_loadedTimes + 1;\r\n        }\r\n    }\r\n\r\n    TDSEnterCommand() {\r\n        this.showAcList();\r\n    }\r\n\r\n    showAcList() {\r\n        this.gridACListPopupSettings = {\r\n            title: \"Accounts\",\r\n            apiEndpoints: `/getAccountPagedListByMapId/Details/TDS`,\r\n            defaultFilterIndex: 1,\r\n            columns: [\r\n                {\r\n                    key: \"ACID\",\r\n                    title: \"AC CODE\",\r\n                    hidden: false,\r\n                    noSearch: false\r\n                },\r\n                {\r\n                    key: \"ACNAME\",\r\n                    title: \"A/C NAME\",\r\n                    hidden: false,\r\n                    noSearch: false\r\n                }\r\n            ]\r\n        };\r\n\r\n        this.genericGridACList.show();\r\n\r\n    }\r\n\r\n    onAcSelect(event) {\r\n        this._reportFilterService.TDSObj.TDS_TDSID = event.ACID;\r\n        this._reportFilterService.TDSObj.TDS_TDSNAME = event.ACNAME;\r\n    }\r\n\r\n    PartyEnterCommand() {\r\n        this.showPartyList();\r\n    }\r\n\r\n    showPartyList() {\r\n        this.gridPartyListPopupSettings = {\r\n            title: \"Accounts\",\r\n            apiEndpoints: `/getAccountPagedListByMapId/Details/PartyReceipt`,\r\n            defaultFilterIndex: 1,\r\n            columns: [\r\n                {\r\n                    key: \"ACID\",\r\n                    title: \"AC CODE\",\r\n                    hidden: false,\r\n                    noSearch: false\r\n                },\r\n                {\r\n                    key: \"ACNAME\",\r\n                    title: \"A/C NAME\",\r\n                    hidden: false,\r\n                    noSearch: false\r\n                }\r\n            ]\r\n        };\r\n\r\n        this.genericGridPartyList.show();\r\n\r\n    }\r\n\r\n    onPartySelect(event) {\r\n        this._reportFilterService.TDSObj.TDS_PARTYID = event.ACID;\r\n        this._reportFilterService.TDSObj.TDS_PARTYNAME = event.ACNAME;\r\n\r\n    }\r\n\r\n    checkValue() {\r\n        if (this._reportFilterService.TDSObj.TDS_ISIRDFORMAT== true) {\r\n            this._reportFilterService.TDSObj.TDS_ISIRDFORMAT=1;\r\n        }\r\n    }\r\n    SubLedgerEnterCommand(){\r\n        this.gridSubLedgerSetting = {\r\n            title: \"SubLedger List\",\r\n            apiEndpoints: `/getSubLedgerPageList`,\r\n            defaultFilterIndex: 1,\r\n            columns: [\r\n              {\r\n                key: \"SL_ACID\",\r\n                title: \"SubLedger ID\",\r\n                hidden: false,\r\n                noSearch: false\r\n              },\r\n              {\r\n                key: \"SL_ACNAME\",\r\n                title: \"SubLedger Name\",\r\n                hidden: false,\r\n                noSearch: false\r\n              }\r\n            ]\r\n          };\r\n          this.gridSubLedgerSettingList.show();\r\n    }\r\n    onSubLedgerSelect(value) {\r\n        this._reportFilterService.TDSObj.TDS_SL_ACID = value.SL_ACID;\r\n        this._reportFilterService.TDSObj.TDS_SL_ACNAME = value.SL_ACNAME;\r\n    \r\n      }\r\n      changeCheckboxValue(event){\r\n          if(event.target.value==1){\r\n           this._reportFilterService.TDSObj.TDS_ISIRDFORMAT=0;\r\n          }\r\n      }\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/pages/ReportDialogs/TDS Report/tds-report.comnponent.ts","import { NgaModule } from '../../../theme/nga.module';\r\nimport { Component, Inject, Output, EventEmitter, OnInit } from '@angular/core';\r\nimport { MdDialogRef, MD_DIALOG_DATA } from '@angular/material';\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { MasterRepo } from '../../../common/repositories';\r\nimport { Division } from '../../../common/interfaces';\r\nimport { AuthService } from '../../../common/services/permission/authService.service';\r\nimport { ReportMainService } from '../../Reports/components/ReportMain/ReportMain.service';\r\nimport { Router, NavigationEnd, ActivatedRoute } from '@angular/router';\r\nimport { AlertService } from '../../../common/services/alert/alert.service';\r\n\r\nexport interface DialogInfo {\r\n    header: string;\r\n    message: Observable<string>;\r\n}\r\n\r\n@Component({\r\n    selector: 'trial-balance-report',\r\n    template: require('./trial-balance-report.component.html'),\r\n    styles: [require('../../Reports/reportStyle.css'), require('../../modal-style.css')],\r\n})\r\n\r\nexport class TrialBalanceReport implements OnInit {\r\n    // ReportParameters: any = <any>{};\r\n    division: any[] = [];\r\n    CostcenterList: any[] = [];\r\n    userProfile: any;\r\n    date1: any;\r\n    date2: any;\r\n    instanceWiseRepName:string='Trial Balance Report';\r\n    userSetting: any;\r\n\r\n    @Output() reportdataEmit = new EventEmitter();\r\n    constructor(private masterService: MasterRepo, private _authService: AuthService,\r\n        private _reportFilterService: ReportMainService, private arouter: Router,private alertService: AlertService,\r\n        public dialogref: MdDialogRef<TrialBalanceReport>, public _ActivatedRoute: ActivatedRoute,\r\n        @Inject(MD_DIALOG_DATA) public data: DialogInfo) {\r\n        this.userProfile = this._authService.getUserProfile();\r\n        this.userSetting = _authService.getSetting();\r\n        this.division = [];\r\n        if (this.masterService.userSetting.userwisedivision == 1) {\r\n            this.masterService.getDivisionFromRightPrivelege().subscribe(res => {\r\n                if (res.status == 'ok') {\r\n                    this.division = res.result;\r\n                }\r\n            })\r\n        }\r\n        else {\r\n            this.masterService.getAllDivisions()\r\n                .subscribe(res => {\r\n                    this.division.push(<Division>res);\r\n                }, error => {\r\n                    this.masterService.resolveError(error, \"divisions - getDivisions\");\r\n                });\r\n        }\r\n\r\n        this.masterService.getCostcenter().subscribe(res => {\r\n            this.CostcenterList = res;\r\n        })\r\n        // this.masterService.getAccDivList();\r\n\r\n    }\r\n\r\n    ngOnInit() {\r\n        this._ActivatedRoute.queryParams.subscribe(params => {\r\n            if (this._reportFilterService.TrialBalanceObj.assignPrevioiusDate != true) {\r\n                this.masterService.getAccDivList();\r\n            this._reportFilterService.TrialBalanceObj.TrialBalance_DATE1 = this.masterService.PhiscalObj.BeginDate.split('T')[0];\r\n            this._reportFilterService.TrialBalanceObj.TrialBalance_DATE2 = this.masterService.PhiscalObj.EndDate.split('T')[0];\r\n                // this._reportFilterService.TrialBalanceObj.TrialBalance_DIV = this.masterService.userProfile.CompanyInfo.INITIAL;\r\n                this.masterService.viewDivision.subscribe(() => {\r\n                    if(this.masterService.userSetting.userwisedivision==0 ||  this.masterService.showAll == true){ //ALL OPTION SELECTION IN DIVISION IN REPORT DIALOG BOX\r\n                      this._reportFilterService.TrialBalanceObj.TrialBalance_DIV='%';\r\n                  }else{\r\n                    if(this.masterService.userSetting.userwisedivision==1 && this.division.length ==1){\r\n                        this._reportFilterService.TrialBalanceObj.TrialBalance_DIV=this.division[0].INITIAL;\r\n                      }else{\r\n                        this._reportFilterService.TrialBalanceObj.TrialBalance_DIV=this.masterService.userProfile.CompanyInfo.INITIAL;\r\n                    }\r\n                  }\r\n                  })\r\n                this._reportFilterService.TrialBalanceObj.TrialBalance_CostCenter = '%'\r\n                this._reportFilterService.TrialBalanceObj.TrialBalance_SUMMARYREPORT = '0';\r\n                this._reportFilterService.TrialBalanceObj.TrialBalance_LEDGERWISE = '0';\r\n                this._reportFilterService.TrialBalanceObj.TrialBalance_SHOWNETCLOSING = 1;\r\n               \r\n                if(this.userSetting.IS_NESTLE  == 1){\r\n                    this._reportFilterService.TrialBalanceObj.TrialBalance_COMPANYTYPE = 'DMS';\r\n                }else{\r\n                    this._reportFilterService.TrialBalanceObj.TrialBalance_COMPANYTYPE = 'NONDMS';\r\n                }\r\n            }\r\n\r\n            if(params.instancename){\r\n                // ////console.log(\"@@[trial bln Report0]\",params.instancename,this._reportFilterService.reportDataStore[params.instancename].param.reportparam)\r\n                this._reportFilterService.TrialBalanceObj.TrialBalance_DATE1=this._reportFilterService.reportDataStore[params.instancename].param.reportparam.DATE1;\r\n                this._reportFilterService.TrialBalanceObj.TrialBalance_DATE2=this._reportFilterService.reportDataStore[params.instancename].param.reportparam.DATE2;\r\n                this._reportFilterService.TrialBalanceObj.TrialBalance_DIV=this._reportFilterService.reportDataStore[params.instancename].param.reportparam.DIV;\r\n                this._reportFilterService.TrialBalanceObj.TrialBalance_CostCenter=this._reportFilterService.reportDataStore[params.instancename].param.reportparam.COSTCENTER;\r\n                this._reportFilterService.TrialBalanceObj.TrialBalance_LEDGERWISE=this._reportFilterService.reportDataStore[params.instancename].param.reportparam.LEDGERWISE;\r\n                this._reportFilterService.TrialBalanceObj.TrialBalance_LEVELS=this._reportFilterService.reportDataStore[params.instancename].param.reportparam.LEVELS;\r\n                this._reportFilterService.TrialBalanceObj.TrialBalance_SHOWCLOSINGONPY=this._reportFilterService.reportDataStore[params.instancename].param.reportparam.SHOWCLOSINGONPY;\r\n                this._reportFilterService.TrialBalanceObj.TrialBalance_SHOWDEBTORSCREDITORSDETAILS=this._reportFilterService.reportDataStore[params.instancename].param.reportparam.SHOWDEBTORSCREDITORSDETAILS;\r\n                this._reportFilterService.TrialBalanceObj.TrialBalance_SHOWOPENINGTRIALONLY=this._reportFilterService.reportDataStore[params.instancename].param.reportparam.SHOWOPENINGTRIALONLY;\r\n                this._reportFilterService.TrialBalanceObj.TrialBalance_SHOWSTOCKVALUE=this._reportFilterService.reportDataStore[params.instancename].param.reportparam.SHOWSTOCKVALUE;\r\n                this._reportFilterService.TrialBalanceObj.TrialBalance_SHOWSUBLEDGER=this._reportFilterService.reportDataStore[params.instancename].param.reportparam.SHOWSUBLEDGER;\r\n                this._reportFilterService.TrialBalanceObj.TrialBalance_SHOWZEROBL=this._reportFilterService.reportDataStore[params.instancename].param.reportparam.SHOWZEROBL;\r\n                this._reportFilterService.TrialBalanceObj.TrialBalance_SUMMARYREPORT=this._reportFilterService.reportDataStore[params.instancename].param.reportparam.SUMMARYREPORT;\r\n                this._reportFilterService.TrialBalanceObj.TrialBalance_SHOWNETCLOSING=this._reportFilterService.reportDataStore[params.instancename].param.reportparam.SHOWNETCLOSING;\r\n            }\r\n\r\n        })\r\n\r\n        this.changeEntryDate(this._reportFilterService.TrialBalanceObj.TrialBalance_DATE1, \"AD\");\r\n        this.changeEndDate(this._reportFilterService.TrialBalanceObj.TrialBalance_DATE2, \"AD\");\r\n\r\n    }\r\n\r\n    changeEntryDate(value, format: string) {\r\n        var adbs = require(\"ad-bs-converter\");\r\n        if (format == \"AD\") {\r\n            var adDate = (value.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n            var bsDate = adbs.ad2bs(adDate);\r\n            this._reportFilterService.TrialBalanceObj.TrialBalance_BSDATE1 = this.masterService.toBSDate(value);\r\n        }\r\n        else if (format == \"BS\") {\r\n          var datearr = value.split('/');\r\n          const bsDate = datearr[2]+\"/\"+datearr[1]+\"/\"+datearr[0]\r\n            // var bsDate = (value.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n            var adDate = adbs.bs2ad(bsDate);\r\n            var Engdate = this.masterService.toADDate(value);\r\n            const Validatedata = this.masterService.ValidateNepaliDate(Engdate)\r\n            if(Validatedata == true){\r\n              const bsDate1 = datearr[2]+\"/\"+datearr[1]+\"/\"+datearr[0];\r\n              var adDate1 = adbs.bs2ad(bsDate1);\r\n              this._reportFilterService.TrialBalanceObj.TrialBalance_DATE1= this.masterService.toADDate(value);\r\n            }else{\r\n                this.alertService.error(\"Cannot Change the date\");\r\n              return;\r\n            }\r\n            // this._reportFilterService.TrialBalanceObj.TrialBalance_DATE1 = this.masterService.toBSDate(value);\r\n        }\r\n    }\r\n\r\n    changeEndDate(value, format: string) {\r\n        var adbs = require(\"ad-bs-converter\");\r\n        if (format == \"AD\") {\r\n            var adDate = (value.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n            var bsDate = adbs.ad2bs(adDate);\r\n            this._reportFilterService.TrialBalanceObj.TrialBalance_BSDATE2 =this.masterService.toBSDate(value);\r\n        }\r\n        else if (format == \"BS\") {\r\n          var datearr = value.split('/');\r\n          const bsDate = datearr[2]+\"/\"+datearr[1]+\"/\"+datearr[0]\r\n            // var bsDate = (value.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n            var adDate = adbs.bs2ad(bsDate);\r\n            this._reportFilterService.TrialBalanceObj.TrialBalance_DATE2 = this.masterService.toADDate(value);\r\n        }\r\n    }\r\n\r\n    onload() {\r\n        this.DialogClosedResult(\"ok\");\r\n    }\r\n\r\n    closeReportBox() {\r\n        this.DialogClosedResult(\"Error!\");\r\n    }\r\n\r\n    public DialogClosedResult(res) {\r\n        if (this._reportFilterService.TrialBalanceObj.TrialBalance_SUMMARYREPORT == 0) {\r\n            this._reportFilterService.TrialBalanceObj.TrialBalance_LEVELS = 0;\r\n            this._reportFilterService.TrialBalanceObj.TrialBalance_SUMMARYREPORTDISPLAYNAME = ' @Detail Report';\r\n        }else{\r\n            this._reportFilterService.TrialBalanceObj.TrialBalance_SUMMARYREPORTDISPLAYNAME = ' @Summary Report';\r\n        }\r\n        if(this._reportFilterService.TrialBalanceObj.TrialBalance_SHOWOPENINGTRIALONLY == true){\r\n            this._reportFilterService.TrialBalanceObj.TrialBalance_SHOWOPENINGTRIALONLY =1;\r\n        }else{\r\n            this._reportFilterService.TrialBalanceObj.TrialBalance_SHOWOPENINGTRIALONLY =0;\r\n        }\r\n        if(this._reportFilterService.TrialBalanceObj.TrialBalance_SHOWSUBLEDGER == true){\r\n            this._reportFilterService.TrialBalanceObj.TrialBalance_SHOWSUBLEDGER =1;\r\n        }else{\r\n            this._reportFilterService.TrialBalanceObj.TrialBalance_SHOWSUBLEDGER =0;\r\n        }\r\n        if(this._reportFilterService.TrialBalanceObj.TrialBalance_SHOWDEBTORSCREDITORSDETAILS == true){\r\n            this._reportFilterService.TrialBalanceObj.TrialBalance_SHOWDEBTORSCREDITORSDETAILS =1;\r\n        }else{\r\n            this._reportFilterService.TrialBalanceObj.TrialBalance_SHOWDEBTORSCREDITORSDETAILS =0;\r\n        }\r\n        if(this._reportFilterService.TrialBalanceObj.TrialBalance_SHOWSTOCKVALUE == true){\r\n            this._reportFilterService.TrialBalanceObj.TrialBalance_SHOWSTOCKVALUE =1;\r\n        }else{\r\n            this._reportFilterService.TrialBalanceObj.TrialBalance_SHOWSTOCKVALUE =0;\r\n        }\r\n        if(this._reportFilterService.TrialBalanceObj.TrialBalance_SHOWCLOSINGONPY == true){\r\n            this._reportFilterService.TrialBalanceObj.TrialBalance_SHOWCLOSINGONPY =1;\r\n        }else{\r\n            this._reportFilterService.TrialBalanceObj.TrialBalance_SHOWCLOSINGONPY =0;\r\n        }\r\n        if(this._reportFilterService.TrialBalanceObj.TrialBalance_SHOWZEROBL == true){\r\n            this._reportFilterService.TrialBalanceObj.TrialBalance_SHOWZEROBL =1;\r\n        }else{\r\n            this._reportFilterService.TrialBalanceObj.TrialBalance_SHOWZEROBL =0;\r\n        }\r\n        if(this._reportFilterService.TrialBalanceObj.TrialBalance_SHOWNETCLOSING == true){\r\n            this._reportFilterService.TrialBalanceObj.TrialBalance_SHOWNETCLOSING =1;\r\n        }else{\r\n            this._reportFilterService.TrialBalanceObj.TrialBalance_SHOWNETCLOSING =0;\r\n        }\r\n\r\n        let multipleReportFormateName = '';\r\n        if(this._reportFilterService.TrialBalanceObj.TrialBalance_SHOWOPENINGTRIALONLY == 1){\r\n            multipleReportFormateName = 'Trial Balance Report'\r\n        }else if(this._reportFilterService.TrialBalanceObj.TrialBalance_SHOWOPENINGTRIALONLY == 0 && this._reportFilterService.TrialBalanceObj.TrialBalance_SHOWCLOSINGONPY == 1){\r\n            multipleReportFormateName = 'Trial Balance Report_1'\r\n        }else if(this._reportFilterService.TrialBalanceObj.TrialBalance_SHOWOPENINGTRIALONLY == 0 && this._reportFilterService.TrialBalanceObj.TrialBalance_SHOWCLOSINGONPY == 0){\r\n            multipleReportFormateName = 'Trial Balance Report_2'\r\n        }\r\n\r\n        if (this._reportFilterService.TrialBalanceObj.TrialBalance_DIV && this._reportFilterService.TrialBalanceObj.TrialBalance_DIV == '%') {\r\n            this._reportFilterService.TrialBalanceObj.TrialBalance_DIVISIONNAME = 'All';\r\n          }else if( this._reportFilterService.TrialBalanceObj.TrialBalance_DIV && this._reportFilterService.TrialBalanceObj.TrialBalance_DIV!= '%'){\r\n            let abc = this.division.filter(x=>x.INITIAL == this._reportFilterService.TrialBalanceObj.TrialBalance_DIV);\r\n              if(abc && abc.length>0 && abc[0]){\r\n                this._reportFilterService.TrialBalanceObj.TrialBalance_DIVISIONNAME = abc[0].NAME;\r\n              }else{\r\n                this._reportFilterService.TrialBalanceObj.TrialBalance_DIVISIONNAME = '';\r\n              }\r\n          }else{\r\n            this._reportFilterService.TrialBalanceObj.TrialBalance_DIVISIONNAME = '';\r\n          }\r\n    \r\n          if (this._reportFilterService.TrialBalanceObj.TrialBalance_CostCenter && this._reportFilterService.TrialBalanceObj.TrialBalance_CostCenter == '%') {\r\n            this._reportFilterService.TrialBalanceObj.TrialBalance_COSTCENTERDISPLAYNAME = 'All';\r\n          }\r\n          else if (this._reportFilterService.TrialBalanceObj.TrialBalance_CostCenter != '%') {\r\n            let abc = this.CostcenterList.filter(x=>x.CCID == this._reportFilterService.TrialBalanceObj.TrialBalance_CostCenter);\r\n            if(abc && abc.length>0 && abc[0]){\r\n              this._reportFilterService.TrialBalanceObj.TrialBalance_COSTCENTERDISPLAYNAME = abc[0].COSTCENTERNAME;\r\n            }else{\r\n              this._reportFilterService.TrialBalanceObj.TrialBalance_COSTCENTERDISPLAYNAME = '';\r\n            }\r\n          } else {\r\n            this._reportFilterService.TrialBalanceObj.TrialBalance_COSTCENTERDISPLAYNAME = '';\r\n          }\r\n\r\n          if (this._reportFilterService.TrialBalanceObj.TrialBalance_LEDGERWISE == 0) {\r\n            this._reportFilterService.TrialBalanceObj.TrialBalance_REPORTOPTIONDISPLAYNAME = ' @Group Wise Report';\r\n        } else if (this._reportFilterService.TrialBalanceObj.TrialBalance_LEDGERWISE == 1) {\r\n            this._reportFilterService.TrialBalanceObj.TrialBalance_REPORTOPTIONDISPLAYNAME = ' @Ledger Wise Report';\r\n        }\r\n\r\n        if (res == \"ok\") {\r\n            this._reportFilterService.TrialBalanceObj.assignPrevioiusDate = true;\r\n            let routepaths = this.arouter.url.split('/');\r\n            let activeurlpath2;\r\n            if (routepaths && routepaths.length) {\r\n                activeurlpath2 = routepaths[routepaths.length - 1]\r\n            }\r\n\r\n            if(this._reportFilterService.TrialBalance_loadedTimes == 0){\r\n                this._reportFilterService.previouslyLoadedReportList.push(\r\n                    {\r\n                        reportname: 'Trial Balance Report',\r\n                        activeurlpath: this.arouter.url,\r\n                        activerurlpath2: activeurlpath2,\r\n                        instanceWiseRepName:this.instanceWiseRepName +this._reportFilterService.TrialBalance_loadedTimes,\r\n                    });\r\n            }else{\r\n                this._reportFilterService.previouslyLoadedReportList.push(\r\n                    {\r\n                        reportname: 'Trial Balance Report'+'_'+this._reportFilterService.TrialBalance_loadedTimes,\r\n                        activeurlpath: this.arouter.url,\r\n                        activerurlpath2: activeurlpath2,\r\n                        instanceWiseRepName:this.instanceWiseRepName +this._reportFilterService.TrialBalance_loadedTimes,\r\n                    });\r\n            }\r\n\r\n        }\r\n\r\n        this.reportdataEmit.emit({\r\n            status: res, data: {\r\n                REPORTDISPLAYNAME : 'Trial Balance Report',\r\n                reportname: multipleReportFormateName,\r\n                instanceWiseRepName:this.instanceWiseRepName+this._reportFilterService.TrialBalance_loadedTimes,\r\n                reportparam: {\r\n                    REPORTOPTIONDISPLAYNAME: this._reportFilterService.TrialBalanceObj.TrialBalance_REPORTOPTIONDISPLAYNAME?this._reportFilterService.TrialBalanceObj.TrialBalance_REPORTOPTIONDISPLAYNAME:'',\r\n                    DATE1: this._reportFilterService.TrialBalanceObj.TrialBalance_DATE1,\r\n                    DATE2: this._reportFilterService.TrialBalanceObj.TrialBalance_DATE2,\r\n                    BSDATE1: this._reportFilterService.TrialBalanceObj.TrialBalance_BSDATE1,\r\n                    BSDATE2: this._reportFilterService.TrialBalanceObj.TrialBalance_BSDATE2,\r\n                    DIV: this._reportFilterService.TrialBalanceObj.TrialBalance_DIV?this._reportFilterService.TrialBalanceObj.TrialBalance_DIV:'%',\r\n                    PHISCALID: this.masterService.PhiscalObj.PhiscalID,\r\n                    CID: this.masterService.userProfile.CompanyInfo.COMPANYID,\r\n                    COSTCENTER: this._reportFilterService.TrialBalanceObj.TrialBalance_CostCenter?this._reportFilterService.TrialBalanceObj.TrialBalance_CostCenter:'%',\r\n                    LEDGERWISE: this._reportFilterService.TrialBalanceObj.TrialBalance_LEDGERWISE?this._reportFilterService.TrialBalanceObj.TrialBalance_LEDGERWISE:0,\r\n                    SUMMARYREPORT: this._reportFilterService.TrialBalanceObj.TrialBalance_SUMMARYREPORT?this._reportFilterService.TrialBalanceObj.TrialBalance_SUMMARYREPORT:0,\r\n                    LEVELS: this._reportFilterService.TrialBalanceObj.TrialBalance_LEVELS,\r\n                    SHOWOPENINGTRIALONLY: this._reportFilterService.TrialBalanceObj.TrialBalance_SHOWOPENINGTRIALONLY,\r\n                    SHOWSUBLEDGER: this._reportFilterService.TrialBalanceObj.TrialBalance_SHOWSUBLEDGER,\r\n                    SHOWDEBTORSCREDITORSDETAILS: this._reportFilterService.TrialBalanceObj.TrialBalance_SHOWDEBTORSCREDITORSDETAILS,\r\n                    SHOWSTOCKVALUE: this._reportFilterService.TrialBalanceObj.TrialBalance_SHOWSTOCKVALUE,\r\n                    SHOWCLOSINGONPY: this._reportFilterService.TrialBalanceObj.TrialBalance_SHOWCLOSINGONPY,\r\n                    SHOWZEROBL: this._reportFilterService.TrialBalanceObj.TrialBalance_SHOWZEROBL,\r\n                    COMPANYID: this.masterService.userProfile.CompanyInfo.COMPANYID,\r\n                    COMPANYTYPE: this._reportFilterService.TrialBalanceObj.TrialBalance_COMPANYTYPE ? this._reportFilterService.TrialBalanceObj.TrialBalance_COMPANYTYPE : 'NONDMS',\r\n                    DIVISIONNAME : this._reportFilterService.TrialBalanceObj.TrialBalance_DIVISIONNAME ? this._reportFilterService.TrialBalanceObj.TrialBalance_DIVISIONNAME : '',\r\n                    COSTCENTERDISPLAYNAME: this._reportFilterService.TrialBalanceObj.TrialBalance_COSTCENTERDISPLAYNAME?this._reportFilterService.TrialBalanceObj.TrialBalance_COSTCENTERDISPLAYNAME:'',\r\n                    SUMMARYREPORTDISPLAYNAME:this._reportFilterService.TrialBalanceObj.TrialBalance_SUMMARYREPORTDISPLAYNAME?this._reportFilterService.TrialBalanceObj.TrialBalance_SUMMARYREPORTDISPLAYNAME:'',\r\n                    SHOWNETCLOSING: this._reportFilterService.TrialBalanceObj.TrialBalance_SHOWNETCLOSING\r\n                    // NODEACID:\r\n                    // NODEACNAME:\r\n                }\r\n            }\r\n        });\r\n\r\n        if(res == \"ok\"){\r\n            this._reportFilterService.TrialBalance_loadedTimes = this._reportFilterService.TrialBalance_loadedTimes+1;\r\n        }\r\n    }\r\n\r\n    checkValue() {\r\n        // ////console.log(\"@@_reportFilterService.TrialBalanceObj.TrialBalance_SHOWOPENINGTRIALONLY\", this._reportFilterService.TrialBalanceObj.TrialBalance_SHOWOPENINGTRIALONLY)\r\n        if (this._reportFilterService.TrialBalanceObj.TrialBalance_SHOWOPENINGTRIALONLY == true) {\r\n            this._reportFilterService.TrialBalanceObj.TrialBalance_SHOWOPENINGTRIALONLY =1;\r\n            this._reportFilterService.TrialBalanceObj.TrialBalance_SHOWCLOSINGONPY = 0;\r\n        }\r\n    }\r\n\r\n\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/pages/ReportDialogs/Trial-Balance-Report/trial-balance-report.component.ts","import { Component, Output, EventEmitter, ViewChild, Input, ElementRef } from '@angular/core';\r\nimport { MasterRepo } from '../../../common/repositories';\r\n\r\n@Component({\r\n  selector: 'vat-purchase-register-report',\r\n  template: require('./vat-purchase-register-report.component.html'),\r\n  styles: [require('../../modal-style.css'), require('../../Reports/reportStyle.css')],\r\n})\r\nexport class VATpurchaseRegisterReportComponent {\r\n  VATpurchaseRegisterReport: any = <any>{};\r\n\r\n  @ViewChild('division') division: ElementRef\r\n  private divisionList = []\r\n  showopeningBl: string\r\n  @Output() reportdataEmit = new EventEmitter();\r\n  @Input() reportType: string;\r\n\r\n\r\n  constructor(public masterService: MasterRepo) {\r\n    this.VATpurchaseRegisterReport.DATE1 = new Date().toJSON().split('T')[0];\r\n    this.changeEntryDate(this.VATpurchaseRegisterReport.DATE1, \"AD\");\r\n    this.VATpurchaseRegisterReport.DATE = new Date().toJSON().split('T')[0];\r\n    this.changeEndDate(this.VATpurchaseRegisterReport.DATE, \"AD\");\r\n\r\n    this.masterService.getAllDivisions().subscribe((res) => {\r\n      this.divisionList.push(res)\r\n    })\r\n  }\r\n\r\n  onload() {\r\n    this.DialogClosedResult(\"ok\");\r\n\r\n  }\r\n\r\n  public DialogClosedResult(res) {\r\n    if (this.VATpurchaseRegisterReport.isPI == true) {\r\n      this.VATpurchaseRegisterReport.V1 = 'PI'\r\n    } else {\r\n      this.VATpurchaseRegisterReport.V1 = ''\r\n    }\r\n    if (this.VATpurchaseRegisterReport.isCP == true) {\r\n      this.VATpurchaseRegisterReport.V2 = 'CP'\r\n    } else {\r\n      this.VATpurchaseRegisterReport.V2 = ''\r\n    }\r\n    if (this.VATpurchaseRegisterReport.isDN == true) {\r\n      this.VATpurchaseRegisterReport.V3 = 'DN'\r\n    } else {\r\n      this.VATpurchaseRegisterReport.V3 = ''\r\n    }\r\n    if (this.VATpurchaseRegisterReport.isCN == true) {\r\n      this.VATpurchaseRegisterReport.V4 = 'CN'\r\n    } else {\r\n      this.VATpurchaseRegisterReport.V4 = ''\r\n    }\r\n    this.reportdataEmit.emit({\r\n      status: res, data: {\r\n        reportname: 'VAT Purchase Register Report', reportparam: {\r\n          DATE1: this.VATpurchaseRegisterReport.DATE1,\r\n          DATE2: this.VATpurchaseRegisterReport.DATE,\r\n          DIV: this.VATpurchaseRegisterReport.DIV,\r\n          COMPANYID: this.masterService.userProfile.CompanyInfo.COMPANYID,\r\n          PHISCALID: this.masterService.PhiscalObj.PhiscalID,\r\n          V1: this.VATpurchaseRegisterReport.V1,\r\n          V2: this.VATpurchaseRegisterReport.V2,\r\n          V3: this.VATpurchaseRegisterReport.V3,\r\n          V4: this.VATpurchaseRegisterReport.V4,\r\n          isPI: false,\r\n          isCP: false,\r\n          isCN: false,\r\n          isDN: false\r\n\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  divisionChanged() {\r\n    this.VATpurchaseRegisterReport.DIV = this.division.nativeElement.value\r\n  }\r\n\r\n  hide() {\r\n    this.DialogClosedResult(\"Error\");\r\n  }\r\n\r\n  changeEntryDate(value, format: string) {\r\n    var adbs = require(\"ad-bs-converter\");\r\n    if (format == \"AD\") {\r\n      var adDate = (value.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n      var bsDate = adbs.ad2bs(adDate);\r\n      this.VATpurchaseRegisterReport.BSDATE1 = this.masterService.toBSDate(value);\r\n    }\r\n    else if (format == \"BS\") {\r\n      var bsDate = (value.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n      var adDate = adbs.bs2ad(bsDate);\r\n      this.VATpurchaseRegisterReport.DATE1 = this.masterService.toADDate(value);\r\n    }\r\n  }\r\n\r\n  changeEndDate(value, format: string) {\r\n    var adbs = require(\"ad-bs-converter\");\r\n    if (format == \"AD\") {\r\n      var adDate = (value.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n      var bsDate = adbs.ad2bs(adDate);\r\n      this.VATpurchaseRegisterReport.BSDATE2 = this.masterService.toBSDate(value);\r\n    }\r\n    else if (format == \"BS\") {\r\n      var bsDate = (value.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n      var adDate = adbs.bs2ad(bsDate);\r\n      this.VATpurchaseRegisterReport.DATE = this.masterService.toADDate(value);\r\n    }\r\n  }\r\n\r\n  cancel() {\r\n    this.DialogClosedResult(\"cancel\");\r\n  }\r\n\r\n  preventInput($event) {\r\n    $event.preventDefault();\r\n    return false;\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/pages/ReportDialogs/VAT-Purchase-Register-Report/vat-purchase-register-report.component.ts","import { Component, Output, EventEmitter } from \"@angular/core\";\r\nimport { MasterRepo } from \"../../../common/repositories/masterRepo.service\";\r\nimport { ReportMainService } from \"../../Reports/components/ReportMain/ReportMain.service\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { Subscriber } from \"rxjs/Subscriber\";\r\nimport { PLedgerservice } from \"../../masters/components/PLedger/PLedger.service\";\r\n\r\n@Component({\r\n    selector: \"account-filters\",\r\n    template: require('./account-filters.component.html'),\r\n    styles: [require('../../modal-style.css'), require('../../Reports/reportStyle.css')],\r\n    providers:[PLedgerservice]\r\n})\r\nexport class AccountFilters {\r\n    result: any;\r\n    account:any[]=[];\r\n\r\n    constructor(public masterService: MasterRepo, private _reportFilterService: ReportMainService,        private PledgerService: PLedgerservice) {\r\n        ////console.log(\"this._reportFilterService.ReportFilterObject.Reportname\", this._reportFilterService.ReportFilterObject.Reportnameis)\r\n        _reportFilterService.ReportFilterObject.multipleAccounts = [];\r\n\r\n        if(this._reportFilterService.AccoutLedgerObj.assignPrevioiusDate == true && this._reportFilterService.reportUrlPath == 'accountledgerreport' && (_reportFilterService.AccoutLedgerObj.multipleAccounts && _reportFilterService.AccoutLedgerObj.multipleAccounts.length!=0)){\r\n            _reportFilterService.ReportFilterObject.multipleAccounts = _reportFilterService.AccoutLedgerObj.multipleAccounts;\r\n    }\r\n        if(this._reportFilterService.PartyLedgerObj.assignPrevioiusDate == true && this._reportFilterService.reportUrlPath == 'partyledgerreport' && (_reportFilterService.PartyLedgerObj.multipleAccounts && _reportFilterService.PartyLedgerObj.multipleAccounts.length!=0)){\r\n            _reportFilterService.ReportFilterObject.multipleAccounts = _reportFilterService.PartyLedgerObj.multipleAccounts;\r\n    }\r\n      \r\n\r\n        this.masterService.getAccountListACIDNotLikePA().subscribe(res => {\r\n            this.account=res;\r\n            if(this.account.length!=0){\r\n                this._reportFilterService.result=true;\r\n            }else{\r\n                this._reportFilterService.result=false;\r\n            }    \r\n        })\r\n        \r\n        this.masterService.getAccountListACIDLikePA().subscribe(res => {\r\n            this.account=res;\r\n            if(this.account.length!=0){\r\n                this._reportFilterService.result=true;\r\n            }else{\r\n                this._reportFilterService.result=false;\r\n            }    \r\n        })\r\n    }\r\n\r\n    dropListItem = (keyword: any): Observable<Array<any>> => {\r\n        return new Observable((observer: Subscriber<Array<any>>) => {\r\n            if (this._reportFilterService.ReportFilterObject.Reportnameis == 'accountledger') {\r\n                this.masterService.getAccountListACIDNotLikePA().map(data => {\r\n                    this.result = data.result;\r\n                    return this.result.filter(ac => ac.ACNAME.toUpperCase().indexOf(keyword.toUpperCase()) > -1);\r\n                }\r\n                ).subscribe(res => { observer.next(res); })\r\n            } else if (this._reportFilterService.ReportFilterObject.Reportnameis == 'partyledger') {\r\n                this.masterService.getAccountListACIDLikePA().map(data => {\r\n                    this.result = data.result;\r\n                    return this.result.filter(ac => ac.ACNAME.toUpperCase().indexOf(keyword.toUpperCase()) > -1);\r\n                }\r\n                ).subscribe(res => { observer.next(res); })\r\n            }else if(this._reportFilterService.ReportFilterObject.Reportnameis=='debitorsoutstanding'){\r\n                let ptype = 'C'\r\n                this.PledgerService.getPartyItemByPtype(ptype).map(data => {\r\n                    if (data.status == \"ok\") {\r\n                        let result = data.result;\r\n                        return result.filter(ac => ac.ACNAME.toUpperCase().indexOf(keyword.toUpperCase()) > -1);\r\n                    }\r\n                }\r\n                ).subscribe(res => { observer.next(res); })\r\n            }else if(this._reportFilterService.ReportFilterObject.Reportnameis=='creditorsoutstanding'){\r\n                let ptype = 'V'\r\n                this.PledgerService.getPartyItemByPtype(ptype).map(data => {\r\n                    if (data.status == \"ok\") {\r\n                        let result = data.result;\r\n                        return result.filter(ac => ac.ACNAME.toUpperCase().indexOf(keyword.toUpperCase()) > -1);\r\n                    }\r\n                }\r\n                ).subscribe(res => { observer.next(res); })\r\n            }\r\n        }).share();\r\n    }\r\n\r\n    accodeMultipleChanged(value: string) {\r\n        var item = this.masterService.accountList.find(x => x.ACCODE == value);\r\n        this._reportFilterService.ReportFilterObject.multipleACNAME = '';\r\n        if (item) {\r\n            value = item.ACNAME;\r\n            //console.log(value + \"****\");\r\n            this._reportFilterService.ReportFilterObject.multipleACNAME = value;\r\n        }\r\n    }\r\n\r\n    onEnterMulAcnameChange(value) {\r\n        this.accodeMultipleChanged(value);\r\n    }\r\n\r\n    itemMultipleChanged(value: any) {\r\n        if (typeof (value) === \"object\") {\r\n            this._reportFilterService.ReportFilterObject.multipleACNAME = value.ACNAME;\r\n            this._reportFilterService.ReportFilterObject.multipleACCODE = value.ACCODE;\r\n            this._reportFilterService.ReportFilterObject.multipleACID = value.ACID;\r\n    }\r\n}\r\n\r\n    addAccountToList() {\r\n        let selectACList = this._reportFilterService.ReportFilterObject.multipleAccounts.filter(acList => acList.ACNAME == this._reportFilterService.ReportFilterObject.multipleACNAME)\r\n        if (\r\n            this._reportFilterService.ReportFilterObject.multipleACNAME === \"\" ||\r\n            this._reportFilterService.ReportFilterObject.multipleACNAME === null ||\r\n            this._reportFilterService.ReportFilterObject.multipleACNAME === undefined\r\n        ) {\r\n            return;\r\n        }\r\n\r\n        if (selectACList.length === 0) {\r\n            this._reportFilterService.ReportFilterObject.multipleAccounts.push({ ACID: this._reportFilterService.ReportFilterObject.multipleACID, ACNAME: this._reportFilterService.ReportFilterObject.multipleACNAME })\r\n                this._reportFilterService.ReportFilterObject.multipleACNAME='';\r\n                this._reportFilterService.ReportFilterObject.multipleACCODE='';\r\n        }\r\n    }\r\n\r\n    deleteAccount(index) {\r\n        this._reportFilterService.ReportFilterObject.multipleAccounts.splice(index, 1)\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/pages/ReportDialogs/account-filters/account-filters.component.ts","import { Component, Output, EventEmitter, OnInit, ViewChild } from \"@angular/core\";\r\nimport { MasterRepo } from \"../../../common/repositories/masterRepo.service\";\r\nimport { ReportMainService } from \"../../Reports/components/ReportMain/ReportMain.service\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { Subscriber } from \"rxjs/Subscriber\";\r\nimport { GenericPopUpComponent, GenericPopUpSettings } from \"../../../common/popupLists/generic-grid/generic-popup-grid.component\";\r\n\r\n@Component({\r\n    selector: \"account-list\",\r\n    template: require('./account-list.component.html'),\r\n    styles: [require('../../modal-style.css'), require('../../Reports/reportStyle.css')],\r\n})\r\nexport class AccountList implements OnInit {\r\n    result: any;\r\n    account:any[]=[];\r\n    account2:any[]=[];\r\n\r\n    @ViewChild(\"genericGridCashBankBook\") genericGridCashBankBook: GenericPopUpComponent;\r\n    gridPopupSettingsForAccountList: GenericPopUpSettings = new GenericPopUpSettings();\r\n    constructor(public masterService: MasterRepo,\r\n         private _reportFilterService: ReportMainService) {\r\n\r\n        if (this._reportFilterService.CashAndBankBookObj.Reportnameis == 'cashbankbookreport') {\r\n            this.masterService.getCashListForReport().subscribe(res => {\r\n                this.account=res.data;\r\n                ////console.log(\"@@res\",res)\r\n                if(this.account.length!=0){\r\n                this._reportFilterService.result=true;\r\n                }else{\r\n                    this._reportFilterService.result=false;\r\n                } \r\n            })\r\n\r\n            this.masterService.getBankBookListForReport().subscribe(res => {\r\n                this.account2=res.data;\r\n                if(this.account2.length!=0){\r\n                    this._reportFilterService.result2=true;\r\n                }else{\r\n                    this._reportFilterService.result2=false;\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    ngOnInit(){\r\n        \r\n    }\r\n\r\n    AccountEnterClicked() {\r\n        if(this._reportFilterService.CashAndBankBookObj.REPORTMODE=='1'){\r\n            this.gridPopupSettingsForAccountList = this.masterService.getGenericGridPopUpSettings('CashBookList');\r\n        }else if(this._reportFilterService.CashAndBankBookObj.REPORTMODE=='2'){\r\n            this.gridPopupSettingsForAccountList = this.masterService.getGenericGridPopUpSettings('BankBookList');\r\n        }\r\n        this.genericGridCashBankBook.show();\r\n    }\r\n\r\n    dblClickAccountSelect(account) {\r\n        this._reportFilterService.CashAndBankBookObj.ACID = account.ACID;\r\n        this._reportFilterService.CashAndBankBookObj.ACCNAME = account.ACNAME;\r\n        this._reportFilterService.CashAndBankBookObj.SingleAccount = account.ACID;\r\n    }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/pages/ReportDialogs/account-list/account-list.component.ts","import { Component, Inject, Output, EventEmitter, ViewChild, Input } from '@angular/core';\r\nimport { MasterRepo } from '../../../common/repositories';\r\nimport { Observable, Subscriber } from \"rxjs\";\r\nimport * as moment from 'moment'\r\nimport { GenericPopUpComponent, GenericPopUpSettings } from '../../../common/popupLists/generic-grid/generic-popup-grid.component';\r\nimport { TransactionService } from '../../../common/Transaction Components/transaction.service';\r\n\r\n\r\n@Component({\r\n  selector: 'account-payable-report',\r\n  template: require('./account-payable.component.html'),\r\n  styles: [require('../../modal-style.css'), require('../../Reports/reportStyle.css')],\r\n  providers: [TransactionService]\r\n\r\n})\r\nexport class AccountPayableReport {\r\n  @ViewChild(\"genericGridCustomer\") genericGridCustomer: GenericPopUpComponent;\r\n  gridPopupSettingsForCustomer: GenericPopUpSettings = new GenericPopUpSettings();\r\n\r\n  public ACNAME: string;\r\n  accountpayable = {\r\n    reportname: \"\",\r\n    reportparam: {\r\n      DATE1: \"\",\r\n      DATE2: \"\",\r\n      ACID: \"%\",\r\n      DIV: \"\",\r\n      COMPANYID: \"\",\r\n      PHISCALID: \"\",\r\n      SHOWZEROBL: 1\r\n    }\r\n\r\n\r\n  };\r\n  selectedDate: { startDate: moment.Moment, endDate: moment.Moment };\r\n  showopeningBl: string\r\n  @Output() reportdataEmit = new EventEmitter();\r\n  @Input() reportType: string;\r\n  constructor(public masterService: MasterRepo, public _trnMainService: TransactionService) {\r\n    var voucherprefix=\"voucherprefix\";\r\n    this.gridPopupSettingsForCustomer = {\r\n      title: \"Suppliers\",\r\n      apiEndpoints: `/getAccountPagedListByPType/PA/V/${voucherprefix}`,\r\n      defaultFilterIndex: 0,\r\n      columns: [\r\n        {\r\n          key: \"ACNAME\",\r\n          title: \"NAME\",\r\n          hidden: false,\r\n          noSearch: false\r\n        },\r\n        {\r\n          key: \"ACCODE\",\r\n          title: \"CODE\",\r\n          hidden: false,\r\n          noSearch: false\r\n        },\r\n        {\r\n          key: \"ADDRESS\",\r\n          title: \"ADDRESS\",\r\n          hidden: false,\r\n          noSearch: false\r\n        },\r\n        {\r\n          key: \"EMAIL\",\r\n          title: \"EMAIL\",\r\n          hidden: false,\r\n          noSearch: false\r\n        }\r\n      ]\r\n    };\r\n  }\r\n  alwaysShowCalendars: boolean = true;\r\n  ranges: any = {\r\n    'Today': [moment(), moment()],\r\n    'Yesterday': [moment().subtract(1, 'days'), moment().subtract(1, 'days')],\r\n    'Last 7 Days': [moment().subtract(6, 'days'), moment()],\r\n    'Last 30 Days': [moment().subtract(29, 'days'), moment()],\r\n    'This Month': [moment().startOf('month'), moment().endOf('month')],\r\n    'Last Month': [moment().subtract(1, 'month').startOf('month'), moment().subtract(1, 'month').endOf('month')],\r\n    'Financial Year': [moment().set('date', 1).set('month', 3), moment().endOf('month').set('month', 2).add(1, 'year')],\r\n\r\n  }\r\n  locale = {\r\n    format: 'DD/MM/YYYY',\r\n    direction: 'ltr', // could be rtl\r\n    weekLabel: 'W',\r\n    separator: ' - ', // default is ' - '\r\n    cancelLabel: 'Cancel', // detault is 'Cancel'\r\n    applyLabel: 'Okay', // detault is 'Apply'\r\n    clearLabel: 'Clear', // detault is 'Clear'\r\n    customRangeLabel: 'Custom Range',\r\n    daysOfWeek: moment.weekdaysMin(),\r\n    monthNames: moment.monthsShort(),\r\n    firstDay: 0 // first day is monday\r\n  }\r\n\r\n  onload() {\r\n    this.accountpayable.reportname = 'AccountPayable Report';\r\n    this.accountpayable.reportparam.COMPANYID = this.masterService.userProfile.CompanyInfo.COMPANYID;\r\n    this.accountpayable.reportparam.DIV = this.masterService.userProfile.CompanyInfo.INITIAL;\r\n    this.accountpayable.reportparam.PHISCALID = this.masterService.PhiscalObj.PhiscalID;\r\n    this.accountpayable.reportparam.SHOWZEROBL = this.accountpayable.reportparam.SHOWZEROBL ? 1 : 0;\r\n    this.reportdataEmit.emit({ status: \"ok\", data: this.accountpayable });\r\n\r\n  }\r\n\r\n  closeReportBox() {\r\n    this.reportdataEmit.emit({ status: \"Error!\", data: this.accountpayable });\r\n  }\r\n\r\n  onCustomerSelected(customer) {\r\n    this.accountpayable.reportparam.ACID = customer.ACID;\r\n    this.ACNAME = customer.ACNAME;\r\n  }\r\n\r\n  dateChanged(date) {\r\n    this.accountpayable.reportparam.DATE1 = moment(this.selectedDate.startDate).format('MM-DD-YYYY')\r\n    this.accountpayable.reportparam.DATE2 = moment(this.selectedDate.endDate).format('MM-DD-YYYY')\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n  customerEnterCommand(e) {\r\n    this.genericGridCustomer.show();\r\n  }\r\n\r\n  preventInput($event) {\r\n    $event.preventDefault();\r\n    return false;\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/pages/ReportDialogs/account-payable/account-payable.component.ts","import { Component, Output, EventEmitter, ViewChild, Input } from '@angular/core';\r\nimport { MasterRepo } from '../../../common/repositories';\r\nimport * as moment from 'moment'\r\nimport { GenericPopUpComponent, GenericPopUpSettings } from '../../../common/popupLists/generic-grid/generic-popup-grid.component';\r\n\r\n\r\n@Component({\r\n  selector: 'account-receivable-report',\r\n  template: require('./account-receivable.component.html'),\r\n  styles: [require('../../modal-style.css'), require('../../Reports/reportStyle.css')],\r\n})\r\nexport class AccountReceivableReport {\r\n  @ViewChild(\"genericGridCustomer\") genericGridCustomer: GenericPopUpComponent;\r\n  gridPopupSettingsForSupplier: GenericPopUpSettings = new GenericPopUpSettings();\r\n  ACNAME: string;\r\n  accountreceivable = {\r\n    reportname: \"\",\r\n    reportparam: {\r\n      DATE1: \"\",\r\n      DATE2: \"\",\r\n      ACID: \"%\",\r\n      DIV: \"\",\r\n      COMPANYID: \"\",\r\n      PHISCALID: \"\",\r\n      SHOWZEROBL: 1\r\n    }\r\n\r\n\r\n  };\r\n  selectedDate: { startDate: moment.Moment, endDate: moment.Moment };\r\n  showopeningBl: string\r\n  @Output() reportdataEmit = new EventEmitter();\r\n  @Input() reportType: string;\r\n  constructor(public masterService: MasterRepo) {\r\n    var voucherprefix=\"voucherprefix\";\r\n    this.gridPopupSettingsForSupplier = {\r\n      title: \"Customers\",\r\n      apiEndpoints: `/getAccountPagedListByPType/PA/C/${voucherprefix}`,\r\n      defaultFilterIndex: 0,\r\n      columns: [\r\n        {\r\n          key: \"ACNAME\",\r\n          title: \"NAME\",\r\n          hidden: false,\r\n          noSearch: false\r\n        },\r\n        {\r\n          key: \"ACCODE\",\r\n          title: \"CODE\",\r\n          hidden: false,\r\n          noSearch: false\r\n        },\r\n        {\r\n          key: \"ADDRESS\",\r\n          title: \"ADDRESS\",\r\n          hidden: false,\r\n          noSearch: false\r\n        },\r\n        {\r\n          key: \"EMAIL\",\r\n          title: \"EMAIL\",\r\n          hidden: false,\r\n          noSearch: false\r\n        }\r\n      ]\r\n    };\r\n  }\r\n  alwaysShowCalendars: boolean = true;\r\n  ranges: any = {\r\n    'Today': [moment(), moment()],\r\n    'Yesterday': [moment().subtract(1, 'days'), moment().subtract(1, 'days')],\r\n    'Last 7 Days': [moment().subtract(6, 'days'), moment()],\r\n    'Last 30 Days': [moment().subtract(29, 'days'), moment()],\r\n    'This Month': [moment().startOf('month'), moment().endOf('month')],\r\n    'Last Month': [moment().subtract(1, 'month').startOf('month'), moment().subtract(1, 'month').endOf('month')],\r\n    'Financial Year': [moment().set('date', 1).set('month', 3), moment().endOf('month').set('month', 2).add(1, 'year')],\r\n\r\n  }\r\n  locale = {\r\n    format: 'DD/MM/YYYY',\r\n    direction: 'ltr', // could be rtl\r\n    weekLabel: 'W',\r\n    separator: ' - ', // default is ' - '\r\n    cancelLabel: 'Cancel', // detault is 'Cancel'\r\n    applyLabel: 'Okay', // detault is 'Apply'\r\n    clearLabel: 'Clear', // detault is 'Clear'\r\n    customRangeLabel: 'Custom Range',\r\n    daysOfWeek: moment.weekdaysMin(),\r\n    monthNames: moment.monthsShort(),\r\n    firstDay: 0 // first day is monday\r\n  }\r\n\r\n  onload() {\r\n    this.accountreceivable.reportname = 'AccountReceivable Report';\r\n    this.accountreceivable.reportparam.COMPANYID = this.masterService.userProfile.CompanyInfo.COMPANYID;\r\n    this.accountreceivable.reportparam.DIV = this.masterService.userProfile.CompanyInfo.INITIAL;\r\n    this.accountreceivable.reportparam.PHISCALID = this.masterService.PhiscalObj.PhiscalID;\r\n    this.accountreceivable.reportparam.SHOWZEROBL = this.accountreceivable.reportparam.SHOWZEROBL ? 1 : 0;\r\n    this.reportdataEmit.emit({ status: \"ok\", data: this.accountreceivable });\r\n\r\n  }\r\n\r\n  closeReportBox() {\r\n    this.reportdataEmit.emit({ status: \"Error!\", data: this.accountreceivable });\r\n  }\r\n\r\n  onCustomerSelected(customer) {\r\n\r\n    this.accountreceivable.reportparam.ACID = customer.ACID;\r\n    this.ACNAME = customer.ACNAME;\r\n  }\r\n\r\n  dateChanged() {\r\n    this.accountreceivable.reportparam.DATE1 = moment(this.selectedDate.startDate).format('MM-DD-YYYY')\r\n    this.accountreceivable.reportparam.DATE2 = moment(this.selectedDate.endDate).format('MM-DD-YYYY')\r\n\r\n  }\r\n\r\n  customerEnterCommand() {\r\n    this.genericGridCustomer.show();\r\n\r\n  }\r\n\r\n  preventInput($event) {\r\n    $event.preventDefault();\r\n    return false;\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/pages/ReportDialogs/account-receivable/account-receivable.component.ts","import { Component, Inject, Output, EventEmitter, ViewChild, Input } from '@angular/core';\r\nimport { MasterRepo } from '../../../common/repositories';\r\nimport { Observable, Subscriber } from \"rxjs\";\r\nimport * as moment from 'moment'\r\nimport { GenericPopUpComponent, GenericPopUpSettings } from '../../../common/popupLists/generic-grid/generic-popup-grid.component';\r\nimport { TransactionService } from '../../../common/Transaction Components/transaction.service';\r\nimport { AlertService } from '../../../common/services/alert/alert.service';\r\n\r\n\r\n@Component({\r\n  selector: 'aging-payable-report',\r\n  template: require('./aging-payable.component.html'),\r\n  styles: [require('../../modal-style.css'), require('../../Reports/reportStyle.css')],\r\n  providers: [TransactionService]\r\n\r\n})\r\nexport class AgingPayableReport {\r\n  @ViewChild(\"genericGridSupplier\") genericGridSupplier: GenericPopUpComponent;\r\n  gridPopupSettingsForCustomer: GenericPopUpSettings = new GenericPopUpSettings();\r\n  public ACNAME\r\n  agingpayable = {\r\n    reportname: \"\",\r\n    reportparam: {\r\n      from: \"\",\r\n      acid: \"%\",\r\n      summaryreport: 1,\r\n      phiscalid: this.masterService.PhiscalObj.PhiscalID,\r\n      companyid: this.masterService.userProfile.CompanyInfo.COMPANYID,\r\n      div: this.masterService.userProfile.userDivision,\r\n    }\r\n  };\r\n  selectedDate: { startDate: moment.Moment, endDate: moment.Moment };\r\n  @Output() reportdataEmit = new EventEmitter();\r\n  @Input() reportType: string;\r\n  constructor(public masterService: MasterRepo, public _trnMainService: TransactionService, public alertService: AlertService) {\r\n    var voucherprefix=\"voucherprefix\";\r\n    this.gridPopupSettingsForCustomer = {\r\n      title: \"Suppliers\",\r\n      apiEndpoints: `/getAccountPagedListByPType/PA/V/${voucherprefix}`,\r\n      defaultFilterIndex: 0,\r\n      columns: [\r\n        {\r\n          key: \"ACNAME\",\r\n          title: \"NAME\",\r\n          hidden: false,\r\n          noSearch: false\r\n        },\r\n        {\r\n          key: \"ACCODE\",\r\n          title: \"CODE\",\r\n          hidden: false,\r\n          noSearch: false\r\n        }\r\n      ]\r\n    };\r\n  }\r\n  alwaysShowCalendars: boolean = true;\r\n  onload() {\r\n    // if (!this.agingpayable.reportparam.summaryreport && (this.ACNAME == \"\" || this.ACNAME == null || this.ACNAME == undefined)) {\r\n    //   this.alertService.error(\"Please Choose Supplier for Detail Report\");\r\n    //   return;\r\n    // }\r\n    this.agingpayable.reportparam.summaryreport = this.agingpayable.reportparam.summaryreport ? 1 : 0\r\n    this.agingpayable.reportname = 'AGING PAYABLE';\r\n    this.agingpayable.reportparam.acid = this.acidList.length ? this.acidList.join(\",\") : '%';\r\n    this.reportdataEmit.emit({ status: \"ok\", data: this.agingpayable });\r\n\r\n  }\r\n\r\n  closeReportBox() {\r\n    this.reportdataEmit.emit({ status: \"Error!\", data: this.agingpayable });\r\n  }\r\n  public selectedVoucherList = []\r\n  public acidList = []\r\n  onCustomerSelected(customer) {\r\n    let x: any\r\n    x = this.selectedVoucherList.filter(itm => itm.ACID == customer.ACID)\r\n    if (x.length > 0) {\r\n      return;\r\n    }\r\n    this.selectedVoucherList.push(customer)\r\n    this.acidList.push(customer.ACID)\r\n  }\r\n\r\n\r\n  removeFromSelectedList(index) {\r\n    this.selectedVoucherList.splice(index, 1)\r\n    this.acidList.splice(index, 1)\r\n  }\r\n\r\n  dateChanged(date) {\r\n    this.agingpayable.reportparam.from = moment(this.selectedDate.startDate).format('MM-DD-YYYY')\r\n\r\n  }\r\n\r\n  preventInput($event) {\r\n    $event.preventDefault();\r\n    return false;\r\n  }\r\n\r\n\r\n  customerEnterCommand(e) {\r\n    this.genericGridSupplier.show();\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/pages/ReportDialogs/aging-payable/aging-payable.component.ts","import { Component, Output, EventEmitter, ViewChild, Input } from '@angular/core';\r\nimport { MasterRepo } from '../../../common/repositories';\r\nimport * as moment from 'moment'\r\nimport { GenericPopUpComponent, GenericPopUpSettings } from '../../../common/popupLists/generic-grid/generic-popup-grid.component';\r\nimport { TransactionService } from '../../../common/Transaction Components/transaction.service';\r\nimport { AlertService } from '../../../common/services/alert/alert.service';\r\n\r\n\r\n@Component({\r\n  selector: 'aging-receivable-report',\r\n  template: require('./aging-receivable.component.html'),\r\n  styles: [require('../../modal-style.css'), require('../../Reports/reportStyle.css')],\r\n  providers: [TransactionService]\r\n\r\n})\r\nexport class AgingReceivableReport {\r\n  @ViewChild(\"genericGridCustomer\") genericGridCustomer: GenericPopUpComponent;\r\n  gridPopupSettingsForCustomer: GenericPopUpSettings = new GenericPopUpSettings();\r\n  public ACNAME: string = \"\";\r\n  agingreceivable = {\r\n    reportname: \"\",\r\n    reportparam: {\r\n      from: \"\",\r\n      acid: \"%\",\r\n      summaryreport: 1,\r\n      phiscalid: this.masterService.PhiscalObj.PhiscalID,\r\n      companyid: this.masterService.userProfile.CompanyInfo.COMPANYID,\r\n      div: this.masterService.userProfile.userDivision,\r\n    }\r\n  };\r\n  selectedDate: { startDate: moment.Moment, endDate: moment.Moment };\r\n  alwaysShowCalendars: boolean = true;\r\n  @Output() reportdataEmit = new EventEmitter();\r\n  @Input() reportType: string;\r\n  constructor(public masterService: MasterRepo, public _trnMainService: TransactionService, public alertService: AlertService) {\r\n    var voucherprefix=\"voucherprefix\";\r\n    this.gridPopupSettingsForCustomer = {\r\n      title: \"Customers\",\r\n      apiEndpoints: `/getAccountPagedListByPType/PA/C/${voucherprefix}`,\r\n      defaultFilterIndex: 0,\r\n      columns: [\r\n        {\r\n          key: \"ACNAME\",\r\n          title: \"NAME\",\r\n          hidden: false,\r\n          noSearch: false\r\n        },\r\n        {\r\n          key: \"ACCODE\",\r\n          title: \"CODE\",\r\n          hidden: false,\r\n          noSearch: false\r\n        }\r\n      ]\r\n    };\r\n  }\r\n  onload() {\r\n    // if (!this.agingreceivable.reportparam.summaryreport && (this.ACNAME == \"\" || this.ACNAME == null || this.ACNAME == undefined)) {\r\n    //   this.alertService.error(\"Please Choose Customer for Detail Report\");\r\n    //   return;\r\n    // }\r\n    this.agingreceivable.reportparam.summaryreport = this.agingreceivable.reportparam.summaryreport ? 1 : 0\r\n    this.agingreceivable.reportname = 'AGING RECEIVABLE';\r\n    this.agingreceivable.reportparam.acid = this.acidList.length ? this.acidList.join(\",\") : '%';\r\n\r\n    this.reportdataEmit.emit({ status: \"ok\", data: this.agingreceivable });\r\n  }\r\n\r\n  closeReportBox() {\r\n    this.reportdataEmit.emit({ status: \"Error!\", data: this.agingreceivable });\r\n  }\r\n\r\n  public selectedVoucherList = []\r\n  public acidList = []\r\n  onCustomerSelected(customer) {\r\n    let x: any\r\n    x = this.selectedVoucherList.filter(itm => itm.ACID == customer.ACID)\r\n    if (x.length > 0) {\r\n      return;\r\n    }\r\n    this.selectedVoucherList.push(customer)\r\n    this.acidList.push(customer.ACID)\r\n  }\r\n\r\n\r\n  removeFromSelectedList(index) {\r\n    this.selectedVoucherList.splice(index, 1)\r\n    this.acidList.splice(index, 1)\r\n  }\r\n\r\n  dateChanged() {\r\n    this.agingreceivable.reportparam.from = moment(this.selectedDate.startDate).format('MM-DD-YYYY')\r\n\r\n  }\r\n\r\n  preventInput($event) {\r\n    $event.preventDefault();\r\n    return false;\r\n  }\r\n\r\n\r\n  customerEnterCommand() {\r\n    this.genericGridCustomer.show();\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/pages/ReportDialogs/aging-receivable/aging-receivable.component.ts","import { Component, Output, EventEmitter } from \"@angular/core\";\r\nimport { MasterRepo } from \"../../../common/repositories/masterRepo.service\";\r\nimport { ReportMainService } from \"../../Reports/components/ReportMain/ReportMain.service\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\n\r\n@Component({\r\n    selector: \"area-filters\",\r\n    template: require('./area-filters.component.html'),\r\n    styles: [require('../../modal-style.css'), require('../../Reports/reportStyle.css')],\r\n})\r\nexport class AreaFilters {\r\n    AreaList: any[] = [];\r\n    showMultipleCC: boolean;\r\n\r\n    constructor(public masterService: MasterRepo, private _reportFilterService: ReportMainService) {\r\n        this.masterService.getAreaList().subscribe(res => {\r\n            this.AreaList = res.result;\r\n        })\r\n        _reportFilterService.ReportFilterObject.multipleAreas= [];\r\n        // this.showMultipleCC = true;\r\n        if(this._reportFilterService.SummaryPartyLedgerObj.assignPrevioiusDate == true && this._reportFilterService.reportUrlPath == 'summarypartyledger' && ( _reportFilterService.SummaryPartyLedgerObj.multipleAreas && _reportFilterService.SummaryPartyLedgerObj.multipleAreas.length!=0)){\r\n            _reportFilterService.ReportFilterObject.multipleAreas = _reportFilterService.SummaryPartyLedgerObj.multipleAreas;\r\n        }\r\n    }\r\n\r\n    // checkValue() {\r\n    //     if (this._reportFilterService.ReportFilterObject.showAllContacts == true) {\r\n    //         this.showMultipleCC = false;\r\n    //     } else {\r\n    //         this.showMultipleCC = true;\r\n    //     }\r\n    // }\r\n\r\n    addAreaToList() {\r\n        const areaData = this._reportFilterService.ReportFilterObject.AreaWise;\r\n        this._reportFilterService.ReportFilterObject.AreaWise = areaData && areaData.AREA_ID ? areaData.AREA_ID : '';\r\n        let selectAreaList = this._reportFilterService.ReportFilterObject.multipleAreas.filter(areaList => areaList.AREA_NAME == areaData.AREA_NAME)\r\n        if (\r\n            areaData.AREA_NAME === \"\" ||\r\n            areaData.AREA_NAME === null ||\r\n            areaData.AREA_NAME === undefined\r\n        ) {\r\n            return;\r\n        }\r\n\r\n        if (selectAreaList.length === 0) {\r\n            this._reportFilterService.ReportFilterObject.multipleAreas.push({ AREA_ID: areaData.AREA_ID, AREA_NAME: areaData.AREA_NAME })\r\n        }\r\n    }\r\n\r\n    deleteArea(index) {\r\n        this._reportFilterService.ReportFilterObject.multipleAreas.splice(index, 1)\r\n    }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/pages/ReportDialogs/area-filters/area-filters.component.ts","import { Component, Output, EventEmitter } from \"@angular/core\";\r\nimport { MasterRepo } from \"../../../common/repositories/masterRepo.service\";\r\nimport { ReportMainService } from \"../../Reports/components/ReportMain/ReportMain.service\";\r\n\r\n@Component({\r\n    selector: \"area-list\",\r\n    template: require('./area-list.component.html'),\r\n    styles: [require('../../modal-style.css'), require('../../Reports/reportStyle.css')],\r\n})\r\nexport class AreaList {\r\n    AreaList: any[] = [];\r\n\r\n    constructor(public masterService: MasterRepo,private _reportFilterService:ReportMainService) {\r\n        this.masterService.getAreaList().subscribe(res => {\r\n            this.AreaList = res.result;\r\n        })\r\n\r\n        this._reportFilterService.ReportFilterObject.AreaWise = 0;\r\n        if(this._reportFilterService.PartyLedgerObj.assignPrevioiusDate == true && this._reportFilterService.reportUrlPath == 'partyledgerreport'){\r\n            _reportFilterService.ReportFilterObject.AreaWise = _reportFilterService.PartyLedgerObj.AreaWise;\r\n        }\r\n\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/pages/ReportDialogs/area-list/area-list.component.ts","import { Component, EventEmitter, OnInit, Output, ViewChild } from \"@angular/core\";\r\n\r\nimport { ActivatedRoute, Router } from \"@angular/router\";\r\nimport { GenericPopUpComponent, GenericPopUpSettings } from \"../../../common/popupLists/generic-grid/generic-popup-grid.component\";\r\nimport { MasterRepo } from \"../../../common/repositories/masterRepo.service\";\r\nimport { AuthService } from \"../../../common/services/permission/authService.service\";\r\nimport { ReportMainService } from \"../../Reports/components/ReportMain/ReportMain.service\";\r\n4\r\n\r\n@Component({\r\n    selector: 'companynorms-depreciation-report',\r\n    template: require('./companynorms-depreciation-report.component.html'),\r\n    styles: [require('../../Reports/reportStyle.css'), require('../../modal-style.css')],\r\n})\r\n\r\nexport class CompanyNormsDepreciationReport implements OnInit {\r\n    ReportParameters: any = <any>{};\r\n    instanceWiseRepName: string = 'DEPRECIATION  REPORT AS PER COMPANY NORMS';\r\n\r\n    REPORTOPTION: any[] = [\r\n        { Mode: '1', ReportOptionName: 'Pool Wise' },\r\n        { Mode: '2', ReportOptionName: 'Block Wise' },\r\n        { Mode: '3', ReportOptionName: 'Item Wise' },\r\n        { Mode: '4', ReportOptionName: 'Asset Code Wise' }\r\n    ]\r\n\r\n    poolName: any[] = [];\r\n    AssetGroupID: number;\r\n    AssetNameList: any[] = [];\r\n    AssetIDList: any[] = [];\r\n    ACID: string = \"\";\r\n    MCODE: string = \"\";\r\n\r\n    @Output() reportdataEmit = new EventEmitter();\r\n\r\n    @ViewChild(\"genericGridLedgerList\")\r\n    genericGridLedgerList: GenericPopUpComponent;\r\n    gridLedgerListPopupSettings: GenericPopUpSettings = new GenericPopUpSettings();\r\n\r\n    @ViewChild(\"genericGridAssetNameList\")\r\n    genericGridAssetNameList: GenericPopUpComponent;\r\n    gridAssetNameListPopupSettings: GenericPopUpSettings = new GenericPopUpSettings();\r\n\r\n    @ViewChild(\"genericGridAssetIDList\")\r\n    genericGridAssetIDList: GenericPopUpComponent;\r\n    gridAssetIDListPopupSettings: GenericPopUpSettings = new GenericPopUpSettings();\r\n\r\n    constructor(private masterService: MasterRepo, private arouter: Router, private _authService: AuthService, public _ActivatedRoute: ActivatedRoute, private _reportFilterService: ReportMainService) {\r\n        this._reportFilterService.CompanyNormsObj.Reportnameis = \"DEPRECIATION  REPORT AS PER COMPANY NORMS\";\r\n        this._reportFilterService.CompanyNormsObj.CompanyNorms_REPORTOPTION ='1';\r\n\r\n        this.poolName = [];\r\n\r\n        this.masterService.getPoolName().subscribe(res => {\r\n            this.poolName = res;\r\n        });\r\n    }\r\n\r\n    ngOnInit() {\r\n        this._ActivatedRoute.queryParams.subscribe(params => {\r\n\r\n            if (params.instancename) {\r\n                                this._reportFilterService.CompanyNormsObj.CompanyNorms_REPORTOPTION ;\r\n                // this._reportFilterService.CompanyNormsObj.CompanyNorms_INCLUDEOPENINGVALUE = this._reportFilterService.reportDataStore[params.instancename].param.reportparam.INCLUDEOPENINGVALUE;\r\n                this._reportFilterService.CompanyNormsObj.CompanyNorms_POOLNAME = this._reportFilterService.reportDataStore[params.instancename].param.reportparam.POOL;\r\n                this._reportFilterService.CompanyNormsObj.CompanyNorms_ASSETGROUPID = this._reportFilterService.reportDataStore[params.instancename].param.reportparam.ASSETGROUPID;\r\n                this._reportFilterService.CompanyNormsObj.CompanyNorms_LEDGERNAME = this._reportFilterService.reportDataStore[params.instancename].param.reportparam.BLOCK;\r\n                this._reportFilterService.CompanyNormsObj.CompanyNorms_ASSETNAME = this._reportFilterService.reportDataStore[params.instancename].param.reportparam.ITEM;\r\n                this._reportFilterService.CompanyNormsObj.CompanyNorms_ASSETID = this._reportFilterService.reportDataStore[params.instancename].param.reportparam.ASSETID;\r\n                this._reportFilterService.CompanyNormsObj.CompanyNorms_ACCODE = this._reportFilterService.reportDataStore[params.instancename].param.reportparam.ACCODE;\r\n            }\r\n        })\r\n\r\n\r\n    }\r\n\r\n    onload() {\r\n        if(this._reportFilterService.CompanyNormsObj.CompanyNorms_LEDGERNAME == \"\" ||this._reportFilterService.CompanyNormsObj.CompanyNorms_LEDGERNAME == null || \r\n        this._reportFilterService.CompanyNormsObj.CompanyNorms_LEDGERNAME == undefined ){\r\n            this._reportFilterService.CompanyNormsObj.CompanyNorms_ACCODE = '%';\r\n        }\r\n\r\n        if(this._reportFilterService.CompanyNormsObj.CompanyNorms_ASSETNAME == \"\" ||this._reportFilterService.CompanyNormsObj.CompanyNorms_ASSETNAME == null || \r\n        this._reportFilterService.CompanyNormsObj.CompanyNorms_ASSETNAME == undefined ){\r\n            this._reportFilterService.CompanyNormsObj.CompanyNorms_ITEMID = '%';\r\n        }\r\n\r\n        if(this._reportFilterService.CompanyNormsObj.CompanyNorms_ASSETID == \"\" ||this._reportFilterService.CompanyNormsObj.CompanyNorms_ASSETID == null || \r\n        this._reportFilterService.CompanyNormsObj.CompanyNorms_ASSETID == undefined ){\r\n            this._reportFilterService.CompanyNormsObj.CompanyNorms_ASSETID = '%';\r\n        }\r\n\r\n        this.DialogClosedResult(\"ok\");\r\n    }\r\n    closeReportBox() {\r\n        this.DialogClosedResult(\"Error!\");\r\n    }\r\n\r\n    public DialogClosedResult(res) {\r\n        let multipleReportFormateName = '';\r\n\r\n        if(this._reportFilterService.CompanyNormsObj.CompanyNorms_REPORTOPTION== '1'){\r\n            multipleReportFormateName = 'DEPRECIATION  REPORT AS PER COMPANY NORMS_1';\r\n        }else if (this._reportFilterService.CompanyNormsObj.CompanyNorms_REPORTOPTION =='2'){\r\n            multipleReportFormateName = 'DEPRECIATION  REPORT AS PER COMPANY NORMS_2';\r\n        } else if (this._reportFilterService.CompanyNormsObj.CompanyNorms_REPORTOPTION == '3'){\r\n            multipleReportFormateName = 'DEPRECIATION  REPORT AS PER COMPANY NORMS_3';\r\n        } else if(this._reportFilterService.CashAndBankBookObj.CompanyNorms_REPORTOPTION =='4'){\r\n            multipleReportFormateName = 'DEPRECIATION  REPORT AS PER COMPANY NORMS_4';\r\n        } else {\r\n            multipleReportFormateName = 'DEPRECIATION  REPORT AS PER COMPANY NORMS';\r\n        }\r\n        \r\n\r\n        if (res == \"ok\") {\r\n            let routepaths = this.arouter.url.split('/');\r\n            let activeurlpath2;\r\n            if (routepaths && routepaths.length) {\r\n                activeurlpath2 = routepaths[routepaths.length - 1]\r\n            }\r\n\r\n            if (this._reportFilterService.CompanyNorms_loadedTimes == 0) {\r\n                this._reportFilterService.previouslyLoadedReportList.push(\r\n                    {\r\n                        reportname: 'DEPRECIATION  REPORT AS PER COMPANY NORMS',\r\n                        activeurlpath: this.arouter.url,\r\n                        activerurlpath2: activeurlpath2,\r\n                        instanceWiseRepName: this.instanceWiseRepName + this._reportFilterService.CompanyNorms_loadedTimes,\r\n                    });\r\n            } else {\r\n                this._reportFilterService.previouslyLoadedReportList.push(\r\n                    {\r\n                        reportname: 'DEPRECIATION  REPORT AS PER COMPANY NORMS' + '_' + this._reportFilterService.CompanyNorms_loadedTimes,\r\n                        activeurlpath: this.arouter.url,\r\n                        activerurlpath2: activeurlpath2,\r\n                        instanceWiseRepName: this.instanceWiseRepName + this._reportFilterService.CompanyNorms_loadedTimes,\r\n                    });\r\n            }\r\n        }\r\n\r\n\r\n        this.reportdataEmit.emit({\r\n            status: res, data: {\r\n                REPORTDISPLAYNAME: 'DEPRECIATION  REPORT (AS PER COMPANY NORMS)',\r\n                reportname: multipleReportFormateName,\r\n                instanceWiseRepName: this.instanceWiseRepName + this._reportFilterService.CompanyNorms_loadedTimes,\r\n                reportparam: {\r\n                    // REPORTOPTIONDISPLAYNAME: this._reportFilterService.CompanyNormsObj.CompanyNorms_REPORTOPTIONDISPLAYNAME ? this._reportFilterService.CompanyNormsObj.CompanyNorms_REPORTOPTIONDISPLAYNAME : '',\r\n                    MODE: this._reportFilterService.CompanyNormsObj.CompanyNorms_REPORTOPTION,\r\n                    PHISCALID: this.masterService.PhiscalObj.PhiscalID,\r\n                    // INCLUDEOPENINGVALUE: this._reportFilterService.CompanyNormsObj.CompanyNorms_INCLUDEOPENINGVALUE ? this._reportFilterService.CompanyNormsObj.CompanyNorms_INCLUDEOPENINGVALUE : 0,\r\n                    POOL: this._reportFilterService.CompanyNormsObj.CompanyNorms_POOLNAME ? this._reportFilterService.CompanyNormsObj.CompanyNorms_POOLNAME : '%',\r\n                    BLOCK: this._reportFilterService.CompanyNormsObj.CompanyNorms_ACCODE ? this._reportFilterService.CompanyNormsObj.CompanyNorms_ACCODE : '%',\r\n                    ITEM: this._reportFilterService.CompanyNormsObj.CompanyNorms_ITEMID ? this._reportFilterService.CompanyNormsObj.CompanyNorms_ITEMID : '%',\r\n                    ASSETID: this._reportFilterService.CompanyNormsObj.CompanyNorms_ASSETID ? this._reportFilterService.CompanyNormsObj.CompanyNorms_ASSETID : '%'\r\n                }\r\n            }\r\n        });\r\n\r\n        if (res == \"ok\") {\r\n            this._reportFilterService.CompanyNorms_loadedTimes = this._reportFilterService.CompanyNorms_loadedTimes + 1;\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    LedgerNameEnterCommand() {\r\n        this.showLedgerList();\r\n    }\r\n\r\n    showLedgerList() {\r\n        this.gridLedgerListPopupSettings = {\r\n            title: \"Accounts\",\r\n            apiEndpoints: `/loadLedger`,\r\n            defaultFilterIndex: 1,\r\n            columns: [\r\n                {\r\n                    key: \"ACID\",\r\n                    title: \"AC CODE\",\r\n                    hidden: false,\r\n                    noSearch: false\r\n                },\r\n                {\r\n                    key: \"ACNAME\",\r\n                    title: \"A/C NAME\",\r\n                    hidden: false,\r\n                    noSearch: false\r\n                }\r\n            ]\r\n        };\r\n        this.genericGridLedgerList.show('',false,'','', this._reportFilterService.CompanyNormsObj.CompanyNorms_ASSETGROUPID);\r\n    }\r\n\r\n    onLedgerSelect(event) {\r\n        this._reportFilterService.CompanyNormsObj.CompanyNorms_ACCODE = event.ACID;\r\n        this._reportFilterService.CompanyNormsObj.CompanyNorms_LEDGERNAME = event.ACNAME;\r\n    }\r\n\r\n    AssetNameEnterCommand() {\r\n        this.showAssetNameList();\r\n    }\r\n\r\n    showAssetNameList() {\r\n        this.gridAssetNameListPopupSettings = {\r\n            title: \"Assets\",\r\n            apiEndpoints: `/loadAssetName`,\r\n            defaultFilterIndex: 1,\r\n            columns: [\r\n                {\r\n                    key: \"MCODE\",\r\n                    title: \"ASSET NAME\",\r\n                    hidden: false,\r\n                    noSearch: false\r\n                },\r\n                {\r\n                    key: \"ASSET_NAME\",\r\n                    title: \"ITEM NAME\",\r\n                    hidden: false,\r\n                    noSearch: false\r\n                }\r\n            ]\r\n        };\r\n        this.genericGridAssetNameList.show();\r\n    }\r\n\r\n    onAssetNameSelect(event) {\r\n        this._reportFilterService.CompanyNormsObj.CompanyNorms_ITEMID = event.MCODE;\r\n        this._reportFilterService.CompanyNormsObj.CompanyNorms_ASSETNAME = event.ASSET_NAME;\r\n    }\r\n\r\n    clearAssetMcode(){\r\n        if(!this._reportFilterService.CompanyNormsObj.CompanyNorms_ASSETNAME){\r\n            this._reportFilterService.CompanyNormsObj.CompanyNorms_ITEMID ='';\r\n        }\r\n    }\r\n\r\n    AssetIdEnterCommand() {\r\n        this.showAssetIDList();\r\n    }\r\n\r\n    showAssetIDList() {\r\n        this.gridAssetIDListPopupSettings = {\r\n            title: \"Assets\",\r\n            apiEndpoints: `/loadAssetID`,\r\n            defaultFilterIndex: 1,\r\n            columns: [\r\n                {\r\n                    key: \"ASSET_NAME\",\r\n                    title: \"ITEM NAME\",\r\n                    hidden: false,\r\n                    noSearch: false\r\n                },\r\n                {\r\n                    key: \"AssetID\",\r\n                    title: \"ASSET ID\",\r\n                    hidden: false,\r\n                    noSearch: false\r\n                }\r\n            ]\r\n        };\r\n        this.genericGridAssetIDList.show('',false,'','',null,this._reportFilterService.CompanyNormsObj.CompanyNorms_ITEMID);\r\n    }\r\n\r\n    onAssetIDSelect(event) {\r\n        this._reportFilterService.CompanyNormsObj.CompanyNorms_ASSETID = event.AssetID;\r\n        this._reportFilterService.CompanyNormsObj.CompanyNorms_ASSETNAME = event.ASSET_NAME;\r\n    }\r\n\r\n    onPoolNameChange(event){\r\n        this._reportFilterService.CompanyNormsObj.CompanyNorms_ASSETGROUPID = event;\r\n        // console.log(event)\r\n    }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/pages/ReportDialogs/companynorms-depreciation-report/companynorms-deprecaition-report.component.ts","import { Component, Output, EventEmitter } from \"@angular/core\";\r\nimport { MasterRepo } from \"../../../common/repositories/masterRepo.service\";\r\nimport { ReportMainService } from \"../../Reports/components/ReportMain/ReportMain.service\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\n\r\n@Component({\r\n    selector: \"costcenter-filters\",\r\n    template: require('./costcenter-filters.component.html'),\r\n    styles: [require('../../modal-style.css'), require('../../Reports/reportStyle.css')],\r\n})\r\nexport class CostcenterFilters {\r\n    CostcenterList: any[] = [];\r\n    showMultipleCC: boolean;\r\n\r\n    constructor(public masterService: MasterRepo, private _reportFilterService: ReportMainService) {\r\n        this.masterService.getCostcenter().subscribe(res => {\r\n            this.CostcenterList = res;\r\n        })\r\n        _reportFilterService.ReportFilterObject.multipleCostcenter = [];\r\n\r\n        if(this._reportFilterService.AccoutLedgerObj.assignPrevioiusDate == true && this._reportFilterService.reportUrlPath == 'accountledgerreport' && ( _reportFilterService.AccoutLedgerObj.multipleCostcenter && _reportFilterService.AccoutLedgerObj.multipleCostcenter.length!=0)){\r\n            _reportFilterService.ReportFilterObject.multipleCostcenter = _reportFilterService.AccoutLedgerObj.multipleCostcenter;\r\n        }\r\n        if(this._reportFilterService.PartyLedgerObj.assignPrevioiusDate == true && this._reportFilterService.reportUrlPath == 'partyledgerreport' && (_reportFilterService.PartyLedgerObj.multipleCostcenter &&_reportFilterService.PartyLedgerObj.multipleCostcenter.length!=0)){\r\n            _reportFilterService.ReportFilterObject.multipleCostcenter = _reportFilterService.PartyLedgerObj.multipleCostcenter;\r\n        }\r\n        if(this._reportFilterService.SummaryLedgerObj.assignPrevioiusDate == true && this._reportFilterService.reportUrlPath == 'summaryledgerreport' && ( _reportFilterService.SummaryLedgerObj.multipleCostcenter && _reportFilterService.SummaryLedgerObj.multipleCostcenter.length!=0)){\r\n            _reportFilterService.ReportFilterObject.multipleCostcenter = _reportFilterService.SummaryLedgerObj.multipleCostcenter;\r\n        }\r\n        if(this._reportFilterService.SummaryPartyLedgerObj.assignPrevioiusDate == true && this._reportFilterService.reportUrlPath == 'summarypartyledger' && ( _reportFilterService.SummaryPartyLedgerObj.multipleCostcenter && _reportFilterService.SummaryPartyLedgerObj.multipleCostcenter.length!=0)){\r\n            _reportFilterService.ReportFilterObject.multipleCostcenter = _reportFilterService.SummaryPartyLedgerObj.multipleCostcenter;\r\n        }\r\n    \r\n        this.showMultipleCC = true;\r\n    }\r\n\r\n    checkValue() {\r\n        if (this._reportFilterService.ReportFilterObject.showAllContacts == true) {\r\n            this.showMultipleCC = false;\r\n        } else {\r\n            this.showMultipleCC = true;\r\n        }\r\n    }\r\n\r\n    addCostcenterToList() {\r\n        const ccData = this._reportFilterService.ReportFilterObject.CCENTER;\r\n        this._reportFilterService.ReportFilterObject.CCENTER = ccData && ccData.CCID ? ccData.CCID : '';\r\n        let selectCCenterList = this._reportFilterService.ReportFilterObject.multipleCostcenter.filter(centerList => centerList.COSTCENTERNAME == ccData.COSTCENTERNAME)\r\n        if (\r\n            ccData.COSTCENTERNAME === \"\" ||\r\n            ccData.COSTCENTERNAME === null ||\r\n            ccData.COSTCENTERNAME === undefined\r\n        ) {\r\n            return;\r\n        }\r\n\r\n        if (selectCCenterList.length === 0) {\r\n            this._reportFilterService.ReportFilterObject.multipleCostcenter.push({ CCID: ccData.CCID, COSTCENTERNAME: ccData.COSTCENTERNAME })\r\n        }\r\n\r\n    }\r\n\r\n    deleteCostcenter(index) {\r\n        this._reportFilterService.ReportFilterObject.multipleCostcenter.splice(index, 1)\r\n    }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/pages/ReportDialogs/costcenter-filter/costcenter-filters.component.ts","import { Component, Output, EventEmitter } from \"@angular/core\";\r\nimport { MasterRepo } from \"../../../common/repositories/masterRepo.service\";\r\nimport { ReportMainService } from \"../../Reports/components/ReportMain/ReportMain.service\";\r\n\r\n@Component({\r\n    selector: \"costcenter-list\",\r\n    template: require('./costcenter-list.component.html'),\r\n    styles: [require('../../modal-style.css'), require('../../Reports/reportStyle.css')],\r\n})\r\nexport class CostcenterList {\r\n    CostcenterList: any[] = [];\r\n\r\n    constructor(public masterService: MasterRepo,private _reportFilterService:ReportMainService) {\r\n        this.masterService.getCostcenter().subscribe(res => {\r\n            this.CostcenterList = res;\r\n        })\r\n\r\n        _reportFilterService.ReportFilterObject.CostCenter ='%'\r\n\r\n\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/pages/ReportDialogs/costcenter-list/costcenter-list.component.ts","import {NgaModule} from '../../../theme/nga.module';\r\nimport {Component, Inject, Output, EventEmitter, OnInit} from '@angular/core';\r\nimport {MdDialogRef, MD_DIALOG_DATA} from '@angular/material';\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { MasterRepo } from '../../../common/repositories';\r\nimport { Division } from '../../../common/interfaces';\r\nimport { ReportMainService } from '../../Reports/components/ReportMain/ReportMain.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { AlertService } from '../../../common/services/alert/alert.service';\r\n\r\n\r\nexport interface DialogInfo{\r\n    header: string;\r\n    message: Observable<string>;\r\n\r\n}\r\n@Component({\r\n    selector : 'result-creditros-aging-report-dialog',\r\n    template: require('./creditors-aging-report.component.html'),\r\n    styles: [require('../../Reports/reportStyle.css'),require('../../modal-style.css')]\r\n\r\n})\r\n\r\nexport class CreditorsAgingReport implements OnInit{\r\n  AgingValue: any;\r\n    ReportParameters:any=<any>{};\r\n    multipleReportFormateName:string;\r\n    division: any[] = [];\r\n    CostcenterList: any[] = [];\r\n    instanceWiseRepName:string='Creditors Ageing Report';\r\n    AreaList: any[] = [];\r\n    PartyGroupList:any[]=[];\r\n    PartyCategoryList:any[]=[];\r\n\r\n    @Output() reportdataEmit = new EventEmitter();\r\n    constructor(private masterService: MasterRepo,\r\n        public dialogref:MdDialogRef<CreditorsAgingReport>,\r\n         @Inject(MD_DIALOG_DATA) public data: DialogInfo, public _ActivatedRoute: ActivatedRoute,\r\n         private _reportFilterService:ReportMainService, private alertService: AlertService, private arouter: Router){\r\n      //----------Default values on load\r\n\r\n\r\n    //   this.ReportParameters.DATE2 = new Date().toJSON().split('T')[0];\r\n    //   this.changeEndDate(this.ReportParameters.DATE2,'AD');\r\n\r\n\r\n      this.multipleReportFormateName = 'Creditors Aging Report';\r\n      this.ReportParameters.COMID = this.masterService.userProfile.CompanyInfo.COMPANYID\r\n    //   this.ReportParameters.CreditorsAgeing_CostCenter = \"%\";\r\n    this._reportFilterService.StockAgeingObj.StockAgeing_AGE1 = \"30\";\r\n    this._reportFilterService.StockAgeingObj.StockAgeing_AGE2 = \"60\";\r\n    this._reportFilterService.StockAgeingObj.StockAgeing_AGE3 = \"90\";\r\n    this._reportFilterService.StockAgeingObj.StockAgeing_AGE4 = \"120\";\r\n    this._reportFilterService.StockAgeingObj.StockAgeing_AGE5 = \"150\";\r\n    this._reportFilterService.StockAgeingObj.StockAgeing_AGE6 = \"180\";\r\n    this._reportFilterService.StockAgeingObj.StockAgeing_AGE7 = \"210\";\r\n    this._reportFilterService.StockAgeingObj.StockAgeing_AGE8 = \"240\";\r\n    this._reportFilterService.StockAgeingObj.StockAgeing_AGE9 = \"270\";\r\n    this._reportFilterService.StockAgeingObj.StockAgeing_AGE10 = \"300\";\r\n\r\n    //   this.ReportParameters.CHK_AGEINGOFPARTYOPENING = 1;\r\n    //   this.ReportParameters.CHK_SHOWAGEINGREPORT = 0;\r\n    // this.ReportParameters.DIVISION=this.masterService.userProfile.CompanyInfo.INITIAL;\r\n    this.ReportParameters.ISDEBTORS = 0;\r\n\r\n\r\n    this.division=[];\r\n    //let data: Array<IDivision> = [];\r\n    if(this.masterService.userSetting.userwisedivision == 1){\r\n      this.masterService.getDivisionFromRightPrivelege().subscribe(res=>{\r\n          if(res.status == 'ok'){\r\n              this.division = res.result;\r\n          }\r\n      })\r\n    }\r\n    else{\r\n     this.masterService.getAllDivisions()\r\n     .subscribe(res => {\r\n       //////console.log(\"div\" + JSON.stringify(res));\r\n       this.division.push(<Division>res);\r\n     }, error => {\r\n       this.masterService.resolveError(error, \"divisions - getDivisions\");\r\n     });\r\n    }\r\n\r\n            this.masterService.getCostcenter().subscribe(res => {\r\n                this.CostcenterList = res;\r\n            })\r\n\r\n            this.masterService.getAreaList().subscribe(res => {\r\n              this.AreaList = res.result;\r\n          })\r\n\r\n          this.masterService.getPartyGroupList().subscribe(res => {\r\n            this.PartyGroupList = res.result;\r\n        })\r\n\r\n        this.masterService.getPartyCategoryList().subscribe(res => {\r\n          this.PartyCategoryList = res.result;\r\n      })\r\n            // this.masterService.getAccDivList();\r\n    }\r\n\r\n    ngOnInit(){\r\n\r\n      let AgingObj:any = <any>{}\r\n      AgingObj = this.masterService.userProfile.userRights.find(x => x.right =='StockAgeingLimit');\r\n      console.log(\"dd\",AgingObj)\r\n      this.AgingValue = AgingObj.value;\r\n      console.log(\"AGINGVALUE\",this.AgingValue);\r\n        this._ActivatedRoute.queryParams.subscribe(params => {\r\n            if(this._reportFilterService.CreditorsAgeingObj.assignPrevioiusDate != true){\r\n              this.masterService.getAccDivList();\r\n            if (this.masterService.userProfile.CompanyInfo.ActualFY == this.masterService.PhiscalObj.PhiscalID) {\r\n                    this._reportFilterService.CreditorsAgeingObj.CreditorsAgeing_DATE1 = new Date().toJSON().split('T')[0];\r\n                    this.changestartDate(this._reportFilterService.CreditorsAgeingObj.CreditorsAgeing_DATE1, \"AD\");\r\n                  }\r\n                  else {\r\n\r\n                this._reportFilterService.CreditorsAgeingObj.CreditorsAgeing_DATE1 = this.masterService.PhiscalObj.EndDate.split('T')[0];\r\n                        this.changestartDate(this._reportFilterService.CreditorsAgeingObj.CreditorsAgeing_DATE1, \"AD\");\r\n\r\n\r\n                }\r\n\r\n\r\n                this.masterService.viewDivision.subscribe(() => {\r\n                  if(this.masterService.userSetting.userwisedivision==0 ||  this.masterService.showAll == true){ //ALL OPTION SELECTION IN DIVISION IN REPORT DIALOG BOX\r\n                    this._reportFilterService.CreditorsAgeingObj.CreditorsAgeing_DIV='%';\r\n                }else{\r\n                    this._reportFilterService.CreditorsAgeingObj.CreditorsAgeing_DIV=this.masterService.userProfile.CompanyInfo.INITIAL;\r\n                }\r\n                })\r\n                this._reportFilterService.CreditorsAgeingObj.CreditorsAgeing_CostCenter ='%';\r\n                this._reportFilterService.CreditorsAgeingObj.CreditorsAgeing_AreaWise=0;\r\n                this._reportFilterService.CreditorsAgeingObj.CreditorsAgeing_PartyGroup='%';\r\n                this._reportFilterService.CreditorsAgeingObj.REPORTMODE = '0';\r\n            }\r\n\r\n            if(params.instancename){\r\n                // ////console.log(\"@@[Creditors Outs Report0]\",params.instancename,this._reportFilterService.reportDataStore[params.instancename].param.reportparam)\r\n                this._reportFilterService.CreditorsAgeingObj.CreditorsAgeing_DATE1=this._reportFilterService.reportDataStore[params.instancename].param.reportparam.DATE1;\r\n                this._reportFilterService.CreditorsAgeingObj.CreditorsAgeing_DIV=this._reportFilterService.reportDataStore[params.instancename].param.reportparam.DIV;\r\n                this._reportFilterService.CreditorsAgeingObj.CreditorsAgeing_CostCenter=this._reportFilterService.reportDataStore[params.instancename].param.reportparam.COSTCENTER;\r\n                this._reportFilterService.CreditorsAgeingObj.DOAGEINGOFOPENINGBL=this._reportFilterService.reportDataStore[params.instancename].param.reportparam.DOAGEINGOFOPENINGBL;\r\n                this._reportFilterService.CreditorsAgeingObj.GROUPBY=this._reportFilterService.reportDataStore[params.instancename].param.reportparam.GROUPBY;\r\n                this.ReportParameters.ISDEBTORS=this._reportFilterService.reportDataStore[params.instancename].param.reportparam.ISDEBTORS;\r\n                this._reportFilterService.CreditorsAgeingObj.REPORTMODE=this._reportFilterService.reportDataStore[params.instancename].param.reportparam.REPORTMODE;\r\n                this._reportFilterService.CreditorsAgeingObj.SHOWDPARTYDETAIL=this._reportFilterService.reportDataStore[params.instancename].param.reportparam.SHOWDPARTYDETAIL;\r\n                this.ReportParameters.D1=this._reportFilterService.reportDataStore[params.instancename].param.reportparam.D1;\r\n                this.ReportParameters.D2=this._reportFilterService.reportDataStore[params.instancename].param.reportparam.D2;\r\n                this.ReportParameters.D3=this._reportFilterService.reportDataStore[params.instancename].param.reportparam.D3;\r\n                this.ReportParameters.D4=this._reportFilterService.reportDataStore[params.instancename].param.reportparam.D4;\r\n\r\n                this.ReportParameters.D5=this._reportFilterService.reportDataStore[params.instancename].param.reportparam.D5;\r\n                this.ReportParameters.D6=this._reportFilterService.reportDataStore[params.instancename].param.reportparam.D6;\r\n                this.ReportParameters.D7=this._reportFilterService.reportDataStore[params.instancename].param.reportparam.D7;\r\n                this.ReportParameters.D8=this._reportFilterService.reportDataStore[params.instancename].param.reportparam.D8;\r\n                this.ReportParameters.D9=this._reportFilterService.reportDataStore[params.instancename].param.reportparam.D9;\r\n                this.ReportParameters.D10=this._reportFilterService.reportDataStore[params.instancename].param.reportparam.D10;\r\n            }\r\n        })\r\n\r\n\r\n        this.changestartDate(this._reportFilterService.CreditorsAgeingObj.CreditorsAgeing_DATE1, \"AD\");\r\n    }\r\n\r\n    onload(){\r\n      this.ReportParameters.D1 = this._reportFilterService.StockAgeingObj.StockAgeing_AGE1 ? this._reportFilterService.StockAgeingObj.StockAgeing_AGE1 : \"30\";\r\n      this.ReportParameters.D2 = this._reportFilterService.StockAgeingObj.StockAgeing_AGE2 ? this._reportFilterService.StockAgeingObj.StockAgeing_AGE2 : \"60\";\r\n      this.ReportParameters.D3 = this._reportFilterService.StockAgeingObj.StockAgeing_AGE3 ? this._reportFilterService.StockAgeingObj.StockAgeing_AGE3 : \"90\";\r\n      this.ReportParameters.D4 = this._reportFilterService.StockAgeingObj.StockAgeing_AGE4 ? this._reportFilterService.StockAgeingObj.StockAgeing_AGE4 : \"120\";\r\n        if(this.AgingValue>=5){\r\n          this.ReportParameters.D5 = this._reportFilterService.StockAgeingObj.StockAgeing_AGE5 ? this._reportFilterService.StockAgeingObj.StockAgeing_AGE5 : \"150\";\r\n        } else {\r\n          this.ReportParameters.D5 = this.ReportParameters.D4;\r\n        }\r\n        if(this.AgingValue>=6){\r\n          this.ReportParameters.D6 = this._reportFilterService.StockAgeingObj.StockAgeing_AGE6 ? this._reportFilterService.StockAgeingObj.StockAgeing_AGE6 : \"180\";\r\n        } else {\r\n          this.ReportParameters.D6 = this.ReportParameters.D5;\r\n        }\r\n        if(this.AgingValue>=7){\r\n          this.ReportParameters.D7 = this._reportFilterService.StockAgeingObj.StockAgeing_AGE7 ? this._reportFilterService.StockAgeingObj.StockAgeing_AGE7 : \"210\";\r\n        }else {\r\n          this.ReportParameters.D7 = this.ReportParameters.D6;\r\n        }\r\n        if(this.AgingValue>=8){\r\n          this.ReportParameters.D8 = this._reportFilterService.StockAgeingObj.StockAgeing_AGE8 ? this._reportFilterService.StockAgeingObj.StockAgeing_AGE8 : \"240\";\r\n        }else {\r\n          this.ReportParameters.D8 = this.ReportParameters.D7;\r\n        }\r\n        if(this.AgingValue>=9){\r\n          this.ReportParameters.D9 = this._reportFilterService.StockAgeingObj.StockAgeing_AGE9 ? this._reportFilterService.StockAgeingObj.StockAgeing_AGE9 : \"270\";\r\n        }else {\r\n          this.ReportParameters.D9 = this.ReportParameters.D8;\r\n        }\r\n        console.log(\"aging\",this.AgingValue)\r\n        if(this.AgingValue>=10){\r\n          this.ReportParameters.D10 = this._reportFilterService.StockAgeingObj.StockAgeing_AGE10 ? this._reportFilterService.StockAgeingObj.StockAgeing_AGE10 : \"300\";\r\n        }else {\r\n          this.ReportParameters.D10 = this.ReportParameters.D9;\r\n        }\r\n        this.DialogClosedResult(\"ok\");\r\n    }\r\n\r\n    closeReportBox(){\r\n        this.DialogClosedResult(\"Error!\");\r\n    }\r\n\r\n    public DialogClosedResult(res) {\r\n        this._reportFilterService.CreditorsAgeingObj.CreditorsAgeing_DIV = (this._reportFilterService.CreditorsAgeingObj.CreditorsAgeing_DIV == null || this._reportFilterService.CreditorsAgeingObj.CreditorsAgeing_DIV == \"\")?\"%\":this._reportFilterService.CreditorsAgeingObj.CreditorsAgeing_DIV;\r\n\r\n        if(this._reportFilterService.CreditorsAgeingObj.SHOWDPARTYDETAIL == 1){\r\n            this.multipleReportFormateName = 'Creditors Aging Report_1';\r\n        }else{\r\n            this.multipleReportFormateName = 'Creditors Aging Report';\r\n        }\r\n\r\n        if (this._reportFilterService.CreditorsAgeingObj.CreditorsAgeing_DIV && this._reportFilterService.CreditorsAgeingObj.CreditorsAgeing_DIV == '%') {\r\n            this._reportFilterService.CreditorsAgeingObj.CreditorsAgeing_DIVISIONNAME = 'All';\r\n          }else if( this._reportFilterService.CreditorsAgeingObj.CreditorsAgeing_DIV && this._reportFilterService.CreditorsAgeingObj.CreditorsAgeing_DIV!= '%'){\r\n            let abc = this.division.filter(x=>x.INITIAL == this._reportFilterService.CreditorsAgeingObj.CreditorsAgeing_DIV);\r\n              if(abc && abc.length>0 && abc[0]){\r\n                this._reportFilterService.CreditorsAgeingObj.CreditorsAgeing_DIVISIONNAME = abc[0].NAME;\r\n              }else{\r\n                this._reportFilterService.CreditorsAgeingObj.CreditorsAgeing_DIVISIONNAME = '';\r\n              }\r\n          }else{\r\n            this._reportFilterService.CreditorsAgeingObj.CreditorsAgeing_DIVISIONNAME = '';\r\n          }\r\n    \r\n          if (this._reportFilterService.CreditorsAgeingObj.CreditorsAgeing_CostCenter && this._reportFilterService.CreditorsAgeingObj.CreditorsAgeing_CostCenter == '%') {\r\n            this._reportFilterService.CreditorsAgeingObj.CreditorsAgeing_COSTCENTERDISPLAYNAME = 'All';\r\n          }\r\n          else if (this._reportFilterService.CreditorsAgeingObj.CreditorsAgeing_CostCenter != '%') {\r\n            let abc = this.CostcenterList.filter(x=>x.CCID == this._reportFilterService.CreditorsAgeingObj.CreditorsAgeing_CostCenter);\r\n            if(abc && abc.length>0 && abc[0]){\r\n              this._reportFilterService.CreditorsAgeingObj.CreditorsAgeing_COSTCENTERDISPLAYNAME = abc[0].COSTCENTERNAME;\r\n            }else{\r\n              this._reportFilterService.CreditorsAgeingObj.CreditorsAgeing_COSTCENTERDISPLAYNAME = '';\r\n            }\r\n          } else {\r\n            this._reportFilterService.CreditorsAgeingObj.CreditorsAgeing_COSTCENTERDISPLAYNAME = '';\r\n          }\r\n          \r\n        if(res == \"ok\"){\r\n        this._reportFilterService.CreditorsAgeingObj.assignPrevioiusDate = true;\r\n        let routepaths = this.arouter.url.split('/');\r\n        let activeurlpath2;\r\n              if(routepaths&& routepaths.length){\r\n                activeurlpath2=routepaths[routepaths.length-1]\r\n              }\r\n\r\n              if(this._reportFilterService.CreditorsAgeing_loadedTimes == 0){\r\n                this._reportFilterService.previouslyLoadedReportList.push(\r\n                    {reportname: 'Creditors Ageing Report',\r\n                    activeurlpath: this.arouter.url,\r\n                    activerurlpath2: activeurlpath2,\r\n                    instanceWiseRepName:this.instanceWiseRepName +this._reportFilterService.CreditorsAgeing_loadedTimes,\r\n                });\r\n            }else{\r\n                this._reportFilterService.previouslyLoadedReportList.push(\r\n                    {reportname: 'Creditors Ageing Report'+'_'+this._reportFilterService.CreditorsAgeing_loadedTimes,\r\n                    activeurlpath: this.arouter.url,\r\n                    activerurlpath2: activeurlpath2,\r\n                    instanceWiseRepName:this.instanceWiseRepName +this._reportFilterService.CreditorsAgeing_loadedTimes,\r\n                });\r\n            }\r\n\r\n        }\r\n\r\n        this.reportdataEmit.emit({ status: res, data: {reportname:this.multipleReportFormateName,\r\n            REPORTDISPLAYNAME : 'Creditors Ageing Report',\r\n            instanceWiseRepName:this.instanceWiseRepName+this._reportFilterService.CreditorsAgeing_loadedTimes,\r\n            reportparam:{\r\n            DATE: this._reportFilterService.CreditorsAgeingObj.CreditorsAgeing_DATE1,\r\n            BSDATE: this._reportFilterService.CreditorsAgeingObj.CreditorsAgeing_BSDATE1,\r\n            DIV: this._reportFilterService.CreditorsAgeingObj.CreditorsAgeing_DIV,\r\n            PHISCALID: this.masterService.PhiscalObj.PhiscalID,\r\n            COMID:this.ReportParameters.COMID,\r\n            CreditorsAgeing_CostCenter: this._reportFilterService.CreditorsAgeingObj.CreditorsAgeing_CostCenter,\r\n            SHOWDPARTYDETAIL: this._reportFilterService.CreditorsAgeingObj.SHOWDPARTYDETAIL,\r\n            // OPNINGBLONLY: this._reportFilterService.CreditorsAgeingObj.OPNINGBLONLY,\r\n            REPORTMODE:this._reportFilterService.CreditorsAgeingObj.REPORTMODE,\r\n            GROUPBY:this._reportFilterService.CreditorsAgeingObj.GROUPBY?this._reportFilterService.CreditorsAgeingObj.GROUPBY:0,\r\n            D1: this.ReportParameters.D1,\r\n            D2: this.ReportParameters.D2,\r\n            D3: this.ReportParameters.D3,\r\n            D4: this.ReportParameters.D4,\r\n            D5: this.ReportParameters.D5,\r\n            D6: this.ReportParameters.D6,\r\n            D7: this.ReportParameters.D7,\r\n            D8: this.ReportParameters.D8,\r\n            D9: this.ReportParameters.D9,\r\n            D10: this.ReportParameters.D10,\r\n            DOAGEINGOFOPENINGBL: this._reportFilterService.CreditorsAgeingObj.DOAGEINGOFOPENINGBL,\r\n            ISDEBTORS: this.ReportParameters.ISDEBTORS,\r\n            COSTCENTER: this._reportFilterService.CreditorsAgeingObj.CreditorsAgeing_CostCenter,\r\n            // DATE1: this.masterService.PhiscalObj.BeginDate.split('T')[0],\r\n            // DATE2: this._reportFilterService.CreditorsAgeingObj.CreditorsAgeing_DATE1,\r\n            DIVISIONNAME : this._reportFilterService.CreditorsAgeingObj.CreditorsAgeing_DIVISIONNAME ? this._reportFilterService.CreditorsAgeingObj.CreditorsAgeing_DIVISIONNAME : '',\r\n            COSTCENTERDISPLAYNAME: this._reportFilterService.CreditorsAgeingObj.CreditorsAgeing_COSTCENTERDISPLAYNAME?this._reportFilterService.CreditorsAgeingObj.CreditorsAgeing_COSTCENTERDISPLAYNAME:'',\r\n            AREA : this._reportFilterService.CreditorsAgeingObj.CreditorsAgeing_AreaWise?this._reportFilterService.CreditorsAgeingObj.CreditorsAgeing_AreaWise:0,\r\n            PARTYGROUP : this._reportFilterService.CreditorsAgeingObj.CreditorsAgeing_PartyGroup?this._reportFilterService.CreditorsAgeingObj.CreditorsAgeing_PartyGroup:'%',\r\n            INCLUDEPOSTEDTRANSACTION:this._reportFilterService.CreditorsAgeingObj.CreditorsAgeingObj_INCLUDEPOSTEDTRANSACTION?this._reportFilterService.CreditorsAgeingObj.CreditorsAgeingObj_INCLUDEPOSTEDTRANSACTION:0\r\n\r\n        } }});\r\n\r\n        if(res == \"ok\"){\r\n            this._reportFilterService.CreditorsAgeing_loadedTimes = this._reportFilterService.CreditorsAgeing_loadedTimes+1;\r\n        }\r\n    }\r\n\r\n    changestartDate(value, format: string) {\r\n            var adbs = require(\"ad-bs-converter\");\r\n            if (format == \"AD\") {\r\n                var adDate = (value.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n                var bsDate = adbs.ad2bs(adDate);\r\n                this._reportFilterService.CreditorsAgeingObj.CreditorsAgeing_BSDATE1 =  this.masterService.toBSDate(value);\r\n            }\r\n            else if (format == \"BS\") {\r\n              var datearr = value.split('/');\r\n              const bsDate = datearr[2]+\"/\"+datearr[1]+\"/\"+datearr[0];\r\n                // var bsDate = (value.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n                var adDate = adbs.bs2ad(bsDate);\r\n                var Engdate = this.masterService.toADDate(value);\r\n                const Validatedata = this.masterService.ValidateNepaliDate(Engdate)\r\n                if(Validatedata == true){\r\n                  const bsDate1 = datearr[2]+\"/\"+datearr[1]+\"/\"+datearr[0];\r\n                  var adDate1 = adbs.bs2ad(bsDate1);\r\n                  this._reportFilterService.CreditorsAgeingObj.CreditorsAgeing_DATE1  = this.masterService.toADDate(value);\r\n                }else{\r\n                    this.alertService.error(\"Cannot Change the date\");\r\n                  return;\r\n                }\r\n                // this._reportFilterService.CreditorsAgeingObj.CreditorsAgeing_DATE1 = this.masterService.toBSDate(value);\r\n            }\r\n    }\r\n\r\n    changeEndDate(value, format: string) {\r\n        try{\r\n            var adbs = require(\"ad-bs-converter\");\r\n            if (format == \"AD\") {\r\n                var adDate = (value.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n                var bsDate = adbs.ad2bs(adDate);\r\n                this.ReportParameters.BSDATE2 =  this.masterService.toBSDate(value);\r\n            }\r\n            else if (format == \"BS\") {\r\n              var datearr = value.split('/');\r\n              const bsDate = datearr[2]+\"/\"+datearr[1]+\"/\"+datearr[0];\r\n                // var bsDate = (value.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n                var adDate = adbs.bs2ad(bsDate);\r\n                this.ReportParameters.DATE2 = this.masterService.toADDate(value);\r\n            }\r\n        }\r\n          catch(e){}\r\n    }\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/pages/ReportDialogs/creditors-aging-report/creditors-aging-report.component.ts","import { NgaModule } from '../../../theme/nga.module';\r\nimport { Component, Inject, Output, EventEmitter, ViewChild } from '@angular/core';\r\nimport { MdDialogRef, MD_DIALOG_DATA } from '@angular/material';\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { MasterRepo } from '../../../common/repositories';\r\nimport { ReportMainService } from '../../Reports/components/ReportMain/ReportMain.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Division } from '../../../common/interfaces';\r\nimport { GenericPopUpSettings, GenericPopUpComponent } from '../../../common/popupLists/generic-grid/generic-popup-grid.component';\r\nimport { AlertService } from '../../../common/services/alert/alert.service';\r\n\r\nexport interface DialogInfo {\r\n    header: string;\r\n    message: Observable<string>;\r\n}\r\n\r\n@Component({\r\n    selector: 'result-creditors-outstanding-report-dialog',\r\n    template: require('./creditors-outstanding-report.component.html'),\r\n    styles: [require('../../Reports/reportStyle.css'), require('../../modal-style.css')],\r\n})\r\n\r\nexport class CreditorsOutstandingReport {\r\n    allCustomerlist: any[] = [];\r\n    multipleCustomerList: any[] = [];\r\n    showCustomer:boolean;\r\n    showArea:boolean;\r\n    division: any[] = [];\r\n    AreaList:any[]=[];\r\n    CostcenterList:any[]=[];\r\n    PartyGroupList:any[]=[];\r\n    instanceWiseRepName:string='Creditors Outstanding Report';\r\n\r\n    @Output() reportdataEmit = new EventEmitter();\r\n    @ViewChild(\"genericGridMultipleAccountLedger\") genericGridMultipleAccountLedger: GenericPopUpComponent;\r\n    gridPopupSettingsForMultipleAccountLedgerList: GenericPopUpSettings = new GenericPopUpSettings();\r\n    constructor(private masterService: MasterRepo, public _ActivatedRoute: ActivatedRoute, private alertService: AlertService,\r\n        public dialogref: MdDialogRef<CreditorsOutstandingReport>,\r\n        @Inject(MD_DIALOG_DATA) public data: DialogInfo,\r\n        private _reportFilterService:ReportMainService, private arouter: Router) {\r\n\r\n        this.showCustomer=true;\r\n        this._reportFilterService.CreditorsOutstandingObj.Reportnameis='creditorsoutstanding';\r\n\r\n        this.allCustomerlist = [];\r\n        this.masterService.getAllCustomers().subscribe(\r\n            res => {\r\n                this.allCustomerlist.push(res)\r\n            }\r\n        )\r\n\r\n        this.division=[];\r\n        //let data: Array<IDivision> = [];\r\n        if(this.masterService.userSetting.userwisedivision == 1){\r\n          this.masterService.getDivisionFromRightPrivelege().subscribe(res=>{\r\n              if(res.status == 'ok'){\r\n                  this.division = res.result;\r\n              }\r\n          })\r\n        }\r\n        else{\r\n         this.masterService.getAllDivisions()\r\n         .subscribe(res => {\r\n           //////console.log(\"div\" + JSON.stringify(res));\r\n           this.division.push(<Division>res);\r\n         }, error => {\r\n           this.masterService.resolveError(error, \"divisions - getDivisions\");\r\n         });\r\n        }\r\n\r\n            this.masterService.getAreaList().subscribe(res => {\r\n                this.AreaList = res.result;\r\n            })\r\n\r\n            this.masterService.getCostcenter().subscribe(res => {\r\n                this.CostcenterList = res;\r\n            })\r\n\r\n            this.masterService.getPartyGroupList().subscribe(res => {\r\n                this.PartyGroupList = res.result;\r\n            })\r\n            // this.masterService.getAccDivList();\r\n    }\r\n    ngOnInit() {\r\n        this._ActivatedRoute.queryParams.subscribe(params => {\r\n            if (this._reportFilterService.CreditorsOutstandingObj.assignPrevioiusDate != true) {\r\n                this.masterService.getAccDivList();\r\n            if (this.masterService.userProfile.CompanyInfo.ActualFY == this.masterService.PhiscalObj.PhiscalID) {\r\n                    this._reportFilterService.CreditorsOutstandingObj.CreditorsOutstanding_DATE1 = new Date().toJSON().split('T')[0];\r\n                    this.changestartDate(this._reportFilterService.CreditorsOutstandingObj.CreditorsOutstanding_DATE1, \"AD\");\r\n                  }\r\n                  else {\r\n\r\n                this._reportFilterService.CreditorsOutstandingObj.CreditorsOutstanding_DATE1 = this.masterService.PhiscalObj.EndDate.split('T')[0];\r\n                        this.changestartDate(this._reportFilterService.CreditorsOutstandingObj.CreditorsOutstanding_DATE1, \"AD\");\r\n\r\n\r\n                }\r\n            // this._reportFilterService.CreditorsOutstandingObj.CreditorsOutstanding_DATE1 = new Date().toJSON().split('T')[0];\r\n            // this._reportFilterService.CreditorsOutstandingObj.CreditorsOutstanding_DIV = this.masterService.userProfile.CompanyInfo.INITIAL;\r\n            this.masterService.viewDivision.subscribe(() => {\r\n                if(this.masterService.userSetting.userwisedivision==0 ||  this.masterService.showAll == true){ //ALL OPTION SELECTION IN DIVISION IN REPORT DIALOG BOX\r\n                  this._reportFilterService.CreditorsOutstandingObj.CreditorsOutstanding_DIV='%';\r\n              }else{\r\n                if(this.masterService.userSetting.userwisedivision==1 && this.division.length ==1){\r\n                    this._reportFilterService.CreditorsOutstandingObj.CreditorsOutstanding_DIV=this.division[0].INITIAL;\r\n                  }else{\r\n                    this._reportFilterService.CreditorsOutstandingObj.CreditorsOutstanding_DIV=this.masterService.userProfile.CompanyInfo.INITIAL;\r\n                }\r\n              }\r\n              })\r\n            this._reportFilterService.CreditorsOutstandingObj.ISSUMMARY='1';\r\n            this._reportFilterService.CreditorsOutstandingObj.ReportType='1';\r\n            this._reportFilterService.CreditorsOutstandingObj.CreditorsOutstanding_AreaWise = 0;\r\n            this._reportFilterService.CreditorsOutstandingObj.CreditorsOutstanding_multipleAccounts = [];\r\n            this._reportFilterService.CreditorsOutstandingObj.CreditorsOutstanding_CostCenter ='%';\r\n            this._reportFilterService.CreditorsOutstandingObj.CreditorsOutstanding_PartyGroup='%';\r\n            this._reportFilterService.CreditorsOutstandingObj.CreditorsOutstanding_AreaWiseInSummary = 0;\r\n            }\r\n\r\n            if(params.instancename){\r\n                ////console.log(\"@@[Crediors Outs Report0]\",params.instancename,this._reportFilterService.reportDataStore[params.instancename].param.reportparam)\r\n                // this._reportFilterService.CreditorsOutstandingObj.CreditorsOutstanding_DATE1=this._reportFilterService.reportDataStore[params.instancename].param.reportparam.DATE1;\r\n                // this.changestartDate(this._reportFilterService.CreditorsOutstandingObj.CreditorsOutstanding_DATE1, \"AD\");\r\n                // this._reportFilterService.CreditorsOutstandingObj.CreditorsOutstanding_DIV=this._reportFilterService.reportDataStore[params.instancename].param.reportparam.DIV;\r\n                // this._reportFilterService.CreditorsOutstandingObj.CreditorsOutstanding_CostCenter=this._reportFilterService.reportDataStore[params.instancename].param.reportparam.COSTCENTER;\r\n            }\r\n        })\r\n\r\n\r\n        // this.changestartDate(this._reportFilterService.CreditorsOutstandingObj.CreditorsOutstanding_DATE1, \"AD\");\r\n        this.checkValue();\r\n    }\r\n\r\n    onload() {\r\n        this.DialogClosedResult(\"ok\");\r\n    }\r\n\r\n    closeReportBox() {\r\n        this.DialogClosedResult(\"Error!\");\r\n    }\r\n\r\n    public DialogClosedResult(res) {\r\n        let multipleSelectedAccount = [];\r\n        let SelectedAccount = '';\r\n        if(this._reportFilterService.CreditorsOutstandingObj.CreditorsOutstanding_multipleAccounts=== undefined){\r\n            SelectedAccount = this._reportFilterService.CreditorsOutstandingObj.SingleAccount\r\n        }else{\r\n            if (this._reportFilterService.CreditorsOutstandingObj.CreditorsOutstanding_multipleAccounts.length != 0) {\r\n                this._reportFilterService.CreditorsOutstandingObj.CreditorsOutstanding_multipleAccounts.forEach(acList => {\r\n                    multipleSelectedAccount.push(acList.ACID)\r\n                    SelectedAccount += `${multipleSelectedAccount},`\r\n                });\r\n            } else {\r\n                SelectedAccount = this._reportFilterService.CreditorsOutstandingObj.multipleACID\r\n            }\r\n        }\r\n\r\n        // if((this._reportFilterService.CreditorsOutstandingObj.ISSUMMARY=='0' && this._reportFilterService.CreditorsOutstandingObj.ReportType==\"1\")&& res==\"ok\"){\r\n        //     if(SelectedAccount==\"\" || SelectedAccount==null || SelectedAccount==undefined || !SelectedAccount){\r\n        //         this.alertService.info(\"Please Select Account First\");\r\n        //         return;\r\n        //     }\r\n        // }\r\n\r\n        // if (this._reportFilterService.CreditorsOutstandingObj.DOAGEINGOFOPENINGBL == true) {\r\n        //     this._reportFilterService.CreditorsOutstandingObj.DOAGEINGOFOPENINGBL = '0';\r\n        // } else {\r\n        //     this._reportFilterService.CreditorsOutstandingObj.DOAGEINGOFOPENINGBL = '1';\r\n        // }\r\n\r\n        if (this._reportFilterService.CreditorsOutstandingObj.CreditorsOutstanding_DIV && this._reportFilterService.CreditorsOutstandingObj.CreditorsOutstanding_DIV == '%') {\r\n            this._reportFilterService.CreditorsOutstandingObj.CreditorsOutstanding_DIVISIONNAME = 'All';\r\n          }else if( this._reportFilterService.CreditorsOutstandingObj.CreditorsOutstanding_DIV && this._reportFilterService.CreditorsOutstandingObj.CreditorsOutstanding_DIV!= '%'){\r\n            let abc = this.division.filter(x=>x.INITIAL == this._reportFilterService.CreditorsOutstandingObj.CreditorsOutstanding_DIV);\r\n              if(abc && abc.length>0 && abc[0]){\r\n                this._reportFilterService.CreditorsOutstandingObj.CreditorsOutstanding_DIVISIONNAME = abc[0].NAME;\r\n              }else{\r\n                this._reportFilterService.CreditorsOutstandingObj.CreditorsOutstanding_DIVISIONNAME = '';\r\n              }\r\n          }else{\r\n            this._reportFilterService.CreditorsOutstandingObj.CreditorsOutstanding_DIVISIONNAME = '';\r\n          }\r\n    \r\n          if (this._reportFilterService.CreditorsOutstandingObj.CreditorsOutstanding_CostCenter && this._reportFilterService.CreditorsOutstandingObj.CreditorsOutstanding_CostCenter == '%') {\r\n            this._reportFilterService.CreditorsOutstandingObj.CreditorsOutstanding_COSTCENTERDISPLAYNAME = 'All';\r\n          }\r\n          else if (this._reportFilterService.CreditorsOutstandingObj.CreditorsOutstanding_CostCenter != '%') {\r\n            let abc = this.CostcenterList.filter(x=>x.CCID == this._reportFilterService.CreditorsOutstandingObj.CreditorsOutstanding_CostCenter);\r\n            if(abc && abc.length>0 && abc[0]){\r\n              this._reportFilterService.CreditorsOutstandingObj.CreditorsOutstanding_COSTCENTERDISPLAYNAME = abc[0].COSTCENTERNAME;\r\n            }else{\r\n              this._reportFilterService.CreditorsOutstandingObj.CreditorsOutstanding_COSTCENTERDISPLAYNAME = '';\r\n            }\r\n          } else {\r\n            this._reportFilterService.CreditorsOutstandingObj.CreditorsOutstanding_COSTCENTERDISPLAYNAME = '';\r\n          }\r\n\r\n        if(res == \"ok\"){\r\n            this._reportFilterService.CreditorsOutstandingObj.assignPrevioiusDate = true;\r\n            let routepaths = this.arouter.url.split('/');\r\n            let activeurlpath2;\r\n              if(routepaths&& routepaths.length){\r\n                activeurlpath2=routepaths[routepaths.length-1]\r\n              }\r\n\r\n              if(this._reportFilterService.CreditorsOuts_loadedTimes == 0){\r\n                this._reportFilterService.previouslyLoadedReportList.push(\r\n                    {reportname: 'Creditors Outstanding Report',\r\n                    activeurlpath: this.arouter.url,\r\n                    activerurlpath2: activeurlpath2,\r\n                    instanceWiseRepName:this.instanceWiseRepName +this._reportFilterService.CreditorsOuts_loadedTimes,\r\n                });\r\n            }else{\r\n                this._reportFilterService.previouslyLoadedReportList.push(\r\n                    {reportname: 'Creditors Outstanding Report'+'_'+this._reportFilterService.CreditorsOuts_loadedTimes,\r\n                    activeurlpath: this.arouter.url,\r\n                    activerurlpath2: activeurlpath2,\r\n                    instanceWiseRepName:this.instanceWiseRepName +this._reportFilterService.CreditorsOuts_loadedTimes,\r\n                });\r\n            }\r\n\r\n            }\r\n\r\n            let multiplereportname = 'Creditors Outstanding Report';\r\n            let Area = '0';\r\n            if(this._reportFilterService.CreditorsOutstandingObj.ISSUMMARY=='1'){\r\n                multiplereportname = 'Creditors Outstanding Report';\r\n                Area=this._reportFilterService.CreditorsOutstandingObj.CreditorsOutstanding_AreaWiseInSummary;\r\n            }else if(this._reportFilterService.CreditorsOutstandingObj.ISSUMMARY=='0'){\r\n                multiplereportname = 'Creditors Outstanding Report_1';\r\n                Area=this._reportFilterService.CreditorsOutstandingObj.CreditorsOutstanding_AreaWise;\r\n            }\r\n\r\n\r\n        this._reportFilterService.CreditorsOutstandingObj.DIV = (this._reportFilterService.CreditorsOutstandingObj.DIV == null || this._reportFilterService.CreditorsOutstandingObj.DIV == \"\") ? \"%\" : this._reportFilterService.CreditorsOutstandingObj.DIV;\r\n        this.reportdataEmit.emit({\r\n            status: res, data: {\r\n                reportname: multiplereportname,\r\n                REPORTDISPLAYNAME : 'Creditors Outstanding Report',\r\n                instanceWiseRepName:this.instanceWiseRepName+this._reportFilterService.CreditorsOuts_loadedTimes,\r\n                reportparam: {\r\n                    DATE: this._reportFilterService.CreditorsOutstandingObj.CreditorsOutstanding_DATE1,\r\n                    BSDATE: this._reportFilterService.CreditorsOutstandingObj.CreditorsOutstanding_BSDATE1,\r\n                    DIV: this._reportFilterService.CreditorsOutstandingObj.CreditorsOutstanding_DIV,\r\n                    COMID: this.masterService.userProfile.CompanyInfo.COMPANYID,\r\n                    PHISCALID: this.masterService.PhiscalObj.PhiscalID,\r\n                    COSTCENTER: this._reportFilterService.CreditorsOutstandingObj.CreditorsOutstanding_CostCenter?this._reportFilterService.CreditorsOutstandingObj.CreditorsOutstanding_CostCenter:'%',\r\n                    ISCreditors: \"0\",\r\n                    GROUPBY: this._reportFilterService.CreditorsOutstandingObj.GROUPBY?this._reportFilterService.CreditorsOutstandingObj.GROUPBY:'0',\r\n                    DOAGEINGOFOPENINGBL: this._reportFilterService.CreditorsOutstandingObj.DOAGEINGOFOPENINGBL?this._reportFilterService.CreditorsOutstandingObj.DOAGEINGOFOPENINGBL:0,\r\n                    ACID: SelectedAccount ? SelectedAccount : '%',\r\n                    AREA: Area ? Area : '0',\r\n                    REPORTTYPE: this._reportFilterService.CreditorsOutstandingObj.ReportType?this._reportFilterService.CreditorsOutstandingObj.ReportType:'0',\r\n                    ISSUMMARY: this._reportFilterService.CreditorsOutstandingObj.ISSUMMARY,\r\n                    // DATE1: this.masterService.PhiscalObj.BeginDate.split('T')[0],\r\n                    // DATE2: this._reportFilterService.CreditorsOutstandingObj.CreditorsOutstanding_DATE1,\r\n                    DIVISIONNAME : this._reportFilterService.CreditorsOutstandingObj.CreditorsOutstanding_DIVISIONNAME ? this._reportFilterService.CreditorsOutstandingObj.CreditorsOutstanding_DIVISIONNAME : '',\r\n                    COSTCENTERDISPLAYNAME: this._reportFilterService.CreditorsOutstandingObj.CreditorsOutstanding_COSTCENTERDISPLAYNAME?this._reportFilterService.CreditorsOutstandingObj.CreditorsOutstanding_COSTCENTERDISPLAYNAME:'',\r\n                    PARTYGROUP : this._reportFilterService.CreditorsOutstandingObj.CreditorsOutstanding_PartyGroup?this._reportFilterService.CreditorsOutstandingObj.CreditorsOutstanding_PartyGroup:'%',\r\n                    ISDEBTORS: \"0\",\r\n                    INCLUDEPOSTEDTRANSACTION:this._reportFilterService.CreditorsOutstandingObj.CreditorsOutstanding_INCLUDEPOSTEDTRANSACTION ?this._reportFilterService.CreditorsOutstandingObj.CreditorsOutstanding_INCLUDEPOSTEDTRANSACTION:0\r\n                }\r\n            }\r\n        });\r\n        this._reportFilterService.CreditorsOuts_loadedTimes = this._reportFilterService.CreditorsOuts_loadedTimes+1;\r\n    }\r\n\r\n    changestartDate(value, format: string) {\r\n        try {\r\n            var adbs = require(\"ad-bs-converter\");\r\n            if (format == \"AD\") {\r\n                var adDate = (value.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n                var bsDate = adbs.ad2bs(adDate);\r\n                this._reportFilterService.CreditorsOutstandingObj.CreditorsOutstanding_BSDATE1= this.masterService.toBSDate(value);\r\n            }\r\n            else if (format == \"BS\") {\r\n              var datearr = value.split('/');\r\n              const bsDate = datearr[2]+\"/\"+datearr[1]+\"/\"+datearr[0];\r\n                // var bsDate = (value.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n                var adDate = adbs.bs2ad(bsDate);\r\n                var Engdate = this.masterService.toADDate(value);\r\n                const Validatedata = this.masterService.ValidateNepaliDate(Engdate)\r\n                if(Validatedata == true){\r\n                  const bsDate1 = datearr[2]+\"/\"+datearr[1]+\"/\"+datearr[0];\r\n                  var adDate1 = adbs.bs2ad(bsDate1);\r\n                  this._reportFilterService.CreditorsOutstandingObj.CreditorsOutstanding_DATE1  = this.masterService.toADDate(value);\r\n                }else{\r\n                    this.alertService.error(\"Cannot Change the date\");\r\n                  return;\r\n                }\r\n                // this._reportFilterService.CreditorsOutstandingObj.CreditorsOutstanding_DATE1 = this.masterService.toBSDate(value);\r\n            }\r\n        } catch (e) { }\r\n\r\n    }\r\n\r\n    checkValue(){\r\n        if(this._reportFilterService.CreditorsOutstandingObj.ReportType==1){\r\n            this.showCustomer=true;\r\n        }else{\r\n            this.showCustomer=false;\r\n        }\r\n        if(this._reportFilterService.CreditorsOutstandingObj.ReportType==2){\r\n            this.showArea=true;\r\n        }else{\r\n            this.showArea=false;\r\n        }\r\n    }\r\n\r\n    // onChangeSummaryReport() {\r\n    //     this.ReportParameters.SummaryReportWise = 0;\r\n    // }\r\n\r\n    // onChangeDetailReport() {\r\n    //     this.ReportParameters.DetailReportWise = 0;\r\n    // }\r\n\r\n    addAccountToList() {\r\n        let selectACList = this._reportFilterService.CreditorsOutstandingObj.CreditorsOutstanding_multipleAccounts.filter(acList => acList.ACNAME == this._reportFilterService.CreditorsOutstandingObj.multipleACNAME)\r\n        if (\r\n            this._reportFilterService.CreditorsOutstandingObj.multipleACNAME === \"\" ||\r\n            this._reportFilterService.CreditorsOutstandingObj.multipleACNAME === null ||\r\n            this._reportFilterService.CreditorsOutstandingObj.multipleACNAME === undefined\r\n        ) {\r\n            return;\r\n        }\r\n\r\n        if (selectACList.length === 0) {\r\n            this._reportFilterService.CreditorsOutstandingObj.CreditorsOutstanding_multipleAccounts.push({ ACID: this._reportFilterService.CreditorsOutstandingObj.multipleACID, ACNAME: this._reportFilterService.CreditorsOutstandingObj.multipleACNAME })\r\n                this._reportFilterService.CreditorsOutstandingObj.multipleACNAME='';\r\n                this._reportFilterService.CreditorsOutstandingObj.multipleACCODE='';\r\n                this._reportFilterService.CreditorsOutstandingObj.multipleACID='';\r\n        }\r\n    }\r\n\r\n    deleteAccount(index) {\r\n        this._reportFilterService.CreditorsOutstandingObj.CreditorsOutstanding_multipleAccounts.splice(index, 1)\r\n    }\r\n\r\n\r\n    MultipleAccountEnterClicked() {\r\n        this.gridPopupSettingsForMultipleAccountLedgerList = this.masterService.getGenericGridPopUpSettings('V');\r\n        this.genericGridMultipleAccountLedger.show();\r\n    }\r\n\r\n    dblClickMultipleAccountSelect(account) {\r\n        this._reportFilterService.CreditorsOutstandingObj.multipleACID = account.ACID;\r\n        this._reportFilterService.CreditorsOutstandingObj.multipleACNAME = account.ACNAME;\r\n    }\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/pages/ReportDialogs/creditors-outstanding-report/creditors-outstanding-report.component.ts","import { NgaModule } from '../../../theme/nga.module';\r\nimport { Component, Inject, Output, EventEmitter, OnInit } from '@angular/core';\r\nimport { MdDialogRef, MD_DIALOG_DATA } from '@angular/material';\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { MasterRepo } from '../../../common/repositories';\r\nimport { Division } from '../../../common/interfaces';\r\nimport { ReportMainService } from '../../Reports/components/ReportMain/ReportMain.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { AuthService } from '../../../common/services/permission/authService.service';\r\nimport { AlertService } from '../../../common/services/alert/alert.service';\r\nimport { ReportFilterService } from '../../../common/popupLists/report-filter/report-filter.service';\r\n\r\n\r\nexport interface DialogInfo {\r\n    header: string;\r\n    message: Observable<string>;\r\n\r\n}\r\n@Component({\r\n    selector: 'result-debtors-aging-report-dialog',\r\n    template: require('./debtors-aging-report.component.html'),\r\n    styles: [require('../../Reports/reportStyle.css'), require('../../modal-style.css')]\r\n\r\n})\r\n\r\nexport class DebtorsAgingReport implements OnInit{\r\n  AgingValue: any;\r\n    ReportParameters: any = <any>{};\r\n    division: any[] = [];\r\n    CostcenterList: any[] = [];\r\n    multipleReportFormateName:string;\r\n    instanceWiseRepName:string='Debtors Ageing Report';\r\n    AreaList: any[] = [];\r\n    PartyGroupList:any[]=[];\r\n    PartyCategoryList:any[]=[];\r\n\r\n    @Output() reportdataEmit = new EventEmitter();\r\n    constructor(private masterService: MasterRepo,private _authService: AuthService,\r\n        public reportService: ReportFilterService, private alertService: AlertService,\r\n        public dialogref: MdDialogRef<DebtorsAgingReport>, public _ActivatedRoute: ActivatedRoute,\r\n        @Inject(MD_DIALOG_DATA) public data: DialogInfo,private _reportFilterService:ReportMainService,  private arouter: Router) {\r\n        //----------Default values on load\r\n\r\n\r\n        // this.ReportParameters.DATE2 = new Date().toJSON().split('T')[0];\r\n        // this.changeEndDate(this.ReportParameters.DATE2, 'AD');\r\n\r\n        this.ReportParameters.COMID = this.masterService.userProfile.CompanyInfo.COMPANYID\r\n        this.ReportParameters.DebtorsAgeing_CostCenter = \"%\";\r\n        this._reportFilterService.StockAgeingObj.StockAgeing_AGE1 = \"30\";\r\n        this._reportFilterService.StockAgeingObj.StockAgeing_AGE2 = \"60\";\r\n        this._reportFilterService.StockAgeingObj.StockAgeing_AGE3 = \"90\";\r\n        this._reportFilterService.StockAgeingObj.StockAgeing_AGE4 = \"120\";\r\n        this._reportFilterService.StockAgeingObj.StockAgeing_AGE5 = \"150\";\r\n        this._reportFilterService.StockAgeingObj.StockAgeing_AGE6 = \"180\";\r\n        this._reportFilterService.StockAgeingObj.StockAgeing_AGE7 = \"210\";\r\n        this._reportFilterService.StockAgeingObj.StockAgeing_AGE8 = \"240\";\r\n        this._reportFilterService.StockAgeingObj.StockAgeing_AGE9 = \"270\";\r\n        this._reportFilterService.StockAgeingObj.StockAgeing_AGE10 = \"300\";\r\n        // this._reportFilterService.DebtorsAgeingObj.DebtorsAgeing_DIV=this.masterService.userProfile.CompanyInfo.INITIAL;\r\n        this.ReportParameters.ISDEBTORS = 1;\r\n\r\n\r\n        this.division=[];\r\n        //let data: Array<IDivision> = [];\r\n        if(this.masterService.userSetting.userwisedivision == 1){\r\n          this.masterService.getDivisionFromRightPrivelege().subscribe(res=>{\r\n              if(res.status == 'ok'){\r\n                  this.division = res.result;\r\n              }\r\n          })\r\n        }\r\n        else{\r\n         this.masterService.getAllDivisions()\r\n         .subscribe(res => {\r\n           //////console.log(\"div\" + JSON.stringify(res));\r\n           this.division.push(<Division>res);\r\n         }, error => {\r\n           this.masterService.resolveError(error, \"divisions - getDivisions\");\r\n         });\r\n        }\r\n\r\n            this.masterService.getCostcenter().subscribe(res => {\r\n                this.CostcenterList = res;\r\n            })\r\n\r\n            this.masterService.getAreaList().subscribe(res => {\r\n              this.AreaList = res.result;\r\n          })\r\n\r\n          this.masterService.getPartyGroupList().subscribe(res => {\r\n            this.PartyGroupList = res.result;\r\n        })\r\n\r\n        this.masterService.getPartyCategoryList().subscribe(res => {\r\n          this.PartyCategoryList = res.result;\r\n      })\r\n        \r\n            // this.masterService.getAccDivList();\r\n    }\r\n    userProfile: any;\r\n    ngOnInit(){\r\n\r\n      let AgingObj:any = <any>{}\r\n      AgingObj = this.masterService.userProfile.userRights.find(x => x.right =='StockAgeingLimit');\r\n      console.log(\"dd\",AgingObj)\r\n      this.AgingValue = AgingObj.value;\r\n      console.log(\"AGINGVALUE\",this.AgingValue);\r\n        this.userProfile = this._authService.getUserProfile();\r\n        this._ActivatedRoute.queryParams.subscribe(params => {\r\n            if(this._reportFilterService.DebtorsAgeingObj.assignPrevioiusDate != true){\r\n              this.masterService.getAccDivList();\r\n            if (this.userProfile.CompanyInfo.ActualFY == this.masterService.PhiscalObj.PhiscalID) {\r\n                    this._reportFilterService.DebtorsAgeingObj.DebtorsAgeing_DATE1 = new Date().toJSON().split('T')[0];\r\n                    this.changestartDate(this._reportFilterService.DebtorsAgeingObj.DebtorsAgeing_DATE1, \"AD\");\r\n                  }\r\n                  else {\r\n\r\n                this._reportFilterService.DebtorsAgeingObj.DebtorsAgeing_DATE1 = this.masterService.PhiscalObj.EndDate.split('T')[0];\r\n                        this.changestartDate(this._reportFilterService.DebtorsAgeingObj.DebtorsAgeing_DATE1, \"AD\");\r\n\r\n\r\n                }\r\n\r\n                // this._reportFilterService.DebtorsAgeingObj.DebtorsAgeing_DIV=this.masterService.userProfile.CompanyInfo.INITIAL;\r\n                this.masterService.viewDivision.subscribe(() => {\r\n                  if(this.masterService.userSetting.userwisedivision==0 ||  this.masterService.showAll == true){ //ALL OPTION SELECTION IN DIVISION IN REPORT DIALOG BOX\r\n                    this._reportFilterService.DebtorsAgeingObj.DebtorsAgeing_DIV='%';\r\n                }else{\r\n                    if(this.masterService.userSetting.userwisedivision==1 && this.division.length ==1){\r\n                      this._reportFilterService.DebtorsAgeingObj.DebtorsAgeing_DIV=this.division[0].INITIAL;\r\n                    }else{\r\n                      this._reportFilterService.DebtorsAgeingObj.DebtorsAgeing_DIV=this.masterService.userProfile.CompanyInfo.INITIAL;\r\n                    }\r\n                }\r\n                })\r\n                this._reportFilterService.DebtorsAgeingObj.DebtorsAgeing_CostCenter ='%';\r\n                this._reportFilterService.DebtorsAgeingObj.DebtorsAgeing_AreaWise=0;\r\n                this._reportFilterService.DebtorsAgeingObj.DebtorsAgeing_PartyGroup='%';\r\n                this._reportFilterService.DebtorsAgeingObj.DebtorsAgeing_PartyCategory='%';\r\n                this._reportFilterService.DebtorsAgeingObj.REPORTMODE = '0';\r\n            }\r\n\r\n            if(params.instancename){\r\n                // ////console.log(\"@@[Creditors Report0]\",params.instancename,this._reportFilterService.reportDataStore[params.instancename].param.reportparam)\r\n                this._reportFilterService.DebtorsAgeingObj.DebtorsAgeing_DATE1=this._reportFilterService.reportDataStore[params.instancename].param.reportparam.DATE;\r\n                this.changestartDate(this._reportFilterService.DebtorsAgeingObj.DebtorsAgeing_DATE1, \"AD\");\r\n                this._reportFilterService.DebtorsAgeingObj.DebtorsAgeing_DIV=this._reportFilterService.reportDataStore[params.instancename].param.reportparam.DIV;\r\n                this._reportFilterService.DebtorsAgeingObj.DebtorsAgeing_CostCenter=this._reportFilterService.reportDataStore[params.instancename].param.reportparam.COSTCENTER;\r\n                this._reportFilterService.DebtorsAgeingObj.DOAGEINGOFOPENINGBL=this._reportFilterService.reportDataStore[params.instancename].param.reportparam.DOAGEINGOFOPENINGBL;\r\n                this._reportFilterService.DebtorsAgeingObj.GROUPBY=this._reportFilterService.reportDataStore[params.instancename].param.reportparam.GROUPBY;\r\n                this.ReportParameters.ISDEBTORS=this._reportFilterService.reportDataStore[params.instancename].param.reportparam.ISDEBTORS;\r\n                this._reportFilterService.DebtorsAgeingObj.REPORTMODE=this._reportFilterService.reportDataStore[params.instancename].param.reportparam.REPORTMODE;\r\n                this._reportFilterService.DebtorsAgeingObj.SHOWDPARTYDETAIL=this._reportFilterService.reportDataStore[params.instancename].param.reportparam.SHOWDPARTYDETAIL;\r\n                this.ReportParameters.D1=this._reportFilterService.reportDataStore[params.instancename].param.reportparam.D1;\r\n                this.ReportParameters.D2=this._reportFilterService.reportDataStore[params.instancename].param.reportparam.D2;\r\n                this.ReportParameters.D3=this._reportFilterService.reportDataStore[params.instancename].param.reportparam.D3;\r\n                this.ReportParameters.D4=this._reportFilterService.reportDataStore[params.instancename].param.reportparam.D4;\r\n                this.ReportParameters.D5=this._reportFilterService.reportDataStore[params.instancename].param.reportparam.D5;\r\n                this.ReportParameters.D6=this._reportFilterService.reportDataStore[params.instancename].param.reportparam.D6;\r\n                this.ReportParameters.D7=this._reportFilterService.reportDataStore[params.instancename].param.reportparam.D7;\r\n                this.ReportParameters.D8=this._reportFilterService.reportDataStore[params.instancename].param.reportparam.D8;\r\n                this.ReportParameters.D9=this._reportFilterService.reportDataStore[params.instancename].param.reportparam.D9;\r\n                this.ReportParameters.D10=this._reportFilterService.reportDataStore[params.instancename].param.reportparam.D10;\r\n               \r\n            //     this._reportFilterService.StockAgeingObj.StockAgeing_AGE1 = 30;\r\n            //     this._reportFilterService.StockAgeingObj.StockAgeing_AGE2 = 60;\r\n            //     this._reportFilterService.StockAgeingObj.StockAgeing_AGE3 = 90;\r\n            //     this._reportFilterService.StockAgeingObj.StockAgeing_AGE4 = 120;\r\n            //     this._reportFilterService.StockAgeingObj.StockAgeing_AGE5 = 150;\r\n            //     this._reportFilterService.StockAgeingObj.StockAgeing_AGE6 = 180;\r\n            //     this._reportFilterService.StockAgeingObj.StockAgeing_AGE7 = 210;\r\n            //     this._reportFilterService.StockAgeingObj.StockAgeing_AGE8 = 240;\r\n            //     this._reportFilterService.StockAgeingObj.StockAgeing_AGE9 = 270;\r\n            //     this._reportFilterService.StockAgeingObj.StockAgeing_AGE10 = 300;\r\n            }\r\n\r\n        })\r\n\r\n\r\n\r\n    }\r\n\r\n    onload() {\r\n      this.ReportParameters.D1 = this._reportFilterService.StockAgeingObj.StockAgeing_AGE1 ? this._reportFilterService.StockAgeingObj.StockAgeing_AGE1 : \"30\";\r\n      this.ReportParameters.D2 = this._reportFilterService.StockAgeingObj.StockAgeing_AGE2 ? this._reportFilterService.StockAgeingObj.StockAgeing_AGE2 : \"60\";\r\n      this.ReportParameters.D3 = this._reportFilterService.StockAgeingObj.StockAgeing_AGE3 ? this._reportFilterService.StockAgeingObj.StockAgeing_AGE3 : \"90\";\r\n      this.ReportParameters.D4 = this._reportFilterService.StockAgeingObj.StockAgeing_AGE4 ? this._reportFilterService.StockAgeingObj.StockAgeing_AGE4 : \"120\";\r\n        if(this.AgingValue>=5){\r\n          this.ReportParameters.D5 = this._reportFilterService.StockAgeingObj.StockAgeing_AGE5 ? this._reportFilterService.StockAgeingObj.StockAgeing_AGE5 : \"150\";\r\n        } else {\r\n          this.ReportParameters.D5 = this.ReportParameters.D4;\r\n        }\r\n        if(this.AgingValue>=6){\r\n          this.ReportParameters.D6 = this._reportFilterService.StockAgeingObj.StockAgeing_AGE6 ? this._reportFilterService.StockAgeingObj.StockAgeing_AGE6 : \"180\";\r\n        } else {\r\n          this.ReportParameters.D6 = this.ReportParameters.D5;\r\n        }\r\n        if(this.AgingValue>=7){\r\n          this.ReportParameters.D7 = this._reportFilterService.StockAgeingObj.StockAgeing_AGE7 ? this._reportFilterService.StockAgeingObj.StockAgeing_AGE7 : \"210\";\r\n        }else {\r\n          this.ReportParameters.D7 = this.ReportParameters.D6;\r\n        }\r\n        if(this.AgingValue>=8){\r\n          this.ReportParameters.D8 = this._reportFilterService.StockAgeingObj.StockAgeing_AGE8 ? this._reportFilterService.StockAgeingObj.StockAgeing_AGE8 : \"240\";\r\n        }else {\r\n          this.ReportParameters.D8 = this.ReportParameters.D7;\r\n        }\r\n        if(this.AgingValue>=9){\r\n          this.ReportParameters.D9 = this._reportFilterService.StockAgeingObj.StockAgeing_AGE9 ? this._reportFilterService.StockAgeingObj.StockAgeing_AGE9 : \"270\";\r\n        }else {\r\n          this.ReportParameters.D9 = this.ReportParameters.D8;\r\n        }\r\n        if(this.AgingValue>=10){\r\n          this.ReportParameters.D10 = this._reportFilterService.StockAgeingObj.StockAgeing_AGE10 ? this._reportFilterService.StockAgeingObj.StockAgeing_AGE10 : \"300\";\r\n        }else {\r\n          this.ReportParameters.D10 = this.ReportParameters.D9;\r\n        }\r\n        this.DialogClosedResult(\"ok\");\r\n    }\r\n\r\n    closeReportBox() {\r\n        this.DialogClosedResult(\"Error!\");\r\n    }\r\n\r\n    public DialogClosedResult(res) {\r\n        this._reportFilterService.DebtorsAgeingObj.DebtorsAgeing_DIV = (this._reportFilterService.DebtorsAgeingObj.DebtorsAgeing_DIV == null || this._reportFilterService.DebtorsAgeingObj.DebtorsAgeing_DIV == \"\") ? \"%\" : this._reportFilterService.DebtorsAgeingObj.DebtorsAgeing_DIV;\r\n\r\n        if(this._reportFilterService.DebtorsAgeingObj.SHOWDPARTYDETAIL == 1){\r\n            this.multipleReportFormateName = 'Debtors Aging Report_1'\r\n        }else{\r\n            this.multipleReportFormateName = 'Debtors Aging Report'\r\n        }\r\n\r\n        if (this._reportFilterService.DebtorsAgeingObj.DebtorsAgeing_DIV && this._reportFilterService.DebtorsAgeingObj.DebtorsAgeing_DIV == '%') {\r\n            this._reportFilterService.DebtorsAgeingObj.DebtorsAgeing_DIVISIONNAME = 'All';\r\n          }else if( this._reportFilterService.DebtorsAgeingObj.DebtorsAgeing_DIV && this._reportFilterService.DebtorsAgeingObj.DebtorsAgeing_DIV!= '%'){\r\n            let abc = this.division.filter(x=>x.INITIAL == this._reportFilterService.DebtorsAgeingObj.DebtorsAgeing_DIV);\r\n              if(abc && abc.length>0 && abc[0]){\r\n                this._reportFilterService.DebtorsAgeingObj.DebtorsAgeing_DIVISIONNAME = abc[0].NAME;\r\n              }else{\r\n                this._reportFilterService.DebtorsAgeingObj.DebtorsAgeing_DIVISIONNAME = '';\r\n              }\r\n          }else{\r\n            this._reportFilterService.DebtorsAgeingObj.DebtorsAgeing_DIVISIONNAME = '';\r\n          }\r\n    \r\n          if (this._reportFilterService.DebtorsAgeingObj.DebtorsAgeing_CostCenter && this._reportFilterService.DebtorsAgeingObj.DebtorsAgeing_CostCenter == '%') {\r\n            this._reportFilterService.DebtorsAgeingObj.DebtorsAgeing_COSTCENTERDISPLAYNAME = 'All';\r\n          }\r\n          else if (this._reportFilterService.DebtorsAgeingObj.DebtorsAgeing_CostCenter != '%') {\r\n            let abc = this.CostcenterList.filter(x=>x.CCID == this._reportFilterService.DebtorsAgeingObj.DebtorsAgeing_CostCenter);\r\n            if(abc && abc.length>0 && abc[0]){\r\n              this._reportFilterService.DebtorsAgeingObj.DebtorsAgeing_COSTCENTERDISPLAYNAME = abc[0].COSTCENTERNAME;\r\n            }else{\r\n              this._reportFilterService.DebtorsAgeingObj.DebtorsAgeing_COSTCENTERDISPLAYNAME = '';\r\n            }\r\n          } else {\r\n            this._reportFilterService.DebtorsAgeingObj.DebtorsAgeing_COSTCENTERDISPLAYNAME = '';\r\n          }\r\n\r\n        if(res == \"ok\"){\r\n        this._reportFilterService.DebtorsAgeingObj.assignPrevioiusDate = true;\r\n        let routepaths = this.arouter.url.split('/');\r\n        let activeurlpath2;\r\n              if(routepaths&& routepaths.length){\r\n                activeurlpath2=routepaths[routepaths.length-1]\r\n              }\r\n\r\n              if(this._reportFilterService.DebtorsAgeing_loadedTimes == 0){\r\n                this._reportFilterService.previouslyLoadedReportList.push(\r\n                    {reportname: 'Debtors Ageing Report',\r\n                    activeurlpath: this.arouter.url,\r\n                    activerurlpath2: activeurlpath2,\r\n                    instanceWiseRepName:this.instanceWiseRepName +this._reportFilterService.DebtorsAgeing_loadedTimes,\r\n                });\r\n            }else{\r\n                this._reportFilterService.previouslyLoadedReportList.push(\r\n                    {reportname: 'Debtors Ageing Report'+'_'+this._reportFilterService.DebtorsAgeing_loadedTimes,\r\n                    activeurlpath: this.arouter.url,\r\n                    activerurlpath2: activeurlpath2,\r\n                    instanceWiseRepName:this.instanceWiseRepName +this._reportFilterService.DebtorsAgeing_loadedTimes,\r\n                });\r\n            }\r\n\r\n        }\r\n\r\n        this.reportdataEmit.emit({\r\n            status: res, data: {\r\n                REPORTDISPLAYNAME : 'Debtors Ageing Report',\r\n                reportname: this.multipleReportFormateName,\r\n                instanceWiseRepName:this.instanceWiseRepName+this._reportFilterService.DebtorsAgeing_loadedTimes,\r\n                reportparam: {\r\n                    DATE: this._reportFilterService.DebtorsAgeingObj.DebtorsAgeing_DATE1,\r\n                    BSDATE: this._reportFilterService.DebtorsAgeingObj.DebtorsAgeing_BSDATE1,\r\n                    DIV: this._reportFilterService.DebtorsAgeingObj.DebtorsAgeing_DIV,\r\n                    PHISCALID: this.masterService.PhiscalObj.PhiscalID,\r\n                    COMID: this.ReportParameters.COMID,\r\n                    DebtorsAgeing_CostCenter: this._reportFilterService.DebtorsAgeingObj.DebtorsAgeing_CostCenter,\r\n                    SHOWDPARTYDETAIL: this._reportFilterService.DebtorsAgeingObj.SHOWDPARTYDETAIL,\r\n                    // OPNINGBLONLY: this._reportFilterService.DebtorsAgeingObj.OPNINGBLONLY,\r\n                    REPORTMODE: this._reportFilterService.DebtorsAgeingObj.REPORTMODE,\r\n                    GROUPBY: this._reportFilterService.DebtorsAgeingObj.GROUPBY?this._reportFilterService.DebtorsAgeingObj.GROUPBY:0,\r\n                    D1: this.ReportParameters.D1,\r\n                    D2: this.ReportParameters.D2,\r\n                    D3: this.ReportParameters.D3,\r\n                    D4: this.ReportParameters.D4,\r\n                    D5: this.ReportParameters.D5,\r\n                    D6: this.ReportParameters.D6,\r\n                    D7: this.ReportParameters.D7,\r\n                    D8: this.ReportParameters.D8,\r\n                    D9: this.ReportParameters.D9,\r\n                    D10: this.ReportParameters.D10,\r\n                    \r\n                    DOAGEINGOFOPENINGBL: this._reportFilterService.DebtorsAgeingObj.DOAGEINGOFOPENINGBL,\r\n                    ISDEBTORS: this.ReportParameters.ISDEBTORS,\r\n                    COSTCENTER: this._reportFilterService.DebtorsAgeingObj.DebtorsAgeing_CostCenter,\r\n                    // DATE1: this.masterService.PhiscalObj.BeginDate.split('T')[0],\r\n                    // DATE2: this._reportFilterService.DebtorsAgeingObj.DebtorsAgeing_DATE1,\r\n                    DIVISIONNAME : this._reportFilterService.DebtorsAgeingObj.DebtorsAgeing_DIVISIONNAME ? this._reportFilterService.DebtorsAgeingObj.DebtorsAgeing_DIVISIONNAME : '',\r\n                    COSTCENTERDISPLAYNAME: this._reportFilterService.DebtorsAgeingObj.DebtorsAgeing_COSTCENTERDISPLAYNAME?this._reportFilterService.DebtorsAgeingObj.DebtorsAgeing_COSTCENTERDISPLAYNAME:'',\r\n                    AREA : this._reportFilterService.DebtorsAgeingObj.DebtorsAgeing_AreaWise?this._reportFilterService.DebtorsAgeingObj.DebtorsAgeing_AreaWise:0,\r\n                    PARTYGROUP : this._reportFilterService.DebtorsAgeingObj.DebtorsAgeing_PartyGroup?this._reportFilterService.DebtorsAgeingObj.DebtorsAgeing_PartyGroup:'%',\r\n                    INCLUDEPOSTEDTRANSACTION:this._reportFilterService.DebtorsAgeingObj.DebtorsAgeingObj_INCLUDEPOSTEDTRANSACTION?this._reportFilterService.DebtorsAgeingObj.DebtorsAgeingObj_INCLUDEPOSTEDTRANSACTION:0\r\n                }\r\n            }\r\n        });\r\n\r\n        if(res == \"ok\"){\r\n            this._reportFilterService.DebtorsAgeing_loadedTimes = this._reportFilterService.DebtorsAgeing_loadedTimes+1;\r\n        }\r\n\r\n    }\r\n\r\n    changestartDate(value, format: string) {\r\n        var adbs = require(\"ad-bs-converter\");\r\n        if (format == \"AD\") {\r\n            var adDate = (value.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n            var bsDate = adbs.ad2bs(adDate);\r\n            this._reportFilterService.DebtorsAgeingObj.DebtorsAgeing_BSDATE1 = this.masterService.toBSDate(value);\r\n        }\r\n        else if (format == \"BS\") {\r\n          var datearr = value.split('/');\r\n          const bsDate = datearr[2]+\"/\"+datearr[1]+\"/\"+datearr[0];\r\n            // var bsDate = (value.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n            var adDate = adbs.bs2ad(bsDate);\r\n            var Engdate = this.masterService.toADDate(value);\r\n            const Validatedata = this.masterService.ValidateNepaliDate(Engdate)\r\n            if(Validatedata == true){\r\n              const bsDate1 = datearr[2]+\"/\"+datearr[1]+\"/\"+datearr[0];\r\n              var adDate1 = adbs.bs2ad(bsDate1);\r\n              this._reportFilterService.DebtorsAgeingObj.DebtorsAgeing_DATE1  = this.masterService.toADDate(value);\r\n            }else{\r\n                this.alertService.error(\"Cannot Change the date\");\r\n              return;\r\n            } \r\n            // this._reportFilterService.DebtorsAgeingObj.DebtorsAgeing_DATE1 = this.masterService.toBSDate(value);\r\n        }\r\n    }\r\n    changeEndDate(value, format: string) {\r\n        try {\r\n            var adbs = require(\"ad-bs-converter\");\r\n            if (format == \"AD\") {\r\n                var adDate = (value.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n                var bsDate = adbs.ad2bs(adDate);\r\n                this.ReportParameters.BSDATE2 = this.masterService.toBSDate(value);\r\n            }\r\n            else if (format == \"BS\") {\r\n              var datearr = value.split('/');\r\n              const bsDate = datearr[2]+\"/\"+datearr[1]+\"/\"+datearr[0];\r\n                // var bsDate = (value.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n                var adDate = adbs.bs2ad(bsDate);\r\n                this.ReportParameters.DATE2 = this.masterService.toADDate(value);\r\n\r\n            }\r\n        }\r\n        catch (e) { }\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/pages/ReportDialogs/debotrs-aging-report/debtors-aging-report.component.ts","import { NgaModule } from '../../../theme/nga.module';\r\nimport { Component, Inject, Output, EventEmitter, ViewChild } from '@angular/core';\r\nimport { MdDialogRef, MD_DIALOG_DATA } from '@angular/material';\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { MasterRepo } from '../../../common/repositories';\r\nimport { ReportMainService } from '../../Reports/components/ReportMain/ReportMain.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Division } from '../../../common/interfaces';\r\nimport { GenericPopUpComponent, GenericPopUpSettings } from '../../../common/popupLists/generic-grid/generic-popup-grid.component';\r\nimport { AlertService } from '../../../common/services/alert/alert.service';\r\n\r\nexport interface DialogInfo {\r\n    header: string;\r\n    message: Observable<string>;\r\n}\r\n\r\n@Component({\r\n    selector: 'result-debtors-outstanding-report-dialog',\r\n    template: require('./debtors-outstanding-report.component.html'),\r\n    styles: [require('../../Reports/reportStyle.css'), require('../../modal-style.css')],\r\n})\r\n\r\nexport class DebtorsOutstandingReport {\r\n    allCustomerlist: any[] = [];\r\n    multipleCustomerList: any[] = [];\r\n    showCustomer:boolean;\r\n    showArea:boolean;\r\n    division: any[] = [];\r\n    AreaList:any[]=[];\r\n    CostcenterList:any[]=[];\r\n    PartyGroupList:any[]=[];\r\n    instanceWiseRepName:string='Debtors Outstanding Report';\r\n\r\n    @Output() reportdataEmit = new EventEmitter();\r\n    @ViewChild(\"genericGridMultipleAccountLedger\") genericGridMultipleAccountLedger: GenericPopUpComponent;\r\n    gridPopupSettingsForMultipleAccountLedgerList: GenericPopUpSettings = new GenericPopUpSettings();\r\n    constructor(private masterService: MasterRepo,\r\n        public dialogref: MdDialogRef<DebtorsOutstandingReport>,\r\n        @Inject(MD_DIALOG_DATA) public data: DialogInfo, public _ActivatedRoute: ActivatedRoute,private alertService: AlertService,\r\n        private _reportFilterService:ReportMainService,private arouter: Router) {\r\n\r\n        this.showCustomer=true;\r\n        this._reportFilterService.DebtorsOutstandingObj.Reportnameis='debitorsoutstanding';\r\n\r\n        this.allCustomerlist = [];\r\n        this.masterService.getAllCustomers().subscribe(\r\n            res => {\r\n                this.allCustomerlist.push(res)\r\n            })\r\n\r\n            this.division=[];\r\n            //let data: Array<IDivision> = [];\r\n            if(this.masterService.userSetting.userwisedivision == 1){\r\n              this.masterService.getDivisionFromRightPrivelege().subscribe(res=>{\r\n                  if(res.status == 'ok'){\r\n                      this.division = res.result;\r\n                  }\r\n              })\r\n            }\r\n            else{\r\n             this.masterService.getAllDivisions()\r\n             .subscribe(res => {\r\n               //////console.log(\"div\" + JSON.stringify(res));\r\n               this.division.push(<Division>res);\r\n             }, error => {\r\n               this.masterService.resolveError(error, \"divisions - getDivisions\");\r\n             });\r\n            }\r\n\r\n            this.masterService.getAreaList().subscribe(res => {\r\n                this.AreaList = res.result;\r\n            })\r\n\r\n            this.masterService.getCostcenter().subscribe(res => {\r\n                this.CostcenterList = res;\r\n            })\r\n \r\n            this.masterService.getPartyGroupList().subscribe(res => {\r\n              this.PartyGroupList = res.result;\r\n          })\r\n          \r\n            // this.masterService.getAccDivList();\r\n    }\r\n\r\n    ngOnInit() {\r\n        this._ActivatedRoute.queryParams.subscribe(params => {\r\n            if (this._reportFilterService.DebtorsOutstandingObj.assignPrevioiusDate != true) {\r\n                this.masterService.getAccDivList();\r\n            if (this.masterService.userProfile.CompanyInfo.ActualFY == this.masterService.PhiscalObj.PhiscalID) {\r\n                    this._reportFilterService.DebtorsOutstandingObj.DebtorsOutstanding_DATE1 = new Date().toJSON().split('T')[0];\r\n                    this.changestartDate(this._reportFilterService.DebtorsOutstandingObj.DebtorsOutstanding_DATE1, \"AD\");\r\n                  }\r\n                  else {\r\n\r\n                this._reportFilterService.DebtorsOutstandingObj.DebtorsOutstanding_DATE1 = this.masterService.PhiscalObj.EndDate.split('T')[0];\r\n                        this.changestartDate(this._reportFilterService.DebtorsOutstandingObj.DebtorsOutstanding_DATE1, \"AD\");\r\n\r\n\r\n                }\r\n            // this._reportFilterService.DebtorsOutstandingObj.DebtorsOutstanding_DATE1 = new Date().toJSON().split('T')[0];\r\n            // this._reportFilterService.DebtorsOutstandingObj.DebtorsOutstanding_DIV = this.masterService.userProfile.CompanyInfo.INITIAL;\r\n            this.masterService.viewDivision.subscribe(() => {\r\n                if(this.masterService.userSetting.userwisedivision==0 ||  this.masterService.showAll == true){ //ALL OPTION SELECTION IN DIVISION IN REPORT DIALOG BOX\r\n                  this._reportFilterService.DebtorsOutstandingObj.DebtorsOutstanding_DIV='%';\r\n              }else{\r\n                  this._reportFilterService.DebtorsOutstandingObj.DebtorsOutstanding_DIV=this.masterService.userProfile.CompanyInfo.INITIAL;\r\n              }\r\n              })\r\n            this._reportFilterService.DebtorsOutstandingObj.ISSUMMARY='1';\r\n            this._reportFilterService.DebtorsOutstandingObj.ReportType='1';\r\n            this._reportFilterService.DebtorsOutstandingObj.DebtorsOutstanding_AreaWise = 0;\r\n            this._reportFilterService.DebtorsOutstandingObj.DebtorsOutstanding_multipleAccounts = [];\r\n            this._reportFilterService.DebtorsOutstandingObj.DebtorsOutstanding_CostCenter ='%';\r\n            this._reportFilterService.DebtorsOutstandingObj.DebtorsOutstanding_PartyGroup='%';\r\n            this._reportFilterService.DebtorsOutstandingObj.DebtorsOutstanding_AreaWiseInSummary = 0;\r\n            }\r\n\r\n            if(params.instancename){\r\n                ////console.log(\"@@[Debtors Outs Report0]\",params.instancename,this._reportFilterService.reportDataStore[params.instancename].param.reportparam)\r\n                // this._reportFilterService.DebtorsOutstandingObj.DebtorsOutstanding_DATE1=this._reportFilterService.reportDataStore[params.instancename].param.reportparam.DATE1;\r\n                // this.changestartDate(this._reportFilterService.DebtorsOutstandingObj.DebtorsOutstanding_DATE1, \"AD\");\r\n                // this._reportFilterService.DebtorsOutstandingObj.DebtorsOutstanding_DIV=this._reportFilterService.reportDataStore[params.instancename].param.reportparam.DIV;\r\n                // this._reportFilterService.DebtorsOutstandingObj.DebtorsOutstanding_CostCenter=this._reportFilterService.reportDataStore[params.instancename].param.reportparam.COSTCENTER;\r\n            }\r\n        })\r\n\r\n\r\n        // this.changestartDate(this._reportFilterService.DebtorsOutstandingObj.DebtorsOutstanding_DATE1, \"AD\");\r\n        this.checkValue();\r\n    }\r\n\r\n    onload() {\r\n        this.DialogClosedResult(\"ok\");\r\n    }\r\n\r\n    closeReportBox() {\r\n        this.DialogClosedResult(\"Error!\");\r\n    }\r\n\r\n    public DialogClosedResult(res) {\r\n        let multipleSelectedAccount = [];\r\n        let SelectedAccount = '';\r\n        if(this._reportFilterService.DebtorsOutstandingObj.DebtorsOutstanding_multipleAccounts=== undefined){\r\n            SelectedAccount = this._reportFilterService.DebtorsOutstandingObj.SingleAccount\r\n        }else{\r\n            if (this._reportFilterService.DebtorsOutstandingObj.DebtorsOutstanding_multipleAccounts.length != 0) {\r\n                this._reportFilterService.DebtorsOutstandingObj.DebtorsOutstanding_multipleAccounts.forEach(acList => {\r\n                    multipleSelectedAccount.push(acList.ACID)\r\n                    SelectedAccount += `${multipleSelectedAccount},`\r\n                });\r\n            } else {\r\n                SelectedAccount = this._reportFilterService.DebtorsOutstandingObj.multipleACID\r\n            }\r\n        }\r\n\r\n        // if (this._reportFilterService.DebtorsOutstandingObj.DOAGEINGOFOPENINGBL == true) {\r\n        //     this._reportFilterService.DebtorsOutstandingObj.DOAGEINGOFOPENINGBL = '0';\r\n        // } else {\r\n        //     this._reportFilterService.DebtorsOutstandingObj.DOAGEINGOFOPENINGBL = '1';\r\n        // }\r\n\r\n        // if((this._reportFilterService.DebtorsOutstandingObj.ISSUMMARY=='0' && this._reportFilterService.DebtorsOutstandingObj.ReportType==\"1\")&& res==\"ok\"){\r\n        //     if(SelectedAccount==\"\" || SelectedAccount==null || SelectedAccount==undefined || !SelectedAccount){\r\n        //         this.alertService.info(\"Please Select Account First\");\r\n        //         SelectedAccount='%'\r\n        //         return;\r\n        //     }\r\n             \r\n        // }\r\n\r\n        if (this._reportFilterService.DebtorsOutstandingObj.DebtorsOutstanding_DIV && this._reportFilterService.DebtorsOutstandingObj.DebtorsOutstanding_DIV == '%') {\r\n            this._reportFilterService.DebtorsOutstandingObj.DebtorsOutstanding_DIVISIONNAME = 'All';\r\n          }else if( this._reportFilterService.DebtorsOutstandingObj.DebtorsOutstanding_DIV && this._reportFilterService.DebtorsOutstandingObj.DebtorsOutstanding_DIV!= '%'){\r\n            let abc = this.division.filter(x=>x.INITIAL == this._reportFilterService.DebtorsOutstandingObj.DebtorsOutstanding_DIV);\r\n              if(abc && abc.length>0 && abc[0]){\r\n                this._reportFilterService.DebtorsOutstandingObj.DebtorsOutstanding_DIVISIONNAME = abc[0].NAME;\r\n              }else{\r\n                this._reportFilterService.DebtorsOutstandingObj.DebtorsOutstanding_DIVISIONNAME = '';\r\n              }\r\n          }else{\r\n            this._reportFilterService.DebtorsOutstandingObj.DebtorsOutstanding_DIVISIONNAME = '';\r\n          }\r\n    \r\n          if (this._reportFilterService.DebtorsOutstandingObj.DebtorsOutstanding_CostCenter && this._reportFilterService.DebtorsOutstandingObj.DebtorsOutstanding_CostCenter == '%') {\r\n            this._reportFilterService.DebtorsOutstandingObj.DebtorsOutstanding_COSTCENTERDISPLAYNAME = 'All';\r\n          }\r\n          else if (this._reportFilterService.DebtorsOutstandingObj.DebtorsOutstanding_CostCenter != '%') {\r\n            let abc = this.CostcenterList.filter(x=>x.CCID == this._reportFilterService.DebtorsOutstandingObj.DebtorsOutstanding_CostCenter);\r\n            if(abc && abc.length>0 && abc[0]){\r\n              this._reportFilterService.DebtorsOutstandingObj.DebtorsOutstanding_COSTCENTERDISPLAYNAME = abc[0].COSTCENTERNAME;\r\n            }else{\r\n              this._reportFilterService.DebtorsOutstandingObj.DebtorsOutstanding_COSTCENTERDISPLAYNAME = '';\r\n            }\r\n          } else {\r\n            this._reportFilterService.DebtorsOutstandingObj.DebtorsOutstanding_COSTCENTERDISPLAYNAME = '';\r\n          }\r\n          \r\n          \r\n        if(res == \"ok\"){\r\n            this._reportFilterService.DebtorsOutstandingObj.assignPrevioiusDate = true;\r\n            let routepaths = this.arouter.url.split('/');\r\n            let activeurlpath2;\r\n              if(routepaths&& routepaths.length){\r\n                activeurlpath2=routepaths[routepaths.length-1]\r\n              }\r\n\r\n              if(this._reportFilterService.DebtorsOuts_loadedTimes == 0){\r\n                this._reportFilterService.previouslyLoadedReportList.push(\r\n                    {reportname: 'Debtors Outstanding Report',\r\n                    activeurlpath: this.arouter.url,\r\n                    activerurlpath2: activeurlpath2,\r\n                    instanceWiseRepName:this.instanceWiseRepName +this._reportFilterService.DebtorsOuts_loadedTimes,\r\n                });\r\n            }else{\r\n                this._reportFilterService.previouslyLoadedReportList.push(\r\n                    {reportname: 'Debtors Outstanding Report'+'_'+this._reportFilterService.DebtorsOuts_loadedTimes,\r\n                    activeurlpath: this.arouter.url,\r\n                    activerurlpath2: activeurlpath2,\r\n                    instanceWiseRepName:this.instanceWiseRepName +this._reportFilterService.DebtorsOuts_loadedTimes,\r\n                });\r\n            }\r\n\r\n            }\r\n            let multiplereportname = 'Debtors Outstanding Report';\r\n            let Area = '0';\r\n            if(this._reportFilterService.DebtorsOutstandingObj.ISSUMMARY=='1'){\r\n                multiplereportname = 'Debtors Outstanding Report';\r\n                Area=this._reportFilterService.DebtorsOutstandingObj.DebtorsOutstanding_AreaWiseInSummary;\r\n            }else if(this._reportFilterService.DebtorsOutstandingObj.ISSUMMARY=='0'){\r\n                multiplereportname = 'Debtors Outstanding Report_1';\r\n                Area=this._reportFilterService.DebtorsOutstandingObj.DebtorsOutstanding_AreaWise;\r\n            }\r\n\r\n        this._reportFilterService.DebtorsOutstandingObj.DIV = (this._reportFilterService.DebtorsOutstandingObj.DIV == null || this._reportFilterService.DebtorsOutstandingObj.DIV == \"\") ? \"%\" : this._reportFilterService.DebtorsOutstandingObj.DIV;\r\n        this.reportdataEmit.emit({\r\n            status: res, data: {\r\n                reportname: multiplereportname,\r\n                REPORTDISPLAYNAME : 'Debtors Outstanding Report',\r\n                instanceWiseRepName:this.instanceWiseRepName+this._reportFilterService.DebtorsOuts_loadedTimes,\r\n                reportparam: {\r\n                    DATE: this._reportFilterService.DebtorsOutstandingObj.DebtorsOutstanding_DATE1 ,\r\n                    BSDATE: this._reportFilterService.CreditorsAgeingObj.DebtorsOutstanding_BSDATE1,\r\n                    DIV: this._reportFilterService.DebtorsOutstandingObj.DIV,\r\n                    COMID: this.masterService.userProfile.CompanyInfo.COMPANYID,\r\n                    PHISCALID: this.masterService.PhiscalObj.PhiscalID,\r\n                    COSTCENTER: this._reportFilterService.DebtorsOutstandingObj.DebtorsOutstanding_CostCenter ? this._reportFilterService.DebtorsOutstandingObj.DebtorsOutstanding_CostCenter : '%',\r\n                    ISDEBTORS: \"1\",\r\n                    GROUPBY: this._reportFilterService.DebtorsOutstandingObj.GROUPBY?this._reportFilterService.DebtorsOutstandingObj.GROUPBY:'0',\r\n                    DOAGEINGOFOPENINGBL: this._reportFilterService.DebtorsOutstandingObj.DOAGEINGOFOPENINGBL?this._reportFilterService.DebtorsOutstandingObj.DOAGEINGOFOPENINGBL:0,\r\n                    ACID: SelectedAccount ? SelectedAccount : '%',\r\n                    AREA: Area ? Area : '0',\r\n                    REPORTTYPE: this._reportFilterService.DebtorsOutstandingObj.ReportType?this._reportFilterService.DebtorsOutstandingObj.ReportType:0,\r\n                    ISSUMMARY: this._reportFilterService.DebtorsOutstandingObj.ISSUMMARY,\r\n                    // DATE1: this.masterService.PhiscalObj.BeginDate.split('T')[0],\r\n                    // DATE2: this._reportFilterService.DebtorsOutstandingObj.DebtorsOutstanding_DATE1 ,\r\n                    DIVISIONNAME : this._reportFilterService.DebtorsOutstandingObj.DebtorsOutstanding_DIVISIONNAME ? this._reportFilterService.DebtorsOutstandingObj.DebtorsOutstanding_DIVISIONNAME : '',\r\n                    COSTCENTERDISPLAYNAME: this._reportFilterService.DebtorsOutstandingObj.DebtorsOutstanding_COSTCENTERDISPLAYNAME?this._reportFilterService.DebtorsOutstandingObj.DebtorsOutstanding_COSTCENTERDISPLAYNAME:'',\r\n                    PARTYGROUP : this._reportFilterService.DebtorsOutstandingObj.DebtorsOutstanding_PartyGroup?this._reportFilterService.DebtorsOutstandingObj.DebtorsOutstanding_PartyGroup:'%',\r\n                    INCLUDEPOSTEDTRANSACTION:this._reportFilterService.DebtorsOutstandingObj.DebtorsOutstanding_INCLUDEPOSTEDTRANSACTION?this._reportFilterService.DebtorsOutstandingObj.DebtorsOutstanding_INCLUDEPOSTEDTRANSACTION:0\r\n                }\r\n            }\r\n        });\r\n        if(res == \"ok\"){\r\n            this._reportFilterService.DebtorsOuts_loadedTimes = this._reportFilterService.DebtorsOuts_loadedTimes+1;\r\n        }\r\n    }\r\n\r\n    changestartDate(value, format: string) {\r\n        try {\r\n            var adbs = require(\"ad-bs-converter\");\r\n            if (format == \"AD\") {\r\n                var adDate = (value.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n                var bsDate = adbs.ad2bs(adDate);\r\n                this._reportFilterService.DebtorsOutstandingObj.DebtorsOutstanding_BSDATE1 = this.masterService.toBSDate(value);\r\n            }\r\n            else if (format == \"BS\") {\r\n              var datearr = value.split('/');\r\n              const bsDate = datearr[2]+\"/\"+datearr[1]+\"/\"+datearr[0];\r\n                // var bsDate = (value.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n                var adDate = adbs.bs2ad(bsDate);\r\n                var Engdate = this.masterService.toADDate(value);\r\n                const Validatedata = this.masterService.ValidateNepaliDate(Engdate)\r\n                if(Validatedata == true){\r\n                  const bsDate1 = datearr[2]+\"/\"+datearr[1]+\"/\"+datearr[0];\r\n                  var adDate1 = adbs.bs2ad(bsDate1);\r\n                  this._reportFilterService.DebtorsOutstandingObj.DebtorsOutstanding_DATE1  = this.masterService.toADDate(value);\r\n                }else{\r\n                    this.alertService.error(\"Cannot Change the date\");\r\n                  return;\r\n                }\r\n                // this._reportFilterService.DebtorsOutstandingObj.DebtorsOutstanding_DATE1 = this.masterService.toBSDate(value);\r\n            }\r\n        } catch (e) { }\r\n\r\n    }\r\n\r\n    checkValue(){\r\n        if(this._reportFilterService.DebtorsOutstandingObj.ReportType=='1'){\r\n            this.showCustomer=true;\r\n        }else{\r\n            this.showCustomer=false;\r\n        }\r\n        if(this._reportFilterService.DebtorsOutstandingObj.ReportType=='2'){\r\n            this.showArea=true;\r\n        }else{\r\n            this.showArea=false;\r\n        }\r\n    }\r\n\r\n    // onChangeSummaryReport() {\r\n    //     this._reportFilterService.DebtorsOutstandingObj.SummaryReportWise = 0;\r\n    // }\r\n    // onChangeDetailReport() {\r\n    //     this._reportFilterService.DebtorsOutstandingObj.DetailReportWise = 0;\r\n    // }\r\n\r\n    addAccountToList() {\r\n        let selectACList = this._reportFilterService.DebtorsOutstandingObj.DebtorsOutstanding_multipleAccounts.filter(acList => acList.ACNAME == this._reportFilterService.DebtorsOutstandingObj.multipleACNAME)\r\n        if (\r\n            this._reportFilterService.DebtorsOutstandingObj.multipleACNAME === \"\" ||\r\n            this._reportFilterService.DebtorsOutstandingObj.multipleACNAME === null ||\r\n            this._reportFilterService.DebtorsOutstandingObj.multipleACNAME === undefined\r\n        ) {\r\n            return;\r\n        }\r\n\r\n        if (selectACList.length === 0) {\r\n            this._reportFilterService.DebtorsOutstandingObj.DebtorsOutstanding_multipleAccounts.push({ ACID: this._reportFilterService.DebtorsOutstandingObj.multipleACID, ACNAME: this._reportFilterService.DebtorsOutstandingObj.multipleACNAME })\r\n                this._reportFilterService.DebtorsOutstandingObj.multipleACNAME='';\r\n                this._reportFilterService.DebtorsOutstandingObj.multipleACCODE='';\r\n                this._reportFilterService.DebtorsOutstandingObj.multipleACID='';\r\n        }\r\n    }\r\n\r\n    deleteAccount(index) {\r\n        this._reportFilterService.DebtorsOutstandingObj.DebtorsOutstanding_multipleAccounts.splice(index, 1)\r\n    }\r\n\r\n\r\n    MultipleAccountEnterClicked() {\r\n        this.gridPopupSettingsForMultipleAccountLedgerList = this.masterService.getGenericGridPopUpSettings('C');\r\n        this.genericGridMultipleAccountLedger.show();\r\n    }\r\n\r\n    dblClickMultipleAccountSelect(account) {\r\n        this._reportFilterService.DebtorsOutstandingObj.multipleACID = account.ACID;\r\n        this._reportFilterService.DebtorsOutstandingObj.multipleACNAME = account.ACNAME;\r\n    }\r\n\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/pages/ReportDialogs/debtors-outstanding-report/debtors-outstanding-report.component.ts","import { Component, Output, OnInit, EventEmitter } from \"@angular/core\";\r\nimport { AuthService } from \"../../../common/services/permission/authService.service\";\r\nimport { ReportMainService } from \"../../Reports/components/ReportMain/ReportMain.service\";\r\nimport { MasterRepo } from \"../../../common/repositories/masterRepo.service\";\r\nimport { Division } from '../../../common/interfaces';\r\n\r\n@Component({\r\n    selector: \"division-list\",\r\n    template: require('./division.component.html'),\r\n    styles: [require('../../modal-style.css'), require('../../Reports/reportStyle.css')],\r\n    providers: [AuthService]\r\n\r\n})\r\nexport class DivisionComponent {\r\n    division: any[] = [];\r\n\r\n    constructor(private _authService: AuthService,\r\n        private _reportFilterService:ReportMainService,\r\n        public masterService: MasterRepo) {\r\n        this.division = [];\r\n        this.masterService.getAllDivisions()\r\n            .subscribe(res => {\r\n                this.division.push(<Division>res);\r\n            }, error => {\r\n                this.masterService.resolveError(error, \"divisions - getDivisions\");\r\n            });\r\n\r\n        this._reportFilterService.ReportFilterObject.DIV=this.masterService.userProfile.CompanyInfo.INITIAL;\r\n\r\n    }\r\n    \r\n \r\n\r\n\r\n\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/pages/ReportDialogs/division/division.component.ts","import { Component, EventEmitter, OnInit, Output, ViewChild } from \"@angular/core\";\r\n\r\nimport { ActivatedRoute, Router } from \"@angular/router\";\r\nimport { GenericPopUpComponent, GenericPopUpSettings } from \"../../../common/popupLists/generic-grid/generic-popup-grid.component\";\r\nimport { MasterRepo } from \"../../../common/repositories/masterRepo.service\";\r\nimport { AuthService } from \"../../../common/services/permission/authService.service\";\r\nimport { ReportMainService } from \"../../Reports/components/ReportMain/ReportMain.service\";\r\n4\r\n\r\n@Component({\r\n    selector: 'faarasset-depreciation-report',\r\n    template: require('./faarasset-depreciation-report.component.html'),\r\n    styles: [require('../../Reports/reportStyle.css'), require('../../modal-style.css')],\r\n})\r\n\r\nexport class FaarAssetDepreciationReport implements OnInit {\r\n    ReportParameters: any = <any>{};\r\n    instanceWiseRepName: string = 'DEPRECIATION  REPORT AS PER FAAR ASSET';\r\n\r\n    REPORTOPTION: any[] = [\r\n        { Mode: '1', ReportOptionName: 'Pool Wise' },\r\n        { Mode: '2', ReportOptionName: 'Block Wise' },\r\n        { Mode: '3', ReportOptionName: 'Item Wise' },\r\n        { Mode: '4', ReportOptionName: 'Asset Code Wise' }\r\n    ]\r\n\r\n    poolName: any[] = [];\r\n    AssetGroupID: number;\r\n    AssetNameList: any[] = [];\r\n    AssetIDList: any[] = [];\r\n    ACID: string = \"\";\r\n    MCODE: string = \"\";\r\n\r\n    @Output() reportdataEmit = new EventEmitter();\r\n\r\n    @ViewChild(\"genericGridLedgerList\")\r\n    genericGridLedgerList: GenericPopUpComponent;\r\n    gridLedgerListPopupSettings: GenericPopUpSettings = new GenericPopUpSettings();\r\n\r\n    @ViewChild(\"genericGridAssetNameList\")\r\n    genericGridAssetNameList: GenericPopUpComponent;\r\n    gridAssetNameListPopupSettings: GenericPopUpSettings = new GenericPopUpSettings();\r\n\r\n    @ViewChild(\"genericGridAssetIDList\")\r\n    genericGridAssetIDList: GenericPopUpComponent;\r\n    gridAssetIDListPopupSettings: GenericPopUpSettings = new GenericPopUpSettings();\r\n\r\n    constructor(private masterService: MasterRepo, private arouter: Router, private _authService: AuthService, public _ActivatedRoute: ActivatedRoute, private _reportFilterService: ReportMainService) {\r\n        this._reportFilterService.FaarAssetObj.Reportnameis = \"DEPRECIATION  REPORT AS PER FAAR ASSET\";\r\n        this._reportFilterService.FaarAssetObj.FaarAsset_REPORTOPTION ='1';\r\n\r\n        this.poolName = [];\r\n\r\n        this.masterService.getPoolName().subscribe(res => {\r\n            this.poolName = res;\r\n        });\r\n    }\r\n\r\n    ngOnInit() {\r\n        this._ActivatedRoute.queryParams.subscribe(params => {\r\n\r\n            if (params.instancename) {\r\n                this._reportFilterService.FaarAssetObj.FaarAsset_REPORTOPTION ;\r\n                // this._reportFilterService.FaarAssetObj.FaarAsset_INCLUDEOPENINGVALUE = this._reportFilterService.reportDataStore[params.instancename].param.reportparam.INCLUDEOPENINGVALUE;\r\n                this._reportFilterService.FaarAssetObj.FaarAsset_POOLNAME = this._reportFilterService.reportDataStore[params.instancename].param.reportparam.POOL;\r\n                this._reportFilterService.FaarAssetObj.FaarAsset_ASSETGROUPID = this._reportFilterService.reportDataStore[params.instancename].param.reportparam.ASSETGROUPID;\r\n                this._reportFilterService.FaarAssetObj.FaarAsset_LEDGERNAME = this._reportFilterService.reportDataStore[params.instancename].param.reportparam.BLOCK;\r\n                this._reportFilterService.FaarAssetObj.FaarAsset_ASSETNAME = this._reportFilterService.reportDataStore[params.instancename].param.reportparam.ITEM;\r\n                this._reportFilterService.FaarAssetObj.FaarAsset_ASSETID = this._reportFilterService.reportDataStore[params.instancename].param.reportparam.ASSETID;\r\n            }\r\n        })\r\n\r\n\r\n    }\r\n\r\n    onload() {\r\n        if(this._reportFilterService.FaarAssetObj.FaarAsset_LEDGERNAME == \"\" ||this._reportFilterService.FaarAssetObj.FaarAsset_LEDGERNAME == null || \r\n        this._reportFilterService.FaarAssetObj.FaarAsset_LEDGERNAME == undefined ){\r\n            this._reportFilterService.FaarAssetObj.FaarAsset_ACCODE = '%';\r\n        }\r\n\r\n        if(this._reportFilterService.FaarAssetObj.FaarAsset_ASSETNAME == \"\" ||this._reportFilterService.FaarAssetObj.FaarAsset_ASSETNAME == null || \r\n        this._reportFilterService.FaarAssetObj.FaarAsset_ASSETNAME == undefined ){\r\n            this._reportFilterService.FaarAssetObj.FaarAsset_ITEMID = '%';\r\n        }\r\n\r\n        if(this._reportFilterService.FaarAssetObj.FaarAsset_ASSETID == \"\" ||this._reportFilterService.FaarAssetObj.FaarAsset_ASSETID == null ||\r\n        this._reportFilterService.FaarAssetObj.FaarAsset_ASSETID == undefined ){\r\n            this._reportFilterService.FaarAssetObj.FaarAsset_ASSETID = '%';\r\n        }\r\n\r\n        this.DialogClosedResult(\"ok\");\r\n    }\r\n\r\n    closeReportBox() {\r\n        this.DialogClosedResult(\"Error!\");\r\n    }\r\n\r\n    public DialogClosedResult(res) {\r\n        let multipleReportFormateName = '';\r\n\r\n        if(this._reportFilterService.FaarAssetObj.FaarAsset_REPORTOPTION== '1'){\r\n            multipleReportFormateName = 'DEPRECIATION  REPORT AS PER FAAR ASSET_1';\r\n        }else if (this._reportFilterService.FaarAssetObj.FaarAsset_REPORTOPTION =='2'){\r\n            multipleReportFormateName = 'DEPRECIATION  REPORT AS PER FAAR ASSET_2';\r\n        } else if (this._reportFilterService.FaarAssetObj.FaarAsset_REPORTOPTION == '3'){\r\n            multipleReportFormateName = 'DEPRECIATION  REPORT AS PER FAAR ASSET_3';\r\n        } else if(this._reportFilterService.FaarAssetObj.FaarAsset_REPORTOPTION =='4'){\r\n            multipleReportFormateName = 'DEPRECIATION  REPORT AS PER FAAR ASSET_4';\r\n        } else {\r\n            multipleReportFormateName = 'DEPRECIATION  REPORT AS PER FAAR ASSET';\r\n        }\r\n        \r\n\r\n        if (res == \"ok\") {\r\n            let routepaths = this.arouter.url.split('/');\r\n            let activeurlpath2;\r\n            if (routepaths && routepaths.length) {\r\n                activeurlpath2 = routepaths[routepaths.length - 1]\r\n            }\r\n\r\n            if (this._reportFilterService.FaarAsset_loadedTimes == 0) {\r\n                this._reportFilterService.previouslyLoadedReportList.push(\r\n                    {\r\n                        reportname: 'DEPRECIATION  REPORT AS PER FAAR ASSET',\r\n                        activeurlpath: this.arouter.url,\r\n                        activerurlpath2: activeurlpath2,\r\n                        instanceWiseRepName: this.instanceWiseRepName + this._reportFilterService.FaarAsset_loadedTimes,\r\n                    });\r\n            } else {\r\n                this._reportFilterService.previouslyLoadedReportList.push(\r\n                    {\r\n                        reportname: 'DEPRECIATION  REPORT AS PER FAAR ASSET' + '_' + this._reportFilterService.FaarAsset_loadedTimes,\r\n                        activeurlpath: this.arouter.url,\r\n                        activerurlpath2: activeurlpath2,\r\n                        instanceWiseRepName: this.instanceWiseRepName + this._reportFilterService.FaarAsset_loadedTimes,\r\n                    });\r\n            }\r\n        }\r\n\r\n        this.reportdataEmit.emit({\r\n            status: res, data: {\r\n                REPORTDISPLAYNAME: 'FIXED ASSETS REGISTER REPORT',\r\n                reportname: multipleReportFormateName,\r\n                instanceWiseRepName: this.instanceWiseRepName + this._reportFilterService.FaarAsset_loadedTimes,\r\n                reportparam: {\r\n                    MODE: this._reportFilterService.FaarAssetObj.FaarAsset_REPORTOPTION,\r\n                    PHISCALID: this.masterService.PhiscalObj.PhiscalID,\r\n                    // INCLUDEOPENINGVALUE: this._reportFilterService.CompanyNormsObj.CompanyNorms_INCLUDEOPENINGVALUE ? this._reportFilterService.CompanyNormsObj.CompanyNorms_INCLUDEOPENINGVALUE : 0,\r\n                    POOL: this._reportFilterService.FaarAssetObj.FaarAsset_POOLNAME ? this._reportFilterService.FaarAssetObj.FaarAsset_POOLNAME : '%',\r\n                    BLOCK: this._reportFilterService.FaarAssetObj.FaarAsset_ACCODE ? this._reportFilterService.FaarAssetObj.FaarAsset_ACCODE : '%',\r\n                    ITEM: this._reportFilterService.FaarAssetObj.FaarAsset_ITEMID ? this._reportFilterService.FaarAssetObj.FaarAsset_ITEMID : '%',\r\n                    ASSETID: this._reportFilterService.FaarAssetObj.FaarAsset_ASSETID ? this._reportFilterService.FaarAssetObj.FaarAsset_ASSETID : '%'\r\n                }\r\n            }\r\n        });\r\n\r\n        if (res == \"ok\") {\r\n            this._reportFilterService.FaarAsset_loadedTimes = this._reportFilterService.FaarAsset_loadedTimes + 1;\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    LedgerNameEnterCommand() {\r\n        this.showLedgerList();\r\n    }\r\n\r\n    showLedgerList() {\r\n        this.gridLedgerListPopupSettings = {\r\n            title: \"Accounts\",\r\n            apiEndpoints: `/loadLedger`,\r\n            defaultFilterIndex: 1,\r\n            columns: [\r\n                {\r\n                    key: \"ACID\",\r\n                    title: \"AC CODE\",\r\n                    hidden: false,\r\n                    noSearch: false\r\n                },\r\n                {\r\n                    key: \"ACNAME\",\r\n                    title: \"A/C NAME\",\r\n                    hidden: false,\r\n                    noSearch: false\r\n                }\r\n            ]\r\n        };\r\n        this.genericGridLedgerList.show('',false,'','',this._reportFilterService.FaarAssetObj.FaarAsset_ASSETGROUPID);\r\n    }\r\n\r\n    onLedgerSelect(event) {\r\n        this._reportFilterService.FaarAssetObj.FaarAsset_ACCODE = event.ACID;\r\n        this._reportFilterService.FaarAssetObj.FaarAsset_LEDGERNAME = event.ACNAME;\r\n    }\r\n\r\n    AssetNameEnterCommand() {\r\n        this.showAssetNameList();\r\n    }\r\n\r\n    showAssetNameList() {\r\n        this.gridAssetNameListPopupSettings = {\r\n            title: \"Assets\",\r\n            apiEndpoints: `/loadAssetName`,\r\n            defaultFilterIndex: 1,\r\n            columns: [\r\n                {\r\n                    key: \"MCODE\",\r\n                    title: \"ASSET NAME\",\r\n                    hidden: false,\r\n                    noSearch: false\r\n                },\r\n                {\r\n                    key: \"ASSET_NAME\",\r\n                    title: \"ITEM NAME\",\r\n                    hidden: false,\r\n                    noSearch: false\r\n                }\r\n            ]\r\n        };\r\n        this.genericGridAssetNameList.show();\r\n    }\r\n\r\n    onAssetNameSelect(event) {\r\n        this._reportFilterService.FaarAssetObj.FaarAsset_ITEMID = event.MCODE;\r\n        this._reportFilterService.FaarAssetObj.FaarAsset_ASSETNAME = event.ASSET_NAME;\r\n    }\r\n\r\n    clearAssetMcode(){\r\n        if(!this._reportFilterService.FaarAssetObj.FaarAsset_ASSETNAME){\r\n            this._reportFilterService.FaarAssetObj.FaarAsset_ITEMID ='';\r\n        }\r\n    }\r\n\r\n    AssetIdEnterCommand() {\r\n        this.showAssetIDList();\r\n    }\r\n\r\n    showAssetIDList() {\r\n        this.gridAssetIDListPopupSettings = {\r\n            title: \"Assets\",\r\n            apiEndpoints: `/loadAssetID`,\r\n            defaultFilterIndex: 1,\r\n            columns: [\r\n                {\r\n                    key: \"ASSET_NAME\",\r\n                    title: \"ITEM NAME\",\r\n                    hidden: false,\r\n                    noSearch: false\r\n                },\r\n                {\r\n                    key: \"AssetID\",\r\n                    title: \"ASSET ID\",\r\n                    hidden: false,\r\n                    noSearch: false\r\n                }\r\n            ]\r\n        };\r\n        this.genericGridAssetIDList.show('',false,'','',null,this._reportFilterService.FaarAssetObj.FaarAsset_ITEMID);\r\n    }\r\n\r\n    onAssetIDSelect(event) {\r\n        this._reportFilterService.FaarAssetObj.FaarAsset_ASSETID = event.AssetID;\r\n        this._reportFilterService.FaarAssetObj.FaarAsset_ASSETNAME = event.MCODE;\r\n    }\r\n\r\n    onPoolNameChange(event){\r\n        this._reportFilterService.FaarAssetObj.FaarAsset_ASSETGROUPID = event;\r\n        // console.log(event)\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/pages/ReportDialogs/faarasset-depreciation-report/faarasset-depreciation-report.component.ts","import { Component, Output, EventEmitter, ViewChild, Input, ElementRef } from '@angular/core';\r\nimport { MasterRepo } from '../../../common/repositories';\r\n\r\n@Component({\r\n  selector: 'one-lakh-above-purchase-report',\r\n  template: require('./one-lakh-above-PURCHASE-report.component.html'),\r\n  styles: [require('../../modal-style.css'), require('../../Reports/reportStyle.css')],\r\n})\r\nexport class OneLakhAbovePURCHASEreportComponent {\r\n  OneLakhAbovePurchaseReport: any = <any>{};\r\n\r\n  @ViewChild('division') division: ElementRef\r\n  private divisionList = []\r\n  showopeningBl: string\r\n  @Output() reportdataEmit = new EventEmitter();\r\n  @Input() reportType: string;\r\n\r\n\r\n  constructor(public masterService: MasterRepo) {\r\n    this.OneLakhAbovePurchaseReport.DATE1 = new Date().toJSON().split('T')[0];\r\n    this.changeEntryDate(this.OneLakhAbovePurchaseReport.DATE1, \"AD\");\r\n    this.OneLakhAbovePurchaseReport.DATE = new Date().toJSON().split('T')[0];\r\n    this.changeEndDate(this.OneLakhAbovePurchaseReport.DATE, \"AD\");\r\n\r\n    this.masterService.getAllDivisions().subscribe((res) => {\r\n      this.divisionList.push(res)\r\n    })\r\n  }\r\n\r\n  onload() {\r\n    this.DialogClosedResult(\"ok\");\r\n\r\n  }\r\n\r\n  public DialogClosedResult(res) {\r\n    if (this.OneLakhAbovePurchaseReport.isR1 == true) {\r\n      this.OneLakhAbovePurchaseReport.R1 = '1'\r\n    } else {\r\n      this.OneLakhAbovePurchaseReport.R1 = ''\r\n    }\r\n    if (this.OneLakhAbovePurchaseReport.isR2 == true) {\r\n      this.OneLakhAbovePurchaseReport.R2 = '1'\r\n    } else {\r\n      this.OneLakhAbovePurchaseReport.R2 = ''\r\n    }\r\n    if (this.OneLakhAbovePurchaseReport.isR3 == true) {\r\n      this.OneLakhAbovePurchaseReport.R3 = '1'\r\n    } else {\r\n      this.OneLakhAbovePurchaseReport.R3 = ''\r\n    }\r\n    this.reportdataEmit.emit({\r\n      status: res, data: {\r\n        reportname: 'One Lakh Above Purchase Report', reportparam: {\r\n          DATE1: this.OneLakhAbovePurchaseReport.DATE1,\r\n          DATE2: this.OneLakhAbovePurchaseReport.DATE,\r\n          DIV: this.OneLakhAbovePurchaseReport.DIV,\r\n          COMPANYID: this.masterService.userProfile.CompanyInfo.COMPANYID,\r\n          R1: this.OneLakhAbovePurchaseReport.R1,\r\n          R2: this.OneLakhAbovePurchaseReport.R2,\r\n          R3: this.OneLakhAbovePurchaseReport.R3,\r\n          DETAIL: '0',\r\n          PARTY: '%',\r\n          VATNO: '%',\r\n          isR1: false,\r\n          isR2: false,\r\n          isR3: false\r\n\r\n\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  divisionChanged() {\r\n    this.OneLakhAbovePurchaseReport.DIV = this.division.nativeElement.value\r\n  }\r\n\r\n  hide() {\r\n    this.DialogClosedResult(\"Error\");\r\n  }\r\n\r\n  changeEntryDate(value, format: string) {\r\n    var adbs = require(\"ad-bs-converter\");\r\n    if (format == \"AD\") {\r\n      var adDate = (value.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n      var bsDate = adbs.ad2bs(adDate);\r\n      this.OneLakhAbovePurchaseReport.BSDATE1 = this.masterService.toBSDate(value);\r\n    }\r\n    else if (format == \"BS\") {\r\n      var bsDate = (value.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n      var adDate = adbs.bs2ad(bsDate);\r\n      this.OneLakhAbovePurchaseReport.DATE1 = this.masterService.toADDate(value);\r\n    }\r\n  }\r\n\r\n  changeEndDate(value, format: string) {\r\n    var adbs = require(\"ad-bs-converter\");\r\n    if (format == \"AD\") {\r\n      var adDate = (value.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n      var bsDate = adbs.ad2bs(adDate);\r\n      this.OneLakhAbovePurchaseReport.BSDATE2 = this.masterService.toBSDate(value);\r\n    }\r\n    else if (format == \"BS\") {\r\n      var bsDate = (value.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n      var adDate = adbs.bs2ad(bsDate);\r\n      this.OneLakhAbovePurchaseReport.DATE = this.masterService.toADDate(value);\r\n    }\r\n  }\r\n\r\n  cancel() {\r\n    this.DialogClosedResult(\"cancel\");\r\n  }\r\n\r\n  preventInput($event) {\r\n    $event.preventDefault();\r\n    return false;\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/pages/ReportDialogs/one-lakh-above-PURCHASE-report/one-lakh-above-PURCHASE-report.component.ts","import { NgaModule } from '../../../theme/nga.module';\r\nimport { Component, Inject, Output, EventEmitter, ViewChild, OnInit } from '@angular/core';\r\nimport { MdDialogRef, MD_DIALOG_DATA } from '@angular/material';\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { MasterRepo } from '../../../common/repositories';\r\nimport { Division } from '../../../common/interfaces';\r\nimport { AuthService } from '../../../common/services/permission/authService.service';\r\nimport { ReportMainService } from '../../Reports/components/ReportMain/ReportMain.service';\r\nimport { GenericPopUpComponent, GenericPopUpSettings } from '../../../common/popupLists/generic-grid/generic-popup-grid.component';\r\nimport { Subscriber } from 'rxjs';\r\nimport { AlertService } from '../../../common/services/alert/alert.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\nexport interface DialogInfo {\r\n    header: string;\r\n    message: Observable<string>;\r\n}\r\n\r\n@Component({\r\n    selector: 'voucher-registor-dialog',\r\n    template: require('./voucher-register-report.component.html'),\r\n    styles: [require('../../Reports/reportStyle.css'), require('../../modal-style.css')],\r\n})\r\n\r\nexport class VoucherRegister implements OnInit{\r\n    // ReportParameters: any = <any>{};\r\n    division: any[] = [];\r\n    CostcenterList: any[] = [];\r\n    voucherTypeList: any[] = [];\r\n    costlists:any[] = [];\r\n    userList:any[] = [];\r\n    allAccountList:any[] = [];\r\n    @ViewChild(\"genericGridACListParty\")\r\n    genericGridACListParty: GenericPopUpComponent;\r\n    gridACListPartyPopupSettings: GenericPopUpSettings = new GenericPopUpSettings();\r\n    result: any;\r\n    userProfile: any;\r\n    instanceWiseRepName:string='Voucher Register Report';\r\n    showVoucherTable:boolean;\r\n\r\n    @ViewChild(\"genericGridAccountList\") genericGridAccountList: GenericPopUpComponent;\r\n    gridPopupSettingsForAccountList: GenericPopUpSettings = new GenericPopUpSettings();\r\n    @Output() reportdataEmit = new EventEmitter();\r\n    constructor(private masterService: MasterRepo,private _authService: AuthService, public _ActivatedRoute: ActivatedRoute,\r\n        private _reportFilterService:ReportMainService, private alertService: AlertService, private arouter: Router,\r\n        public dialogref: MdDialogRef<VoucherRegister>,\r\n        @Inject(MD_DIALOG_DATA) public data: DialogInfo) {\r\n        //----------Default values on load\r\n        this.getVoucherType();\r\n        this.getCostCenter();\r\n        this.getuserList();\r\n        this.getAllAcccountList();\r\n        this.userProfile = this._authService.getUserProfile();\r\n\r\n        // this._reportFilterService.VoucherRegisterObj.REPORTMODEVR = '0';\r\n\r\n        this.gridACListPartyPopupSettings = {\r\n            title: \"Accounts\",\r\n            apiEndpoints: `/getAccountPagedListByMapId/Master/ALL/`,\r\n            defaultFilterIndex: 1,\r\n            columns: [\r\n              {\r\n                key: \"ACCODE\",\r\n                title: \"AC CODE\",\r\n                hidden: false,\r\n                noSearch: false\r\n              },\r\n              {\r\n                key: \"ACNAME\",\r\n                title: \"A/C NAME\",\r\n                hidden: false,\r\n                noSearch: false\r\n              }\r\n            ]\r\n          };\r\n\r\n\r\n          this.division=[];\r\n          //let data: Array<IDivision> = [];\r\n          if(this.masterService.userSetting.userwisedivision == 1){\r\n            this.masterService.getDivisionFromRightPrivelege().subscribe(res=>{\r\n                if(res.status == 'ok'){\r\n                    this.division = res.result;\r\n                }\r\n            })\r\n          }\r\n          else{\r\n           this.masterService.getAllDivisions()\r\n           .subscribe(res => {\r\n             //////console.log(\"div\" + JSON.stringify(res));\r\n             this.division.push(<Division>res);\r\n           }, error => {\r\n             this.masterService.resolveError(error, \"divisions - getDivisions\");\r\n           });\r\n          }\r\n          // this.masterService.getAccDivList();\r\n\r\n    }\r\n\r\n    ngOnInit(){\r\n        this._ActivatedRoute.queryParams.subscribe(params => {\r\n            if(this._reportFilterService.VoucherRegisterObj.assignPrevioiusDate != true){\r\n              this.masterService.getAccDivList();\r\n            this._reportFilterService.VoucherRegisterObj.VoucherRegister_DATE1=this.masterService.PhiscalObj.BeginDate.split('T')[0];\r\n            if (this.masterService.userProfile.CompanyInfo.ActualFY == this.masterService.PhiscalObj.PhiscalID) {\r\n                    this._reportFilterService.VoucherRegisterObj.VoucherRegister_DATE2 = new Date().toJSON().split('T')[0];\r\n                    this.changeEndDate(this._reportFilterService.VoucherRegisterObj.VoucherRegister_DATE2, \"AD\");\r\n                  }\r\n                  else {\r\n\r\n                this._reportFilterService.VoucherRegisterObj.VoucherRegister_DATE2 = this.masterService.PhiscalObj.EndDate.split('T')[0];\r\n                        this.changeEndDate(this._reportFilterService.VoucherRegisterObj.VoucherRegister_DATE2, \"AD\");\r\n\r\n\r\n                }\r\n                // this._reportFilterService.VoucherRegisterObj.VoucherRegister_DATE2 = new Date().toJSON().split('T')[0];\r\n                // this._reportFilterService.VoucherRegisterObj.VoucherRegister_DIV=this.masterService.userProfile.CompanyInfo.INITIAL;\r\n                this.masterService.viewDivision.subscribe(() => {\r\n                  if(this.masterService.userSetting.userwisedivision==0 ||  this.masterService.showAll == true){ //ALL OPTION SELECTION IN DIVISION IN REPORT DIALOG BOX\r\n                    this._reportFilterService.VoucherRegisterObj.VoucherRegister_DIV='%';\r\n                }else{\r\n                  if(this.masterService.userSetting.userwisedivision==1 && this.division.length ==1){\r\n                    this._reportFilterService.VoucherRegisterObj.VoucherRegister_DIV=this.division[0].INITIAL;\r\n                  }else{\r\n                    this._reportFilterService.VoucherRegisterObj.VoucherRegister_DIV=this.masterService.userProfile.CompanyInfo.INITIAL;\r\n                  }\r\n                }\r\n                })\r\n                this._reportFilterService.VoucherRegisterObj.VTYPE=\"%\";\r\n                this._reportFilterService.VoucherRegisterObj.REPORT_TYPE='1';\r\n                this._reportFilterService.VoucherRegisterObj.REPORTMODEVR = '0';\r\n                this._reportFilterService.VoucherRegisterObj.VoucherRegister_MultipleVoucher=[];\r\n            }\r\n\r\n            if(params.instancename){\r\n                // ////console.log(\"@@[voucher reg Report0]\",params.instancename,this._reportFilterService.reportDataStore[params.instancename].param.reportparam)\r\n                this._reportFilterService.VoucherRegisterObj.VoucherRegister_DATE1=this._reportFilterService.reportDataStore[params.instancename].param.reportparam.DATE1;\r\n                this._reportFilterService.VoucherRegisterObj.VoucherRegister_DATE2=this._reportFilterService.reportDataStore[params.instancename].param.reportparam.DATE2;\r\n                this._reportFilterService.VoucherRegisterObj.VoucherRegister_DIV=this._reportFilterService.reportDataStore[params.instancename].param.reportparam.DIV;\r\n                this._reportFilterService.VoucherRegisterObj.CCENTER=this._reportFilterService.reportDataStore[params.instancename].param.reportparam.CostCenter;\r\n                this._reportFilterService.VoucherRegisterObj.VoucherRegister_ACID=this._reportFilterService.reportDataStore[params.instancename].param.reportparam.ACID;\r\n                this._reportFilterService.VoucherRegisterObj.VoucherRegister_ACCNAME=this._reportFilterService.reportDataStore[params.instancename].param.reportparam.ACNAME;\r\n                this._reportFilterService.VoucherRegisterObj.FROM_VNO=this._reportFilterService.reportDataStore[params.instancename].param.reportparam.FROM_VNO;\r\n                this._reportFilterService.VoucherRegisterObj.REPORTMODEVR=this._reportFilterService.reportDataStore[params.instancename].param.reportparam.REPORT_MODE;\r\n                this._reportFilterService.VoucherRegisterObj.REPORT_TYPE=this._reportFilterService.reportDataStore[params.instancename].param.reportparam.REPORT_TYPE;\r\n                this._reportFilterService.VoucherRegisterObj.TO_VNO=this._reportFilterService.reportDataStore[params.instancename].param.reportparam.TO_VNO;\r\n                this._reportFilterService.VoucherRegisterObj.USER=this._reportFilterService.reportDataStore[params.instancename].param.reportparam.USER;\r\n                this._reportFilterService.VoucherRegisterObj.VTYPE=this._reportFilterService.reportDataStore[params.instancename].param.reportparam.VTYPE;\r\n            }\r\n        })\r\n\r\n\r\n        this.changeEntryDate(this._reportFilterService.VoucherRegisterObj.VoucherRegister_DATE1, \"AD\");\r\n        this.changeEndDate(this._reportFilterService.VoucherRegisterObj.VoucherRegister_DATE2, \"AD\");\r\n\r\n        if(this._reportFilterService.VoucherRegisterObj.VoucherRegister_MultipleVoucher.length>0){\r\n          this.showVoucherTable=true;\r\n         }\r\n    }\r\n\r\n    changeEntryDate(value, format: string) {\r\n        var adbs = require(\"ad-bs-converter\");\r\n        if (format == \"AD\") {\r\n            var adDate = (value.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n            var bsDate = adbs.ad2bs(adDate);\r\n            this._reportFilterService.VoucherRegisterObj.VoucherRegister_BSDATE1 = this.masterService.toBSDate(value);\r\n        }\r\n        else if (format == \"BS\") {\r\n          var datearr = value.split('/');\r\n          const bsDate = datearr[2]+\"/\"+datearr[1]+\"/\"+datearr[0];\r\n            // var bsDate = (value.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n            var adDate = adbs.bs2ad(bsDate);\r\n            var Engdate = this.masterService.toADDate(value);\r\n                const Validatedata = this.masterService.ValidateNepaliDate(Engdate)\r\n                if(Validatedata == true){\r\n                  const bsDate1 = datearr[2]+\"/\"+datearr[1]+\"/\"+datearr[0];\r\n                  var adDate1 = adbs.bs2ad(bsDate1);\r\n                  this._reportFilterService.VoucherRegisterObj.VoucherRegister_DATE1 = this.masterService.toADDate(value);\r\n                }else{\r\n                    this.alertService.error(\"Cannot Change the date\");\r\n                  return;\r\n                }\r\n          //  this._reportFilterService.VoucherRegisterObj.VoucherRegister_DATE1 = this.masterService.toBSDate(value);\r\n        }\r\n    }\r\n\r\n    changeEndDate(value, format: string) {\r\n        var adbs = require(\"ad-bs-converter\");\r\n        if (format == \"AD\") {\r\n            var adDate = (value.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n            var bsDate = adbs.ad2bs(adDate);\r\n            this._reportFilterService.VoucherRegisterObj.VoucherRegister_BSDATE2 = this.masterService.toBSDate(value);\r\n        }\r\n        else if (format == \"BS\") {\r\n          var datearr = value.split('/');\r\n          const bsDate = datearr[2]+\"/\"+datearr[1]+\"/\"+datearr[0];\r\n            // var bsDate = (value.replace(\"-\", \"/\")).replace(\"-\", \"/\");\r\n            var adDate = adbs.bs2ad(bsDate);\r\n            var Engdate = this.masterService.toADDate(value);\r\n            const Validatedata = this.masterService.ValidateNepaliDate(Engdate)\r\n            if(Validatedata == true){\r\n              const bsDate1 = datearr[2]+\"/\"+datearr[1]+\"/\"+datearr[0];\r\n              var adDate1 = adbs.bs2ad(bsDate1);\r\n              this._reportFilterService.VoucherRegisterObj.VoucherRegister_DATE2 = this.masterService.toADDate(value);\r\n            }else{\r\n                this.alertService.error(\"Cannot Change the date\");\r\n              return;\r\n            }\r\n            // this._reportFilterService.VoucherRegisterObj.VoucherRegister_DATE2 = this.masterService.toBSDate(value);\r\n        }\r\n    }\r\n\r\n    onload() {\r\n        if(this._reportFilterService.VoucherRegisterObj.REPORTMODEVR == 1 && (this._reportFilterService.VoucherRegisterObj.FROM_VNO > this._reportFilterService.VoucherRegisterObj.TO_VNO)){\r\n            this.alertService.info(\"Starting Voucher No is Greater Than Ending Voucher No!\");\r\n            return;\r\n                }else{\r\n                    this.DialogClosedResult(\"ok\");\r\n\r\n                }\r\n    }\r\n\r\n    getVoucherType(){\r\n        this.masterService.getAllVoucherType().subscribe(\r\n            (res) =>{\r\n                // ////console.log(\"vouchertyperes\",res);\r\n                this.voucherTypeList.push(res);\r\n            }\r\n        )\r\n    }\r\n    getAllAcccountList(){\r\n        this.masterService.getAllAccountList().subscribe(\r\n            (res)=>{\r\n                ////console.log(\"accres\",res);\r\n                this.allAccountList = res.result;\r\n            }\r\n        )\r\n    }\r\n\r\n    getCostCenter(){\r\n        this.masterService.getAllNEWCostCenter().subscribe(res => {\r\n            if (res) {\r\n\r\n              this.costlists = res.result;\r\n\r\n            }\r\n          }, error => {\r\n            this.costlists = [];\r\n          });\r\n    }\r\n    getuserList(){\r\n        this.masterService.getUserList().subscribe(\r\n            res =>{\r\n                ////console.log(\"res\",res);\r\n                this.userList = res\r\n            }\r\n        )\r\n    }\r\n\r\n\r\n    closeReportBox() {\r\n        this.DialogClosedResult(\"Error!\");\r\n    }\r\n    OnVoucherSelect(){\r\n      this.showVoucherTable = true;\r\n      if(this._reportFilterService.VoucherRegisterObj.VTYPE == 'All' || this._reportFilterService.VoucherRegisterObj.VTYPE == '%'  ){\r\n        this.showVoucherTable = false;\r\n        this._reportFilterService.VoucherRegisterObj.VoucherRegister_MultipleVoucher=[];\r\n      }\r\n      let vouchername=this.voucherTypeList.filter(x=>x.VOUCHER_ID==this._reportFilterService.VoucherRegisterObj.VTYPE);\r\n      console.log(\"@@vouchername\",vouchername)\r\n      if(vouchername.length>0){\r\n        this._reportFilterService.VoucherRegisterObj.VoucherRegister_VTYPENAME=vouchername[0].VOUCHER_NAME;\r\n      }\r\n    }\r\n\r\n\r\n    addVoucherList(){\r\n\r\n      let selectACList = this._reportFilterService.VoucherRegisterObj.VoucherRegister_MultipleVoucher.filter(vcList => vcList.VOUCHER_ID == this._reportFilterService.VoucherRegisterObj.VTYPE )\r\n         console.log('selectdAclist', selectACList)\r\n      \r\n      if (\r\n          this._reportFilterService.VoucherRegisterObj.VTYPE  === \"\" ||\r\n          this._reportFilterService.VoucherRegisterObj.VTYPE  === null ||\r\n          this._reportFilterService.VoucherRegisterObj.VTYPE  === undefined\r\n        ) {\r\n            return;\r\n        }\r\n\r\n        if (selectACList.length === 0) {\r\n          this._reportFilterService.VoucherRegisterObj.VoucherRegister_MultipleVoucher.push({ VOUCHER_ID: this._reportFilterService.VoucherRegisterObj.VTYPE , VOUCHER_NAME: this._reportFilterService.VoucherRegisterObj.VoucherRegister_VTYPENAME })\r\n          \r\n        }\r\n    }\r\n\r\n    deleteVoucher(index){\r\n      this._reportFilterService.VoucherRegisterObj.VoucherRegister_MultipleVoucher.splice(index, 1);\r\n        this._reportFilterService.SelectedVouchers='';\r\n    }\r\n\r\n    onClikcAccountEnter(event){\r\n        this.genericGridACListParty.show();\r\n    }\r\n\r\n    dropListItem = (keyword: any): Observable<Array<any>> => {\r\n        return new Observable((observer: Subscriber<Array<any>>) => {\r\n            this.masterService.getAllAccountList().map(data => {\r\n                this.result = data.result;\r\n                return this.result.filter(ac => ac.ACNAME.toUpperCase().indexOf(keyword.toUpperCase()) > -1);\r\n            }\r\n            ).subscribe(res => { observer.next(res); })\r\n        }).share();\r\n    }\r\n    onEnterAcnameChange(event){\r\n\r\n    }\r\n    itemChanged(value:any){\r\n        if (typeof (value) === \"object\") {\r\n            this._reportFilterService.VoucherRegisterObj.VoucherRegister_ACCNAME = value.ACNAME;\r\n            this._reportFilterService.VoucherRegisterObj.VoucherRegister_ACID = value.ACID;\r\n\r\n        }\r\n    }\r\n\r\n\r\n\r\n    public DialogClosedResult(res) {\r\n\r\n      let multipleVouchers = [];\r\n      // let SelectedGroupACC = '';\r\n      this._reportFilterService.SelectedVouchers='';\r\n\r\n      if (this._reportFilterService.VoucherRegisterObj.VoucherRegister_MultipleVoucher === undefined ||this._reportFilterService.VoucherRegisterObj.VoucherRegister_MultipleVoucher === null || (this._reportFilterService.VoucherRegisterObj.VoucherRegister_MultipleVoucher && this._reportFilterService.VoucherRegisterObj.VoucherRegister_MultipleVoucher.length==0)) {\r\n        this._reportFilterService.SelectedVouchers = this._reportFilterService.VoucherRegisterObj.VTYPE;\r\n    } else {\r\n        if (this._reportFilterService.VoucherRegisterObj.VoucherRegister_MultipleVoucher.length != 0) {\r\n            this._reportFilterService.VoucherRegisterObj.VoucherRegister_MultipleVoucher.forEach(vcList => {\r\n              multipleVouchers.push(vcList.VOUCHER_ID)\r\n               \r\n            });\r\n            this._reportFilterService.SelectedVouchers += `${multipleVouchers},`\r\n           \r\n        } else {\r\n            this._reportFilterService.SelectedVouchers = '%';\r\n        }\r\n    }\r\n        this._reportFilterService.VoucherRegisterObj.VoucherRegister_DIV = (this._reportFilterService.VoucherRegisterObj.VoucherRegister_DIV== null || this._reportFilterService.VoucherRegisterObj.VoucherRegister_DIV == \"\") ? \"%\" : this._reportFilterService.VoucherRegisterObj.VoucherRegister_DIV;\r\n\r\n       let multipleReportFormateName = '';\r\n       if(this._reportFilterService.VoucherRegisterObj.REPORT_TYPE == 0){\r\n           multipleReportFormateName = 'vat register report'\r\n       }else{\r\n           multipleReportFormateName = 'vat register report_1'\r\n       }\r\n\r\n       if(this._reportFilterService.VoucherRegisterObj.FROM_VNO == null ||\r\n          this._reportFilterService.VoucherRegisterObj.FROM_VNO == \"\" ||\r\n          this._reportFilterService.VoucherRegisterObj.FROM_VNO === undefined\r\n        ){\r\n            this._reportFilterService.VoucherRegisterObj.FROM_VNO = 0;\r\n        }\r\n\r\n        if(this._reportFilterService.VoucherRegisterObj.TO_VNO == null ||\r\n            this._reportFilterService.VoucherRegisterObj.TO_VNO == \"\" ||\r\n            this._reportFilterService.VoucherRegisterObj.TO_VNO === undefined\r\n          ){\r\n              this._reportFilterService.VoucherRegisterObj.TO_VNO = 0;\r\n          }\r\n\r\n          if(this._reportFilterService.VoucherRegisterObj.REPORTMODEVR == 0){\r\n            this._reportFilterService.VoucherRegisterObj.FROM_VNO = 0;\r\n            this._reportFilterService.VoucherRegisterObj.TO_VNO = 0;\r\n          }\r\n\r\n          if (this._reportFilterService.VoucherRegisterObj.VoucherRegister_DIV && this._reportFilterService.VoucherRegisterObj.VoucherRegister_DIV == '%') {\r\n            this._reportFilterService.VoucherRegisterObj.VoucherRegister_DIVISIONNAME = 'All';\r\n          }else if( this._reportFilterService.VoucherRegisterObj.VoucherRegister_DIV && this._reportFilterService.VoucherRegisterObj.VoucherRegister_DIV!= '%'){\r\n            let abc = this.division.filter(x=>x.INITIAL == this._reportFilterService.VoucherRegisterObj.VoucherRegister_DIV);\r\n              if(abc && abc.length>0 && abc[0]){\r\n                this._reportFilterService.VoucherRegisterObj.VoucherRegister_DIVISIONNAME = abc[0].NAME;\r\n              }else{\r\n                this._reportFilterService.VoucherRegisterObj.VoucherRegister_DIVISIONNAME = '';\r\n              }\r\n          }else{\r\n            this._reportFilterService.VoucherRegisterObj.VoucherRegister_DIVISIONNAME = '';\r\n          }\r\n    \r\n          if (this._reportFilterService.VoucherRegisterObj.CCENTER && this._reportFilterService.VoucherRegisterObj.CCENTER == '%') {\r\n            this._reportFilterService.VoucherRegisterObj.VoucherRegister_COSTCENTERDISPLAYNAME = 'All';\r\n          }\r\n          else if (this._reportFilterService.VoucherRegisterObj.CCENTER != '%') {\r\n            let abc = this.CostcenterList.filter(x=>x.CCID == this._reportFilterService.VoucherRegisterObj.CCENTER);\r\n            if(abc && abc.length>0 && abc[0]){\r\n              this._reportFilterService.VoucherRegisterObj.VoucherRegister_COSTCENTERDISPLAYNAME = abc[0].COSTCENTERNAME;\r\n            }else{\r\n              this._reportFilterService.VoucherRegisterObj.VoucherRegister_COSTCENTERDISPLAYNAME = '';\r\n            }\r\n          } else {\r\n            this._reportFilterService.VoucherRegisterObj.VoucherRegister_COSTCENTERDISPLAYNAME = '';\r\n          }\r\n\r\n          if (this._reportFilterService.VoucherRegisterObj.VTYPE && this._reportFilterService.VoucherRegisterObj.VTYPE == '%') {\r\n            this._reportFilterService.VoucherRegisterObj.VoucherRegister_VTYPEDISPLAYNAME = 'All';\r\n          }else if( this._reportFilterService.VoucherRegisterObj.VTYPE && this._reportFilterService.VoucherRegisterObj.VTYPE!= '%'){\r\n            if(this._reportFilterService.VoucherRegisterObj.VoucherRegister_MultipleVoucher.length==0){ \r\n            let abc = this.voucherTypeList.filter(x=>x.VOUCHER_ID == this._reportFilterService.VoucherRegisterObj.VTYPE);\r\n              if(abc && abc.length>0 && abc[0]){\r\n                this._reportFilterService.VoucherRegisterObj.VoucherRegister_VTYPEDISPLAYNAME = abc[0].VOUCHER_NAME;\r\n              }else{\r\n                this._reportFilterService.VoucherRegisterObj.VoucherRegister_VTYPEDISPLAYNAME = '';\r\n              }\r\n          }else{\r\n            this._reportFilterService.VoucherRegisterObj.VoucherRegister_VTYPEDISPLAYNAME = '';\r\n          }\r\n        }else{\r\n          this._reportFilterService.VoucherRegisterObj.VoucherRegister_VTYPEDISPLAYNAME = '';\r\n\r\n        }\r\n\r\n\r\n          if(res == \"ok\"){\r\n          this._reportFilterService.VoucherRegisterObj.assignPrevioiusDate = true;\r\n          let routepaths = this.arouter.url.split('/');\r\n          let activeurlpath2;\r\n              if(routepaths&& routepaths.length){\r\n                activeurlpath2=routepaths[routepaths.length-1]\r\n              }\r\n\r\n              if(this._reportFilterService.VoucherReg_loadedTimes == 0){\r\n                this._reportFilterService.previouslyLoadedReportList.push(\r\n                    {reportname: 'Voucher Register Report',\r\n                    activeurlpath: this.arouter.url,\r\n                    activerurlpath2: activeurlpath2,\r\n                    instanceWiseRepName:this.instanceWiseRepName +this._reportFilterService.VoucherReg_loadedTimes,\r\n                });\r\n            }else{\r\n                this._reportFilterService.previouslyLoadedReportList.push(\r\n                    {reportname: 'Voucher Register Report'+'_'+this._reportFilterService.VoucherReg_loadedTimes,\r\n                    activeurlpath: this.arouter.url,\r\n                    activerurlpath2: activeurlpath2,\r\n                    instanceWiseRepName:this.instanceWiseRepName +this._reportFilterService.VoucherReg_loadedTimes,\r\n                });\r\n            }\r\n\r\n          }\r\n\r\n          if(this._reportFilterService.VoucherRegisterObj.VoucherRegister_ACCNAME == ''){\r\n            this._reportFilterService.VoucherRegisterObj.VoucherRegister_ACID ='%';\r\n          }\r\n\r\n        this.reportdataEmit.emit({\r\n            status: res, data: {\r\n                reportname: multipleReportFormateName,\r\n                REPORTDISPLAYNAME : 'Voucher Register',\r\n                instanceWiseRepName:this.instanceWiseRepName+this._reportFilterService.VoucherReg_loadedTimes,\r\n                reportparam: {\r\n                  VTYPEDISPLAYNAME: this._reportFilterService.VoucherRegisterObj.VoucherRegister_VTYPEDISPLAYNAME?this._reportFilterService.VoucherRegisterObj.VoucherRegister_VTYPEDISPLAYNAME:'',\r\n                    DATE1: this._reportFilterService.VoucherRegisterObj.VoucherRegister_DATE1,\r\n                    DATE2: this._reportFilterService.VoucherRegisterObj.VoucherRegister_DATE2,\r\n                    BSDATE1: this._reportFilterService.VoucherRegisterObj.VoucherRegister_BSDATE1,\r\n                    BSDATE2: this._reportFilterService.VoucherRegisterObj.VoucherRegister_BSDATE2,\r\n                    DIV: this._reportFilterService.VoucherRegisterObj.VoucherRegister_DIV,\r\n                    PHISCALID: this.masterService.PhiscalObj.PhiscalID,\r\n                    COMID: this.masterService.userProfile.CompanyInfo.COMPANYID,\r\n                    CostCenter: this._reportFilterService.VoucherRegisterObj.CCENTER,\r\n                    REPORT_MODE: this._reportFilterService.VoucherRegisterObj.REPORTMODEVR,\r\n                    FROM_VNO : this._reportFilterService.VoucherRegisterObj.FROM_VNO,\r\n                    TO_VNO : this._reportFilterService.VoucherRegisterObj.TO_VNO,\r\n                    VTYPE : this._reportFilterService.SelectedVouchers?this._reportFilterService.SelectedVouchers:'%',\r\n                    // VTYPE : this._reportFilterService.VoucherRegisterObj.VTYPE?this._reportFilterService.VoucherRegisterObj.VTYPE:'%',\r\n                    REPORT_TYPE: this._reportFilterService.VoucherRegisterObj.REPORT_TYPE,\r\n                    USER  : this._reportFilterService.VoucherRegisterObj.USER,\r\n                    ACID : this._reportFilterService.VoucherRegisterObj.VoucherRegister_ACID,\r\n                    ACNAME:this._reportFilterService.VoucherRegisterObj.VoucherRegister_ACCNAME,\r\n                    DIVISIONNAME : this._reportFilterService.VoucherRegisterObj.VoucherRegister_DIVISIONNAME ? this._reportFilterService.VoucherRegisterObj.VoucherRegister_DIVISIONNAME : '',\r\n                    COSTCENTERDISPLAYNAME: this._reportFilterService.VoucherRegisterObj.VoucherRegister_COSTCENTERDISPLAYNAME?this._reportFilterService.VoucherRegisterObj.VoucherRegister_COSTCENTERDISPLAYNAME:'',\r\n                    ACCOUNTDISPLAYNAME: this._reportFilterService.VoucherRegisterObj.VoucherRegister_ACCNAME?this._reportFilterService.VoucherRegisterObj.VoucherRegister_ACCNAME:'',\r\n                    USERDISPLAYNAME: this._reportFilterService.VoucherRegisterObj.USER?this._reportFilterService.VoucherRegisterObj.USER:''\r\n                }\r\n            }\r\n        });\r\n\r\n        if(res == \"ok\"){\r\n            this._reportFilterService.VoucherReg_loadedTimes = this._reportFilterService.VoucherReg_loadedTimes+1;\r\n        }\r\n    }\r\n\r\n\r\n    AccountEnterClicked() {\r\n        this.gridPopupSettingsForAccountList = this.masterService.getGenericGridPopUpSettings('AllAcountList');\r\n        this.genericGridAccountList.show();\r\n    }\r\n\r\n    dblClickAccountSelect(account) {\r\n        this._reportFilterService.VoucherRegisterObj.VoucherRegister_ACID  = account.ACID;\r\n        this._reportFilterService.VoucherRegisterObj.VoucherRegister_ACCNAME = account.ACNAME;\r\n    }\r\n\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/pages/ReportDialogs/voucher-register-report/voucher-register-report.component.ts","import { RouterModule, Routes } from '@angular/router';\r\nimport { CanActivateTeam } from \"../../common/services/permission/guard.service\";\r\nimport { ReportsComponent } from './Reports.component';\r\nimport { ReportMain } from './components/ReportMain/ReportMain';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        component: ReportsComponent,\r\n        children: [\r\n            {path:'reportmain',component:ReportMain,canActivate: [CanActivateTeam]},\r\n            {path: 'accountpayablereport',component:ReportMain,canActivate:[CanActivateTeam]},  \r\n            {path: 'accountreceivablereport',component:ReportMain,canActivate:[CanActivateTeam]},  \r\n            {path: 'gstsalessummary',component:ReportMain,canActivate:[CanActivateTeam]},  \r\n            {path: 'gstpurchasesummary',component:ReportMain,canActivate:[CanActivateTeam]},            \r\n            {path: 'agingpayable',component:ReportMain,canActivate:[CanActivateTeam]},            \r\n            {path: 'agingreceivable',component:ReportMain,canActivate:[CanActivateTeam]}, \r\n            { path: 'purchasebookreport', component: ReportMain, canActivate: [CanActivateTeam] },          \r\n            { path: 'cashbookreport', component: ReportMain, canActivate: [CanActivateTeam] }, \r\n            { path: 'salesbookreport', component: ReportMain, canActivate: [CanActivateTeam] }, \r\n            { path: 'journalbook', component: ReportMain, canActivate: [CanActivateTeam] }, \r\n            { path: 'duevoucherreport', component: ReportMain, canActivate: [CanActivateTeam] }, \r\n            { path: 'debtorsreport', component: ReportMain, canActivate: [CanActivateTeam] }, \r\n            { path: 'creditorsreport', component: ReportMain, canActivate: [CanActivateTeam] }, \r\n            { path: 'PartyLedger', component: ReportMain, canActivate: [CanActivateTeam] }, \r\n            { path: 'debtorsagingreport', component: ReportMain, canActivate: [CanActivateTeam] }, \r\n            { path: 'creditorsagingreport', component: ReportMain, canActivate: [CanActivateTeam] }, \r\n            { path: 'debtorsoutstandingreport', component: ReportMain, canActivate: [CanActivateTeam] },\r\n            { path: 'creditorsoutstandingreport', component: ReportMain, canActivate: [CanActivateTeam] },\r\n            { path: 'summaryledgerreport', component: ReportMain, canActivate: [CanActivateTeam] }, \r\n            { path: 'accountledgerreport', component: ReportMain, canActivate: [CanActivateTeam] }, \r\n            { path: 'summarypartyledger', component: ReportMain, canActivate: [CanActivateTeam] }, \r\n            { path: 'partyledgerreport', component: ReportMain, canActivate: [CanActivateTeam] }, \r\n            { path: 'voucher-regeister-report',component: ReportMain, canActivate:[CanActivateTeam] },\r\n            { path: 'cash-bank-book-report',component: ReportMain, canActivate:[CanActivateTeam] },\r\n            { path: 'day-book-report',component: ReportMain, canActivate:[CanActivateTeam] },\r\n            { path: 'sub-ledger-report',component: ReportMain, canActivate:[CanActivateTeam] },\r\n            { path: 'sub-ledger-report-acbase',component: ReportMain, canActivate:[CanActivateTeam] },\r\n            { path: 'trial-balance-report',component: ReportMain, canActivate:[CanActivateTeam] },\r\n            // { path: 'actual-vs-budget-report',component: ReportMain, canActivate:[CanActivateTeam] },\r\n            { path: 'additionalcost-itemwise-report',component: ReportMain, canActivate:[CanActivateTeam] },\r\n            { path: 'additionalcost-voucherwise-report',component: ReportMain, canActivate:[CanActivateTeam] },\r\n            { path: 'salesreturnsummary-report',component: ReportMain, canActivate:[CanActivateTeam]},\r\n            { path: 'salesreturnsummaryretailer-report',component: ReportMain, canActivate:[CanActivateTeam]},\r\n            { path: 'salesreturn-reportdetail',component: ReportMain, canActivate:[CanActivateTeam]},\r\n            { path: 'stockabc-analysis-reportdms',component: ReportMain, canActivate:[CanActivateTeam]},\r\n            { path: 'stockvaluation-reportdms', component: ReportMain, canActivate:[CanActivateTeam]},\r\n            { path: 'stockledger-reportdms',component: ReportMain, canActivate:[CanActivateTeam]},\r\n            { path: 'stocksummary-reportdms',component: ReportMain, canActivate:[CanActivateTeam]},\r\n            { path: 'currentstock-warehousewise-reportdms',component: ReportMain, canActivate:[CanActivateTeam]},\r\n            { path: 'consolidated-trialbalance-report',component: ReportMain, canActivate:[CanActivateTeam]},\r\n            { path: 'actual-vs-budget-report',component: ReportMain, canActivate:[CanActivateTeam]},\r\n            { path: 'profit-loss-report',component: ReportMain, canActivate:[CanActivateTeam]},\r\n            { path: 'balance-sheet-report',component: ReportMain, canActivate:[CanActivateTeam]},\r\n            { path: 'tds-report',component: ReportMain, canActivate:[CanActivateTeam]},\r\n            { path: 'consolidated-balance-sheet-report',component: ReportMain, canActivate:[CanActivateTeam]},\r\n            { path: 'consolidated-profit-loss-report',component: ReportMain, canActivate:[CanActivateTeam]},\r\n            { path: 'bill-tracking-report',component: ReportMain, canActivate:[CanActivateTeam]},\r\n            { path: 'creditorsbill-tracking-report',component: ReportMain, canActivate:[CanActivateTeam]},\r\n            { path: 'postdated-chequevoucher-report',component: ReportMain, canActivate:[CanActivateTeam]},\r\n            { path: 'monthly-sales-payment-report',component: ReportMain, canActivate:[CanActivateTeam]},\r\n            { path: 'local-purchase-cost-allocation-report',component: ReportMain, canActivate:[CanActivateTeam]},\r\n            { path: 'incometax-depreciation-report',component: ReportMain, canActivate:[CanActivateTeam]},\r\n            { path: 'companynorms-depreciation-report',component: ReportMain, canActivate:[CanActivateTeam]},\r\n            { path: 'faarasset-depreciation-report',component: ReportMain, canActivate:[CanActivateTeam]},\r\n            { path: 'cash-collection-voucher-report',component: ReportMain, canActivate:[CanActivateTeam]},\r\n            \r\n\r\n\r\n\r\n\r\n\r\n        ]\r\n    }\r\n];\r\n\r\nexport const routing = RouterModule.forChild(routes);\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/pages/Reports/Reports.routing.ts","import {ChangeDetectorRef, Component, ElementRef, Inject, Input, OnInit, ViewChild} from \"@angular/core\";\r\nimport {isNullOrUndefined} from \"util\";\r\nimport { ContextMenuView, MenuItem } from \"./context-menu-data\";\r\n\r\n@Component({\r\n    selector: \"app-contextmenu\",\r\n    template: require('./context-menu.component.html'),\r\n    styles: [require('./context-menu.component.scss')]\r\n})\r\nexport class ContextmenuComponent implements OnInit {\r\n\r\n    private static IDLE_TIMEOUT_MS = 20000;\r\n    private static MOUSE_OUT_TIMEOUT_MS = 20000;\r\n    @Input() data: ContextMenuView;\r\n    @ViewChild(\"modalcontainer\") container: ElementRef;\r\n    containerPosY = 0;\r\n    containerPosX = 0;\r\n    isArrowUpward = true;\r\n    private autoHideTimer: any;\r\n\r\n    constructor(@Inject(ChangeDetectorRef) private changeDetectorRef: ChangeDetectorRef) {\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.changeDetectorRef.detectChanges();\r\n        this.prepareContextMenu();\r\n    }\r\n\r\n    public hideContextMenuWithTimer(miliseconds) {\r\n        if (isNullOrUndefined(miliseconds)) {\r\n            miliseconds = ContextmenuComponent.MOUSE_OUT_TIMEOUT_MS;\r\n        }\r\n        this.autoHideTimer = setTimeout(() => {\r\n            this.data.show = false;\r\n        }, miliseconds);\r\n    }\r\n\r\n    public clearContextMenuHideTimer() {\r\n        clearTimeout(this.autoHideTimer);\r\n    }\r\n\r\n    isValueNullOrUndefined(value) {\r\n        if (isNullOrUndefined(value)) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    callSubscriber(item: MenuItem) {\r\n        item.subject.next(item);\r\n    }\r\n\r\n    private prepareContextMenu() {\r\n        try {\r\n            this.validateData();\r\n            this.buildDisplayPositions();\r\n        } catch (e) {\r\n            this.hideContextMenuWithTimer(0);\r\n            console.error(\"unable to prepareContextMenu the context menu due to following exception/error: \" + e);\r\n        } finally {\r\n            if (this.data.show) {\r\n                this.hideContextMenuWithTimer(ContextmenuComponent.IDLE_TIMEOUT_MS);\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    private buildDisplayPositions() {\r\n        const containerElement: any = this.container.nativeElement;\r\n        let height = 0;\r\n        if (!isNullOrUndefined(containerElement)) {\r\n            height = containerElement.offsetHeight;\r\n        }\r\n\r\n        if (height > 0) {\r\n            this.buildTopPosition(height);\r\n            this.buildLeftPosition();\r\n        }\r\n    }\r\n\r\n    private validateData() {\r\n        if (isNullOrUndefined(this.data)) {\r\n            throw new TypeError(\"context menu info can not be null or undefined\");\r\n        }\r\n\r\n        if (isNullOrUndefined(this.data.mouseEvent)) {\r\n            throw new TypeError(\"context menu should be associated with mouseEvent e.g. mouse left click\");\r\n        }\r\n\r\n        if (isNullOrUndefined(this.data.menuItems)) {\r\n            throw new TypeError(\"action item is missing\");\r\n        }\r\n    }\r\n\r\n    private buildLeftPosition() {\r\n        const clickedPosX = this.data.mouseEvent.clientX;\r\n        this.containerPosX = clickedPosX;\r\n    }\r\n\r\n    private buildTopPosition(contextMenuHeight: number) {\r\n        const clickedElementHeight = this.data.mouseEvent.currentTarget.offsetHeight;\r\n        const pageHeight = window.innerHeight;\r\n        const clickedPosY = this.data.mouseEvent.clientY;\r\n        const sum = contextMenuHeight + clickedPosY + clickedElementHeight;\r\n        let top =-10;\r\n        if (sum < pageHeight) {\r\n            top = clickedPosY + clickedElementHeight;\r\n        } else {\r\n            top = clickedPosY - (contextMenuHeight + clickedElementHeight);\r\n            this.isArrowUpward = false;\r\n        }\r\n        if (top < 0) {\r\n            top = 0;\r\n        }\r\n        this.containerPosY = top;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/pages/Reports/context-menu/context-menu.component.ts","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/inherits/inherits_browser.js\n// module id = 1662\n// module chunks = 0","module.exports = \"li {\\n  list-style: none; }\\n\\n.modal-container {\\n  left: 40px;\\n  position: absolute;\\n  z-index: 100000; }\\n  .modal-container .modal-tip {\\n    content: '';\\n    display: block;\\n    position: absolute;\\n    left: 20px;\\n    width: 8px;\\n    height: 4px; }\\n  .modal-container .modal-tip-upward-arrow {\\n    top: -4px; }\\n  .modal-container .modal-tip-downward-arrow {\\n    bottom: -4px;\\n    top: auto; }\\n  .modal-container .left-container {\\n    float: left;\\n    padding: 15px 15px;\\n    min-width: 110px;\\n    margin-right: 5px;\\n    margin-bottom: 0;\\n    box-shadow: 1px 1px 2px #999999;\\n    border: 1px solid #999999;\\n    background-color: #FFFFFF; }\\n    .modal-container .left-container li {\\n      padding: 3px 0; }\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/Reports/context-menu/context-menu.component.scss\n// module id = 1682\n// module chunks = 0","module.exports = \"<style>\\r\\n    .action-btn {\\r\\n        width: 80%;\\r\\n        height: 80%;\\r\\n        display: block;\\r\\n        margin: 0 auto;\\r\\n        background-color: inherit;\\r\\n        border: none;\\r\\n    }\\r\\n    .input-text{\\r\\n        width : 100%;\\r\\n        /* height: 30px !important; */\\r\\n        font-weight: bold;\\r\\n    }\\r\\n    .td-class{\\r\\n        border: none !important;\\r\\n    }\\r\\n    .date-input{\\r\\n        width: 93%;\\r\\n        font-size: 12px !important;\\r\\n        height: 30px !important;\\r\\n    }\\r\\n      @media screen and (max-width:991px) {\\r\\n         .report-container{\\r\\n           width: 100% !important;\\r\\n    }\\r\\n    .report-height{\\r\\n        height:52vh !important; \\r\\n        overflow:auto;\\r\\n    }\\r\\n    }\\r\\n    @media screen and (max-width:767px) {\\r\\n        .smallBoldLabel{\\r\\n            width: auto !important;\\r\\n        }\\r\\n          .report-container{\\r\\n           width: 85% !important;\\r\\n    }\\r\\n        \\r\\n    }\\r\\n</style>\\r\\n<div class=\\\"container report-container\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <!-- Filter Starts -->\\r\\n        <div class=\\\"col-12 col-md-12\\\">\\r\\n            <div style=\\\"background-color : #ffffff; width: 100%;\\\">\\r\\n                <div class=\\\"row\\\">\\r\\n                    <div class=\\\"modal-header\\\" style=\\\"border:0px;\\\">\\r\\n                        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\"\\r\\n                            (click)=\\\"closeReportBox()\\\">&times;</button>\\r\\n                        <h4 class=\\\"modal-title\\\" style=\\\"padding-left: 3%;\\\">{{this.reportNameFormatWise}}</h4>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-md-12 report-height\\\" style=\\\"padding-top: 2%; height:71vh; overflow:auto; \\\">\\r\\n                        <div class=\\\"col-md-6\\\">\\r\\n                            <fieldset>\\r\\n                                <legend style=\\\"font-size:11px;font-weight: bold; width:auto;margin-bottom: -4px;\\\">Date Range Selection :</legend>\\r\\n                                <table>\\r\\n                                    <tr>\\r\\n                                        <td class=\\\"td-class\\\"><label class=\\\"smallBoldLabel\\\">From:(AD)</label></td>\\r\\n                                        <td class=\\\"td-class\\\"><label class=\\\"smallBoldLabel\\\">To:(AD)</label></td>\\r\\n                                    </tr>\\r\\n                                    <tr>\\r\\n                                        <td class=\\\"td-class\\\">\\r\\n                                                <input type=\\\"date\\\" class=\\\"date-input form-control\\\"\\r\\n                                                    placeholder=\\\"Year Start Date\\\"\\r\\n                                                    [(ngModel)]=\\\"_reportFilterService.AccoutLedgerObj.AccLedger_DATE1\\\"\\r\\n                                                    (change)=\\\"changeEntryDate($event.target.value,'AD')\\\" max=\\\"{{masterService.date1 | date:'yyyy-MM-dd'}}\\\" min=\\\"{{masterService.date2 | date:'yyyy-MM-dd'}}\\\">\\r\\n                                        </td>\\r\\n                                        <td class=\\\"td-class\\\">\\r\\n                                                <input type=\\\"date\\\" class=\\\"date-input form-control\\\"\\r\\n                                                    placeholder=\\\"Year Start Date\\\"\\r\\n                                                    [(ngModel)]=\\\"_reportFilterService.AccoutLedgerObj.AccLedger_DATE2\\\"\\r\\n                                                    (change)=\\\"changeEndDate($event.target.value,'AD')\\\" max=\\\"{{masterService.date1 | date:'yyyy-MM-dd'}}\\\" min=\\\"{{masterService.date2 | date:'yyyy-MM-dd'}}\\\">\\r\\n                                        </td>\\r\\n                                    </tr>\\r\\n                                    <tr>\\r\\n                                        <td class=\\\"td-class\\\">\\r\\n                                          <nepali-date-picker name=\\\"nepaliDateFrom\\\" [id]=\\\"'nepaliDatefrom'\\\"\\r\\n                                            (change)=\\\"changeEntryDate($event.detail.value,'BS')\\\"\\r\\n                                            [label]=\\\"'From'\\\"\\r\\n                                            [(ngModel)]=\\\"_reportFilterService.AccoutLedgerObj.AccLedger_BSDATE1\\\">\\r\\n                                          </nepali-date-picker>\\r\\n                                                <!-- <input id=\\\"nepaliDate\\\"\\r\\n                                                    style=\\\"text-align:center;\\\"\\r\\n                                                    class=\\\"nepali-calendar ndp-nepali-calendar date-input form-control\\\"\\r\\n                                                    [(ngModel)]=\\\"_reportFilterService.AccoutLedgerObj.AccLedger_BSDATE1\\\" type=\\\"text\\\"\\r\\n                                                    (change)=\\\"changeEntryDate($event.target.value,'BS')\\\"\\r\\n                                                    placeholder=\\\"yyyy-mm-dd\\\" />                             -->\\r\\n                                        </td>\\r\\n                                        <td class=\\\"td-class\\\">\\r\\n                                          <nepali-date-picker name=\\\"nepaliDateFrom\\\" [id]=\\\"'nepaliDateTo'\\\"\\r\\n                                            (change)=\\\"changeEndDate($event.detail.value,'BS')\\\"\\r\\n                                            [label]=\\\"'To'\\\"\\r\\n                                            [(ngModel)]=\\\"_reportFilterService.AccoutLedgerObj.AccLedger_BSDATE2\\\">\\r\\n                                          </nepali-date-picker>\\r\\n                                                <!-- <input id=\\\"nepaliDate\\\"\\r\\n                                                style=\\\"text-align:center;\\\"\\r\\n                                                    class=\\\"nepali-calendar ndp-nepali-calendar date-input form-control\\\"\\r\\n                                                    [(ngModel)]=\\\"_reportFilterService.AccoutLedgerObj.AccLedger_BSDATE2\\\" type=\\\"text\\\"\\r\\n                                                    (change)=\\\"changeEndDate($event.target.value,'BS')\\\"\\r\\n                                                    placeholder=\\\"yyyy-mm-dd\\\" /> -->\\r\\n                                        </td>\\r\\n                                    </tr>\\r\\n                                </table>\\r\\n                            </fieldset>\\r\\n\\r\\n                            <fieldset>\\r\\n                                <legend>Division Selection:</legend>\\r\\n                                <select [(ngModel)]=\\\"_reportFilterService.AccoutLedgerObj.AccLedger_DIV\\\" style=\\\"height: 30px !important;\\\"\\r\\n                                class=\\\"form-control input-text\\\" >\\r\\n                                    <option value=\\\"%\\\"  *ngIf=\\\"masterService.userSetting.userwisedivision==0 || masterService.showAll\\\">ALL</option>\\r\\n                                    <option *ngFor=\\\"let div of division\\\" value=\\\"{{ div.INITIAL }}\\\">\\r\\n                                        {{ div.NAME }}\\r\\n                                    </option>\\r\\n                                </select>\\r\\n                            </fieldset>\\r\\n                            <fieldset *ngIf=\\\"_reportFilterService.AccoutLedgerObj.AccLedger_HIDECOSTCENTER == 0\\\" >\\r\\n                                <legend>Cost Center:</legend>\\r\\n                                <select [(ngModel)]=\\\"_reportFilterService.AccoutLedgerObj.AccLedger_CostCenter\\\"\\r\\n                                style=\\\"height: 30px !important;\\\" class=\\\"form-control input-text\\\">\\r\\n                                    <option value=\\\"%\\\"> </option>\\r\\n                                    <option *ngFor=\\\"let i of CostcenterList\\\" value={{i.CCID}}>{{i.COSTCENTERNAME}}\\r\\n                                    </option>\\r\\n                                </select>\\r\\n                            </fieldset>\\r\\n\\r\\n                            <fieldset>\\r\\n                                <legend>Report Type:</legend>\\r\\n                                <label class=\\\"smallBoldLabel\\\" style=\\\"padding-right:15px;\\\"><input type=\\\"radio\\\" name=\\\"BalViewOpt\\\"\\r\\n                                      [(ngModel)]=\\\"_reportFilterService.AccoutLedgerObj.AccLedger_SUMMARYREPORT\\\" value=0 >&nbsp;Detail Ledger\\r\\n                                      Report</label>\\r\\n                                <label class=\\\"smallBoldLabel\\\"><input type=\\\"radio\\\" name=\\\"BalViewOpt\\\"\\r\\n                                      [(ngModel)]=\\\"_reportFilterService.AccoutLedgerObj.AccLedger_SUMMARYREPORT\\\" value=1 >&nbsp;Summary Ledger Report</label>\\r\\n                             </fieldset>\\r\\n\\r\\n                            <!-- <div class=\\\"checkbox\\\" style=\\\"padding-top:5px;width:200px;\\\">\\r\\n                                <label class=\\\"smallBoldLabel\\\">\\r\\n                                    <input type=\\\"checkbox\\\" [(ngModel)]=\\\"_reportFilterService.AccoutLedgerObj.SHOWNDATE\\\">\\r\\n                                    Show BS Date In Report\\r\\n                                </label>\\r\\n                            </div> -->\\r\\n\\r\\n                            <!-- <div class=\\\"checkbox\\\" style=\\\"padding-top:5px;width:200px;\\\">\\r\\n                                <label class=\\\"smallBoldLabel\\\">\\r\\n                                    <input type=\\\"checkbox\\\" [(ngModel)]=\\\"_reportFilterService.AccoutLedgerObj.IGNOREOPPOSITAC\\\">\\r\\n                                    Show Ledger Report in Summary\\r\\n                                </label>\\r\\n                            </div> -->\\r\\n                           <div style=\\\"display: flex; flex-wrap:wrap\\\">\\r\\n                                <div class=\\\"checkbox\\\" style=\\\"padding-top:5px;width:200px;\\\" *ngIf=\\\"_reportFilterService.AccoutLedgerObj.AccLedger_SUMMARYREPORT== 0\\\">\\r\\n                                    <label class=\\\"smallBoldLabel\\\" style=\\\"width: 203px; margin-left: 4px;\\\">\\r\\n                                        <input type=\\\"checkbox\\\" [(ngModel)]=\\\"_reportFilterService.AccoutLedgerObj.IGNOREOPPOSITAC\\\">\\r\\n                                        Hide Opposite A/C in Ledger Report\\r\\n                                    </label>\\r\\n                                </div>\\r\\n\\r\\n                                <div class=\\\"checkbox\\\" style=\\\"padding-top:5px;width:200px;\\\" *ngIf=\\\"_reportFilterService.AccoutLedgerObj.AccLedger_SUMMARYREPORT==0\\\">\\r\\n                                    <label class=\\\"smallBoldLabel\\\" style=\\\"width: 210px;\\\">\\r\\n                                        <input type=\\\"checkbox\\\" [(ngModel)]=\\\"_reportFilterService.AccoutLedgerObj.AccLedger_HIDENARATION\\\" style=\\\"margin-left: 5px;\\\"\\r\\n                                        (change)=\\\"$event.target.checked?(_reportFilterService.AccoutLedgerObj.AccLedger_HIDENARATION=1):(_reportFilterService.AccoutLedgerObj.AccLedger_HIDENARATION=0)\\\"\\r\\n                                        [checked]=\\\"_reportFilterService.AccoutLedgerObj.AccLedger_HIDENARATION == 1\\\">\\r\\n                                        Hide Narration In Ledger Report\\r\\n                                    </label>\\r\\n                                </div>\\r\\n                            </div>\\r\\n\\r\\n                            <div style=\\\"display: flex; flex-wrap:wrap\\\">\\r\\n                                <div class=\\\"checkbox\\\" style=\\\"padding-top:5px;width:200px;\\\" *ngIf=\\\"_reportFilterService.AccoutLedgerObj.AccLedger_SUMMARYREPORT== 1\\\">\\r\\n                                    <label class=\\\"smallBoldLabel\\\" style=\\\"width: 210px;\\\">\\r\\n                                        <input type=\\\"checkbox\\\" [(ngModel)]=\\\"_reportFilterService.AccoutLedgerObj.AccLedger_HIDEVOUCHERTYPE\\\" style=\\\"margin-left: 5px\\\"\\r\\n                                        (change)=\\\"$event.target.checked?(_reportFilterService.AccoutLedgerObj.AccLedger_HIDEVOUCHERTYPE=1):(_reportFilterService.AccoutLedgerObj.AccLedger_HIDEVOUCHERTYPE=0)\\\"\\r\\n                                [checked]=\\\"_reportFilterService.AccoutLedgerObj.AccLedger_HIDEVOUCHERTYPE == 1\\\">\\r\\n                                        Hide Voucher Type in Ledger Report\\r\\n                                    </label>\\r\\n                                </div>\\r\\n\\r\\n                                <div class=\\\"checkbox\\\" style=\\\"padding-top:5px;width:200px;\\\">\\r\\n                                    <label class=\\\"smallBoldLabel\\\" style=\\\"width:203px; margin-left: 4px;\\\" *ngIf=\\\"_reportFilterService.AccoutLedgerObj.AccLedger_SUMMARYREPORT==0\\\">\\r\\n                                        <input type=\\\"checkbox\\\" [(ngModel)]=\\\"_reportFilterService.AccoutLedgerObj.AccLedger_SHOWITEMDETAIL\\\"\\r\\n                                        (change)=\\\"$event.target.checked?(_reportFilterService.AccoutLedgerObj.AccLedger_SHOWITEMDETAIL=1):(_reportFilterService.AccoutLedgerObj.AccLedger_SHOWITEMDETAIL=0)\\\"\\r\\n                                [checked]=\\\"_reportFilterService.AccoutLedgerObj.AccLedger_SHOWITEMDETAIL == 1\\\" >\\r\\n                                        Show Item Detail Also\\r\\n                                    </label>\\r\\n                                </div>\\r\\n\\r\\n                                <div class=\\\"checkbox\\\" style=\\\"padding-top:5px;width:200px;\\\">\\r\\n                                    <label class=\\\"smallBoldLabel\\\" style=\\\"width:225px;\\\">\\r\\n                                        <input type=\\\"checkbox\\\" [(ngModel)]=\\\"_reportFilterService.AccoutLedgerObj.AccLedger_INCLUDEPOSTDATE\\\" style=\\\"margin-left: 5px;\\\"\\r\\n                                        (change)=\\\"$event.target.checked?(_reportFilterService.AccoutLedgerObj.AccLedger_INCLUDEPOSTDATE=1):(_reportFilterService.AccoutLedgerObj.AccLedger_INCLUDEPOSTDATE=0)\\\"\\r\\n                                [checked]=\\\"_reportFilterService.AccoutLedgerObj.AccLedger_INCLUDEPOSTDATE == 1\\\" >\\r\\n                                        Include Post Dated Transaction Also\\r\\n                                    </label>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div>\\r\\n                                <div class=\\\"checkbox\\\" style=\\\"padding-top:5px;width:200px;\\\">\\r\\n                                    <label class=\\\"smallBoldLabel\\\" style=\\\"width:225px; margin-left:4px;\\\">\\r\\n                                        <input type=\\\"checkbox\\\" [(ngModel)]=\\\"_reportFilterService.AccoutLedgerObj.AccLedger_HIDECOSTCENTER\\\"\\r\\n                                        (change)=\\\"$event.target.checked?(_reportFilterService.AccoutLedgerObj.AccLedger_HIDECOSTCENTER=1):(_reportFilterService.AccoutLedgerObj.AccLedger_HIDECOSTCENTER=0)\\\"\\r\\n                                [checked]=\\\"_reportFilterService.AccoutLedgerObj.AccLedger_HIDECOSTCENTER == 1\\\" >\\r\\n                                      Hide Cost Center\\r\\n                                    </label>\\r\\n                                </div>\\r\\n                            </div>\\r\\n\\r\\n                            \\r\\n                        \\r\\n\\r\\n\\r\\n                        </div>\\r\\n                        <!-- The One With Tree Part-->\\r\\n                        <div class=\\\"col-md-6 filter-part\\\">\\r\\n                            <fieldset>\\r\\n                                <legend>Account Selection :</legend>\\r\\n                                <input type=\\\"text\\\" style=\\\"font-weight: bold;\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"_reportFilterService.AccoutLedgerObj.AccLedger_ACCNAME\\\"\\r\\n                                    placeholder=\\\"Press Enter or Tab for Account List\\\" (keydown.Tab)=\\\"AccountEnterClicked($event)\\\"\\r\\n                                    (keydown.enter)=\\\"AccountEnterClicked($event)\\\">\\r\\n                            </fieldset>\\r\\n\\r\\n                            <fieldset>\\r\\n                                <legend><label class=\\\"smallBoldLabel\\\">\\r\\n                                        <input type=\\\"checkbox\\\" [(ngModel)]=\\\"_reportFilterService.AccoutLedgerObj.EnableCombineLedger\\\"\\r\\n                                            (change)=\\\"checkValueForCombine()\\\">\\r\\n                                        Show Combined Ledger</label></legend>\\r\\n                                <select [(ngModel)]=\\\"_reportFilterService.AccoutLedgerObj.AccLedger_ReportType\\\"\\r\\n                                    style=\\\"height: 30px !important;\\\" (change)=\\\"checkValue()\\\" class=\\\"form-control input-text\\\" [disabled]=\\\"_reportFilterService.AccoutLedgerObj.EnableCombineLedger == false || _reportFilterService.AccoutLedgerObj.EnableCombineLedger === undefined\\\">\\r\\n                                    <option value=6>ALL</option>\\r\\n                                    <option value=2>Multi Ledger Wise</option>\\r\\n                                    <!-- <option value=1>Area Wise</option> -->\\r\\n                                    <option value=4>Cost Center Wise</option>\\r\\n                                    <option value=5>Account Group Wise</option>\\r\\n                                </select>\\r\\n                            </fieldset>\\r\\n\\r\\n                            <div *ngIf=\\\"showLedgerTable\\\">\\r\\n                                <fieldset>\\r\\n                                    <legend><label class=\\\"smallBoldLabel\\\">&nbsp;Ledger Wise</label></legend>\\r\\n                                    <div>\\r\\n                                        <div class=\\\"col-md-10\\\">\\r\\n                                            <input type=\\\"text\\\" style=\\\"font-weight: bold;\\\" class=\\\"form-control\\\" [disabled]=\\\"_reportFilterService.AccoutLedgerObj.EnableCombineLedger == false || _reportFilterService.AccoutLedgerObj.EnableCombineLedger ===undefined\\\" [(ngModel)]=\\\"_reportFilterService.AccoutLedgerObj.multipleACNAME\\\"\\r\\n                                        placeholder=\\\"Press Enter or Tab for Account List\\\" (keydown.Tab)=\\\"MultipleAccountEnterClicked($event)\\\"\\r\\n                                        (keydown.enter)=\\\"MultipleAccountEnterClicked($event)\\\">\\r\\n\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col-md-2\\\">\\r\\n                                            <button type=\\\"button\\\" class=\\\"btn btn-info\\\"\\r\\n                                                (click)=\\\"addAccountToList()\\\" [disabled]=\\\"_reportFilterService.AccoutLedgerObj.EnableCombineLedger == false || _reportFilterService.AccoutLedgerObj.EnableCombineLedger ===undefined\\\">Add</button>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col-md-12\\\">\\r\\n                                            <table style=\\\"height:175px;\\\">\\r\\n                                                <tr class=\\\"smallBoldLabel\\\">\\r\\n                                                    <th style=\\\"width:3px;font-weight: bold;\\\">S.No.</th>\\r\\n                                                    <th style=\\\"width:10px;font-weight: bold;\\\">Account</th>\\r\\n                                                    <th style=\\\"width:4px;font-weight: bold;\\\">Action</th>\\r\\n                                                </tr>\\r\\n                                                <tr *ngFor=\\\"let data of _reportFilterService.AccoutLedgerObj.AccLedger_multipleAccounts;let i = index\\\"\\r\\n                                                    class=\\\"smallBoldLabel\\\">\\r\\n                                                    <td style=\\\"width:3px;\\\">{{ i + 1 }}</td>\\r\\n                                                    <td style=\\\"width:10px;\\\">{{data.ACNAME}}</td>\\r\\n                                                    <td style=\\\"width:4px;\\\">\\r\\n                                                        <button type=\\\"button\\\" class=\\\"action-btn\\\"\\r\\n                                                            (click)=\\\"deleteAccount(i)\\\">Delete</button>\\r\\n                                                    </td>\\r\\n                                                </tr>\\r\\n                                            </table>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n\\r\\n                                    <div class=\\\"checkbox\\\" style=\\\"padding-top:5px;width:200px;\\\">\\r\\n                                        <label class=\\\"smallBoldLabel\\\">\\r\\n                                            <input type=\\\"checkbox\\\" [(ngModel)]=\\\"_reportFilterService.AccoutLedgerObj.MERGEREPORT\\\" [disabled]=\\\"_reportFilterService.AccoutLedgerObj.EnableCombineLedger == false || _reportFilterService.AccoutLedgerObj.EnableCombineLedger ===undefined\\\">\\r\\n                                            Merge Combined Ledger\\r\\n                                        </label>\\r\\n                                    </div>\\r\\n                                </fieldset>\\r\\n                            </div>\\r\\n\\r\\n                            <div *ngIf=\\\"showAreaTable && showCombineLedgerList\\\">\\r\\n                                <area-list></area-list>\\r\\n                            </div>\\r\\n\\r\\n                            <div *ngIf=\\\"showCCtable\\\">\\r\\n                                <fieldset>\\r\\n                                    <legend><label class=\\\"smallBoldLabel\\\">&nbsp;Cost Center Wise</label></legend>\\r\\n                                    <div>\\r\\n                                        <div class=\\\"col-md-10\\\">\\r\\n                                            <select [(ngModel)]=\\\"_reportFilterService.AccoutLedgerObj.CCENTER\\\"\\r\\n                                                style=\\\"height: 30px !important;\\\" class=\\\"form-control input-text\\\" [disabled]=\\\"_reportFilterService.AccoutLedgerObj.EnableCombineLedger == false || _reportFilterService.AccoutLedgerObj.EnableCombineLedger ===undefined\\\">\\r\\n                                                <option *ngFor=\\\"let i of CostcenterList\\\" [ngValue]=\\\"i\\\">\\r\\n                                                    {{i.COSTCENTERNAME}}\\r\\n                                                </option>\\r\\n                                            </select>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col-md-2\\\">\\r\\n                                            <button type=\\\"button\\\" class=\\\"btn btn-info\\\" *ngIf=\\\"showMultipleCC\\\"\\r\\n                                                (click)=\\\"addCostcenterToList()\\\" [disabled]=\\\"_reportFilterService.AccoutLedgerObj.EnableCombineLedger == false || _reportFilterService.AccoutLedgerObj.EnableCombineLedger ===undefined\\\">Add</button>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col-md-12\\\" *ngIf=\\\"showMultipleCC\\\">\\r\\n                                            <table style=\\\"height:150px;\\\">\\r\\n                                                <tr class=\\\"smallBoldLabel\\\">\\r\\n                                                    <th style=\\\"width:3px;font-weight: bold;\\\">S.No.</th>\\r\\n                                                    <th style=\\\"width:10px;font-weight: bold;\\\">Cost Center</th>\\r\\n                                                    <th style=\\\"width:4px;font-weight: bold;\\\">Action</th>\\r\\n                                                </tr>\\r\\n                                                <tr *ngFor=\\\"let data of _reportFilterService.AccoutLedgerObj.AccLedger_multipleCostcenter;let i = index\\\"\\r\\n                                                    class=\\\"smallBoldLabel\\\">\\r\\n                                                    <td style=\\\"width:3px;\\\">{{ i + 1 }}</td>\\r\\n                                                    <td style=\\\"width:10px;\\\">{{data.COSTCENTERNAME}}</td>\\r\\n                                                    <td style=\\\"width:4px;\\\">\\r\\n                                                        <button type=\\\"button\\\" class=\\\"action-btn\\\"\\r\\n                                                            (click)=\\\"deleteCostcenter(i)\\\">Delete</button>\\r\\n                                                    </td>\\r\\n                                                </tr>\\r\\n                                            </table>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div *ngIf=\\\"_reportFilterService.showAllcontactsInCC\\\" class=\\\"checkbox\\\" style=\\\"padding-top:5px;width:200px;\\\">\\r\\n                                        <label class=\\\"smallBoldLabel\\\">\\r\\n                                            <input type=\\\"checkbox\\\"\\r\\n                                                [(ngModel)]=\\\"_reportFilterService.AccoutLedgerObj.AccLedger_showAllContacts\\\"\\r\\n                                                (change)=\\\"checkCostCenterValue()\\\" [disabled]=\\\"_reportFilterService.AccoutLedgerObj.EnableCombineLedger == false || _reportFilterService.AccoutLedgerObj.EnableCombineLedger ===undefined\\\">\\r\\n                                            Show All Cost Center\\r\\n                                        </label>\\r\\n                                    </div>\\r\\n\\r\\n                                    <div class=\\\"checkbox\\\" style=\\\"padding-top:5px;width:200px;\\\">\\r\\n                                        <label class=\\\"smallBoldLabel\\\">\\r\\n                                            <input type=\\\"checkbox\\\" [(ngModel)]=\\\"_reportFilterService.AccoutLedgerObj.MERGEREPORT\\\" [disabled]=\\\"_reportFilterService.AccoutLedgerObj.EnableCombineLedger == false || _reportFilterService.AccoutLedgerObj.EnableCombineLedger ===undefined\\\">\\r\\n                                            Merge Combined Ledger\\r\\n                                        </label>\\r\\n                                    </div>\\r\\n                                </fieldset>\\r\\n                            </div>\\r\\n\\r\\n                            <div *ngIf=\\\"showAccGrpTable\\\">\\r\\n                                <fieldset>\\r\\n                                    <legend><label class=\\\"smallBoldLabel\\\">&nbsp;Group Wise</label></legend>\\r\\n                                    <div>\\r\\n                                        <div class=\\\"col-md-10\\\">\\r\\n                                            <input type=\\\"text\\\" style=\\\"font-weight: bold;\\\" class=\\\"form-control\\\" [disabled]=\\\"_reportFilterService.AccoutLedgerObj.EnableCombineLedger == false || _reportFilterService.AccoutLedgerObj.EnableCombineLedger ===undefined\\\"\\r\\n                                             [(ngModel)]=\\\"_reportFilterService.AccoutLedgerObj.Multiple_GROUP_ACNAME\\\"\\r\\n                                        placeholder=\\\"Press Enter or Tab for Account List\\\" (keydown.Tab)=\\\"GroupAccountclick($event)\\\"\\r\\n                                        (keydown.enter)=\\\"GroupAccountclick($event)\\\">\\r\\n\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col-md-2\\\">\\r\\n                                            <button type=\\\"button\\\" class=\\\"btn btn-info\\\"\\r\\n                                                (click)=\\\"addGroupAccountToList()\\\" [disabled]=\\\"_reportFilterService.AccoutLedgerObj.EnableCombineLedger == false || _reportFilterService.AccoutLedgerObj.EnableCombineLedger ===undefined\\\">Add</button>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col-md-12\\\">\\r\\n                                            <table style=\\\"height:175px;\\\">\\r\\n                                                <tr class=\\\"smallBoldLabel\\\">\\r\\n                                                    <th style=\\\"width:3px;font-weight: bold;\\\">S.No.</th>\\r\\n                                                    <th style=\\\"width:10px;font-weight: bold;\\\">Account</th>\\r\\n                                                    <th style=\\\"width:4px;font-weight: bold;\\\">Action</th>\\r\\n                                                </tr>\\r\\n                                                <tr *ngFor=\\\"let data of _reportFilterService.AccoutLedgerObj.AccLedger_multipleGroupAccounts;let i = index\\\"\\r\\n                                                    class=\\\"smallBoldLabel\\\">\\r\\n                                                    <td style=\\\"width:3px;\\\">{{ i + 1 }}</td>\\r\\n                                                    <td style=\\\"width:10px;\\\">{{data.ACNAME}}</td>\\r\\n                                                    <td style=\\\"width:4px;\\\">\\r\\n                                                        <button type=\\\"button\\\" class=\\\"action-btn\\\"\\r\\n                                                            (click)=\\\"deleteGroupAccount(i)\\\">Delete</button>\\r\\n                                                    </td>\\r\\n                                                </tr>\\r\\n                                            </table>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n\\r\\n                                    <div class=\\\"checkbox\\\" style=\\\"padding-top:5px;width:200px;\\\">\\r\\n                                        <label class=\\\"smallBoldLabel\\\">\\r\\n                                            <input type=\\\"checkbox\\\" [(ngModel)]=\\\"_reportFilterService.AccoutLedgerObj.MERGEREPORT\\\" [disabled]=\\\"_reportFilterService.AccoutLedgerObj.EnableCombineLedger == false || _reportFilterService.AccoutLedgerObj.EnableCombineLedger ===undefined\\\">\\r\\n                                            Merge Combined Ledger\\r\\n                                        </label>\\r\\n                                    </div>\\r\\n                                </fieldset>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"modal-footer\\\" style=\\\"width : 97%; margin : 0px auto;\\\">\\r\\n                        <button class=\\\"btn btn-info confirm-btn\\\" type=\\\"button\\\" (click)=onload()>RUN</button>\\r\\n                        <button type=\\\"button\\\" (click)=\\\"closeReportBox()\\\" title=\\\"Cancel\\\"\\r\\n                            class=\\\"btn btn-info\\\">Close</button>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <!-- Filter Ends -->\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div style=\\\"width:90%\\\" class=\\\"reportpopup\\\">\\r\\n    <generic-popup-grid #genericGridAccountLedger [popupsettings]=\\\"gridPopupSettingsForAccountLedgerList\\\"\\r\\n    (onItemDoubleClick)=\\\"dblClickAccountSelect($event)\\\">\\r\\n</generic-popup-grid>\\r\\n</div>\\r\\n\\r\\n\\r\\n<div style=\\\"width:90%\\\" class=\\\"reportpopup\\\">\\r\\n    <generic-popup-grid #genericGridMultipleAccountLedger [popupsettings]=\\\"gridPopupSettingsForMultipleAccountLedgerList\\\"\\r\\n    (onItemDoubleClick)=\\\"dblClickMultipleAccountSelect($event)\\\">\\r\\n</generic-popup-grid>\\r\\n</div>\\r\\n\\r\\n<div style=\\\"width:90%\\\" class=\\\"reportpopup\\\">\\r\\n    <generic-popup-grid #genericGridMultipleGroupAccount [popupsettings]=\\\"gridPopupSettingsForMultipleGroupAccountList\\\"\\r\\n    (onItemDoubleClick)=\\\"dblClickGroupAccountSelect($event)\\\">\\r\\n</generic-popup-grid>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/ReportDialogs/AccountLedgerReport/account-ledger-report.component.html\n// module id = 1718\n// module chunks = 0","module.exports = \"<style>\\r\\n   .input-text {\\r\\n      width: 100%;\\r\\n      /* height: 30px !important; */\\r\\n      font-weight: bold;\\r\\n   }\\r\\n   label{\\r\\n       font-size: 12px;\\r\\n       margin: 0;\\r\\n   }\\r\\n\\r\\n   .td-class {\\r\\n      border: none !important;\\r\\n   }\\r\\n\\r\\n   .date-input {\\r\\n      width: 93%;\\r\\n      font-size: 12px !important;\\r\\n      height: 30px !important;\\r\\n   }\\r\\n     @media screen and (max-width:991px) {\\r\\n         .report-container{\\r\\n           width: 100% !important;\\r\\n    }\\r\\n    .report-height{\\r\\n        height:52vh; \\r\\n        overflow:auto;\\r\\n    }\\r\\n    }\\r\\n         @media screen and (max-width:767px) {\\r\\n            .smallBoldLabel{\\r\\n                  width: auto !important;\\r\\n            }\\r\\n            \\r\\n        \\r\\n    }\\r\\n</style>\\r\\n<div class=\\\"container report-container\\\" style=\\\"background-color : #ffffff; padding :1%; height : 77vh;  \\\">\\r\\n   <div class=\\\"row\\\">\\r\\n      <div class=\\\"modal-header\\\" style=\\\"width : 97%; margin : 0px auto;\\\">\\r\\n         <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" (click)=\\\"closeReportBox()\\\" >&times;</button>\\r\\n         <h4 class=\\\"modal-title\\\">Actual Vs Budget Report</h4>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-12 report-height\\\" style=\\\"padding-top: 2%;\\\">\\r\\n         <!-- Left Column -->\\r\\n         <div class=\\\"col-md-6\\\">\\r\\n             <!-- <fieldset>\\r\\n               <legend style=\\\"font-size:11px;font-weight: bold; width:auto;margin-bottom: -4px;\\\">Date Range Selection :\\r\\n               </legend>\\r\\n               <table>\\r\\n                  <tr>\\r\\n                     <td class=\\\"td-class\\\"><label class=\\\"smallBoldLabel\\\">From:(AD)</label></td>\\r\\n                     <td class=\\\"td-class\\\"><label class=\\\"smallBoldLabel\\\">To:(AD)</label></td>\\r\\n                  </tr>\\r\\n                  <tr>\\r\\n                    <td class=\\\"td-class\\\">\\r\\n                       <input type=\\\"date\\\" class=\\\"date-input form-control\\\" placeholder=\\\"Year Start Date\\\"\\r\\n                          [(ngModel)]=\\\"_reportFilterService.ActualVsBudgetObj.ActualVsBudget_DATE1\\\"\\r\\n                          (change)=\\\"changestartDate($event.target.value,'AD')\\\"\\r\\n                          max=\\\"{{masterService.date1 | date:'yyyy-MM-dd'}}\\\"\\r\\n                          min=\\\"{{masterService.date2 | date:'yyyy-MM-dd'}}\\\">\\r\\n                    </td>\\r\\n                    <td class=\\\"td-class\\\">\\r\\n                       <input type=\\\"date\\\" class=\\\"date-input form-control\\\" placeholder=\\\"Year Start Date\\\"\\r\\n                          [(ngModel)]=\\\"_reportFilterService.ActualVsBudgetObj.ActualVsBudget_DATE2\\\"\\r\\n                          (change)=\\\"changeEndDate($event.target.value,'AD')\\\"\\r\\n                          max=\\\"{{masterService.date1 | date:'yyyy-MM-dd'}}\\\"\\r\\n                          min=\\\"{{masterService.date2 | date:'yyyy-MM-dd'}}\\\">\\r\\n                    </td>\\r\\n                  </tr>\\r\\n                  <tr>\\r\\n                    <td class=\\\"td-class\\\">\\r\\n                       <nepali-date-picker name=\\\"nepaliDateFrom\\\" [id]=\\\"'nepaliDatefrom'\\\"\\r\\n                       (change)=\\\"changestartDate($event.detail.value,'BS')\\\"\\r\\n                       [label]=\\\"'From'\\\"\\r\\n                       [(ngModel)]=\\\"_reportFilterService.ActualVsBudgetObj.ActualVsBudget_BSDATE1\\\">\\r\\n                     </nepali-date-picker>\\r\\n                  \\r\\n \\r\\n                      </td>\\r\\n                      <td class=\\\"td-class\\\">\\r\\n                       <nepali-date-picker name=\\\"nepaliDateFrom\\\" [id]=\\\"'nepaliDateTo'\\\"\\r\\n                       (change)=\\\"changeEndDate($event.detail.value,'BS')\\\"\\r\\n                       [label]=\\\"'To'\\\"\\r\\n                       [(ngModel)]=\\\"_reportFilterService.ActualVsBudgetObj.ActualVsBudget_BSDATE2\\\">\\r\\n                     </nepali-date-picker>\\r\\n                       \\r\\n                      </td>\\r\\n                  </tr>\\r\\n               </table>\\r\\n            </fieldset>  -->\\r\\n            <fieldset>\\r\\n              <legend>Budget Selection :</legend>\\r\\n             <input #budgetSelectionField type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Press Enter or Tab for Budget List\\\"   [(ngModel)]=\\\" this._reportFilterService.ActualVsBudgetObj.ActualVsBudget_Budget_Name\\\" (ngModelChange)=\\\"onBudgetSelectionChange()\\\"\\r\\n             (keydown.enter)=\\\"BudgetSelectionClicked() \\\"\\r\\n             >\\r\\n           </fieldset>\\r\\n\\r\\n            <fieldset>\\r\\n               <legend>Division Selection:</legend>\\r\\n               <select [(ngModel)]=\\\"_reportFilterService.ActualVsBudgetObj.ActualVsBudget_DIV\\\"\\r\\n               style=\\\"height: 30px !important;\\\" class=\\\"form-control input-text\\\">\\r\\n               <option value=\\\"%\\\" *ngIf=\\\"masterService.userSetting.userwisedivision==0 ||  masterService.showAll\\\">ALL</option>\\r\\n               <option *ngFor=\\\"let div of division\\\" value=\\\"{{ div.INITIAL }}\\\">\\r\\n                  {{ div.NAME }}\\r\\n               </option>\\r\\n            </select>\\r\\n            </fieldset>\\r\\n            <fieldset *ngIf=\\\"userSetting.enableCostCenter!=0\\\">\\r\\n               <legend><input type=\\\"checkbox\\\" [(ngModel)]=\\\"_reportFilterService.ActualVsBudgetObj.ActualVsBudget_COSTCENTERWISE\\\" (change)=\\\"onChangeCostcenterWise($event)\\\"  style=\\\"height: 10px; width: 10px;\\\"> Cost Center Wise Report</legend>\\r\\n               \\r\\n               <div class=\\\"row\\\">\\r\\n                  <div class=\\\"col-md-6\\\">\\r\\n                    <label for=\\\"\\\">Category: </label>\\r\\n                     <select [(ngModel)]=\\\"_reportFilterService.ActualVsBudgetObj.ActualVsBudget_COSTCENTERCATEGORY\\\" (ngModelChange)=\\\"showCostCenterGroupChange()\\\" [disabled]=\\\"_reportFilterService.ActualVsBudgetObj.ActualVsBudget_COSTCENTERWISE==0\\\"\\r\\n                     style=\\\"height: 30px !important;\\\" class=\\\"form-control input-text\\\">\\r\\n                     <option value=\\\"%\\\">All</option>\\r\\n                     <option *ngFor=\\\"let i of costCenterCategoryList\\\" value={{i.ccgid}}>{{i.COSTCENTERGROUPNAME}}\\r\\n                     </option>\\r\\n                  </select>\\r\\n                  </div>\\r\\n                  <div class=\\\"col-md-6\\\">\\r\\n                    <label for=\\\"\\\">Cost Center: </label>\\r\\n                     <select [(ngModel)]=\\\"_reportFilterService.ActualVsBudgetObj.ActualVsBudget_CostCenter\\\"  [disabled]=\\\"_reportFilterService.ActualVsBudgetObj.ActualVsBudget_COSTCENTERWISE==0\\\"\\r\\n                     style=\\\"height: 30px !important;\\\" class=\\\"form-control input-text\\\">\\r\\n                     <option value=\\\"%\\\">All</option>\\r\\n                     <option *ngFor=\\\"let i of CostcenterList\\\" value={{i.CCID}}>{{i.COSTCENTERNAME}}\\r\\n                     </option>\\r\\n                  </select>\\r\\n                  </div>\\r\\n\\r\\n               </div>\\r\\n               <div class=\\\"row\\\" *ngIf=\\\"_reportFilterService.ActualVsBudgetObj.ActualVsBudget_COSTCENTERWISE==1\\\">\\r\\n                  <!-- <div class=\\\"col-md-10\\\">\\r\\n                     <input type=\\\"checkbox\\\" style=\\\"height: 10px; width: 10px;\\\" [(ngModel)]=\\\"_reportFilterService.ActualVsBudgetObj.ActualVsBudget_OPT_COSTCENTER\\\" (change)=\\\"onCostCenterWiseSegregationReportCheck($event)\\\" [disabled]=\\\"_reportFilterService.ActualVsBudgetObj.ActualVsBudget_CostCenter == '%' && _reportFilterService.ActualVsBudgetObj.ActualVsBudget_COSTCENTERCATEGORY == '%'\\\"> <label for=\\\"\\\">Show CostCenterWise Segregation Report</label>\\r\\n\\r\\n                  </div> -->\\r\\n                  <div class=\\\"col-md-6\\\">\\r\\n                     <label class=\\\"\\\"><input type=\\\"radio\\\"\\r\\n                        [(ngModel)]=\\\"_reportFilterService.ActualVsBudgetObj.ActualVsBudget_OPT_COSTCENTER\\\" value=0\\r\\n                         >&nbsp;Category Wise\\r\\n                          </label>\\r\\n                  </div>\\r\\n                  <div class=\\\"col-md-6\\\">\\r\\n                     <label class=\\\"\\\"><input type=\\\"radio\\\"\\r\\n                      [(ngModel)]=\\\"_reportFilterService.ActualVsBudgetObj.ActualVsBudget_OPT_COSTCENTER\\\" value=1\\r\\n                        >&nbsp;Cost Center Wise\\r\\n                         </label>\\r\\n                  </div>\\r\\n               </div>\\r\\n            </fieldset>\\r\\n            <!-- <label class=\\\"\\\"><input type=\\\"radio\\\" name=\\\"showCred\\\" \\r\\n              [(ngModel)]=\\\"_reportFilterService.ActualVsBudgetObj.ActualVsBudget_CheckOption\\\" value=\\\"0\\\"\\r\\n              >&nbsp;All </label><br> -->\\r\\n\\r\\n            <!-- <label class=\\\"\\\"><input type=\\\"radio\\\" name=\\\"showCred\\\" \\r\\n              [(ngModel)]=\\\"_reportFilterService.ActualVsBudgetObj.ActualVsBudget_CheckOption\\\"  value=\\\"3\\\"\\r\\n              >&nbsp;Show Zero Variance\\r\\n            Only </label><br> -->\\r\\n            <!-- <label class=\\\"\\\"><input type=\\\"radio\\\" name=\\\"showCred\\\"\\r\\n              [(ngModel)]=\\\"_reportFilterService.ActualVsBudgetObj.ActualVsBudget_ShowInPercent\\\"\\r\\n              >&nbsp;Show in Percentage</label><br> -->\\r\\n\\r\\n            <!-- <label class=\\\"\\\"><input type=\\\"radio\\\" name=\\\"showCred\\\"\\r\\n              [(ngModel)]=\\\"_reportFilterService.ActualVsBudgetObj.ActualVsBudget_ShowInAmount\\\"\\r\\n           >&nbsp;Show in Amount\\r\\n            </label><br> -->\\r\\n\\r\\n            <!-- <label class=\\\"\\\"><input type=\\\"radio\\\" name=\\\"showCred\\\"\\r\\n              [(ngModel)]=\\\"_reportFilterService.ActualVsBudgetObj.ActualVsBudget_CheckOption\\\"  value=\\\"1\\\"\\r\\n               >&nbsp;Over Budget\\r\\n                </label><br>\\r\\n                <label class=\\\"\\\"><input type=\\\"radio\\\" name=\\\"showCred\\\"\\r\\n                 [(ngModel)]=\\\"_reportFilterService.ActualVsBudgetObj.ActualVsBudget_CheckOption\\\"  value=\\\"2\\\"\\r\\n                   >&nbsp;Under Budget\\r\\n                    </label><br> -->\\r\\n\\r\\n\\r\\n            \\r\\n        \\r\\n         </div>\\r\\n         <!-- Right Column -->\\r\\n         <div class=\\\"col-md-6\\\">\\r\\n          \\r\\n           <!-- <fieldset>\\r\\n              <legend>Account Selection :</legend>\\r\\n              <input type=\\\"text\\\" style=\\\"font-weight: bold;\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"_reportFilterService.ActualVsBudgetObj.ActualVsBudget_AccLedger_ACCNAME\\\"\\r\\n                  placeholder=\\\"Press Enter or Tab for Account List\\\" (keydown.Tab)=\\\"AccountEnterClicked($event)\\\"\\r\\n                  (keydown.enter)=\\\"AccountEnterClicked($event)\\\">\\r\\n          </fieldset> -->\\r\\n\\r\\n            <fieldset>\\r\\n               <legend>Report Format Selection :</legend>\\r\\n               <div class=\\\"row\\\">\\r\\n                  <div class=\\\"col-sm-4\\\">\\r\\n                     <label class=\\\"\\\"><input type=\\\"radio\\\" name=\\\"reportType\\\"\\r\\n                       [(ngModel)]=\\\"_reportFilterService.ActualVsBudgetObj.ActualVsBudget_OVERVIEWREPORT\\\" value=0\\r\\n                       (change)=\\\"overViewSelect($event)\\\"\\r\\n                          >&nbsp;Overview</label>\\r\\n                  </div>\\r\\n               \\r\\n                  <div class=\\\"col-sm-8\\\">\\r\\n                     <label class=\\\"\\\" style=\\\"margin-left: -33px;\\\"><input type=\\\"radio\\\" name=\\\"reportType\\\"\\r\\n                       [(ngModel)]=\\\"_reportFilterService.ActualVsBudgetObj.ActualVsBudget_OVERVIEWREPORT\\\" value=1\\r\\n                       (change)=\\\"ActualVSbudgetSelect($event)\\\">&nbsp;Actual Vs Budget\\r\\n                        </label>\\r\\n                  </div>\\r\\n               </div>\\r\\n              \\r\\n            </fieldset>\\r\\n            <!-- <fieldset *ngIf=\\\"_reportFilterService.ActualVsBudgetObj.ActualVsBudget_OVERVIEWREPORT==1\\\">\\r\\n              <legend>Date Type :</legend>\\r\\n              <div class=\\\"row\\\">\\r\\n                 <div class=\\\"col-sm-2\\\" *ngIf=\\\"_reportFilterService.ReportOptionAll\\\">\\r\\n                    <label class=\\\"\\\"><input type=\\\"radio\\\" name=\\\"dateType\\\"\\r\\n                      [(ngModel)]=\\\"_reportFilterService.ActualVsBudgetObj.ActualVsBudget_DATETYPE\\\" value=0\\r\\n                         >&nbsp;All</label>\\r\\n                 </div>\\r\\n                 <div class=\\\"col-sm-4\\\">\\r\\n                    <label class=\\\"\\\"><input type=\\\"radio\\\" name=\\\"dateType\\\"\\r\\n                      [(ngModel)]=\\\"_reportFilterService.ActualVsBudgetObj.ActualVsBudget_DATETYPE\\\" value=1\\r\\n                         >&nbsp;AD</label>\\r\\n                 </div>\\r\\n              \\r\\n                 <div class=\\\"col-sm-4\\\">\\r\\n                    <label class=\\\"\\\" style=\\\"margin-left: -33px;\\\"><input type=\\\"radio\\\" name=\\\"dateType\\\"\\r\\n                      [(ngModel)]=\\\"_reportFilterService.ActualVsBudgetObj.ActualVsBudget_DATETYPE\\\" value=2\\r\\n                      >&nbsp;BS\\r\\n                       </label>\\r\\n                 </div>\\r\\n              </div>\\r\\n             \\r\\n           </fieldset> -->\\r\\n\\r\\n            <fieldset *ngIf=\\\"_reportFilterService.ActualVsBudgetObj.ActualVsBudget_OVERVIEWREPORT==1\\\">\\r\\n               <legend>Budget Interval :</legend>\\r\\n               <div class=\\\"row\\\">\\r\\n                 \\r\\n              \\r\\n                  <div class=\\\"col-sm-2\\\" *ngIf=\\\"_reportFilterService.ReportOptionAll\\\">\\r\\n                     <label class=\\\"\\\"><input type=\\\"radio\\\" name=\\\"reportOption\\\" [disabled]=\\\"_reportFilterService.ActualVsBudgetObj.ActualVsBudget_COSTCENTERWISE==1 || _reportFilterService.ActualVsBudgetObj.ActualVsBudget_BUDGETSELECTION != '%'\\\"\\r\\n                       [(ngModel)]=\\\"_reportFilterService.ActualVsBudgetObj.ActualVsBudget_REPORTOPTION\\\" value=0\\r\\n                          >&nbsp;All</label>\\r\\n                  </div>\\r\\n\\r\\n                  <div class=\\\"col-sm-3\\\">\\r\\n                    <label class=\\\"\\\" ><input type=\\\"radio\\\" name=\\\"reportOption\\\"\\r\\n                      [(ngModel)]=\\\"_reportFilterService.ActualVsBudgetObj.ActualVsBudget_REPORTOPTION\\\" value=1  [disabled]=\\\"_reportFilterService.ActualVsBudgetObj.ActualVsBudget_COSTCENTERWISE==1 || _reportFilterService.ActualVsBudgetObj.ActualVsBudget_BUDGETSELECTION != '%'\\\"\\r\\n                         >&nbsp;Monthly</label>\\r\\n                 </div>\\r\\n               \\r\\n                  <div class=\\\"col-sm-3\\\">\\r\\n                     <label class=\\\"\\\"><input type=\\\"radio\\\" name=\\\"reportOption\\\"\\r\\n                       [(ngModel)]=\\\"_reportFilterService.ActualVsBudgetObj.ActualVsBudget_REPORTOPTION\\\" value=2  [disabled]=\\\"_reportFilterService.ActualVsBudgetObj.ActualVsBudget_COSTCENTERWISE==1 || _reportFilterService.ActualVsBudgetObj.ActualVsBudget_BUDGETSELECTION != '%'\\\"\\r\\n                           >&nbsp;Quarterly\\r\\n                        </label>\\r\\n                  </div>\\r\\n                  <div class=\\\"col-sm-3\\\">\\r\\n                   <label class=\\\"\\\"><input type=\\\"radio\\\" name=\\\"reportOption\\\"\\r\\n                    [(ngModel)]=\\\"_reportFilterService.ActualVsBudgetObj.ActualVsBudget_REPORTOPTION\\\" value=3  [disabled]=\\\"_reportFilterService.ActualVsBudgetObj.ActualVsBudget_COSTCENTERWISE==1 || _reportFilterService.ActualVsBudgetObj.ActualVsBudget_BUDGETSELECTION != '%'\\\"\\r\\n                         >&nbsp;Annually\\r\\n                      </label>\\r\\n                </div>\\r\\n               </div>\\r\\n              \\r\\n            </fieldset>\\r\\n\\r\\n            <!-- <fieldset>\\r\\n               <legend>Budget  Selection :</legend>\\r\\n               <div class=\\\"row\\\">\\r\\n                  <div class=\\\"col-sm-4\\\">\\r\\n                     <label class=\\\"\\\"><input type=\\\"radio\\\" name=\\\"budgetSelection\\\"\\r\\n                       [(ngModel)]=\\\"_reportFilterService.ActualVsBudgetObj.ActualVsBudget_BUDGETSELECTION\\\" value=0\\r\\n                          >&nbsp;All</label>\\r\\n                  </div>\\r\\n               \\r\\n                  <div class=\\\"col-sm-4\\\">\\r\\n                     <label class=\\\"\\\" style=\\\"margin-left: -33px;\\\"><input type=\\\"radio\\\" name=\\\"budgetSelection\\\"\\r\\n                       [(ngModel)]=\\\"_reportFilterService.ActualVsBudgetObj.ActualVsBudget_BUDGETSELECTION\\\" value=1\\r\\n                           >&nbsp;Active\\r\\n                        </label>\\r\\n                  </div>\\r\\n                  <div class=\\\"col-sm-4\\\">\\r\\n                   <label class=\\\"\\\" style=\\\"margin-left: -33px;\\\"><input type=\\\"radio\\\" name=\\\"budgetSelection\\\"\\r\\n                    [(ngModel)]=\\\"_reportFilterService.ActualVsBudgetObj.ActualVsBudget_BUDGETSELECTION\\\" value=2\\r\\n                         >&nbsp;Inactive \\r\\n                      </label>\\r\\n                </div>\\r\\n               </div>\\r\\n              \\r\\n            </fieldset> -->\\r\\n            <fieldset *ngIf=\\\"_reportFilterService.ActualVsBudgetObj.ActualVsBudget_OVERVIEWREPORT==1\\\">\\r\\n               <legend>Report Filters :</legend>\\r\\n               <div class=\\\"row\\\">\\r\\n                  <div class=\\\"col-md-12\\\">\\r\\n                     <label class=\\\"\\\"><input type=\\\"checkbox\\\" \\r\\n                        [(ngModel)]=\\\"_reportFilterService.ActualVsBudgetObj.ActualVsBudget_ShowZeroVariance\\\"\\r\\n                        >&nbsp;Show Zero Variance\\r\\n                      Only </label><br>\\r\\n                      <!-- <label class=\\\"\\\"><input type=\\\"radio\\\" name=\\\"showCred\\\"\\r\\n                        [(ngModel)]=\\\"_reportFilterService.ActualVsBudgetObj.ActualVsBudget_ShowInPercent\\\"\\r\\n                        >&nbsp;Show in Percentage</label><br> -->\\r\\n          \\r\\n                      <!-- <label class=\\\"\\\"><input type=\\\"radio\\\" name=\\\"showCred\\\"\\r\\n                        [(ngModel)]=\\\"_reportFilterService.ActualVsBudgetObj.ActualVsBudget_ShowInAmount\\\"\\r\\n                     >&nbsp;Show in Amount\\r\\n                      </label><br> -->\\r\\n          \\r\\n                      <label class=\\\"\\\"><input type=\\\"checkbox\\\" \\r\\n                        [(ngModel)]=\\\"_reportFilterService.ActualVsBudgetObj.ActualVsBudget_OverBUdget\\\" \\r\\n                         >&nbsp;Over Budget\\r\\n                          </label><br>\\r\\n                          <label class=\\\"\\\"><input type=\\\"checkbox\\\"\\r\\n                           [(ngModel)]=\\\"_reportFilterService.ActualVsBudgetObj.ActualVsBudget_UnderBudget\\\"\\r\\n                             >&nbsp;Under Budget\\r\\n                              </label><br>\\r\\n                  </div>\\r\\n       \\r\\n               </div>\\r\\n            </fieldset>\\r\\n            <div class=\\\"checkbox\\\" style=\\\"padding-top:5px;width:200px;\\\">\\r\\n               <label class=\\\"smallBoldLabel\\\" style=\\\"width:225px;\\\">\\r\\n                   <input type=\\\"checkbox\\\" [(ngModel)]=\\\"_reportFilterService.ActualVsBudgetObj.ActualVsBudget_INCLUDEPOSTDATE\\\" style=\\\"margin-left: 5px;\\\"\\r\\n                   (change)=\\\"$event.target.checked?(_reportFilterService.ActualVsBudgetObj.ActualVsBudget_INCLUDEPOSTDATE=1):(_reportFilterService.ActualVsBudgetObj.ActualVsBudget_INCLUDEPOSTDATE=0)\\\"\\r\\n           [checked]=\\\"_reportFilterService.ActualVsBudgetObj.ActualVsBudget_INCLUDEPOSTDATE == 1\\\" >\\r\\n                   Include Post Dated Transaction Also\\r\\n               </label>\\r\\n           </div>\\r\\n\\r\\n           <div *ngIf=\\\"userSetting.EnableLatePost==1\\\"class=\\\"checkbox\\\" style=\\\"padding-top:5px;width:200px;\\\">\\r\\n            <label class=\\\"smallBoldLabel\\\" style=\\\"width:225px;\\\">\\r\\n                <input type=\\\"checkbox\\\" [(ngModel)]=\\\"_reportFilterService.ActualVsBudgetObj.ActualVsBudget_INCLUDEUNAPPROVEDTRANSACTION\\\" style=\\\"margin-left: 5px;\\\"\\r\\n                (change)=\\\"$event.target.checked?(_reportFilterService.ActualVsBudgetObj.ActualVsBudget_INCLUDEUNAPPROVEDTRANSACTION=1):(_reportFilterService.ActualVsBudgetObj.ActualVsBudget_INCLUDEUNAPPROVEDTRANSACTION=0)\\\"\\r\\n        [checked]=\\\"_reportFilterService.ActualVsBudgetObj.ActualVsBudget_INCLUDEUNAPPROVEDTRANSACTION == 1\\\" >\\r\\n        Including Unapproved Transaction\\r\\n            </label>\\r\\n        </div>\\r\\n\\r\\n         </div>\\r\\n       \\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"modal-footer\\\" style=\\\"width : 97%; margin : 0px auto;\\\">\\r\\n         <button class=\\\"btn btn-info confirm-btn\\\" type=\\\"button\\\"  (click)=\\\"onload()\\\" [disabled]=\\\"_reportFilterService.ActualVsBudgetObj.ActualVsBudget_OVERVIEWREPORT==1 && (_reportFilterService.ActualVsBudgetObj.ActualVsBudget_DATETYPE==0 || _reportFilterService.ActualVsBudgetObj.ActualVsBudget_REPORTOPTION==0)\\\">RUN</button>\\r\\n         <button type=\\\"button\\\"  title=\\\"Cancel\\\" class=\\\"btn btn-info\\\" (click)=\\\"closeReportBox()\\\">Close</button>\\r\\n      </div>\\r\\n\\r\\n   </div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n   <generic-popup-grid #genericGridAccountLedger [popupsettings]=\\\"gridPopupSettingsForAccountLedgerList\\\"\\r\\n   (onItemDoubleClick)=\\\"dblClickAccountSelect($event)\\\">\\r\\n</generic-popup-grid>\\r\\n\\r\\n<div style=\\\"width:90%\\\" class=\\\"reportpopup\\\">\\r\\n   <generic-popup-grid #genericGridBudgetList [popupsettings]=\\\"gridPopupSettingsForBudgetList\\\"\\r\\n   (onItemDoubleClick)=\\\"dblClickBudgetSelect($event)\\\">\\r\\n  </generic-popup-grid>\\r\\n\\r\\n</div>\\r\\n \"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/ReportDialogs/ActualVsBudget-Report/actualvsbudget-report.component.html\n// module id = 1719\n// module chunks = 0","module.exports = \"<style>\\r\\n    .input-text {\\r\\n       width: 100%;\\r\\n       /* height: 30px !important; */\\r\\n       font-weight: bold;\\r\\n    }\\r\\n \\r\\n    .td-class {\\r\\n       border: none !important;\\r\\n    }\\r\\n \\r\\n    .date-input {\\r\\n       width: 93%;\\r\\n       font-size: 12px !important;\\r\\n       height: 30px !important;\\r\\n    }\\r\\n \\r\\n    .ageing {\\r\\n       width: 15%;\\r\\n       float: left;\\r\\n       margin-right: 5%;\\r\\n       font-weight: bold;\\r\\n       font-size: 14px !important;\\r\\n    }\\r\\n     @media screen and (max-width:991px) {\\r\\n         .report-container{\\r\\n           width: 100% !important;\\r\\n    }\\r\\n    .report-height{\\r\\n        height:52vh; \\r\\n        overflow:auto;\\r\\n    }\\r\\n    }\\r\\n         @media screen and (max-width:767px) {\\r\\n            .smallBoldLabel{\\r\\n                  width: auto !important;\\r\\n            }\\r\\n            \\r\\n        \\r\\n    }\\r\\n </style>\\r\\n <div class=\\\"container report-container\\\" style=\\\"background-color : #ffffff; padding :1%; height : auto;  \\\">\\r\\n    <div class=\\\"row report-height\\\">\\r\\n       <div class=\\\"modal-header\\\" style=\\\"width : 97%; margin : 0px auto;\\\">\\r\\n          <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" (click)=\\\"closeReportBox()\\\">&times;</button>\\r\\n          <h4 class=\\\"modal-title\\\">Additional Cost Itemwise Report</h4>\\r\\n       </div>\\r\\n       <!-- Left Column -->\\r\\n       <div class=\\\"col-md-6\\\" style=\\\"padding-top: 2%;\\\">\\r\\n         <fieldset>\\r\\n            <legend style=\\\"font-size:11px;font-weight: bold; width:auto;margin-bottom: -4px;\\\">Date Range Selection :</legend>\\r\\n            <table>\\r\\n                <tr>\\r\\n                    <td class=\\\"td-class\\\"><label class=\\\"smallBoldLabel\\\">From:(AD)</label></td>\\r\\n                    <td class=\\\"td-class\\\"><label class=\\\"smallBoldLabel\\\">To:(AD)</label></td>\\r\\n                </tr>\\r\\n                <tr>\\r\\n                    <td class=\\\"td-class\\\">\\r\\n                            <input type=\\\"date\\\"\\r\\n                         class=\\\"date-input form-control\\\" placeholder=\\\"Year Start Date\\\"\\r\\n                                [(ngModel)]=\\\"_reportFilterService.AdditionalCostDetailObj.AdditionalCostDetail_DATE1\\\"\\r\\n                                (change)=\\\"changestartDate($event.target.value,'AD')\\\" max=\\\"{{masterService.date1 | date:'yyyy-MM-dd'}}\\\" min=\\\"{{masterService.date2 | date:'yyyy-MM-dd'}}\\\">\\r\\n                    </td>\\r\\n                    <td class=\\\"td-class\\\">\\r\\n                            <input type=\\\"date\\\"\\r\\n                         class=\\\"date-input form-control\\\" placeholder=\\\"Year Start Date\\\"\\r\\n                                [(ngModel)]=\\\"_reportFilterService.AdditionalCostDetailObj.AdditionalCostDetail_DATE2\\\"\\r\\n                                (change)=\\\"changeEndDate($event.target.value,'AD')\\\" max=\\\"{{masterService.date1 | date:'yyyy-MM-dd'}}\\\" min=\\\"{{masterService.date2 | date:'yyyy-MM-dd'}}\\\">\\r\\n                    </td>\\r\\n                </tr>\\r\\n                <tr>\\r\\n                    <td class=\\\"td-class\\\">\\r\\n                     <nepali-date-picker name=\\\"nepaliDateFrom\\\" [id]=\\\"'nepaliDatefrom'\\\"\\r\\n                     (change)=\\\"changestartDate($event.detail.value,'BS')\\\"\\r\\n                     [label]=\\\"'From'\\\"\\r\\n                     [(ngModel)]=\\\"_reportFilterService.AdditionalCostDetailObj.AdditionalCostDetail_BSDATE1\\\">\\r\\n                     </nepali-date-picker>\\r\\n                            <!-- <input id=\\\"nepaliDate\\\"\\r\\n                                style=\\\"text-align:center;\\\"\\r\\n                                class=\\\"nepali-calendar ndp-nepali-calendar date-input form-control\\\"\\r\\n                                [(ngModel)]=\\\"_reportFilterService.AdditionalCostDetailObj.AdditionalCostDetail_BSDATE1\\\" type=\\\"text\\\"\\r\\n                                (change)=\\\"changestartDate($event.target.value,'BS')\\\"\\r\\n                                placeholder=\\\"yyyy-mm-dd\\\" />            -->\\r\\n                    </td>\\r\\n                    <td class=\\\"td-class\\\">\\r\\n                     <nepali-date-picker name=\\\"nepaliDateTo\\\" [id]=\\\"'nepaliDateTo'\\\"\\r\\n                     (change)=\\\"changeEndDate($event.detail.value,'BS')\\\"\\r\\n                     [label]=\\\"'To'\\\"\\r\\n                     [(ngModel)]=\\\"_reportFilterService.AdditionalCostDetailObj.AdditionalCostDetail_BSDATE2\\\">\\r\\n                     </nepali-date-picker>\\r\\n                            <!-- <input id=\\\"nepaliDate\\\" style=\\\"text-align:center;\\\"\\r\\n                            class=\\\"nepali-calendar ndp-nepali-calendar date-input form-control\\\"\\r\\n                                [(ngModel)]=\\\"_reportFilterService.AdditionalCostDetailObj.AdditionalCostDetail_BSDATE2\\\" type=\\\"text\\\"\\r\\n                                (change)=\\\"changeEndDate($event.target.value,'BS')\\\"\\r\\n                                placeholder=\\\"yyyy-mm-dd\\\" /> -->\\r\\n                    </td>\\r\\n                </tr>\\r\\n            </table>\\r\\n        </fieldset>\\r\\n \\r\\n          <fieldset>\\r\\n             <legend>Division Selection:</legend>\\r\\n             <select [(ngModel)]=\\\"_reportFilterService.AdditionalCostDetailObj.AdditionalCostDetail_DIV\\\"\\r\\n                style=\\\"height: 30px !important;\\\" class=\\\"form-control input-text\\\">\\r\\n                <option value=\\\"%\\\" *ngIf=\\\"masterService.userSetting.userwisedivision==0 ||  masterService.showAll\\\">ALL</option>\\r\\n                <option *ngFor=\\\"let div of division\\\" value=\\\"{{ div.INITIAL }}\\\">\\r\\n                   {{ div.NAME }}\\r\\n                </option>\\r\\n             </select>\\r\\n          </fieldset>\\r\\n          <fieldset *ngIf=\\\"masterService.userSetting.enableCostCenter == 1 || masterService.userSetting.enableCostCenter == 2\\\">\\r\\n            <legend>Cost Center</legend>\\r\\n            <input type=\\\"text\\\" style=\\\"font-weight: bold;\\\" class=\\\"form-control\\\"\\r\\n            [(ngModel)]=\\\"_reportFilterService.AdditionalCostDetailObj.AdditionalCostDetail_COSTCENTERNAME\\\" placeholder=\\\"Press Enter to select COST CENTER\\\"\\r\\n            (keydown.Tab)=\\\"showCostCenterGroupList()\\\" (keydown.enter)=\\\"showCostCenterGroupList()\\\">          \\r\\n            \\r\\n          </fieldset>\\r\\n \\r\\n        \\r\\n \\r\\n       </div>\\r\\n       <!-- Right Column -->\\r\\n       <div class=\\\"col-md-6\\\" style=\\\"padding-top: 2%;\\\">\\r\\n         <fieldset>\\r\\n            <legend>Report Style:</legend>\\r\\n            <label class=\\\"smallBoldLabel\\\" style=\\\"padding-right:15px;\\\"><input type=\\\"radio\\\" name=\\\"BalViewOpt\\\"\\r\\n                  [(ngModel)]=\\\"_reportFilterService.AdditionalCostDetailObj.AdditionalCostDetail_ISSUMMARY\\\" value=1>&nbsp;Summary\\r\\n               Report</label>\\r\\n            <label class=\\\"smallBoldLabel\\\"><input type=\\\"radio\\\" name=\\\"BalViewOpt\\\"\\r\\n                  [(ngModel)]=\\\"_reportFilterService.AdditionalCostDetailObj.AdditionalCostDetail_ISSUMMARY\\\" value=0>&nbsp;Detail Report</label>\\r\\n         </fieldset>\\r\\n         <fieldset>\\r\\n            <legend>Supplier Selection: </legend>\\r\\n            <input type=\\\"text\\\" style=\\\"font-weight: bold;\\\" class=\\\"form-control\\\"\\r\\n                [(ngModel)]=\\\"_reportFilterService.AdditionalCostDetailObj.AdditionalCostDetail_ACNAME\\\" placeholder=\\\"Press Enter or Tab for Supplier\\\"\\r\\n                (keydown.Tab)=\\\"AccountEnterClicked($event)\\\" (keydown.enter)=\\\"AccountEnterClicked($event)\\\">\\r\\n        </fieldset>\\r\\n         <fieldset>\\r\\n            <legend>Voucher No Selection: </legend>\\r\\n            <input type=\\\"text\\\" style=\\\"font-weight: bold;\\\" class=\\\"form-control\\\"\\r\\n                [(ngModel)]=\\\"_reportFilterService.AdditionalCostDetailObj.AdditionalCostDetail_VOUCHERNO\\\" placeholder=\\\"Press Enter or Tab for Voucher No\\\"\\r\\n                (keydown.Tab)=\\\"VoucherNoEnterClicked($event)\\\" (keydown.enter)=\\\"VoucherNoEnterClicked($event)\\\">\\r\\n        </fieldset>\\r\\n\\r\\n \\r\\n       </div>\\r\\n       <div class=\\\"btn\\\" style=\\\"float : right;\\\">\\r\\n          <button class=\\\"btn btn-info confirm-btn\\\" type=\\\"button\\\" (click)=onload()>RUN</button>\\r\\n          <button type=\\\"button\\\" title=\\\"Cancel\\\" class=\\\"btn btn-info\\\" (click)=\\\"closeReportBox()\\\">Close</button>\\r\\n       </div>\\r\\n \\r\\n    </div>\\r\\n\\r\\n    <generic-popup-grid #genericGridVoucherNo [popupsettings]=\\\"gridPopupSettingsForVoucherList\\\"\\r\\n    (onItemDoubleClick)=\\\"dblClickVoucherSelect($event)\\\">\\r\\n</generic-popup-grid>\\r\\n\\r\\n<generic-popup-grid #genericGridAccount [popupsettings]=\\\"gridPopupSettingsForAccountList\\\"\\r\\n(onItemDoubleClick)=\\\"dblClickAccountSelect($event)\\\">\\r\\n</generic-popup-grid>\\r\\n\\r\\n<generic-popup-grid #genericGridCostCenterList [popupsettings]=\\\"gridCostCenterListPopupSettings\\\"\\r\\n(onItemDoubleClick)=\\\"onCostCenterSelect($event)\\\"></generic-popup-grid>\\r\\n<generic-popup-grid #genericGridCostCenterGroupList [popupsettings]=\\\"gridCostCenterGroupListPopupSettings\\\"\\r\\n(onItemDoubleClick)=\\\"onCostCenterGroupSelect($event)\\\"></generic-popup-grid>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/ReportDialogs/AdditionalCost-Itemwise-Report/additionalcost-itemwise-report.component.html\n// module id = 1720\n// module chunks = 0","module.exports = \"<style>\\r\\n    .input-text {\\r\\n       width: 100%;\\r\\n       /* height: 30px !important; */\\r\\n       font-weight: bold;\\r\\n    }\\r\\n \\r\\n    .td-class {\\r\\n       border: none !important;\\r\\n    }\\r\\n \\r\\n    .date-input {\\r\\n       width: 93%;\\r\\n       font-size: 12px !important;\\r\\n       height: 30px !important;\\r\\n    }\\r\\n \\r\\n    .ageing {\\r\\n       width: 15%;\\r\\n       float: left;\\r\\n       margin-right: 5%;\\r\\n       font-weight: bold;\\r\\n       font-size: 14px !important;\\r\\n    }\\r\\n      @media screen and (max-width:991px) {\\r\\n         .report-container{\\r\\n           width: 100% !important;\\r\\n    }\\r\\n    .report-height{\\r\\n        height:52vh; \\r\\n        overflow:auto;\\r\\n    }\\r\\n    }\\r\\n         @media screen and (max-width:767px) {\\r\\n            .smallBoldLabel{\\r\\n                  width: auto !important;\\r\\n            }\\r\\n            \\r\\n        \\r\\n    }\\r\\n </style>\\r\\n <div class=\\\"container report-container\\\" style=\\\"background-color : #ffffff; padding :1%; height : auto;  \\\">\\r\\n    <div class=\\\"row report-height\\\">\\r\\n       <div class=\\\"modal-header\\\" style=\\\"width : 97%; margin : 0px auto;\\\">\\r\\n          <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" (click)=\\\"closeReportBox()\\\">&times;</button>\\r\\n          <h4 class=\\\"modal-title\\\">Additional Cost Voucherwise Report</h4>\\r\\n       </div>\\r\\n       <!-- Left Column -->\\r\\n       <div class=\\\"col-md-6 \\\" style=\\\"padding-top: 2%;\\\">\\r\\n         <fieldset>\\r\\n            <legend style=\\\"font-size:11px;font-weight: bold; width:auto;margin-bottom: -4px;\\\">Date Range Selection :</legend>\\r\\n            <table>\\r\\n                <tr>\\r\\n                    <td class=\\\"td-class\\\"><label class=\\\"smallBoldLabel\\\">From:(AD)</label></td>\\r\\n                    <td class=\\\"td-class\\\"><label class=\\\"smallBoldLabel\\\">To:(AD)</label></td>\\r\\n                </tr>\\r\\n                <tr>\\r\\n                    <td class=\\\"td-class\\\">\\r\\n                            <input type=\\\"date\\\"\\r\\n                         class=\\\"date-input form-control\\\" placeholder=\\\"Year Start Date\\\"\\r\\n                                [(ngModel)]=\\\"_reportFilterService.AdditionalCostSummaryObj.AdditionalCostSummary_DATE1\\\"\\r\\n                                (change)=\\\"changestartDate($event.target.value,'AD')\\\" max=\\\"{{masterService.date1 | date:'yyyy-MM-dd'}}\\\" min=\\\"{{masterService.date2 | date:'yyyy-MM-dd'}}\\\">\\r\\n                    </td>\\r\\n                    <td class=\\\"td-class\\\">\\r\\n                            <input type=\\\"date\\\"\\r\\n                         class=\\\"date-input form-control\\\" placeholder=\\\"Year Start Date\\\"\\r\\n                                [(ngModel)]=\\\"_reportFilterService.AdditionalCostSummaryObj.AdditionalCostSummary_DATE2\\\"\\r\\n                                (change)=\\\"changeEndDate($event.target.value,'AD')\\\" max=\\\"{{masterService.date1 | date:'yyyy-MM-dd'}}\\\" min=\\\"{{masterService.date2 | date:'yyyy-MM-dd'}}\\\">\\r\\n                    </td>\\r\\n                </tr>\\r\\n                <tr>\\r\\n                    <td class=\\\"td-class\\\">\\r\\n                     <nepali-date-picker name=\\\"nepaliDateFrom\\\" [id]=\\\"'nepaliDatefrom'\\\"\\r\\n                     (change)=\\\"changestartDate($event.detail.value,'BS')\\\"\\r\\n                     [label]=\\\"'From'\\\"\\r\\n                     [(ngModel)]=\\\"_reportFilterService.AdditionalCostSummaryObj.AdditionalCostSummary_BSDATE1\\\">\\r\\n                     </nepali-date-picker>\\r\\n\\r\\n                            <!-- <input id=\\\"nepaliDate\\\"\\r\\n                                style=\\\"text-align:center;\\\"\\r\\n                                class=\\\"nepali-calendar ndp-nepali-calendar date-input form-control\\\"\\r\\n                                [(ngModel)]=\\\"_reportFilterService.AdditionalCostSummaryObj.AdditionalCostSummary_BSDATE1\\\" type=\\\"text\\\"\\r\\n                                (change)=\\\"changeEntryDate($event.target.value,'BS')\\\"\\r\\n                                placeholder=\\\"yyyy-mm-dd\\\" />            -->\\r\\n                    </td>\\r\\n                    <td class=\\\"td-class\\\">\\r\\n                     <nepali-date-picker name=\\\"nepaliDateTo\\\" [id]=\\\"'nepaliDateTo'\\\"\\r\\n                     (change)=\\\"changeEndDate($event.detail.value,'BS')\\\"\\r\\n                     [label]=\\\"'To'\\\"\\r\\n                     [(ngModel)]=\\\"_reportFilterService.AdditionalCostSummaryObj.AdditionalCostSummary_BSDATE2\\\">\\r\\n                     </nepali-date-picker>\\r\\n                            <!-- <input id=\\\"nepaliDate\\\" style=\\\"text-align:center;\\\"\\r\\n                            class=\\\"nepali-calendar ndp-nepali-calendar date-input form-control\\\"\\r\\n                                [(ngModel)]=\\\"_reportFilterService.AdditionalCostSummaryObj.AdditionalCostSummary_BSDATE2\\\" type=\\\"text\\\"\\r\\n                                (change)=\\\"changeEndDate($event.target.value,'BS')\\\"\\r\\n                                placeholder=\\\"yyyy-mm-dd\\\" /> -->\\r\\n                    </td>\\r\\n                </tr>\\r\\n            </table>\\r\\n        </fieldset>\\r\\n \\r\\n          <fieldset>\\r\\n             <legend>Division Selection:</legend>\\r\\n             <select [(ngModel)]=\\\"_reportFilterService.AdditionalCostSummaryObj.AdditionalCostSummary_DIV\\\"\\r\\n                style=\\\"height: 30px !important;\\\" class=\\\"form-control input-text\\\">\\r\\n                <option value=\\\"%\\\" *ngIf=\\\"masterService.userSetting.userwisedivision==0 ||  masterService.showAll\\\">ALL</option>\\r\\n                <option *ngFor=\\\"let div of division\\\" value=\\\"{{ div.INITIAL }}\\\">\\r\\n                   {{ div.NAME }}\\r\\n                </option>\\r\\n             </select>\\r\\n          </fieldset>\\r\\n          <fieldset *ngIf=\\\"masterService.userSetting.enableCostCenter == 1 || masterService.userSetting.enableCostCenter == 2\\\">\\r\\n            <legend>Cost Center</legend>\\r\\n            <input type=\\\"text\\\" style=\\\"font-weight: bold;\\\" class=\\\"form-control\\\"\\r\\n            [(ngModel)]=\\\"_reportFilterService.AdditionalCostSummaryObj.AdditionalCostSummary_COSTCENTERNAME\\\" placeholder=\\\"Press Enter to select COST CENTER\\\"\\r\\n            (keydown.Tab)=\\\"showCostCenterGroupList()\\\" (keydown.enter)=\\\"showCostCenterGroupList()\\\">          \\r\\n            \\r\\n          </fieldset>\\r\\n \\r\\n        \\r\\n \\r\\n       </div>\\r\\n       <!-- Right Column -->\\r\\n       <div class=\\\"col-md-6\\\" style=\\\"padding-top: 2%;\\\">\\r\\n         <fieldset>\\r\\n            <legend>Report Style:</legend>\\r\\n            <label class=\\\"smallBoldLabel\\\" style=\\\"padding-right:15px;\\\"><input type=\\\"radio\\\" name=\\\"BalViewOpt\\\"\\r\\n                  [(ngModel)]=\\\"_reportFilterService.AdditionalCostSummaryObj.AdditionalCostSummary_ISSUMMARY\\\" value=1>&nbsp;Summary\\r\\n               Report</label>\\r\\n            <label class=\\\"smallBoldLabel\\\"><input type=\\\"radio\\\" name=\\\"BalViewOpt\\\"\\r\\n                  [(ngModel)]=\\\"_reportFilterService.AdditionalCostSummaryObj.AdditionalCostSummary_ISSUMMARY\\\" value=0>&nbsp;Detail Report</label>\\r\\n         </fieldset>\\r\\n         <fieldset>\\r\\n            <legend>Supplier Selection: </legend>\\r\\n            <input type=\\\"text\\\" style=\\\"font-weight: bold;\\\" class=\\\"form-control\\\"\\r\\n                [(ngModel)]=\\\"_reportFilterService.AdditionalCostSummaryObj.AdditionalCostSummary_ACNAME\\\" placeholder=\\\"Press Enter or Tab for Supplier\\\"\\r\\n                (keydown.Tab)=\\\"AccountEnterClicked($event)\\\" (keydown.enter)=\\\"AccountEnterClicked($event)\\\">\\r\\n        </fieldset>\\r\\n         <fieldset>\\r\\n            <legend>Voucher No Selection: </legend>\\r\\n            <input type=\\\"text\\\" style=\\\"font-weight: bold;\\\" class=\\\"form-control\\\"\\r\\n                [(ngModel)]=\\\"_reportFilterService.AdditionalCostSummaryObj.AdditionalCostSummary_VOUCHERNO\\\" placeholder=\\\"Press Enter or Tab for Voucher No\\\"\\r\\n                (keydown.Tab)=\\\"VoucherNoEnterClicked($event)\\\" (keydown.enter)=\\\"VoucherNoEnterClicked($event)\\\">\\r\\n        </fieldset>\\r\\n\\r\\n \\r\\n       </div>\\r\\n       <div class=\\\"btn\\\" style=\\\"float : right;\\\">\\r\\n          <button class=\\\"btn btn-info confirm-btn\\\" type=\\\"button\\\" (click)=onload()>RUN</button>\\r\\n          <button type=\\\"button\\\" title=\\\"Cancel\\\" class=\\\"btn btn-info\\\" (click)=\\\"closeReportBox()\\\">Close</button>\\r\\n       </div>\\r\\n \\r\\n    </div>\\r\\n\\r\\n    <generic-popup-grid #genericGridVoucherNo [popupsettings]=\\\"gridPopupSettingsForVoucherList\\\"\\r\\n    (onItemDoubleClick)=\\\"dblClickVoucherSelect($event)\\\">\\r\\n</generic-popup-grid>\\r\\n\\r\\n<generic-popup-grid #genericGridAccount [popupsettings]=\\\"gridPopupSettingsForAccountList\\\"\\r\\n(onItemDoubleClick)=\\\"dblClickAccountSelect($event)\\\">\\r\\n</generic-popup-grid>\\r\\n<generic-popup-grid #genericGridCostCenterList [popupsettings]=\\\"gridCostCenterListPopupSettings\\\"\\r\\n(onItemDoubleClick)=\\\"onCostCenterSelect($event)\\\"></generic-popup-grid>\\r\\n<generic-popup-grid #genericGridCostCenterGroupList [popupsettings]=\\\"gridCostCenterGroupListPopupSettings\\\"\\r\\n(onItemDoubleClick)=\\\"onCostCenterGroupSelect($event)\\\"></generic-popup-grid>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/ReportDialogs/AdditionalCost-Voucherwise-Report/additionalcost-voucherwise-report.component.html\n// module id = 1721\n// module chunks = 0","module.exports = \"<style>\\r\\n   .input-text {\\r\\n      width: 100%;\\r\\n      /* height: 30px !important; */\\r\\n      font-weight: bold;\\r\\n   }\\r\\n\\r\\n   .td-class {\\r\\n      border: none !important;\\r\\n   }\\r\\n\\r\\n   .date-input {\\r\\n      width: 93%;\\r\\n      font-size: 12px !important;\\r\\n      height: 30px !important;\\r\\n   }\\r\\n    @media screen and (max-width:991px) {\\r\\n         .report-container{\\r\\n           width: 100% !important;\\r\\n    }\\r\\n    .report-height{\\r\\n        height:52vh; \\r\\n        overflow:auto;\\r\\n    }\\r\\n    }\\r\\n         @media screen and (max-width:767px) {\\r\\n            .smallBoldLabel{\\r\\n                  width: auto !important;\\r\\n            }\\r\\n            \\r\\n        \\r\\n    }\\r\\n</style>\\r\\n<div class=\\\"container report-container\\\" style=\\\"background-color : #ffffff; padding :1%; height : auto;  \\\">\\r\\n   <div class=\\\"row\\\">\\r\\n      <div class=\\\"modal-header\\\" style=\\\"width : 97%; margin : 0px auto;\\\">\\r\\n         <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" (click)=\\\"closeReportBox()\\\">&times;</button>\\r\\n         <h4 class=\\\"modal-title\\\">Balance Sheet Report</h4>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-12 report-height\\\" style=\\\"padding-top: 2%;\\\">\\r\\n         <!-- Left Column -->\\r\\n         <div class=\\\"col-md-6\\\">\\r\\n            <fieldset>\\r\\n               <legend style=\\\"font-size:11px;font-weight: bold; width:auto;margin-bottom: -4px;\\\">Date Range Selection :\\r\\n               </legend>\\r\\n               <table>\\r\\n                  <tr>\\r\\n                     <!-- <td class=\\\"td-class\\\"><label class=\\\"smallBoldLabel\\\">From:(AD)</label></td> -->\\r\\n                     <!-- <td class=\\\"td-class\\\"><label class=\\\"smallBoldLabel\\\">To:(AD)</label></td> -->\\r\\n                  </tr>\\r\\n                  <tr>\\r\\n                     <td class=\\\"td-class\\\">\\r\\n                        <input type=\\\"date\\\" class=\\\"date-input form-control\\\" placeholder=\\\"Year Start Date\\\"\\r\\n                           [(ngModel)]=\\\"_reportFilterService.BalanceSheetObj.BalanceSheet_DATE2\\\"\\r\\n                           (change)=\\\"changeEndDate($event.target.value,'AD')\\\"\\r\\n                           max=\\\"{{masterService.date1 | date:'yyyy-MM-dd'}}\\\"\\r\\n                           min=\\\"{{masterService.date2 | date:'yyyy-MM-dd'}}\\\">\\r\\n                     </td>\\r\\n                     <td class=\\\"td-class\\\">\\r\\n                        <!-- <td class=\\\"td-class\\\"> -->\\r\\n                           <nepali-date-picker name=\\\"nepaliDateFrom\\\" [id]=\\\"'nepaliDatefrom'\\\"\\r\\n                              (change)=\\\"changeEndDate($event.detail.value,'BS')\\\" [label]=\\\"'From'\\\"\\r\\n                              [(ngModel)]=\\\"_reportFilterService.BalanceSheetObj.BalanceSheet_BSDATE2\\\">\\r\\n                           </nepali-date-picker>\\r\\n                        <!-- </td> -->\\r\\n\\r\\n                        <!-- <input type=\\\"date\\\" class=\\\"date-input form-control\\\" placeholder=\\\"Year Start Date\\\"\\r\\n                           [(ngModel)]=\\\"_reportFilterService.BalanceSheetObj.BalanceSheet_DATE2\\\"\\r\\n                           (change)=\\\"changeEndDate($event.target.value,'AD')\\\"\\r\\n                           max=\\\"{{masterService.date1 | date:'yyyy-MM-dd'}}\\\"\\r\\n                           min=\\\"{{masterService.date2 | date:'yyyy-MM-dd'}}\\\"> -->\\r\\n                     </td>\\r\\n                  </tr>\\r\\n                  <tr>\\r\\n                     <!-- <td class=\\\"td-class\\\">\\r\\n                        <nepali-date-picker name=\\\"nepaliDateFrom\\\" [id]=\\\"'nepaliDatefrom'\\\"\\r\\n                           (change)=\\\"changeEntryDate($event.detail.value,'BS')\\\" [label]=\\\"'From'\\\"\\r\\n                           [(ngModel)]=\\\"_reportFilterService.BalanceSheetObj.BalanceSheet_BSDATE1\\\">\\r\\n                        </nepali-date-picker>\\r\\n                     </td> -->\\r\\n                     <!-- <td class=\\\"td-class\\\">\\r\\n                        <nepali-date-picker name=\\\"nepaliDateFrom\\\" [id]=\\\"'nepaliDateTo'\\\"\\r\\n                           (change)=\\\"changeEndDate($event.detail.value,'BS')\\\" [label]=\\\"'To'\\\"\\r\\n                           [(ngModel)]=\\\"_reportFilterService.BalanceSheetObj.BalanceSheet_BSDATE2\\\">\\r\\n                        </nepali-date-picker>\\r\\n                     </td> -->\\r\\n                  </tr>\\r\\n               </table>\\r\\n            </fieldset>\\r\\n\\r\\n    <fieldset *ngIf=\\\"masterService.userSetting.EnableManualStockValuation==1\\\" style=\\\"margin-top: 10px;\\\">\\r\\n               <legend style=\\\"font-size:11px;font-weight: bold; width:auto\\\">Stock\\r\\n                  Valuation :</legend>\\r\\n               <div class=\\\"col-md-12\\\" style=\\\"margin-top:5px;\\\">\\r\\n                  <div class=\\\"opening\\\">\\r\\n                     <div class=\\\"col-md-4\\\" style=\\\"padding: 0px;\\\">\\r\\n                        <label class=\\\"smallBoldLabel\\\"\\r\\n                           style=\\\"margin-left: 0px;padding-top:5px;margin-top: -10px;\\\">Opening Stock:</label>\\r\\n                     </div>\\r\\n                     <div class=\\\"col-md-8\\\" style=\\\"padding: 0px;\\\">\\r\\n                        <input type=\\\"number\\\" class=\\\"form-control\\\" style=\\\"height: 25px;margin-top: -10px;\\\"\\r\\n                           [(ngModel)]=_reportFilterService.BalanceSheetObj.BalanceSheet_OSTOCK>\\r\\n                     </div>\\r\\n                  </div>\\r\\n               </div>\\r\\n               <div class=\\\"col-md-12\\\" style=\\\"margin-top:5px;\\\">\\r\\n                  <div class=\\\"closing\\\">\\r\\n                     <div class=\\\"col-md-4\\\" style=\\\"padding: 0px;\\\">\\r\\n                        <label class=\\\"smallBoldLabel\\\" style=\\\"margin-left: 0px; padding-top:5px;\\\">Closing Stock:</label>\\r\\n                     </div>\\r\\n                     <div class=\\\"col-md-8\\\" style=\\\"padding: 0px;\\\">\\r\\n                        <input type=\\\"number\\\" class=\\\"form-control\\\" style=\\\"height: 25px;\\\"\\r\\n                           [(ngModel)]=_reportFilterService.BalanceSheetObj.BalanceSheet_CSTOCK>\\r\\n                     </div>\\r\\n                  </div>\\r\\n               </div>\\r\\n               <div *ngIf=\\\"userSetting.ENABLECCENTER_INFINALREPORT==1\\\" class=\\\"col-md-12\\\" style=\\\"margin-top:10px; \\\">\\r\\n                  <div class=\\\"pl-action\\\">\\r\\n                     <div class=\\\"cal-btn col-md-4\\\" style=\\\"padding: 0px; float:right;\\\">\\r\\n                        <button class=\\\"btn btn-info\\\" style=\\\" float:right;\\\" (click)=\\\"calcStock()\\\">Calculate</button>\\r\\n                     </div>\\r\\n                  </div>\\r\\n               </div>\\r\\n            </fieldset>\\r\\n            <fieldset>\\r\\n               <legend style=\\\"font-size:11px;font-weight: bold; width:auto\\\">Division Selection:</legend>\\r\\n               <select [(ngModel)]=\\\"_reportFilterService.BalanceSheetObj.BalanceSheet_DIV\\\"\\r\\n                  style=\\\"height: 30px !important;\\\" class=\\\"form-control input-text\\\" (change)=\\\"changeDivision()\\\">\\r\\n                  <option value=\\\"%\\\" *ngIf=\\\"masterService.userSetting.userwisedivision==0 ||  masterService.showAll\\\">ALL\\r\\n                  </option>\\r\\n                  <option *ngFor=\\\"let div of division\\\" value=\\\"{{ div.INITIAL }}\\\">\\r\\n                     {{ div.NAME }}\\r\\n                  </option>\\r\\n               </select>\\r\\n            </fieldset>\\r\\n\\r\\n\\r\\n         </div>\\r\\n         <!-- Right Column -->\\r\\n         <div class=\\\"col-md-6\\\">\\r\\n            <fieldset *ngIf=\\\"userSetting.IS_NESTLE==1\\\">\\r\\n               <legend style=\\\"font-size:11px;font-weight: bold; width:auto\\\">Company Selection:</legend>\\r\\n               <select [(ngModel)]=\\\"_reportFilterService.BalanceSheetObj.BalanceSheet_COMPANYTYPE\\\"\\r\\n                  style=\\\"height: 30px !important;\\\" class=\\\"form-control input-text\\\">\\r\\n                  <option value=\\\"DMS\\\">DMS</option>\\r\\n                  <option value=\\\"NONDMS\\\">NON DMS</option>\\r\\n               </select>\\r\\n            </fieldset>\\r\\n\\r\\n            \\r\\n            <fieldset *ngIf=\\\"userSetting.ENABLECCENTER_INFINALREPORT==1\\\">\\r\\n               <legend>Cost Center:</legend>\\r\\n               <select [(ngModel)]=\\\"_reportFilterService.BalanceSheetObj.BalanceSheet_CostCenter\\\"\\r\\n                   style=\\\"height: 30px !important;\\\" class=\\\"form-control input-text\\\">\\r\\n                   <option value=\\\"%\\\"> </option>\\r\\n                   <option *ngFor=\\\"let i of CostcenterList\\\" value={{i.CCID}}>{{i.COSTCENTERNAME}}\\r\\n                   </option>\\r\\n               </select>\\r\\n           </fieldset>\\r\\n            <fieldset style=\\\"padding-bottom: 5px;\\\">\\r\\n               <legend style=\\\"font-size:11px;font-weight: bold; width:auto\\\">Report Format :</legend>\\r\\n               <label class=\\\"smallBoldLabel\\\"><input type=\\\"radio\\\" name=\\\"reportmode\\\"\\r\\n                     [(ngModel)]=\\\"_reportFilterService.BalanceSheetObj.BalanceSheet_VERTICALFORMAT\\\"\\r\\n                     value=1>&nbsp;Vertical\\r\\n                  Format </label>&nbsp;&nbsp;&nbsp;\\r\\n               <label class=\\\"smallBoldLabel\\\" style=\\\"clear : both;\\\"><input type=\\\"radio\\\" name=\\\"reportmode\\\"\\r\\n                     [(ngModel)]=\\\"_reportFilterService.BalanceSheetObj.BalanceSheet_VERTICALFORMAT\\\"\\r\\n                     value=0>&nbsp;Horizontal\\r\\n                  Format\\r\\n               </label>\\r\\n            </fieldset>\\r\\n\\r\\n            <fieldset style=\\\"margin-top: 10px;\\\">\\r\\n               <legend style=\\\"font-size:11px;font-weight: bold; width:auto\\\">Report\\r\\n                  Options :</legend>\\r\\n               <div class=\\\"col-md-12 checkbox\\\" style=\\\"padding-top:5px\\\">\\r\\n                  <label class=\\\"smallBoldLabel\\\" style=\\\"margin-left: 0px;\\\">\\r\\n                     <input type=\\\"checkbox\\\"\\r\\n                        [(ngModel)]=\\\"_reportFilterService.BalanceSheetObj.BalanceSheet_SHOWSUBLEDGER\\\" (change)=\\\"\\r\\n                   $event.target.checked\\r\\n                     ? (_reportFilterService.BalanceSheetObj.BalanceSheet_SHOWSUBLEDGER = 1)\\r\\n                     : (_reportFilterService.BalanceSheetObj.BalanceSheet_SHOWSUBLEDGER = 0)\\\">&nbsp;&nbsp;Show Sub\\r\\n                     Ledger\\r\\n                     In\\r\\n                     Balance Sheet\\r\\n                  </label>\\r\\n               </div>\\r\\n               <div class=\\\"col-md-12 checkbox\\\" style=\\\"padding-top:5px\\\">\\r\\n                  <label class=\\\"smallBoldLabel\\\" style=\\\"margin-left: 0px;\\\">\\r\\n                     <input type=\\\"checkbox\\\"\\r\\n                        [(ngModel)]=\\\"_reportFilterService.BalanceSheetObj.BalanceSheet_SHOWDEBTORSCREDITORS\\\" (change)=\\\"\\r\\n                   $event.target.checked\\r\\n                     ? (_reportFilterService.BalanceSheetObj.BalanceSheet_SHOWDEBTORSCREDITORS = 1)\\r\\n                     : (_reportFilterService.BalanceSheetObj.BalanceSheet_SHOWDEBTORSCREDITORS = 0)\\\">&nbsp;&nbsp;Show\\r\\n                     Debtors /\\r\\n                     Creditors Party List\\r\\n                  </label>\\r\\n               </div>\\r\\n            </fieldset>\\r\\n\\r\\n         </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"modal-footer\\\" style=\\\"width : 97%; margin : 0px auto;\\\">\\r\\n         <button class=\\\"btn btn-info confirm-btn\\\" type=\\\"button\\\" (click)=onload()>RUN</button>\\r\\n         <button type=\\\"button\\\" (click)=\\\"closeReportBox()\\\" title=\\\"Cancel\\\" class=\\\"btn btn-info\\\">Close</button>\\r\\n      </div>\\r\\n\\r\\n   </div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/ReportDialogs/BalanceSheetReport/balance-sheet-report.component.html\n// module id = 1722\n// module chunks = 0","module.exports = \"<style>\\r\\n    .action-btn {\\r\\n        width: 80%;\\r\\n        height: 80%;\\r\\n        display: block;\\r\\n        margin: 0 auto;\\r\\n        background-color: inherit;\\r\\n        border: none;\\r\\n    }\\r\\n\\r\\n    .input-text {\\r\\n        width: 100%;\\r\\n        /* height: 30px !important; */\\r\\n        font-weight: bold;\\r\\n    }\\r\\n\\r\\n    .td-class {\\r\\n        border: none !important;\\r\\n    }\\r\\n\\r\\n    .date-input {\\r\\n        width: 93%;\\r\\n        font-size: 12px !important;\\r\\n        height: 30px !important;\\r\\n    }\\r\\n      @media screen and (max-width:991px) {\\r\\n         .report-container{\\r\\n           width: 100% !important;\\r\\n    }\\r\\n    .report-height{\\r\\n        height:52vh; \\r\\n        overflow:auto;\\r\\n    }\\r\\n    }\\r\\n         @media screen and (max-width:767px) {\\r\\n            .smallBoldLabel{\\r\\n                  width: auto !important;\\r\\n            }\\r\\n            \\r\\n        \\r\\n    }\\r\\n</style>\\r\\n<div class=\\\"container report-container\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <!-- Filter Starts -->\\r\\n        <div class=\\\"col-12 col-md-12\\\">\\r\\n            <div style=\\\"background-color : #ffffff;  width: 100%;\\\">\\r\\n                <div class=\\\"row\\\">\\r\\n                    <div class=\\\"modal-header\\\" style=\\\"border:0px;\\\">\\r\\n                        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\"\\r\\n                            (click)=\\\"closeReportBox()\\\">&times;</button>\\r\\n                        <h4 class=\\\"modal-title\\\" style=\\\"padding-left: 3%;\\\">Debtors Bill Tracking Report</h4>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-md-12 report-height \\\" style=\\\"padding-top: 2%;\\\">\\r\\n                        <!-- Left Side-->\\r\\n                        <div class=\\\"col-md-6\\\">\\r\\n                            <fieldset>\\r\\n                                <legend>As On Date :</legend>\\r\\n                                <table>\\r\\n                                    <!-- <tr>\\r\\n                                        <td class=\\\"td-class\\\"><label class=\\\"smallBoldLabel\\\">From:(AD)</label></td>\\r\\n                                        <td class=\\\"td-class\\\"><label class=\\\"smallBoldLabel\\\">To:(AD)</label></td>\\r\\n                                    </tr> -->\\r\\n                                    <tr>\\r\\n                                        <td class=\\\"td-class\\\">\\r\\n                                            <input type=\\\"date\\\" class=\\\"date-input form-control\\\"\\r\\n                                                placeholder=\\\"Year Start Date\\\"\\r\\n                                                [(ngModel)]=\\\"_reportFilterService.BillTrackingObj.BillTracking_DATE1\\\"\\r\\n                                                (change)=\\\"changeEntryDate($event.target.value,'AD')\\\">\\r\\n                                        </td>\\r\\n                                        <!-- <td class=\\\"td-class\\\">\\r\\n                                            <input type=\\\"date\\\" class=\\\"date-input form-control\\\"\\r\\n                                                placeholder=\\\"Year Start Date\\\"\\r\\n                                                [(ngModel)]=\\\"_reportFilterService.BillTrackingObj.BillTracking_DATE2\\\"\\r\\n                                                (change)=\\\"changeEndDate($event.target.value,'AD')\\\">\\r\\n                                        </td> -->\\r\\n                                        <td class=\\\"td-class\\\">\\r\\n                                            <nepali-date-picker name=\\\"nepaliDateFrom\\\" [id]=\\\"'nepaliDatefrom'\\\"\\r\\n                                                (change)=\\\"changeEntryDate($event.detail.value,'BS')\\\" [label]=\\\"'From'\\\"\\r\\n                                                [(ngModel)]=\\\"_reportFilterService.BillTrackingObj.BillTracking_BSDATE1\\\">\\r\\n                                            </nepali-date-picker>\\r\\n                                        </td>\\r\\n                                    </tr>\\r\\n                                    <!-- <tr>\\r\\n                                        <td class=\\\"td-class\\\">\\r\\n                                            <nepali-date-picker name=\\\"nepaliDateFrom\\\" [id]=\\\"'nepaliDatefrom'\\\"\\r\\n                                                (change)=\\\"changeEntryDate($event.detail.value,'BS')\\\" [label]=\\\"'From'\\\"\\r\\n                                                [(ngModel)]=\\\"_reportFilterService.BillTrackingObj.BillTracking_BSDATE1\\\">\\r\\n                                            </nepali-date-picker>\\r\\n                                        </td>\\r\\n                                        <td class=\\\"td-class\\\">\\r\\n                                            <nepali-date-picker name=\\\"nepaliDateFrom\\\" [id]=\\\"'nepaliDateTo'\\\"\\r\\n                                                (change)=\\\"changeEndDate($event.detail.value,'BS')\\\" [label]=\\\"'To'\\\"\\r\\n                                                [(ngModel)]=\\\"_reportFilterService.BillTrackingObj.BillTracking_BSDATE2\\\">\\r\\n                                            </nepali-date-picker>\\r\\n                                        </td>\\r\\n                                    </tr> -->\\r\\n                                </table>\\r\\n                            </fieldset>\\r\\n\\r\\n                            <fieldset>\\r\\n                                <legend>Division Selection:</legend>\\r\\n                                <select [(ngModel)]=\\\"_reportFilterService.BillTrackingObj.BillTracking_DIV\\\"\\r\\n                                    style=\\\"height: 30px !important;\\\" class=\\\"form-control input-text\\\">\\r\\n                                    <option value=\\\"%\\\"\\r\\n                                        *ngIf=\\\"masterService.userSetting.userwisedivision==0 ||  masterService.showAll\\\">\\r\\n                                        ALL</option>\\r\\n                                    <option *ngFor=\\\"let div of division\\\" value=\\\"{{ div.INITIAL }}\\\">\\r\\n                                        {{ div.NAME }}\\r\\n                                    </option>\\r\\n                                </select>\\r\\n                            </fieldset>\\r\\n                            <fieldset>\\r\\n                                <legend>Cost Center:</legend>\\r\\n                                <select [(ngModel)]=\\\"_reportFilterService.BillTrackingObj.BillTracking_CostCenter\\\"\\r\\n                                    style=\\\"height: 30px !important;\\\" class=\\\"form-control input-text\\\">\\r\\n                                    <option value=\\\"%\\\"> </option>\\r\\n                                    <option *ngFor=\\\"let i of CostcenterList\\\" value={{i.CCID}}>{{i.COSTCENTERNAME}}\\r\\n                                    </option>\\r\\n                                </select>\\r\\n                            </fieldset>\\r\\n\\r\\n                            <fieldset>\\r\\n                                <legend>Report Type:</legend>\\r\\n                                <label class=\\\"smallBoldLabel\\\" style=\\\"padding-right:15px;\\\"><input type=\\\"radio\\\" name=\\\"BalViewOpt\\\"\\r\\n                                      [(ngModel)]=\\\"_reportFilterService.BillTrackingObj.BillTracking_Detail\\\" value=0>&nbsp;Summary Report</label>\\r\\n                                <label class=\\\"smallBoldLabel\\\"><input type=\\\"radio\\\" name=\\\"BalViewOpt\\\"\\r\\n                                      [(ngModel)]=\\\"_reportFilterService.BillTrackingObj.BillTracking_Detail\\\" value=1>&nbsp;Detail Report</label>\\r\\n                             </fieldset>\\r\\n                             \\r\\n<!-- \\r\\n                            <fieldset>\\r\\n                                <legend>Voucher Type:</legend>\\r\\n                                <select [(ngModel)]=\\\"_reportFilterService.BillTrackingObj.BillTracking_VoucherType\\\"\\r\\n                                    style=\\\"height: 30px !important;\\\" class=\\\"form-control input-text\\\">\\r\\n                                    <option value=\\\"PV\\\">Payment Voucher</option>\\r\\n                                    <option value=\\\"RV\\\">Receipt Voucher</option>\\r\\n                                </select>\\r\\n                            </fieldset> -->\\r\\n                        </div>\\r\\n                        <!-- Left Side-->\\r\\n\\r\\n                        <!-- Right Side-->\\r\\n                        <div class=\\\"col-md-6 filter-part\\\">\\r\\n                            <fieldset>\\r\\n                                <legend>Party A/C Selection :</legend>\\r\\n                                <input type=\\\"text\\\" style=\\\"font-weight: bold;\\\" class=\\\"form-control\\\"\\r\\n                                    [(ngModel)]=\\\"_reportFilterService.BillTrackingObj.BillTracking_ACCNAME\\\"\\r\\n                                    placeholder=\\\"Press Enter or Tab for Account List\\\"\\r\\n                                    (keydown.Tab)=\\\"AccountEnterClicked($event)\\\"\\r\\n                                    (keydown.enter)=\\\"AccountEnterClicked($event)\\\"\\r\\n                                    (keypress)=\\\"keyPress($event)\\\">\\r\\n                            </fieldset>\\r\\n                        </div>\\r\\n                        <!-- Right Side-->\\r\\n\\r\\n                    </div>\\r\\n                    <div class=\\\"modal-footer\\\" style=\\\"width : 97%; margin : 0px auto;\\\">\\r\\n                        <button class=\\\"btn btn-info confirm-btn\\\" type=\\\"button\\\" (click)=onload()>RUN</button>\\r\\n                        <button type=\\\"button\\\" (click)=\\\"closeReportBox()\\\" title=\\\"Cancel\\\"\\r\\n                            class=\\\"btn btn-info\\\">Close</button>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <!-- Filter Ends -->\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div style=\\\"width:90%\\\" class=\\\"reportpopup\\\">\\r\\n    <generic-popup-grid #genericGridPartyLedger [popupsettings]=\\\"gridPopupSettingsForPartyLedgerList\\\"\\r\\n        (onItemDoubleClick)=\\\"dblClickAccountSelect($event)\\\">\\r\\n    </generic-popup-grid>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/ReportDialogs/BillTrackingReport/billtracking-report.component.html\n// module id = 1723\n// module chunks = 0","module.exports = \"<style>\\r\\n    .action-btn {\\r\\n        width: 80%;\\r\\n        height: 80%;\\r\\n        display: block;\\r\\n        margin: 0 auto;\\r\\n        background-color: inherit;\\r\\n        border: none;\\r\\n    }\\r\\n    .input-text{\\r\\n        width : 100%;\\r\\n        /* height: 30px !important; */\\r\\n        font-weight: bold;\\r\\n    }\\r\\n    .td-class{\\r\\n        border: none !important;\\r\\n    }\\r\\n\\r\\n    label{\\r\\n       font-size: 12px;\\r\\n       margin: 0px 10px;\\r\\n   }\\r\\n    .date-input{\\r\\n        width: 93%;\\r\\n        font-size: 12px !important;\\r\\n        height: 30px !important;\\r\\n    }\\r\\n     @media screen and (max-width:991px) {\\r\\n         .report-container{\\r\\n           width: 100% !important;\\r\\n    }\\r\\n    .reportForm{\\r\\n        height: 50vh !important;\\r\\n       \\r\\n    }\\r\\n    }\\r\\n     @media screen and (max-width:767px) {\\r\\n        .smallBoldLabel{\\r\\n            width: auto !important;\\r\\n        }\\r\\n          .report-container{\\r\\n           width: 85% !important;\\r\\n    }\\r\\n        \\r\\n    }\\r\\n   \\r\\n</style>\\r\\n<div class=\\\"container report-container\\\">\\r\\n    <div class=\\\"row \\\">\\r\\n        <!-- Filter Starts -->\\r\\n        <div class=\\\"col-12 col-md-12\\\">\\r\\n            <div  style=\\\"background-color : #ffffff;  width: 100%;\\\">\\r\\n                <div class=\\\"row\\\">\\r\\n                    <div class=\\\"modal-header\\\" style=\\\"border:0px;\\\">\\r\\n                        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\"\\r\\n                            (click)=\\\"closeReportBox()\\\">&times;</button>\\r\\n                        <h4 class=\\\"modal-title\\\"  style=\\\"padding-left: 3%;\\\">Cash Collection Voucher Report</h4>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-md-12 reportForm\\\" style=\\\"padding-top: 2%; height:auto; overflow:auto;\\\">\\r\\n                        <div class=\\\"col-md-6\\\">\\r\\n                            <fieldset>\\r\\n                                <legend style=\\\"font-size:11px;font-weight: bold; width:auto;margin-bottom: -4px;\\\">Date Range Selection :</legend>\\r\\n                                <table>\\r\\n                                    <tr>\\r\\n                                        <td class=\\\"td-class\\\"><label class=\\\"smallBoldLabel\\\">From:(AD)</label></td>\\r\\n                                        <td class=\\\"td-class\\\"><label class=\\\"smallBoldLabel\\\">To:(AD)</label></td>\\r\\n                                    </tr>\\r\\n                                    <tr>\\r\\n                                        <td class=\\\"td-class\\\">\\r\\n                                                <input type=\\\"date\\\"\\r\\n                                                class=\\\"date-input form-control\\\" placeholder=\\\"Year Start Date\\\"\\r\\n                                                    [(ngModel)]=\\\"_reportFilterService.CashCollectionVoucherObj.CashCollectionVoucher_DATE1\\\"\\r\\n                                                    (change)=\\\"changeEntryDate($event.target.value,'AD')\\\">\\r\\n                                        </td>\\r\\n                                        <td class=\\\"td-class\\\">\\r\\n                                                <input type=\\\"date\\\"\\r\\n                                                class=\\\"date-input form-control\\\" placeholder=\\\"Year Start Date\\\"\\r\\n                                                    [(ngModel)]=\\\"_reportFilterService.CashCollectionVoucherObj.CashCollectionVoucher_DATE2\\\"\\r\\n                                                    (change)=\\\"changeEndDate($event.target.value,'AD')\\\">\\r\\n                                        </td>\\r\\n                                    </tr>\\r\\n                                    <tr>\\r\\n                                        <td class=\\\"td-class\\\">\\r\\n                                          <nepali-date-picker name=\\\"nepaliDateFrom\\\" [id]=\\\"'nepaliDatefrom'\\\"\\r\\n                                            (change)=\\\"changeEntryDate($event.detail.value,'BS')\\\"\\r\\n                                            [label]=\\\"'From'\\\"\\r\\n                                            [(ngModel)]=\\\"_reportFilterService.CashCollectionVoucherObj.CashCollectionVoucher_BSDATE1\\\">\\r\\n                                          </nepali-date-picker>\\r\\n                                                <!-- <input id=\\\"nepaliDate\\\"\\r\\n                                                    style=\\\"text-align:center;\\\"\\r\\n                                                    class=\\\"nepali-calendar ndp-nepali-calendar date-input form-control\\\"\\r\\n                                                    [(ngModel)]=\\\"_reportFilterService.CashCollectionVoucherObj.CashCollectionVoucher_BSDATE1\\\" type=\\\"text\\\"\\r\\n                                                    (change)=\\\"changeEntryDate($event.target.value,'BS')\\\"\\r\\n                                                    placeholder=\\\"yyyy-mm-dd\\\" />                             -->\\r\\n                                        </td>\\r\\n                                        <td class=\\\"td-class\\\">\\r\\n                                          <nepali-date-picker name=\\\"nepaliDateFrom\\\" [id]=\\\"'nepaliDateTo'\\\"\\r\\n                                            (change)=\\\"changeEndDate($event.detail.value,'BS')\\\"\\r\\n                                            [label]=\\\"'To'\\\"\\r\\n                                            [(ngModel)]=\\\"_reportFilterService.CashCollectionVoucherObj.CashCollectionVoucher_BSDATE2\\\">\\r\\n                                          </nepali-date-picker>\\r\\n                                                <!-- <input id=\\\"nepaliDate\\\" style=\\\"text-align:center;\\\"\\r\\n                                                    class=\\\"nepali-calendar ndp-nepali-calendar date-input form-control\\\"\\r\\n                                                    [(ngModel)]=\\\"_reportFilterService.CashCollectionVoucherObj.CashCollectionVoucher_BSDATE2\\\" type=\\\"text\\\"\\r\\n                                                    (change)=\\\"changeEndDate($event.target.value,'BS')\\\"\\r\\n                                                    placeholder=\\\"yyyy-mm-dd\\\" /> -->\\r\\n                                        </td>\\r\\n                                    </tr>\\r\\n                                </table>\\r\\n                            </fieldset>\\r\\n                            </div>\\r\\n\\r\\n\\r\\n                        <!-- The One With Tree Part-->\\r\\n                        <div class=\\\"col-md-6 filter-part\\\">\\r\\n                            <fieldset>\\r\\n                                <legend>Voucher Status:</legend>\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <div class=\\\"col-md-12\\\">\\r\\n                                        <label for=\\\"\\\"><input type=\\\"radio\\\" [(ngModel)]=\\\"_reportFilterService.CashCollectionVoucherObj.CashCollectionVoucher_VoucherStatus\\\" value=0>&nbsp;All</label>\\r\\n                                        <label for=\\\"\\\"><input type=\\\"radio\\\" [(ngModel)]=\\\"_reportFilterService.CashCollectionVoucherObj.CashCollectionVoucher_VoucherStatus\\\" value=1>&nbsp;Voucher Generated</label>\\r\\n                                        <label for=\\\"\\\"><input type=\\\"radio\\\" [(ngModel)]=\\\"_reportFilterService.CashCollectionVoucherObj.CashCollectionVoucher_VoucherStatus\\\" value=2>&nbsp;Not Generated</label>\\r\\n\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </fieldset>\\r\\n                            <fieldset>\\r\\n                                <legend>Party A/C Selection :</legend>\\r\\n                                <input #partyAccountSelection type=\\\"text\\\" style=\\\"font-weight: bold;\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"_reportFilterService.CashCollectionVoucherObj.CashCollectionVoucher_PartyName\\\"\\r\\n                                    placeholder=\\\"Press Enter or Tab for Party List\\\" (keydown.Tab)=\\\"AccountEnterClicked($event)\\\" (ngModelChange)=\\\"onValueChange()\\\"\\r\\n                                    (keydown.enter)=\\\"AccountEnterClicked($event)\\\">\\r\\n                            </fieldset>                        \\r\\n\\r\\n                  \\r\\n\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"modal-footer\\\" style=\\\"width : 97%; margin : 0px auto;\\\">\\r\\n                        <button class=\\\"btn btn-info confirm-btn\\\" type=\\\"button\\\" (click)=onload()>RUN</button>\\r\\n                        <button type=\\\"button\\\" (click)=\\\"closeReportBox()\\\" title=\\\"Cancel\\\"\\r\\n                            class=\\\"btn btn-info\\\">Close</button>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <!-- Filter Ends -->\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div style=\\\"width:90%\\\" class=\\\"reportpopup\\\">\\r\\n    <generic-popup-grid #genericGridPartyLedger [popupsettings]=\\\"gridPopupSettingsForPartyLedgerList\\\"\\r\\n    (onItemDoubleClick)=\\\"dblClickAccountSelect($event)\\\">\\r\\n</generic-popup-grid>\\r\\n</div>\\r\\n\\r\\n\\r\\n<div style=\\\"width:90%\\\" class=\\\"reportpopup\\\">\\r\\n    <generic-popup-grid #genericGridMultiplePartyLedger [popupsettings]=\\\"gridPopupSettingsForMultiplePartyLedgerList\\\"\\r\\n    (onItemDoubleClick)=\\\"dblClickMultipleAccountSelect($event)\\\">\\r\\n</generic-popup-grid>\\r\\n</div>\\r\\n\\r\\n<div style=\\\"width:90%\\\" class=\\\"reportpopup\\\">\\r\\n    <generic-popup-grid #genericGridMultipleGroupAccount [popupsettings]=\\\"gridPopupSettingsForMultipleGroupAccountList\\\"\\r\\n    (onItemDoubleClick)=\\\"dblClickGroupAccountSelect($event)\\\">\\r\\n</generic-popup-grid>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/ReportDialogs/Cash-Collection-Voucher-Report/cash-collection-voucher-report.component.html\n// module id = 1724\n// module chunks = 0","module.exports = \"<style>\\r\\n    .input-text{\\r\\n        width : 100%;\\r\\n        /* height: 30px !important; */\\r\\n        font-weight: bold;\\r\\n    }\\r\\n    .td-class{\\r\\n        border: none !important;\\r\\n    }\\r\\n    .date-input{\\r\\n        width: 93%;\\r\\n        font-size: 12px !important;\\r\\n        height: 30px !important;\\r\\n    }\\r\\n       @media screen and (max-width:991px) {\\r\\n         .report-container{\\r\\n           width: 100% !important;\\r\\n    }\\r\\n    .report-height{\\r\\n        height:52vh; \\r\\n        overflow:auto;\\r\\n    }\\r\\n    }\\r\\n         @media screen and (max-width:767px) {\\r\\n            .smallBoldLabel{\\r\\n                  width: auto !important;\\r\\n            }\\r\\n            \\r\\n        \\r\\n    }\\r\\n</style>\\r\\n<div class=\\\"container report-container \\\" style=\\\"background-color : #ffffff; padding :1%; height : auto;  \\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"modal-header\\\" style=\\\"width : 97%; margin : 0px auto;\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" (click)=\\\"closeReportBox()\\\">&times;</button>\\r\\n            <h4 class=\\\"modal-title\\\">Cash & Bank Book Report</h4>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-12 report-height\\\">\\r\\n            <!-- Left Column -->\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n                <fieldset>\\r\\n                    <legend style=\\\"font-size:11px;font-weight: bold; width:auto\\\">Date Range Selection :</legend>\\r\\n                <table>\\r\\n                        <tr>\\r\\n                            <td class=\\\"td-class\\\"><label class=\\\"smallBoldLabel\\\">From:(AD)</label></td>\\r\\n                            <td class=\\\"td-class\\\"><label class=\\\"smallBoldLabel\\\">To:(AD)</label></td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td class=\\\"td-class\\\">\\r\\n                                    <input type=\\\"date\\\"\\r\\n                                    class=\\\"date-input form-control\\\" placeholder=\\\"Year Start Date\\\"\\r\\n                                        [(ngModel)]=\\\"_reportFilterService.CashAndBankBookObj.CashBankBook_DATE1\\\"\\r\\n                                        (change)=\\\"changeEntryDate($event.target.value,'AD')\\\" (focusout)=\\\"focusOutFromDate($event.target.value)\\\" max=\\\"{{masterService.date1 | date:'yyyy-MM-dd'}}\\\" min=\\\"{{masterService.date2 | date:'yyyy-MM-dd'}}\\\">\\r\\n                            </td>\\r\\n                            <td class=\\\"td-class\\\">\\r\\n                                    <input type=\\\"date\\\"\\r\\n                                    class=\\\"date-input form-control\\\" placeholder=\\\"Year Start Date\\\"\\r\\n                                        [(ngModel)]=\\\"_reportFilterService.CashAndBankBookObj.CashBankBook_DATE2\\\"\\r\\n                                        (change)=\\\"changeEndDate($event.target.value,'AD')\\\" max=\\\"{{masterService.date1 | date:'yyyy-MM-dd'}}\\\" min=\\\"{{masterService.date2 | date:'yyyy-MM-dd'}}\\\">\\r\\n                            </td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td class=\\\"td-class\\\">\\r\\n                              <nepali-date-picker name=\\\"nepaliDateFrom\\\" [id]=\\\"'nepaliDatefrom'\\\"\\r\\n                              (change)=\\\"changeEntryDate($event.detail.value,'BS')\\\"\\r\\n                              [label]=\\\"'From'\\\"\\r\\n                              [(ngModel)]=\\\"_reportFilterService.CashAndBankBookObj.CashBankBook_BSDATE1\\\">\\r\\n                            </nepali-date-picker>\\r\\n                                     <!-- <input id=\\\"nepaliDate\\\"\\r\\n                                     style=\\\"text-align:center;\\\"\\r\\n                                     class=\\\"nepali-calendar ndp-nepali-calendar date-input form-control\\\"\\r\\n                                        [(ngModel)]=\\\"_reportFilterService.CashAndBankBookObj.CashBankBook_BSDATE1\\\" type=\\\"text\\\"\\r\\n                                        (change)=\\\"changeEntryDate($event.target.value,'BS')\\\"\\r\\n                                        placeholder=\\\"yyyy-mm-dd\\\" />                 -->\\r\\n                            </td>\\r\\n                            <td class=\\\"td-class\\\">\\r\\n                              <nepali-date-picker name=\\\"nepaliDateFrom\\\" [id]=\\\"'nepaliDateTo'\\\"\\r\\n                              (change)=\\\"changeEndDate($event.detail.value,'BS')\\\"\\r\\n                              [label]=\\\"'To'\\\"\\r\\n                              [(ngModel)]=\\\"_reportFilterService.CashAndBankBookObj.CashBankBook_BSDATE2\\\">\\r\\n                            </nepali-date-picker>\\r\\n                                    <!-- <input id=\\\"nepaliDate\\\" style=\\\"text-align:center;\\\"\\r\\n                                    class=\\\"nepali-calendar ndp-nepali-calendar date-input form-control\\\"\\r\\n                                        [(ngModel)]=\\\"_reportFilterService.CashAndBankBookObj.CashBankBook_BSDATE2\\\" type=\\\"text\\\"\\r\\n                                        (change)=\\\"changeEndDate($event.target.value,'BS')\\\"\\r\\n                                        placeholder=\\\"yyyy-mm-dd\\\" /> -->\\r\\n                            </td>\\r\\n                        </tr>\\r\\n                    </table>\\r\\n                </fieldset>\\r\\n\\r\\n                <fieldset>\\r\\n                    <legend>Division Selection:</legend>\\r\\n                    <select [(ngModel)]=\\\"_reportFilterService.CashAndBankBookObj.CashBankBook_DIV\\\" style=\\\"height: 30px !important;\\\"\\r\\n                    class=\\\"form-control input-text\\\">\\r\\n                    <option value=\\\"%\\\" *ngIf=\\\"masterService.userSetting.userwisedivision==0 ||  masterService.showAll\\\">ALL</option>\\r\\n                        <option *ngFor=\\\"let div of division\\\" value=\\\"{{ div.INITIAL }}\\\">\\r\\n                            {{ div.NAME }}\\r\\n                        </option>\\r\\n                    </select>\\r\\n                </fieldset>\\r\\n\\r\\n                <fieldset>\\r\\n                    <legend>Report Option</legend>\\r\\n                    <label class=\\\"smallBoldLabel\\\"><input type=\\\"radio\\\" style=\\\"padding-right:15px;\\\" name=\\\"BalViewOp1\\\"\\r\\n                            [(ngModel)]=\\\"_reportFilterService.CashAndBankBookObj.REPORTMODE\\\" value=\\\"1\\\"\\r\\n                            (change)=\\\"checkReportMode()\\\">&nbsp;Cash Only</label><br>\\r\\n                    <label class=\\\"smallBoldLabel\\\"><input type=\\\"radio\\\" name=\\\"BalViewOp1\\\"\\r\\n                            [(ngModel)]=\\\"_reportFilterService.CashAndBankBookObj.REPORTMODE\\\" value=\\\"2\\\"\\r\\n                            (change)=\\\"checkReportMode()\\\">&nbsp;Bank Only</label><br>\\r\\n                    <label class=\\\"smallBoldLabel\\\"><input type=\\\"radio\\\" name=\\\"BalViewOp1\\\"\\r\\n                            [(ngModel)]=\\\"_reportFilterService.CashAndBankBookObj.REPORTMODE\\\" value=\\\"0\\\"\\r\\n                            [disabled]=\\\"_reportFilterService.CashAndBankBookObj.CashBankBook_DETAILREPORT=='1'\\\">&nbsp;Both</label>\\r\\n                </fieldset>\\r\\n                <div class=\\\"checkbox\\\" style=\\\"padding-top:5px;width:200px;\\\">\\r\\n                    <label class=\\\"smallBoldLabel\\\" style=\\\"width:225px;\\\">\\r\\n                        <input type=\\\"checkbox\\\" [(ngModel)]=\\\"_reportFilterService.CashAndBankBookObj.CashBankBook_INCLUDEPOSTDATE\\\" style=\\\"margin-left: 21px;\\\"\\r\\n                        (change)=\\\"$event.target.checked?(_reportFilterService.CashAndBankBookObj.CashBankBook_INCLUDEPOSTDATE=1):(_reportFilterService.CashAndBankBookObj.CashBankBook_INCLUDEPOSTDATE=0)\\\"\\r\\n                [checked]=\\\"_reportFilterService.CashAndBankBookObj.CashBankBook_INCLUDEPOSTDATE == 1\\\" >\\r\\n                        Include Post Dated Transaction Also\\r\\n                    </label>\\r\\n                </div> \\r\\n            </div>\\r\\n            <!-- Right Column -->\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n                <fieldset>\\r\\n                    <legend>Report Type:</legend>\\r\\n                    <label class=\\\"smallBoldLabel\\\" style=\\\"padding-right:15px;\\\"><input type=\\\"radio\\\" name=\\\"BalViewOpt\\\"\\r\\n                            [(ngModel)]=\\\"_reportFilterService.CashAndBankBookObj.CashBankBook_DETAILREPORT\\\" value=0\\r\\n                            (change)=\\\"checkSummary()\\\">&nbsp;Summary Report</label>\\r\\n                    <label class=\\\"smallBoldLabel\\\"><input type=\\\"radio\\\" name=\\\"BalViewOpt\\\"\\r\\n                            [(ngModel)]=\\\"_reportFilterService.CashAndBankBookObj.CashBankBook_DETAILREPORT\\\" value=1\\r\\n                            (change)=\\\"checkSummary()\\\">&nbsp;Detail Report</label>\\r\\n                </fieldset>\\r\\n\\r\\n                <!-- <account-list></account-list> -->\\r\\n                <fieldset>\\r\\n                    <legend>Account Selection: </legend>\\r\\n                    <input type=\\\"text\\\" style=\\\"font-weight: bold;\\\" class=\\\"form-control\\\"\\r\\n                        [disabled]=\\\"_reportFilterService.CashAndBankBookObj.CashBankBook_DETAILREPORT==0\\\"\\r\\n                        [(ngModel)]=\\\"_reportFilterService.CashAndBankBookObj.ACCNAME\\\" placeholder=\\\"Press Enter or Tab for Account List\\\"\\r\\n                        (keydown.Tab)=\\\"AccountEnterClicked($event)\\\" (keydown.enter)=\\\"AccountEnterClicked($event)\\\">\\r\\n                </fieldset>\\r\\n\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"modal-footer\\\" style=\\\"width : 97%; margin : 0px auto;\\\">\\r\\n            <button class=\\\"btn btn-info confirm-btn\\\" type=\\\"button\\\" (click)=onload()>RUN</button>\\r\\n            <button type=\\\"button\\\" (click)=\\\"closeReportBox()\\\" title=\\\"Cancel\\\" class=\\\"btn btn-info\\\">Close</button>\\r\\n        </div>\\r\\n\\r\\n    </div>\\r\\n\\r\\n    <generic-popup-grid #genericGridCashBankBook [popupsettings]=\\\"gridPopupSettingsForAccountList\\\"\\r\\n    (onItemDoubleClick)=\\\"dblClickAccountSelect($event)\\\">\\r\\n</generic-popup-grid>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/ReportDialogs/CashAndBankBookReport/cash-and-bank-book-report.component.html\n// module id = 1725\n// module chunks = 0","module.exports = \"\\r\\n <div id=\\\"cashBookReportId\\\" style=\\\"background-color : #ffffff; height : auto; padding:1%; width : 60%;\\\" >\\r\\n      <div class=\\\"row\\\">\\r\\n            <div class=\\\"modal-header\\\"  style=\\\"width : 97%; margin : 0px auto;\\\">\\r\\n               <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" (click)=\\\"closeReportBox()\\\">&times;</button>\\r\\n               <h4 class=\\\"modal-title\\\">Cash Book Report</h4>\\r\\n             </div>\\r\\n \\r\\n      <div class=\\\"col-md-12\\\">\\r\\n\\r\\n            <fieldset style=\\\"width : 99%;\\\">\\r\\n                  <legend>Date Range Selection :</legend>\\r\\n                  <div class=\\\"_date_range\\\">\\r\\n                     <a (click)=\\\"changeDateByRange('1')\\\" value=\\\"week\\\" style=\\\"color : white;\\\" class=\\\"btn btn-info\\\">This Week</a>\\r\\n                     <a (click)=\\\"changeDateByRange('2')\\\" value=\\\"month\\\" style=\\\"color : white;\\\" class=\\\"btn btn-info\\\">This Month</a>\\r\\n                     <a (click)=\\\"changeDateByRange('3')\\\" value=\\\"year\\\" style=\\\"color : white;\\\" class=\\\"btn btn-info\\\">This Year</a>\\r\\n                  </div>\\r\\n                  <table>\\r\\n                     <tr>\\r\\n                        <td><label class=\\\"smallBoldLabel\\\">From(AD):</label></td>\\r\\n                        <td><label class=\\\"smallBoldLabel\\\">To(AD):</label></td>\\r\\n                     </tr>\\r\\n                     <tr>\\r\\n                        <td>                                                 \\r\\n                              <label class=\\\"smallBoldLabel\\\"><input  type=\\\"date\\\"  style=\\\"width:152px; min-width:50%;\\\"  placeholder=\\\"Year Start Date\\\" [(ngModel)]=\\\"ReportParameters.DATE1\\\"  (change)=\\\"changestartDate($event.target.value,'AD')\\\"  ></label>\\r\\n                        </td>\\r\\n                        <td>                                                 \\r\\n                              <label class=\\\"smallBoldLabel\\\"><input  type=\\\"date\\\" style=\\\"width:152px; min-width:50%;\\\"  placeholder=\\\"Year Start Date\\\" [(ngModel)]=\\\"ReportParameters.DATE2\\\"  (change)=\\\"changeEndDate($event.target.value,'AD')\\\"   ></label>\\r\\n                        </td>\\r\\n                     </tr>\\r\\n                     <tr>\\r\\n                        <td>\\r\\n                              <label class=\\\"smallBoldLabel\\\"><input id=\\\"nepaliDate\\\" style=\\\"width:152px;height:25px;text-align:center\\\" class=\\\"nepali-calendar ndp-nepali-calendar\\\" [(ngModel)]=\\\"ReportParameters.BSDATE1\\\"\\r\\n                           type=\\\"text\\\" (change)=\\\"changestartDate($event.target.value,'BS')\\\"\\r\\n                           placeholder=\\\"yyyy-mm-dd\\\" /> </label>\\r\\n                        </td>\\r\\n                        <td>\\r\\n                              <label class=\\\"smallBoldLabel\\\"><input id=\\\"nepaliDate\\\" style=\\\"width:152px;height:25px;text-align:center\\\" class=\\\"nepali-calendar ndp-nepali-calendar\\\" [(ngModel)]=\\\"ReportParameters.BSDATE2\\\"\\r\\n                           type=\\\"text\\\" (change)=\\\"changeEndDate($event.target.value,'BS')\\\"\\r\\n                           placeholder=\\\"yyyy-mm-dd\\\" /> </label>\\r\\n                        </td>\\r\\n                     </tr>\\r\\n                  </table>\\r\\n            </fieldset>\\r\\n\\r\\n\\r\\n            <fieldset>\\r\\n                  <legend>Cash Account Selection:</legend>\\r\\n                  <select [(ngModel)]=\\\"ReportParameters.CASH_ACID\\\" style=\\\"width : 100%;\\\">\\r\\n                    <option value=\\\"%\\\">ALL</option>\\r\\n                     <option *ngFor=\\\"let cashAc of cashAccount\\\" value=\\\"{{ cashAc.ACID }}\\\">\\r\\n                        {{ cashAc.ACNAME  }}\\r\\n                     </option>\\r\\n                  </select>\\r\\n                  <br>\\r\\n                  <label class=\\\"smallBoldLabel\\\" style=\\\"width : 100%; margin: 0;\\\"><input type=\\\"checkbox\\\" name=\\\"showConCashBook\\\"  style=\\\"margin-left : 1%;\\\">&nbsp;Show Consolidated Cash Book </label>       \\r\\n               </fieldset>\\r\\n               <label class=\\\"smallBoldLabel\\\"><input type=\\\"checkbox\\\" name=\\\"mergeVat\\\" (change)=\\\"$event.target.checked?(ReportParameters.MergeVatAc=1):(ReportParameters.MergeVatAc=0)\\\" [checked]=\\\"ReportParameters.MergeVatAc == 1\\\">&nbsp;Merge Vat a/c In Abb. Sale/Sales Return</label>       \\r\\n               <br>\\r\\n               <fieldset>\\r\\n                  <legend>Division Selection:</legend>\\r\\n                  <select [(ngModel)]=\\\"ReportParameters.DIVISION\\\" style=\\\"width : 100%;\\\">\\r\\n                     <option value=\\\"%\\\" *ngIf=\\\"masterService.userSetting.userwisedivision==0\\\">ALL</option>\\r\\n                     <option *ngFor=\\\"let div of division\\\" value=\\\"{{ div.INITIAL }}\\\">\\r\\n                        {{ div.NAME }}\\r\\n                     </option>\\r\\n                  </select>\\r\\n               </fieldset>\\r\\n           \\r\\n               <div class=\\\"btn\\\">\\r\\n                    <!-- <button type=\\\"button\\\"  title=\\\"onSave\\\" class=\\\"btn btn-info\\\">Run</button>    -->\\r\\n                    <button class=\\\"btn btn-info confirm-btn\\\" type=\\\"button\\\"  (click)=onload()>RUN</button>\\r\\n                    <button type=\\\"button\\\"  title=\\\"Cancel\\\" class=\\\"btn btn-info\\\">Close</button>  \\r\\n                 </div>\\r\\n\\r\\n      </div>\\r\\n   </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n \\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/ReportDialogs/CashBookReport/cashbookreport.component.html\n// module id = 1726\n// module chunks = 0","module.exports = \"<style>\\r\\n    .input-text {\\r\\n        width: 100%;\\r\\n        /* height: 30px !important; */\\r\\n        font-weight: bold;\\r\\n    }\\r\\n\\r\\n    .td-class {\\r\\n        border: none !important;\\r\\n    }\\r\\n\\r\\n    .date-input {\\r\\n        width: 93%;\\r\\n        font-size: 12px !important;\\r\\n        height: 30px !important;\\r\\n    }\\r\\n     @media screen and (max-width:991px) {\\r\\n         .report-container{\\r\\n           width: 100% !important;\\r\\n    }\\r\\n    .report-height{\\r\\n        height:52vh; \\r\\n        overflow:auto;\\r\\n    }\\r\\n    }\\r\\n         @media screen and (max-width:767px) {\\r\\n            .smallBoldLabel{\\r\\n                  width: auto !important;\\r\\n            }\\r\\n            \\r\\n        \\r\\n    }\\r\\n</style>\\r\\n<div class=\\\"container report-container\\\" style=\\\"background-color : #ffffff; padding :1%; height : auto;  \\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"modal-header\\\" style=\\\"width : 97%; margin : 0px auto;\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" (click)=\\\"closeReportBox()\\\">&times;</button>\\r\\n            <h4 class=\\\"modal-title\\\">Consolidated Balance Sheet Report</h4>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-12 report-height\\\" style=\\\"padding-top: 2%;\\\">\\r\\n            <!-- Left Column -->\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n                <fieldset>\\r\\n                    <legend style=\\\"font-size:11px;font-weight: bold; width:auto;margin-bottom: -4px;\\\">Date Range\\r\\n                        Selection :\\r\\n                    </legend>\\r\\n                    <table>\\r\\n                        <tr>\\r\\n                            <!-- <td class=\\\"td-class\\\"><label class=\\\"smallBoldLabel\\\">From:(AD)</label></td> -->\\r\\n                            <!-- <td class=\\\"td-class\\\"><label class=\\\"smallBoldLabel\\\">To:(AD)</label></td> -->\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td class=\\\"td-class\\\">\\r\\n                                <input type=\\\"date\\\" class=\\\"date-input form-control\\\" placeholder=\\\"Year Start Date\\\"\\r\\n                                    [(ngModel)]=\\\"_reportFilterService.ConsolidatedBalanceSheetObj.Consolidated_BalanceSheet_DATE2\\\"\\r\\n                                    (change)=\\\"changeEndDate($event.target.value,'AD')\\\"\\r\\n                                    max=\\\"{{masterService.date1 | date:'yyyy-MM-dd'}}\\\"\\r\\n                                    min=\\\"{{masterService.date2 | date:'yyyy-MM-dd'}}\\\">\\r\\n                            </td>\\r\\n                            <td class=\\\"td-class\\\">\\r\\n                                <nepali-date-picker name=\\\"nepaliDateFrom\\\" [id]=\\\"'nepaliDatefrom'\\\"\\r\\n                                    (change)=\\\"changeEndDate($event.detail.value,'BS')\\\" [label]=\\\"'From'\\\"\\r\\n                                    [(ngModel)]=\\\"_reportFilterService.ConsolidatedBalanceSheetObj.Consolidated_BalanceSheet_BSDATE2\\\">\\r\\n                                </nepali-date-picker>\\r\\n\\r\\n                            </td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n\\r\\n                        </tr>\\r\\n                    </table>\\r\\n                </fieldset>\\r\\n\\r\\n\\r\\n            </div>\\r\\n            <!-- Right Column -->\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n                <div class=\\\"col-md-12 checkbox\\\" style=\\\"padding-top:5px;\\\">\\r\\n                    <label class=\\\"smallBoldLabel\\\" style=\\\"margin-left: 0px;\\\">\\r\\n                        <input type=\\\"checkbox\\\" style=\\\"margin-left:119px;\\\"\\r\\n                            [(ngModel)]=\\\"_reportFilterService.ConsolidatedBalanceSheetObj.Consolidated_BalanceSheet_SHOWDEBTORSCREDITORS\\\"\\r\\n                            (change)=\\\"\\r\\n                    $event.target.checked\\r\\n                      ? (_reportFilterService.ConsolidatedBalanceSheetObj.Consolidated_BalanceSheet_SHOWDEBTORSCREDITORS = 1)\\r\\n                      : (_reportFilterService.ConsolidatedBalanceSheetObj.Consolidated_BalanceSheet_SHOWDEBTORSCREDITORS = 0)\\\">&nbsp;&nbsp;Show\\r\\n                        Debtors / Creditors Party List\\r\\n                    </label>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"col-md-12 checkbox\\\" style=\\\"padding-top:5px\\\">\\r\\n                    <label class=\\\"smallBoldLabel\\\" style=\\\"margin-left: 0px;\\\">\\r\\n                        <input type=\\\"checkbox\\\" style=\\\"margin-left: 121px;\\\"\\r\\n                            [(ngModel)]=\\\"_reportFilterService.ConsolidatedBalanceSheetObj.Consolidated_BalanceSheet_SHOWTOTALINGROUP\\\" (change)=\\\"\\r\\n                    $event.target.checked\\r\\n                      ? (_reportFilterService.ConsolidatedBalanceSheetObj.Consolidated_BalanceSheet_SHOWTOTALINGROUP = 1)\\r\\n                      : (_reportFilterService.ConsolidatedBalanceSheetObj.Consolidated_BalanceSheet_SHOWTOTALINGROUP = 0)\\\">&nbsp;&nbsp;Show Group\\r\\n                        Total In Report\\r\\n                    </label>\\r\\n                </div>\\r\\n                <!-- </fieldset> -->\\r\\n\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"modal-footer\\\" style=\\\"width : 97%; margin : 0px auto;\\\">\\r\\n            <button class=\\\"btn btn-info confirm-btn\\\" type=\\\"button\\\" (click)=onload()>RUN</button>\\r\\n            <button type=\\\"button\\\" (click)=\\\"closeReportBox()\\\" title=\\\"Cancel\\\" class=\\\"btn btn-info\\\">Close</button>\\r\\n        </div>\\r\\n\\r\\n    </div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/ReportDialogs/Consolidated-Balance-Sheet-Report/consolidated-balance-sheet-report.component.html\n// module id = 1727\n// module chunks = 0","module.exports = \"<style>\\r\\n    .input-text {\\r\\n        width: 100%;\\r\\n        /* height: 30px !important; */\\r\\n        font-weight: bold;\\r\\n    }\\r\\n\\r\\n    .td-class {\\r\\n        border: none !important;\\r\\n    }\\r\\n\\r\\n    .date-input {\\r\\n        width: 93%;\\r\\n        font-size: 12px !important;\\r\\n        height: 30px !important;\\r\\n    }\\r\\n      @media screen and (max-width:991px) {\\r\\n         .report-container{\\r\\n           width: 100% !important;\\r\\n    }\\r\\n    .report-height{\\r\\n        height:52vh; \\r\\n        overflow:auto;\\r\\n    }\\r\\n    }\\r\\n         @media screen and (max-width:767px) {\\r\\n            .smallBoldLabel{\\r\\n                  width: auto !important;\\r\\n            }\\r\\n            \\r\\n        \\r\\n    }\\r\\n</style>\\r\\n<div class=\\\"container report-container\\\" style=\\\"background-color : #ffffff; padding :1%; height : auto;  \\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"modal-header\\\" style=\\\"width : 97%; margin : 0px auto;\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" (click)=\\\"closeReportBox()\\\">&times;</button>\\r\\n            <h4 class=\\\"modal-title\\\">Consolidated Profit & Loss Report</h4>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-12 report-height\\\" style=\\\"padding-top: 2%;\\\">\\r\\n            <!-- Left Column -->\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n                <fieldset>\\r\\n                    <legend style=\\\"font-size:11px;font-weight: bold; width:auto;margin-bottom: -4px;\\\">Date Range Selection :\\r\\n                    </legend>\\r\\n                    <table>\\r\\n                       <tr>\\r\\n                          <td class=\\\"td-class\\\"><label class=\\\"smallBoldLabel\\\">From:(AD)</label></td>\\r\\n                          <td class=\\\"td-class\\\"><label class=\\\"smallBoldLabel\\\">To:(AD)</label></td>\\r\\n                       </tr>\\r\\n                       <tr>\\r\\n                          <td class=\\\"td-class\\\">\\r\\n                             <input type=\\\"date\\\" class=\\\"date-input form-control\\\" placeholder=\\\"Year Start Date\\\"\\r\\n                                [(ngModel)]=\\\"_reportFilterService.ConsolidatedProfitLossObj.Consolidated_ProfitLoss_DATE1\\\"\\r\\n                                (change)=\\\"changeEntryDate($event.target.value,'AD')\\\"\\r\\n                                max=\\\"{{masterService.date1 | date:'yyyy-MM-dd'}}\\\"\\r\\n                                min=\\\"{{masterService.date2 | date:'yyyy-MM-dd'}}\\\">\\r\\n                          </td>\\r\\n                          <td class=\\\"td-class\\\">\\r\\n                             <input type=\\\"date\\\" class=\\\"date-input form-control\\\" placeholder=\\\"Year Start Date\\\"\\r\\n                                [(ngModel)]=\\\"_reportFilterService.ConsolidatedProfitLossObj.Consolidated_ProfitLoss_DATE2\\\"\\r\\n                                (change)=\\\"changeEndDate($event.target.value,'AD')\\\"\\r\\n                                max=\\\"{{masterService.date1 | date:'yyyy-MM-dd'}}\\\"\\r\\n                                min=\\\"{{masterService.date2 | date:'yyyy-MM-dd'}}\\\">\\r\\n                          </td>\\r\\n                       </tr>\\r\\n                       <tr>\\r\\n                          <td class=\\\"td-class\\\">\\r\\n                             <nepali-date-picker name=\\\"nepaliDateFrom\\\" [id]=\\\"'nepaliDatefrom'\\\"\\r\\n                                (change)=\\\"changeEntryDate($event.detail.value,'BS')\\\" [label]=\\\"'From'\\\"\\r\\n                                [(ngModel)]=\\\"_reportFilterService.ConsolidatedProfitLossObj.Consolidated_ProfitLoss_BSDATE1\\\">\\r\\n                             </nepali-date-picker>\\r\\n                          </td>\\r\\n                          <td class=\\\"td-class\\\">\\r\\n                             <nepali-date-picker name=\\\"nepaliDateFrom\\\" [id]=\\\"'nepaliDateTo'\\\"\\r\\n                                (change)=\\\"changeEndDate($event.detail.value,'BS')\\\" [label]=\\\"'To'\\\"\\r\\n                                [(ngModel)]=\\\"_reportFilterService.ConsolidatedProfitLossObj.Consolidated_ProfitLoss_BSDATE2\\\">\\r\\n                             </nepali-date-picker>\\r\\n                          </td>\\r\\n                       </tr>\\r\\n                    </table>\\r\\n                 </fieldset>\\r\\n                 <fieldset>\\r\\n                    <legend style=\\\"font-size:11px;font-weight: bold; width:auto;margin-bottom: -4px;\\\">Cost Center Wise Selection\\r\\n                    </legend>\\r\\n                    <div class=\\\"col-md-12 checkbox\\\" style=\\\"padding-top:5px\\\">\\r\\n                        <label class=\\\"smallBoldLabel\\\" style=\\\"margin-left: 0px;\\\">\\r\\n                            <input type=\\\"checkbox\\\"\\r\\n                                [(ngModel)]=\\\"_reportFilterService.ConsolidatedProfitLossObj.Consolidated_ProfitLoss_COSTCENTERWISE\\\" (change)=\\\"\\r\\n                        $event.target.checked\\r\\n                          ? (_reportFilterService.ConsolidatedProfitLossObj.Consolidated_ProfitLoss_COSTCENTERWISE = 1)\\r\\n                          : (_reportFilterService.ConsolidatedProfitLossObj.Consolidated_ProfitLoss_COSTCENTERWISE = 0)\\\">&nbsp;&nbsp;Cost Center Wise\\r\\n                        </label>\\r\\n                    </div>\\r\\n                 </fieldset>\\r\\n\\r\\n\\r\\n            </div>\\r\\n            <!-- Right Column -->\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n                <div class=\\\"col-md-12 checkbox\\\" style=\\\"padding-top:5px\\\">\\r\\n                    <label class=\\\"smallBoldLabel\\\" style=\\\"margin-left: 0px;\\\">\\r\\n                        <input type=\\\"checkbox\\\" style=\\\"margin-left: 158px;\\\"\\r\\n                            [(ngModel)]=\\\"_reportFilterService.ConsolidatedProfitLossObj.Consolidated_ProfitLoss_SHOWTOTALINGROUP\\\" (change)=\\\"\\r\\n                    $event.target.checked\\r\\n                      ? (_reportFilterService.ConsolidatedProfitLossObj.Consolidated_ProfitLoss_SHOWTOTALINGROUP = 1)\\r\\n                      : (_reportFilterService.ConsolidatedProfitLossObj.Consolidated_ProfitLoss_SHOWTOTALINGROUP = 0)\\\">&nbsp;&nbsp;Show Group\\r\\n                        Total In Report\\r\\n                    </label>\\r\\n                </div>\\r\\n                <!-- </fieldset> -->\\r\\n\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"modal-footer\\\" style=\\\"width : 97%; margin : 0px auto;\\\">\\r\\n            <button class=\\\"btn btn-info confirm-btn\\\" type=\\\"button\\\" (click)=onload()>RUN</button>\\r\\n            <button type=\\\"button\\\" (click)=\\\"closeReportBox()\\\" title=\\\"Cancel\\\" class=\\\"btn btn-info\\\">Close</button>\\r\\n        </div>\\r\\n\\r\\n    </div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/ReportDialogs/Consolidated-Profit&Loss-Report/consolidated-profit-loss-report.component.html\n// module id = 1728\n// module chunks = 0","module.exports = \"<style>\\r\\n    .input-text {\\r\\n       width: 100%;\\r\\n       /* height: 30px !important; */\\r\\n       font-weight: bold;\\r\\n    }\\r\\n \\r\\n    .td-class {\\r\\n       border: none !important;\\r\\n    }\\r\\n \\r\\n    .date-input {\\r\\n       width: 93%;\\r\\n       font-size: 12px !important;\\r\\n       height: 30px !important;\\r\\n    }\\r\\n     @media screen and (max-width:991px) {\\r\\n         .report-container{\\r\\n           width: 100% !important;\\r\\n    }\\r\\n    .report-height{\\r\\n        height:52vh; \\r\\n        overflow:auto;\\r\\n    }\\r\\n    }\\r\\n         @media screen and (max-width:767px) {\\r\\n            .smallBoldLabel{\\r\\n                  width: auto !important;\\r\\n            }\\r\\n            \\r\\n        \\r\\n    }\\r\\n </style>\\r\\n <div class=\\\"container report-container\\\" style=\\\"background-color : #ffffff; padding :1%; height : auto;  \\\">\\r\\n    <div class=\\\"row\\\">\\r\\n       <div class=\\\"modal-header\\\" style=\\\"width : 97%; margin : 0px auto;\\\">\\r\\n          <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" (click)=\\\"closeReportBox()\\\">&times;</button>\\r\\n          <h4 class=\\\"modal-title\\\" style=\\\"font-size:1.25rem; font-weight:545; color:black;\\\">Consolidated Trial Balance</h4>\\r\\n       </div>\\r\\n       <div class=\\\"col-md-12 report-height\\\" style=\\\"padding-top: 2%;\\\">\\r\\n          <!-- Left Column -->\\r\\n          <div class=\\\"col-md-6\\\">\\r\\n             <fieldset>\\r\\n                <legend style=\\\"font-size:13px;font-weight: bold; width:auto;margin-bottom: -4px;\\\">Date Range Selection :\\r\\n                </legend>\\r\\n                <table>\\r\\n                   <tr>\\r\\n                      <td class=\\\"td-class\\\"><label class=\\\"smallBoldLabel\\\">From:(AD)</label></td>\\r\\n                      <td class=\\\"td-class\\\"><label class=\\\"smallBoldLabel\\\">To:(AD)</label></td>\\r\\n                   </tr>\\r\\n                   <tr>\\r\\n                      <td class=\\\"td-class\\\">\\r\\n                         <input type=\\\"date\\\" class=\\\"date-input form-control\\\" placeholder=\\\"Year Start Date\\\"\\r\\n                            [(ngModel)]=\\\"_reportFilterService.ConsolidatedTrialBalanceObj.Consolidated_TrialBalance_DATE1\\\"\\r\\n                            (change)=\\\"changeEntryDate($event.target.value,'AD')\\\"\\r\\n                            max=\\\"{{masterService.date1 | date:'yyyy-MM-dd'}}\\\"\\r\\n                            min=\\\"{{masterService.date2 | date:'yyyy-MM-dd'}}\\\">\\r\\n                      </td>\\r\\n                      <td class=\\\"td-class\\\">\\r\\n                         <input type=\\\"date\\\" class=\\\"date-input form-control\\\" placeholder=\\\"Year Start Date\\\"\\r\\n                            [(ngModel)]=\\\"_reportFilterService.ConsolidatedTrialBalanceObj.Consolidated_TrialBalance_DATE2\\\"\\r\\n                            (change)=\\\"changeEndDate($event.target.value,'AD')\\\"\\r\\n                            max=\\\"{{masterService.date1 | date:'yyyy-MM-dd'}}\\\"\\r\\n                            min=\\\"{{masterService.date2 | date:'yyyy-MM-dd'}}\\\">\\r\\n                      </td>\\r\\n                   </tr>\\r\\n                   <tr>\\r\\n                      <td class=\\\"td-class\\\">\\r\\n                       <nepali-date-picker name=\\\"nepaliDateFrom\\\" [id]=\\\"'nepaliDatefrom'\\\"\\r\\n                       (change)=\\\"changeEntryDate($event.detail.value,'BS')\\\"\\r\\n                       [label]=\\\"'From'\\\"\\r\\n                       [(ngModel)]=\\\"_reportFilterService.ConsolidatedTrialBalanceObj.Consolidated_TrialBalance_BSDATE1\\\">\\r\\n                     </nepali-date-picker>\\r\\n                         \\r\\n                      </td>\\r\\n                      <td class=\\\"td-class\\\">\\r\\n                       <nepali-date-picker name=\\\"nepaliDateFrom\\\" [id]=\\\"'nepaliDateTo'\\\"\\r\\n                       (change)=\\\"changeEndDate($event.detail.value,'BS')\\\"\\r\\n                       [label]=\\\"'To'\\\"\\r\\n                       [(ngModel)]=\\\"_reportFilterService.ConsolidatedTrialBalanceObj.Consolidated_TrialBalance_BSDATE2\\\">\\r\\n                     </nepali-date-picker>\\r\\n                      </td>\\r\\n                   </tr>\\r\\n                </table>\\r\\n             </fieldset>\\r\\n \\r\\n \\r\\n             <!-- <fieldset>\\r\\n                <legend>Division Selection:</legend>\\r\\n                <select [(ngModel)]=\\\"_reportFilterService.ConsolidatedTrialBalanceObj.Consolidated_TrialBalance_DIV\\\"\\r\\n                   style=\\\"height: 30px !important;\\\" class=\\\"form-control input-text\\\">\\r\\n                   <option value=\\\"%\\\" *ngIf=\\\"masterService.userSetting.userwisedivision==0 ||  masterService.showAll\\\">ALL</option>\\r\\n                   <option *ngFor=\\\"let div of division\\\" value=\\\"{{ div.INITIAL }}\\\">\\r\\n                      {{ div.NAME }}\\r\\n                   </option>\\r\\n                </select>\\r\\n             </fieldset> -->\\r\\n\\r\\n             <fieldset>\\r\\n                <legend>Cost Center:</legend>\\r\\n                <select [(ngModel)]=\\\"_reportFilterService.ConsolidatedTrialBalanceObj.Consolidated_TrialBalance_CostCenter\\\"\\r\\n                   style=\\\"height: 30px !important;\\\" class=\\\"form-control input-text\\\">\\r\\n                   <option value=\\\"%\\\"> </option>\\r\\n                   <option *ngFor=\\\"let i of CostcenterList\\\" value={{i.CCID}}>{{i.COSTCENTERNAME}}\\r\\n                   </option>\\r\\n                </select>\\r\\n             </fieldset>\\r\\n          </div>\\r\\n          <!-- Right Column -->\\r\\n          <div class=\\\"col-md-6\\\">\\r\\n             <fieldset style=\\\"padding-bottom: 5px;\\\">\\r\\n                <legend>Report Format :</legend>\\r\\n                <label class=\\\"smallBoldLabel\\\"><input type=\\\"radio\\\" name=\\\"reportformat\\\"\\r\\n                      [(ngModel)]=\\\"_reportFilterService.ConsolidatedTrialBalanceObj.Consolidated_TrialBalance_LEDGERWISE\\\" value= 0>&nbsp;A/C Group\\r\\n                   Wise Format</label>&nbsp;&nbsp;&nbsp;\\r\\n                <label class=\\\"smallBoldLabel\\\" style=\\\"clear : both;\\\"><input type=\\\"radio\\\" name=\\\"reportformat\\\"\\r\\n                      [(ngModel)]=\\\"_reportFilterService.ConsolidatedTrialBalanceObj.Consolidated_TrialBalance_LEDGERWISE\\\" value= 1>&nbsp;A/C Ledger\\r\\n                   Wise Format\\r\\n                </label>\\r\\n             </fieldset>\\r\\n \\r\\n             <fieldset>\\r\\n                <legend>Report Options :</legend>\\r\\n                <label class=\\\"smallBoldLabel\\\"><input type=\\\"checkbox\\\" (change)=\\\"checkValue()\\\"\\r\\n                      [(ngModel)]=\\\"_reportFilterService.ConsolidatedTrialBalanceObj.Consolidated_TrialBalance_SHOWOPENINGTRIALONLY\\\">&nbsp;Show\\r\\n                   Opening Trial Balance Report Only</label><br>\\r\\n                <label class=\\\"smallBoldLabel\\\"><input type=\\\"checkbox\\\"\\r\\n                      [(ngModel)]=\\\"_reportFilterService.ConsolidatedTrialBalanceObj.Consolidated_TrialBalance_SHOWSUBLEDGER\\\">&nbsp;Show Sub\\r\\n                   Ledger In Trial Balance Report</label><br>\\r\\n                <label class=\\\"smallBoldLabel\\\"><input type=\\\"checkbox\\\"\\r\\n                      [(ngModel)]=\\\"_reportFilterService.ConsolidatedTrialBalanceObj.Consolidated_TrialBalance_SHOWDEBTORSCREDITORSDETAILS\\\">&nbsp;Show\\r\\n                   Debtors/Creditors Party List</label><br>\\r\\n                   <label class=\\\"smallBoldLabel\\\"><input type=\\\"checkbox\\\"\\r\\n                      [(ngModel)]=\\\"_reportFilterService.ConsolidatedTrialBalanceObj.Consolidated_TrialBalance_SHOWSTOCKVALUE\\\">&nbsp;Show\\r\\n                   Closing\\r\\n                   Stock Value In Trial Balance Report</label><br>\\r\\n                <label class=\\\"smallBoldLabel\\\"><input type=\\\"checkbox\\\" [checked]=\\\"_reportFilterService.ConsolidatedTrialBalanceObj.Consolidated_TrialBalance_SHOWNETCLOSING == 1\\\"\\r\\n                      [(ngModel)]=\\\"_reportFilterService.ConsolidatedTrialBalanceObj.Consolidated_TrialBalance_SHOWNETCLOSING\\\">&nbsp;Show Net Value in Opening/Closing Balance</label>\\r\\n             </fieldset>\\r\\n\\r\\n \\r\\n          </div>\\r\\n       </div>\\r\\n \\r\\n       <div class=\\\"modal-footer\\\" style=\\\"width : 97%; margin : 0px auto;\\\">\\r\\n          <button class=\\\"btn btn-info confirm-btn\\\" type=\\\"button\\\" (click)=onload()>RUN</button>\\r\\n          <button type=\\\"button\\\" (click)=\\\"closeReportBox()\\\" title=\\\"Cancel\\\" class=\\\"btn btn-info\\\">Close</button>\\r\\n       </div>\\r\\n \\r\\n    </div>\\r\\n \"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/ReportDialogs/Consolidated-Trial-Report/consolidated-trial-balance-report.component.html\n// module id = 1729\n// module chunks = 0","module.exports = \"<style>\\r\\n    .input-text {\\r\\n       width: 100%;\\r\\n       /* height: 30px !important; */\\r\\n       font-weight: bold;\\r\\n    }\\r\\n\\r\\n    .td-class {\\r\\n       border: none !important;\\r\\n    }\\r\\n\\r\\n    .date-input {\\r\\n       width: 93%;\\r\\n       font-size: 12px !important;\\r\\n       height: 30px !important;\\r\\n    }\\r\\n        @media screen and (max-width:991px) {\\r\\n         .report-container{\\r\\n           width: 100% !important;\\r\\n    }\\r\\n    .report-height{\\r\\n        height:52vh; \\r\\n        overflow:auto;\\r\\n    }\\r\\n    }\\r\\n    @media screen and (max-width:767px) {\\r\\n        .smallBoldLabel{\\r\\n            width: auto !important;\\r\\n        }\\r\\n      \\r\\n        \\r\\n    }\\r\\n </style>\\r\\n<div class=\\\"container report-container\\\" style=\\\"background-color : #ffffff; padding :1%; height : auto;  \\\">\\r\\n   <div class=\\\"row\\\">\\r\\n      <div class=\\\"modal-header\\\" style=\\\"width : 97%; margin : 0px auto;\\\">\\r\\n         <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" (click)=\\\"closeReportBox()\\\">&times;</button>\\r\\n         <h4 class=\\\"modal-title\\\">Creditors Report</h4>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-12 report-height\\\" style=\\\"padding-top: 2%;\\\">\\r\\n         <!-- Left Column -->\\r\\n         <div class=\\\"col-md-6\\\">\\r\\n            <fieldset>\\r\\n               <legend style=\\\"font-size:11px;font-weight: bold; width:auto;margin-bottom: -4px;\\\">Date Range Selection :</legend>\\r\\n               <table>\\r\\n                   <tr>\\r\\n                       <td class=\\\"td-class\\\"><label class=\\\"smallBoldLabel\\\">From:(AD)</label></td>\\r\\n                       <td class=\\\"td-class\\\"><label class=\\\"smallBoldLabel\\\">To:(AD)</label></td>\\r\\n                   </tr>\\r\\n                   <tr>\\r\\n                       <td class=\\\"td-class\\\">\\r\\n                               <input type=\\\"date\\\"\\r\\n                            class=\\\"date-input form-control\\\" placeholder=\\\"Year Start Date\\\"\\r\\n                                   [(ngModel)]=\\\"_reportFilterService.CreditorsReportObj.Creditors_DATE1\\\"\\r\\n                                   (change)=\\\"changeEntryDate($event.target.value,'AD')\\\" max=\\\"{{masterService.date1 | date:'yyyy-MM-dd'}}\\\" min=\\\"{{masterService.date2 | date:'yyyy-MM-dd'}}\\\">\\r\\n                       </td>\\r\\n                       <td class=\\\"td-class\\\">\\r\\n                               <input type=\\\"date\\\"\\r\\n                            class=\\\"date-input form-control\\\" placeholder=\\\"Year Start Date\\\"\\r\\n                                   [(ngModel)]=\\\"_reportFilterService.CreditorsReportObj.Creditors_DATE2\\\"\\r\\n                                   (change)=\\\"changeEndDate($event.target.value,'AD')\\\" max=\\\"{{masterService.date1 | date:'yyyy-MM-dd'}}\\\" min=\\\"{{masterService.date2 | date:'yyyy-MM-dd'}}\\\">\\r\\n                       </td>\\r\\n                   </tr>\\r\\n                   <tr>\\r\\n                       <td class=\\\"td-class\\\">\\r\\n                        <nepali-date-picker name=\\\"nepaliDateFrom\\\" [id]=\\\"'nepaliDatefrom'\\\"\\r\\n                        (change)=\\\"changeEntryDate($event.detail.value,'BS')\\\"\\r\\n                        [label]=\\\"'From'\\\"\\r\\n                        [(ngModel)]=\\\"_reportFilterService.CreditorsReportObj.Creditors_BSDATE1\\\">\\r\\n                        </nepali-date-picker>\\r\\n                       </td>\\r\\n                       <td class=\\\"td-class\\\">\\r\\n                        <nepali-date-picker name=\\\"nepaliDateTo\\\" [id]=\\\"'nepaliDateTo'\\\"\\r\\n                        (change)=\\\"changeEndDate($event.detail.value,'BS')\\\"\\r\\n                        [label]=\\\"'To'\\\"\\r\\n                        [(ngModel)]=\\\"_reportFilterService.CreditorsReportObj.Creditors_BSDATE2\\\">\\r\\n                        </nepali-date-picker>\\r\\n                       </td>\\r\\n                   </tr>\\r\\n               </table>\\r\\n           </fieldset>\\r\\n            <fieldset>\\r\\n               <legend>Division Selection:</legend>\\r\\n               <select [(ngModel)]=\\\"_reportFilterService.CreditorsReportObj.Creditors_DIV\\\" style=\\\"height: 30px !important;\\\" class=\\\"form-control input-text\\\">\\r\\n                  <option value=\\\"%\\\" *ngIf=\\\"masterService.userSetting.userwisedivision==0 ||  masterService.showAll\\\">ALL</option>\\r\\n                   <option *ngFor=\\\"let div of division\\\" value=\\\"{{ div.INITIAL }}\\\">\\r\\n                       {{ div.NAME }}\\r\\n                   </option>\\r\\n               </select>\\r\\n           </fieldset>\\r\\n            <fieldset *ngIf=\\\"this.masterService.userSetting.enableCostCenter!=0\\\">\\r\\n                <legend>Cost Center:</legend>\\r\\n                <select [(ngModel)]=\\\"_reportFilterService.CreditorsReportObj.Creditors_CostCenter\\\"\\r\\n                style=\\\"height: 30px !important;\\\" class=\\\"form-control input-text\\\">\\r\\n                    <option value=\\\"%\\\"> </option>\\r\\n                    <option *ngFor=\\\"let i of CostcenterList\\\" value={{i.CCID}}>{{i.COSTCENTERNAME}}\\r\\n                    </option>\\r\\n                </select>\\r\\n            </fieldset>\\r\\n            <label class=\\\"smallBoldLabel\\\"><input type=\\\"checkbox\\\" name=\\\"showCred\\\"\\r\\n               (change)=\\\"checkValueForOpeningCreditors()\\\"\\r\\n                    [(ngModel)]=\\\"_reportFilterService.CreditorsReportObj.Creditors_OPNINGBLONLY\\\">&nbsp;Show Opening Creditors Only </label><br>\\r\\n\\r\\n            <label class=\\\"smallBoldLabel\\\"><input type=\\\"checkbox\\\" name=\\\"showCred\\\"\\r\\n                     (change)=\\\"$event.target.checked?(_reportFilterService.CreditorsReportObj.Creditors_SHOWBRANCHBL=1):(_reportFilterService.CreditorsReportObj.Creditors_SHOWBRANCHBL=0)\\\"\\r\\n                     [checked]=\\\"_reportFilterService.CreditorsReportObj.Creditors_SHOWBRANCHBL == 1\\\">&nbsp;Do Not Show Branch Party B/L in Debtors Report</label><br>\\r\\n\\r\\n            <label class=\\\"smallBoldLabel\\\"><input type=\\\"checkbox\\\" name=\\\"showCred\\\"\\r\\n               (change)=\\\"$event.target.checked?(_reportFilterService.CreditorsReportObj.SHOWDPARTYDETAIL=1):(_reportFilterService.CreditorsReportObj.SHOWDPARTYDETAIL=0)\\\"\\r\\n               [checked]=\\\"_reportFilterService.CreditorsReportObj.SHOWDPARTYDETAIL == 1\\\">&nbsp;Show Party Detail Info</label><br>\\r\\n               <label class=\\\"smallBoldLabel\\\"><input type=\\\"checkbox\\\" name=\\\"incpostdate\\\"\\r\\n                  (change)=\\\"$event.target.checked?(_reportFilterService.CreditorsReportObj.Creditors_INCLUDEPOSTEDTRANSACTION=1):(_reportFilterService.CreditorsReportObj.Creditors_INCLUDEPOSTEDTRANSACTION=0)\\\"\\r\\n                  [checked]=\\\"_reportFilterService.CreditorsReportObj.Creditors_INCLUDEPOSTEDTRANSACTION == 1\\\">&nbsp;Include Post Dated\\r\\n               Transaction</label><br>\\r\\n               <!-- <label class=\\\"smallBoldLabel\\\"><input type=\\\"checkbox\\\" name=\\\"incpostdate\\\"\\r\\n                     (change)=\\\"$event.target.checked?(_reportFilterService.CreditorsReportObj.CreditorsReport_INCLUDEPOSTDATE=1):(_reportFilterService.CreditorsReportObj.CreditorsReport_INCLUDEPOSTDATE=0)\\\"\\r\\n                     [checked]=\\\"_reportFilterService.CreditorsReportObj.CreditorsReport_INCLUDEPOSTDATE == 1\\\">&nbsp;Include Post Dated\\r\\n                  Transaction</label><br> -->\\r\\n         </div>\\r\\n         <!-- Right Column -->\\r\\n         <div class=\\\"col-md-6\\\">\\r\\n            <!-- <label class=\\\"smallBoldLabel\\\"><input type=\\\"checkbox\\\" name=\\\"showCred\\\"\\r\\n                (change)=\\\"checkValueForOpeningCreditors()\\\"\\r\\n                     [(ngModel)]=\\\"_reportFilterService.CreditorsReportObj.Creditors_OPNINGBLONLY\\\">&nbsp;Show Opening Creditors Only </label><br> -->\\r\\n            <fieldset>\\r\\n               <legend>Report Option</legend>\\r\\n                <div class=\\\"row\\\">\\r\\n                  <div class=\\\"col-sm-4\\\">\\r\\n                     <label class=\\\"smallBoldLabel\\\"><input type=\\\"radio\\\" name=\\\"BalViewOpt\\\"\\r\\n                           [(ngModel)]=\\\"_reportFilterService.CreditorsReportObj.REPORTMODEC\\\" value=0>&nbsp;Show All</label>\\r\\n                  </div>\\r\\n               \\r\\n                  <!-- <div class=\\\"col-sm-8\\\">\\r\\n                     <label class=\\\"smallBoldLabel\\\" style=\\\"margin-left: -33px;\\\"><input type=\\\"radio\\\" name=\\\"BalViewOpt\\\"\\r\\n                           [(ngModel)]=\\\"_reportFilterService.CreditorsReportObj.REPORTMODEC\\\" value=4>&nbsp;Show Negative Creditors B/L\\r\\n                        Separately</label>\\r\\n                  </div> -->\\r\\n               </div>\\r\\n               <label class=\\\"smallBoldLabel\\\"><input type=\\\"radio\\\" name=\\\"BalViewOpt\\\"\\r\\n                     [(ngModel)]=\\\"_reportFilterService.CreditorsReportObj.REPORTMODEC\\\" value=1>&nbsp;Exclude Negative Creditors B/L\\r\\n                  Balance</label>\\r\\n               <label class=\\\"smallBoldLabel\\\"><input type=\\\"radio\\\" name=\\\"BalViewOpt\\\"\\r\\n                     [(ngModel)]=\\\"_reportFilterService.CreditorsReportObj.REPORTMODEC\\\" value=2>&nbsp;Show Negative Creditors B/L Only</label>\\r\\n                     <label class=\\\"smallBoldLabel\\\"><input type=\\\"radio\\\" name=\\\"BalViewOpt\\\"\\r\\n                        [(ngModel)]=\\\"_reportFilterService.CreditorsReportObj.REPORTMODEC\\\" value=3>&nbsp;Exclude Zero B/L Creditors</label>\\r\\n               <label class=\\\"smallBoldLabel\\\"><input type=\\\"radio\\\" name=\\\"BalViewOpt\\\"\\r\\n                     [(ngModel)]=\\\"_reportFilterService.CreditorsReportObj.REPORTMODEC\\\" value=4>&nbsp;Show Zero B/L Creditors Only</label>\\r\\n            </fieldset>\\r\\n\\r\\n            <fieldset>\\r\\n               <legend>Report Filter Option:</legend>\\r\\n               <div class=\\\"row\\\">\\r\\n                  <div class=\\\"col-sm-5\\\"><label class=\\\"smallBoldLabel\\\">Area:</label></div>\\r\\n                  <div class=\\\"col-sm-7\\\">\\r\\n                     <select [(ngModel)]=\\\"_reportFilterService.CreditorsReportObj.CreditorsReport_AreaWise\\\"\\r\\n                     style=\\\"height: 30px !important;\\\" class=\\\"form-control\\\">\\r\\n                         <option value=0></option>\\r\\n                         <option *ngFor=\\\"let i of AreaList\\\" value={{i.AREA_ID}}>{{i.AREA_NAME}}</option>\\r\\n                     </select>\\r\\n                  </div>\\r\\n               </div>\\r\\n\\r\\n               <div class=\\\"row\\\" style=\\\"margin-top: 10px;\\\">\\r\\n                  <div class=\\\"col-sm-5\\\"><label class=\\\"smallBoldLabel\\\">Party Group:</label></div>\\r\\n                  <div class=\\\"col-sm-7\\\">\\r\\n                     <select [(ngModel)]=\\\"_reportFilterService.CreditorsReportObj.CreditorsReport_PartyGroup\\\"\\r\\n                     style=\\\"height: 30px !important;\\\" class=\\\"form-control\\\">\\r\\n                         <option value='%'></option>\\r\\n                         <option *ngFor=\\\"let i of PartyGroupList\\\" value={{i.ACID}}>{{i.ACNAME}}</option>\\r\\n                     </select>\\r\\n                  </div>\\r\\n               </div>\\r\\n\\r\\n               <div class=\\\"row\\\" style=\\\"margin-top: 10px;\\\">\\r\\n                  <div class=\\\"col-sm-5\\\"><label class=\\\"smallBoldLabel\\\">Party Category:</label></div>\\r\\n                  <div class=\\\"col-sm-7\\\">\\r\\n                     <select [(ngModel)]=\\\"_reportFilterService.CreditorsReportObj.CreditorsReport_PartyCategory\\\"\\r\\n                     style=\\\"height: 30px !important;\\\" class=\\\"form-control\\\">\\r\\n                         <option value='%'></option>\\r\\n                         <option *ngFor=\\\"let i of PartyCategoryList\\\" value={{i.CATEGORY_ID}}>{{i.CATEGORYNAME}}</option>\\r\\n                     </select>\\r\\n                  </div>\\r\\n               </div>\\r\\n                  \\r\\n            </fieldset>\\r\\n\\r\\n            <fieldset>\\r\\n               <legend>Report Grouping Options :</legend>\\r\\n               <select class=\\\"smallBoldLabel\\\" [(ngModel)]=\\\"_reportFilterService.CreditorsReportObj.GROUPBY\\\" style=\\\"height: 30px !important;\\\" class=\\\"form-control input-text\\\">\\r\\n                  <option value=0></option>\\r\\n                  <option value=1>Area Wise</option>\\r\\n                  <option value=2>Party Group Wise</option>\\r\\n                  <option value=3>Party Group Wise in Tree Formate</option>\\r\\n               </select>\\r\\n            </fieldset>\\r\\n\\r\\n            <!-- <label class=\\\"smallBoldLabel\\\"><input type=\\\"checkbox\\\" name=\\\"showCred\\\"\\r\\n                  (change)=\\\"$event.target.checked?(_reportFilterService.CreditorsReportObj.SHOWDPARTYDETAIL=1):(_reportFilterService.CreditorsReportObj.SHOWDPARTYDETAIL=0)\\\"\\r\\n                  [checked]=\\\"_reportFilterService.CreditorsReportObj.SHOWDPARTYDETAIL == 1\\\">&nbsp;Show Party Detail Info</label><br> -->\\r\\n         </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"modal-footer\\\" style=\\\"width : 97%; margin : 0px auto;\\\">\\r\\n         <button class=\\\"btn btn-info confirm-btn\\\" type=\\\"button\\\" (click)=onload()>RUN</button>\\r\\n         <button type=\\\"button\\\" (click)=\\\"closeReportBox()\\\" title=\\\"Cancel\\\" class=\\\"btn btn-info\\\">Close</button>\\r\\n      </div>\\r\\n\\r\\n   </div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/ReportDialogs/Creditors Report/creditorsreport.component.html\n// module id = 1730\n// module chunks = 0","module.exports = \"<style>\\r\\n    .action-btn {\\r\\n        width: 80%;\\r\\n        height: 80%;\\r\\n        display: block;\\r\\n        margin: 0 auto;\\r\\n        background-color: inherit;\\r\\n        border: none;\\r\\n    }\\r\\n\\r\\n    .input-text {\\r\\n        width: 100%;\\r\\n        /* height: 30px !important; */\\r\\n        font-weight: bold;\\r\\n    }\\r\\n\\r\\n    .td-class {\\r\\n        border: none !important;\\r\\n    }\\r\\n\\r\\n    .date-input {\\r\\n        width: 93%;\\r\\n        font-size: 12px !important;\\r\\n        height: 30px !important;\\r\\n    }\\r\\n     @media screen and (max-width:991px) {\\r\\n         .report-container{\\r\\n           width: 100% !important;\\r\\n    }\\r\\n    .report-height{\\r\\n        height:52vh; \\r\\n        overflow:auto;\\r\\n    }\\r\\n    }\\r\\n         @media screen and (max-width:767px) {\\r\\n            .smallBoldLabel{\\r\\n                  width: auto !important;\\r\\n            }\\r\\n            \\r\\n        \\r\\n    }\\r\\n</style>\\r\\n<div class=\\\"container report-container\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <!-- Filter Starts -->\\r\\n        <div class=\\\"col-12 col-md-12\\\">\\r\\n            <div style=\\\"background-color : #ffffff;  width: 100%;\\\">\\r\\n                <div class=\\\"row\\\">\\r\\n                    <div class=\\\"modal-header\\\" style=\\\"border:0px;\\\">\\r\\n                        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\"\\r\\n                            (click)=\\\"closeReportBox()\\\">&times;</button>\\r\\n                        <h4 class=\\\"modal-title\\\" style=\\\"padding-left: 3%;\\\">Creditors Bill Tracking Report</h4>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-md-12 report-height\\\" style=\\\"padding-top: 2%;\\\">\\r\\n                        <!-- Left Side-->\\r\\n                        <div class=\\\"col-md-6\\\">\\r\\n                            <fieldset>\\r\\n                                <legend>As On Date :</legend>\\r\\n                                <table>\\r\\n                                    <!-- <tr>\\r\\n                                        <td class=\\\"td-class\\\"><label class=\\\"smallBoldLabel\\\">From:(AD)</label></td>\\r\\n                                        <td class=\\\"td-class\\\"><label class=\\\"smallBoldLabel\\\">To:(AD)</label></td>\\r\\n                                    </tr> -->\\r\\n                                    <tr>\\r\\n                                        <td class=\\\"td-class\\\">\\r\\n                                            <input type=\\\"date\\\" class=\\\"date-input form-control\\\"\\r\\n                                                placeholder=\\\"Year Start Date\\\"\\r\\n                                                [(ngModel)]=\\\"_reportFilterService.CreditorsBillTrackingObj.CreditorsBillTracking_DATE1\\\"\\r\\n                                                (change)=\\\"changeEntryDate($event.target.value,'AD')\\\">\\r\\n                                        </td>\\r\\n                                        <!-- <td class=\\\"td-class\\\">\\r\\n                                            <input type=\\\"date\\\" class=\\\"date-input form-control\\\"\\r\\n                                                placeholder=\\\"Year Start Date\\\"\\r\\n                                                [(ngModel)]=\\\"_reportFilterService.CreditorsBillTrackingObj.CreditorsBillTracking_DATE2\\\"\\r\\n                                                (change)=\\\"changeEndDate($event.target.value,'AD')\\\">\\r\\n                                        </td> -->\\r\\n                                        <td class=\\\"td-class\\\">\\r\\n                                            <nepali-date-picker name=\\\"nepaliDateFrom\\\" [id]=\\\"'nepaliDatefrom'\\\"\\r\\n                                                (change)=\\\"changeEntryDate($event.detail.value,'BS')\\\" [label]=\\\"'From'\\\"\\r\\n                                                [(ngModel)]=\\\"_reportFilterService.CreditorsBillTrackingObj.CreditorsBillTracking_BSDATE1\\\">\\r\\n                                            </nepali-date-picker>\\r\\n                                        </td>\\r\\n                                    </tr>\\r\\n                                    <!-- <tr>\\r\\n                                        <td class=\\\"td-class\\\">\\r\\n                                            <nepali-date-picker name=\\\"nepaliDateFrom\\\" [id]=\\\"'nepaliDatefrom'\\\"\\r\\n                                                (change)=\\\"changeEntryDate($event.detail.value,'BS')\\\" [label]=\\\"'From'\\\"\\r\\n                                                [(ngModel)]=\\\"_reportFilterService.CreditorsBillTrackingObj.CreditorsBillTracking_BSDATE1\\\">\\r\\n                                            </nepali-date-picker>\\r\\n                                        </td>\\r\\n                                        <td class=\\\"td-class\\\">\\r\\n                                            <nepali-date-picker name=\\\"nepaliDateFrom\\\" [id]=\\\"'nepaliDateTo'\\\"\\r\\n                                                (change)=\\\"changeEndDate($event.detail.value,'BS')\\\" [label]=\\\"'To'\\\"\\r\\n                                                [(ngModel)]=\\\"_reportFilterService.CreditorsBillTrackingObj.CreditorsBillTracking_BSDATE2\\\">\\r\\n                                            </nepali-date-picker>\\r\\n                                        </td>\\r\\n                                    </tr> -->\\r\\n                                </table>\\r\\n                            </fieldset>\\r\\n\\r\\n                            <fieldset>\\r\\n                                <legend>Division Selection:</legend>\\r\\n                                <select [(ngModel)]=\\\"_reportFilterService.CreditorsBillTrackingObj.CreditorsBillTracking_DIV\\\"\\r\\n                                    style=\\\"height: 30px !important;\\\" class=\\\"form-control input-text\\\">\\r\\n                                    <option value=\\\"%\\\"\\r\\n                                        *ngIf=\\\"masterService.userSetting.userwisedivision==0 ||  masterService.showAll\\\">\\r\\n                                        ALL</option>\\r\\n                                    <option *ngFor=\\\"let div of division\\\" value=\\\"{{ div.INITIAL }}\\\">\\r\\n                                        {{ div.NAME }}\\r\\n                                    </option>\\r\\n                                </select>\\r\\n                            </fieldset>\\r\\n                            <fieldset>\\r\\n                                <legend>Cost Center:</legend>\\r\\n                                <select [(ngModel)]=\\\"_reportFilterService.CreditorsBillTrackingObj.CreditorsBillTracking_CostCenter\\\"\\r\\n                                    style=\\\"height: 30px !important;\\\" class=\\\"form-control input-text\\\">\\r\\n                                    <option value=\\\"%\\\"> </option>\\r\\n                                    <option *ngFor=\\\"let i of CostcenterList\\\" value={{i.CCID}}>{{i.COSTCENTERNAME}}\\r\\n                                    </option>\\r\\n                                </select>\\r\\n                            </fieldset>\\r\\n\\r\\n                            <fieldset>\\r\\n                                <legend>Report Type:</legend>\\r\\n                                <label class=\\\"smallBoldLabel\\\" style=\\\"padding-right:15px;\\\"><input type=\\\"radio\\\" name=\\\"BalViewOpt\\\"\\r\\n                                      [(ngModel)]=\\\"_reportFilterService.CreditorsBillTrackingObj.CreditorsBillTracking_Detail\\\" value=0>&nbsp;Summary Report</label>\\r\\n                                <label class=\\\"smallBoldLabel\\\"><input type=\\\"radio\\\" name=\\\"BalViewOpt\\\"\\r\\n                                      [(ngModel)]=\\\"_reportFilterService.CreditorsBillTrackingObj.CreditorsBillTracking_Detail\\\" value=1>&nbsp;Detail Report</label>\\r\\n                             </fieldset>\\r\\n\\r\\n<!-- \\r\\n                            <fieldset>\\r\\n                                <legend>Voucher Type:</legend>\\r\\n                                <select [(ngModel)]=\\\"_reportFilterService.CreditorsBillTrackingObj.CreditorsBillTracking_VoucherType\\\"\\r\\n                                    style=\\\"height: 30px !important;\\\" class=\\\"form-control input-text\\\">\\r\\n                                    <option value=\\\"PV\\\">Payment Voucher</option>\\r\\n                                    <option value=\\\"RV\\\">Receipt Voucher</option>\\r\\n                                </select>\\r\\n                            </fieldset> -->\\r\\n                        </div>\\r\\n                        <!-- Left Side-->\\r\\n\\r\\n                        <!-- Right Side-->\\r\\n                        <div class=\\\"col-md-6 filter-part\\\">\\r\\n                            <fieldset>\\r\\n                                <legend>Party A/C Selection :</legend>\\r\\n                                <input type=\\\"text\\\" style=\\\"font-weight: bold;\\\" class=\\\"form-control\\\"\\r\\n                                    [(ngModel)]=\\\"_reportFilterService.CreditorsBillTrackingObj.CreditorsBillTracking_ACCNAME\\\"\\r\\n                                    placeholder=\\\"Press Enter or Tab for Account List\\\"\\r\\n                                    (keydown.Tab)=\\\"AccountEnterClicked($event)\\\"\\r\\n                                    (keydown.enter)=\\\"AccountEnterClicked($event)\\\"\\r\\n                                    (keypress)=\\\"keyPress($event)\\\">\\r\\n                            </fieldset>\\r\\n                        </div>\\r\\n                        <!-- Right Side-->\\r\\n\\r\\n                    </div>\\r\\n                    <div class=\\\"modal-footer\\\" style=\\\"width : 97%; margin : 0px auto;\\\">\\r\\n                        <button class=\\\"btn btn-info confirm-btn\\\" type=\\\"button\\\" (click)=onload()>RUN</button>\\r\\n                        <button type=\\\"button\\\" (click)=\\\"closeReportBox()\\\" title=\\\"Cancel\\\"\\r\\n                            class=\\\"btn btn-info\\\">Close</button>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <!-- Filter Ends -->\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div style=\\\"width:90%\\\" class=\\\"reportpopup\\\">\\r\\n    <generic-popup-grid #genericGridPartyLedger [popupsettings]=\\\"gridPopupSettingsForPartyLedgerList\\\"\\r\\n        (onItemDoubleClick)=\\\"dblClickAccountSelect($event)\\\">\\r\\n    </generic-popup-grid>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/ReportDialogs/CreditorsBillTrackingReport/creditors-billtracking-report.component.html\n// module id = 1731\n// module chunks = 0","module.exports = \"<div class=\\\"container\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <!-- Filter Starts -->\\r\\n        <div class=\\\"col-12 col-md-12 col-lg-6\\\">\\r\\n            <div style=\\\"background-color : #ffffff;\\\">\\r\\n                <div class=\\\"row\\\">\\r\\n                    <div class=\\\"modal-header\\\" style=\\\"border:0px;\\\">\\r\\n                        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" (click)=\\\"hide()\\\">&times;</button>\\r\\n                        <h4 class=\\\"modal-title\\\" style=\\\"padding-left: 20px;\\\">Stock Report - Warehouse Wise </h4>\\r\\n                    </div>\\r\\n                    <div class=\\\"_left_section col-md-12\\\" style=\\\"padding-left: 25px;padding-right: 25px;\\\">\\r\\n                        <fieldset>\\r\\n                            <legend style=\\\"font-size:11px;font-weight: bold; width:auto\\\">Date Range Selection :</legend>\\r\\n                            <table>\\r\\n                                <tr>\\r\\n                                    <td><label class=\\\"smallBoldLabel\\\">From:(AD)</label></td>\\r\\n                                    <td><label class=\\\"smallBoldLabel\\\">To:(AD)</label></td>\\r\\n                                </tr>\\r\\n                                <tr>\\r\\n                                    <td>\\r\\n                                        <label class=\\\"smallBoldLabel\\\"><input type=\\\"date\\\"\\r\\n                                                style=\\\"width:152px; min-width:50%;\\\" placeholder=\\\"Year Start Date\\\"\\r\\n                                                [(ngModel)]=\\\" _reportFilterService.CurrentStockWarehousewiseAccObj.CurrentStockWarehouseWiseAccount_DATE1\\\"\\r\\n                                                (change)=\\\"changeEntryDate($event.target.value,'AD')\\\"></label>\\r\\n                                    </td>\\r\\n                                    <td>\\r\\n                                        <label class=\\\"smallBoldLabel\\\"><input type=\\\"date\\\"\\r\\n                                                style=\\\"width:152px; min-width:50%;\\\" placeholder=\\\"Year Start Date\\\"\\r\\n                                                [(ngModel)]=\\\"_reportFilterService.CurrentStockWarehousewiseAccObj.CurrentStockWarehouseWiseAccount_DATE2\\\"\\r\\n                                                (change)=\\\"changeEndDate($event.target.value,'AD')\\\"></label>\\r\\n                                    </td>\\r\\n                                </tr>\\r\\n                                <tr>\\r\\n                                    <td>\\r\\n                                        <nepali-date-picker name=\\\"nepaliDatefrom\\\" [id]=\\\"'nepaliDatefrom'\\\"\\r\\n                                            (change)=\\\"changeEntryDate($event.detail.value,'BS')\\\" [label]=\\\"'From'\\\"\\r\\n                                            [(ngModel)]=\\\"_reportFilterService.CurrentStockWarehousewiseAccObj.CurrentStockWarehouseWiseAccount_BSDATE1\\\">\\r\\n                                        </nepali-date-picker>\\r\\n                                    </td>\\r\\n                                    <td>\\r\\n                                        <nepali-date-picker name=\\\"nepaliDateto\\\" [id]=\\\"'nepaliDateto'\\\"\\r\\n                                            (change)=\\\"changeEndDate($event.detail.value,'BS')\\\" [label]=\\\"'To'\\\"\\r\\n                                            [(ngModel)]=\\\"_reportFilterService.CurrentStockWarehousewiseAccObj.CurrentStockWarehouseWiseAccount_BSDATE2\\\">\\r\\n                                        </nepali-date-picker>\\r\\n                                    </td>\\r\\n                                </tr>\\r\\n                            </table>\\r\\n                        </fieldset>\\r\\n\\r\\n                        <div class=\\\"row\\\" style=\\\"margin-top: 10px; margin-left: 2px; margin-bottom: 10px;\\\">\\r\\n                            <div class=\\\"col-md-1\\\">\\r\\n                                <input type=\\\"checkbox\\\"\\r\\n                                    [(ngModel)]=\\\"_reportFilterService.CurrentStockWarehousewiseAccObj.CurrentStockWarehouseWiseAccount_SHOWBATCHWISE\\\"\\r\\n                                    (change)=\\\"$event.target.checked?(_reportFilterService.CurrentStockWarehousewiseAccObj.CurrentStockWarehouseWiseAccount_SHOWBATCHWISE=1):(_reportFilterService.CurrentStockWarehousewiseAccObj.CurrentStockWarehouseWiseAccount_SHOWBATCHWISE=0)\\\"\\r\\n                                    [checked]=\\\"_reportFilterService.CurrentStockWarehousewiseAccObj.CurrentStockWarehouseWiseAccount_SHOWBATCHWISE==1\\\">\\r\\n                            </div>\\r\\n                            <div calss=\\\"col\\\">\\r\\n                                <label style=\\\"width: 200px;\\\" class=\\\"smallBoldLabel\\\">Show Batch\\r\\n                                    Wise Stock Report</label>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        \\r\\n\\r\\n<!-- \\r\\n\\r\\n                        <fieldset>\\r\\n                            <legend style=\\\"font-size:11px;font-weight: bold; width:auto\\\">Company:</legend>\\r\\n                            <select class=\\\"form-control\\\" style=\\\"min-width:50%;\\\" [(ngModel)]=\\\"_reportFilterService.CurrentStockWarehousewiseAccObj.CurrentStockWarehouseWiseAccount_COMPANY\\\">\\r\\n                                <option value=\\\"%\\\">All</option>\\r\\n                                <option value=\\\"Nestle\\\">Nestle</option>\\r\\n                                <option value=\\\"Non Nestle\\\">Non-Nestle</option>\\r\\n                            </select>\\r\\n                        </fieldset>\\r\\n\\r\\n                        <fieldset>\\r\\n                            <legend style=\\\"font-size:11px;font-weight: bold; width:auto\\\">Warehouse Type:</legend>\\r\\n                            <select class=\\\"form-control\\\" style=\\\"min-width:50%;\\\" [(ngModel)]=\\\"_reportFilterService.CurrentStockWarehousewiseAccObj.CurrentStockWarehouseWiseAccount_WAREHOUSETYPE\\\">\\r\\n                                <option value=\\\"%\\\">All</option>\\r\\n                                <option value=\\\"sellable\\\">Saleable</option>\\r\\n                                <option value=\\\"nonsellable\\\">UnSaleable</option>\\r\\n                            </select>\\r\\n                        </fieldset>\\r\\n\\r\\n                        <fieldset>\\r\\n                            <legend style=\\\"font-size:11px;font-weight: bold; width:auto\\\">Warehouse:</legend>\\r\\n                            <select class=\\\"form-control\\\" style=\\\"min-width:50%;\\\" [(ngModel)]=\\\"_reportFilterService.CurrentStockWarehousewiseAccObj.CurrentStockWarehouseWiseAccount_WAREHOUSE\\\">\\r\\n                                <option value=\\\"%\\\">All</option>\\r\\n                                <option  *ngIf=\\\"_reportFilterService.CurrentStockWarehousewiseAccObj.CurrentStockWarehouseWiseAccount_WAREHOUSETYPE == 'sellable'\\\" value=\\\"Main Warehouse\\\">Main Warehouse</option>\\r\\n                                <ng-container *ngIf=\\\"_reportFilterService.CurrentStockWarehousewiseAccObj.CurrentStockWarehouseWiseAccount_WAREHOUSETYPE == 'nonsellable'\\\">\\r\\n                                    <option *ngFor=\\\"let w of warehouseList\\\" [value]=\\\"w.NAME\\\">{{w.NAME}}</option>\\r\\n                                </ng-container>\\r\\n\\r\\n                            </select>\\r\\n                        </fieldset> -->\\r\\n\\r\\n                        <div class=\\\"modal-footer\\\" style=\\\"width : 97%; margin : 0px auto;\\\">\\r\\n                            <button class=\\\"btn btn-info confirm-btn\\\" type=\\\"button\\\" (click)=onload()>RUN</button>\\r\\n                            <button type=\\\"button\\\" (click)=\\\"closeReportBox()\\\" title=\\\"Cancel\\\" class=\\\"btn btn-info\\\">Close</button>\\r\\n                        </div>\\r\\n\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <!-- Filter Ends -->\\r\\n        <!-- Modal Starts -->\\r\\n        <div class=\\\"col-12 col-md-12 col-lg-6\\\">\\r\\n\\r\\n        </div>\\r\\n        <!-- Modal Ends -->\\r\\n    </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/ReportDialogs/CurrentStockWarehousewiseReportAccount/currentstock-warehousewisereport-account.component.html\n// module id = 1732\n// module chunks = 0","module.exports = \"<fieldset>\\r\\n    <legend style=\\\"font-size:11px;font-weight: bold; width:auto\\\">Date Range Selection :</legend>\\r\\n    <table>\\r\\n        <tr>\\r\\n            <td><label class=\\\"smallBoldLabel\\\">From:(AD)</label></td>\\r\\n            <td><label class=\\\"smallBoldLabel\\\">To:(AD)</label></td>\\r\\n        </tr>\\r\\n        <tr>\\r\\n            <td>\\r\\n                <label class=\\\"smallBoldLabel\\\"><input type=\\\"date\\\"\\r\\n                        style=\\\"min-width:50%;\\\" placeholder=\\\"Year Start Date\\\"\\r\\n                        [(ngModel)]=\\\"_reportFilterService.ReportFilterObject.DATE1\\\"\\r\\n                        [disabled]=\\\"_reportFilterService.ReportFilterObject.REPORTMODEVR==1\\\"\\r\\n                        (change)=\\\"changeEntryDate($event.target.value,'AD')\\\"></label>\\r\\n            </td>\\r\\n            <td>\\r\\n                <label class=\\\"smallBoldLabel\\\"><input type=\\\"date\\\"\\r\\n                        style=\\\"min-width:50%;\\\" placeholder=\\\"Year Start Date\\\"\\r\\n                        [(ngModel)]=\\\"_reportFilterService.ReportFilterObject.DATE2\\\"\\r\\n                        [disabled]=\\\"_reportFilterService.ReportFilterObject.REPORTMODEVR==1\\\"\\r\\n                        (change)=\\\"changeEndDate($event.target.value,'AD')\\\"></label>\\r\\n            </td>\\r\\n        </tr>\\r\\n        <tr>\\r\\n            <td>\\r\\n                <label class=\\\"smallBoldLabel\\\"> <input id=\\\"nepaliDate\\\"\\r\\n                        style=\\\"height:25px;text-align:center;min-width:50%;\\\"\\r\\n                        class=\\\"nepali-calendar ndp-nepali-calendar\\\"\\r\\n                        [disabled]=\\\"_reportFilterService.ReportFilterObject.REPORTMODEVR==1\\\"\\r\\n                        [(ngModel)]=\\\"_reportFilterService.ReportFilterObject.BSDATE1\\\" type=\\\"text\\\"\\r\\n                        (change)=\\\"changeEntryDate($event.target.value,'BS')\\\"\\r\\n                        placeholder=\\\"yyyy-mm-dd\\\" />\\r\\n                </label>\\r\\n\\r\\n            </td>\\r\\n            <td>\\r\\n                <label class=\\\"smallBoldLabel\\\">\\r\\n                    <input id=\\\"nepaliDate\\\" style=\\\"height:25px;text-align:center;min-width:50%;\\\"\\r\\n                        class=\\\"nepali-calendar ndp-nepali-calendar\\\"\\r\\n                        [disabled]=\\\"_reportFilterService.ReportFilterObject.REPORTMODEVR==1\\\"\\r\\n                        [(ngModel)]=\\\"_reportFilterService.ReportFilterObject.BSDATE2\\\" type=\\\"text\\\"\\r\\n                        (change)=\\\"changeEndDate($event.target.value,'BS')\\\"\\r\\n                        placeholder=\\\"yyyy-mm-dd\\\" />\\r\\n                </label>\\r\\n            </td>\\r\\n        </tr>\\r\\n    </table>\\r\\n</fieldset>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/ReportDialogs/DateFilters/date-filters.component.html\n// module id = 1733\n// module chunks = 0","module.exports = \"<style>\\r\\n    .input-text{\\r\\n        width : 100%;\\r\\n        /* height: 30px !important; */\\r\\n        font-weight: bold;\\r\\n    }\\r\\n    .td-class{\\r\\n        border: none !important;\\r\\n    }\\r\\n    .date-input{\\r\\n        width: 93%;\\r\\n        font-size: 12px !important;\\r\\n        height: 30px !important;\\r\\n    }\\r\\n\\r\\n    .row-margin{\\r\\n        margin: 0px;\\r\\n    }\\r\\n\\r\\n    .label-margin{\\r\\n        margin: 0px 20px\\r\\n    }\\r\\n       @media screen and (max-width:991px) {\\r\\n         .report-container{\\r\\n           width: 100% !important;\\r\\n    }\\r\\n    .report-height{\\r\\n        height:52vh; \\r\\n        overflow:auto;\\r\\n    }\\r\\n    }\\r\\n         @media screen and (max-width:767px) {\\r\\n            .smallBoldLabel{\\r\\n                  width: auto !important;\\r\\n            }\\r\\n            \\r\\n        \\r\\n    }\\r\\n</style>\\r\\n<div  class=\\\"container report-container\\\" style=\\\"background-color : #ffffff; padding :1%; height : auto;  \\\">\\r\\n    <div class=\\\"row\\\">\\r\\n       <div class=\\\"modal-header\\\" style=\\\"width : 97%; margin : 0px auto;\\\">\\r\\n          <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" (click)=\\\"closeReportBox()\\\">&times;</button>\\r\\n          <h4 class=\\\"modal-title\\\">Day Book Report</h4>\\r\\n       </div>\\r\\n       <div class=\\\"col-md-12 report-height\\\" style=\\\"padding-top: 2%;\\\">\\r\\n          <!-- Left Column -->\\r\\n          <div class=\\\"col-md-6\\\">\\r\\n            <fieldset>\\r\\n                <legend style=\\\"font-size:11px;font-weight: bold; width:auto;margin-bottom: -4px;\\\">Date Range Selection :</legend>\\r\\n                <table>\\r\\n                    <tr>\\r\\n                        <td class=\\\"td-class\\\"><label class=\\\"smallBoldLabel\\\">From:(AD)</label></td>\\r\\n                        <td class=\\\"td-class\\\"><label class=\\\"smallBoldLabel\\\">To:(AD)</label></td>\\r\\n                    </tr>\\r\\n                    <tr>\\r\\n                        <td class=\\\"td-class\\\">\\r\\n                                <input type=\\\"date\\\"\\r\\n                                class=\\\"date-input form-control\\\" placeholder=\\\"Year Start Date\\\"\\r\\n                                    [(ngModel)]=\\\"_reportFilterService.DayBookObj.DayBook_DATE1\\\"\\r\\n                                    (change)=\\\"changeEntryDate($event.target.value,'AD')\\\" max=\\\"{{masterService.date1 | date:'yyyy-MM-dd'}}\\\" min=\\\"{{masterService.date2 | date:'yyyy-MM-dd'}}\\\">\\r\\n                        </td>\\r\\n                        <td class=\\\"td-class\\\">\\r\\n                                <input type=\\\"date\\\"\\r\\n                                class=\\\"date-input form-control\\\" placeholder=\\\"Year Start Date\\\"\\r\\n                                    [(ngModel)]=\\\"_reportFilterService.DayBookObj.DayBook_DATE2\\\"\\r\\n                                    (change)=\\\"changeEndDate($event.target.value,'AD')\\\" max=\\\"{{masterService.date1 | date:'yyyy-MM-dd'}}\\\" min=\\\"{{masterService.date2 | date:'yyyy-MM-dd'}}\\\">\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                    <tr>\\r\\n                        <td class=\\\"td-class\\\">\\r\\n                          <nepali-date-picker name=\\\"nepaliDateFrom\\\" [id]=\\\"'nepaliDatefrom'\\\"\\r\\n                              (change)=\\\"changeEntryDate($event.detail.value,'BS')\\\"\\r\\n                              [label]=\\\"'From'\\\"\\r\\n                              [(ngModel)]=\\\"_reportFilterService.DayBookObj.DayBook_BSDATE1\\\">\\r\\n                            </nepali-date-picker>\\r\\n                                 <!-- <input id=\\\"nepaliDate\\\"\\r\\n                                 style=\\\"text-align:center;\\\"\\r\\n                                 class=\\\"nepali-calendar ndp-nepali-calendar date-input form-control\\\"\\r\\n                                    [(ngModel)]=\\\"_reportFilterService.DayBookObj.DayBook_BSDATE1\\\" type=\\\"text\\\"\\r\\n                                    (change)=\\\"changeEntryDate($event.target.value,'BS')\\\"\\r\\n                                    placeholder=\\\"yyyy-mm-dd\\\" />             -->\\r\\n                        </td>\\r\\n                        <td class=\\\"td-class\\\">\\r\\n                          <nepali-date-picker name=\\\"nepaliDateFrom\\\" [id]=\\\"'nepaliDateTo'\\\"\\r\\n                              (change)=\\\"changeEndDate($event.detail.value,'BS')\\\"\\r\\n                              [label]=\\\"'To'\\\"\\r\\n                              [(ngModel)]=\\\"_reportFilterService.DayBookObj.DayBook_BSDATE2\\\">\\r\\n                            </nepali-date-picker>\\r\\n                                <!-- <input id=\\\"nepaliDate\\\" style=\\\"text-align:center;\\\"\\r\\n                                class=\\\"nepali-calendar ndp-nepali-calendar date-input form-control\\\"\\r\\n                                    [(ngModel)]=\\\"_reportFilterService.DayBookObj.DayBook_BSDATE2\\\" type=\\\"text\\\"\\r\\n                                    (change)=\\\"changeEndDate($event.target.value,'BS')\\\"\\r\\n                                    placeholder=\\\"yyyy-mm-dd\\\" /> -->\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                </table>\\r\\n            </fieldset>\\r\\n            <fieldset>\\r\\n                <legend>Division Selection:</legend>\\r\\n                <select [(ngModel)]=\\\"_reportFilterService.DayBookObj.DayBook_DIV\\\" style=\\\"height: 30px !important;\\\"\\r\\n                class=\\\"form-control input-text\\\">\\r\\n                <option value=\\\"%\\\" *ngIf=\\\"masterService.userSetting.userwisedivision==0 ||  masterService.showAll\\\">ALL</option>\\r\\n                    <option *ngFor=\\\"let div of division\\\" value=\\\"{{ div.INITIAL }}\\\">\\r\\n                        {{ div.NAME }}\\r\\n                    </option>\\r\\n                </select>\\r\\n            </fieldset>\\r\\n\\r\\n                <fieldset style=\\\"padding-bottom: 1px;\\\" >\\r\\n                <legend  style=\\\"margin-bottom: -4px;\\\">Report Filter By</legend>\\r\\n                    <table>\\r\\n                        <tr style=\\\"overflow: hidden;\\\">\\r\\n                            <td style=\\\"border: none;\\\" class=\\\"smallBoldLabel\\\">Entry User </td>\\r\\n                            <td style=\\\"border: none;width: 70%;\\\" >\\r\\n                                <select [(ngModel)]=\\\"_reportFilterService.DayBookObj.USER\\\" style=\\\"height: 30px !important;\\\"\\r\\n                                class=\\\"form-control input-text\\\">\\r\\n                                <option value=\\\"\\\"></option>\\r\\n                                <ng-container *ngFor = \\\"let it of userList\\\" >\\r\\n                                    <option value=\\\"{{it.username}}\\\">{{it.username}} </option>\\r\\n                                </ng-container>\\r\\n\\r\\n                             </select>\\r\\n                            </td>\\r\\n                        </tr>\\r\\n\\r\\n                    </table>\\r\\n\\r\\n             </fieldset>\\r\\n\\r\\n             <fieldset style=\\\"padding-bottom: 5px;\\\">\\r\\n                <legend>Report Option</legend>\\r\\n                <div class=\\\"row row-margin\\\">\\r\\n                    <label class=\\\"smallBoldLabel label-margin\\\"><input type=\\\"radio\\\" name=\\\"BalViewOpt1\\\"\\r\\n                          [(ngModel)]=\\\"_reportFilterService.DayBookObj.DayBook_DETAILREPORT\\\" value=\\\"0\\\">&nbsp;Summary Report </label>\\r\\n                    <label class=\\\"smallBoldLabel label-margin\\\" style=\\\"clear : both;\\\"><input type=\\\"radio\\\" name=\\\"BalViewOpt1\\\"\\r\\n                          [(ngModel)]=\\\"_reportFilterService.DayBookObj.DayBook_DETAILREPORT\\\" value=\\\"1\\\">&nbsp;Detail Report\\r\\n                      </label>\\r\\n                </div>\\r\\n                <div class=\\\"row row-margin\\\" *ngIf=\\\"_reportFilterService.DayBookObj.DayBook_DETAILREPORT == '0'\\\">\\r\\n                    <label class=\\\"smallBoldLabel label-margin\\\"><input type=\\\"radio\\\" name=\\\"\\\"\\r\\n                        [(ngModel)]=\\\"_reportFilterService.DayBookObj.DayBook_SUMMARYTYPE\\\" value=\\\"0\\\">&nbsp;Day Wise </label>\\r\\n                  <label class=\\\"smallBoldLabel label-margin\\\" style=\\\"clear : both; margin-left: 60px;\\\"><input type=\\\"radio\\\" name=\\\"\\\"\\r\\n                        [(ngModel)]=\\\"_reportFilterService.DayBookObj.DayBook_SUMMARYTYPE\\\" value=\\\"1\\\">&nbsp;Voucher Type Wise\\r\\n                    </label>\\r\\n                </div>\\r\\n\\r\\n             </fieldset>\\r\\n\\r\\n             <fieldset style=\\\"padding-bottom: 1px;\\\" >\\r\\n                <legend  style=\\\"margin-bottom:0px;\\\">Voucher Range Selection</legend>\\r\\n                    <table>\\r\\n                        <tr>\\r\\n                            <td style=\\\"border: none;\\\" class=\\\"smallBoldLabel\\\">From </td>\\r\\n                            <td style=\\\"border: none;width: 70%;\\\" >\\r\\n                                <input type=\\\"number\\\" style=\\\"height: 30px !important;width: 50%;\\r\\n                                font-weight: bold;\\\" class=\\\"form-control\\\" name=\\\"fromVno\\\"\\r\\n                                    [(ngModel)]=\\\"_reportFilterService.DayBookObj.Daybook_FROM_VNO\\\"> \\r\\n                            </td>\\r\\n                        </tr>\\r\\n                        <tr style=\\\"margin-bottom: 6px;\\\">\\r\\n                            <td style=\\\"border: none;\\\" class=\\\"smallBoldLabel\\\">To </td>\\r\\n                            <td style=\\\"border: none;width: 70%;\\\" >\\r\\n                                <input type=\\\"number\\\" style=\\\"height: 30px !important;width: 50%;\\r\\n                                font-weight: bold;\\\" class=\\\"form-control\\\" name=\\\"toVno\\\"\\r\\n                                [(ngModel)]=\\\"_reportFilterService.DayBookObj.Daybook_TO_VNO\\\">\\r\\n                            </td>\\r\\n                        </tr>\\r\\n                    </table>\\r\\n\\r\\n             </fieldset>\\r\\n\\r\\n            \\r\\n           \\r\\n          </div>\\r\\n          <!-- Right Column -->\\r\\n          <div class=\\\"col-md-6\\\">\\r\\n            <fieldset>\\r\\n                <legend>Voucher Name:</legend>\\r\\n                <select [(ngModel)]=\\\"_reportFilterService.DayBookObj.DayBook_VTYPE\\\" style=\\\"height: 30px !important;\\\"\\r\\n                class=\\\"form-control input-text\\\"(change)=\\\"OnVoucherSelect()\\\" >\\r\\n                    <option value=\\\"%\\\">All</option>\\r\\n                    <option *ngFor=\\\"let vt of voucherTypeList\\\" value=\\\"{{ vt.VOUCHER_ID }}\\\" >\\r\\n                        {{ vt.VOUCHER_NAME }}\\r\\n                    </option>\\r\\n                </select>\\r\\n            </fieldset>\\r\\n            <div *ngIf=\\\"showVoucherTable\\\">\\r\\n                <fieldset>\\r\\n                    <legend><label class=\\\"smallBoldLabel\\\">&nbsp;Voucher Type Selection</label></legend>\\r\\n                    <div>\\r\\n                        <div class=\\\"col-md-2\\\">\\r\\n                            <button type=\\\"button\\\" class=\\\"btn btn-info\\\"\\r\\n                                (click)=\\\"addVoucherList()\\\">Add</button>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-md-12\\\">\\r\\n                            <table style=\\\"height:175px; overflow: scroll;\\\">\\r\\n                                <tr class=\\\"smallBoldLabel\\\">\\r\\n                                    <th style=\\\"width:3px;font-weight: bold;\\\">S.No.</th>\\r\\n                                    <th style=\\\"width:10px;font-weight: bold;\\\">Voucher Name</th>\\r\\n                                    <th style=\\\"width:4px;font-weight: bold;\\\">Action</th>\\r\\n                                </tr>\\r\\n                                <tr *ngFor=\\\"let data of _reportFilterService.DayBookObj.Daybook_MultipleVoucher;let i = index\\\"\\r\\n                                    class=\\\"smallBoldLabel\\\">\\r\\n                                    <td style=\\\"width:3px;\\\">{{ i + 1 }}</td>\\r\\n                                    <td style=\\\"width:10px;\\\">{{data.VOUCHER_NAME}}</td>\\r\\n                                    <td style=\\\"width:4px;\\\">\\r\\n                                        <button type=\\\"button\\\" class=\\\"action-btn\\\"\\r\\n                                            (click)=\\\"deleteVoucher(i)\\\">Delete</button>\\r\\n                                    </td>\\r\\n                                </tr>\\r\\n                            </table>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </fieldset>\\r\\n            </div>\\r\\n\\r\\n            <label class=\\\"smallBoldLabel\\\"><input type=\\\"checkbox\\\" name=\\\"showCred\\\"\\r\\n                (change)=\\\"$event.target.checked?(_reportFilterService.DayBookObj.SHOWCASEOPENINGCLOSINGBL=1):(_reportFilterService.DayBookObj.SHOWCASEOPENINGCLOSINGBL=0)\\\"\\r\\n                [checked]=\\\"_reportFilterService.DayBookObj.SHOWCASEOPENINGCLOSINGBL == 1\\\">&nbsp;Show Opening/Closing Cash B/L In Report</label><br>\\r\\n\\r\\n          </div>\\r\\n       </div>\\r\\n\\r\\n       <div class=\\\"modal-footer\\\" style=\\\"width : 97%; margin : 0px auto;\\\">\\r\\n          <button class=\\\"btn btn-info confirm-btn\\\" type=\\\"button\\\" (click)=onload()>RUN</button>\\r\\n          <button type=\\\"button\\\" (click)=\\\"closeReportBox()\\\" title=\\\"Cancel\\\" class=\\\"btn btn-info\\\">Close</button>\\r\\n       </div>\\r\\n\\r\\n    </div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/ReportDialogs/DayBookReport/day-book-report.component.html\n// module id = 1734\n// module chunks = 0","module.exports = \"<div style=\\\"background-color : #ffffff; padding :1%; height : auto; width:50%; \\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"modal-header\\\">\\r\\n      <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" (click)=\\\"hide()\\\">&times;</button>\\r\\n      <h4 class=\\\"modal-title\\\">Debit Note Register Report</h4>\\r\\n    </div>\\r\\n    <div class=\\\"_left_section col-md-12\\\">\\r\\n      <fieldset style=\\\"width:352px\\\">\\r\\n        <legend style=\\\"font-size:11px;font-weight: bold; width:auto\\\">Date Range Selection :</legend>\\r\\n        <table>\\r\\n          <tr>\\r\\n            <td><label class=\\\"smallBoldLabel\\\">From:(AD)</label></td>\\r\\n            <td><label class=\\\"smallBoldLabel\\\">To:(AD)</label></td>\\r\\n          </tr>\\r\\n          <tr>\\r\\n            <td>\\r\\n              <label class=\\\"smallBoldLabel\\\"><input type=\\\"date\\\" style=\\\"width:152px; min-width:50%;\\\"\\r\\n                  placeholder=\\\"Year Start Date\\\" [(ngModel)]=\\\"DebitNoteRegisterReport.DATE1\\\"\\r\\n                  (change)=\\\"changeEntryDate($event.target.value,'AD')\\\"></label>\\r\\n            </td>\\r\\n            <td>\\r\\n              <label class=\\\"smallBoldLabel\\\"><input type=\\\"date\\\" style=\\\"width:152px; min-width:50%;\\\"\\r\\n                  placeholder=\\\"Year Start Date\\\" [(ngModel)]=\\\"DebitNoteRegisterReport.DATE\\\"\\r\\n                  (change)=\\\"changeEndDate($event.target.value,'AD')\\\"></label>\\r\\n            </td>\\r\\n          </tr>\\r\\n          <tr>\\r\\n            <td>\\r\\n              <label class=\\\"smallBoldLabel\\\"> <input id=\\\"nepaliDate\\\" style=\\\"width:152px;height:25px;text-align:center\\\"\\r\\n                  class=\\\"nepali-calendar ndp-nepali-calendar\\\" [(ngModel)]=\\\"DebitNoteRegisterReport.BSDATE1\\\" type=\\\"text\\\"\\r\\n                  (change)=\\\"changeEntryDate($event.target.value,'BS')\\\" placeholder=\\\"yyyy-mm-dd\\\" />\\r\\n              </label>\\r\\n            </td>\\r\\n            <td>\\r\\n              <label class=\\\"smallBoldLabel\\\">\\r\\n                <input id=\\\"nepaliDate\\\" style=\\\"width:152px;height:25px;text-align:center\\\"\\r\\n                  class=\\\"nepali-calendar ndp-nepali-calendar\\\" [(ngModel)]=\\\"DebitNoteRegisterReport.BSDATE2\\\" type=\\\"text\\\"\\r\\n                  (change)=\\\"changeEndDate($event.target.value,'BS')\\\" placeholder=\\\"yyyy-mm-dd\\\" />\\r\\n              </label>\\r\\n            </td>\\r\\n          </tr>\\r\\n        </table>\\r\\n      </fieldset>\\r\\n\\r\\n      <!-- Division Selection Start -->\\r\\n      <fieldset style=\\\"width:352px;\\\">\\r\\n        <legend>Division Selection:</legend>\\r\\n        <select class=\\\"form-control\\\" [(ngModel)]=\\\"this.DebitNoteRegisterReport.DIV\\\" #division\\r\\n          (change)=\\\"divisionChanged()\\\">\\r\\n          <option value=\\\"%\\\" *ngIf=\\\"masterService.userSetting.userwisedivision==0\\\" selected>ALL</option>\\r\\n          <option *ngFor=\\\"let divs of divisionList;let i=index\\\" value=\\\"{{divs.INITIAL}}\\\">{{divs.NAME}}</option>\\r\\n        </select>\\r\\n      </fieldset>\\r\\n      <!-- Division Selection End -->\\r\\n\\r\\n      <div style='margin-top:20px;'>\\r\\n        <button class=\\\"btn btn-info confirm-btn\\\" type=\\\"button\\\" (click)=onload()>RUN</button>\\r\\n        <button type=\\\"button\\\" (click)=\\\"cancel()\\\" title=\\\"Cancel\\\" class=\\\"btn btn-info\\\">Close</button>\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/ReportDialogs/Debit-Note-Register-Report/debitnote-register-report.component.html\n// module id = 1735\n// module chunks = 0","module.exports = \"<style>\\r\\n   .input-text {\\r\\n      width: 100%;\\r\\n      /* height: 30px !important; */\\r\\n      font-weight: bold;\\r\\n   }\\r\\n\\r\\n   .td-class {\\r\\n      border: none !important;\\r\\n   }\\r\\n\\r\\n   .date-input {\\r\\n      width: 93%;\\r\\n      font-size: 12px !important;\\r\\n      height: 30px !important;\\r\\n   }\\r\\n        @media screen and (max-width:991px) {\\r\\n         .report-container{\\r\\n           width: 100% !important;\\r\\n    }\\r\\n    .report-height{\\r\\n        height:52vh; \\r\\n        overflow:auto;\\r\\n    }\\r\\n    }\\r\\n    @media screen and (max-width:767px) {\\r\\n        .smallBoldLabel{\\r\\n            width: auto !important;\\r\\n        }\\r\\n      \\r\\n        \\r\\n    }\\r\\n</style>\\r\\n<div class=\\\"container report-container\\\" style=\\\"background-color : #ffffff; padding :1%; height : auto;  \\\">\\r\\n   <div class=\\\"row\\\">\\r\\n      <div class=\\\"modal-header\\\" style=\\\"width : 97%; margin : 0px auto;\\\">\\r\\n         <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" (click)=\\\"closeReportBox()\\\">&times;</button>\\r\\n         <h4 class=\\\"modal-title\\\">Debtors Report</h4>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-12 report-height\\\" style=\\\"padding-top: 2%;\\\">\\r\\n         <!-- Left Column -->\\r\\n         <div class=\\\"col-md-6\\\">\\r\\n            <fieldset>\\r\\n               <legend style=\\\"font-size:11px;font-weight: bold; width:auto;margin-bottom: -4px;\\\">Date Range Selection :\\r\\n               </legend>\\r\\n               <table>\\r\\n                  <tr>\\r\\n                     <td class=\\\"td-class\\\"><label class=\\\"smallBoldLabel\\\">From:(AD)</label></td>\\r\\n                     <td class=\\\"td-class\\\"><label class=\\\"smallBoldLabel\\\">To:(AD)</label></td>\\r\\n                  </tr>\\r\\n                  <tr>\\r\\n                     <td class=\\\"td-class\\\">\\r\\n                        <input type=\\\"date\\\" class=\\\"date-input form-control\\\" placeholder=\\\"Year Start Date\\\"\\r\\n                           [(ngModel)]=\\\"_reportFilterService.DebtorsReportObj.Debtors_DATE1\\\"\\r\\n                           (change)=\\\"changeEntryDate($event.target.value,'AD')\\\" max=\\\"{{masterService.date1 | date:'yyyy-MM-dd'}}\\\" min=\\\"{{masterService.date2 | date:'yyyy-MM-dd'}}\\\">\\r\\n                     </td>\\r\\n                     <td class=\\\"td-class\\\">\\r\\n                        <input type=\\\"date\\\" class=\\\"date-input form-control\\\" placeholder=\\\"Year Start Date\\\"\\r\\n                           [(ngModel)]=\\\"_reportFilterService.DebtorsReportObj.Debtors_DATE2\\\"\\r\\n                           (change)=\\\"changeEndDate($event.target.value,'AD')\\\" max=\\\"{{masterService.date1 | date:'yyyy-MM-dd'}}\\\" min=\\\"{{masterService.date2 | date:'yyyy-MM-dd'}}\\\">\\r\\n                     </td>\\r\\n                  </tr>\\r\\n                  <tr>\\r\\n                     <td class=\\\"td-class\\\">\\r\\n                       <nepali-date-picker name=\\\"nepaliDateFrom\\\" [id]=\\\"'nepaliDatefrom'\\\"\\r\\n                        (change)=\\\"changeEntryDate($event.detail.value,'BS')\\\"\\r\\n                        [label]=\\\"'From'\\\"\\r\\n                        [(ngModel)]=\\\"_reportFilterService.DebtorsReportObj.Debtors_BSDATE1\\\">\\r\\n                        </nepali-date-picker>\\r\\n\\r\\n                     </td>\\r\\n                     <td class=\\\"td-class\\\">\\r\\n                      <nepali-date-picker name=\\\"nepaliDateTo\\\" [id]=\\\"'nepaliDateTo'\\\"\\r\\n                      (change)=\\\"changeEndDate($event.detail.value,'BS')\\\"\\r\\n                      [label]=\\\"'To'\\\"\\r\\n                      [(ngModel)]=\\\"_reportFilterService.DebtorsReportObj.Debtors_BSDATE2\\\">\\r\\n                      </nepali-date-picker>\\r\\n                     </td>\\r\\n                  </tr>\\r\\n               </table>\\r\\n            </fieldset>\\r\\n\\r\\n            <fieldset>\\r\\n               <legend>Division Selection:</legend>\\r\\n               <select [(ngModel)]=\\\"_reportFilterService.DebtorsReportObj.Debtors_DIV\\\"\\r\\n                  style=\\\"height: 30px !important;\\\" class=\\\"form-control input-text\\\">\\r\\n                  <option value=\\\"%\\\" *ngIf=\\\"masterService.userSetting.userwisedivision==0 ||  masterService.showAll\\\">ALL</option>\\r\\n                  <option *ngFor=\\\"let div of division\\\" value=\\\"{{ div.INITIAL }}\\\">\\r\\n                     {{ div.NAME }}\\r\\n                  </option>\\r\\n               </select>\\r\\n            </fieldset>\\r\\n            <fieldset *ngIf=\\\"this.masterService.userSetting.enableCostCenter!=0\\\">\\r\\n               <legend>Cost Center:</legend>\\r\\n               <select [(ngModel)]=\\\"_reportFilterService.DebtorsReportObj.Debtors_CostCenter\\\"\\r\\n                  style=\\\"height: 30px !important;\\\" class=\\\"form-control input-text\\\">\\r\\n                  <option value=\\\"%\\\"> </option>\\r\\n                  <option *ngFor=\\\"let i of CostcenterList\\\" value={{i.CCID}}>{{i.COSTCENTERNAME}}\\r\\n                  </option>\\r\\n               </select>\\r\\n            </fieldset>\\r\\n\\r\\n            <label class=\\\"smallBoldLabel\\\"><input type=\\\"checkbox\\\" name=\\\"showCred\\\" (change)=\\\"checkValueForOpeningDebtors()\\\"\\r\\n               [(ngModel)]=\\\"_reportFilterService.DebtorsReportObj.Debtors_OPNINGBLONLY\\\">&nbsp;Show Opening Debtors\\r\\n            Only </label><br>\\r\\n            <label class=\\\"smallBoldLabel\\\"><input type=\\\"checkbox\\\" name=\\\"showCred\\\"\\r\\n               (change)=\\\"$event.target.checked?(_reportFilterService.DebtorsReportObj.Debtors_SHOWBRANCHBL=1):(_reportFilterService.DebtorsReportObj.Debtors_SHOWBRANCHBL=0)\\\"\\r\\n               [checked]=\\\"_reportFilterService.DebtorsReportObj.Debtors_SHOWBRANCHBL == 1\\\">&nbsp;Do Not Show Branch Party B/L in Debtors Report</label><br>\\r\\n\\r\\n            <label class=\\\"smallBoldLabel\\\"><input type=\\\"checkbox\\\" name=\\\"showCred\\\"\\r\\n               (change)=\\\"$event.target.checked?(_reportFilterService.DebtorsReportObj.SHOWDPARTYDETAIL=1):(_reportFilterService.DebtorsReportObj.SHOWDPARTYDETAIL=0)\\\"\\r\\n               [checked]=\\\"_reportFilterService.DebtorsReportObj.SHOWDPARTYDETAIL == 1\\\">&nbsp;Show Party Detail\\r\\n            Info</label><br>\\r\\n\\r\\n            <!-- <label class=\\\"smallBoldLabel\\\"><input type=\\\"checkbox\\\" name=\\\"showCred\\\"\\r\\n               (change)=\\\"$event.target.checked?(_reportFilterService.DebtorsReportObj.Debtors_INCLUDEPOSTEDTRANSACTION=1):(_reportFilterService.DebtorsReportObj.Debtors_INCLUDEPOSTEDTRANSACTION=0)\\\"\\r\\n               [checked]=\\\"_reportFilterService.DebtorsReportObj.Debtors_INCLUDEPOSTEDTRANSACTION == 1\\\">&nbsp;INCLUDE POSTED TRANSACTION</label><br> -->\\r\\n               <label class=\\\"smallBoldLabel\\\"><input type=\\\"checkbox\\\" name=\\\"incpostdate\\\"\\r\\n                     (change)=\\\"$event.target.checked?(_reportFilterService.DebtorsReportObj.Debtors_INCLUDEPOSTEDTRANSACTION=1):(_reportFilterService.DebtorsReportObj.Debtors_INCLUDEPOSTEDTRANSACTION=0)\\\"\\r\\n                     [checked]=\\\"_reportFilterService.DebtorsReportObj.Debtors_INCLUDEPOSTEDTRANSACTION == 1\\\">&nbsp;Include Post Dated\\r\\n                  Transaction</label><br>\\r\\n         </div>\\r\\n         <!-- Right Column -->\\r\\n         <div class=\\\"col-md-6\\\">\\r\\n            <fieldset>\\r\\n               <legend>Report Option</legend>\\r\\n               <div class=\\\"row\\\">\\r\\n                  <div class=\\\"col-sm-4\\\">\\r\\n                     <label class=\\\"smallBoldLabel\\\"><input type=\\\"radio\\\" name=\\\"BalViewOpt\\\"\\r\\n                           [(ngModel)]=\\\"_reportFilterService.DebtorsReportObj.REPORTMODE\\\" value=0>&nbsp;Show All</label>\\r\\n                  </div>\\r\\n               \\r\\n                  <!-- <div class=\\\"col-sm-8\\\">\\r\\n                     <label class=\\\"smallBoldLabel\\\" style=\\\"margin-left: -33px;\\\"><input type=\\\"radio\\\" name=\\\"BalViewOpt\\\"\\r\\n                           [(ngModel)]=\\\"_reportFilterService.DebtorsReportObj.REPORTMODE\\\" value=4>&nbsp;Show Negative Debtors B/L\\r\\n                        Separately</label>\\r\\n                  </div> -->\\r\\n               </div>\\r\\n               <label class=\\\"smallBoldLabel\\\"><input type=\\\"radio\\\" name=\\\"BalViewOpt\\\"\\r\\n                     [(ngModel)]=\\\"_reportFilterService.DebtorsReportObj.REPORTMODE\\\" value=1>&nbsp;Exclude Negative\\r\\n                  Debtors B/L</label>\\r\\n               <label class=\\\"smallBoldLabel\\\"><input type=\\\"radio\\\" name=\\\"BalViewOpt\\\"\\r\\n                     [(ngModel)]=\\\"_reportFilterService.DebtorsReportObj.REPORTMODE\\\" value=2>&nbsp;Show Negative\\r\\n                  Debtors B/L Only</label>\\r\\n                  <label class=\\\"smallBoldLabel\\\"><input type=\\\"radio\\\" name=\\\"BalViewOpt\\\"\\r\\n                     [(ngModel)]=\\\"_reportFilterService.DebtorsReportObj.REPORTMODE\\\" value=3>&nbsp;Exclude Zero B/L DEBTORS</label>\\r\\n               <label class=\\\"smallBoldLabel\\\"><input type=\\\"radio\\\" name=\\\"BalViewOpt\\\"\\r\\n                     [(ngModel)]=\\\"_reportFilterService.DebtorsReportObj.REPORTMODE\\\" value=4>&nbsp;Show Zero B/L\\r\\n                  Debtors Only</label>\\r\\n            </fieldset>\\r\\n\\r\\n            <fieldset>\\r\\n               <legend>Report Filter Option:</legend>\\r\\n               <div class=\\\"row\\\">\\r\\n                  <div class=\\\"col-sm-5\\\"><label class=\\\"smallBoldLabel\\\">Area:</label></div>\\r\\n                  <div class=\\\"col-sm-7\\\">\\r\\n                     <select [(ngModel)]=\\\"_reportFilterService.DebtorsReportObj.DebtorsReport_AreaWise\\\"\\r\\n                     style=\\\"height: 30px !important;\\\" class=\\\"form-control\\\">\\r\\n                         <option value=0></option>\\r\\n                         <option *ngFor=\\\"let i of AreaList\\\" value={{i.AREA_ID}}>{{i.AREA_NAME}}</option>\\r\\n                     </select>\\r\\n                  </div>\\r\\n               </div>\\r\\n\\r\\n               <div class=\\\"row\\\" style=\\\"margin-top: 10px;\\\">\\r\\n                  <div class=\\\"col-sm-5\\\"><label class=\\\"smallBoldLabel\\\">Party Group:</label></div>\\r\\n                  <div class=\\\"col-sm-7\\\">\\r\\n                     <select [(ngModel)]=\\\"_reportFilterService.DebtorsReportObj.DebtorsReport_PartyGroup\\\"\\r\\n                     style=\\\"height: 30px !important;\\\" class=\\\"form-control\\\">\\r\\n                         <option value='%'></option>\\r\\n                         <option *ngFor=\\\"let i of PartyGroupList\\\" value={{i.ACID}}>{{i.ACNAME}}</option>\\r\\n                     </select>\\r\\n                  </div>\\r\\n               </div>\\r\\n\\r\\n               <div class=\\\"row\\\" style=\\\"margin-top: 10px;\\\">\\r\\n                  <div class=\\\"col-sm-5\\\"><label class=\\\"smallBoldLabel\\\">Party Category:</label></div>\\r\\n                  <div class=\\\"col-sm-7\\\">\\r\\n                     <select [(ngModel)]=\\\"_reportFilterService.DebtorsReportObj.DebtorsReport_PartyCategory\\\"\\r\\n                     style=\\\"height: 30px !important;\\\" class=\\\"form-control\\\">\\r\\n                         <option value='%'></option>\\r\\n                         <option *ngFor=\\\"let i of PartyCategoryList\\\" value={{i.CATEGORY_ID}}>{{i.CATEGORYNAME}}</option>\\r\\n                     </select>\\r\\n                  </div>\\r\\n               </div>\\r\\n                  \\r\\n            </fieldset>\\r\\n\\r\\n            <fieldset>\\r\\n               <legend>Report Grouping Options :</legend>\\r\\n               <select [(ngModel)]=\\\"_reportFilterService.DebtorsReportObj.GROUPBY\\\" style=\\\"height: 30px !important;\\\" class=\\\"form-control input-text\\\">\\r\\n                  <option value=0></option>\\r\\n                  <option value=1>Area Wise</option>\\r\\n                  <option value=2>Party Group Wise</option>\\r\\n                  <option value=3>Party Group Wise in Tree Format</option>\\r\\n                  <option value=4>Party Category Wise</option>\\r\\n               </select>\\r\\n\\r\\n              \\r\\n            </fieldset>\\r\\n            <!-- <fieldset>\\r\\n               <legend>Salesman:</legend>\\r\\n               <input type=\\\"text\\\" style=\\\"font-weight: bold;\\\" class=\\\"form-control\\\" placeholder=\\\"please enter to select the salesman\\\" (keydown.Tab)=\\\"showSalesmanList($event)\\\" [(ngModel)]=\\\"_reportFilterService.DebtorsReportObj.Debtors_salesman\\\"\\r\\n               (keydown.enter)=\\\"showSalesmanList($event)\\\">\\r\\n                                    \\r\\n              \\r\\n            </fieldset> -->\\r\\n\\r\\n         </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"modal-footer\\\" style=\\\"width : 97%; margin : 0px auto;\\\">\\r\\n         <button class=\\\"btn btn-info confirm-btn\\\" type=\\\"button\\\" (click)=onload()>RUN</button>\\r\\n         <button type=\\\"button\\\" (click)=\\\"closeReportBox()\\\" title=\\\"Cancel\\\" class=\\\"btn btn-info\\\">Close</button>\\r\\n      </div>\\r\\n\\r\\n   </div>\\r\\n   <generic-popup-grid #genericeSalesManList [popupsettings]=\\\"gridSalesmanListPopupSettings\\\"\\r\\n   (onItemDoubleClick)=\\\"onSalesManSelect($event)\\\"></generic-popup-grid>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/ReportDialogs/Debtors Report/debtorsreport.component.html\n// module id = 1736\n// module chunks = 0","module.exports = \"<div id=\\\"duevoucherReportId\\\" style=\\\"background-color : #ffffff; padding :1%; height : auto; width : 60%; \\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"modal-header\\\" style=\\\"width : 97%; margin : 0px auto;\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" (click)=\\\"closeReportBox()\\\">&times;</button>\\r\\n            <h4 class=\\\"modal-title\\\">Due Voucher Report</h4>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-md-12\\\">\\r\\n            <fieldset>\\r\\n                <label class=\\\"smallBoldLabel\\\"><input type=\\\"radio\\\" value=\\\"1\\\" name=\\\"optReportType\\\"\\r\\n                        [(ngModel)]=\\\"ReportParameters.ROPTION \\\">&nbsp;Summary Report</label><br>\\r\\n                <label class=\\\"smallBoldLabel\\\"><input type=\\\"radio\\\" value=\\\"2\\\" name=\\\"optReportType\\\"\\r\\n                        [(ngModel)]=\\\"ReportParameters.ROPTION \\\">&nbsp;Detail Report</label><br>\\r\\n            </fieldset>\\r\\n            <fieldset>\\r\\n                <legend>As On Dated:</legend>\\r\\n                <span>\\r\\n                    <label class=\\\"smallBoldLabel\\\"><input type=\\\"date\\\" style=\\\"width:152px; min-width:50%;\\\"\\r\\n                            placeholder=\\\"Year Start Date\\\" [(ngModel)]=\\\"ReportParameters.DATE1\\\"\\r\\n                            (change)=\\\"changestartDate($event.target.value,'AD')\\\"></label>\\r\\n                    <label class=\\\"smallBoldLabel\\\"><input id=\\\"nepaliDate\\\"\\r\\n                            style=\\\"width:152px;height:25px;text-align:center\\\"\\r\\n                            class=\\\"nepali-calendar ndp-nepali-calendar\\\" [(ngModel)]=\\\"ReportParameters.BSDATE1\\\"\\r\\n                            type=\\\"text\\\" (change)=\\\"changestartDate($event.target.value,'BS')\\\" placeholder=\\\"yyyy-mm-dd\\\" />\\r\\n                        (Miti) </label>\\r\\n                </span>\\r\\n            </fieldset>\\r\\n            <fieldset>\\r\\n                <legend>Customer / Supplier Selection :</legend>\\r\\n                <table>\\r\\n                    <tr>\\r\\n                        <td>\\r\\n                            <label class=\\\"smallBoldLabel\\\">A/C Code:</label>\\r\\n                        </td>\\r\\n                        <td>\\r\\n                            <label class=\\\"smallBoldLabel\\\"><input tabindex=\\\"2\\\" type=\\\"text\\\" class=\\\"form-control input-sm\\\"\\r\\n                                    style=\\\"height: 26px;\\\" (keydown.enter)=\\\"accodeChanged($event.target.value)\\\"\\r\\n                                    [(ngModel)]=\\\"ACCODE\\\"></label>\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                    <tr>\\r\\n                        <td>\\r\\n                            <label class=\\\"smallBoldLabel\\\">Account Name:</label>\\r\\n                        </td>\\r\\n                        <td>\\r\\n                            <label class=\\\"smallBoldLabel\\\"><input tabindex=\\\"2\\\" ngui-auto-complete\\r\\n                                    class=\\\"form-control input-sm\\\" [source]=\\\"dropListItem.bind(this)\\\" max-num-list=\\\"25\\\"\\r\\n                                    [(ngModel)]=\\\"ACCNAME\\\" list-formatter=\\\"ACNAME\\\" style=\\\"height: 26px;\\\"\\r\\n                                    (ngModelChange)=\\\"itemChanged($event)\\\" name=\\\"AcName\\\"\\r\\n                                    display-property-name=\\\"ACNAME\\\"></label>\\r\\n\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                </table>\\r\\n            </fieldset>\\r\\n            <fieldset>\\r\\n                <table>\\r\\n                    <tr>\\r\\n                        <td>\\r\\n                            <label class=\\\"smallBoldLabel\\\">\\r\\n                                Voucher Age <br> Between\\r\\n                            </label>\\r\\n                        </td>\\r\\n                        <td>\\r\\n                            <label class=\\\"smallBoldLabel\\\">\\r\\n                                <input type=\\\"text\\\" style=\\\"width : 92%;\\\" /> -\\r\\n                            </label>\\r\\n                        </td>\\r\\n                        <td>\\r\\n                            <label class=\\\"smallBoldLabel\\\">\\r\\n                                <input type=\\\"text\\\" style=\\\"width : 92%;\\\" />\\r\\n                            </label>\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                </table>\\r\\n            </fieldset>\\r\\n            <label class=\\\"smallBoldLabel\\\"><input type=\\\"checkbox\\\" style=\\\"vertical-align: middle;\\\"\\r\\n                    (change)=\\\"$event.target.checked?(ReportParameters.TOPNSORT=1):(ReportParameters.TOPNSORT=0)\\\"\\r\\n                    [checked]=\\\"ReportParameters.TOPNSORT == 1\\\" name=\\\"showClerVoucAlso\\\">&nbsp;Show Cleared/Tracked\\r\\n                Voucher Also</label>\\r\\n\\r\\n\\r\\n            <div class=\\\"btn\\\">\\r\\n                <!-- <button type=\\\"button\\\"  title=\\\"onSave\\\" class=\\\"btn btn-info\\\">Run</button>    -->\\r\\n                <button class=\\\"btn btn-info confirm-btn\\\" type=\\\"button\\\" (click)=onload()>RUN</button>\\r\\n                <button type=\\\"button\\\" title=\\\"Cancel\\\" class=\\\"btn btn-info\\\" (click)=\\\"closeReportBox()\\\">Close</button>\\r\\n            </div>\\r\\n\\r\\n        </div>\\r\\n\\r\\n    </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/ReportDialogs/DueVoucherReport/duevoucherreport.component.html\n// module id = 1737\n// module chunks = 0","module.exports = \"<style>\\r\\n    .modal-content-main-area {\\r\\n      width: 100% !important;\\r\\n\\r\\n    }\\r\\n\\r\\n\\r\\n  </style>\\r\\n\\r\\n  <div style=\\\"height:500px\\\">\\r\\n    <!-- Modal content -->\\r\\n    <div class=\\\"modal-content modal-content-main-area\\\" style=\\\"width: 50% !important\\\">\\r\\n      <div>\\r\\n        <div class=\\\"modal-header\\\" style=\\\"padding: 0px;background: #8cccfb;\\\">\\r\\n          <button class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"closeReportBox()\\\">\\r\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n          </button>\\r\\n          <h4 class=\\\"modal-title\\\" style=\\\"text-align: center;\\\">\\r\\n            Select Date\\r\\n          </h4>\\r\\n        </div>\\r\\n        <div class=\\\"modal-body\\\">\\r\\n          <div class=\\\"clearfix\\\">\\r\\n            <div class=\\\"col-md-12\\\">\\r\\n\\r\\n              <div class=\\\"col-md-6 form-group\\\">\\r\\n                <div class=\\\"report-filter single-calendar\\\">\\r\\n                  <label>Date Selection</label>\\r\\n                  <input class=\\\"form-control\\\" type=\\\"text\\\" ngxDaterangepickerMd [(ngModel)]=\\\"selectedDate\\\"\\r\\n                  [showDropdowns]=\\\"true\\\" [showCustomRangeLabel]=\\\"true\\\" [alwaysShowCalendars]=\\\"true\\\"\\r\\n                  [locale]=\\\"locale\\\" [ranges]=\\\"ranges\\\" [linkedCalendars]=\\\"true\\\" [showCancel]=\\\"true\\\"\\r\\n                  placeholder=\\\"Date Range...\\\" (ngModelChange)=\\\"dateChanged($event)\\\" />\\r\\n                </div>\\r\\n\\r\\n\\r\\n\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <hr style=\\\"margin-bottom: 0px !important\\\">\\r\\n          <div class=\\\"clearfix\\\" style=\\\"padding: 10px;\\\">\\r\\n\\r\\n            <button class=\\\"btn btn-info pull-right\\\" style=\\\"margin-left: 10px;\\\" (click)=onload()>RUN</button>\\r\\n            <button class=\\\"btn btn-info pull-right\\\" (click)=\\\"closeReportBox()\\\">Close</button>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/ReportDialogs/GST-Purchase-Summary/gst-purchase-summary.component.html\n// module id = 1738\n// module chunks = 0","module.exports = \"<style>\\r\\n    .modal-content-main-area {\\r\\n      width: 100% !important;\\r\\n\\r\\n    }\\r\\n\\r\\n\\r\\n  </style>\\r\\n\\r\\n  <div style=\\\"height:500px\\\">\\r\\n    <!-- Modal content -->\\r\\n    <div class=\\\"modal-content modal-content-main-area\\\" style=\\\"width: 50% !important\\\">\\r\\n      <div>\\r\\n        <div class=\\\"modal-header\\\" style=\\\"padding: 0px;background: #8cccfb;\\\">\\r\\n          <button class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"closeReportBox()\\\">\\r\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n          </button>\\r\\n          <h4 class=\\\"modal-title\\\" style=\\\"text-align: center;\\\">\\r\\n            Select Date\\r\\n          </h4>\\r\\n        </div>\\r\\n        <div class=\\\"modal-body\\\">\\r\\n          <div class=\\\"clearfix\\\">\\r\\n            <div class=\\\"col-md-12\\\">\\r\\n\\r\\n              <div class=\\\"col-md-6 form-group\\\">\\r\\n                <div class=\\\"report-filter single-calendar\\\">\\r\\n                  <label>Date Selection</label>\\r\\n                  <input class=\\\"form-control\\\" type=\\\"text\\\" ngxDaterangepickerMd [(ngModel)]=\\\"selectedDate\\\"\\r\\n                  [showDropdowns]=\\\"true\\\" [showCustomRangeLabel]=\\\"true\\\" [alwaysShowCalendars]=\\\"true\\\"\\r\\n                  [locale]=\\\"locale\\\" [ranges]=\\\"ranges\\\" [linkedCalendars]=\\\"true\\\" [showCancel]=\\\"true\\\"\\r\\n                  placeholder=\\\"Date Range...\\\" (ngModelChange)=\\\"dateChanged($event)\\\" />\\r\\n                </div>\\r\\n\\r\\n\\r\\n\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <hr style=\\\"margin-bottom: 0px !important\\\">\\r\\n          <div class=\\\"clearfix\\\" style=\\\"padding: 10px;\\\">\\r\\n\\r\\n            <button class=\\\"btn btn-info pull-right\\\" style=\\\"margin-left: 10px;\\\" (click)=onload()>RUN</button>\\r\\n            <button class=\\\"btn btn-info pull-right\\\" (click)=\\\"closeReportBox()\\\">Close</button>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/ReportDialogs/GST-Sales-Summary/gst-sales-summary.component.html\n// module id = 1739\n// module chunks = 0","module.exports = \"<style>\\r\\n   .input-text {\\r\\n      width: 100%;\\r\\n      /* height: 30px !important; */\\r\\n      font-weight: bold;\\r\\n   }\\r\\n   label{\\r\\n       font-size: 12px;\\r\\n       margin: 0;\\r\\n   }\\r\\n\\r\\n   .td-class {\\r\\n      border: none !important;\\r\\n   }\\r\\n\\r\\n   .date-input {\\r\\n      width: 93%;\\r\\n      font-size: 12px !important;\\r\\n      height: 30px !important;\\r\\n   }\\r\\n     @media screen and (max-width:991px) {\\r\\n         .report-container{\\r\\n           width: 100% !important;\\r\\n    }\\r\\n    .report-height{\\r\\n        height:52vh; \\r\\n        overflow:auto;\\r\\n    }\\r\\n    }\\r\\n         @media screen and (max-width:767px) {\\r\\n            .smallBoldLabel{\\r\\n                  width: auto !important;\\r\\n            }\\r\\n            \\r\\n        \\r\\n    }\\r\\n</style>\\r\\n<div class=\\\"container report-container\\\" style=\\\"background-color : #ffffff; padding :1%; height : auto;  \\\">\\r\\n   <div class=\\\"row\\\">\\r\\n      <div class=\\\"modal-header\\\" style=\\\"width : 97%; margin : 0px auto;\\\">\\r\\n         <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" (click)=\\\"closeReportBox()\\\" >&times;</button>\\r\\n         <h4 class=\\\"modal-title\\\">Depreciation Report (As per Income Tax)</h4>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-12 report-height\\\" style=\\\"padding-top: 2%;\\\">\\r\\n         <!-- Left Column -->\\r\\n         <div class=\\\"col-md-6\\\">\\r\\n\\r\\n            <fieldset>\\r\\n               <legend>Report Option</legend>\\r\\n               <select\\r\\n               style=\\\"height: 30px !important;\\\" class=\\\"form-control input-text\\\" [(ngModel)]=\\\"_reportFilterService.IncomeTaxObj.IncomeTax_REPORTOPTION\\\">\\r\\n                  <option *ngFor=\\\"let option of REPORTOPTION\\\" [value]=\\\"option.Mode\\\">{{ option.ReportOptionName }}</option>\\r\\n            </select>\\r\\n            </fieldset>\\r\\n            <fieldset>\\r\\n               <legend>Pool Selection</legend>\\r\\n                <select [(ngModel)]=\\\"_reportFilterService.IncomeTaxObj.IncomeTax_POOLNAME\\\"\\r\\n                style=\\\"height: 30px !important;\\\" class=\\\"form-control input-text\\\">\\r\\n                  <option value=\\\"%\\\"></option>\\r\\n                  <option *ngFor=\\\"let pool of poolName\\\" value=\\\"{{ pool.AssetGroupID }}\\\">{{ pool.GroupName }}</option>\\r\\n             </select>\\r\\n            </fieldset>\\r\\n\\r\\n\\r\\n            \\r\\n        \\r\\n         </div>\\r\\n         <!-- Right Column -->\\r\\n         <div class=\\\"col-md-6\\\">\\r\\n          \\r\\n           <!-- <fieldset>\\r\\n              <legend>Account Selection :</legend>\\r\\n              <input type=\\\"text\\\" style=\\\"font-weight: bold;\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"_reportFilterService.ActualVsBudgetObj.ActualVsBudget_AccLedger_ACCNAME\\\"\\r\\n                  placeholder=\\\"Press Enter or Tab for Account List\\\" (keydown.Tab)=\\\"AccountEnterClicked($event)\\\"\\r\\n                  (keydown.enter)=\\\"AccountEnterClicked($event)\\\">\\r\\n          </fieldset> -->\\r\\n\\r\\n          <fieldset style=\\\"padding-bottom: 5px;\\\">\\r\\n            <legend>Report Format</legend>\\r\\n            <label class=\\\"smallBoldLabel\\\"><input type=\\\"radio\\\" name=\\\"BalViewOpt1\\\"\\r\\n                    [(ngModel)]=\\\"_reportFilterService.IncomeTaxObj.IncomeTax_REPORTTYPE \\\" value=1>&nbsp;Summary\\r\\n                 </label>\\r\\n            <label class=\\\"smallBoldLabel\\\" style=\\\"clear : both;\\\"><input type=\\\"radio\\\" name=\\\"BalViewOpt1\\\"\\r\\n                    style=\\\"margin-left: 35px;\\\" [(ngModel)]=\\\"_reportFilterService.IncomeTaxObj.IncomeTax_REPORTTYPE\\\"\\r\\n                    value=0 >&nbsp;Detail\\r\\n                \\r\\n            </label>\\r\\n\\r\\n        </fieldset>\\r\\n            <div class=\\\"col-md-12 checkbox\\\" style=\\\"padding-top:5px\\\">\\r\\n               <label class=\\\"smallBoldLabel\\\"><input type=\\\"checkbox\\\" (change)=\\\"checkValue()\\\"\\r\\n                  [(ngModel)]=\\\"_reportFilterService.IncomeTaxObj.IncomeTax_TAXWISE\\\"\\r\\n                  >&nbsp;Show Depreciation Report as per Income Tax Format</label>\\r\\n           </div>\\r\\n\\r\\n         </div>\\r\\n       \\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"modal-footer\\\" style=\\\"width : 97%; margin : 0px auto;\\\">\\r\\n         <button class=\\\"btn btn-info confirm-btn\\\" type=\\\"button\\\"  (click)=\\\"onload()\\\" >RUN</button>\\r\\n         <button type=\\\"button\\\"  title=\\\"Cancel\\\" class=\\\"btn btn-info\\\" (click)=\\\"closeReportBox()\\\">Close</button>\\r\\n      </div>\\r\\n\\r\\n   </div>\\r\\n \"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/ReportDialogs/IncomeTax-Depreciation-Report/incometax-depreciation-report.component.html\n// module id = 1740\n// module chunks = 0","module.exports = \"<div id=\\\"journalBookReportId\\\"   style=\\\"background-color : #ffffff; height : auto; padding:1%;\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n           <div class=\\\"modal-header\\\"  style=\\\"width : 97%; margin : 0px auto;\\\">\\r\\n              <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" (click)=\\\"closeReportBox()\\\">&times;</button>\\r\\n              <h4 class=\\\"modal-title\\\">Journal Book Report</h4>\\r\\n           </div>\\r\\n           <div class=\\\"col-md-12\\\">\\r\\n              <table>\\r\\n                 <tr>\\r\\n                    <td>\\r\\n                       <input type=\\\"radio\\\" name=\\\"rangeSelection\\\" value=\\\"0\\\" [(ngModel)]=\\\"ReportParameters.OPT_REPMODE\\\"/>&nbsp;Date Range Selection\\r\\n                    </td>\\r\\n                    <td>\\r\\n                       <input type=\\\"radio\\\" name=\\\"rangeSelection\\\" value=\\\"1\\\" [(ngModel)]=\\\"ReportParameters.OPT_REPMODE\\\" />&nbsp;Voucher Range Selection\\r\\n                    </td>\\r\\n                 </tr>\\r\\n                 <tr>\\r\\n                    <td>\\r\\n                       <fieldset>\\r\\n                          <legend>Date Range Selection</legend>\\r\\n                          <table> \\r\\n                                <tr>\\r\\n                                   <td><label class=\\\"smallBoldLabel\\\">From(AD):</label></td>\\r\\n                                   <td><label class=\\\"smallBoldLabel\\\">To(AD):</label></td>\\r\\n                                </tr>\\r\\n                                <tr>\\r\\n                                   <td>                                                 \\r\\n                                         <label class=\\\"smallBoldLabel\\\"><input  type=\\\"date\\\"  style=\\\"width:152px; min-width:50%;\\\"  placeholder=\\\"Year Start Date\\\" [(ngModel)]=\\\"ReportParameters.DATE1\\\"  (change)=\\\"changestartDate($event.target.value,'AD')\\\"  ></label>\\r\\n                                   </td>\\r\\n                                   <td>                                                 \\r\\n                                         <label class=\\\"smallBoldLabel\\\"><input  type=\\\"date\\\" style=\\\"width:152px; min-width:50%;\\\"  placeholder=\\\"Year Start Date\\\" [(ngModel)]=\\\"ReportParameters.DATE2\\\"  (change)=\\\"changeEndDate($event.target.value,'AD')\\\"   ></label>\\r\\n                                   </td>\\r\\n                                </tr>\\r\\n                                <tr>\\r\\n                                   <td>\\r\\n                                         <label class=\\\"smallBoldLabel\\\"><input id=\\\"nepaliDate\\\" style=\\\"width:152px;height:25px;text-align:center\\\" class=\\\"nepali-calendar ndp-nepali-calendar\\\" [(ngModel)]=\\\"ReportParameters.BSDATE1\\\"\\r\\n                                      type=\\\"text\\\" (change)=\\\"changestartDate($event.target.value,'BS')\\\"\\r\\n                                      placeholder=\\\"yyyy-mm-dd\\\" /> </label>\\r\\n                                   </td>\\r\\n                                   <td>\\r\\n                                         <label class=\\\"smallBoldLabel\\\"><input id=\\\"nepaliDate\\\" style=\\\"width:152px;height:25px;text-align:center\\\" class=\\\"nepali-calendar ndp-nepali-calendar\\\" [(ngModel)]=\\\"ReportParameters.BSDATE2\\\"\\r\\n                                      type=\\\"text\\\" (change)=\\\"changeEndDate($event.target.value,'BS')\\\"\\r\\n                                      placeholder=\\\"yyyy-mm-dd\\\" /> </label>\\r\\n                                   </td>\\r\\n                                </tr>\\r\\n                             </table>\\r\\n                       </fieldset>\\r\\n                    </td>\\r\\n                    <td>\\r\\n                       <fieldset>\\r\\n                          <legend>Voucher Range Selection</legend>\\r\\n                          <table>\\r\\n                             <tr>\\r\\n                                <td>From</td>\\r\\n                                <td style=\\\"border:1px solid;\\\">\\r\\n                                   <span style=\\\"border-right: 1px solid; \\\">JV-</span><input style=\\\"border : none; width : 130px;\\\" type=\\\"text\\\" name=\\\"fromRV\\\" [(ngModel)]=\\\"ReportParameters.VNO1\\\" />\\r\\n                                </td>\\r\\n                             </tr>\\r\\n                      \\r\\n                             <tr>\\r\\n                                <td>To</td>\\r\\n                                <td style=\\\"border:1px solid;\\\">\\r\\n                                   <span style=\\\"border-right: 1px solid;\\\">JV-</span><input style=\\\"border : none; width:130px; \\\" type=\\\"text\\\" name=\\\"toRV\\\" [(ngModel)]=\\\"ReportParameters.VNO2\\\" />\\r\\n                                </td>\\r\\n                             </tr>\\r\\n                          </table>\\r\\n                       </fieldset>\\r\\n                    </td>\\r\\n                 </tr>\\r\\n                 <tr>\\r\\n                    <td>\\r\\n                        <fieldset>\\r\\n                            <legend>Division Selection:</legend>\\r\\n                                <select [(ngModel)]=\\\"ReportParameters.DIVISION\\\" style=\\\"width : 100%;\\\">\\r\\n                                 <option value=\\\"%\\\" *ngIf=\\\"masterService.userSetting.userwisedivision==0\\\">All</option>\\r\\n                                    <option *ngFor=\\\"let div of division\\\" value=\\\"{{ div.INITIAL }}\\\">\\r\\n                                        {{ div.NAME }}\\r\\n                                    </option>\\r\\n                                </select>\\r\\n                        </fieldset>\\r\\n                    </td>\\r\\n                    <td>\\r\\n                       <fieldset>\\r\\n                          <legend>Journal Voucher Series Selection</legend>\\r\\n                          <select style=\\\"width : 100%;\\\">\\r\\n                             <option>--Series Selection--</option>\\r\\n                          </select>\\r\\n                       </fieldset>\\r\\n                    </td>\\r\\n                 </tr>\\r\\n              </table>\\r\\n              <fieldset>\\r\\n                 <legend>Report Filter Option</legend>\\r\\n                 <div>\\r\\n                    <span style=\\\"border : none;\\\">Account Name: </span>\\r\\n                    <select style=\\\"width : 100%;\\\">\\r\\n                       <option>All</option>\\r\\n                       <option *ngFor=\\\"let ac of aclist\\\">\\r\\n                          {{ ac.ACNAME }}\\r\\n                       </option>\\r\\n                    </select>\\r\\n                 </div>\\r\\n              </fieldset>\\r\\n           </div>\\r\\n           <div class=\\\"btn\\\">\\r\\n                <button class=\\\"btn btn-info confirm-btn\\\" type=\\\"button\\\"  (click)=onload()>RUN</button>\\r\\n                <button type=\\\"button\\\"  title=\\\"Cancel\\\" class=\\\"btn btn-info\\\">Close</button>  \\r\\n            </div>\\r\\n        </div>\\r\\n     </div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/ReportDialogs/JournalBook/journalbook.component.html\n// module id = 1741\n// module chunks = 0","module.exports = \"<style>\\r\\n    .input-text {\\r\\n        width: 100%;\\r\\n        /* height: 30px !important; */\\r\\n        font-weight: bold;\\r\\n    }\\r\\n\\r\\n    .td-class {\\r\\n        border: none !important;\\r\\n    }\\r\\n\\r\\n    .date-input {\\r\\n        width: 93%;\\r\\n        font-size: 12px !important;\\r\\n        height: 30px !important;\\r\\n    }\\r\\n</style>\\r\\n<div class=\\\"container\\\" style=\\\"background-color : #ffffff; padding :1%; height : auto;  \\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"modal-header\\\" style=\\\"width : 97%; margin : 0px auto;\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" (click)=\\\"closeReportBox()\\\">&times;</button>\\r\\n            <h4 class=\\\"modal-title\\\">Local Purchase Cost Allocation Report</h4>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-12\\\" style=\\\"margin-top:20px;\\\">\\r\\n            <!-- Left Column -->\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n                <fieldset>\\r\\n                    <legend>Ref No: </legend>\\r\\n                    <input type=\\\"text\\\" style=\\\"font-weight: bold;\\\" class=\\\"form-control\\\"\\r\\n                        [(ngModel)]=\\\"_reportFilterService.LocalPurchaseCostAllocationObj.LocalPurchaseCostAllocation_CAPITALPURCHASE_VCHRNO\\\"\\r\\n                        placeholder=\\\"Press Enter or Tab for Ref Voucher No List\\\" (keydown.Tab)=\\\"CPVoucherPopup($event)\\\"\\r\\n                        (keydown.enter)=\\\"CPVoucherPopup($event)\\\">\\r\\n                </fieldset>\\r\\n\\r\\n                <fieldset>\\r\\n                    <legend>Report Option</legend>\\r\\n                    <div class=\\\"row\\\">\\r\\n                       <div class=\\\"col-sm-4\\\">\\r\\n                          <label class=\\\"smallBoldLabel\\\" style=\\\"white-space: nowrap;\\\"><input type=\\\"radio\\\" name=\\\"locaPurCostAlOp\\\"\\r\\n                             [(ngModel)]=\\\"_reportFilterService.LocalPurchaseCostAllocationObj.LocalPurchaseCostAllocation_REPORTMODE\\\" [checked]=\\\"true\\\" value=0>&nbsp;Show all report</label>\\r\\n                       </div>\\r\\n                    \\r\\n                    </div>\\r\\n                    <label class=\\\"smallBoldLabel\\\"><input type=\\\"radio\\\" name=\\\"locaPurCostAlOp\\\"\\r\\n                     [(ngModel)]=\\\"_reportFilterService.LocalPurchaseCostAllocationObj.LocalPurchaseCostAllocation_REPORTMODE\\\"  value=1>&nbsp; Show only entries converted to Additional Cost</label>\\r\\n                    <label class=\\\"smallBoldLabel\\\"><input type=\\\"radio\\\" name=\\\"locaPurCostAlOp\\\"\\r\\n                     [(ngModel)]=\\\"_reportFilterService.LocalPurchaseCostAllocationObj.LocalPurchaseCostAllocation_REPORTMODE\\\"  value=2>&nbsp;Show only entries non-converted to Additional Cost</label>\\r\\n                    \\r\\n                 </fieldset>\\r\\n            </div>\\r\\n            <!-- Right Column -->\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n\\r\\n                <fieldset>\\r\\n                    <legend>Account Selection: </legend>\\r\\n                    <input type=\\\"text\\\" style=\\\"font-weight: bold;\\\" class=\\\"form-control\\\"\\r\\n                        [(ngModel)]=\\\"_reportFilterService.LocalPurchaseCostAllocationObj.LocalPurchaseCostAllocation_ACCNAME\\\"\\r\\n                        placeholder=\\\"Press Enter or Tab for Account List\\\" (keydown.Tab)=\\\"AccountEnterClicked($event)\\\"\\r\\n                        (keydown.enter)=\\\"AccountEnterClicked($event)\\\">\\r\\n                </fieldset>\\r\\n\\r\\n                <!-- PI Voucher -->\\r\\n                <fieldset>\\r\\n                    <legend>PI Voucher: </legend>\\r\\n                    <input type=\\\"text\\\" style=\\\"font-weight: bold;\\\" class=\\\"form-control\\\"\\r\\n                        [(ngModel)]=\\\"_reportFilterService.LocalPurchaseCostAllocationObj.LocalPurchaseCostAllocation_PI_VOUCHERNO\\\"\\r\\n                        placeholder=\\\"Press Enter or Tab for PI Voucher List\\\"\\r\\n                        (keydown.Tab)=\\\"PiVoucherEnterClicked($event)\\\" (keydown.enter)=\\\"PiVoucherEnterClicked($event)\\\">\\r\\n                </fieldset>\\r\\n\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"modal-footer\\\" style=\\\"width : 97%; margin : 0px auto;\\\">\\r\\n            <button class=\\\"btn btn-info confirm-btn\\\" type=\\\"button\\\" (click)=onload()>RUN</button>\\r\\n            <button type=\\\"button\\\" (click)=\\\"closeReportBox()\\\" title=\\\"Cancel\\\" class=\\\"btn btn-info\\\">Close</button>\\r\\n        </div>\\r\\n\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<generic-popup-grid #genericGridLocalPurchaseCostAccount [popupsettings]=\\\"gridPopupSettingsForAccountList\\\"\\r\\n    (onItemDoubleClick)=\\\"dblClickAccountSelect($event)\\\">\\r\\n</generic-popup-grid>\\r\\n\\r\\n<generic-popup-grid #genericGridLocalPurchasePIVoucher [popupsettings]=\\\"gridPopupSettingsForLocalPurchasePIVoucher\\\"\\r\\n    (onItemDoubleClick)=\\\"dblClickPurchasePIVoucherSelect($event)\\\">\\r\\n</generic-popup-grid>\\r\\n\\r\\n<generic-popup-grid #genericGridCPVoucher [popupsettings]=\\\"gridCPVoucherPopupSettings\\\"\\r\\n    (onItemDoubleClick)=\\\"DblClickCPVoucherSelect($event)\\\"></generic-popup-grid>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/ReportDialogs/LocalPurchasecost-allocation-report/localpurchasecost-allocation-report.component.html\n// module id = 1742\n// module chunks = 0","module.exports = \"<account-payable-report *ngIf=\\\"activeurlpath=='accountpayablereport'\\\" (reportdataEmit)=\\\"reportdataEmit($event)\\\">\\r\\n</account-payable-report>\\r\\n<account-receivable-report *ngIf=\\\"activeurlpath=='accountreceivablereport'\\\" (reportdataEmit)=\\\"reportdataEmit($event)\\\">\\r\\n</account-receivable-report>\\r\\n<gst-sales-summary *ngIf=\\\"activeurlpath=='gstsalessummary'\\\" (reportdataEmit)=\\\"reportdataEmit($event)\\\">\\r\\n</gst-sales-summary>\\r\\n<result-purchasebookreport-dialog  *ngIf=\\\"activeurlpath=='purchasebookreport'\\\" (reportdataEmit)=\\\"reportdataEmit($event)\\\"></result-purchasebookreport-dialog>\\r\\n<result-cashbookreport-dialog (reportdataEmit)=\\\"reportdataEmit($event)\\\" *ngIf=\\\"activeurlpath=='cashbookreport'\\\"></result-cashbookreport-dialog>\\r\\n<result-salesbookreport-dialog (reportdataEmit)=\\\"reportdataEmit($event)\\\" *ngIf=\\\"activeurlpath=='salesbookreport'\\\"></result-salesbookreport-dialog>\\r\\n<result-journalbook-dialog (reportdataEmit)=\\\"reportdataEmit($event)\\\" *ngIf=\\\"activeurlpath=='journalbook'\\\"></result-journalbook-dialog>\\r\\n<result-duevoucherreport-dialog (reportdataEmit)=\\\"reportdataEmit($event)\\\" *ngIf=\\\"activeurlpath=='duevoucherreport'\\\"></result-duevoucherreport-dialog>\\r\\n<result-debtorsreport-dialog  (reportdataEmit)=\\\"reportdataEmit($event)\\\" *ngIf=\\\"activeurlpath=='debtorsreport'\\\"></result-debtorsreport-dialog>\\r\\n<result-creditorsreport-dialog  (reportdataEmit)=\\\"reportdataEmit($event)\\\" *ngIf=\\\"activeurlpath=='creditorsreport'\\\"></result-creditorsreport-dialog>\\r\\n<result-partyledger-dialog  (reportdataEmit)=\\\"reportdataEmit($event)\\\" *ngIf=\\\"activeurlpath=='PartyLedger'\\\"></result-partyledger-dialog>\\r\\n<result-debtors-aging-report-dialog  (reportdataEmit)=\\\"reportdataEmit($event)\\\" *ngIf=\\\"activeurlpath=='debtorsagingreport'\\\"  ></result-debtors-aging-report-dialog>\\r\\n<result-creditros-aging-report-dialog (reportdataEmit)=\\\"reportdataEmit($event)\\\" *ngIf=\\\"activeurlpath=='creditorsagingreport'\\\" ></result-creditros-aging-report-dialog>\\r\\n<result-debtors-outstanding-report-dialog (reportdataEmit)=\\\"reportdataEmit($event)\\\" *ngIf=\\\"activeurlpath=='debtorsoutstandingreport'\\\" ></result-debtors-outstanding-report-dialog>\\r\\n<result-creditors-outstanding-report-dialog (reportdataEmit)=\\\"reportdataEmit($event)\\\" *ngIf=\\\"activeurlpath=='creditorsoutstandingreport'\\\"  ></result-creditors-outstanding-report-dialog>\\r\\n<summary-ledger-report  (reportdataEmit)=\\\"reportdataEmit($event)\\\" *ngIf=\\\"activeurlpath=='summaryledgerreport'\\\"></summary-ledger-report>\\r\\n<account-ledger-report  (reportdataEmit)=\\\"reportdataEmit($event)\\\" *ngIf=\\\"activeurlpath=='accountledgerreport'\\\"></account-ledger-report>\\r\\n<summary-party-ledger  (reportdataEmit)=\\\"reportdataEmit($event)\\\" *ngIf=\\\"activeurlpath=='summarypartyledger'\\\"></summary-party-ledger>\\r\\n<party-ledger-report  (reportdataEmit)=\\\"reportdataEmit($event)\\\" *ngIf=\\\"activeurlpath=='partyledgerreport'\\\"></party-ledger-report>\\r\\n\\r\\n\\r\\n<debitnote-register-report *ngIf=\\\"activeurlpath=='debit-note-register-report'\\\"\\r\\n  (reportdataEmit)=\\\"reportdataEmit($event)\\\"></debitnote-register-report>\\r\\n<vat-purchase-register-report *ngIf=\\\"activeurlpath=='vat-purchase-register-report'\\\"\\r\\n  (reportdataEmit)=\\\"reportdataEmit($event)\\\"></vat-purchase-register-report>\\r\\n<one-lakh-above-purchase-report *ngIf=\\\"activeurlpath=='one-lakh-above-purchase-report'\\\"\\r\\n  (reportdataEmit)=\\\"reportdataEmit($event)\\\"></one-lakh-above-purchase-report>\\r\\n<one-lakh-above-SALES-report *ngIf=\\\"activeurlpath=='one-lakh-above-sales-report'\\\"\\r\\n  (reportdataEmit)=\\\"reportdataEmit($event)\\\"></one-lakh-above-SALES-report>\\r\\n <voucher-registor-dialog  *ngIf=\\\"activeurlpath=='voucher-regeister-report'\\\"  (reportdataEmit)=\\\"reportdataEmit($event)\\\"  >   \\r\\n </voucher-registor-dialog> \\r\\n <cash-bank-book  (reportdataEmit)=\\\"reportdataEmit($event)\\\" *ngIf=\\\"activeurlpath=='cash-bank-book-report'\\\"></cash-bank-book>\\r\\n <day-book-report  (reportdataEmit)=\\\"reportdataEmit($event)\\\" *ngIf=\\\"activeurlpath=='day-book-report'\\\"></day-book-report>\\r\\n <sub-ledger-report  (reportdataEmit)=\\\"reportdataEmit($event)\\\" *ngIf=\\\"activeurlpath=='sub-ledger-report'\\\"></sub-ledger-report>\\r\\n <sub-ledger-acbase-report  (reportdataEmit)=\\\"reportdataEmit($event)\\\" *ngIf=\\\"activeurlpath=='sub-ledger-report-acbase'\\\"></sub-ledger-acbase-report>\\r\\n <trial-balance-report  (reportdataEmit)=\\\"reportdataEmit($event)\\\" *ngIf=\\\"activeurlpath=='trial-balance-report'\\\"></trial-balance-report>\\r\\n <additionalcost-itemwise-report  (reportdataEmit)=\\\"reportdataEmit($event)\\\" *ngIf=\\\"activeurlpath=='additionalcost-itemwise-report'\\\"></additionalcost-itemwise-report>\\r\\n <additionalcost-voucherwise-report  (reportdataEmit)=\\\"reportdataEmit($event)\\\" *ngIf=\\\"activeurlpath=='additionalcost-voucherwise-report'\\\"></additionalcost-voucherwise-report>\\r\\n <salesreturn-summary-report (reportdataEmit)=\\\"reportdataEmit($event)\\\" *ngIf=\\\"activeurlpath=='salesreturnsummary-report'\\\"></salesreturn-summary-report>\\r\\n <salesreturnsummary-retailerreport (reportdataEmit)=\\\"reportdataEmit($event)\\\" *ngIf=\\\"activeurlpath=='salesreturnsummaryretailer-report'\\\"></salesreturnsummary-retailerreport>\\r\\n <sales-return-reportdetail (reportdataEmit)=\\\"reportdataEmit($event)\\\" *ngIf=\\\"activeurlpath=='salesreturn-reportdetail'\\\"></sales-return-reportdetail>\\r\\n <stock-valuation-report (reportdataEmit)=\\\"reportdataEmit($event)\\\" *ngIf=\\\"activeurlpath=='stockvaluation-reportdms'\\\" ></stock-valuation-report>\\r\\n <stock-ledger-report-account (reportdataEmit)=\\\"reportdataEmit($event)\\\" *ngIf=\\\"activeurlpath=='stockledger-reportdms'\\\"></stock-ledger-report-account>\\r\\n <stocksummary-reportaccount (reportdataEmit)=\\\"reportdataEmit($event)\\\" *ngIf=\\\"activeurlpath=='stocksummary-reportdms'\\\"></stocksummary-reportaccount>\\r\\n <currentstock-warehousewise-account (reportdataEmit)=\\\"reportdataEmit($event)\\\" *ngIf=\\\"activeurlpath=='currentstock-warehousewise-reportdms'\\\"></currentstock-warehousewise-account>\\r\\n <stockabc-analysis-account (reportdataEmit)=\\\"reportdataEmit($event)\\\" *ngIf=\\\"activeurlpath=='stockabc-analysis-reportdms'\\\"></stockabc-analysis-account>\\r\\n <consolidated-trial-balance-report (reportdataEmit)=\\\"reportdataEmit($event)\\\" *ngIf=\\\"activeurlpath=='consolidated-trialbalance-report'\\\"></consolidated-trial-balance-report>\\r\\n \\r\\n <actual-vs-budget-report (reportdataEmit)=\\\"reportdataEmit($event)\\\" *ngIf=\\\"activeurlpath=='actual-vs-budget-report'\\\"></actual-vs-budget-report>\\r\\n <profitloss-report  (reportdataEmit)=\\\"reportdataEmit($event)\\\" *ngIf=\\\"activeurlpath=='profit-loss-report'\\\"></profitloss-report>\\r\\n <balancesheet-report  (reportdataEmit)=\\\"reportdataEmit($event)\\\" *ngIf=\\\"activeurlpath=='balance-sheet-report'\\\"></balancesheet-report>\\r\\n\\r\\n <tds-report (reportdataEmit)=\\\"reportdataEmit($event)\\\" *ngIf=\\\"activeurlpath=='tds-report'\\\"></tds-report>\\r\\n <consolidated-balance-sheet-report  (reportdataEmit)=\\\"reportdataEmit($event)\\\" *ngIf=\\\"activeurlpath=='consolidated-balance-sheet-report'\\\"></consolidated-balance-sheet-report>\\r\\n <consolidated-profit-loss-report  (reportdataEmit)=\\\"reportdataEmit($event)\\\" *ngIf=\\\"activeurlpath=='consolidated-profit-loss-report'\\\"></consolidated-profit-loss-report>\\r\\n <billtracking-report-selector (reportdataEmit)=\\\"reportdataEmit($event)\\\" *ngIf=\\\"activeurlpath=='bill-tracking-report'\\\"></billtracking-report-selector>\\r\\n <creditorsbilltracking-report-selector (reportdataEmit)=\\\"reportdataEmit($event)\\\" *ngIf=\\\"activeurlpath=='creditorsbill-tracking-report'\\\"></creditorsbilltracking-report-selector>\\r\\n <postdated-report-selector (reportdataEmit)=\\\"reportdataEmit($event)\\\" *ngIf=\\\"activeurlpath=='postdated-chequevoucher-report'\\\"></postdated-report-selector>\\r\\n <monthly-sales-payment (reportdataEmit)=\\\"reportdataEmit($event)\\\" *ngIf=\\\"activeurlpath=='monthly-sales-payment-report'\\\"></monthly-sales-payment>\\r\\n<localpurchasecost-allocation-report (reportdataEmit)=\\\"reportdataEmit($event)\\\" *ngIf=\\\"activeurlpath=='local-purchase-cost-allocation-report'\\\"></localpurchasecost-allocation-report>\\r\\n<incometax-depreciation-report (reportdataEmit)=\\\"reportdataEmit($event)\\\" *ngIf=\\\"activeurlpath=='incometax-depreciation-report'\\\"></incometax-depreciation-report>\\r\\n<companynorms-depreciation-report (reportdataEmit)=\\\"reportdataEmit($event)\\\" *ngIf=\\\"activeurlpath=='companynorms-depreciation-report'\\\"></companynorms-depreciation-report>\\r\\n<faarasset-depreciation-report (reportdataEmit)=\\\"reportdataEmit($event)\\\" *ngIf=\\\"activeurlpath=='faarasset-depreciation-report'\\\"></faarasset-depreciation-report>\\r\\n<cash-collection-voucher-report (reportdataEmit)=\\\"reportdataEmit($event)\\\" *ngIf=\\\"activeurlpath=='cash-collection-voucher-report'\\\"></cash-collection-voucher-report>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/ReportDialogs/MasterDialogReport/MasterDialogReport.html\n// module id = 1743\n// module chunks = 0","module.exports = \"<style>\\r\\n    .input-text{\\r\\n        width : 100%;\\r\\n        /* height: 30px !important; */\\r\\n        font-weight: bold;\\r\\n    }\\r\\n    .td-class{\\r\\n        border: none !important;\\r\\n    }\\r\\n    .date-input{\\r\\n        width: 93%;\\r\\n        font-size: 12px !important;\\r\\n        height: 30px !important;\\r\\n    }\\r\\n</style>\\r\\n<div class=\\\"container\\\" style=\\\"background-color : #ffffff; padding :1%; height : auto;  \\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"modal-header\\\" style=\\\"width : 97%; margin : 0px auto;\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" (click)=\\\"closeReportBox()\\\">&times;</button>\\r\\n            <h4 class=\\\"modal-title\\\">Monthly Sales Payment Report</h4>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-12\\\">\\r\\n            <!-- Left Column -->\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n                <fieldset>\\r\\n                    <legend style=\\\"font-size:11px;font-weight: bold; width:auto\\\">Date Range Selection :</legend>\\r\\n                <table>\\r\\n                        <tr>\\r\\n                            <td class=\\\"td-class\\\"><label class=\\\"smallBoldLabel\\\">From:(AD)</label></td>\\r\\n                            <td class=\\\"td-class\\\"><label class=\\\"smallBoldLabel\\\">To:(AD)</label></td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td class=\\\"td-class\\\">\\r\\n                                    <input type=\\\"date\\\"\\r\\n                                    class=\\\"date-input form-control\\\" placeholder=\\\"Year Start Date\\\"\\r\\n                                        [(ngModel)]=\\\"_reportFilterService.MonthlySalesPaymentObj.MonthlySalesPayment_DATE1\\\"\\r\\n                                        (change)=\\\"changeEntryDate($event.target.value,'AD')\\\" (focusout)=\\\"focusOutFromDate($event.target.value)\\\" max=\\\"{{masterService.date1 | date:'yyyy-MM-dd'}}\\\" min=\\\"{{masterService.date2 | date:'yyyy-MM-dd'}}\\\">\\r\\n                            </td>\\r\\n                            <td class=\\\"td-class\\\">\\r\\n                                    <input type=\\\"date\\\"\\r\\n                                    class=\\\"date-input form-control\\\" placeholder=\\\"Year Start Date\\\"\\r\\n                                        [(ngModel)]=\\\"_reportFilterService.MonthlySalesPaymentObj.MonthlySalesPayment_DATE2\\\"\\r\\n                                        (change)=\\\"changeEndDate($event.target.value,'AD')\\\" max=\\\"{{masterService.date1 | date:'yyyy-MM-dd'}}\\\" min=\\\"{{masterService.date2 | date:'yyyy-MM-dd'}}\\\">\\r\\n                            </td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td class=\\\"td-class\\\">\\r\\n                              <nepali-date-picker name=\\\"nepaliDateFrom\\\" [id]=\\\"'nepaliDatefrom'\\\"\\r\\n                              (change)=\\\"changeEntryDate($event.detail.value,'BS')\\\"\\r\\n                              [label]=\\\"'From'\\\"\\r\\n                              [(ngModel)]=\\\"_reportFilterService.MonthlySalesPaymentObj.MonthlySalesPayment_BSDATE1\\\">\\r\\n                            </nepali-date-picker>\\r\\n                                     <!-- <input id=\\\"nepaliDate\\\"\\r\\n                                     style=\\\"text-align:center;\\\"\\r\\n                                     class=\\\"nepali-calendar ndp-nepali-calendar date-input form-control\\\"\\r\\n                                        [(ngModel)]=\\\"_reportFilterService.MonthlySalesPaymentObj.MonthlySalesPayment_BSDATE1\\\" type=\\\"text\\\"\\r\\n                                        (change)=\\\"changeEntryDate($event.target.value,'BS')\\\"\\r\\n                                        placeholder=\\\"yyyy-mm-dd\\\" />                 -->\\r\\n                            </td>\\r\\n                            <td class=\\\"td-class\\\">\\r\\n                              <nepali-date-picker name=\\\"nepaliDateFrom\\\" [id]=\\\"'nepaliDateTo'\\\"\\r\\n                              (change)=\\\"changeEndDate($event.detail.value,'BS')\\\"\\r\\n                              [label]=\\\"'To'\\\"\\r\\n                              [(ngModel)]=\\\"_reportFilterService.MonthlySalesPaymentObj.MonthlySalesPayment_BSDATE2\\\">\\r\\n                            </nepali-date-picker>\\r\\n                                    <!-- <input id=\\\"nepaliDate\\\" style=\\\"text-align:center;\\\"\\r\\n                                    class=\\\"nepali-calendar ndp-nepali-calendar date-input form-control\\\"\\r\\n                                        [(ngModel)]=\\\"_reportFilterService.MonthlySalesPaymentObj.MonthlySalesPayment_BSDATE2\\\" type=\\\"text\\\"\\r\\n                                        (change)=\\\"changeEndDate($event.target.value,'BS')\\\"\\r\\n                                        placeholder=\\\"yyyy-mm-dd\\\" /> -->\\r\\n                            </td>\\r\\n                        </tr>\\r\\n                    </table>\\r\\n                </fieldset>\\r\\n\\r\\n                <fieldset>\\r\\n                    <legend>Division Selection:</legend>\\r\\n                    <select [(ngModel)]=\\\"_reportFilterService.MonthlySalesPaymentObj.MonthlySalesPayment_DIV\\\" style=\\\"height: 30px !important;\\\"\\r\\n                    class=\\\"form-control input-text\\\">\\r\\n                    <option value=\\\"%\\\" *ngIf=\\\"masterService.userSetting.userwisedivision==0 ||  masterService.showAll\\\">ALL</option>\\r\\n                        <option *ngFor=\\\"let div of division\\\" value=\\\"{{ div.INITIAL }}\\\">\\r\\n                            {{ div.NAME }}\\r\\n                        </option>\\r\\n                    </select>\\r\\n                </fieldset>\\r\\n            </div>\\r\\n            <!-- Right Column -->\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n                <!-- <account-list></account-list> -->\\r\\n                <fieldset>\\r\\n                    <legend>Account Selection: </legend>\\r\\n                    <input type=\\\"text\\\" style=\\\"font-weight: bold;\\\" class=\\\"form-control\\\"\\r\\n                        [(ngModel)]=\\\"_reportFilterService.MonthlySalesPaymentObj.MonthlySalesPayment_ACCNAME\\\" placeholder=\\\"Press Enter or Tab for Account List\\\"\\r\\n                        (keydown.Tab)=\\\"AccountEnterClicked($event)\\\" (keydown.enter)=\\\"AccountEnterClicked($event)\\\">\\r\\n                </fieldset>\\r\\n\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"modal-footer\\\" style=\\\"width : 97%; margin : 0px auto;\\\">\\r\\n            <button class=\\\"btn btn-info confirm-btn\\\" type=\\\"button\\\" (click)=onload()>RUN</button>\\r\\n            <button type=\\\"button\\\" (click)=\\\"closeReportBox()\\\" title=\\\"Cancel\\\" class=\\\"btn btn-info\\\">Close</button>\\r\\n        </div>\\r\\n\\r\\n    </div>\\r\\n\\r\\n    <generic-popup-grid #genericGridMonthlysalesPayment [popupsettings]=\\\"gridPopupSettingsForAccountList\\\"\\r\\n    (onItemDoubleClick)=\\\"dblClickAccountSelect($event)\\\">\\r\\n</generic-popup-grid>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/ReportDialogs/MonthlySalesPaymentReport/monthly-sales-payement-report.component.html\n// module id = 1744\n// module chunks = 0","module.exports = \"<div style=\\\"background-color : #ffffff; padding :1%; height : auto; width:50%; \\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"modal-header\\\">\\r\\n      <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" (click)=\\\"hide()\\\">&times;</button>\\r\\n      <h4 class=\\\"modal-title\\\">One Lakh Above Sales Report</h4>\\r\\n    </div>\\r\\n    <div class=\\\"_left_section col-md-12\\\">\\r\\n      <fieldset style=\\\"width:352px\\\">\\r\\n        <legend style=\\\"font-size:11px;font-weight: bold; width:auto\\\">Date Range Selection :</legend>\\r\\n        <table>\\r\\n          <tr>\\r\\n            <td><label class=\\\"smallBoldLabel\\\">From:(AD)</label></td>\\r\\n            <td><label class=\\\"smallBoldLabel\\\">To:(AD)</label></td>\\r\\n          </tr>\\r\\n          <tr>\\r\\n            <td>\\r\\n              <label class=\\\"smallBoldLabel\\\"><input type=\\\"date\\\" style=\\\"width:152px; min-width:50%;\\\"\\r\\n                  placeholder=\\\"Year Start Date\\\" [(ngModel)]=\\\"OneLakhAboveSalesReport.DATE1\\\"\\r\\n                  (change)=\\\"changeEntryDate($event.target.value,'AD')\\\"></label>\\r\\n            </td>\\r\\n            <td>\\r\\n              <label class=\\\"smallBoldLabel\\\"><input type=\\\"date\\\" style=\\\"width:152px; min-width:50%;\\\"\\r\\n                  placeholder=\\\"Year Start Date\\\" [(ngModel)]=\\\"OneLakhAboveSalesReport.DATE\\\"\\r\\n                  (change)=\\\"changeEndDate($event.target.value,'AD')\\\"></label>\\r\\n            </td>\\r\\n          </tr>\\r\\n          <tr>\\r\\n            <td>\\r\\n              <label class=\\\"smallBoldLabel\\\"> <input id=\\\"nepaliDate\\\" style=\\\"width:152px;height:25px;text-align:center\\\"\\r\\n                  class=\\\"nepali-calendar ndp-nepali-calendar\\\" [(ngModel)]=\\\"OneLakhAboveSalesReport.BSDATE1\\\" type=\\\"text\\\"\\r\\n                  (change)=\\\"changeEntryDate($event.target.value,'BS')\\\" placeholder=\\\"yyyy-mm-dd\\\" />\\r\\n              </label>\\r\\n            </td>\\r\\n            <td>\\r\\n              <label class=\\\"smallBoldLabel\\\">\\r\\n                <input id=\\\"nepaliDate\\\" style=\\\"width:152px;height:25px;text-align:center\\\"\\r\\n                  class=\\\"nepali-calendar ndp-nepali-calendar\\\" [(ngModel)]=\\\"OneLakhAboveSalesReport.BSDATE2\\\" type=\\\"text\\\"\\r\\n                  (change)=\\\"changeEndDate($event.target.value,'BS')\\\" placeholder=\\\"yyyy-mm-dd\\\" />\\r\\n              </label>\\r\\n            </td>\\r\\n          </tr>\\r\\n        </table>\\r\\n      </fieldset>\\r\\n\\r\\n      <!-- Division Selection Start -->\\r\\n      <fieldset style=\\\"width:352px;\\\">\\r\\n        <legend>Division Selection:</legend>\\r\\n        <select class=\\\"form-control\\\" [(ngModel)]=\\\"this.OneLakhAboveSalesReport.DIV\\\" #division\\r\\n          (change)=\\\"divisionChanged()\\\">\\r\\n          <option value=\\\"%\\\" *ngIf=\\\"masterService.userSetting.userwisedivision==0\\\" selected>ALL</option>\\r\\n          <option *ngFor=\\\"let divs of divisionList;let i=index\\\" value=\\\"{{divs.INITIAL}}\\\">{{divs.NAME}}\\r\\n          </option>\\r\\n        </select>\\r\\n      </fieldset>\\r\\n      <!-- Division Selection End -->\\r\\n\\r\\n      <!-- R1,R2,R3 start-->\\r\\n      <fieldset>\\r\\n        <div class=\\\"checkbox\\\" style=\\\"padding-top:5px;width:200px;\\\">\\r\\n          <label class=\\\"smallBoldLabel\\\">\\r\\n            <input type=\\\"checkbox\\\" [(ngModel)]=\\\"this.OneLakhAboveSalesReport.isR1\\\">\\r\\n            Credit Sales Only\\r\\n          </label>\\r\\n        </div>\\r\\n        <div class=\\\"checkbox\\\" style=\\\"padding-top:1px;width:200px;\\\">\\r\\n          <label class=\\\"smallBoldLabel\\\">\\r\\n            <input type=\\\"checkbox\\\" [(ngModel)]=\\\"this.OneLakhAboveSalesReport.isR2\\\">\\r\\n            Non Credit Sales With Pan No Only\\r\\n          </label>\\r\\n        </div>\\r\\n        <div class=\\\"checkbox\\\" style=\\\"padding-top:1px;width:300px;\\\">\\r\\n          <label class=\\\"smallBoldLabel\\\">\\r\\n            <input type=\\\"checkbox\\\" [(ngModel)]=\\\"this.OneLakhAboveSalesReport.isR3\\\">\\r\\n            Non Credit Sales Without Pan No Only\\r\\n          </label>\\r\\n        </div>\\r\\n      </fieldset>\\r\\n      <!-- R1,R2,R3 end-->\\r\\n\\r\\n      <div style='margin-top:20px;'>\\r\\n        <button class=\\\"btn btn-info confirm-btn\\\" type=\\\"button\\\" (click)=onload()>RUN</button>\\r\\n        <button type=\\\"button\\\" (click)=\\\"cancel()\\\" title=\\\"Cancel\\\" class=\\\"btn btn-info\\\">Close</button>\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/ReportDialogs/One-Lakh-Above-SALES-Report/one-lakh-above-SALES-report.component.html\n// module id = 1745\n// module chunks = 0","module.exports = \"<style>\\r\\n    .action-btn {\\r\\n        width: 80%;\\r\\n        height: 80%;\\r\\n        display: block;\\r\\n        margin: 0 auto;\\r\\n        background-color: inherit;\\r\\n        border: none;\\r\\n    }\\r\\n    .input-text{\\r\\n        width : 100%;\\r\\n        /* height: 30px !important; */\\r\\n        font-weight: bold;\\r\\n    }\\r\\n    .td-class{\\r\\n        border: none !important;\\r\\n    }\\r\\n    .date-input{\\r\\n        width: 93%;\\r\\n        font-size: 12px !important;\\r\\n        height: 30px !important;\\r\\n    }\\r\\n     @media screen and (max-width:991px) {\\r\\n         .report-container{\\r\\n           width: 100% !important;\\r\\n    }\\r\\n    .reportForm{\\r\\n        height: 50vh !important;\\r\\n       \\r\\n    }\\r\\n    }\\r\\n     @media screen and (max-width:767px) {\\r\\n        .smallBoldLabel{\\r\\n            width: auto !important;\\r\\n        }\\r\\n          .report-container{\\r\\n           width: 85% !important;\\r\\n    }\\r\\n        \\r\\n    }\\r\\n   \\r\\n</style>\\r\\n<div class=\\\"container report-container\\\">\\r\\n    <div class=\\\"row \\\">\\r\\n        <!-- Filter Starts -->\\r\\n        <div class=\\\"col-12 col-md-12\\\">\\r\\n            <div  style=\\\"background-color : #ffffff;  width: 100%;\\\">\\r\\n                <div class=\\\"row\\\">\\r\\n                    <div class=\\\"modal-header\\\" style=\\\"border:0px;\\\">\\r\\n                        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\"\\r\\n                            (click)=\\\"closeReportBox()\\\">&times;</button>\\r\\n                        <h4 class=\\\"modal-title\\\"  style=\\\"padding-left: 3%;\\\">Party Ledger Report</h4>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-md-12 reportForm\\\" style=\\\"padding-top: 2%; height:71vh; overflow:auto;\\\">\\r\\n                        <div class=\\\"col-md-6\\\">\\r\\n                            <fieldset>\\r\\n                                <legend style=\\\"font-size:11px;font-weight: bold; width:auto;margin-bottom: -4px;\\\">Date Range Selection :</legend>\\r\\n                                <table>\\r\\n                                    <tr>\\r\\n                                        <td class=\\\"td-class\\\"><label class=\\\"smallBoldLabel\\\">From:(AD)</label></td>\\r\\n                                        <td class=\\\"td-class\\\"><label class=\\\"smallBoldLabel\\\">To:(AD)</label></td>\\r\\n                                    </tr>\\r\\n                                    <tr>\\r\\n                                        <td class=\\\"td-class\\\">\\r\\n                                                <input type=\\\"date\\\"\\r\\n                                                class=\\\"date-input form-control\\\" placeholder=\\\"Year Start Date\\\"\\r\\n                                                    [(ngModel)]=\\\"_reportFilterService.PartyLedgerObj.PartyLedger_DATE1\\\"\\r\\n                                                    (change)=\\\"changeEntryDate($event.target.value,'AD')\\\">\\r\\n                                        </td>\\r\\n                                        <td class=\\\"td-class\\\">\\r\\n                                                <input type=\\\"date\\\"\\r\\n                                                class=\\\"date-input form-control\\\" placeholder=\\\"Year Start Date\\\"\\r\\n                                                    [(ngModel)]=\\\"_reportFilterService.PartyLedgerObj.PartyLedger_DATE2\\\"\\r\\n                                                    (change)=\\\"changeEndDate($event.target.value,'AD')\\\">\\r\\n                                        </td>\\r\\n                                    </tr>\\r\\n                                    <tr>\\r\\n                                        <td class=\\\"td-class\\\">\\r\\n                                          <nepali-date-picker name=\\\"nepaliDateFrom\\\" [id]=\\\"'nepaliDatefrom'\\\"\\r\\n                                            (change)=\\\"changeEntryDate($event.detail.value,'BS')\\\"\\r\\n                                            [label]=\\\"'From'\\\"\\r\\n                                            [(ngModel)]=\\\"_reportFilterService.PartyLedgerObj.PartyLedger_BSDATE1\\\">\\r\\n                                          </nepali-date-picker>\\r\\n                                                <!-- <input id=\\\"nepaliDate\\\"\\r\\n                                                    style=\\\"text-align:center;\\\"\\r\\n                                                    class=\\\"nepali-calendar ndp-nepali-calendar date-input form-control\\\"\\r\\n                                                    [(ngModel)]=\\\"_reportFilterService.PartyLedgerObj.PartyLedger_BSDATE1\\\" type=\\\"text\\\"\\r\\n                                                    (change)=\\\"changeEntryDate($event.target.value,'BS')\\\"\\r\\n                                                    placeholder=\\\"yyyy-mm-dd\\\" />                             -->\\r\\n                                        </td>\\r\\n                                        <td class=\\\"td-class\\\">\\r\\n                                          <nepali-date-picker name=\\\"nepaliDateFrom\\\" [id]=\\\"'nepaliDateTo'\\\"\\r\\n                                            (change)=\\\"changeEndDate($event.detail.value,'BS')\\\"\\r\\n                                            [label]=\\\"'To'\\\"\\r\\n                                            [(ngModel)]=\\\"_reportFilterService.PartyLedgerObj.PartyLedger_BSDATE2\\\">\\r\\n                                          </nepali-date-picker>\\r\\n                                                <!-- <input id=\\\"nepaliDate\\\" style=\\\"text-align:center;\\\"\\r\\n                                                    class=\\\"nepali-calendar ndp-nepali-calendar date-input form-control\\\"\\r\\n                                                    [(ngModel)]=\\\"_reportFilterService.PartyLedgerObj.PartyLedger_BSDATE2\\\" type=\\\"text\\\"\\r\\n                                                    (change)=\\\"changeEndDate($event.target.value,'BS')\\\"\\r\\n                                                    placeholder=\\\"yyyy-mm-dd\\\" /> -->\\r\\n                                        </td>\\r\\n                                    </tr>\\r\\n                                </table>\\r\\n                            </fieldset>\\r\\n\\r\\n                            <fieldset>\\r\\n                                <legend>Division Selection:</legend>\\r\\n                                <select [(ngModel)]=\\\"_reportFilterService.PartyLedgerObj.PartyLedger_DIV\\\" style=\\\"height: 30px !important;\\\"\\r\\n                                class=\\\"form-control input-text\\\">\\r\\n                                    <option value=\\\"%\\\" *ngIf=\\\"masterService.userSetting.userwisedivision==0 ||  masterService.showAll\\\">ALL</option>\\r\\n                                    <option *ngFor=\\\"let div of division\\\" value=\\\"{{ div.INITIAL }}\\\">\\r\\n                                        {{ div.NAME }}\\r\\n                                    </option>\\r\\n                                </select>\\r\\n                            </fieldset>\\r\\n                            <fieldset *ngIf=\\\"_reportFilterService.PartyLedgerObj. PartyLedger_HIDECOSTCENTER == 0\\\">\\r\\n                                <legend>Cost Center:</legend>\\r\\n                                <select [(ngModel)]=\\\"_reportFilterService.PartyLedgerObj.PartyLedger_CostCenter\\\"\\r\\n                                style=\\\"height: 30px !important;\\\"\\r\\n                                class=\\\"form-control input-text\\\">\\r\\n                                    <option value=\\\"%\\\"> </option>\\r\\n                                    <option *ngFor=\\\"let i of CostcenterList\\\" value={{i.CCID}}>{{i.COSTCENTERNAME}}\\r\\n                                    </option>\\r\\n                                </select>\\r\\n                            </fieldset>\\r\\n\\r\\n                            <fieldset>\\r\\n                                <legend>Report Type:</legend>\\r\\n                                <label class=\\\"smallBoldLabel\\\" style=\\\"padding-right:15px;\\\"><input type=\\\"radio\\\" name=\\\"BalViewOpt\\\"\\r\\n                                      [(ngModel)]=\\\"_reportFilterService.PartyLedgerObj.PartyLedger_SUMMARYREPORT\\\" value=0 >&nbsp;Detail Ledger\\r\\n                                   Report</label>\\r\\n                                <label class=\\\"smallBoldLabel\\\"><input type=\\\"radio\\\" name=\\\"BalViewOpt\\\"\\r\\n                                      [(ngModel)]=\\\"_reportFilterService.PartyLedgerObj.PartyLedger_SUMMARYREPORT\\\" value=1 >&nbsp;Summary Ledger Report</label>\\r\\n                             </fieldset>\\r\\n\\r\\n                            <!-- <div class=\\\"checkbox\\\" style=\\\"padding-top:5px;width:200px;\\\">\\r\\n                                <label class=\\\"smallBoldLabel\\\">\\r\\n                                    <input type=\\\"checkbox\\\" [(ngModel)]=\\\"_reportFilterService.PartyLedgerObj.SHOWNDATE\\\">\\r\\n                                    Show BS Date In Report\\r\\n                                </label>\\r\\n                            </div> -->\\r\\n\\r\\n                            <!-- <div class=\\\"checkbox\\\" style=\\\"padding-top:5px;width:200px;\\\">\\r\\n                                <label class=\\\"smallBoldLabel\\\">\\r\\n                                    <input type=\\\"checkbox\\\" [(ngModel)]=\\\"_reportFilterService.PartyLedgerObj.IGNOREOPPOSITAC\\\">\\r\\n                                    Show Ledger Report in Summary\\r\\n                                </label>\\r\\n                            </div> -->\\r\\n                            <div style=\\\"display: flex; flex-wrap: wrap;\\\">\\r\\n                                <div class=\\\"checkbox\\\"  style=\\\"padding-top:5px;width:200px;\\\" *ngIf=\\\"_reportFilterService.PartyLedgerObj.PartyLedger_SUMMARYREPORT== 0\\\" >\\r\\n                                    <label class=\\\"smallBoldLabel\\\" style=\\\"width: 213px; margin-left: 4px;\\\">\\r\\n                                        <input type=\\\"checkbox\\\"  [(ngModel)]=\\\"_reportFilterService.PartyLedgerObj.IGNOREOPPOSITAC\\\">\\r\\n                                        Hide Opposite A/C in Ledger Report\\r\\n                                    </label>\\r\\n                                </div>\\r\\n\\r\\n                                <div class=\\\"checkbox\\\" style=\\\"padding-top:5px;width:200px;\\\" *ngIf=\\\"_reportFilterService.PartyLedgerObj.PartyLedger_SUMMARYREPORT== 0\\\">\\r\\n                                    <label class=\\\"smallBoldLabel\\\" style=\\\"width: 210px;\\\">\\r\\n                                        <input type=\\\"checkbox\\\" [(ngModel)]=\\\"_reportFilterService.PartyLedgerObj.PartyLedger_HIDENARATION\\\" style=\\\"margin-left: 5px;\\\"\\r\\n                                        (change)=\\\"$event.target.checked?(_reportFilterService.PartyLedgerObj.PartyLedger_HIDENARATION=1):(_reportFilterService.PartyLedgerObj.PartyLedger_HIDENARATION=0)\\\"\\r\\n                                        [checked]=\\\"_reportFilterService.PartyLedgerObj.PartyLedger_HIDENARATION == 1\\\">\\r\\n                                        Hide Narration In Ledger Report\\r\\n                                    </label>\\r\\n                                </div>\\r\\n\\r\\n                            </div>\\r\\n\\r\\n                            <div style=\\\"display: flex;flex-wrap: wrap;\\\">\\r\\n                                <div class=\\\"checkbox\\\" style=\\\"padding-top:5px;width:200px;\\\" *ngIf=\\\"_reportFilterService.PartyLedgerObj.PartyLedger_SUMMARYREPORT== 1\\\">\\r\\n                                    <label class=\\\"smallBoldLabel\\\" style=\\\"width: 210px;\\\">\\r\\n                                        <input type=\\\"checkbox\\\" [(ngModel)]=\\\"_reportFilterService.PartyLedgerObj.PartyLedger_HIDEVOUCHERTYPE\\\" style=\\\"margin-left: 5px\\\"\\r\\n                                        (change)=\\\"$event.target.checked?(_reportFilterService.PartyLedgerObj.PartyLedger_HIDEVOUCHERTYPE=1):(_reportFilterService.PartyLedgerObj.PartyLedger_HIDEVOUCHERTYPE=0)\\\"\\r\\n                                [checked]=\\\"_reportFilterService.PartyLedgerObj.PartyLedger_HIDEVOUCHERTYPE == 1\\\" >\\r\\n                                        Hide Voucher Type in Ledger Report\\r\\n                                    </label>\\r\\n                                </div>\\r\\n\\r\\n                                <div class=\\\"checkbox\\\" style=\\\"padding-top:5px;width:200px;\\\"  *ngIf=\\\"_reportFilterService.PartyLedgerObj.PartyLedger_SUMMARYREPORT== 0\\\">\\r\\n                                    <label class=\\\"smallBoldLabel\\\" style=\\\"width: 203px; margin-left: 4px;\\\">\\r\\n                                        <input type=\\\"checkbox\\\" [(ngModel)]=\\\"_reportFilterService.PartyLedgerObj.PartyLedger_SHOWITEMDETAIL\\\"\\r\\n                                        (change)=\\\"$event.target.checked?(_reportFilterService.PartyLedgerObj.PartyLedger_SHOWITEMDETAIL=1):(_reportFilterService.PartyLedgerObj.PartyLedger_SHOWITEMDETAIL=0)\\\"\\r\\n                                [checked]=\\\"_reportFilterService.PartyLedgerObj.PartyLedger_SHOWITEMDETAIL == 1\\\">\\r\\n                                        Show Item Detail Also\\r\\n                                    </label>\\r\\n                                </div>\\r\\n\\r\\n                                <div class=\\\"checkbox\\\" style=\\\"padding-top:5px;width:200px;\\\">\\r\\n                                    <label class=\\\"smallBoldLabel\\\" style=\\\"width:225px;\\\">\\r\\n                                        <input type=\\\"checkbox\\\" [(ngModel)]=\\\"_reportFilterService.PartyLedgerObj.PartyLedger_INCLUDEPOSTDATE\\\" style=\\\"margin-left: 5px;\\\"\\r\\n                                        (change)=\\\"$event.target.checked?(_reportFilterService.PartyLedgerObj.PartyLedger_INCLUDEPOSTDATE=1):(_reportFilterService.PartyLedgerObj.PartyLedger_INCLUDEPOSTDATE=0)\\\"\\r\\n                                [checked]=\\\"_reportFilterService.PartyLedgerObj.PartyLedger_INCLUDEPOSTDATE == 1\\\" >\\r\\n                                        Include Post Dated Transaction Also\\r\\n                                    </label>\\r\\n                                </div> \\r\\n                            </div>\\r\\n                            <div>\\r\\n                                <div class=\\\"checkbox\\\" style=\\\"padding-top:5px;width:200px;\\\">\\r\\n                                    <label class=\\\"smallBoldLabel\\\" style=\\\"width:225px;margin-left: -18px;\\\">\\r\\n                                        <input type=\\\"checkbox\\\" [(ngModel)]=\\\"_reportFilterService.PartyLedgerObj.PartyLedger_HIDECOSTCENTER\\\" style=\\\"margin-left: 21px;\\\"\\r\\n                                        (change)=\\\"$event.target.checked?(_reportFilterService.PartyLedgerObj.PartyLedger_HIDECOSTCENTER=1):(_reportFilterService.PartyLedgerObj.PartyLedger_HIDECOSTCENTER=0)\\\"\\r\\n                                [checked]=\\\"_reportFilterService.PartyLedgerObj.PartyLedger_HIDECOSTCENTER == 1\\\" >\\r\\n                                        Hide Cost Center\\r\\n                                    </label>\\r\\n                                </div>\\r\\n                            </div>\\r\\n\\r\\n\\r\\n\\r\\n                        </div>\\r\\n                        <!-- The One With Tree Part-->\\r\\n                        <div class=\\\"col-md-6 filter-part\\\">\\r\\n                            <fieldset>\\r\\n                                <legend>Party A/C Selection :</legend>\\r\\n                                <input #partyAccountSelection type=\\\"text\\\" style=\\\"font-weight: bold;\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"_reportFilterService.PartyLedgerObj.PartyLedger_ACCNAME\\\"\\r\\n                                    placeholder=\\\"Press Enter or Tab for Party List\\\" (keydown.Tab)=\\\"AccountEnterClicked($event)\\\"\\r\\n                                    (keydown.enter)=\\\"AccountEnterClicked($event)\\\">\\r\\n                            </fieldset>\\r\\n\\r\\n                            <fieldset>\\r\\n                                <legend><label class=\\\"smallBoldLabel\\\">\\r\\n                                        <input type=\\\"checkbox\\\"\\r\\n                                            [(ngModel)]=\\\"_reportFilterService.PartyLedgerObj.EnableCombineLedger\\\"\\r\\n                                            (change)=\\\"checkValueForCombine()\\\">\\r\\n                                        Show Combined Ledger</label></legend>\\r\\n                                <select [(ngModel)]=\\\"_reportFilterService.PartyLedgerObj.PartyLedger_ReportType\\\"\\r\\n                                    (change)=\\\"checkValue()\\\" style=\\\"height: 30px !important;\\\"\\r\\n                                    class=\\\"form-control input-text\\\" [disabled]=\\\"_reportFilterService.PartyLedgerObj.EnableCombineLedger == false || _reportFilterService.PartyLedgerObj.EnableCombineLedger ===undefined\\\">\\r\\n                                    <option value=7>All</option>\\r\\n                                    <option value=2>Multi Ledger Wise</option>\\r\\n                                    <option value=1>Area Wise</option>\\r\\n                                    <option value=4>Cost Center Wise</option>\\r\\n                                    <option value=5>Party Group Wise</option>\\r\\n                                </select>\\r\\n                            </fieldset>\\r\\n\\r\\n                            <div *ngIf=\\\"showLedgerTable\\\">\\r\\n                                <fieldset>\\r\\n                                    <legend><label class=\\\"smallBoldLabel\\\">&nbsp;Ledger Wise</label></legend>\\r\\n                                    <div>\\r\\n                                        <div class=\\\"col-md-10\\\">\\r\\n                                            <input type=\\\"text\\\" class=\\\"form-control\\\" [disabled]=\\\"_reportFilterService.PartyLedgerObj.EnableCombineLedger == false || _reportFilterService.PartyLedgerObj.EnableCombineLedger ===undefined\\\" [(ngModel)]=\\\"_reportFilterService.PartyLedgerObj.multipleACNAME\\\"\\r\\n                                        placeholder=\\\"Press Enter or Tab for Party List\\\" (keydown.Tab)=\\\"MultipleAccountEnterClicked($event)\\\"\\r\\n                                        (keydown.enter)=\\\"MultipleAccountEnterClicked($event)\\\" (keydown)=\\\"preventInput($event)\\\">\\r\\n\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col-md-2\\\">\\r\\n                                            <button type=\\\"button\\\" class=\\\"btn btn-info\\\"\\r\\n                                                (click)=\\\"addAccountToList()\\\" [disabled]=\\\"_reportFilterService.PartyLedgerObj.EnableCombineLedger == false || _reportFilterService.PartyLedgerObj.EnableCombineLedger ===undefined\\\">Add</button>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col-md-12\\\">\\r\\n                                            <table style=\\\"height:175px;\\\">\\r\\n                                                <tr class=\\\"smallBoldLabel\\\">\\r\\n                                                    <th style=\\\"width:3px;font-weight: bold;\\\">S.No.</th>\\r\\n                                                    <th style=\\\"width:10px;font-weight: bold;\\\">PartyName</th>\\r\\n                                                    <th style=\\\"width:4px;font-weight: bold;\\\">Action</th>\\r\\n                                                </tr>\\r\\n                                                <tr *ngFor=\\\"let data of _reportFilterService.PartyLedgerObj.PartyLedger_multipleAccounts;let i = index\\\"\\r\\n                                                    class=\\\"smallBoldLabel\\\">\\r\\n                                                    <td style=\\\"width:3px;\\\">{{ i + 1 }}</td>\\r\\n                                                    <td style=\\\"width:10px;\\\">{{data.ACNAME}}</td>\\r\\n                                                    <td style=\\\"width:4px;\\\">\\r\\n                                                        <button type=\\\"button\\\" class=\\\"action-btn\\\"\\r\\n                                                            (click)=\\\"deleteAccount(i)\\\">Delete</button>\\r\\n                                                    </td>\\r\\n                                                </tr>\\r\\n                                            </table>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n\\r\\n                                    <div class=\\\"checkbox\\\" style=\\\"padding-top:5px;width:200px;\\\">\\r\\n                                        <label class=\\\"smallBoldLabel\\\">\\r\\n                                            <input type=\\\"checkbox\\\" [(ngModel)]=\\\"_reportFilterService.PartyLedgerObj.MERGEREPORT\\\" [disabled]=\\\"_reportFilterService.PartyLedgerObj.EnableCombineLedger == false || _reportFilterService.PartyLedgerObj.EnableCombineLedger ===undefined\\\">\\r\\n                                            Merge Combined Ledger\\r\\n                                        </label>\\r\\n                                    </div>\\r\\n                                </fieldset>\\r\\n                            </div>\\r\\n\\r\\n                            <div *ngIf=\\\"showAreaTable\\\">\\r\\n                                <fieldset>\\r\\n                                <legend>Area:</legend>\\r\\n                                    <select [(ngModel)]=\\\"_reportFilterService.PartyLedgerObj.PartyLedger_AreaWise\\\"\\r\\n                                    style=\\\"height: 30px !important;\\\" class=\\\"form-control\\\" [disabled]=\\\"_reportFilterService.PartyLedgerObj.EnableCombineLedger == false || _reportFilterService.PartyLedgerObj.EnableCombineLedger ===undefined\\\">\\r\\n                                        <option value=0></option>\\r\\n                                        <option *ngFor=\\\"let i of AreaList\\\" value={{i.AREA_ID}}>{{i.AREA_NAME}}</option>\\r\\n                                    </select>\\r\\n\\r\\n                                    <div class=\\\"checkbox\\\" style=\\\"padding-top:5px;width:200px;\\\">\\r\\n                                        <label class=\\\"smallBoldLabel\\\">\\r\\n                                            <input type=\\\"checkbox\\\" [(ngModel)]=\\\"_reportFilterService.PartyLedgerObj.MERGEREPORT\\\" [disabled]=\\\"_reportFilterService.PartyLedgerObj.EnableCombineLedger == false || _reportFilterService.PartyLedgerObj.EnableCombineLedger ===undefined\\\">\\r\\n                                            Merge Combined Ledger\\r\\n                                        </label>\\r\\n                                    </div>\\r\\n                                </fieldset>\\r\\n                            </div>\\r\\n\\r\\n                            <div *ngIf=\\\"showCCtable\\\">\\r\\n                                <fieldset>\\r\\n                                    <legend><label class=\\\"smallBoldLabel\\\">&nbsp;Cost Center Wise</label></legend>\\r\\n                                    <div>\\r\\n                                        <div class=\\\"col-md-10\\\">\\r\\n                                            <select [(ngModel)]=\\\"_reportFilterService.PartyLedgerObj.CCENTER\\\"\\r\\n                                                style=\\\"height: 30px !important;\\\" class=\\\"form-control input-text\\\" [disabled]=\\\"_reportFilterService.PartyLedgerObj.EnableCombineLedger == false || _reportFilterService.PartyLedgerObj.EnableCombineLedger ===undefined\\\">\\r\\n                                                <option *ngFor=\\\"let i of CostcenterList\\\" [ngValue]=\\\"i\\\">\\r\\n                                                    {{i.COSTCENTERNAME}}\\r\\n                                                </option>\\r\\n                                            </select>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col-md-2\\\">\\r\\n                                            <button type=\\\"button\\\" class=\\\"btn btn-info\\\" *ngIf=\\\"showMultipleCC\\\"\\r\\n                                                (click)=\\\"addCostcenterToList()\\\" [disabled]=\\\"_reportFilterService.PartyLedgerObj.EnableCombineLedger == false || _reportFilterService.PartyLedgerObj.EnableCombineLedger ===undefined\\\">Add</button>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col-md-12\\\" *ngIf=\\\"showMultipleCC\\\">\\r\\n                                            <table style=\\\"height:150px;\\\">\\r\\n                                                <tr class=\\\"smallBoldLabel\\\">\\r\\n                                                    <th style=\\\"width:3px;font-weight: bold;\\\">S.No.</th>\\r\\n                                                    <th style=\\\"width:10px;font-weight: bold;\\\">Cost Center</th>\\r\\n                                                    <th style=\\\"width:4px;font-weight: bold;\\\">Action</th>\\r\\n                                                </tr>\\r\\n                                                <tr *ngFor=\\\"let data of _reportFilterService.PartyLedgerObj.PartyLedger_multipleCostcenter;let i = index\\\"\\r\\n                                                    class=\\\"smallBoldLabel\\\">\\r\\n                                                    <td style=\\\"width:3px;\\\">{{ i + 1 }}</td>\\r\\n                                                    <td style=\\\"width:10px;\\\">{{data.COSTCENTERNAME}}</td>\\r\\n                                                    <td style=\\\"width:4px;\\\">\\r\\n                                                        <button type=\\\"button\\\" class=\\\"action-btn\\\"\\r\\n                                                            (click)=\\\"deleteCostcenter(i)\\\">Delete</button>\\r\\n                                                    </td>\\r\\n                                                </tr>\\r\\n                                            </table>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div *ngIf=\\\"_reportFilterService.showAllcontactsInCC\\\" class=\\\"checkbox\\\" style=\\\"padding-top:5px;width:200px;\\\">\\r\\n                                        <label class=\\\"smallBoldLabel\\\">\\r\\n                                            <input type=\\\"checkbox\\\"\\r\\n                                                [(ngModel)]=\\\"_reportFilterService.PartyLedgerObj.PartyLedger_showAllContacts\\\"\\r\\n                                                (change)=\\\"checkCostCenterValue()\\\" [disabled]=\\\"_reportFilterService.PartyLedgerObj.EnableCombineLedger == false || _reportFilterService.PartyLedgerObj.EnableCombineLedger ===undefined\\\">\\r\\n                                            Show All Cost Center\\r\\n                                        </label>\\r\\n                                    </div>\\r\\n\\r\\n                                    <div class=\\\"checkbox\\\" style=\\\"padding-top:5px;width:200px;\\\">\\r\\n                                        <label class=\\\"smallBoldLabel\\\">\\r\\n                                            <input type=\\\"checkbox\\\" [(ngModel)]=\\\"_reportFilterService.PartyLedgerObj.MERGEREPORT\\\" [disabled]=\\\"_reportFilterService.PartyLedgerObj.EnableCombineLedger == false || _reportFilterService.PartyLedgerObj.EnableCombineLedger ===undefined\\\">\\r\\n                                            Merge Combined Ledger\\r\\n                                        </label>\\r\\n                                    </div>\\r\\n                                </fieldset>\\r\\n                            </div>\\r\\n\\r\\n                            <div *ngIf=\\\"showAccGrpTable\\\">\\r\\n                                <fieldset>\\r\\n                                    <legend><label class=\\\"smallBoldLabel\\\">&nbsp;Group Wise</label></legend>\\r\\n                                    <div>\\r\\n                                        <div class=\\\"col-md-10\\\">\\r\\n                                            <input type=\\\"text\\\" class=\\\"form-control\\\" [disabled]=\\\"_reportFilterService.PartyLedgerObj.EnableCombineLedger == false || _reportFilterService.PartyLedgerObj.EnableCombineLedger ===undefined\\\" \\r\\n                                            [(ngModel)]=\\\"_reportFilterService.PartyLedgerObj.Multiple_GROUP_ACNAME\\\"\\r\\n                                        placeholder=\\\"Press Enter or Tab for Party List\\\" (keydown.Tab)=\\\"GroupAccountclick($event)\\\"\\r\\n                                        (keydown.enter)=\\\"GroupAccountclick($event)\\\">\\r\\n\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col-md-2\\\">\\r\\n                                            <button type=\\\"button\\\" class=\\\"btn btn-info\\\"\\r\\n                                                (click)=\\\"addGroupAccountToList()\\\" [disabled]=\\\"_reportFilterService.PartyLedgerObj.EnableCombineLedger == false || _reportFilterService.PartyLedgerObj.EnableCombineLedger ===undefined\\\">Add</button>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col-md-12\\\">\\r\\n                                            <table style=\\\"height:175px;\\\">\\r\\n                                                <tr class=\\\"smallBoldLabel\\\">\\r\\n                                                    <th style=\\\"width:3px;font-weight: bold;\\\">S.No.</th>\\r\\n                                                    <th style=\\\"width:10px;font-weight: bold;\\\">Account</th>\\r\\n                                                    <th style=\\\"width:4px;font-weight: bold;\\\">Action</th>\\r\\n                                                </tr>\\r\\n                                                <tr *ngFor=\\\"let data of _reportFilterService.PartyLedgerObj.PartyLedger_multipleGroupAccounts;let i = index\\\"\\r\\n                                                    class=\\\"smallBoldLabel\\\">\\r\\n                                                    <td style=\\\"width:3px;\\\">{{ i + 1 }}</td>\\r\\n                                                    <td style=\\\"width:10px;\\\">{{data.ACNAME}}</td>\\r\\n                                                    <td style=\\\"width:4px;\\\">\\r\\n                                                        <button type=\\\"button\\\" class=\\\"action-btn\\\"\\r\\n                                                            (click)=\\\"deleteGroupAccount(i)\\\">Delete</button>\\r\\n                                                    </td>\\r\\n                                                </tr>\\r\\n                                            </table>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n\\r\\n                                    <div class=\\\"checkbox\\\" style=\\\"padding-top:5px;width:200px;\\\">\\r\\n                                        <label class=\\\"smallBoldLabel\\\">\\r\\n                                            <input type=\\\"checkbox\\\" [(ngModel)]=\\\"_reportFilterService.PartyLedgerObj.MERGEREPORT\\\" [disabled]=\\\"_reportFilterService.PartyLedgerObj.EnableCombineLedger == false || _reportFilterService.PartyLedgerObj.EnableCombineLedger ===undefined\\\">\\r\\n                                            Merge Combined Ledger\\r\\n                                        </label>\\r\\n                                    </div>\\r\\n                                </fieldset>\\r\\n                            </div>\\r\\n\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"modal-footer\\\" style=\\\"width : 97%; margin : 0px auto;\\\">\\r\\n                        <button class=\\\"btn btn-info confirm-btn\\\" type=\\\"button\\\" (click)=onload()>RUN</button>\\r\\n                        <button type=\\\"button\\\" (click)=\\\"closeReportBox()\\\" title=\\\"Cancel\\\"\\r\\n                            class=\\\"btn btn-info\\\">Close</button>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <!-- Filter Ends -->\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div style=\\\"width:90%\\\" class=\\\"reportpopup\\\">\\r\\n    <generic-popup-grid #genericGridPartyLedger [popupsettings]=\\\"gridPopupSettingsForPartyLedgerList\\\"\\r\\n    (onItemDoubleClick)=\\\"dblClickAccountSelect($event)\\\">\\r\\n</generic-popup-grid>\\r\\n</div>\\r\\n\\r\\n\\r\\n<div style=\\\"width:90%\\\" class=\\\"reportpopup\\\">\\r\\n    <generic-popup-grid #genericGridMultiplePartyLedger [popupsettings]=\\\"gridPopupSettingsForMultiplePartyLedgerList\\\"\\r\\n    (onItemDoubleClick)=\\\"dblClickMultipleAccountSelect($event)\\\">\\r\\n</generic-popup-grid>\\r\\n</div>\\r\\n\\r\\n<div style=\\\"width:90%\\\" class=\\\"reportpopup\\\">\\r\\n    <generic-popup-grid #genericGridMultipleGroupAccount [popupsettings]=\\\"gridPopupSettingsForMultipleGroupAccountList\\\"\\r\\n    (onItemDoubleClick)=\\\"dblClickGroupAccountSelect($event)\\\">\\r\\n</generic-popup-grid>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/ReportDialogs/PartyLedgerReport/party-ledger-report.component.html\n// module id = 1746\n// module chunks = 0","module.exports = \"<div id=\\\"partyLedgerReportId\\\" style=\\\"background-color : #ffffff; padding :1%; height : auto; width : 60%; \\\">\\r\\n        <div class=\\\"row\\\">\\r\\n           <div class=\\\"modal-header\\\" style=\\\"width : 97%; margin : 0px auto;\\\">\\r\\n              <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" (click)=\\\"closeReportBox()\\\">&times;</button>\\r\\n              <h4 class=\\\"modal-title\\\">Party Ledger Report</h4>\\r\\n           </div>\\r\\n           <!-- Left Column -->\\r\\n           <div class=\\\"col-md-12\\\">\\r\\n              <fieldset>\\r\\n                 <legend>Report Type:</legend>\\r\\n                 <label class=\\\"smallBoldLabel\\\"><input type=\\\"radio\\\" value=\\\"1\\\" name=\\\"showDetReport\\\" [(ngModel)]=\\\"ReportParameters.OPT_SHOWSUMMARY_REPORT\\\">&nbsp;Summary Report</label>\\r\\n                 <label class=\\\"smallBoldLabel\\\"><input type=\\\"radio\\\" value=\\\"0\\\" name=\\\"showDetReport\\\" [(ngModel)]=\\\"ReportParameters.OPT_SHOWSUMMARY_REPORT\\\">&nbsp;Detail Report</label>\\r\\n              </fieldset>\\r\\n              <fieldset style=\\\"width : 99%;\\\">\\r\\n                 <legend>Date Range Selection :</legend>\\r\\n                 <div class=\\\"_date_range\\\">\\r\\n                    <a (click)=\\\"changeDateByRange('1')\\\" value=\\\"week\\\" style=\\\"color : white;\\\" class=\\\"btn btn-info\\\">This Week</a>\\r\\n                    <a (click)=\\\"changeDateByRange('2')\\\" value=\\\"month\\\" style=\\\"color : white;\\\" class=\\\"btn btn-info\\\">This Month</a>\\r\\n                    <a (click)=\\\"changeDateByRange('3')\\\" value=\\\"year\\\" style=\\\"color : white;\\\" class=\\\"btn btn-info\\\">This Year</a>\\r\\n                 </div>\\r\\n                 <table>\\r\\n                    <tr>\\r\\n                       <td><label class=\\\"smallBoldLabel\\\">From(AD):</label></td>\\r\\n                       <td><label class=\\\"smallBoldLabel\\\">To(AD):</label></td>\\r\\n                    </tr>\\r\\n                    <tr>\\r\\n                       <td>                                                 \\r\\n                          <label class=\\\"smallBoldLabel\\\"><input  type=\\\"date\\\"  style=\\\"width:152px; min-width:50%;\\\"  placeholder=\\\"Year Start Date\\\" [(ngModel)]=\\\"ReportParameters.DATE1\\\"  (change)=\\\"changestartDate($event.target.value,'AD')\\\" max=\\\"{{masterService.date1 | date:'yyyy-MM-dd'}}\\\" min=\\\"{{masterService.date2 | date:'yyyy-MM-dd'}}\\\"></label>\\r\\n                       </td>\\r\\n                       <td>                                                 \\r\\n                          <label class=\\\"smallBoldLabel\\\"><input  type=\\\"date\\\" style=\\\"width:152px; min-width:50%;\\\"  placeholder=\\\"Year Start Date\\\" [(ngModel)]=\\\"ReportParameters.DATE2\\\"  (change)=\\\"changeEndDate($event.target.value,'AD')\\\"  max=\\\"{{masterService.date1 | date:'yyyy-MM-dd'}}\\\" min=\\\"{{masterService.date2 | date:'yyyy-MM-dd'}}\\\" ></label>\\r\\n                       </td>\\r\\n                    </tr>\\r\\n                    <tr>\\r\\n                       <td>\\r\\n                          <label class=\\\"smallBoldLabel\\\"><input id=\\\"nepaliDate\\\" style=\\\"width:152px;height:25px;text-align:center\\\" class=\\\"nepali-calendar ndp-nepali-calendar\\\" [(ngModel)]=\\\"ReportParameters.BSDATE1\\\"\\r\\n                          type=\\\"text\\\" (change)=\\\"changestartDate($event.target.value,'BS')\\\"\\r\\n                          placeholder=\\\"yyyy-mm-dd\\\" /> </label>\\r\\n                       </td>\\r\\n                       <td>\\r\\n                          <label class=\\\"smallBoldLabel\\\"><input id=\\\"nepaliDate\\\" style=\\\"width:152px;height:25px;text-align:center\\\" class=\\\"nepali-calendar ndp-nepali-calendar\\\" [(ngModel)]=\\\"ReportParameters.BSDATE2\\\"\\r\\n                          type=\\\"text\\\" (change)=\\\"changeEndDate($event.target.value,'BS')\\\"\\r\\n                          placeholder=\\\"yyyy-mm-dd\\\" /> </label>\\r\\n                       </td>\\r\\n                    </tr>\\r\\n                 </table>\\r\\n              </fieldset>\\r\\n              <fieldset>\\r\\n                 <legend> Account : </legend>\\r\\n                 <table>\\r\\n                    <tr>\\r\\n                       <td><label class=\\\"smallBoldLabel\\\">ACCODE</label></td>\\r\\n                       <td><label class=\\\"smallBoldLabel\\\">ACNAME</label></td>\\r\\n                    </tr>\\r\\n                    <tr>\\r\\n                       <td>\\r\\n                          <label class=\\\"smallBoldLabel\\\"><input tabindex=\\\"2\\\" type=\\\"text\\\" style=\\\"height:26px;\\\" (keydown.enter)=\\\"accodeChanged($event.target.value)\\\" [(ngModel)]=\\\"ACCODE\\\"></label>\\r\\n                       </td>\\r\\n                       <td>\\r\\n                          <div style=\\\"position: absolute; top: 260px; width: 150px;\\\">\\r\\n                             <label class=\\\"smallBoldLabel\\\"><input tabindex=\\\"2\\\" ngui-auto-complete [source]=\\\"dropListItem.bind(this)\\\" max-num-list=\\\"25\\\" [(ngModel)]=\\\"ACCNAME\\\" list-formatter=\\\"ACNAME\\\" style=\\\"height:26px;\\\" (ngModelChange)=\\\"itemChanged($event)\\\" name=\\\"AcName\\\" display-property-name=\\\"ACNAME\\\"></label>\\r\\n                          </div>\\r\\n                       </td>\\r\\n                    </tr>\\r\\n                 </table>\\r\\n              </fieldset>\\r\\n              <fieldset>\\r\\n                  <legend>Division Selection:</legend>\\r\\n                  <select [(ngModel)]=\\\"ReportParameters.DIVISION\\\" style=\\\"width : 100%;\\\">\\r\\n                     <option value=\\\"%\\\" *ngIf=\\\"masterService.userSetting.userwisedivision==0 || masterService.showAll\\\">ALL</option>\\r\\n                     <option *ngFor=\\\"let div of division\\\" value=\\\"{{ div.INITIAL }}\\\">\\r\\n                        {{ div.NAME }}\\r\\n                     </option>\\r\\n                  </select>\\r\\n               </fieldset>\\r\\n              <label class=\\\"smallBoldLabel\\\"> <input type=\\\"checkbox\\\" (change)=\\\"$event.target.checked?(ReportParameters.REPORTBYCOSTCENTER=1):(ReportParameters.REPORTBYCOSTCENTER=0)\\\" name=\\\"costCentersel\\\" [checked]=\\\"ReportParameters.REPORTBYCOSTCENTER == 1\\\" >&nbsp;Cost Center Selection</label><br>\\r\\n              <label class=\\\"smallBoldLabel\\\"> <input type=\\\"checkbox\\\" (change)=\\\"$event.target.checked?(ReportParameters.SHOWPRODUCTDETAIL=1):(ReportParameters.SHOWPRODUCTDETAIL=0)\\\" name=\\\"prodDet\\\" [checked]=\\\"ReportParameters.SHOWPRODUCTDETAIL == 1\\\" >&nbsp;Show Item Details Also</label><br>\\r\\n              <label class=\\\"smallBoldLabel\\\"> <input type=\\\"checkbox\\\" (change)=\\\"$event.target.checked?(ReportParameters.showNdate=1):(ReportParameters.showNdate=0)\\\" name=\\\"showDate\\\" [checked]=\\\"ReportParameters.showNdate == 1\\\" >&nbsp;Show BS Date in Report</label><br>\\r\\n              <label class=\\\"smallBoldLabel\\\"> <input type=\\\"checkbox\\\" (change)=\\\"$event.target.checked?(ReportParameters.FCURRENCY=1):(ReportParameters.FCURRENCY=0)\\\" name=\\\"fCurr\\\" [checked]=\\\"ReportParameters.FCURRENCY == 1\\\">&nbsp;Show Ledger in Foreign Currency</label><br>\\r\\n              <div class=\\\"btn\\\">\\r\\n                 <!-- <button type=\\\"button\\\"  title=\\\"onSave\\\" class=\\\"btn btn-info\\\">Run</button>    -->\\r\\n                 <button class=\\\"btn btn-info confirm-btn\\\" type=\\\"button\\\"  (click)=onload()>RUN</button>\\r\\n                 <button type=\\\"button\\\"  title=\\\"Cancel\\\" class=\\\"btn btn-info\\\" (click)=\\\"closeReportBox()\\\">Close</button>  \\r\\n              </div>\\r\\n           </div>\\r\\n           <!-- <div class=\\\"modal-footer\\\">\\r\\n              <button class=\\\"btn btn-info confirm-btn\\\" type=\\\"button\\\"  (click)=onload()>RUN</button>\\r\\n              </div> -->\\r\\n</div>\\r\\n</div>\\r\\n\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/ReportDialogs/PartyLedger/partyLedger.component.html\n// module id = 1747\n// module chunks = 0","module.exports = \"<style>\\r\\n   .input-text {\\r\\n      width: 100%;\\r\\n      /* height: 30px !important; */\\r\\n      font-weight: bold;\\r\\n   }\\r\\n\\r\\n   .td-class {\\r\\n      border: none !important;\\r\\n   }\\r\\n\\r\\n   .date-input {\\r\\n      width: 93%;\\r\\n      font-size: 12px !important;\\r\\n      height: 30px !important;\\r\\n   }\\r\\n</style>\\r\\n<div class=\\\"container\\\" style=\\\"background-color : #ffffff; padding :1%; height : auto;  \\\">\\r\\n   <div class=\\\"row\\\">\\r\\n      <div class=\\\"modal-header\\\" style=\\\"width : 97%; margin : 0px auto;\\\">\\r\\n         <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" (click)=\\\"closeReportBox()\\\">&times;</button>\\r\\n         <h4 class=\\\"modal-title\\\">Post-Dated Cheque Voucher Report</h4>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-12\\\" style=\\\"padding-top: 2%;\\\">\\r\\n         <!-- Left Column -->\\r\\n         <div class=\\\"col-md-6\\\">\\r\\n            <div>\\r\\n               <label class=\\\"smallBoldLabel\\\" style=\\\"padding-right:15px;\\\"><input type=\\\"radio\\\" name=\\\"datewise\\\"\\r\\n                     [(ngModel)]=\\\"_reportFilterService.PostDatedChequeObj.PostDatedCheque_CHEQUEDATEWISEREPORT\\\"\\r\\n                     value=0 (change)=\\\"ChangeDate()\\\">&nbsp;Date Range Wise</label>\\r\\n               <label class=\\\"smallBoldLabel\\\"><input type=\\\"radio\\\" name=\\\"datewise\\\"\\r\\n                     [(ngModel)]=\\\"_reportFilterService.PostDatedChequeObj.PostDatedCheque_CHEQUEDATEWISEREPORT\\\"\\r\\n                     value=1 (change)=\\\"ChangeDate()\\\">&nbsp;Cheque Date Wise</label>\\r\\n            </div>\\r\\n            <fieldset style=\\\"margin-top: 10px;\\\">\\r\\n               <legend style=\\\"font-size:11px;font-weight: bold; width:auto;margin-bottom: -4px;\\\">Date Range Selection :\\r\\n               </legend>\\r\\n               <table>\\r\\n                  <tr>\\r\\n                     <td class=\\\"td-class\\\"><label class=\\\"smallBoldLabel\\\">From:(AD)</label></td>\\r\\n                     <td class=\\\"td-class\\\"><label class=\\\"smallBoldLabel\\\">To:(AD)</label></td>\\r\\n                  </tr>\\r\\n                  <tr>\\r\\n                     <td class=\\\"td-class\\\">\\r\\n                        <input type=\\\"date\\\" class=\\\"date-input form-control\\\" placeholder=\\\"Year Start Date\\\"\\r\\n                           [(ngModel)]=\\\"_reportFilterService.PostDatedChequeObj.PostDatedCheque_DATE1\\\"\\r\\n                           (change)=\\\"changeEntryDate($event.target.value,'AD')\\\"\\r\\n                           [max]=\\\"max1()\\\"\\r\\n                           min=\\\"{{masterService.date2 | date:'yyyy-MM-dd'}}\\\">\\r\\n                     </td>\\r\\n                     <td class=\\\"td-class\\\">\\r\\n                        <input type=\\\"date\\\" class=\\\"date-input form-control\\\" placeholder=\\\"Year Start Date\\\"\\r\\n                           [(ngModel)]=\\\"_reportFilterService.PostDatedChequeObj.PostDatedCheque_DATE2\\\"\\r\\n                           (change)=\\\"changeEndDate($event.target.value,'AD')\\\"\\r\\n                           min=\\\"{{masterService.date2 | date:'yyyy-MM-dd'}}\\\">\\r\\n                     </td>\\r\\n                  </tr>\\r\\n                  <tr>\\r\\n                     <td class=\\\"td-class\\\">\\r\\n                        <nepali-date-picker name=\\\"nepaliDateFrom\\\" [id]=\\\"'nepaliDatefrom'\\\"\\r\\n                           (change)=\\\"changeEntryDate($event.detail.value,'BS')\\\" [label]=\\\"'From'\\\"\\r\\n                           [(ngModel)]=\\\"_reportFilterService.PostDatedChequeObj.PostDatedCheque_BSDATE1\\\">\\r\\n                        </nepali-date-picker>\\r\\n\\r\\n                     </td>\\r\\n                     <td class=\\\"td-class\\\">\\r\\n                        <nepali-date-picker name=\\\"nepaliDateTo\\\" [id]=\\\"'nepaliDateTo'\\\"\\r\\n                           (change)=\\\"changeEndDate($event.detail.value,'BS')\\\" [label]=\\\"'To'\\\"\\r\\n                           [(ngModel)]=\\\"_reportFilterService.PostDatedChequeObj.PostDatedCheque_BSDATE2\\\">\\r\\n                        </nepali-date-picker>\\r\\n                     </td>\\r\\n                  </tr>\\r\\n               </table>\\r\\n            </fieldset>\\r\\n\\r\\n            <fieldset>\\r\\n               <legend>Division Selection:</legend>\\r\\n               <select [(ngModel)]=\\\"_reportFilterService.PostDatedChequeObj.PostDatedCheque_DIV\\\"\\r\\n                  style=\\\"height: 30px !important;\\\" class=\\\"form-control input-text\\\">\\r\\n                  <option value=\\\"%\\\" *ngIf=\\\"masterService.userSetting.userwisedivision==0 ||  masterService.showAll\\\">ALL\\r\\n                  </option>\\r\\n                  <option *ngFor=\\\"let div of division\\\" value=\\\"{{ div.INITIAL }}\\\">\\r\\n                     {{ div.NAME }}\\r\\n                  </option>\\r\\n               </select>\\r\\n            </fieldset>\\r\\n            <fieldset>\\r\\n               <legend>Cost Center:</legend>\\r\\n               <select [(ngModel)]=\\\"_reportFilterService.PostDatedChequeObj.PostDatedCheque_CostCenter\\\"\\r\\n                  style=\\\"height: 30px !important;\\\" class=\\\"form-control input-text\\\">\\r\\n                  <option value=\\\"%\\\"> </option>\\r\\n                  <option *ngFor=\\\"let i of CostcenterList\\\" value={{i.CCID}}>{{i.COSTCENTERNAME}}\\r\\n                  </option>\\r\\n               </select>\\r\\n            </fieldset>\\r\\n         </div>\\r\\n         <!-- Right Column -->\\r\\n         <div class=\\\"col-md-6\\\">\\r\\n            <fieldset>\\r\\n               <legend>Post-Dated Cheque Voucher Transaction Type:</legend>\\r\\n               <label class=\\\"smallBoldLabel\\\" style=\\\"padding-right:15px;\\\"><input type=\\\"radio\\\" name=\\\"txntype\\\"\\r\\n                     [(ngModel)]=\\\"_reportFilterService.PostDatedChequeObj.PostDatedCheque_TRANTYPE\\\"\\r\\n                     value='Party Receipt'>&nbsp;Party Receipt</label>\\r\\n               <label class=\\\"smallBoldLabel\\\"><input type=\\\"radio\\\" name=\\\"txntype\\\"\\r\\n                     [(ngModel)]=\\\"_reportFilterService.PostDatedChequeObj.PostDatedCheque_TRANTYPE\\\"\\r\\n                     value='Party Payment'>&nbsp;Party Payment</label>\\r\\n               <label class=\\\"smallBoldLabel\\\"><input type=\\\"radio\\\" name=\\\"txntype\\\"\\r\\n                     [(ngModel)]=\\\"_reportFilterService.PostDatedChequeObj.PostDatedCheque_TRANTYPE\\\"\\r\\n                     value='Expense Voucher'>&nbsp;Expense Voucher</label>\\r\\n               <label class=\\\"smallBoldLabel\\\"><input type=\\\"radio\\\" name=\\\"txntype\\\"\\r\\n                     [(ngModel)]=\\\"_reportFilterService.PostDatedChequeObj.PostDatedCheque_TRANTYPE\\\"\\r\\n                     value='Mixed Payment'>&nbsp;Mixed Payment</label>\\r\\n            </fieldset>\\r\\n            <fieldset>\\r\\n               <legend>Report Type:</legend>\\r\\n               <label class=\\\"smallBoldLabel\\\" style=\\\"padding-right:15px;\\\"><input type=\\\"radio\\\" name=\\\"reporttype\\\"\\r\\n                     [(ngModel)]=\\\"_reportFilterService.PostDatedChequeObj.PostDatedCheque_DETAILSREPORT\\\"\\r\\n                     value=0>&nbsp;Summary Report</label>\\r\\n               <label class=\\\"smallBoldLabel\\\"><input type=\\\"radio\\\" name=\\\"reporttype\\\"\\r\\n                     [(ngModel)]=\\\"_reportFilterService.PostDatedChequeObj.PostDatedCheque_DETAILSREPORT\\\"\\r\\n                     value=1>&nbsp;Detail Report</label>\\r\\n            </fieldset>\\r\\n            <fieldset>\\r\\n               <legend>Voucher Status:</legend>\\r\\n               <label class=\\\"smallBoldLabel\\\" style=\\\"padding-right:15px;\\\"><input type=\\\"radio\\\" name=\\\"vstatus\\\"\\r\\n                     [(ngModel)]=\\\"_reportFilterService.PostDatedChequeObj.PostDatedCheque_TRANSACTIONMODE\\\"\\r\\n                     value=0>&nbsp;All</label>\\r\\n               <label class=\\\"smallBoldLabel\\\"><input type=\\\"radio\\\" name=\\\"vstatus\\\"\\r\\n                     [(ngModel)]=\\\"_reportFilterService.PostDatedChequeObj.PostDatedCheque_TRANSACTIONMODE\\\"\\r\\n                     value=1>&nbsp;Non-Cashed</label>\\r\\n               <label class=\\\"smallBoldLabel\\\" style=\\\"margin-left: 3%;\\\"><input type=\\\"radio\\\" name=\\\"vstatus\\\"\\r\\n                     [(ngModel)]=\\\"_reportFilterService.PostDatedChequeObj.PostDatedCheque_TRANSACTIONMODE\\\"\\r\\n                     value=2>&nbsp;Cashed</label>\\r\\n            </fieldset>\\r\\n            <fieldset style=\\\"padding-bottom: 1px;\\\">\\r\\n               <legend style=\\\"margin-bottom: -4px;\\\">Filter Option</legend>\\r\\n               <table>\\r\\n                   <tr>\\r\\n                       <td style=\\\"border: none;\\\" class=\\\"smallBoldLabel\\\">Bank Name: </td>\\r\\n                       <td style=\\\"border: none;width: 70%;\\\">\\r\\n                           <input type=\\\"text\\\" name=\\\"bankname\\\" class=\\\"form-control\\\"\\r\\n                               [(ngModel)]=\\\"_reportFilterService.PostDatedChequeObj.PostDatedCheque_BANKNAME\\\"\\r\\n                               (Keydown.Enter)=\\\"BankEntercommand()\\\" (Keydown.Tab)=\\\"BankEntercommand()\\\" autocomplete=\\\"off\\\"\\r\\n                               placeholder=\\\"Press Tab or Enter for the List\\\">\\r\\n\\r\\n                       </td>\\r\\n                   </tr>\\r\\n\\r\\n                   <tr style=\\\"margin-top: 5px; margin-bottom: 6px;\\\">\\r\\n                       <td style=\\\"border: none;\\\" class=\\\"smallBoldLabel\\\">Party Name: </td>\\r\\n                       <td style=\\\"border: none;width: 70%;\\\">\\r\\n                           <input type=\\\"text\\\" name=\\\"partyname\\\" class=\\\"form-control\\\"\\r\\n                               [(ngModel)]=\\\"_reportFilterService.PostDatedChequeObj.PostDatedCheque_PARTYNAME\\\"\\r\\n                               (Keydown.Enter)=\\\"PartyEnterCommand()\\\" (Keydown.Tab)=\\\"PartyEnterCommand()\\\" autocomplete=\\\"off\\\"\\r\\n                               placeholder=\\\"Press Tab or Enter for the List\\\">\\r\\n\\r\\n                       </td>\\r\\n                   </tr>\\r\\n\\r\\n               </table>\\r\\n\\r\\n           </fieldset>\\r\\n         </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"modal-footer\\\" style=\\\"width : 97%; margin : 0px auto;\\\">\\r\\n         <button class=\\\"btn btn-info confirm-btn\\\" type=\\\"button\\\" (click)=onload()>RUN</button>\\r\\n         <button type=\\\"button\\\" (click)=\\\"closeReportBox()\\\" title=\\\"Cancel\\\" class=\\\"btn btn-info\\\">Close</button>\\r\\n      </div>\\r\\n\\r\\n   </div>\\r\\n   <generic-popup-grid #genericGridPartyLedger [popupsettings]=\\\"gridPopupSettingsForPartyLedgerList\\\"\\r\\n   (onItemDoubleClick)=\\\"onPartySelect($event)\\\">\\r\\n</generic-popup-grid>\\r\\n\\r\\n<generic-popup-grid #genericGridACListParty [popupsettings]=\\\"gridACListPartyPopupSettings\\\"\\r\\n  (onItemDoubleClick)=\\\"onBankNameSelect($event)\\\"></generic-popup-grid>\\r\\n \"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/ReportDialogs/PostDatedChequeVoucherReport/post-dated-chequereport.component.html\n// module id = 1748\n// module chunks = 0","module.exports = \"<style>\\r\\n   .input-text {\\r\\n      width: 100%;\\r\\n      /* height: 30px !important; */\\r\\n      font-weight: bold;\\r\\n   }\\r\\n\\r\\n   .td-class {\\r\\n      border: none !important;\\r\\n   }\\r\\n\\r\\n   .date-input {\\r\\n      width: 93%;\\r\\n      font-size: 12px !important;\\r\\n      height: 30px !important;\\r\\n   }\\r\\n    @media screen and (max-width:991px) {\\r\\n         .report-container{\\r\\n           width: 100% !important;\\r\\n    }\\r\\n    .report-height{\\r\\n        height:52vh; \\r\\n        overflow:auto;\\r\\n    }\\r\\n    }\\r\\n         @media screen and (max-width:767px) {\\r\\n            .smallBoldLabel{\\r\\n                  width: auto !important;\\r\\n            }\\r\\n            \\r\\n        \\r\\n    }\\r\\n</style>\\r\\n<div class=\\\"container report-container\\\" style=\\\"background-color : #ffffff; padding :1%; height : auto;  \\\">\\r\\n   <div class=\\\"row\\\">\\r\\n      <div class=\\\"modal-header\\\" style=\\\"width : 97%; margin : 0px auto;\\\">\\r\\n         <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" (click)=\\\"closeReportBox()\\\">&times;</button>\\r\\n         <h4 class=\\\"modal-title\\\">Profit & Loss Report</h4>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-12 report-height\\\" style=\\\"padding-top: 2%;\\\">\\r\\n         <!-- Left Column -->\\r\\n         <div class=\\\"col-md-6\\\">\\r\\n            <fieldset>\\r\\n               <legend style=\\\"font-size:11px;font-weight: bold; width:auto;margin-bottom: -4px;\\\">Date Range Selection :\\r\\n               </legend>\\r\\n               <table>\\r\\n                  <tr>\\r\\n                     <td class=\\\"td-class\\\"><label class=\\\"smallBoldLabel\\\">From:(AD)</label></td>\\r\\n                     <td class=\\\"td-class\\\"><label class=\\\"smallBoldLabel\\\">To:(AD)</label></td>\\r\\n                  </tr>\\r\\n                  <tr>\\r\\n                     <td class=\\\"td-class\\\">\\r\\n                        <input type=\\\"date\\\" class=\\\"date-input form-control\\\" placeholder=\\\"Year Start Date\\\"\\r\\n                           [(ngModel)]=\\\"_reportFilterService.ProfitLossObj.ProfitLoss_DATE1\\\"\\r\\n                           (change)=\\\"changeEntryDate($event.target.value,'AD')\\\"\\r\\n                           max=\\\"{{masterService.date1 | date:'yyyy-MM-dd'}}\\\"\\r\\n                           min=\\\"{{masterService.date2 | date:'yyyy-MM-dd'}}\\\">\\r\\n                     </td>\\r\\n                     <td class=\\\"td-class\\\">\\r\\n                        <input type=\\\"date\\\" class=\\\"date-input form-control\\\" placeholder=\\\"Year Start Date\\\"\\r\\n                           [(ngModel)]=\\\"_reportFilterService.ProfitLossObj.ProfitLoss_DATE2\\\"\\r\\n                           (change)=\\\"changeEndDate($event.target.value,'AD')\\\"\\r\\n                           max=\\\"{{masterService.date1 | date:'yyyy-MM-dd'}}\\\"\\r\\n                           min=\\\"{{masterService.date2 | date:'yyyy-MM-dd'}}\\\">\\r\\n                     </td>\\r\\n                  </tr>\\r\\n                  <tr>\\r\\n                     <td class=\\\"td-class\\\">\\r\\n                        <nepali-date-picker name=\\\"nepaliDateFrom\\\" [id]=\\\"'nepaliDatefrom'\\\"\\r\\n                           (change)=\\\"changeEntryDate($event.detail.value,'BS')\\\" [label]=\\\"'From'\\\"\\r\\n                           [(ngModel)]=\\\"_reportFilterService.ProfitLossObj.ProfitLoss_BSDATE1\\\">\\r\\n                        </nepali-date-picker>\\r\\n                     </td>\\r\\n                     <td class=\\\"td-class\\\">\\r\\n                        <nepali-date-picker name=\\\"nepaliDateFrom\\\" [id]=\\\"'nepaliDateTo'\\\"\\r\\n                           (change)=\\\"changeEndDate($event.detail.value,'BS')\\\" [label]=\\\"'To'\\\"\\r\\n                           [(ngModel)]=\\\"_reportFilterService.ProfitLossObj.ProfitLoss_BSDATE2\\\">\\r\\n                        </nepali-date-picker>\\r\\n                     </td>\\r\\n                  </tr>\\r\\n               </table>\\r\\n            </fieldset>\\r\\n\\r\\n            <fieldset *ngIf=\\\"masterService.userSetting.EnableManualStockValuation==1\\\" style=\\\"margin-top: 10px;\\\">\\r\\n               <legend style=\\\"font-size:11px;font-weight: bold; width:auto\\\">Stock\\r\\n                 Valuation :</legend>\\r\\n               <div class=\\\"col-md-12\\\" style=\\\"margin-top:5px;\\\">\\r\\n                  <div class=\\\"opening\\\">\\r\\n                     <div class=\\\"col-md-4\\\" style=\\\"padding: 0px;\\\">\\r\\n                        <label class=\\\"smallBoldLabel\\\"\\r\\n                           style=\\\"margin-left: 0px;padding-top:5px;margin-top: -10px;\\\">Opening Stock:</label>\\r\\n                     </div>\\r\\n                     <div class=\\\"col-md-8\\\" style=\\\"padding: 0px;\\\">\\r\\n                        <input type=\\\"number\\\" class=\\\"form-control\\\" style=\\\"height: 25px;margin-top: -10px;\\\"\\r\\n                           [(ngModel)]=_reportFilterService.ProfitLossObj.ProfitLoss_OSTOCK>\\r\\n                     </div>\\r\\n                  </div>\\r\\n               </div>\\r\\n               <div class=\\\"col-md-12\\\" style=\\\"margin-top:5px;\\\">\\r\\n                  <div class=\\\"closing\\\">\\r\\n                     <div class=\\\"col-md-4\\\" style=\\\"padding: 0px;\\\">\\r\\n                        <label class=\\\"smallBoldLabel\\\" style=\\\"margin-left: 0px; padding-top:5px;\\\">Closing Stock:</label>\\r\\n                     </div>\\r\\n                     <div class=\\\"col-md-8\\\" style=\\\"padding: 0px;\\\">\\r\\n                        <input type=\\\"number\\\" class=\\\"form-control\\\" style=\\\"height: 25px;\\\"\\r\\n                           [(ngModel)]=_reportFilterService.ProfitLossObj.ProfitLoss_CSTOCK>\\r\\n                     </div>\\r\\n                  </div>\\r\\n               </div>\\r\\n               <div *ngIf=\\\"userSetting.ENABLECCENTER_INFINALREPORT==1\\\" class=\\\"col-md-12\\\" style=\\\"margin-top:10px; \\\">\\r\\n                  <div class=\\\"pl-action\\\">\\r\\n                     <div class=\\\"cal-btn col-md-4\\\" style=\\\"padding: 0px; float:right;\\\">\\r\\n                        <button class=\\\"btn btn-info\\\" style=\\\" float:right;\\\" (click)=\\\"calcStock()\\\">Calculate</button>\\r\\n                     </div>\\r\\n                  </div>\\r\\n               </div>\\r\\n            </fieldset>\\r\\n\\r\\n\\r\\n\\r\\n         </div>\\r\\n         <!-- Right Column -->\\r\\n         <div class=\\\"col-md-6\\\">\\r\\n            <fieldset *ngIf=\\\"userSetting.IS_NESTLE==1\\\">\\r\\n               <legend style=\\\"font-size:11px;font-weight: bold; width:auto\\\">Company Selection:</legend>\\r\\n               <select [(ngModel)]=\\\"_reportFilterService.ProfitLossObj.ProfitLoss_COMPANYTYPE\\\"\\r\\n                  style=\\\"height: 30px !important;\\\" class=\\\"form-control input-text\\\">\\r\\n                  <option value=\\\"DMS\\\">DMS</option>\\r\\n                  <option value=\\\"NONDMS\\\">NON DMS</option>\\r\\n               </select>\\r\\n            </fieldset>\\r\\n\\r\\n            <fieldset>\\r\\n               <legend style=\\\"font-size:11px;font-weight: bold; width:auto\\\">Division Selection:</legend>\\r\\n               <select [(ngModel)]=\\\"_reportFilterService.ProfitLossObj.ProfitLoss_DIV\\\" style=\\\"height: 30px !important;\\\"\\r\\n                  class=\\\"form-control input-text\\\" (change)=\\\"changeDivision()\\\">\\r\\n                  <option value=\\\"%\\\" *ngIf=\\\"masterService.userSetting.userwisedivision==0 ||  masterService.showAll\\\">ALL\\r\\n                  </option>\\r\\n                  <option *ngFor=\\\"let div of division\\\" value=\\\"{{ div.INITIAL }}\\\">\\r\\n                     {{ div.NAME }}\\r\\n                  </option>\\r\\n               </select>\\r\\n            </fieldset>\\r\\n            <fieldset *ngIf=\\\"userSetting.ENABLECCENTER_INFINALREPORT==1\\\">\\r\\n               <legend>Cost Center:</legend>\\r\\n               <select [(ngModel)]=\\\"_reportFilterService.ProfitLossObj.ProfitLoss_CostCenter\\\"\\r\\n                   style=\\\"height: 30px !important;\\\" class=\\\"form-control input-text\\\">\\r\\n                   <option value=\\\"%\\\"> </option>\\r\\n                   <option *ngFor=\\\"let i of CostcenterList\\\" value={{i.CCID}}>{{i.COSTCENTERNAME}}\\r\\n                   </option>\\r\\n               </select>\\r\\n           </fieldset>\\r\\n            <fieldset style=\\\"padding-bottom: 5px;\\\">\\r\\n               <legend style=\\\"font-size:11px;font-weight: bold; width:auto\\\">Report Format :</legend>\\r\\n               <label class=\\\"smallBoldLabel\\\"><input type=\\\"radio\\\" name=\\\"reportmode\\\"\\r\\n                     [(ngModel)]=\\\"_reportFilterService.ProfitLossObj.ProfitLoss_VERTICALFORMAT\\\" value=1>&nbsp;Vertical\\r\\n                  Format </label>&nbsp;&nbsp;&nbsp;\\r\\n               <label class=\\\"smallBoldLabel\\\" style=\\\"clear : both;\\\"><input type=\\\"radio\\\" name=\\\"reportmode\\\"\\r\\n                     [(ngModel)]=\\\"_reportFilterService.ProfitLossObj.ProfitLoss_VERTICALFORMAT\\\" value=0>&nbsp;Horizontal\\r\\n                  Format\\r\\n               </label>\\r\\n            </fieldset>\\r\\n\\r\\n            <label class=\\\"smallBoldLabel\\\"><input type=\\\"checkbox\\\"\\r\\n                  [(ngModel)]=\\\"_reportFilterService.ProfitLossObj.ProfitLoss_SHOWSUBLEDGER\\\">&nbsp;Show Sub Ledger In\\r\\n               Profit & Loss A/C</label>\\r\\n\\r\\n         </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"modal-footer\\\" style=\\\"width : 97%; margin : 0px auto;\\\">\\r\\n         <button class=\\\"btn btn-info confirm-btn\\\" type=\\\"button\\\" (click)=\\\"onload()\\\">RUN</button>\\r\\n         <button type=\\\"button\\\" (click)=\\\"closeReportBox()\\\" title=\\\"Cancel\\\" class=\\\"btn btn-info\\\">Close</button>\\r\\n      </div>\\r\\n\\r\\n   </div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/ReportDialogs/ProfitLossReport/profit-loss-report.component.html\n// module id = 1749\n// module chunks = 0","module.exports = \"<!-- <style type=\\\"text/css\\\">\\r\\n._left_section{\\r\\n    float : left;\\r\\n    width : 50%;\\r\\n    \\r\\n\\r\\n}\\r\\n\\r\\n._right_section{\\r\\n    float : left;\\r\\n    width : 50%;\\r\\n    padding-left : 0.7%\\r\\n}\\r\\n\\r\\n.horizontal_line{\\r\\n    height : 1px;\\r\\n    width : 100%;\\r\\n    float : none;\\r\\n    clear : both;\\r\\n}\\r\\n\\r\\nlegend{\\r\\n    font-size: 12px;\\r\\n    width: auto;\\r\\n    padding : 0;\\r\\n    margin : 0;\\r\\n    color : black;\\r\\n}\\r\\n\\r\\nfieldset{\\r\\n    margin-bottom: 3%;\\r\\n    line-height: 22px;\\r\\n}\\r\\n\\r\\nselect{\\r\\n    width : 100%;\\r\\n}\\r\\n\\r\\n._date_range{\\r\\n    /* width : 80%;\\r\\n    margin : 0px auto; */\\r\\n    padding-left : 2%;\\r\\n}\\r\\n\\r\\n.dateRangeLink{\\r\\n    text-decoration: none;\\r\\n    color : black;\\r\\n    height : 35px;\\r\\n    line-height: 35px;\\r\\n    width : 30%;\\r\\n    margin-right: 2%;\\r\\n    background-color : #ffffff;\\r\\n    padding : 5px;\\r\\n    border : 1px solid;\\r\\n}\\r\\n\\r\\n._salesModeSelection{\\r\\n    width : 100%;\\r\\n}\\r\\n\\r\\n._mode_left{\\r\\n    width : 50%;\\r\\n    float : left;\\r\\n}\\r\\n\\r\\n._mode_right{\\r\\n    width : 50%;\\r\\n    float : left;\\r\\n}\\r\\n\\r\\n._actionButtons{\\r\\n    float : right;\\r\\n}\\r\\n\\r\\n._dateCss{\\r\\n    width: 73%;\\r\\n    border-radius: 4px 4px;\\r\\n    border: 1px solid;\\r\\n    /* padding: 4px; */\\r\\n    font-size: 75%;\\r\\n}\\r\\n\\r\\n\\r\\n</style> -->\\r\\n\\r\\n\\r\\n<div id=\\\"purchaseBookReportId\\\" style=\\\"background-color : #ffffff; padding :1%; height : auto; \\\">\\r\\n   <div class=\\\"row\\\">\\r\\n      <div class=\\\"modal-header\\\" style=\\\"width : 97%; margin : 0px auto;\\\">\\r\\n         <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" (click)=\\\"closeReportBox()\\\">&times;</button>\\r\\n         <h4 class=\\\"modal-title\\\">Purchase Book Report</h4>\\r\\n      </div>\\r\\n      <!-- Left Column -->\\r\\n      <div class=\\\"col-md-6\\\">\\r\\n         <fieldset>\\r\\n            <legend>Report Option : </legend>\\r\\n            <label class=\\\"smallBoldLabel\\\"><input type=\\\"radio\\\" value=1 name=\\\"optReportType\\\"\\r\\n                  [(ngModel)]=\\\"ReportParameters.OPT_REPORT_TYPE\\\">&nbsp;Voucher Wise</label>\\r\\n            <label class=\\\"smallBoldLabel\\\"><input type=\\\"radio\\\" value=2 name=\\\"optReportType\\\"\\r\\n                  [(ngModel)]=\\\"ReportParameters.OPT_REPORT_TYPE\\\">&nbsp;Day Wise</label>\\r\\n            <label class=\\\"smallBoldLabel\\\"><input type=\\\"radio\\\" value=3 name=\\\"optReportType\\\"\\r\\n                  [(ngModel)]=\\\"ReportParameters.OPT_REPORT_TYPE\\\">&nbsp;Month Wise</label>\\r\\n\\r\\n\\r\\n         </fieldset>\\r\\n\\r\\n         <fieldset style=\\\"width : 99%;\\\">\\r\\n            <legend>Date Range Selection :</legend>\\r\\n            <div class=\\\"_date_range\\\">\\r\\n               <a (click)=\\\"changeDateByRange('1')\\\" value=\\\"week\\\" style=\\\"color : white;\\\" class=\\\"btn btn-info\\\">This\\r\\n                  Week</a>\\r\\n               <a (click)=\\\"changeDateByRange('2')\\\" value=\\\"month\\\" style=\\\"color : white;\\\" class=\\\"btn btn-info\\\">This\\r\\n                  Month</a>\\r\\n               <a (click)=\\\"changeDateByRange('3')\\\" value=\\\"year\\\" style=\\\"color : white;\\\" class=\\\"btn btn-info\\\">This\\r\\n                  Year</a>\\r\\n            </div>\\r\\n            <table>\\r\\n               <tr>\\r\\n                  <td><label class=\\\"smallBoldLabel\\\">From(AD):</label></td>\\r\\n                  <td><label class=\\\"smallBoldLabel\\\">To(AD):</label></td>\\r\\n               </tr>\\r\\n               <tr>\\r\\n                  <td>\\r\\n                     <label class=\\\"smallBoldLabel\\\"><input type=\\\"date\\\" style=\\\"width:152px; min-width:50%;\\\"\\r\\n                           placeholder=\\\"Year Start Date\\\" [(ngModel)]=\\\"ReportParameters.DATE1\\\"\\r\\n                           (change)=\\\"changestartDate($event.target.value,'AD')\\\"></label>\\r\\n                  </td>\\r\\n                  <td>\\r\\n                     <label class=\\\"smallBoldLabel\\\"><input type=\\\"date\\\" style=\\\"width:152px; min-width:50%;\\\"\\r\\n                           placeholder=\\\"Year Start Date\\\" [(ngModel)]=\\\"ReportParameters.DATE2\\\"\\r\\n                           (change)=\\\"changeEndDate($event.target.value,'AD')\\\"></label>\\r\\n                  </td>\\r\\n               </tr>\\r\\n               <tr>\\r\\n                  <td>\\r\\n                     <label class=\\\"smallBoldLabel\\\"><input id=\\\"nepaliDate\\\"\\r\\n                           style=\\\"width:152px;height:25px;text-align:center\\\" class=\\\"nepali-calendar ndp-nepali-calendar\\\"\\r\\n                           [(ngModel)]=\\\"ReportParameters.BSDATE1\\\" type=\\\"text\\\"\\r\\n                           (change)=\\\"changestartDate($event.target.value,'BS')\\\" placeholder=\\\"yyyy-mm-dd\\\" /> </label>\\r\\n                  </td>\\r\\n                  <td>\\r\\n                     <label class=\\\"smallBoldLabel\\\"><input id=\\\"nepaliDate\\\"\\r\\n                           style=\\\"width:152px;height:25px;text-align:center\\\" class=\\\"nepali-calendar ndp-nepali-calendar\\\"\\r\\n                           [(ngModel)]=\\\"ReportParameters.BSDATE2\\\" type=\\\"text\\\"\\r\\n                           (change)=\\\"changeEndDate($event.target.value,'BS')\\\" placeholder=\\\"yyyy-mm-dd\\\" /> </label>\\r\\n                  </td>\\r\\n               </tr>\\r\\n            </table>\\r\\n         </fieldset>\\r\\n\\r\\n         <fieldset>\\r\\n            <label class=\\\"smallBoldLabel\\\"><input type=\\\"radio\\\" value=0 name=\\\"showDetReport\\\"\\r\\n                  [(ngModel)]=\\\"ReportParameters.OPT_SHOWDETAL_REPORT\\\">&nbsp;Summary Report</label>\\r\\n            <label class=\\\"smallBoldLabel\\\"><input type=\\\"radio\\\" value=1 name=\\\"showDetReport\\\"\\r\\n                  [(ngModel)]=\\\"ReportParameters.OPT_SHOWDETAL_REPORT\\\">&nbsp;Detail Report</label>\\r\\n         </fieldset>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n      </div>\\r\\n      <!-- Another column -->\\r\\n      <div class=\\\"col-md-6\\\">\\r\\n\\r\\n         <fieldset>\\r\\n            <legend>Supplier Selection:</legend>\\r\\n            <select style=\\\"width : 100%;\\\" [(ngModel)]=\\\"ReportParameters.SUPPLIER_ACID\\\">\\r\\n               <option value=\\\"%\\\">ALL</option>\\r\\n               <option *ngFor=\\\"let suplist of supplierList\\\" value=\\\"{{suplist.ACID}}\\\">\\r\\n                  {{ suplist.ACNAME }}\\r\\n               </option>\\r\\n\\r\\n            </select>\\r\\n         </fieldset>\\r\\n\\r\\n         <fieldset>\\r\\n            <legend>Division Selection:</legend>\\r\\n            <select [(ngModel)]=\\\"ReportParameters.DIVISION\\\" style=\\\"width : 100%;\\\">\\r\\n               <option value=\\\"%\\\" *ngIf=\\\"masterService.userSetting.userwisedivision==0\\\">ALL</option>\\r\\n               <option *ngFor=\\\"let div of division\\\" value=\\\"{{ div.INITIAL }}\\\">\\r\\n                  {{ div.NAME }}\\r\\n               </option>\\r\\n            </select>\\r\\n         </fieldset>\\r\\n\\r\\n\\r\\n\\r\\n         <label class=\\\"smallBoldLabel\\\"> <input type=\\\"checkbox\\\"\\r\\n               (change)=\\\"$event.target.checked?(ReportParameters.CHK_INCLUDE_RETURN=1):(ReportParameters.CHK_INCLUDE_RETURN=0)\\\"\\r\\n               name=\\\"showSalesSum\\\" [checked]=\\\"ReportParameters.CHK_INCLUDE_RETURN == 1\\\"\\r\\n               name=\\\"includePurchaseReturn\\\">&nbsp;Include Purchase Return Transaction Also</label><br>\\r\\n\\r\\n\\r\\n         <div class=\\\"btn\\\">\\r\\n            <!-- <button type=\\\"button\\\"  title=\\\"onSave\\\" class=\\\"btn btn-info\\\">Run</button>    -->\\r\\n            <button class=\\\"btn btn-info confirm-btn\\\" type=\\\"button\\\" (click)=onload()>RUN</button>\\r\\n            <button type=\\\"button\\\" title=\\\"Cancel\\\" class=\\\"btn btn-info\\\" (click)=\\\"closeReportBox()\\\">Close</button>\\r\\n         </div>\\r\\n      </div>\\r\\n   </div>\\r\\n   <!-- <div class=\\\"modal-footer\\\">\\r\\n         <button class=\\\"btn btn-info confirm-btn\\\" type=\\\"button\\\"  (click)=onload()>RUN</button>\\r\\n         </div> -->\\r\\n\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/ReportDialogs/PurchaseBookReport/purchasebookreport.component.html\n// module id = 1750\n// module chunks = 0","module.exports = \"\\r\\n\\r\\n       <div id=\\\"salesBookReportId\\\" style=\\\"background-color : #ffffff; padding :1%; height : auto; \\\">\\r\\n            <div class=\\\"row\\\">\\r\\n               <div class=\\\"modal-header\\\"  style=\\\"width : 97%; margin : 0px auto;\\\">\\r\\n                  <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" (click)=\\\"closeReportBox()\\\">&times;</button>\\r\\n                  <h4 class=\\\"modal-title\\\">Sales Book Report</h4>\\r\\n               </div>\\r\\n               <!-- Left Column -->\\r\\n               <div class=\\\"col-md-6\\\">\\r\\n                  <fieldset>\\r\\n                     <legend>Report Option : </legend>                                \\r\\n                     <label class=\\\"smallBoldLabel\\\"><input type=\\\"radio\\\" value=1 name=\\\"optReportType\\\" [(ngModel)]=\\\"ReportParameters.OPT_REPORT_TYPE\\\">&nbsp;Voucher Wise</label>\\r\\n                     <label class=\\\"smallBoldLabel\\\"><input type=\\\"radio\\\" value=2 name=\\\"optReportType\\\" [(ngModel)]=\\\"ReportParameters.OPT_REPORT_TYPE\\\">&nbsp;Day Wise</label>\\r\\n                     <label class=\\\"smallBoldLabel\\\"><input type=\\\"radio\\\" value=3 name=\\\"optReportType\\\" [(ngModel)]=\\\"ReportParameters.OPT_REPORT_TYPE\\\">&nbsp;Month Wise</label>\\r\\n                  \\r\\n                  </fieldset>\\r\\n\\r\\n                  <fieldset style=\\\"width : 99%;\\\">\\r\\n                     <legend>Date Range Selection :</legend>\\r\\n                     <div class=\\\"_date_range\\\">\\r\\n                        <a (click)=\\\"changeDateByRange('1')\\\" value=\\\"week\\\" style=\\\"color : white;\\\" class=\\\"btn btn-info\\\">This Week</a>\\r\\n                        <a (click)=\\\"changeDateByRange('2')\\\" value=\\\"month\\\" style=\\\"color : white;\\\" class=\\\"btn btn-info\\\">This Month</a>\\r\\n                        <a (click)=\\\"changeDateByRange('3')\\\" value=\\\"year\\\" style=\\\"color : white;\\\" class=\\\"btn btn-info\\\">This Year</a>\\r\\n                     </div>\\r\\n                     <table>\\r\\n                        <tr>\\r\\n                           <td><label class=\\\"smallBoldLabel\\\">From(AD):</label></td>\\r\\n                           <td><label class=\\\"smallBoldLabel\\\">To(AD):</label></td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                           <td>                                                 \\r\\n                                 <label class=\\\"smallBoldLabel\\\"><input  type=\\\"date\\\"  style=\\\"width:152px; min-width:50%;\\\"  placeholder=\\\"Year Start Date\\\" [(ngModel)]=\\\"ReportParameters.DATE1\\\"  (change)=\\\"changestartDate($event.target.value,'AD')\\\"  ></label>\\r\\n                           </td>\\r\\n                           <td>                                                 \\r\\n                                 <label class=\\\"smallBoldLabel\\\"><input  type=\\\"date\\\" style=\\\"width:152px; min-width:50%;\\\"  placeholder=\\\"Year Start Date\\\" [(ngModel)]=\\\"ReportParameters.DATE2\\\"  (change)=\\\"changeEndDate($event.target.value,'AD')\\\"   ></label>\\r\\n                           </td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                           <td>\\r\\n                                 <label class=\\\"smallBoldLabel\\\"><input id=\\\"nepaliDate\\\" style=\\\"width:152px;height:25px;text-align:center\\\" class=\\\"nepali-calendar ndp-nepali-calendar\\\" [(ngModel)]=\\\"ReportParameters.BSDATE1\\\"\\r\\n                              type=\\\"text\\\" (change)=\\\"changestartDate($event.target.value,'BS')\\\"\\r\\n                              placeholder=\\\"yyyy-mm-dd\\\" /> </label>\\r\\n                           </td>\\r\\n                           <td>\\r\\n                                 <label class=\\\"smallBoldLabel\\\"><input id=\\\"nepaliDate\\\" style=\\\"width:152px;height:25px;text-align:center\\\" class=\\\"nepali-calendar ndp-nepali-calendar\\\" [(ngModel)]=\\\"ReportParameters.BSDATE2\\\"\\r\\n                              type=\\\"text\\\" (change)=\\\"changeEndDate($event.target.value,'BS')\\\"\\r\\n                              placeholder=\\\"yyyy-mm-dd\\\" /> </label>\\r\\n                           </td>\\r\\n                        </tr>\\r\\n                     </table>\\r\\n                  </fieldset>\\r\\n\\r\\n                  <fieldset>\\r\\n                     <label class=\\\"smallBoldLabel\\\"><input type=\\\"radio\\\" value=0 name=\\\"showDetReport\\\" [(ngModel)]=\\\"ReportParameters.OPT_SHOWDETAL_REPORT\\\">&nbsp;Summary Report</label>\\r\\n                     <label class=\\\"smallBoldLabel\\\"><input type=\\\"radio\\\" value=1 name=\\\"showDetReport\\\" [(ngModel)]=\\\"ReportParameters.OPT_SHOWDETAL_REPORT\\\">&nbsp;Detail Report</label>\\r\\n                  </fieldset>\\r\\n\\r\\n                  <fieldset>\\r\\n                     <legend>Customer Account : </legend>\\r\\n                        <table>\\r\\n                              <tr>\\r\\n                                 <td><label class=\\\"smallBoldLabel\\\">ACCODE</label></td>\\r\\n                                 <td><label class=\\\"smallBoldLabel\\\">ACNAME</label></td>\\r\\n                                 \\r\\n                              </tr>\\r\\n                              <tr>\\r\\n                                 <td>\\r\\n                                    <label class=\\\"smallBoldLabel\\\"><input tabindex=\\\"2\\\" type=\\\"text\\\" class=\\\"form-control input-sm\\\" style=\\\"height: 26px;\\\" (keydown.enter)=\\\"accodeChanged($event.target.value)\\\" [(ngModel)]=\\\"ACCODE\\\" ></label>\\r\\n                                 </td>\\r\\n                                 <td>\\r\\n                                    <div style=\\\"position: absolute; top: 297px; width: 150px;\\\">\\r\\n                                       <label class=\\\"smallBoldLabel\\\"><input tabindex=\\\"2\\\" ngui-auto-complete class=\\\"form-control input-sm\\\" [source]=\\\"dropListItem.bind(this)\\\" max-num-list=\\\"25\\\" [(ngModel)]=\\\"ACCNAME\\\" list-formatter=\\\"ACNAME\\\" style=\\\"height: 26px;\\\" (ngModelChange)=\\\"itemChanged($event)\\\" name=\\\"AcName\\\" display-property-name=\\\"ACNAME\\\"></label>\\r\\n                                    </div>      \\r\\n                                 </td>\\r\\n                              </tr>\\r\\n                           </table>\\r\\n                  </fieldset>\\r\\n                     \\r\\n                 \\r\\n                  <fieldset>\\r\\n                        <legend>Division Selection:</legend>\\r\\n                        <select [(ngModel)]=\\\"ReportParameters.DIVISION\\\" style=\\\"width : 100%;\\\">\\r\\n                           <option value=\\\"%\\\" *ngIf=\\\"masterService.userSetting.userwisedivision==0\\\">ALL</option>\\r\\n                           <option *ngFor=\\\"let div of division\\\" value=\\\"{{ div.INITIAL }}\\\">\\r\\n                              {{ div.NAME }}\\r\\n                           </option>\\r\\n                        </select>\\r\\n                     </fieldset>\\r\\n               \\r\\n                  <label class=\\\"smallBoldLabel\\\"><input type=\\\"checkbox\\\" style=\\\"vertical-align: middle;\\\" (change)=\\\"$event.target.checked?(ReportParameters.CHK_SALESMANWISESUMMARY=1):(ReportParameters.CHK_SALESMANWISESUMMARY=0)\\\" [checked]=\\\"ReportParameters.CHK_SALESMANWISESUMMARY == 1\\\"  name=\\\"showSalesSum\\\" >Show salesman wise Sales summary report</label>\\r\\n\\r\\n\\r\\n               </div>\\r\\n               <!-- Another column -->\\r\\n               <div class=\\\"col-md-6\\\">\\r\\n                <label class=\\\"smallBoldLabel\\\"><input type=\\\"checkbox\\\" style=\\\"vertical-align: middle;\\\" (change)=\\\"$event.target.checked?(ReportParameters.CHK_INCLUDE_RETURN=1):(ReportParameters.CHK_INCLUDE_RETURN=0)\\\" name=\\\"showSalesSum\\\" [checked]=\\\"ReportParameters.CHK_INCLUDE_RETURN == 1\\\" >Show salesman wise Sales summary report</label>\\r\\n                \\r\\n                <br>\\r\\n                  <fieldset>                   \\r\\n                        <legend><input type=\\\"checkbox\\\" name=\\\"showDiscountSalesOnlyCheck\\\" value=\\\"showDiscountSalesOnlyCheck\\\">Show Discount Sales only</legend>\\r\\n                        <label class=\\\"smallBoldLabel\\\"><input type=\\\"radio\\\" name=\\\"showDiscountSalesOnly\\\" [(ngModel)]=\\\"ReportParameters.OPT_DISCOUNTEDSALES\\\" value=\\\"0\\\">Show All Discount Sales</label><br>\\r\\n                        <label class=\\\"smallBoldLabel\\\"><input type=\\\"radio\\\" name=\\\"showDiscountSalesOnly\\\" [(ngModel)]=\\\"ReportParameters.OPT_DISCOUNTEDSALES\\\" value=\\\"1\\\" >Show All Discount Sales </label>\\r\\n                        <label class=\\\"smallBoldLabel\\\">Greater than Discount Rate (%)>= <input type=\\\"text\\\" name=\\\"disPer\\\" [(ngModel)]=\\\"ReportParameters.DISRATE\\\" style=\\\"width : 16%;\\\"></label>\\r\\n                        <label class=\\\"smallBoldLabel\\\"><input type=\\\"radio\\\" name=\\\"showDiscountSalesOnly\\\" [(ngModel)]=\\\"ReportParameters.OPT_DISCOUNTEDSALES\\\" value=\\\"2\\\" >Show Credit Card Discount Sales only</label>\\r\\n                        <label class=\\\"smallBoldLabel\\\"><input type=\\\"radio\\\" name=\\\"showDiscountSalesOnly\\\"  [(ngModel)]=\\\"ReportParameters.OPT_DISCOUNTEDSALES\\\" value=\\\"3\\\" >Show Complimentary Sales only</label>\\r\\n                  </fieldset>\\r\\n\\r\\n                  <fieldset>\\r\\n                     <legend>Salesman Selection</legend>\\r\\n                     <select style=\\\"width : 275px;\\\">\\r\\n                        <option value=\\\"%\\\">All</option>\\r\\n                     </select>\\r\\n                  </fieldset>\\r\\n\\r\\n                  <label class=\\\"smallBoldLabel\\\"><input type=\\\"checkbox\\\" style=\\\"vertical-align: middle;\\\" name=\\\"showBLOnly\\\" >Show Opening B/L Only</label><br>\\r\\n\\r\\n                  <fieldset>\\r\\n                     <legend>Sales Mode Selection</legend>\\r\\n                     <label class=\\\"smallBoldLabel\\\"><input type=\\\"radio\\\" name=\\\"counterSales\\\"  [(ngModel)]=\\\"ReportParameters.OPT_COUNTERSALES\\\" value=\\\"0\\\">&nbsp; Both</label>\\r\\n                     <label class=\\\"smallBoldLabel\\\"><input type=\\\"radio\\\" name=\\\"counterSales\\\" [(ngModel)]=\\\"ReportParameters.OPT_COUNTERSALES\\\" value=\\\"1\\\">&nbsp; Counter Sales Only</label>\\r\\n                     <label class=\\\"smallBoldLabel\\\"><input type=\\\"radio\\\" name=\\\"counterSales\\\" [(ngModel)]=\\\"ReportParameters.OPT_COUNTERSALES\\\" value=\\\"2\\\">&nbsp; Table Sales Only</label>\\r\\n                  </fieldset>\\r\\n\\r\\n                  <fieldset>\\r\\n                     <legend>Sales Mode Selection</legend>\\r\\n                     <label class=\\\"smallBoldLabel\\\"><input type=\\\"radio\\\" name=\\\"optInad\\\"  [(ngModel)]=\\\"ReportParameters.OPT_INAD\\\" value=0>&nbsp; As Per AD Date</label>\\r\\n                     <label class=\\\"smallBoldLabel\\\"><input type=\\\"radio\\\" name=\\\"optInad\\\" [(ngModel)]=\\\"ReportParameters.OPT_INAD\\\" value=1>&nbsp; As Per BS Date</label>\\r\\n                  </fieldset>\\r\\n                  <div class=\\\"btn\\\">\\r\\n                     <!-- <button type=\\\"button\\\"  title=\\\"onSave\\\" class=\\\"btn btn-info\\\">Run</button>    -->\\r\\n                     <button class=\\\"btn btn-info confirm-btn\\\" type=\\\"button\\\"  (click)=onload()>RUN</button>\\r\\n                     <button type=\\\"button\\\"  title=\\\"Cancel\\\" class=\\\"btn btn-info\\\">Close</button>  \\r\\n                  </div>\\r\\n               </div>\\r\\n            </div>\\r\\n            <!-- <div class=\\\"modal-footer\\\">\\r\\n               <button class=\\\"btn btn-info confirm-btn\\\" type=\\\"button\\\"  (click)=onload()>RUN</button>\\r\\n               </div> -->\\r\\n         \\r\\n       </div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/ReportDialogs/SalesBookReport/salesbookreport.component.html\n// module id = 1751\n// module chunks = 0","module.exports = \"<style>\\r\\n   .input-text {\\r\\n      width: 100%;\\r\\n      /* height: 30px !important; */\\r\\n      font-weight: bold;\\r\\n   }\\r\\n\\r\\n   .td-class {\\r\\n      border: none !important;\\r\\n   }\\r\\n\\r\\n   .date-input {\\r\\n      width: 93%;\\r\\n      font-size: 12px !important;\\r\\n      height: 30px !important;\\r\\n   }\\r\\n   .report-container{ width: 30% !important; } @media screen and (max-width: 991px){ .report-container{ width: 100% !important; } }\\r\\n</style>\\r\\n<div class=\\\"container report-container\\\" style=\\\"background-color : #ffffff; padding :1%; height : auto; \\\">\\r\\n   <div class=\\\"row\\\">\\r\\n      <div class=\\\"modal-header\\\" style=\\\"width : 97%; margin : 0px auto;\\\">\\r\\n         <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" (click)=\\\"closeReportBox()\\\">&times;</button>\\r\\n         <h4 class=\\\"modal-title\\\">Sales Return Report Detail</h4>\\r\\n      </div>\\r\\n      <!-- Left Column -->\\r\\n      <div class=\\\"col-md-12\\\" style=\\\"padding-top: 2%;\\\">\\r\\n         <fieldset>\\r\\n            <legend style=\\\"font-size:11px;font-weight: bold; width:auto;margin-bottom: -4px;\\\">Date Range Selection :\\r\\n            </legend>\\r\\n            <table>\\r\\n               <tr>\\r\\n                  <td class=\\\"td-class\\\"><label class=\\\"smallBoldLabel\\\">From:(AD)</label></td>\\r\\n                  <td class=\\\"td-class\\\"><label class=\\\"smallBoldLabel\\\">To:(AD)</label></td>\\r\\n               </tr>\\r\\n               <tr>\\r\\n                  <td class=\\\"td-class\\\">\\r\\n                     <input type=\\\"date\\\" class=\\\"date-input form-control\\\" placeholder=\\\"Year Start Date\\\"\\r\\n                        [(ngModel)]=\\\"_reportFilterService.SalesReturnReportDetailObj.SalesReturnReportDetail_DATE1\\\"\\r\\n                        (change)=\\\"changestartDate($event.target.value,'AD')\\\"\\r\\n                        max=\\\"{{masterService.date1 | date:'yyyy-MM-dd'}}\\\"\\r\\n                        min=\\\"{{masterService.date2 | date:'yyyy-MM-dd'}}\\\">\\r\\n                  </td>\\r\\n                  <td class=\\\"td-class\\\">\\r\\n                     <input type=\\\"date\\\" class=\\\"date-input form-control\\\" placeholder=\\\"Year Start Date\\\"\\r\\n                        [(ngModel)]=\\\"_reportFilterService.SalesReturnReportDetailObj.SalesReturnReportDetail_DATE2\\\"\\r\\n                        (change)=\\\"changeEndDate($event.target.value,'AD')\\\"\\r\\n                        max=\\\"{{masterService.date1 | date:'yyyy-MM-dd'}}\\\"\\r\\n                        min=\\\"{{masterService.date2 | date:'yyyy-MM-dd'}}\\\">\\r\\n                  </td>\\r\\n               </tr>\\r\\n               <tr>\\r\\n                  <td class=\\\"td-class\\\">\\r\\n                     <nepali-date-picker name=\\\"nepaliDateFrom\\\" [id]=\\\"'nepaliDatefrom'\\\"\\r\\n                        (change)=\\\"changestartDate($event.detail.value,'BS')\\\" [label]=\\\"'From'\\\"\\r\\n                        [(ngModel)]=\\\"_reportFilterService.SalesReturnReportDetailObj.SalesReturnReportDetail_BSDATE1\\\">\\r\\n                     </nepali-date-picker>\\r\\n                  </td>\\r\\n                  <td class=\\\"td-class\\\">\\r\\n                     <nepali-date-picker name=\\\"nepaliDateTo\\\" [id]=\\\"'nepaliDateTo'\\\"\\r\\n                        (change)=\\\"changeEndDate($event.detail.value,'BS')\\\" [label]=\\\"'To'\\\"\\r\\n                        [(ngModel)]=\\\"_reportFilterService.SalesReturnReportDetailObj.SalesReturnReportDetail_BSDATE2\\\">\\r\\n                     </nepali-date-picker>\\r\\n                  </td>\\r\\n               </tr>\\r\\n            </table>\\r\\n         </fieldset>\\r\\n          \\r\\n          <fieldset>\\r\\n             <legend>Division Selection:</legend>\\r\\n             <select [(ngModel)]=\\\"_reportFilterService.SalesReturnReportDetailObj.SalesReturnReportDetail_DIV\\\"\\r\\n                style=\\\"height: 30px !important;\\\" class=\\\"form-control input-text\\\">\\r\\n                <option value=\\\"%\\\" *ngIf=\\\"masterService.userSetting.userwisedivision==0 ||  masterService.showAll\\\">ALL</option>\\r\\n                <option *ngFor=\\\"let div of division\\\" value=\\\"{{ div.INITIAL }}\\\">\\r\\n                   {{ div.NAME }}\\r\\n                </option>\\r\\n             </select>\\r\\n          </fieldset>\\r\\n \\r\\n\\r\\n         <fieldset>\\r\\n            <legend>Product:</legend>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\"\\r\\n               [(ngModel)]=\\\"_reportFilterService.SalesReturnReportDetailObj.SalesReturnReportDetail_ProductName\\\"\\r\\n               placeholder=\\\"Press Enter or Tab for Product\\\" (keydown.Tab)=\\\"ProductEnterClicked($event)\\\"\\r\\n               (keydown.enter)=\\\"ProductEnterClicked($event)\\\">\\r\\n\\r\\n         </fieldset>\\r\\n\\r\\n         <fieldset>\\r\\n            <legend>Brand:</legend>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\"\\r\\n               [(ngModel)]=\\\"_reportFilterService.SalesReturnReportDetailObj.SalesReturnReportDetail_BrandName\\\"\\r\\n               placeholder=\\\"Press Enter or Tab for Brand\\\" (keydown.Tab)=\\\"BrandEnterClicked($event)\\\"\\r\\n               (keydown.enter)=\\\"BrandEnterClicked($event)\\\">\\r\\n         </fieldset>\\r\\n\\r\\n         <fieldset>\\r\\n            <legend>Retailer :</legend>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\"\\r\\n               [(ngModel)]=\\\"_reportFilterService.SalesReturnReportDetailObj.SalesReturnReportDetail_RetailerName\\\"\\r\\n               placeholder=\\\"Press Enter or Tab for Retailer\\\" (keydown.Tab)=\\\"RetailerEnterClicked($event)\\\"\\r\\n               (keydown.enter)=\\\"RetailerEnterClicked($event)\\\">\\r\\n         </fieldset>\\r\\n\\r\\n\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"btn\\\" style=\\\"float : right;\\\">\\r\\n         <button class=\\\"btn btn-info confirm-btn\\\" type=\\\"button\\\" (click)=onload()>RUN</button>\\r\\n         <button type=\\\"button\\\" title=\\\"Cancel\\\" class=\\\"btn btn-info\\\" (click)=\\\"closeReportBox()\\\">Close</button>\\r\\n      </div>\\r\\n\\r\\n   </div>\\r\\n\\r\\n   \\r\\n<generic-popup-grid #genericGridProduct [popupsettings]=\\\"gridPopupSettingsForProduct\\\"\\r\\n(onItemDoubleClick)=\\\"dblClickProductSelect($event)\\\">\\r\\n</generic-popup-grid>\\r\\n\\r\\n<generic-popup-grid #genericGridBrand [popupsettings]=\\\"gridPopupSettingsForBrand\\\"\\r\\n(onItemDoubleClick)=\\\"dblClickBrandSelect($event)\\\">\\r\\n</generic-popup-grid>\\r\\n\\r\\n<generic-popup-grid #genericGridRetailer [popupsettings]=\\\"gridPopupSettingsForRetailer\\\"\\r\\n(onItemDoubleClick)=\\\"dblClickRetailerSelect($event)\\\">\\r\\n</generic-popup-grid>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/ReportDialogs/SalesReturnReportDetail/salesreturn-reportdetail.component.html\n// module id = 1752\n// module chunks = 0","module.exports = \"<style>\\r\\n   .input-text {\\r\\n      width: 100%;\\r\\n      /* height: 30px !important; */\\r\\n      font-weight: bold;\\r\\n   }\\r\\n\\r\\n   .td-class {\\r\\n      border: none !important;\\r\\n   }\\r\\n\\r\\n   .date-input {\\r\\n      width: 93%;\\r\\n      font-size: 12px !important;\\r\\n      height: 30px !important;\\r\\n   }\\r\\n   .report-container{\\r\\n         width: 30% !important;\\r\\n      }\\r\\n   @media screen and (max-width: 991px){\\r\\n\\r\\n      .report-container{\\r\\n         width: 100% !important;\\r\\n      }\\r\\n   }\\r\\n</style>\\r\\n<div class=\\\"container report-container\\\" style=\\\"background-color : #ffffff; padding :1%; height : auto;  \\\">\\r\\n   <div class=\\\"row\\\">\\r\\n      <div class=\\\"modal-header\\\" style=\\\"width : 97%; margin : 0px auto;\\\">\\r\\n         <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" (click)=\\\"closeReportBox()\\\">&times;</button>\\r\\n         <h4 class=\\\"modal-title\\\">Sales Return Summary Report</h4>\\r\\n      </div>\\r\\n      <!-- Left Column -->\\r\\n      <div class=\\\"col-md-12\\\" style=\\\"padding-top: 2%;\\\">\\r\\n         <fieldset>\\r\\n            <legend style=\\\"font-size:11px;font-weight: bold; width:auto;margin-bottom: -4px;\\\">Date Range Selection :\\r\\n            </legend>\\r\\n            <table>\\r\\n               <tr>\\r\\n                  <td class=\\\"td-class\\\"><label class=\\\"smallBoldLabel\\\">From:(AD)</label></td>\\r\\n                  <td class=\\\"td-class\\\"><label class=\\\"smallBoldLabel\\\">To:(AD)</label></td>\\r\\n               </tr>\\r\\n               <tr>\\r\\n                  <td class=\\\"td-class\\\">\\r\\n                     <input type=\\\"date\\\" class=\\\"date-input form-control\\\" placeholder=\\\"Year Start Date\\\"\\r\\n                        [(ngModel)]=\\\"_reportFilterService.SalesReturnSummaryObj.SalesReturnSummary_DATE1\\\"\\r\\n                        (change)=\\\"changestartDate($event.target.value,'AD')\\\"\\r\\n                        max=\\\"{{masterService.date1 | date:'yyyy-MM-dd'}}\\\"\\r\\n                        min=\\\"{{masterService.date2 | date:'yyyy-MM-dd'}}\\\">\\r\\n                  </td>\\r\\n                  <td class=\\\"td-class\\\">\\r\\n                     <input type=\\\"date\\\" class=\\\"date-input form-control\\\" placeholder=\\\"Year Start Date\\\"\\r\\n                        [(ngModel)]=\\\"_reportFilterService.SalesReturnSummaryObj.SalesReturnSummary_DATE2\\\"\\r\\n                        (change)=\\\"changeEndDate($event.target.value,'AD')\\\"\\r\\n                        max=\\\"{{masterService.date1 | date:'yyyy-MM-dd'}}\\\"\\r\\n                        min=\\\"{{masterService.date2 | date:'yyyy-MM-dd'}}\\\">\\r\\n                  </td>\\r\\n               </tr>\\r\\n               <tr>\\r\\n                  <td class=\\\"td-class\\\">\\r\\n                     <nepali-date-picker name=\\\"nepaliDateFrom\\\" [id]=\\\"'nepaliDatefrom'\\\"\\r\\n                        (change)=\\\"changestartDate($event.detail.value,'BS')\\\" [label]=\\\"'From'\\\"\\r\\n                        [(ngModel)]=\\\"_reportFilterService.SalesReturnSummaryObj.SalesReturnSummary_BSDATE1\\\">\\r\\n                     </nepali-date-picker>\\r\\n                  </td>\\r\\n                  <td class=\\\"td-class\\\">\\r\\n                     <nepali-date-picker name=\\\"nepaliDateTo\\\" [id]=\\\"'nepaliDateTo'\\\"\\r\\n                        (change)=\\\"changeEndDate($event.detail.value,'BS')\\\" [label]=\\\"'To'\\\"\\r\\n                        [(ngModel)]=\\\"_reportFilterService.SalesReturnSummaryObj.SalesReturnSummary_BSDATE2\\\">\\r\\n                     </nepali-date-picker>\\r\\n                  </td>\\r\\n               </tr>\\r\\n            </table>\\r\\n         </fieldset>\\r\\n          \\r\\n          <fieldset>\\r\\n             <legend>Division Selection:</legend>\\r\\n             <select [(ngModel)]=\\\"_reportFilterService.SalesReturnSummaryObj.SalesReturnSummary_DIV\\\"\\r\\n                style=\\\"height: 30px !important;\\\" class=\\\"form-control input-text\\\">\\r\\n                <option value=\\\"%\\\" *ngIf=\\\"masterService.userSetting.userwisedivision==0 ||  masterService.showAll\\\">ALL</option>\\r\\n                <option *ngFor=\\\"let div of division\\\" value=\\\"{{ div.INITIAL }}\\\">\\r\\n                   {{ div.NAME }}\\r\\n                </option>\\r\\n             </select>\\r\\n          </fieldset>\\r\\n \\r\\n\\r\\n\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"btn\\\" style=\\\"float : right;\\\">\\r\\n         <button class=\\\"btn btn-info confirm-btn\\\" type=\\\"button\\\" (click)=onload()>RUN</button>\\r\\n         <button type=\\\"button\\\" title=\\\"Cancel\\\" class=\\\"btn btn-info\\\" (click)=\\\"closeReportBox()\\\">Close</button>\\r\\n      </div>\\r\\n\\r\\n   </div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/ReportDialogs/SalesReturnSummaryReport/salesreturn-summary-report.component.html\n// module id = 1753\n// module chunks = 0","module.exports = \"<style>\\r\\n   .input-text {\\r\\n      width: 100%;\\r\\n      /* height: 30px !important; */\\r\\n      font-weight: bold;\\r\\n   }\\r\\n\\r\\n   .td-class {\\r\\n      border: none !important;\\r\\n   }\\r\\n\\r\\n   .date-input {\\r\\n      width: 93%;\\r\\n      font-size: 12px !important;\\r\\n      height: 30px !important;\\r\\n   }\\r\\n\\r\\n   .modal-part {\\r\\n      overflow-y: scroll;\\r\\n      height: 500px;\\r\\n      padding-top: 25px;\\r\\n   }\\r\\n    @media screen and (max-width: 991px){ .report-container{ width: 100% !important; } }\\r\\n</style>\\r\\n<div class=\\\"container report-container\\\">\\r\\n   <div class=\\\"row\\\">\\r\\n      <!-- Filter Starts -->\\r\\n      <div class=\\\"col-12 col-md-12 col-lg-6\\\">\\r\\n         <div style=\\\"background-color : #ffffff; padding :1%; height : auto;\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n               <div class=\\\"modal-header\\\" style=\\\"width : 97%; margin : 0px auto;\\\">\\r\\n                  <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" (click)=\\\"closeReportBox()\\\">&times;</button>\\r\\n                  <h4 class=\\\"modal-title\\\">Sales Return Summary Retailer Report</h4>\\r\\n               </div>\\r\\n               <!-- Left Column -->\\r\\n               <div class=\\\"col-md-12\\\" style=\\\"padding-top: 2%;\\\">\\r\\n                  <fieldset>\\r\\n                     <legend style=\\\"font-size:11px;font-weight: bold; width:auto;margin-bottom: -4px;\\\">Date Range\\r\\n                        Selection :\\r\\n                     </legend>\\r\\n                     <table>\\r\\n                        <tr>\\r\\n                           <td class=\\\"td-class\\\"><label class=\\\"smallBoldLabel\\\">From:(AD)</label></td>\\r\\n                           <td class=\\\"td-class\\\"><label class=\\\"smallBoldLabel\\\">To:(AD)</label></td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                           <td class=\\\"td-class\\\">\\r\\n                              <input type=\\\"date\\\" class=\\\"date-input form-control\\\" placeholder=\\\"Year Start Date\\\"\\r\\n                                 [(ngModel)]=\\\"_reportFilterService.SalesReturnSummaryRetailerObj.SalesReturnSummaryRetailer_DATE1\\\"\\r\\n                                 (change)=\\\"changestartDate($event.target.value,'AD')\\\"\\r\\n                                 max=\\\"{{masterService.date1 | date:'yyyy-MM-dd'}}\\\"\\r\\n                                 min=\\\"{{masterService.date2 | date:'yyyy-MM-dd'}}\\\">\\r\\n                           </td>\\r\\n                           <td class=\\\"td-class\\\">\\r\\n                              <input type=\\\"date\\\" class=\\\"date-input form-control\\\" placeholder=\\\"Year Start Date\\\"\\r\\n                                 [(ngModel)]=\\\"_reportFilterService.SalesReturnSummaryRetailerObj.SalesReturnSummaryRetailer_DATE2\\\"\\r\\n                                 (change)=\\\"changeEndDate($event.target.value,'AD')\\\"\\r\\n                                 max=\\\"{{masterService.date1 | date:'yyyy-MM-dd'}}\\\"\\r\\n                                 min=\\\"{{masterService.date2 | date:'yyyy-MM-dd'}}\\\">\\r\\n                           </td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                           <td class=\\\"td-class\\\">\\r\\n                              <nepali-date-picker name=\\\"nepaliDateFrom\\\" [id]=\\\"'nepaliDatefrom'\\\"\\r\\n                                 (change)=\\\"changestartDate($event.detail.value,'BS')\\\" [label]=\\\"'From'\\\"\\r\\n                                 [(ngModel)]=\\\"_reportFilterService.SalesReturnSummaryRetailerObj.SalesReturnSummaryRetailer_BSDATE1\\\">\\r\\n                              </nepali-date-picker>\\r\\n                           </td>\\r\\n                           <td class=\\\"td-class\\\">\\r\\n                              <nepali-date-picker name=\\\"nepaliDateTo\\\" [id]=\\\"'nepaliDateTo'\\\"\\r\\n                                 (change)=\\\"changeEndDate($event.detail.value,'BS')\\\" [label]=\\\"'To'\\\"\\r\\n                                 [(ngModel)]=\\\"_reportFilterService.SalesReturnSummaryRetailerObj.SalesReturnSummaryRetailer_BSDATE2\\\">\\r\\n                              </nepali-date-picker>\\r\\n                           </td>\\r\\n                        </tr>\\r\\n                     </table>\\r\\n                  </fieldset>\\r\\n                   \\r\\n           <fieldset>\\r\\n              <legend>Division Selection:</legend>\\r\\n              <select [(ngModel)]=\\\"_reportFilterService.SalesReturnSummaryRetailerObj.SalesReturnSummaryRetailer_DIV\\\"\\r\\n                 style=\\\"height: 30px !important;\\\" class=\\\"form-control input-text\\\">\\r\\n                 <option value=\\\"%\\\" *ngIf=\\\"masterService.userSetting.userwisedivision==0 ||  masterService.showAll\\\">ALL</option>\\r\\n                 <option *ngFor=\\\"let div of division\\\" value=\\\"{{ div.INITIAL }}\\\">\\r\\n                    {{ div.NAME }}\\r\\n                 </option>\\r\\n              </select>\\r\\n           </fieldset>\\r\\n  \\r\\n\\r\\n                  <fieldset>\\r\\n                     <legend>Salesman:</legend>\\r\\n                     <!-- <div class=\\\"checkbox\\\" style=\\\"width:200px;\\\">\\r\\n                        <label class=\\\"smallBoldLabel\\\">\\r\\n                           <input type=\\\"checkbox\\\"\\r\\n                              [(ngModel)]=\\\"_reportFilterService.SalesReturnSummaryRetailerObj.SalesReturnSummaryRetailer_EnableSalesman\\\"\\r\\n                              (change)=\\\"checkValue()\\\">\\r\\n                           Choose Multiple Salesman</label>\\r\\n                     </div> -->\\r\\n                     <input type=\\\"text\\\" class=\\\"form-control\\\"\\r\\n                        [(ngModel)]=\\\"_reportFilterService.SalesReturnSummaryRetailerObj.SalesReturnSummaryRetailer_Salesman\\\"\\r\\n                        placeholder=\\\"Press Enter or Tab for Salesman\\\" (keydown.Tab)=\\\"SalesmanEnterClicked($event)\\\"\\r\\n                        (keydown.enter)=\\\"SalesmanEnterClicked($event)\\\">\\r\\n                     <!-- <button type=\\\"button\\\" *ngIf=\\\"_reportFilterService.showMultipleSalesman\\\"\\r\\n                        (click)=\\\"addSalesmanToList()\\\" class=\\\"btn btn-info\\\" style=\\\"float: right;\\\">Add</button> -->\\r\\n                  </fieldset>\\r\\n\\r\\n                  <fieldset>\\r\\n                     <legend>Retailer :</legend>\\r\\n                     <!-- <div class=\\\"checkbox\\\" style=\\\"width:200px;\\\">\\r\\n                        <label class=\\\"smallBoldLabel\\\">\\r\\n                           <input type=\\\"checkbox\\\"\\r\\n                              [(ngModel)]=\\\"_reportFilterService.SalesReturnSummaryRetailerObj.SalesReturnSummaryRetailer_EnableRetailer\\\"\\r\\n                              (change)=\\\"checkValue()\\\">\\r\\n                           Choose Multiple Retailer</label>\\r\\n                     </div> -->\\r\\n                     <input type=\\\"text\\\" class=\\\"form-control\\\"\\r\\n                        [(ngModel)]=\\\"_reportFilterService.SalesReturnSummaryRetailerObj.SalesReturnSummaryRetailer_RetailerName\\\"\\r\\n                        placeholder=\\\"Press Enter or Tab for Retailer\\\" (keydown.Tab)=\\\"RetailerEnterClicked($event)\\\"\\r\\n                        (keydown.enter)=\\\"RetailerEnterClicked($event)\\\">\\r\\n                     <!-- <button type=\\\"button\\\" *ngIf=\\\"_reportFilterService.showMultipleRetailer\\\"\\r\\n                        (click)=\\\"addRetailerToList()\\\" class=\\\"btn btn-info\\\" style=\\\"float: right;\\\">Add</button> -->\\r\\n                  </fieldset>\\r\\n\\r\\n\\r\\n               </div>\\r\\n\\r\\n               <div class=\\\"btn\\\" style=\\\"float : right;\\\">\\r\\n                  <button class=\\\"btn btn-info confirm-btn\\\" type=\\\"button\\\" (click)=onload()>RUN</button>\\r\\n                  <button type=\\\"button\\\" title=\\\"Cancel\\\" class=\\\"btn btn-info\\\" (click)=\\\"closeReportBox()\\\">Close</button>\\r\\n               </div>\\r\\n\\r\\n            </div>\\r\\n         </div>\\r\\n      </div>\\r\\n\\r\\n      <!-- Modal Starts -->\\r\\n      <div class=\\\"col-12 col-md-12 col-lg-6\\\">\\r\\n         <div class=\\\"modal-part\\\"\\r\\n            *ngIf=\\\"_reportFilterService.showMultipleSalesman || _reportFilterService.showMultipleRetailer\\\">\\r\\n\\r\\n            <div *ngIf=\\\"_reportFilterService.showMultipleSalesman\\\">\\r\\n               <div class=\\\"modal-content modal-content-main-area\\\">\\r\\n                  <div class=\\\"modal-header\\\" style=\\\"padding: 5px;\\\">\\r\\n                     <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\"\\r\\n                        (click)=\\\"hideSalesmanTable()\\\">&times;</button>\\r\\n                     <h4 class=\\\"modal-title\\\" id=\\\"myModalLabel\\\">Selected Salesmen</h4>\\r\\n                  </div>\\r\\n                  <table style=\\\"height:200px;\\\">\\r\\n                     <tr>\\r\\n                        <th style=\\\"width:3px;\\\">S.No.</th>\\r\\n                        <th style=\\\"width:15px;\\\">Salesman</th>\\r\\n                        <th style=\\\"width:4px;\\\">Action</th>\\r\\n                     </tr>\\r\\n                     <tr\\r\\n                        *ngFor=\\\"let data of _reportFilterService.SalesReturnSummaryRetailerObj.SalesReturnSummaryRetailer_MultipleSalesman;let i = index\\\">\\r\\n                        <td style=\\\"width:3px;\\\">{{ i + 1 }}</td>\\r\\n                        <td style=\\\"width:15px;\\\">{{data.SalesmanName}}</td>\\r\\n                        <td style=\\\"width:4px;\\\"> <button type=\\\"button\\\" class=\\\"btn btn-info\\\" style=\\\"float: right;\\\"\\r\\n                              (click)=\\\"deleteSalesman(i)\\\">Delete</button></td>\\r\\n                     </tr>\\r\\n                  </table>\\r\\n               </div>\\r\\n            </div>\\r\\n\\r\\n            <div *ngIf=\\\"_reportFilterService.showMultipleRetailer\\\">\\r\\n               <div class=\\\"modal-content modal-content-main-area\\\">\\r\\n                  <div class=\\\"modal-header\\\" style=\\\"padding: 5px;\\\">\\r\\n                     <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\"\\r\\n                        (click)=\\\"hideRetailerTable()\\\">&times;</button>\\r\\n                     <h4 class=\\\"modal-title\\\" id=\\\"myModalLabel\\\">Selected Retailers</h4>\\r\\n                  </div>\\r\\n                  <table style=\\\"height:200px;\\\">\\r\\n                     <tr>\\r\\n                        <th style=\\\"width:3px;\\\">S.No.</th>\\r\\n                        <th style=\\\"width:15px;\\\">Retailer</th>\\r\\n                        <th style=\\\"width:4px;\\\">Action</th>\\r\\n                     </tr>\\r\\n                     <tr\\r\\n                        *ngFor=\\\"let data of _reportFilterService.SalesReturnSummaryRetailerObj.SalesReturnSummaryRetailer_MultipleRetailer;let i = index\\\">\\r\\n                        <td style=\\\"width:3px;\\\">{{ i + 1 }}</td>\\r\\n                        <td style=\\\"width:15px;\\\">{{data.RETAILER}}</td>\\r\\n                        <td style=\\\"width:4px;\\\"> <button type=\\\"button\\\" class=\\\"btn btn-info\\\" style=\\\"float: right;\\\"\\r\\n                              (click)=\\\"deleteRetailer(i)\\\">Delete</button></td>\\r\\n                     </tr>\\r\\n                  </table>\\r\\n               </div>\\r\\n            </div>\\r\\n\\r\\n         </div>\\r\\n      </div>\\r\\n   </div>\\r\\n</div>\\r\\n<!-- Modal Ends -->\\r\\n\\r\\n<generic-popup-grid #genericGridSalesman [popupsettings]=\\\"gridPopupSettingsForSalesman\\\"\\r\\n   (onItemDoubleClick)=\\\"dblClickSalesmanSelect($event)\\\">\\r\\n</generic-popup-grid>\\r\\n\\r\\n<generic-popup-grid #genericGridRetailer [popupsettings]=\\\"gridPopupSettingsForRetailerListBySalesman\\\"\\r\\n   (onItemDoubleClick)=\\\"dblClickRetailerPopup($event)\\\">\\r\\n</generic-popup-grid>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/ReportDialogs/SalesReturnSummaryRetailerReport/salesreturnsummary-retailerreport.component.html\n// module id = 1754\n// module chunks = 0","module.exports = \"<div class=\\\"container\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <!-- Filter Starts -->\\r\\n        <div class=\\\"col-12 col-md-12\\\">\\r\\n            <div style=\\\"background-color : #ffffff;width: 105%;\\\">\\r\\n\\r\\n                <div class=\\\"row\\\">\\r\\n                    <div class=\\\"modal-header\\\" style=\\\"border:0px;\\\">\\r\\n                        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" (click)=\\\"hide()\\\">&times;</button>\\r\\n                        <h4 class=\\\"modal-title\\\" style=\\\"padding-left: 20px;\\\">Stock ABC Analysis Report</h4>\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"row\\\" style=\\\"margin-top: -2%;\\\">\\r\\n                    <div class=\\\"row col-md-12\\\" style=\\\"padding-top: 2%;\\\">\\r\\n                        <!-- Left Column -->\\r\\n                        <div class=\\\"col-md-6\\\" style=\\\"padding-left: 30px;\\\">\\r\\n                            <fieldset>\\r\\n                                <legend style=\\\"font-size:11px;font-weight: bold; width:auto\\\">Date Range Selection :\\r\\n                                </legend>\\r\\n                                <table>\\r\\n                                    <tr>\\r\\n                                        <td><label class=\\\"smallBoldLabel\\\">From:(AD)</label></td>\\r\\n                                        <td><label class=\\\"smallBoldLabel\\\">To:(AD)</label></td>\\r\\n                                    </tr>\\r\\n                                    <tr>\\r\\n                                        <td>\\r\\n                                            <label class=\\\"smallBoldLabel\\\"><input type=\\\"date\\\"\\r\\n                                                    style=\\\"width:152px; min-width:50%;\\\" placeholder=\\\"Year Start Date\\\"\\r\\n                                                    [(ngModel)]=\\\"_reportFilterService.StockAbcAnalysisAccountObj.StockAbcAnalysisAccount_DATE1\\\"\\r\\n                                                    (change)=\\\"changeEntryDate($event.target.value,'AD')\\\"></label>\\r\\n                                        </td>\\r\\n                                        <td>\\r\\n                                            <label class=\\\"smallBoldLabel\\\"><input type=\\\"date\\\"\\r\\n                                                    style=\\\"width:152px; min-width:50%;\\\" placeholder=\\\"Year Start Date\\\"\\r\\n                                                    [(ngModel)]=\\\"_reportFilterService.StockAbcAnalysisAccountObj.StockAbcAnalysisAccount_DATE2\\\"\\r\\n                                                    (change)=\\\"changeEndDate($event.target.value,'AD')\\\"></label>\\r\\n                                        </td>\\r\\n                                    </tr>\\r\\n                                    <tr>\\r\\n                                        <td>\\r\\n                                            <nepali-date-picker name=\\\"nepaliDatefrom\\\" [id]=\\\"'nepaliDatefrom'\\\"\\r\\n                                                (change)=\\\"changeEntryDate($event.detail.value,'BS')\\\" [label]=\\\"'From'\\\"\\r\\n                                                [(ngModel)]=\\\"_reportFilterService.StockAbcAnalysisAccountObj.StockAbcAnalysisAccount_BSDATE1\\\">\\r\\n                                            </nepali-date-picker>\\r\\n                                        </td>\\r\\n                                        <td>\\r\\n                                            <nepali-date-picker name=\\\"nepaliDateto\\\" [id]=\\\"'nepaliDateto'\\\"\\r\\n                                                (change)=\\\"changeEndDate($event.detail.value,'BS')\\\" [label]=\\\"'To'\\\"\\r\\n                                                [(ngModel)]=\\\"_reportFilterService.StockAbcAnalysisAccountObj.StockAbcAnalysisAccount_BSDATE2\\\">\\r\\n                                            </nepali-date-picker>\\r\\n                                        </td>\\r\\n                                    </tr>\\r\\n                                </table>\\r\\n                            </fieldset>\\r\\n\\r\\n                            <fieldset>\\r\\n                                <legend class=\\\"legend-class\\\">Report Type Selection :</legend>\\r\\n                                <div>\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col-md-1\\\">\\r\\n                                            <input type=\\\"radio\\\" name=\\\"reportType\\\"\\r\\n                                                [(ngModel)]=\\\"_reportFilterService.StockAbcAnalysisAccountObj.StockAbcAnalysisAccount_REPORTTYPE\\\"\\r\\n                                                value=0>\\r\\n                                        </div>\\r\\n                                        <div calss=\\\"col\\\">\\r\\n                                            <label style=\\\"width: 178px;\\\" class=\\\"smallBoldLabel\\\">Item Wise Stock\\r\\n                                                Report</label>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col-md-1\\\">\\r\\n                                            <input type=\\\"radio\\\" name=\\\"reportType\\\"\\r\\n                                                [(ngModel)]=\\\"_reportFilterService.StockAbcAnalysisAccountObj.StockAbcAnalysisAccount_REPORTTYPE\\\"\\r\\n                                                value=1>\\r\\n                                        </div>\\r\\n                                        <div calss=\\\"col\\\">\\r\\n                                            <label style=\\\"width: 178px;\\\" class=\\\"smallBoldLabel\\\">Item Group Wise Stock\\r\\n                                                Report</label>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col-md-1\\\">\\r\\n                                            <input type=\\\"radio\\\" name=\\\"reportType\\\"\\r\\n                                                [(ngModel)]=\\\"_reportFilterService.StockAbcAnalysisAccountObj.StockAbcAnalysisAccount_REPORTTYPE\\\"\\r\\n                                                value=2>\\r\\n                                        </div>\\r\\n                                        <div calss=\\\"col\\\">\\r\\n                                            <label style=\\\"width: 178px;\\\" class=\\\"smallBoldLabel\\\">Item Category Wise Stock\\r\\n                                                Report</label>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"row\\\"\\r\\n                                        *ngIf=\\\"_reportFilterService.StockAbcAnalysisAccountObj.StockAbcAnalysisAccount_REPORTTYPE!=0\\\">\\r\\n                                        <div class=\\\"col-md-1\\\">\\r\\n                                            <input type=\\\"checkbox\\\"\\r\\n                                                [(ngModel)]=\\\"_reportFilterService.StockAbcAnalysisAccountObj.StockAbcAnalysisAccount_ShowItemInGroupWiseReport \\\"\\r\\n                                                (change)=\\\"$event.target.checked?(_reportFilterService.StockAbcAnalysisAccountObj.StockAbcAnalysisAccount_ShowItemInGroupWiseReport =1):(_reportFilterService.StockAbcAnalysisAccountObj.StockAbcAnalysisAccount_ShowItemInGroupWiseReport =0)\\\"\\r\\n                                                [checked]=\\\"_reportFilterService.StockAbcAnalysisAccountObj.StockAbcAnalysisAccount_ShowItemInGroupWiseReport ==1\\\">\\r\\n                                        </div>\\r\\n                                        <div calss=\\\"col\\\">\\r\\n                                            <label style=\\\"width: 220px;\\\" class=\\\"smallBoldLabel\\\"\\r\\n                                                *ngIf=\\\"_reportFilterService.StockAbcAnalysisAccountObj.StockAbcAnalysisAccount_REPORTTYPE == 1\\\">Show\\r\\n                                                Item In Group Wise Stock Report</label>\\r\\n                                            <label style=\\\"width: 220px;\\\" class=\\\"smallBoldLabel\\\"\\r\\n                                                *ngIf=\\\"_reportFilterService.StockAbcAnalysisAccountObj.StockAbcAnalysisAccount_REPORTTYPE == 2\\\">Show\\r\\n                                                Item In Category Wise Stock Report</label>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </fieldset>\\r\\n\\r\\n                        </div>\\r\\n                        <!-- Left column-->\\r\\n\\r\\n                        <!-- Right column-->\\r\\n                        <div class=\\\"col-md-6\\\">\\r\\n                            <fieldset>\\r\\n                                <legend>Product:</legend>\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\"\\r\\n                                    [(ngModel)]=\\\"_reportFilterService.StockAbcAnalysisAccountObj.StockAbcAnalysisAccount_ITEM\\\"\\r\\n                                    placeholder=\\\"Press Enter or Tab for Product\\\"\\r\\n                                    (keydown.Tab)=\\\"ProductEnterClicked($event)\\\"\\r\\n                                    (keydown.enter)=\\\"ProductEnterClicked($event)\\\">\\r\\n\\r\\n                            </fieldset>\\r\\n\\r\\n                            <!-- <fieldset>\\r\\n                                <legend>Brand:</legend>\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\"\\r\\n                                    [(ngModel)]=\\\"_reportFilterService.StockAbcAnalysisAccountObj.StockAbcAnalysisAccount_BRANDNAME\\\"\\r\\n                                    placeholder=\\\"Press Enter or Tab for Brand\\\" (keydown.Tab)=\\\"BrandEnterClicked($event)\\\"\\r\\n                                    (keydown.enter)=\\\"BrandEnterClicked($event)\\\">\\r\\n                            </fieldset> -->\\r\\n\\r\\n                            <fieldset>\\r\\n                                <legend>Supplier :</legend>\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\"\\r\\n                                    [(ngModel)]=\\\"_reportFilterService.StockAbcAnalysisAccountObj.StockAbcAnalysisAccount_SUPPLIER\\\"\\r\\n                                    placeholder=\\\"Press Enter or Tab for Supplier\\\"\\r\\n                                    (keydown.Tab)=\\\"SupplierEnterClicked($event)\\\"\\r\\n                                    (keydown.enter)=\\\"SupplierEnterClicked($event)\\\">\\r\\n                            </fieldset>\\r\\n                        </div>\\r\\n                        <!-- Right column-->\\r\\n\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"modal-footer\\\" style=\\\"width : 97%; margin : 0px auto;\\\">\\r\\n                    <button class=\\\"btn btn-info confirm-btn\\\" type=\\\"button\\\" (click)=onload()>RUN</button>\\r\\n                    <button type=\\\"button\\\" (click)=\\\"closeReportBox()\\\" title=\\\"Cancel\\\" class=\\\"btn btn-info\\\">Close</button>\\r\\n                </div>\\r\\n            </div>\\r\\n            <!-- Filter Ends -->\\r\\n            <!-- Modal Ends -->\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<generic-popup-grid #genericGridProduct [popupsettings]=\\\"gridPopupSettingsForProduct\\\"\\r\\n    (onItemDoubleClick)=\\\"dblClickProductSelect($event)\\\">\\r\\n</generic-popup-grid>\\r\\n\\r\\n<generic-popup-grid #genericGridSupplier [popupsettings]=\\\"gridPopupSettingsForSupplier\\\"\\r\\n    (onItemDoubleClick)=\\\"dblClickSupplierSelect($event)\\\">\\r\\n</generic-popup-grid>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/ReportDialogs/StockAbcAnalysisReportAccount/stockabc-analysisreport-account.component.html\n// module id = 1755\n// module chunks = 0","module.exports = \"<div class=\\\"container\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <!-- Filter Starts -->\\r\\n        <div class=\\\"col-12 col-md-12\\\">\\r\\n            <div style=\\\"background-color : #ffffff;width: 105%;height: 19rem;\\\">\\r\\n\\r\\n                <div class=\\\"row\\\">\\r\\n                    <div class=\\\"modal-header\\\" style=\\\"border:0px;\\\">\\r\\n                        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" (click)=\\\"closeReportBox()\\\">&times;</button>\\r\\n                        <h4 class=\\\"modal-title\\\" style=\\\"padding-left: 20px;\\\">Stock Ledger Report</h4>\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"row\\\" style=\\\"margin-top: -2%;\\\">\\r\\n                    <div class=\\\"row col-md-12\\\" style=\\\"padding-top: 2%;\\\">\\r\\n                        <!-- Left Column -->\\r\\n                        <div class=\\\"col-md-6\\\" style=\\\"padding-left: 30px;\\\">\\r\\n                            <fieldset>\\r\\n                                <legend style=\\\"font-size:11px;font-weight: bold; width:auto\\\">Date Range Selection :\\r\\n                                </legend>\\r\\n                                <table>\\r\\n                                    <tr>\\r\\n                                        <td><label class=\\\"smallBoldLabel\\\">From:(AD)</label></td>\\r\\n                                        <td><label class=\\\"smallBoldLabel\\\">To:(AD)</label></td>\\r\\n                                    </tr>\\r\\n                                    <tr>\\r\\n                                        <td>\\r\\n                                            <label class=\\\"smallBoldLabel\\\"><input type=\\\"date\\\"\\r\\n                                                    style=\\\"width:152px; min-width:50%;\\\" placeholder=\\\"Year Start Date\\\"\\r\\n                                                    [(ngModel)]=\\\"_reportFilterService.StockLedgerAccountObj.StockLedgerReportAcc_DATE1\\\"\\r\\n                                                    (change)=\\\"changeEntryDate($event.target.value,'AD')\\\"></label>\\r\\n                                        </td>\\r\\n                                        <td>\\r\\n                                            <label class=\\\"smallBoldLabel\\\"><input type=\\\"date\\\"\\r\\n                                                    style=\\\"width:152px; min-width:50%;\\\" placeholder=\\\"Year Start Date\\\"\\r\\n                                                    [(ngModel)]=\\\"_reportFilterService.StockLedgerAccountObj.StockLedgerReportAcc_DATE2\\\"\\r\\n                                                    (change)=\\\"changeEndDate($event.target.value,'AD')\\\"></label>\\r\\n                                        </td>\\r\\n                                    </tr>\\r\\n                                    <tr>\\r\\n                                        <td>\\r\\n                                            <nepali-date-picker name=\\\"nepaliDatefrom\\\" [id]=\\\"'nepaliDatefrom'\\\"\\r\\n                                                (change)=\\\"changeEntryDate($event.detail.value,'BS')\\\" [label]=\\\"'From'\\\"\\r\\n                                                [(ngModel)]=\\\"_reportFilterService.StockLedgerAccountObj.StockLedgerReportAcc_BSDATE1\\\">\\r\\n                                            </nepali-date-picker>\\r\\n                                        </td>\\r\\n                                        <td>\\r\\n                                            <nepali-date-picker name=\\\"nepaliDateto\\\" [id]=\\\"'nepaliDateto'\\\"\\r\\n                                                (change)=\\\"changeEndDate($event.detail.value,'BS')\\\" [label]=\\\"'To'\\\"\\r\\n                                                [(ngModel)]=\\\"_reportFilterService.StockLedgerAccountObj.StockLedgerReportAcc_BSDATE2\\\">\\r\\n                                            </nepali-date-picker>\\r\\n                                        </td>\\r\\n                                    </tr>\\r\\n                                </table>\\r\\n                            </fieldset>\\r\\n\\r\\n                        </div>\\r\\n                        <!-- Left column-->\\r\\n\\r\\n                        <!-- Right column-->\\r\\n                        <div class=\\\"col-md-6\\\">\\r\\n\\r\\n\\r\\n                            <fieldset>\\r\\n                                <legend>Warehouse:</legend>\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\"\\r\\n                                    [(ngModel)]=\\\"_reportFilterService.StockLedgerAccountObj.StockLedgerReportAcc_WAREHOUSE\\\"\\r\\n                                    placeholder=\\\"Press Enter or Tab for Warehouse\\\"\\r\\n                                    (keydown.Tab)=\\\"WarehouseEnterClicked($event)\\\"\\r\\n                                    (keydown.enter)=\\\"WarehouseEnterClicked($event)\\\">\\r\\n                                <button type=\\\"button\\\" *ngIf=\\\"_reportFilterService.showMultipleWarehouse\\\"\\r\\n                                    (click)=\\\"addWarehouseToList()\\\" class=\\\"btn btn-info\\\"\\r\\n                                    style=\\\"float: right;\\\">Add</button>\\r\\n                            </fieldset>\\r\\n                            <fieldset>\\r\\n                                <legend>Product:</legend>\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\"\\r\\n                                    [(ngModel)]=\\\"_reportFilterService.StockLedgerAccountObj.StockLedgerReportAcc_ITEM\\\"\\r\\n                                    placeholder=\\\"Press Enter or Tab for Product\\\"\\r\\n                                    (keydown.Tab)=\\\"ProductEnterClicked($event)\\\"\\r\\n                                    (keydown.enter)=\\\"ProductEnterClicked($event)\\\">\\r\\n\\r\\n                            </fieldset>\\r\\n\\r\\n\\r\\n                            <div class=\\\"row\\\">\\r\\n                                <div class=\\\"col-md-1\\\">\\r\\n                                    <input type=\\\"checkbox\\\"\\r\\n                                        [(ngModel)]=\\\"_reportFilterService.StockLedgerAccountObj.StockLedgerReportAcc_SHOWBATCHWISE\\\"\\r\\n                                        (change)=\\\"$event.target.checked?(_reportFilterService.StockLedgerAccountObj.StockLedgerReportAcc_SHOWBATCHWISE=1):(_reportFilterService.StockLedgerAccountObj.StockLedgerReportAcc_SHOWBATCHWISE=0)\\\"\\r\\n                                        [checked]=\\\"_reportFilterService.StockLedgerAccountObj.StockLedgerReportAcc_SHOWBATCHWISE==1\\\">\\r\\n                                </div>\\r\\n                                <div calss=\\\"col\\\">\\r\\n                                    <label style=\\\"width: 200px;\\\" class=\\\"smallBoldLabel\\\">Show Batch\\r\\n                                        Wise Stock Report</label>\\r\\n                                </div>\\r\\n                            </div>\\r\\n<!-- \\r\\n                            <div class=\\\"row\\\">\\r\\n                                <div class=\\\"col-md-1\\\">\\r\\n                                    <input type=\\\"checkbox\\\"\\r\\n                                        [(ngModel)]=\\\"_reportFilterService.StockLedgerAccountObj.StockLedgerReportAcc_SHOWDETAIL\\\"\\r\\n                                        (change)=\\\"$event.target.checked?(_reportFilterService.StockLedgerAccountObj.StockLedgerReportAcc_SHOWDETAIL=1):(_reportFilterService.StockLedgerAccountObj.StockLedgerReportAcc_SHOWDETAIL=0)\\\"\\r\\n                                        [checked]=\\\"_reportFilterService.StockLedgerAccountObj.StockLedgerReportAcc_SHOWDETAIL==1\\\"\\r\\n                                        >\\r\\n                                </div>\\r\\n                                <div calss=\\\"col\\\">\\r\\n                                    <label style=\\\"width: 200px;\\\" class=\\\"smallBoldLabel\\\">Show Item\\r\\n                                        Detail In Report</label>\\r\\n                                </div>\\r\\n                            </div> -->\\r\\n                        </div>\\r\\n\\r\\n\\r\\n                        <!-- Right column-->\\r\\n\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"btn\\\" style=\\\"float: right;\\\">\\r\\n                    <button class=\\\"btn btn-info confirm-btn\\\" type=\\\"button\\\" (click)=onload()>RUN</button>\\r\\n                    <button type=\\\"button\\\" (click)=\\\"closeReportBox()\\\" title=\\\"Cancel\\\" class=\\\"btn btn-info\\\">Close</button>\\r\\n                </div>\\r\\n\\r\\n               \\r\\n            </div>\\r\\n            <!-- Filter Ends -->\\r\\n            <!-- Modal Ends -->\\r\\n        </div>\\r\\n        \\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<!-- \\r\\n<popup-reports #genericGridProduct [popupsettings]=\\\"gridPopupSettingsForProduct\\\"\\r\\n    (onItemDoubleClick)=\\\"dblClickProductSelect($event)\\\">\\r\\n</popup-reports>\\r\\n\\r\\n<popup-reports #genericGridWarehouse [popupsettings]=\\\"gridPopupSettingsForWarehouse\\\"\\r\\n    (onItemDoubleClick)=\\\"dblClickWarehouseSelect($event)\\\">\\r\\n</popup-reports> -->\\r\\n\\r\\n\\r\\n<generic-popup-grid #genericGridWarehouse [popupsettings]=\\\"gridPopupSettingsForWarehouse\\\"\\r\\n    (onItemDoubleClick)=\\\"dblClickWarehouseSelect($event)\\\">\\r\\n</generic-popup-grid>\\r\\n\\r\\n<generic-popup-grid #genericGridProduct [popupsettings]=\\\"gridPopupSettingsForProduct\\\"\\r\\n    (onItemDoubleClick)=\\\"dblClickProductSelect($event)\\\">\\r\\n</generic-popup-grid>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/ReportDialogs/StockLedgerReportAcc/stock-ledger-report-account.component.html\n// module id = 1756\n// module chunks = 0","module.exports = \"<div class=\\\"container\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <!-- Filter Starts -->\\r\\n        <div class=\\\"col-12 col-md-12\\\">\\r\\n            <div style=\\\"background-color : #ffffff;width: 105%;\\\">\\r\\n\\r\\n                <div class=\\\"row\\\">\\r\\n                    <div class=\\\"modal-header\\\" style=\\\"border:0px;\\\">\\r\\n                        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" (click)=\\\"hide()\\\">&times;</button>\\r\\n                        <h4 class=\\\"modal-title\\\" style=\\\"padding-left: 20px;\\\">Stock Summary Report</h4>\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"row\\\" style=\\\"margin-top: -2%;\\\">\\r\\n                    <div class=\\\"row col-md-12\\\" style=\\\"padding-top: 2%;\\\">\\r\\n                        <!-- Left Column -->\\r\\n                        <div class=\\\"col-md-6\\\" style=\\\"padding-left: 30px;\\\">\\r\\n                            <fieldset>\\r\\n                                <legend style=\\\"font-size:11px;font-weight: bold; width:auto\\\">Date Range Selection :\\r\\n                                </legend>\\r\\n                                <table>\\r\\n                                    <tr>\\r\\n                                        <td><label class=\\\"smallBoldLabel\\\">From:(AD)</label></td>\\r\\n                                        <td><label class=\\\"smallBoldLabel\\\">To:(AD)</label></td>\\r\\n                                    </tr>\\r\\n                                    <tr>\\r\\n                                        <td>\\r\\n                                            <label class=\\\"smallBoldLabel\\\"><input type=\\\"date\\\"\\r\\n                                                    style=\\\"width:152px; min-width:50%;\\\" placeholder=\\\"Year Start Date\\\"\\r\\n                                                    [(ngModel)]=\\\"_reportFilterService.StockSummaryAccountObj.StockSummaryAccount_DATE1\\\"\\r\\n                                                    (change)=\\\"changeEntryDate($event.target.value,'AD')\\\"></label>\\r\\n                                        </td>\\r\\n                                        <td>\\r\\n                                            <label class=\\\"smallBoldLabel\\\"><input type=\\\"date\\\"\\r\\n                                                    style=\\\"width:152px; min-width:50%;\\\" placeholder=\\\"Year Start Date\\\"\\r\\n                                                    [(ngModel)]=\\\"_reportFilterService.StockSummaryAccountObj.StockSummaryAccount_DATE2\\\"\\r\\n                                                    (change)=\\\"changeEndDate($event.target.value,'AD')\\\"></label>\\r\\n                                        </td>\\r\\n                                    </tr>\\r\\n                                    <tr>\\r\\n                                        <td>\\r\\n                                            <nepali-date-picker name=\\\"nepaliDatefrom\\\" [id]=\\\"'nepaliDatefrom'\\\"\\r\\n                                                (change)=\\\"changeEntryDate($event.detail.value,'BS')\\\" [label]=\\\"'From'\\\"\\r\\n                                                [(ngModel)]=\\\"_reportFilterService.StockSummaryAccountObj.StockSummaryAccount_BSDATE1\\\">\\r\\n                                            </nepali-date-picker>\\r\\n                                        </td>\\r\\n                                        <td>\\r\\n                                            <nepali-date-picker name=\\\"nepaliDateto\\\" [id]=\\\"'nepaliDateto'\\\"\\r\\n                                                (change)=\\\"changeEndDate($event.detail.value,'BS')\\\" [label]=\\\"'To'\\\"\\r\\n                                                [(ngModel)]=\\\"_reportFilterService.StockSummaryAccountObj.StockSummaryAccount_BSDATE2\\\">\\r\\n                                            </nepali-date-picker>\\r\\n                                        </td>\\r\\n                                    </tr>\\r\\n                                </table>\\r\\n                            </fieldset>\\r\\n\\r\\n                            <fieldset>\\r\\n                                <legend class=\\\"legend-class\\\">Report Type Selection :</legend>\\r\\n                                <div style=\\\"margin-top:1px;\\\">\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col-md-1\\\">\\r\\n                                            <input type=\\\"radio\\\" name=\\\"reportType\\\"\\r\\n                                                [(ngModel)]=\\\"_reportFilterService.StockSummaryAccountObj.StockSummaryAccount_REPORTTYPE\\\"\\r\\n                                                value=0>\\r\\n                                        </div>\\r\\n                                        <div calss=\\\"col\\\">\\r\\n                                            <label style=\\\"width: 200px;\\\" class=\\\"smallBoldLabel\\\">Item Wise Stock\\r\\n                                                Report</label>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col-md-1\\\">\\r\\n                                            <input type=\\\"radio\\\" name=\\\"reportType\\\"\\r\\n                                                [(ngModel)]=\\\"_reportFilterService.StockSummaryAccountObj.StockSummaryAccount_REPORTTYPE\\\"\\r\\n                                                value=1>\\r\\n                                        </div>\\r\\n                                        <div calss=\\\"col\\\">\\r\\n                                            <label style=\\\"width: 200px;\\\" class=\\\"smallBoldLabel\\\">Item Group Wise Stock\\r\\n                                                Report</label>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col-md-1\\\">\\r\\n                                            <input type=\\\"radio\\\" name=\\\"reportType\\\"\\r\\n                                                [(ngModel)]=\\\"_reportFilterService.StockSummaryAccountObj.StockSummaryAccount_REPORTTYPE\\\"\\r\\n                                                value=2>\\r\\n                                        </div>\\r\\n                                        <div calss=\\\"col\\\">\\r\\n                                            <label style=\\\"width: 200px;\\\" class=\\\"smallBoldLabel\\\">Item Category Wise Stock\\r\\n                                                Report</label>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"row\\\"\\r\\n                                        *ngIf=\\\"_reportFilterService.StockSummaryAccountObj.StockSummaryAccount_REPORTTYPE!=0\\\">\\r\\n                                        <div class=\\\"col-md-1\\\">\\r\\n                                            <input type=\\\"checkbox\\\"\\r\\n                                                [(ngModel)]=\\\"_reportFilterService.StockSummaryAccountObj.StockSummaryAccount_ShowItemInGroupWiseReport \\\"\\r\\n                                                (change)=\\\"$event.target.checked?(_reportFilterService.StockSummaryAccountObj.StockSummaryAccount_ShowItemInGroupWiseReport =1):(_reportFilterService.StockSummaryAccountObj.StockSummaryAccount_ShowItemInGroupWiseReport =0)\\\"\\r\\n                                                [checked]=\\\"_reportFilterService.StockSummaryAccountObj.StockSummaryAccount_ShowItemInGroupWiseReport ==1\\\">\\r\\n                                        </div>\\r\\n                                        <div calss=\\\"col\\\">\\r\\n                                            <label style=\\\"width: 230px;\\\" class=\\\"smallBoldLabel\\\"\\r\\n                                                *ngIf=\\\"_reportFilterService.StockSummaryAccountObj.StockSummaryAccount_REPORTTYPE == 1\\\">Show\\r\\n                                                Item In Group Wise Stock Report</label>\\r\\n                                            <label style=\\\"width: 230px;\\\" class=\\\"smallBoldLabel\\\"\\r\\n                                                *ngIf=\\\"_reportFilterService.StockSummaryAccountObj.StockSummaryAccount_REPORTTYPE == 2\\\">Show\\r\\n                                                Item In Category Wise Stock Report</label>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </fieldset>\\r\\n\\r\\n                            <fieldset>\\r\\n                                <legend class=\\\"legend-class\\\">Report Option :</legend>\\r\\n                                <div style=\\\"margin-top:1px;\\\">\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col-md-1\\\">\\r\\n                                            <input type=\\\"radio\\\" name=\\\"reportOption\\\"\\r\\n                                                [(ngModel)]=\\\"_reportFilterService.StockSummaryAccountObj.StockSummaryAccount_ReportMode\\\"\\r\\n                                                value=0>\\r\\n                                        </div>\\r\\n                                        <div calss=\\\"col\\\">\\r\\n                                            <label style=\\\"width: 200px;\\\" class=\\\"smallBoldLabel\\\">Show All Item Stock\\r\\n                                                Report</label>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col-md-1\\\">\\r\\n                                            <input type=\\\"radio\\\" name=\\\"reportOption\\\"\\r\\n                                                [(ngModel)]=\\\"_reportFilterService.StockSummaryAccountObj.StockSummaryAccount_ReportMode\\\"\\r\\n                                                value=1>\\r\\n                                        </div>\\r\\n                                        <div calss=\\\"col\\\">\\r\\n                                            <label style=\\\"width: 200px;\\\" class=\\\"smallBoldLabel\\\">Show Stock Report\\r\\n                                                Excluding Zero B/L</label>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col-md-1\\\">\\r\\n                                            <input type=\\\"radio\\\" name=\\\"reportOption\\\"\\r\\n                                                [(ngModel)]=\\\"_reportFilterService.StockSummaryAccountObj.StockSummaryAccount_ReportMode\\\"\\r\\n                                                value=2>\\r\\n                                        </div>\\r\\n                                        <div calss=\\\"col\\\">\\r\\n                                            <label style=\\\"width: 200px;\\\" class=\\\"smallBoldLabel\\\">Show Negative Stock B/L\\r\\n                                                Item Only</label>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col-md-1\\\">\\r\\n                                            <input type=\\\"radio\\\" name=\\\"reportOption\\\"\\r\\n                                                [(ngModel)]=\\\"_reportFilterService.StockSummaryAccountObj.StockSummaryAccount_ReportMode\\\"\\r\\n                                                value=3>\\r\\n                                        </div>\\r\\n                                        <div calss=\\\"col\\\">\\r\\n                                            <label style=\\\"width: 200px;\\\" class=\\\"smallBoldLabel\\\">Show Zero Stock B/L Item\\r\\n                                                Only</label>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </fieldset>\\r\\n\\r\\n                        </div>\\r\\n                        <!-- Left column-->\\r\\n\\r\\n                        <!-- Right column-->\\r\\n                        <div class=\\\"col-md-6\\\">\\r\\n\\r\\n                            <fieldset>\\r\\n                                <legend>Warehouse:</legend>\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\"\\r\\n                                    [(ngModel)]=\\\"_reportFilterService.StockSummaryAccountObj.StockSummaryAccount_WAREHOUSE\\\"\\r\\n                                    placeholder=\\\"Press Enter or Tab for Warehouse\\\"\\r\\n                                    (keydown.Tab)=\\\"WarehouseEnterClicked($event)\\\"\\r\\n                                    (keydown.enter)=\\\"WarehouseEnterClicked($event)\\\">\\r\\n                            </fieldset>\\r\\n\\r\\n                            <fieldset>\\r\\n                                <legend>Product:</legend>\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\"\\r\\n                                    [(ngModel)]=\\\"_reportFilterService.StockSummaryAccountObj.StockSummaryAccount_ITEM\\\"\\r\\n                                    placeholder=\\\"Press Enter or Tab for Product\\\"\\r\\n                                    (keydown.Tab)=\\\"ProductEnterClicked($event)\\\"\\r\\n                                    (keydown.enter)=\\\"ProductEnterClicked($event)\\\">\\r\\n\\r\\n                            </fieldset>\\r\\n\\r\\n                            <!-- <fieldset>\\r\\n                                <legend>Brand:</legend>\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\"\\r\\n                                    [(ngModel)]=\\\"_reportFilterService.StockSummaryAccountObj.StockSummaryAccount_BRANDNAME\\\"\\r\\n                                    placeholder=\\\"Press Enter or Tab for Brand\\\" (keydown.Tab)=\\\"BrandEnterClicked($event)\\\"\\r\\n                                    (keydown.enter)=\\\"BrandEnterClicked($event)\\\">\\r\\n                            </fieldset> -->\\r\\n\\r\\n                            <fieldset>\\r\\n                                <legend>Supplier :</legend>\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\"\\r\\n                                    [(ngModel)]=\\\"_reportFilterService.StockSummaryAccountObj.StockSummaryAccount_SUPPLIER\\\"\\r\\n                                    placeholder=\\\"Press Enter or Tab for Supplier\\\"\\r\\n                                    (keydown.Tab)=\\\"SupplierEnterClicked($event)\\\"\\r\\n                                    (keydown.enter)=\\\"SupplierEnterClicked($event)\\\">\\r\\n                            </fieldset>\\r\\n\\r\\n                            <fieldset>\\r\\n                                <legend class=\\\"legend-class\\\">Report Format :</legend>\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <div class=\\\"col-md-1\\\">\\r\\n                                        <input type=\\\"radio\\\" name=\\\"reportFormat\\\"\\r\\n                                            [(ngModel)]=\\\"_reportFilterService.StockSummaryAccountObj.StockSummaryAccount_DETAILFORMAT\\\"\\r\\n                                            value=0>\\r\\n                                    </div>\\r\\n                                    <div calss=\\\"col\\\">\\r\\n                                        <label style=\\\"width: 200px;\\\" class=\\\"smallBoldLabel\\\">Summary Report</label>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <div class=\\\"col-md-1\\\">\\r\\n                                        <input type=\\\"radio\\\" name=\\\"reportFormat\\\"\\r\\n                                            [(ngModel)]=\\\"_reportFilterService.StockSummaryAccountObj.StockSummaryAccount_DETAILFORMAT\\\"\\r\\n                                            value=1>\\r\\n                                    </div>\\r\\n                                    <div calss=\\\"col\\\">\\r\\n                                        <label style=\\\"width: 200px;\\\" class=\\\"smallBoldLabel\\\">Detail Report</label>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </fieldset>\\r\\n\\r\\n\\r\\n                            <div class=\\\"row\\\">\\r\\n                                <div class=\\\"col-md-1\\\">\\r\\n                                    <input type=\\\"checkbox\\\"\\r\\n                                        [(ngModel)]=\\\"_reportFilterService.StockSummaryAccountObj.StockSummaryAccount_SHOWBATCHWISE\\\"\\r\\n                                        (change)=\\\"$event.target.checked?(_reportFilterService.StockSummaryAccountObj.StockSummaryAccount_SHOWBATCHWISE=1):(_reportFilterService.StockSummaryAccountObj.StockSummaryAccount_SHOWBATCHWISE=0)\\\"\\r\\n                                        [checked]=\\\"_reportFilterService.StockSummaryAccountObj.StockSummaryAccount_SHOWBATCHWISE==1\\\">\\r\\n                                </div>\\r\\n                                <div calss=\\\"col\\\">\\r\\n                                    <label style=\\\"width: 200px;\\\" class=\\\"smallBoldLabel\\\">Show Batch\\r\\n                                        Wise Stock Report</label>\\r\\n                                </div>\\r\\n                            </div>\\r\\n\\r\\n                            <!-- <div class=\\\"row\\\">\\r\\n                                <div class=\\\"col-md-1\\\">\\r\\n                                    <input type=\\\"checkbox\\\"\\r\\n                                        [(ngModel)]=\\\"_reportFilterService.StockSummaryAccountObj.StockSummaryAccount_SHOWALTUNIT\\\"\\r\\n                                        (change)=\\\"$event.target.checked?(_reportFilterService.StockSummaryAccountObj.StockSummaryAccount_SHOWALTUNIT=1):(_reportFilterService.StockSummaryAccountObj.StockSummaryAccount_SHOWALTUNIT=0)\\\"\\r\\n                                        [checked]=\\\"_reportFilterService.StockSummaryAccountObj.StockSummaryAccount_SHOWALTUNIT==1\\\">\\r\\n                                </div>\\r\\n                                <div class=\\\"col\\\"><label style=\\\"width: 200px;\\\" class=\\\"smallBoldLabel\\\">Show Alt\\r\\n                                        Unit Stock Report</label>\\r\\n                                </div>\\r\\n                            </div> -->\\r\\n\\r\\n                            <!-- <div class=\\\"row\\\">\\r\\n                                <div class=\\\"col-md-1\\\">\\r\\n                                    <input type=\\\"checkbox\\\"\\r\\n                                        [(ngModel)]=\\\"_reportFilterService.StockSummaryAccountObj.StockSummaryAccount_SHOWDETAIL\\\"\\r\\n                                        (change)=\\\"$event.target.checked?(_reportFilterService.StockSummaryAccountObj.StockSummaryAccount_SHOWDETAIL=1):(_reportFilterService.StockSummaryAccountObj.StockSummaryAccount_SHOWDETAIL=0)\\\"\\r\\n                                        [checked]=\\\"_reportFilterService.StockSummaryAccountObj.StockSummaryAccount_SHOWDETAIL==1\\\">\\r\\n                                </div>\\r\\n                                <div calss=\\\"col\\\">\\r\\n                                    <label style=\\\"width: 200px;\\\" class=\\\"smallBoldLabel\\\">Show Item\\r\\n                                        Detail In Report</label>\\r\\n                                </div>\\r\\n\\r\\n\\r\\n                                <div class=\\\"col-sm-1\\\"><input type=\\\"checkbox\\\"\\r\\n                                        [(ngModel)]=\\\"_reportFilterService.StockSummaryAccountObj.StockSummaryAccount_SHOWGROUPING\\\"\\r\\n                                        (change)=\\\"$event.target.checked?(_reportFilterService.StockSummaryAccountObj.StockSummaryAccount_SHOWGROUPING=1):(_reportFilterService.StockSummaryAccountObj.StockSummaryAccount_SHOWGROUPING=0)\\\"\\r\\n                                        [checked]=\\\"_reportFilterService.StockSummaryAccountObj.StockSummaryAccount_SHOWGROUPING==1\\\">\\r\\n                                </div>\\r\\n                                <div class=\\\"col\\\"><label style=\\\"width: 200px;\\\" class=\\\"smallBoldLabel\\\">Show Item\\r\\n                                        Grouping Hierarchy</label>\\r\\n                                </div>\\r\\n                            </div> -->\\r\\n                        </div>\\r\\n\\r\\n\\r\\n                        <!-- Right column-->\\r\\n\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"modal-footer\\\" style=\\\"width : 97%; margin : 0px auto;\\\">\\r\\n                    <button class=\\\"btn btn-info confirm-btn\\\" type=\\\"button\\\" (click)=onload()>RUN</button>\\r\\n                    <button type=\\\"button\\\" (click)=\\\"closeReportBox()\\\" title=\\\"Cancel\\\" class=\\\"btn btn-info\\\">Close</button>\\r\\n                </div>\\r\\n            </div>\\r\\n            <!-- Filter Ends -->\\r\\n            <!-- Modal Ends -->\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n\\r\\n<generic-popup-grid #genericGridWarehouse [popupsettings]=\\\"gridPopupSettingsForWarehouse\\\"\\r\\n    (onItemDoubleClick)=\\\"dblClickWarehouseSelect($event)\\\">\\r\\n</generic-popup-grid>\\r\\n\\r\\n<generic-popup-grid #genericGridProduct [popupsettings]=\\\"gridPopupSettingsForProduct\\\"\\r\\n    (onItemDoubleClick)=\\\"dblClickProductSelect($event)\\\">\\r\\n</generic-popup-grid>\\r\\n\\r\\n<generic-popup-grid #genericGridBrand [popupsettings]=\\\"gridPopupSettingsForBrand\\\"\\r\\n    (onItemDoubleClick)=\\\"dblClickBrandSelect($event)\\\">\\r\\n</generic-popup-grid>\\r\\n\\r\\n<generic-popup-grid #genericGridSupplier [popupsettings]=\\\"gridPopupSettingsForSupplier\\\"\\r\\n    (onItemDoubleClick)=\\\"dblClickSupplierSelect($event)\\\">\\r\\n</generic-popup-grid>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/ReportDialogs/StockSummaryReportAccount/stocksummary-report-account.component.html\n// module id = 1757\n// module chunks = 0","module.exports = \"<div class=\\\"container\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-12 col-md-12\\\">\\r\\n            <div style=\\\"background-color : #ffffff;width: 105%;\\\">\\r\\n\\r\\n                <div class=\\\"row\\\">\\r\\n                    <div class=\\\"modal-header\\\" style=\\\"border:0px;\\\">\\r\\n                        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" (click)=\\\"closeReportBox()\\\">&times;</button>\\r\\n                        <h4 class=\\\"modal-title\\\" style=\\\"padding-left: 20px;\\\">Sales Valuation Report</h4>\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"row\\\" style=\\\"margin-top: -2%;\\\">\\r\\n                    <div class=\\\"row col-md-12\\\" style=\\\"padding-top: 2%;\\\">\\r\\n                        <div class=\\\"col-md-6\\\" style=\\\"padding-left: 30px;\\\">\\r\\n                            <fieldset>\\r\\n                                <legend style=\\\"font-size:11px;font-weight: bold; width:auto\\\">Date Range Selection :\\r\\n                                </legend>\\r\\n                                <table>\\r\\n                                    <tr>\\r\\n                                        <td><label class=\\\"smallBoldLabel\\\">From:(AD)</label></td>\\r\\n                                    </tr>\\r\\n                                    <tr>\\r\\n                                        <td>\\r\\n                                            <label class=\\\"smallBoldLabel\\\"><input type=\\\"date\\\"\\r\\n                                                    style=\\\"width:152px; min-width:50%;\\\" placeholder=\\\"Year Start Date\\\"\\r\\n                                                    [(ngModel)]=\\\"_reportFilterService.StockValuationAccountObj.StockValuationAccount_DATE1\\\"\\r\\n                                                    (change)=\\\"changeEntryDate($event.target.value,'AD')\\\"></label>\\r\\n                                        </td>\\r\\n                                        <td>\\r\\n                                            <nepali-date-picker name=\\\"nepaliDatefrom\\\" [id]=\\\"'nepaliDatefrom'\\\"\\r\\n                                                (change)=\\\"changeEntryDate($event.detail.value,'BS')\\\" [label]=\\\"'From'\\\"\\r\\n                                                [(ngModel)]=\\\"_reportFilterService.StockValuationAccountObj.StockValuationAccount_BSDATE1\\\">\\r\\n                                            </nepali-date-picker>\\r\\n                                        </td>\\r\\n                                    </tr>\\r\\n                                </table>\\r\\n                            </fieldset>\\r\\n\\r\\n                            <fieldset>\\r\\n                                <legend class=\\\"legend-class\\\">Report Type :</legend>\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <div class=\\\"col-md-1\\\">\\r\\n                                        <input type=\\\"radio\\\" value=0\\r\\n                                            [(ngModel)]=\\\"_reportFilterService.StockValuationAccountObj.StockValuationAccount_SHOWDETAIL\\\">\\r\\n                                    </div>\\r\\n                                    <div calss=\\\"col\\\">\\r\\n                                        <label style=\\\"width: 200px;\\\" class=\\\"smallBoldLabel\\\">Summary Report</label>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <div class=\\\"col-md-1\\\">\\r\\n                                        <input type=\\\"radio\\\" value=1\\r\\n                                            [(ngModel)]=\\\"_reportFilterService.StockValuationAccountObj.StockValuationAccount_SHOWDETAIL\\\">\\r\\n                                    </div>\\r\\n                                    <div calss=\\\"col\\\">\\r\\n                                        <label style=\\\"width: 200px;\\\" class=\\\"smallBoldLabel\\\">Detail Report</label>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </fieldset>\\r\\n\\r\\n                        </div>\\r\\n                        <div class=\\\"col-md-6\\\">\\r\\n                            <fieldset>\\r\\n                                <legend>Product:</legend>\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\"\\r\\n                                    [(ngModel)]=\\\"_reportFilterService.StockValuationAccountObj.StockValuationAccount_ITEM\\\"\\r\\n                                    placeholder=\\\"Press Enter or Tab for Product\\\"\\r\\n                                    (keydown.Tab)=\\\"ProductEnterClicked($event)\\\"\\r\\n                                    (keydown.enter)=\\\"ProductEnterClicked($event)\\\">\\r\\n\\r\\n                            </fieldset>\\r\\n\\r\\n                        </div>\\r\\n\\r\\n\\r\\n\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"modal-footer\\\" style=\\\"width : 97%; margin : 0px auto;\\\">\\r\\n                    <button class=\\\"btn btn-info confirm-btn\\\" type=\\\"button\\\" (click)=onload()>RUN</button>\\r\\n                    <button type=\\\"button\\\" (click)=\\\"closeReportBox()\\\" title=\\\"Cancel\\\" class=\\\"btn btn-info\\\">Close</button>\\r\\n                </div>\\r\\n            </div>\\r\\n            <!-- Filter Ends -->\\r\\n            <!-- Modal Ends -->\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<generic-popup-grid #genericGridProduct [popupsettings]=\\\"gridPopupSettingsForProduct\\\"\\r\\n    (onItemDoubleClick)=\\\"dblClickProductSelect($event)\\\">\\r\\n</generic-popup-grid>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/ReportDialogs/StockValuationReport/stock-valuation-report.component.html\n// module id = 1758\n// module chunks = 0","module.exports = \"<style>\\r\\n    .input-text{\\r\\n        width : 100%;\\r\\n        /* height: 30px !important; */\\r\\n        font-weight: bold;\\r\\n    }\\r\\n    .td-class{\\r\\n        border: none !important;\\r\\n    }\\r\\n    .date-input{\\r\\n        width: 93%;\\r\\n        font-size: 12px !important;\\r\\n        height: 30px !important;\\r\\n    }\\r\\n      @media screen and (max-width:991px) {\\r\\n         .report-container{\\r\\n           width: 100% !important;\\r\\n    }\\r\\n    .report-height{\\r\\n        height:52vh; \\r\\n        overflow:auto;\\r\\n    }\\r\\n    }\\r\\n    @media screen and (max-width:767px) {\\r\\n        .smallBoldLabel{\\r\\n            width: auto !important;\\r\\n        }\\r\\n         \\r\\n        \\r\\n    }\\r\\n</style>\\r\\n<div  class=\\\"container report-container\\\" style=\\\"background-color : #ffffff; padding :1%; height : auto;  \\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"modal-header\\\" style=\\\"width : 100%; margin : 0px auto;\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" (click)=\\\"closeReportBox()\\\">&times;</button>\\r\\n            <h4 class=\\\"modal-title\\\">Sub Ledger - Summary Report</h4>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-12\\\" style=\\\"padding-top: 2%; height:52vh; overflow:auto;\\\">\\r\\n            <!-- Left Column -->\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n\\r\\n                <fieldset>\\r\\n                    <legend style=\\\"font-size:11px;font-weight: bold; width:auto;margin-bottom: -4px;\\\">Date Range Selection :</legend>\\r\\n                    <table>\\r\\n                        <tr>\\r\\n                            <td class=\\\"td-class\\\"><label class=\\\"smallBoldLabel\\\">From:(AD)</label></td>\\r\\n                            <td class=\\\"td-class\\\"><label class=\\\"smallBoldLabel\\\">To:(AD)</label></td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td class=\\\"td-class\\\">\\r\\n                                    <input type=\\\"date\\\" class=\\\"date-input form-control\\\"\\r\\n                                        placeholder=\\\"Year Start Date\\\"\\r\\n                                        [(ngModel)]=\\\"_reportFilterService.SubLedgerAcbaseObj.SubLedgerAcbase_DATE1\\\"\\r\\n                                        (change)=\\\"changeEntryDate($event.target.value,'AD')\\\" max=\\\"{{masterService.date1 | date:'yyyy-MM-dd'}}\\\" min=\\\"{{masterService.date2 | date:'yyyy-MM-dd'}}\\\">\\r\\n                            </td>\\r\\n                            <td class=\\\"td-class\\\">\\r\\n                                    <input type=\\\"date\\\" class=\\\"date-input form-control\\\"\\r\\n                                        placeholder=\\\"Year Start Date\\\"\\r\\n                                        [(ngModel)]=\\\"_reportFilterService.SubLedgerAcbaseObj.SubLedgerAcbase_DATE2\\\"\\r\\n                                        (change)=\\\"changeEndDate($event.target.value,'AD')\\\" max=\\\"{{masterService.date1 | date:'yyyy-MM-dd'}}\\\" min=\\\"{{masterService.date2 | date:'yyyy-MM-dd'}}\\\">\\r\\n                            </td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td class=\\\"td-class\\\">\\r\\n                              <nepali-date-picker name=\\\"nepaliDateFrom\\\" [id]=\\\"'nepaliDatefrom'\\\"\\r\\n                                            (change)=\\\"changeEntryDate($event.detail.value,'BS')\\\"\\r\\n                                            [label]=\\\"'From'\\\"\\r\\n                                            [(ngModel)]=\\\"_reportFilterService.SubLedgerAcbaseObj.SubLedgerAcbase_BSDATE1\\\">\\r\\n                                          </nepali-date-picker>\\r\\n                                     <!-- <input id=\\\"nepaliDate\\\"\\r\\n                                    style=\\\"text-align:center;\\\"\\r\\n                                    class=\\\"nepali-calendar ndp-nepali-calendar date-input form-control\\\"\\r\\n                                        [(ngModel)]=\\\"_reportFilterService.SubLedgerAcbaseObj.SubLedgerAcbase_BSDATE1\\\"\\r\\n                                        type=\\\"text\\\" (change)=\\\"changeEntryDate($event.target.value,'BS')\\\"\\r\\n                                        placeholder=\\\"yyyy-mm-dd\\\" /> -->\\r\\n\\r\\n                            </td>\\r\\n                            <td class=\\\"td-class\\\">\\r\\n                              <nepali-date-picker name=\\\"nepaliDateFrom\\\" [id]=\\\"'nepaliDateTo'\\\"\\r\\n                              (change)=\\\"changeEndDate($event.detail.value,'BS')\\\"\\r\\n                              [label]=\\\"'To'\\\"\\r\\n                              [(ngModel)]=\\\"_reportFilterService.SubLedgerAcbaseObj.SubLedgerAcbase_BSDATE2\\\">\\r\\n                            </nepali-date-picker>\\r\\n                                    <!-- <input id=\\\"nepaliDate\\\" style=\\\"text-align:center;\\\"\\r\\n                                    class=\\\"nepali-calendar ndp-nepali-calendar date-input form-control\\\"\\r\\n                                        [(ngModel)]=\\\"_reportFilterService.SubLedgerAcbaseObj.SubLedgerAcbase_BSDATE2\\\"\\r\\n                                        type=\\\"text\\\" (change)=\\\"changeEndDate($event.target.value,'BS')\\\"\\r\\n                                        placeholder=\\\"yyyy-mm-dd\\\" /> -->\\r\\n                            </td>\\r\\n                        </tr>\\r\\n                    </table>\\r\\n                </fieldset>\\r\\n\\r\\n                <fieldset>\\r\\n                    <legend>Division Selection:</legend>\\r\\n                    <select [(ngModel)]=\\\"_reportFilterService.SubLedgerAcbaseObj.SubLedgerAcbase_DIV\\\" style=\\\"height: 30px !important;\\\"\\r\\n                    class=\\\"form-control input-text\\\">\\r\\n                    <option value=\\\"%\\\" *ngIf=\\\"masterService.userSetting.userwisedivision==0 ||  masterService.showAll\\\">ALL</option>\\r\\n                        <option *ngFor=\\\"let div of division\\\" value=\\\"{{ div.INITIAL }}\\\">\\r\\n                            {{ div.NAME }}\\r\\n                        </option>\\r\\n                    </select>\\r\\n                </fieldset>\\r\\n\\r\\n                <fieldset>\\r\\n                    <legend>Cost Center:</legend>\\r\\n                    <select [(ngModel)]=\\\"_reportFilterService.SubLedgerAcbaseObj.SubLedgerAcbase_CostCenter\\\"\\r\\n                    style=\\\"height: 30px !important;\\\"\\r\\n                    class=\\\"form-control input-text\\\">\\r\\n                        <option value=\\\"%\\\"> </option>\\r\\n                        <option *ngFor=\\\"let i of CostcenterList\\\" value={{i.CCID}}>{{i.COSTCENTERNAME}}\\r\\n                        </option>\\r\\n                    </select>\\r\\n                </fieldset>\\r\\n\\r\\n            </div>\\r\\n            <!-- Right Column -->\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n                <fieldset>\\r\\n                    <legend>Main Ledger Selection :</legend>\\r\\n                    <input type=\\\"text\\\" style=\\\"font-weight: bold;\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"_reportFilterService.SubLedgerAcbaseObj.SubLedgerAcbase_ACCNAME\\\"\\r\\n                        placeholder=\\\"Press Enter or Tab for Account List\\\" (keydown.Tab)=\\\"AccountEnterClicked($event)\\\"\\r\\n                        (keydown.enter)=\\\"AccountEnterClicked($event)\\\">\\r\\n                </fieldset>\\r\\n\\r\\n                <!-- <fieldset>\\r\\n                    <legend>Sub Ledger Selection :</legend>\\r\\n                    <input type=\\\"text\\\" style=\\\"font-weight: bold;\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"_reportFilterService.SubLedgerAcbaseObj.SubLedgerAcbase_SL_ACNAME\\\"\\r\\n                        placeholder=\\\"Press Enter or Tab for Account List\\\" (keydown.Tab)=\\\"SubLedgerEnterClicked($event)\\\"\\r\\n                        (keydown.enter)=\\\"SubLedgerEnterClicked($event)\\\">\\r\\n                </fieldset> -->\\r\\n\\r\\n                <!-- <fieldset style=\\\"padding-bottom: 5px;\\\">\\r\\n                    <legend>Report Option</legend>\\r\\n                    <label class=\\\"smallBoldLabel\\\"><input type=\\\"radio\\\" name=\\\"BalViewOpt1\\\"\\r\\n                            [(ngModel)]=\\\"_reportFilterService.SubLedgerAcbaseObj.SubLedgerAcbase_REPORTTYPE\\\" value=0\\r\\n                            (change)=\\\"checkValue()\\\">&nbsp;Summary Ledger Report </label>\\r\\n                    <div *ngIf=\\\"userSetting.ENABLESUBLEDGER==2\\\" style=\\\"padding-left:20px;\\\">\\r\\n                        <label *ngIf=\\\"showSummaryTree\\\" class=\\\"smallBoldLabel\\\"><input type=\\\"checkbox\\\"\\r\\n                                [(ngModel)]=\\\"_reportFilterService.SubLedgerAcbaseObj.SubLedgerAcbase_SHOWSUMMARYINTREE\\\">&nbsp;\\r\\n                            Show Summary Report In Tree Format</label>\\r\\n                    </div>\\r\\n\\r\\n                    <label class=\\\"smallBoldLabel\\\" style=\\\"clear : both;\\\"><input type=\\\"radio\\\" name=\\\"BalViewOpt1\\\"\\r\\n                            [(ngModel)]=\\\"_reportFilterService.SubLedgerAcbaseObj.SubLedgerAcbase_REPORTTYPE\\\" value=1\\r\\n                            (change)=\\\"checkValue()\\\">&nbsp;Detail Ledger Report\\r\\n                    </label>\\r\\n                    <div style=\\\"padding-left:20px;\\\">\\r\\n                        <label *ngIf=\\\"showLedgerSegregation\\\" class=\\\"smallBoldLabel\\\"><input type=\\\"checkbox\\\"\\r\\n                                [(ngModel)]=\\\"_reportFilterService.SubLedgerAcbaseObj.SubLedgerAcbase_LEDGERSEGREGATION\\\">&nbsp;\\r\\n                            Show Sub Ledger Wise Segragated Ledger Report</label>\\r\\n                        </div>\\r\\n\\r\\n                </fieldset> -->\\r\\n                <!-- <div class=\\\"checkbox\\\" style=\\\"padding-top:5px;width:200px;\\\">\\r\\n                    <label class=\\\"smallBoldLabel\\\">\\r\\n                        <input type=\\\"checkbox\\\" [(ngModel)]=\\\"_reportFilterService.SubLedgerAcbaseObj.SubLedgerAcbase_SHOWNDATE\\\">\\r\\n                        Show BS Date In Report\\r\\n                    </label>\\r\\n                </div> -->\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"modal-footer\\\" style=\\\"width : 97%; margin : 0px auto;\\\">\\r\\n            <button class=\\\"btn btn-info confirm-btn\\\" type=\\\"button\\\" (click)=onload()>RUN</button>\\r\\n            <button type=\\\"button\\\" (click)=\\\"closeReportBox()\\\" title=\\\"Cancel\\\" class=\\\"btn btn-info\\\">Close</button>\\r\\n        </div>\\r\\n\\r\\n    </div>\\r\\n\\r\\n    <generic-popup-grid #genericGridSubLedger [popupsettings]=\\\"gridPopupSettingsForSubLedgerList\\\"\\r\\n    (onItemDoubleClick)=\\\"dblClickAccountSelect($event)\\\">\\r\\n</generic-popup-grid>\\r\\n\\r\\n<generic-popup-grid #genericGridSubLedgerOnly [popupsettings]=\\\"gridPopupSettingsForSubLedgerListOnly\\\"\\r\\n(onItemDoubleClick)=\\\"dblClickSubLedgerSelect($event)\\\">\\r\\n</generic-popup-grid>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/ReportDialogs/SubLedgerAcbaseReport/sub-ledger-acbase-report.component.html\n// module id = 1759\n// module chunks = 0","module.exports = \"<style>\\r\\n    .input-text{\\r\\n        width : 100%;\\r\\n        /* height: 30px !important; */\\r\\n        font-weight: bold;\\r\\n    }\\r\\n    .td-class{\\r\\n        border: none !important;\\r\\n    }\\r\\n    .date-input{\\r\\n        width: 93%;\\r\\n        font-size: 12px !important;\\r\\n        height: 30px !important;\\r\\n    }\\r\\n     @media screen and (max-width:991px) {\\r\\n         .report-container{\\r\\n           width: 90% !important;\\r\\n    }\\r\\n    }\\r\\n     @media screen and (max-width:767px) {\\r\\n        .smallBoldLabel{\\r\\n            width: auto !important;\\r\\n        }\\r\\n          /* .report-container{\\r\\n           width: 85% !important;\\r\\n    } */\\r\\n        \\r\\n    }\\r\\n   \\r\\n</style>\\r\\n<div  class=\\\"container report-container\\\" style=\\\"background-color : #ffffff; padding :1%; height : auto;  \\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"modal-header\\\" style=\\\"width : 100%; margin : 0px auto;\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" (click)=\\\"closeReportBox()\\\">&times;</button>\\r\\n            <h4 class=\\\"modal-title\\\">Sub Ledger - Ledger Report</h4>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-12\\\" style=\\\"padding-top: 2%;height:52vh; overflow:auto;\\\">\\r\\n            <!-- Left Column -->\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n\\r\\n                <fieldset>\\r\\n                    <legend style=\\\"font-size:11px;font-weight: bold; width:auto;margin-bottom: -4px;\\\">Date Range Selection :</legend>\\r\\n                    <table>\\r\\n                        <tr>\\r\\n                            <td class=\\\"td-class\\\"><label class=\\\"smallBoldLabel\\\">From:(AD)</label></td>\\r\\n                            <td class=\\\"td-class\\\"><label class=\\\"smallBoldLabel\\\">To:(AD)</label></td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td class=\\\"td-class\\\">\\r\\n                                    <input type=\\\"date\\\" class=\\\"date-input form-control\\\"\\r\\n                                        placeholder=\\\"Year Start Date\\\"\\r\\n                                        [(ngModel)]=\\\"_reportFilterService.SubLedgerObj.SubLedger_DATE1\\\"\\r\\n                                        (change)=\\\"changeEntryDate($event.target.value,'AD')\\\" max=\\\"{{masterService.date1 | date:'yyyy-MM-dd'}}\\\" min=\\\"{{masterService.date2 | date:'yyyy-MM-dd'}}\\\">\\r\\n                            </td>\\r\\n                            <td class=\\\"td-class\\\">\\r\\n                                    <input type=\\\"date\\\" class=\\\"date-input form-control\\\"\\r\\n                                        placeholder=\\\"Year Start Date\\\"\\r\\n                                        [(ngModel)]=\\\"_reportFilterService.SubLedgerObj.SubLedger_DATE2\\\"\\r\\n                                        (change)=\\\"changeEndDate($event.target.value,'AD')\\\" max=\\\"{{masterService.date1 | date:'yyyy-MM-dd'}}\\\" min=\\\"{{masterService.date2 | date:'yyyy-MM-dd'}}\\\">\\r\\n                            </td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td class=\\\"td-class\\\">\\r\\n                              <nepali-date-picker name=\\\"nepaliDateFrom\\\" [id]=\\\"'nepaliDatefrom'\\\"\\r\\n                              (change)=\\\"changeEntryDate($event.detail.value,'BS')\\\"\\r\\n                              [label]=\\\"'From'\\\"\\r\\n                              [(ngModel)]=\\\"_reportFilterService.SubLedgerObj.SubLedger_BSDATE1\\\">\\r\\n                            </nepali-date-picker>\\r\\n                                     <!-- <input id=\\\"nepaliDate\\\"\\r\\n                                    style=\\\"text-align:center;\\\"\\r\\n                                    class=\\\"nepali-calendar ndp-nepali-calendar date-input form-control\\\"\\r\\n                                        [(ngModel)]=\\\"_reportFilterService.SubLedgerObj.SubLedger_BSDATE1\\\"\\r\\n                                        type=\\\"text\\\" (change)=\\\"changeEntryDate($event.target.value,'BS')\\\"\\r\\n                                        placeholder=\\\"yyyy-mm-dd\\\" /> -->\\r\\n\\r\\n                            </td>\\r\\n                            <td class=\\\"td-class\\\">\\r\\n                              <nepali-date-picker name=\\\"nepaliDateFrom\\\" [id]=\\\"'nepaliDateTo'\\\"\\r\\n                              (change)=\\\"changeEndDate($event.detail.value,'BS')\\\"\\r\\n                              [label]=\\\"'To'\\\"\\r\\n                              [(ngModel)]=\\\"_reportFilterService.SubLedgerObj.SubLedger_BSDATE2\\\">\\r\\n                            </nepali-date-picker>\\r\\n                                    <!-- <input id=\\\"nepaliDate\\\" style=\\\"text-align:center;\\\"\\r\\n                                    class=\\\"nepali-calendar ndp-nepali-calendar date-input form-control\\\"\\r\\n                                        [(ngModel)]=\\\"_reportFilterService.SubLedgerObj.SubLedger_BSDATE2\\\"\\r\\n                                        type=\\\"text\\\" (change)=\\\"changeEndDate($event.target.value,'BS')\\\"\\r\\n                                        placeholder=\\\"yyyy-mm-dd\\\" /> -->\\r\\n                            </td>\\r\\n                        </tr>\\r\\n                    </table>\\r\\n                </fieldset>\\r\\n\\r\\n                <fieldset>\\r\\n                    <legend>Division Selection:</legend>\\r\\n                    <select [(ngModel)]=\\\"_reportFilterService.SubLedgerObj.SubLedger_DIV\\\" style=\\\"height: 30px !important;\\\"\\r\\n                    class=\\\"form-control input-text\\\">\\r\\n                    <option value=\\\"%\\\" *ngIf=\\\"masterService.userSetting.userwisedivision==0 ||  masterService.showAll\\\">ALL</option>\\r\\n                        <option *ngFor=\\\"let div of division\\\" value=\\\"{{ div.INITIAL }}\\\">\\r\\n                            {{ div.NAME }}\\r\\n                        </option>\\r\\n                    </select>\\r\\n                </fieldset>\\r\\n\\r\\n                <fieldset *ngIf=\\\"_reportFilterService.SubLedgerObj.SubLedger_HIDECOSTCENTER == 0\\\">\\r\\n                    <legend>Cost Center:</legend>\\r\\n                    <select [(ngModel)]=\\\"_reportFilterService.SubLedgerObj.SubLedger_CostCenter\\\"\\r\\n                    style=\\\"height: 30px !important;\\\"\\r\\n                    class=\\\"form-control input-text\\\">\\r\\n                        <option value=\\\"%\\\"> </option>\\r\\n                        <option *ngFor=\\\"let i of CostcenterList\\\" value={{i.CCID}}>{{i.COSTCENTERNAME}}\\r\\n                        </option>\\r\\n                    </select>\\r\\n                </fieldset>\\r\\n\\r\\n            </div>\\r\\n            <!-- Right Column -->\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n                <fieldset>\\r\\n                    <legend>Sub Ledger Selection :</legend>\\r\\n                    <input type=\\\"text\\\" style=\\\"font-weight: bold;\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"_reportFilterService.SubLedgerObj.SubLedger_SL_ACNAME\\\"\\r\\n                        placeholder=\\\"Press Enter or Tab for Account List\\\" (keydown.Tab)=\\\"SubLedgerEnterClicked($event)\\\"\\r\\n                        (keydown.enter)=\\\"SubLedgerEnterClicked($event)\\\">\\r\\n                </fieldset>\\r\\n\\r\\n                <fieldset>\\r\\n                    <legend>Main Ledger Selection :</legend>\\r\\n                    <input type=\\\"text\\\" style=\\\"font-weight: bold;\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"_reportFilterService.SubLedgerObj.SubLedger_ACCNAME\\\"\\r\\n                        placeholder=\\\"Press Enter or Tab for Account List\\\" (keydown.Tab)=\\\"AccountEnterClicked($event)\\\"\\r\\n                        (keydown.enter)=\\\"AccountEnterClicked($event)\\\">\\r\\n                </fieldset>\\r\\n\\r\\n\\r\\n\\r\\n                <!-- <fieldset style=\\\"padding-bottom: 5px;\\\">\\r\\n                    <legend>Report Option</legend>\\r\\n                    <label class=\\\"smallBoldLabel\\\"><input type=\\\"radio\\\" name=\\\"BalViewOpt1\\\"\\r\\n                            [(ngModel)]=\\\"_reportFilterService.SubLedgerObj.SubLedger_REPORTTYPE\\\" value=0\\r\\n                            (change)=\\\"checkValue()\\\">&nbsp;Summary Ledger Report </label>\\r\\n                    <div *ngIf=\\\"userSetting.ENABLESUBLEDGER==2\\\" style=\\\"padding-left:20px;\\\">\\r\\n                        <label *ngIf=\\\"showSummaryTree\\\" class=\\\"smallBoldLabel\\\"><input type=\\\"checkbox\\\"\\r\\n                                [(ngModel)]=\\\"_reportFilterService.SubLedgerObj.SubLedger_SHOWSUMMARYINTREE\\\">&nbsp;\\r\\n                            Show Summary Report In Tree Format</label>\\r\\n                    </div>\\r\\n\\r\\n                    <label class=\\\"smallBoldLabel\\\" style=\\\"clear : both;\\\"><input type=\\\"radio\\\" name=\\\"BalViewOpt1\\\"\\r\\n                            [(ngModel)]=\\\"_reportFilterService.SubLedgerObj.SubLedger_REPORTTYPE\\\" value=1\\r\\n                            (change)=\\\"checkValue()\\\">&nbsp;Detail Ledger Report\\r\\n                    </label>\\r\\n                    <div style=\\\"padding-left:20px;\\\">\\r\\n                        <label *ngIf=\\\"showLedgerSegregation\\\" class=\\\"smallBoldLabel\\\"><input type=\\\"checkbox\\\"\\r\\n                                [(ngModel)]=\\\"_reportFilterService.SubLedgerObj.SubLedger_LEDGERSEGREGATION\\\">&nbsp;\\r\\n                            Show Sub Ledger Wise Segragated Ledger Report</label>\\r\\n                        </div>\\r\\n\\r\\n                </fieldset> -->\\r\\n                <div style=\\\"display:flex;\\\">\\r\\n                        <div class=\\\"checkbox\\\" style=\\\"padding-top:5px;width:200px;\\\">\\r\\n                            <label class=\\\"smallBoldLabel\\\">\\r\\n                                <input type=\\\"checkbox\\\" [(ngModel)]=\\\"_reportFilterService.SubLedgerObj.SubLedger_SHOWNDATE\\\">\\r\\n                                Show BS Date In Report\\r\\n                            </label>\\r\\n                        </div>\\r\\n                        <div>\\r\\n                            <div class=\\\"checkbox\\\" style=\\\"padding-top:5px;width:200px;\\\">\\r\\n                                <label class=\\\"smallBoldLabel\\\" style=\\\"width:225px; margin-left:4px;\\\">\\r\\n                                    <input type=\\\"checkbox\\\" [(ngModel)]=\\\"_reportFilterService.SubLedgerObj.SubLedger_HIDECOSTCENTER\\\"\\r\\n                                    (change)=\\\"$event.target.checked?(_reportFilterService.SubLedgerObj.SubLedger_HIDECOSTCENTER=1):(_reportFilterService.SubLedgerObj.SubLedger_HIDECOSTCENTER=0)\\\"\\r\\n                            [checked]=\\\"_reportFilterService.SubLedgerObj.SubLedger_HIDECOSTCENTER == 1\\\" >\\r\\n                                Hide Cost Center\\r\\n                                </label>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                </div>\\r\\n                <div style=\\\"display:flex;\\\">\\r\\n                        <div class=\\\"checkbox\\\" style=\\\"padding-top:5px;width:200px;\\\">\\r\\n                            <label class=\\\"smallBoldLabel\\\" style=\\\"width: 210px;\\\">\\r\\n                                <input type=\\\"checkbox\\\" [(ngModel)]=\\\"_reportFilterService.SubLedgerObj.SubLedger_HIDENARATION\\\" \\r\\n                                (change)=\\\"$event.target.checked?(_reportFilterService.SubLedgerObj.SubLedger_HIDENARATION=1):(_reportFilterService.SubLedgerObj.SubLedger_HIDENARATION=0)\\\"\\r\\n                                [checked]=\\\"_reportFilterService.SubLedgerObj.SubLedger_HIDENARATION == 1\\\">\\r\\n                                Hide Narration In Ledger Report\\r\\n                            </label>\\r\\n                        </div>\\r\\n\\r\\n                        \\r\\n                </div>\\r\\n                <div style=\\\"display:flex;\\\">\\r\\n                <div class=\\\"checkbox\\\" style=\\\"padding-top:5px;width:200px;\\\" >\\r\\n                    <label class=\\\"smallBoldLabel\\\" style=\\\"width: 203px;\\\">\\r\\n                        <input type=\\\"checkbox\\\" [(ngModel)]=\\\"_reportFilterService.SubLedgerObj.IGNOREOPPOSITAC\\\"\\r\\n                        (change)=\\\"$event.target.checked?(_reportFilterService.SubLedgerObj.IGNOREOPPOSITAC=1):(_reportFilterService.SubLedgerObj.IGNOREOPPOSITAC=0)\\\"\\r\\n                        [checked]=\\\"_reportFilterService.SubLedgerObj.IGNOREOPPOSITAC == 1\\\">\\r\\n                        Hide Opposite A/C in Ledger Report\\r\\n                    </label>\\r\\n                </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"modal-footer\\\" style=\\\"width : 97%; margin : 0px auto;\\\">\\r\\n            <button class=\\\"btn btn-info confirm-btn\\\" type=\\\"button\\\" (click)=onload()>RUN</button>\\r\\n            <button type=\\\"button\\\" (click)=\\\"closeReportBox()\\\" title=\\\"Cancel\\\" class=\\\"btn btn-info\\\">Close</button>\\r\\n        </div>\\r\\n\\r\\n    </div>\\r\\n\\r\\n    <generic-popup-grid #genericGridSubLedger [popupsettings]=\\\"gridPopupSettingsForSubLedgerList\\\"\\r\\n    (onItemDoubleClick)=\\\"dblClickAccountSelect($event)\\\">\\r\\n</generic-popup-grid>\\r\\n\\r\\n<generic-popup-grid #genericGridSubLedgerOnly [popupsettings]=\\\"gridPopupSettingsForSubLedgerListOnly\\\"\\r\\n(onItemDoubleClick)=\\\"dblClickSubLedgerSelect($event)\\\">\\r\\n</generic-popup-grid>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/ReportDialogs/SubLedgerReport/sub-ledger-report.component.html\n// module id = 1760\n// module chunks = 0","module.exports = \"<style>\\r\\n    #treediv {\\r\\n        overflow-y: scroll;\\r\\n        height: 190px;\\r\\n    }\\r\\n\\r\\n    .action-btn {\\r\\n        width: 80%;\\r\\n        height: 80%;\\r\\n        display: block;\\r\\n        margin: 0 auto;\\r\\n        background-color: inherit;\\r\\n        border: none;\\r\\n    }\\r\\n    .input-text{\\r\\n        width : 100%;\\r\\n        /* height: 30px !important; */\\r\\n        font-weight: bold;\\r\\n    }\\r\\n    .td-class{\\r\\n        border: none !important;\\r\\n    }\\r\\n    .date-input{\\r\\n        width: 93%;\\r\\n        font-size: 12px !important;\\r\\n        height: 30px !important;\\r\\n    }\\r\\n      @media screen and (max-width:991px) {\\r\\n         .report-container{\\r\\n           width: 100% !important;\\r\\n    }\\r\\n    }\\r\\n</style>\\r\\n\\r\\n<div class=\\\"container report-container\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <!-- Filter Starts -->\\r\\n        <div class=\\\"col-12 col-md-12\\\">\\r\\n            <div style=\\\"background-color : #ffffff;\\\">\\r\\n                <div class=\\\"row\\\">\\r\\n                    <div class=\\\"modal-header\\\" style=\\\"border:0px;\\\">\\r\\n                        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\"\\r\\n                            (click)=\\\"closeReportBox()\\\">&times;</button>\\r\\n                        <h4 class=\\\"modal-title\\\" style=\\\"padding-left: 3%;\\\">Account Group Ledger Report</h4>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-md-12\\\" style=\\\"padding-top: 2%;  height:52vh; overflow:auto;\\\">\\r\\n                        <div class=\\\"col-md-6\\\">\\r\\n                            <!-- <date-filters></date-filters> -->\\r\\n                            <fieldset>\\r\\n                                <legend style=\\\"font-size:11px;font-weight: bold; width:auto; margin-bottom: -4px;\\\">Date Range Selection :</legend>\\r\\n                                <table>\\r\\n                                    <tr>\\r\\n                                        <td class=\\\"td-class\\\"><label class=\\\"smallBoldLabel\\\">From:(AD)</label></td>\\r\\n                                        <td class=\\\"td-class\\\"><label class=\\\"smallBoldLabel\\\">To:(AD)</label></td>\\r\\n                                    </tr>\\r\\n                                    <tr>\\r\\n                                        <td class=\\\"td-class\\\">\\r\\n                                                <input type=\\\"date\\\"\\r\\n                                                class=\\\"date-input form-control\\\" placeholder=\\\"Year Start Date\\\"\\r\\n                                                    [(ngModel)]=\\\"_reportFilterService.SummaryLedgerObj.SummaryLedger_DATE1\\\"\\r\\n                                                    (change)=\\\"changeEntryDate($event.target.value,'AD')\\\"\\r\\n                                                    max=\\\"{{masterService.date1 | date:'yyyy-MM-dd'}}\\\" min=\\\"{{masterService.date2 | date:'yyyy-MM-dd'}}\\\"\\r\\n                                                    >\\r\\n                                        </td>\\r\\n                                        <td class=\\\"td-class\\\">\\r\\n                                                <input type=\\\"date\\\"\\r\\n                                                class=\\\"date-input form-control\\\" placeholder=\\\"Year Start Date\\\"\\r\\n                                                    [(ngModel)]=\\\"_reportFilterService.SummaryLedgerObj.SummaryLedger_DATE2\\\"\\r\\n                                                    (change)=\\\"changeEndDate($event.target.value,'AD')\\\"\\r\\n                                                    max=\\\"{{masterService.date1 | date:'yyyy-MM-dd'}}\\\" min=\\\"{{masterService.date2 | date:'yyyy-MM-dd'}}\\\"\\r\\n                                                    >\\r\\n                                        </td>\\r\\n                                    </tr>\\r\\n                                    <tr>\\r\\n                                        <td class=\\\"td-class\\\">\\r\\n                                          <nepali-date-picker name=\\\"nepaliDateFrom\\\" [id]=\\\"'nepaliDatefrom'\\\"\\r\\n                                            (change)=\\\"changeEntryDate($event.detail.value,'BS')\\\"\\r\\n                                            [label]=\\\"'From'\\\"\\r\\n                                            [(ngModel)]=\\\"_reportFilterService.SummaryLedgerObj.SummaryLedger_BSDATE1\\\">\\r\\n                                          </nepali-date-picker>\\r\\n                                                <!-- <input id=\\\"nepaliDate\\\"\\r\\n                                                    style=\\\"text-align:center;\\\"\\r\\n                                                    class=\\\"nepali-calendar ndp-nepali-calendar date-input form-control\\\"\\r\\n                                                    [(ngModel)]=\\\"_reportFilterService.SummaryLedgerObj.SummaryLedger_BSDATE1\\\" type=\\\"text\\\"\\r\\n                                                    (change)=\\\"changeEntryDate($event.target.value,'BS')\\\"\\r\\n                                                    placeholder=\\\"yyyy-mm-dd\\\" />                             -->\\r\\n                                        </td>\\r\\n                                        <td class=\\\"td-class\\\">\\r\\n                                          <nepali-date-picker name=\\\"nepaliDateFrom\\\" [id]=\\\"'nepaliDateTo'\\\"\\r\\n                                            (change)=\\\"changeEndDate($event.detail.value,'BS')\\\"\\r\\n                                            [label]=\\\"'To'\\\"\\r\\n                                            [(ngModel)]=\\\"_reportFilterService.SummaryLedgerObj.SummaryLedger_BSDATE2\\\">\\r\\n                                          </nepali-date-picker>\\r\\n                                                <!-- <input id=\\\"nepaliDate\\\" style=\\\"text-align:center;\\\"\\r\\n                                                    class=\\\"nepali-calendar ndp-nepali-calendar date-input form-control\\\"\\r\\n                                                    [(ngModel)]=\\\"_reportFilterService.SummaryLedgerObj.SummaryLedger_BSDATE2\\\" type=\\\"text\\\"\\r\\n                                                    (change)=\\\"changeEndDate($event.target.value,'BS')\\\"\\r\\n                                                    placeholder=\\\"yyyy-mm-dd\\\" /> -->\\r\\n                                        </td>\\r\\n                                    </tr>\\r\\n                                </table>\\r\\n                            </fieldset>\\r\\n\\r\\n                            <fieldset>\\r\\n                                <legend>Division Selection:</legend>\\r\\n                                <select [(ngModel)]=\\\"_reportFilterService.SummaryLedgerObj.SummaryLedger_DIV\\\" style=\\\"height: 30px !important;\\\"\\r\\n                                class=\\\"form-control input-text\\\" >\\r\\n                                    <option value=\\\"%\\\"  *ngIf=\\\"masterService.userSetting.userwisedivision==0 ||  masterService.showAll\\\">ALL</option>\\r\\n                                    <option *ngFor=\\\"let div of division\\\" value=\\\"{{ div.INITIAL }}\\\">\\r\\n                                        {{ div.NAME }}\\r\\n                                    </option>\\r\\n                                </select>\\r\\n                            </fieldset>\\r\\n                            <fieldset>\\r\\n                                <legend>Cost Center:</legend>\\r\\n                                <select [(ngModel)]=\\\"_reportFilterService.SummaryLedgerObj.SummaryLedger_CostCenter\\\"\\r\\n                                style=\\\"height: 30px !important;\\\"\\r\\n                                class=\\\"form-control input-text\\\" >\\r\\n                                    <option value=\\\"%\\\"> </option>\\r\\n                                    <option *ngFor=\\\"let i of CostcenterList\\\" value={{i.CCID}}>{{i.COSTCENTERNAME}}\\r\\n                                    </option>\\r\\n                                </select>\\r\\n                            </fieldset>\\r\\n                        </div>\\r\\n                        <!-- The One With Tree Part-->\\r\\n                        <div class=\\\"col-md-6 filter-part\\\">\\r\\n                            <div class=\\\"col-md-12\\\">\\r\\n                                <label class=\\\"smallBoldLabel\\\" style=\\\"padding-right:15px;\\\">Summary Report By:</label>\\r\\n                                <select [(ngModel)]=\\\"_reportFilterService.SummaryLedgerObj.SummaryLedger_ReportType\\\"\\r\\n                                    (change)=\\\"checkValue()\\\" style=\\\"height: 30px !important;\\\"\\r\\n                                    class=\\\"form-control input-text\\\" >\\r\\n                                    <option value=0>A/C Group Wise</option>\\r\\n                                    <option value=2>Cost Center Wise</option>\\r\\n                                </select>\\r\\n                            </div>\\r\\n                            <fieldset *ngIf=\\\"showTree\\\">\\r\\n                                <legend><label class=\\\"smallBoldLabel\\\">&nbsp;A/C Group Wise</label>\\r\\n                                </legend>\\r\\n                                <div id=treediv>\\r\\n                                    <div>\\r\\n                                        <div class=\\\"col-md-6\\\">\\r\\n                                            <label class=\\\"smallBoldLabel\\\">Account Ledger</label>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col-md-6\\\">\\r\\n                                            <input name=\\\"filter\\\" #filter (keyup)=\\\"filterNodes(filter.value, tree)\\\"\\r\\n                                                placeholder=\\\"&nbsp;Search Account\\\" class=\\\"filterclass form-control\\\" style=\\\"font-weight: bold;\\\"/>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col-md-12\\\"\\r\\n                                        style=\\\" overflow: auto; border: black;border-width: 2px;margin:10px;font-size:10px;\\\">\\r\\n                                        <Tree #tree [nodes]=\\\"nodes \\\" [focused]=\\\"true \\\"\\r\\n                                            [options]=\\\"customTemplateStringOptions\\\" (onEvent)=\\\"onEvent($event) \\\"\\r\\n                                            (onActivate)=\\\"onselect(tree,$event)\\\">\\r\\n                                            <ng-template #treeNodeTemplate let-node>\\r\\n                                                <span *ngIf=\\\"node.data.TYPE=='G' && node.children.length>0\\\"\\r\\n                                                    title=\\\"{{node.data.subTitle}} \\\" [contextMenu]=\\\"myContextMenu\\r\\n                                                                      \\\" [contextMenuSubject]=\\\"node.data \\\"\\r\\n                                                    style=\\\"margin-left:24px\\\"><img src=\\\"../../../assets/img/Folder.jpg\\\"\\r\\n                                                        alt=\\\"Group\\\" height=\\\"20\\\" width=\\\"20\\\" style=\\\"margin-top:-2px\\\">\\r\\n                                                    {{ node.data.ACNAME }}{{ childrenCount(node) }}</span>\\r\\n                                                <span *ngIf=\\\"node.data.TYPE=='G' && node.children.length==0\\\"\\r\\n                                                    title=\\\"{{node.data.subTitle}} \\\" [contextMenu]=\\\"myContextMenu\\r\\n                                                                      \\\" [contextMenuSubject]=\\\"node.data \\\"><img\\r\\n                                                        src=\\\"../../../assets/img/Folder.jpg\\\" alt=\\\"Group\\\" height=\\\"20\\\"\\r\\n                                                        width=\\\"20\\\" style=\\\"margin-top:-2px\\\">\\r\\n                                                    {{ node.data.ACNAME }}{{ childrenCount(node) }}</span>\\r\\n                                                <span *ngIf=\\\"node.data.TYPE=='A'\\\" title=\\\"{{node.data.subTitle}} \\\"\\r\\n                                                    [contextMenu]=\\\"myContextMenu\\r\\n                                                                      \\\" [contextMenuSubject]=\\\"node.data \\\"><img\\r\\n                                                        src=\\\"../../../assets/img/File.png\\\" alt=\\\"ListItem\\\" height=\\\"20\\\"\\r\\n                                                        width=\\\"15\\\" style=\\\"margin-top:-2px\\\">\\r\\n                                                    {{ node.data.ACNAME }}</span>\\r\\n                                            </ng-template>\\r\\n                                            <ng-template #loadingTemplate>Loading, please hold....</ng-template>\\r\\n                                        </Tree>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </fieldset>\\r\\n                            <!-- The One With Tree Part End-->\\r\\n\\r\\n                            <div *ngIf=\\\"showCCtable\\\">\\r\\n                                <!-- <costcenter-filters></costcenter-filters> -->\\r\\n                                <fieldset>\\r\\n                                    <legend><label class=\\\"smallBoldLabel\\\">&nbsp;Cost Center Wise</label></legend>\\r\\n                                    <div>\\r\\n                                        <div class=\\\"col-md-10\\\">\\r\\n                                            <select [(ngModel)]=\\\"_reportFilterService.SummaryLedgerObj.CCENTER\\\"\\r\\n                                            style=\\\"height: 30px !important;\\\"\\r\\n                                            class=\\\"form-control input-text\\\">\\r\\n                                                <option *ngFor=\\\"let i of CostcenterList\\\" [ngValue]=\\\"i\\\">\\r\\n                                                    {{i.COSTCENTERNAME}}\\r\\n                                                </option>\\r\\n                                            </select>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col-md-2\\\">\\r\\n                                            <button type=\\\"button\\\" class=\\\"btn btn-info\\\" *ngIf=\\\"showMultipleCC\\\"\\r\\n                                                (click)=\\\"addCostcenterToList()\\\">Add</button>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col-md-12\\\" *ngIf=\\\"showMultipleCC\\\">\\r\\n                                            <table style=\\\"height:150px;\\\">\\r\\n                                                <tr class=\\\"smallBoldLabel\\\">\\r\\n                                                    <th style=\\\"width:3px;font-weight: bold;\\\">S.No.</th>\\r\\n                                                    <th style=\\\"width:10px;font-weight: bold;\\\">Cost Center</th>\\r\\n                                                    <th style=\\\"width:4px;font-weight: bold;\\\">Action</th>\\r\\n                                                </tr>\\r\\n                                                <tr *ngFor=\\\"let data of _reportFilterService.SummaryLedgerObj.SummaryLedger_multipleCostcenter;let i = index\\\"\\r\\n                                                    class=\\\"smallBoldLabel\\\">\\r\\n                                                    <td style=\\\"width:3px;\\\">{{ i + 1 }}</td>\\r\\n                                                    <td style=\\\"width:10px;\\\">{{data.COSTCENTERNAME}}</td>\\r\\n                                                    <td style=\\\"width:4px;\\\">\\r\\n                                                        <button type=\\\"button\\\" class=\\\"action-btn\\\"\\r\\n                                                            (click)=\\\"deleteCostcenter(i)\\\">Delete</button>\\r\\n                                                    </td>\\r\\n                                                </tr>\\r\\n                                            </table>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div *ngIf=\\\"_reportFilterService.showAllcontactsInCC\\\" class=\\\"checkbox\\\" style=\\\"padding-top:5px;width:200px;\\\">\\r\\n                                        <label class=\\\"smallBoldLabel\\\">\\r\\n                                            <input type=\\\"checkbox\\\"\\r\\n                                                [(ngModel)]=\\\"_reportFilterService.SummaryLedgerObj.SummaryLedger_showAllContacts\\\"\\r\\n                                                (change)=\\\"checkCostCnterValue()\\\">\\r\\n                                            Show All Cost Center\\r\\n                                        </label>\\r\\n                                    </div>\\r\\n                                </fieldset>\\r\\n                            </div>\\r\\n\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"modal-footer\\\" style=\\\"width : 97%; margin : 0px auto;\\\">\\r\\n                        <button class=\\\"btn btn-info confirm-btn\\\" type=\\\"button\\\" (click)=onload()>RUN</button>\\r\\n                        <button type=\\\"button\\\" (click)=\\\"closeReportBox()\\\" title=\\\"Cancel\\\"\\r\\n                            class=\\\"btn btn-info\\\">Close</button>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <!-- Filter Ends -->\\r\\n    </div>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/ReportDialogs/SummaryLedgerReport/summaryledgerreport.component.html\n// module id = 1761\n// module chunks = 0","module.exports = \"<style>\\r\\n    #treediv {\\r\\n        overflow-y: scroll;\\r\\n        height: 190px;\\r\\n    }\\r\\n\\r\\n    .action-btn {\\r\\n        width: 80%;\\r\\n        height: 80%;\\r\\n        display: block;\\r\\n        margin: 0 auto;\\r\\n        background-color: inherit;\\r\\n        border: none;\\r\\n    }\\r\\n    .input-text{\\r\\n        width : 100%;\\r\\n        /* height: 30px !important; */\\r\\n        font-weight: bold;\\r\\n    }\\r\\n    .td-class{\\r\\n        border: none !important;\\r\\n    }\\r\\n    .date-input{\\r\\n        width: 93%;\\r\\n        font-size: 12px !important;\\r\\n        height: 30px !important;\\r\\n    }\\r\\n\\r\\n    @media screen and (max-width:991px) {\\r\\n         .report-container{\\r\\n           width: 100% !important;\\r\\n    }\\r\\n    }\\r\\n     @media screen and (max-width:767px) {\\r\\n        .smallBoldLabel{\\r\\n            width: auto !important;\\r\\n        }\\r\\n          /* .report-container{\\r\\n           width: 85% !important;\\r\\n    } */\\r\\n        \\r\\n    }\\r\\n   \\r\\n</style>\\r\\n\\r\\n<div class=\\\"container report-container\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <!-- Filter Starts -->\\r\\n        <div class=\\\"col-12 col-md-12\\\">\\r\\n            <div style=\\\"background-color : #ffffff;\\\">\\r\\n                <div class=\\\"row\\\">\\r\\n                    <div class=\\\"modal-header\\\" style=\\\"border:0px;\\\">\\r\\n                        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\"\\r\\n                            (click)=\\\"closeReportBox()\\\">&times;</button>\\r\\n                        <h4 class=\\\"modal-title\\\" style=\\\"padding-left: 3%;\\\">Party Group Ledger Report</h4>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-md-12\\\" style=\\\"padding-top: 2%; height:52vh; overflow:auto;\\\">\\r\\n                        <div class=\\\"col-md-6\\\">\\r\\n                            <!-- <date-filters></date-filters> -->\\r\\n                            <fieldset>\\r\\n                                <legend style=\\\"font-size:11px;font-weight: bold; width:auto; margin-bottom: -4px;\\\">Date Range Selection :</legend>\\r\\n                                <table>\\r\\n                                    <tr>\\r\\n                                        <td class=\\\"td-class\\\"><label class=\\\"smallBoldLabel\\\">From:(AD)</label></td>\\r\\n                                        <td class=\\\"td-class\\\"><label class=\\\"smallBoldLabel\\\">To:(AD)</label></td>\\r\\n                                    </tr>\\r\\n                                    <tr>\\r\\n                                        <td class=\\\"td-class\\\">\\r\\n                                            <!-- <label class=\\\"smallBoldLabel\\\"> -->\\r\\n                                                <input type=\\\"date\\\"\\r\\n                                                class=\\\"date-input form-control\\\" placeholder=\\\"Year Start Date\\\"\\r\\n                                                    [(ngModel)]=\\\"_reportFilterService.SummaryPartyLedgerObj.SummaryPartyLedger_DATE1\\\"\\r\\n                                                    (change)=\\\"changeEntryDate($event.target.value,'AD')\\\" max=\\\"{{masterService.date1 | date:'yyyy-MM-dd'}}\\\" min=\\\"{{masterService.date2 | date:'yyyy-MM-dd'}}\\\">\\r\\n                                                <!-- </label> -->\\r\\n                                        </td>\\r\\n                                        <td class=\\\"td-class\\\">\\r\\n                                            <!-- <label class=\\\"smallBoldLabel\\\"> -->\\r\\n                                                <input type=\\\"date\\\"\\r\\n                                                class=\\\"date-input form-control\\\" placeholder=\\\"Year Start Date\\\"\\r\\n                                                    [(ngModel)]=\\\"_reportFilterService.SummaryPartyLedgerObj.SummaryPartyLedger_DATE2\\\"\\r\\n                                                    (change)=\\\"changeEndDate($event.target.value,'AD')\\\" max=\\\"{{masterService.date1 | date:'yyyy-MM-dd'}}\\\" min=\\\"{{masterService.date2 | date:'yyyy-MM-dd'}}\\\">\\r\\n                                                <!-- </label> -->\\r\\n                                        </td>\\r\\n                                    </tr>\\r\\n                                    <tr>\\r\\n                                        <td class=\\\"td-class\\\">\\r\\n                                            <!-- <label class=\\\"smallBoldLabel\\\"> -->\\r\\n                                            <nepali-date-picker name=\\\"nepaliDateFrom\\\" [id]=\\\"'nepaliDatefrom'\\\"\\r\\n                                            (change)=\\\"changeEntryDate($event.detail.value,'BS')\\\"\\r\\n                                            [label]=\\\"'From'\\\"\\r\\n                                            [(ngModel)]=\\\"_reportFilterService.SummaryPartyLedgerObj.SummaryPartyLedger_BSDATE1\\\">\\r\\n                                          </nepali-date-picker>\\r\\n                                                 <!-- <input id=\\\"nepaliDate\\\"\\r\\n                                                 style=\\\"text-align:center;\\\"\\r\\n                                                 class=\\\"nepali-calendar ndp-nepali-calendar date-input form-control\\\"\\r\\n                                                    [(ngModel)]=\\\"_reportFilterService.SummaryPartyLedgerObj.SummaryPartyLedger_BSDATE1\\\" type=\\\"text\\\"\\r\\n                                                    (change)=\\\"changeEntryDate($event.target.value,'BS')\\\"\\r\\n                                                    placeholder=\\\"yyyy-mm-dd\\\" /> -->\\r\\n                                            <!-- </label> -->\\r\\n\\r\\n                                        </td>\\r\\n                                        <td class=\\\"td-class\\\">\\r\\n                                            <!-- <label class=\\\"smallBoldLabel\\\"> -->\\r\\n                                              <nepali-date-picker name=\\\"nepaliDateFrom\\\" [id]=\\\"'nepaliDateTo'\\\"\\r\\n                                              (change)=\\\"changeEndDate($event.detail.value,'BS')\\\"\\r\\n                                              [label]=\\\"'To'\\\"\\r\\n                                              [(ngModel)]=\\\"_reportFilterService.SummaryPartyLedgerObj.SummaryPartyLedger_BSDATE2\\\">\\r\\n                                            </nepali-date-picker>\\r\\n                                                <!-- <input id=\\\"nepaliDate\\\" style=\\\"text-align:center;\\\"\\r\\n                                                class=\\\"nepali-calendar ndp-nepali-calendar date-input form-control\\\"\\r\\n                                                    [(ngModel)]=\\\"_reportFilterService.SummaryPartyLedgerObj.SummaryPartyLedger_BSDATE2\\\" type=\\\"text\\\"\\r\\n                                                    (change)=\\\"changeEndDate($event.target.value,'BS')\\\"\\r\\n                                                    placeholder=\\\"yyyy-mm-dd\\\" /> -->\\r\\n                                            <!-- </label> -->\\r\\n                                        </td>\\r\\n                                    </tr>\\r\\n                                </table>\\r\\n                            </fieldset>\\r\\n                            <!-- <division-list></division-list> -->\\r\\n                            <fieldset>\\r\\n                                <legend>Division Selection:</legend>\\r\\n                                <select [(ngModel)]=\\\"_reportFilterService.SummaryPartyLedgerObj.SummaryPartyLedger_DIV\\\" style=\\\"height: 30px !important;\\\"\\r\\n                                class=\\\"form-control input-text\\\" [disabled]=\\\"isUserwiseDivision == 1\\\">\\r\\n                                    <option value=\\\"%\\\" *ngIf=\\\"masterService.userSetting.userwisedivision==0 ||  masterService.showAll\\\">ALL</option>\\r\\n                                    <option *ngFor=\\\"let div of division\\\" value=\\\"{{ div.INITIAL }}\\\">\\r\\n                                        {{ div.NAME }}\\r\\n                                    </option>\\r\\n                                </select>\\r\\n                            </fieldset>\\r\\n                            <!-- <costcenter-list></costcenter-list> -->\\r\\n                            <fieldset>\\r\\n                                <legend>Cost Center:</legend>\\r\\n                                <select [(ngModel)]=\\\"_reportFilterService.SummaryPartyLedgerObj.SummaryPartyLedger_CostCenter\\\"\\r\\n                                style=\\\"height: 30px !important;\\\"\\r\\n                                class=\\\"form-control input-text\\\">\\r\\n                                    <option value=\\\"%\\\"> </option>\\r\\n                                    <option *ngFor=\\\"let i of CostcenterList\\\" value={{i.CCID}}>{{i.COSTCENTERNAME}}\\r\\n                                    </option>\\r\\n                                </select>\\r\\n                            </fieldset>\\r\\n                        </div>\\r\\n                        <!-- The One With Tree Part-->\\r\\n                        <div class=\\\"col-md-6 filter-part\\\">\\r\\n                            <div class=\\\"col-md-12\\\">\\r\\n                                <label class=\\\"smallBoldLabel\\\" style=\\\"padding-right:15px;\\\">Summary Report By:</label>\\r\\n                                <select [(ngModel)]=\\\"_reportFilterService.SummaryPartyLedgerObj.SummaryPartyLedger_ReportType\\\"\\r\\n                                    (change)=\\\"checkValue()\\\" style=\\\"height: 30px !important;\\\"\\r\\n                                    class=\\\"form-control input-text\\\">\\r\\n                                    <option value=0>Party Group Wise</option>\\r\\n                                    <option value=1>Area Wise</option>\\r\\n                                    <option value=2>Cost Center Wise</option>\\r\\n                                </select>\\r\\n                            </div>\\r\\n                            <fieldset *ngIf=\\\"showTree\\\">\\r\\n                                <legend><label class=\\\"smallBoldLabel\\\">&nbsp;Party Group Wise</label>\\r\\n                                </legend>\\r\\n                                <div id=treediv>\\r\\n                                    <div>\\r\\n                                        <div class=\\\"col-md-6\\\">\\r\\n                                            <label class=\\\"smallBoldLabel\\\">Party Ledger</label>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col-md-6\\\">\\r\\n                                            <input name=\\\"filter\\\" #filter (keyup)=\\\"filterNodes(filter.value, tree)\\\"\\r\\n                                                placeholder=\\\"&nbsp; Search Party\\\" class=\\\"filterclass form-control\\\" style=\\\"font-weight: bold;\\\">\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col-md-12\\\"\\r\\n                                        style=\\\" overflow: auto; border: black;border-width: 2px;margin:10px;font-size:10px;\\\">\\r\\n                                        <Tree #tree [nodes]=\\\"nodes\\\" [focused]=\\\"true\\\"\\r\\n                                            [options]=\\\"customTemplateStringOptions\\\" (onEvent)=\\\"onEvent($event)\\\"\\r\\n                                            (onActivate)=\\\"onselect(tree,$event)\\\">\\r\\n                                            <ng-template #treeNodeTemplate let-node>\\r\\n                                                <!-- <span title=\\\"{{node.data.subTitle}}\\\" [contextMenu]=\\\"myContextMenu\\\" [contextMenuSubject]=\\\"node.data\\\">{{ node.data.ACNAME }}{{ childrenCount(node) }}</span> -->\\r\\n                                                <span title=\\\"{{node.data.subTitle}} \\\" [contextMenu]=\\\"myContextMenu\\\"\\r\\n                                                    [contextMenuSubject]=\\\"node.data \\\" style=\\\"margin-left:24px\\\"><img\\r\\n                                                        src=\\\"../../../assets/img/Folder.jpg\\\" alt=\\\"Group\\\" height=\\\"20\\\"\\r\\n                                                        width=\\\"20\\\" style=\\\"margin-top:-2px\\\">\\r\\n                                                    {{ node.data.ACNAME }}{{ childrenCount(node) }}\\r\\n                                                </span>\\r\\n                                            </ng-template>\\r\\n                                            <ng-template #loadingTemplate>Loading, please hold....</ng-template>\\r\\n                                        </Tree>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </fieldset>\\r\\n                            <!-- The One With Tree Part End-->\\r\\n\\r\\n                            <div *ngIf=\\\"showAreaTable\\\">\\r\\n                                <fieldset>\\r\\n                                    <legend><label class=\\\"smallBoldLabel\\\">&nbsp;Area Wise</label></legend>\\r\\n                                    <div>\\r\\n                                        <div class=\\\"col-md-10\\\">\\r\\n                                            <select [(ngModel)]=\\\"_reportFilterService.SummaryPartyLedgerObj.SummaryPartyLedger_AreaWise\\\"\\r\\n                                            style=\\\"height: 30px !important;\\\"\\r\\n                                            class=\\\"form-control input-text\\\">\\r\\n                                                <!-- <option value=\\\"%\\\">ALL</option> -->\\r\\n                                                <option *ngFor=\\\"let i of AreaList\\\" [ngValue]=\\\"i\\\">\\r\\n                                                    {{i.AREA_NAME}}\\r\\n                                                </option>\\r\\n                                            </select>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col-md-2\\\">\\r\\n                                            <button type=\\\"button\\\" class=\\\"btn btn-info\\\"\\r\\n                                                (click)=\\\"addAreaToList()\\\">Add</button>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col-md-12\\\">\\r\\n                                            <table style=\\\"height:170px;\\\">\\r\\n                                                <tr class=\\\"smallBoldLabel\\\">\\r\\n                                                    <th style=\\\"width:3px;font-weight: bold;\\\">S.No.</th>\\r\\n                                                    <th style=\\\"width:10px;font-weight: bold;\\\">Area</th>\\r\\n                                                    <th style=\\\"width:4px;font-weight: bold;\\\">Action</th>\\r\\n                                                </tr>\\r\\n                                                <tr *ngFor=\\\"let data of _reportFilterService.SummaryPartyLedgerObj.SummaryPartyLedger_multipleAreas;let i = index\\\"\\r\\n                                                    class=\\\"smallBoldLabel\\\">\\r\\n                                                    <td style=\\\"width:3px;\\\">{{ i + 1 }}</td>\\r\\n                                                    <td style=\\\"width:10px;\\\">{{data.AREA_NAME}}</td>\\r\\n                                                    <td style=\\\"width:4px;\\\"> <button type=\\\"button\\\"\\r\\n                                                            class=\\\"action-btn\\\"\\r\\n                                                            (click)=\\\"deleteArea(i)\\\">Delete</button>\\r\\n                                                    </td>\\r\\n                                                </tr>\\r\\n                                            </table>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </fieldset>\\r\\n                            </div>\\r\\n\\r\\n                            <div *ngIf=\\\"showCCtable\\\">\\r\\n                                <fieldset>\\r\\n                                    <legend><label class=\\\"smallBoldLabel\\\">&nbsp;Cost Center Wise</label></legend>\\r\\n                                    <div>\\r\\n                                        <div class=\\\"col-md-10\\\">\\r\\n                                            <select [(ngModel)]=\\\"_reportFilterService.SummaryPartyLedgerObj.CCENTER\\\"\\r\\n                                            style=\\\"height: 30px !important;\\\"\\r\\n                                            class=\\\"form-control input-text\\\">\\r\\n                                                <option *ngFor=\\\"let i of CostcenterList\\\" [ngValue]=\\\"i\\\">\\r\\n                                                    {{i.COSTCENTERNAME}}\\r\\n                                                </option>\\r\\n                                            </select>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col-md-2\\\">\\r\\n                                            <button type=\\\"button\\\" class=\\\"btn btn-info\\\" *ngIf=\\\"showMultipleCC\\\"\\r\\n                                                (click)=\\\"addCostcenterToList()\\\">Add</button>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col-md-12\\\" *ngIf=\\\"showMultipleCC\\\">\\r\\n                                            <table style=\\\"height:150px;\\\">\\r\\n                                                <tr class=\\\"smallBoldLabel\\\">\\r\\n                                                    <th style=\\\"width:3px;font-weight: bold;\\\">S.No.</th>\\r\\n                                                    <th style=\\\"width:10px;font-weight: bold;\\\">Cost Center</th>\\r\\n                                                    <th style=\\\"width:4px;font-weight: bold;\\\">Action</th>\\r\\n                                                </tr>\\r\\n                                                <tr *ngFor=\\\"let data of _reportFilterService.SummaryPartyLedgerObj.SummaryPartyLedger_multipleCostcenter;let i = index\\\"\\r\\n                                                    class=\\\"smallBoldLabel\\\">\\r\\n                                                    <td style=\\\"width:3px;\\\">{{ i + 1 }}</td>\\r\\n                                                    <td style=\\\"width:10px;\\\">{{data.COSTCENTERNAME}}</td>\\r\\n                                                    <td style=\\\"width:4px;\\\">\\r\\n                                                        <button type=\\\"button\\\" class=\\\"action-btn\\\"\\r\\n                                                            (click)=\\\"deleteCostcenter(i)\\\">Delete</button>\\r\\n                                                    </td>\\r\\n                                                </tr>\\r\\n                                            </table>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div *ngIf=\\\"_reportFilterService.showAllcontactsInCC\\\" class=\\\"checkbox\\\" style=\\\"padding-top:5px;width:200px;\\\">\\r\\n                                        <label class=\\\"smallBoldLabel\\\">\\r\\n                                            <input type=\\\"checkbox\\\"\\r\\n                                                [(ngModel)]=\\\"_reportFilterService.SummaryPartyLedgerObj.SummaryPartyLedger_showAllContacts\\\"\\r\\n                                                (change)=\\\"checkCostCenterValue()\\\">\\r\\n                                            Show All Cost Center\\r\\n                                        </label>\\r\\n                                    </div>\\r\\n                                </fieldset>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"modal-footer\\\" style=\\\"width : 97%; margin : 0px auto;\\\">\\r\\n                        <button class=\\\"btn btn-info confirm-btn\\\" type=\\\"button\\\" (click)=onload()>RUN</button>\\r\\n                        <button type=\\\"button\\\" (click)=\\\"closeReportBox()\\\" title=\\\"Cancel\\\"\\r\\n                            class=\\\"btn btn-info\\\">Close</button>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <!-- Filter Ends -->\\r\\n    </div>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/ReportDialogs/SummaryPartyLedger/summary-party-ledger.component.html\n// module id = 1762\n// module chunks = 0","module.exports = \"<style>\\r\\n    .input-text {\\r\\n        width: 100%;\\r\\n        /* height: 30px !important; */\\r\\n        font-weight: bold;\\r\\n    }\\r\\n\\r\\n    .td-class {\\r\\n        border: none !important;\\r\\n    }\\r\\n\\r\\n    .date-input {\\r\\n        width: 93%;\\r\\n        font-size: 12px !important;\\r\\n        height: 30px !important;\\r\\n    }\\r\\n      @media screen and (max-width:991px) {\\r\\n         .report-container{\\r\\n           width: 100% !important;\\r\\n    }\\r\\n    .report-height{\\r\\n        height:52vh; \\r\\n        overflow:auto;\\r\\n    }\\r\\n    }\\r\\n         @media screen and (max-width:767px) {\\r\\n            .smallBoldLabel{\\r\\n                  width: auto !important;\\r\\n            }\\r\\n            \\r\\n        \\r\\n    }\\r\\n</style>\\r\\n<div class=\\\"container report-container\\\" style=\\\"background-color : #ffffff; padding :1%; height : auto;  \\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"modal-header\\\" style=\\\"width : 97%; margin : 0px auto;\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" (click)=\\\"closeReportBox()\\\">&times;</button>\\r\\n            <h4 class=\\\"modal-title\\\">TDS Report</h4>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-12 report-height\\\" style=\\\"padding-top: 2%;\\\">\\r\\n            <!-- Left Column -->\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n                <fieldset>\\r\\n                    <legend style=\\\"font-size:11px;font-weight: bold; width:auto;margin-bottom: -4px;\\\">Date Range\\r\\n                        Selection :</legend>\\r\\n                    <table>\\r\\n                        <tr>\\r\\n                            <td class=\\\"td-class\\\"><label class=\\\"smallBoldLabel\\\">From:(AD)</label></td>\\r\\n                            <td class=\\\"td-class\\\"><label class=\\\"smallBoldLabel\\\">To:(AD)</label></td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td class=\\\"td-class\\\">\\r\\n                                <input type=\\\"date\\\" class=\\\"date-input form-control\\\" placeholder=\\\"Year Start Date\\\"\\r\\n                                    [(ngModel)]=\\\"_reportFilterService.TDSObj.TDS_DATE1\\\"\\r\\n                                    (change)=\\\"changeEntryDate($event.target.value,'AD')\\\"\\r\\n                                    max=\\\"{{masterService.date1 | date:'yyyy-MM-dd'}}\\\"\\r\\n                                    min=\\\"{{masterService.date2 | date:'yyyy-MM-dd'}}\\\">\\r\\n                            </td>\\r\\n                            <td class=\\\"td-class\\\">\\r\\n                                <input type=\\\"date\\\" class=\\\"date-input form-control\\\" placeholder=\\\"Year Start Date\\\"\\r\\n                                    [(ngModel)]=\\\"_reportFilterService.TDSObj.TDS_DATE2\\\"\\r\\n                                    (change)=\\\"changeEndDate($event.target.value,'AD')\\\"\\r\\n                                    max=\\\"{{masterService.date1 | date:'yyyy-MM-dd'}}\\\"\\r\\n                                    min=\\\"{{masterService.date2 | date:'yyyy-MM-dd'}}\\\">\\r\\n                            </td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td class=\\\"td-class\\\">\\r\\n                                <nepali-date-picker name=\\\"nepaliDateFrom\\\" [id]=\\\"'nepaliDatefrom'\\\"\\r\\n                                    (change)=\\\"changeEntryDate($event.detail.value,'BS')\\\" [label]=\\\"'From'\\\"\\r\\n                                    [(ngModel)]=\\\"_reportFilterService.TDSObj.TDS_BSDATE1\\\">\\r\\n                                </nepali-date-picker>\\r\\n                            </td>\\r\\n                            <td class=\\\"td-class\\\">\\r\\n                                <nepali-date-picker name=\\\"nepaliDateFrom\\\" [id]=\\\"'nepaliDateTo'\\\"\\r\\n                                    (change)=\\\"changeEndDate($event.detail.value,'BS')\\\" [label]=\\\"'To'\\\"\\r\\n                                    [(ngModel)]=\\\"_reportFilterService.TDSObj.TDS_BSDATE2\\\">\\r\\n                                </nepali-date-picker>\\r\\n                            </td>\\r\\n                        </tr>\\r\\n                    </table>\\r\\n                </fieldset>\\r\\n\\r\\n                <fieldset>\\r\\n                    <legend>Division Selection:</legend>\\r\\n                    <select [(ngModel)]=\\\"_reportFilterService.TDSObj.TDS_DIV\\\" style=\\\"height: 30px !important;\\\"\\r\\n                        class=\\\"form-control input-text\\\">\\r\\n                        <option value=\\\"%\\\"\\r\\n                            *ngIf=\\\"masterService.userSetting.userwisedivision==0 ||  masterService.showAll\\\">ALL</option>\\r\\n                        <option *ngFor=\\\"let div of division\\\" value=\\\"{{ div.INITIAL }}\\\">\\r\\n                            {{ div.NAME }}\\r\\n                        </option>\\r\\n                    </select>\\r\\n                </fieldset>\\r\\n            </div>\\r\\n            <!-- Right Column -->\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n                <!-- <division-list></division-list> -->\\r\\n\\r\\n                <fieldset style=\\\"padding-bottom: 1px;\\\">\\r\\n                    <legend style=\\\"margin-bottom: -4px;\\\">Filter Option</legend>\\r\\n                    <table>\\r\\n                        <tr>\\r\\n                            <td style=\\\"border: none;\\\" class=\\\"smallBoldLabel\\\">TDS A/C: </td>\\r\\n                            <td style=\\\"border: none;width: 70%;\\\">\\r\\n                                <input type=\\\"text\\\" name=\\\"tdsname\\\" class=\\\"form-control\\\"\\r\\n                                    [(ngModel)]=\\\"_reportFilterService.TDSObj.TDS_TDSNAME\\\"\\r\\n                                    (Keydown.Enter)=\\\"TDSEnterCommand()\\\" (Keydown.Tab)=\\\"TDSEnterCommand()\\\" autocomplete=\\\"off\\\"\\r\\n                                    placeholder=\\\"Press Tab or Enter for the List\\\">\\r\\n\\r\\n                            </td>\\r\\n                        </tr>\\r\\n\\r\\n                        <tr style=\\\"margin-top: 5px; margin-bottom: 6px;\\\">\\r\\n                            <td style=\\\"border: none;\\\" class=\\\"smallBoldLabel\\\">Account Selection: </td>\\r\\n                            <td style=\\\"border: none;width: 70%;\\\">\\r\\n                                <input type=\\\"text\\\" name=\\\"tdsname\\\" class=\\\"form-control\\\"\\r\\n                                    [(ngModel)]=\\\"_reportFilterService.TDSObj.TDS_PARTYNAME\\\"\\r\\n                                    (Keydown.Enter)=\\\"PartyEnterCommand()\\\" (Keydown.Tab)=\\\"PartyEnterCommand()\\\" autocomplete=\\\"off\\\"\\r\\n                                    placeholder=\\\"Press Tab or Enter for the List\\\">\\r\\n\\r\\n                            </td>\\r\\n                        </tr>\\r\\n                        <tr style=\\\"margin-top: 5px; margin-bottom: 6px;\\\">\\r\\n                            <td style=\\\"border: none;\\\" class=\\\"smallBoldLabel\\\">Sub Ledger A/C: </td>\\r\\n                            <td style=\\\"border: none;width: 70%;\\\">\\r\\n                                <input type=\\\"text\\\" name=\\\"tdsname\\\" class=\\\"form-control\\\"\\r\\n                                    [(ngModel)]=\\\"_reportFilterService.TDSObj.TDS_SL_ACNAME\\\"\\r\\n                                    (Keydown.Enter)=\\\"SubLedgerEnterCommand()\\\" (Keydown.Tab)=\\\"PartyEnterCSubLedgerEnterCommandommand()\\\" autocomplete=\\\"off\\\"\\r\\n                                    placeholder=\\\"Press Tab or Enter for the List\\\">\\r\\n\\r\\n                            </td>\\r\\n                        </tr>\\r\\n                    </table>\\r\\n\\r\\n                </fieldset>\\r\\n\\r\\n                <fieldset style=\\\"padding-bottom: 5px;\\\">\\r\\n                    <legend>Report Type</legend>\\r\\n                    <label class=\\\"smallBoldLabel\\\"><input type=\\\"radio\\\" name=\\\"BalViewOpt1\\\"\\r\\n                            [(ngModel)]=\\\"_reportFilterService.TDSObj.TDS_REPORTTYPE \\\" value=0>&nbsp;Summary\\r\\n                        Report </label>\\r\\n                    <label class=\\\"smallBoldLabel\\\" style=\\\"clear : both;\\\"><input type=\\\"radio\\\" name=\\\"BalViewOpt1\\\"\\r\\n                            style=\\\"margin-left: 35px;\\\" [(ngModel)]=\\\"_reportFilterService.TDSObj.TDS_REPORTTYPE\\\"\\r\\n                            value=1 (change)=\\\"changeCheckboxValue($event)\\\">&nbsp;Detail\\r\\n                        Report\\r\\n                    </label>\\r\\n\\r\\n                </fieldset>\\r\\n\\r\\n                <!-- <label class=\\\"smallBoldLabel\\\"><input type=\\\"checkbox\\\" (change)=\\\"checkValue()\\\"\\r\\n                        [(ngModel)]=\\\"_reportFilterService.TDSObj.TDS_ISIRDFORMAT\\\"\\r\\n                        [disabled]=\\\"_reportFilterService.TDSObj.TDS_REPORTTYPE==1\\\"\\r\\n                        >&nbsp;Show TDS Report in IRD upload format</label> -->\\r\\n\\r\\n                        <label class=\\\"smallBoldLabel\\\"><input type=\\\"checkbox\\\" (change)=\\\"checkValue()\\\"\\r\\n                            [(ngModel)]=\\\"_reportFilterService.TDSObj.TDS_ISIRDFORMAT\\\"\\r\\n                            >&nbsp;Show TDS Report in IRD upload format</label> \\r\\n\\r\\n\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"modal-footer\\\" style=\\\"width : 97%; margin : 0px auto;\\\">\\r\\n            <button class=\\\"btn btn-info confirm-btn\\\" type=\\\"button\\\" (click)=onload()>RUN</button>\\r\\n            <button type=\\\"button\\\" (click)=\\\"closeReportBox()\\\" title=\\\"Cancel\\\" class=\\\"btn btn-info\\\">Close</button>\\r\\n        </div>\\r\\n\\r\\n    </div>\\r\\n\\r\\n    <generic-popup-grid #genericGridACList [popupsettings]=\\\"gridACListPopupSettings\\\"\\r\\n        (onItemDoubleClick)=\\\"onAcSelect($event)\\\"></generic-popup-grid>\\r\\n\\r\\n    <generic-popup-grid #genericGridPartyList [popupsettings]=\\\"gridPartyListPopupSettings\\\"\\r\\n        (onItemDoubleClick)=\\\"onPartySelect($event)\\\"></generic-popup-grid>\\r\\n\\r\\n        <generic-popup-grid #gridSubLedgerSettingList [popupsettings]=\\\"gridSubLedgerSetting\\\"\\r\\n  (onItemDoubleClick)=\\\"onSubLedgerSelect($event)\\\"></generic-popup-grid>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/ReportDialogs/TDS Report/tds-report.comnponent.html\n// module id = 1763\n// module chunks = 0","module.exports = \"<style>\\r\\n   .input-text {\\r\\n      width: 100%;\\r\\n      /* height: 30px !important; */\\r\\n      font-weight: bold;\\r\\n   }\\r\\n\\r\\n   .td-class {\\r\\n      border: none !important;\\r\\n   }\\r\\n\\r\\n   .date-input {\\r\\n      width: 93%;\\r\\n      font-size: 12px !important;\\r\\n      height: 30px !important;\\r\\n   }\\r\\n     @media screen and (max-width:991px) {\\r\\n         .report-container{\\r\\n           width: 100% !important;\\r\\n    }\\r\\n    .report-height{\\r\\n        height:52vh; \\r\\n        overflow:auto;\\r\\n    }\\r\\n    }\\r\\n         @media screen and (max-width:767px) {\\r\\n            .smallBoldLabel{\\r\\n                  width: auto !important;\\r\\n            }\\r\\n            \\r\\n        \\r\\n    }\\r\\n</style>\\r\\n<div class=\\\"container report-container\\\" style=\\\"background-color : #ffffff; padding :1%; height : auto;  \\\">\\r\\n   <div class=\\\"row\\\">\\r\\n      <div class=\\\"modal-header\\\" style=\\\"width : 97%; margin : 0px auto;\\\">\\r\\n         <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" (click)=\\\"closeReportBox()\\\">&times;</button>\\r\\n         <h4 class=\\\"modal-title\\\">Trial Balance Report</h4>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-12 report-height\\\" style=\\\"padding-top: 2%;\\\">\\r\\n         <!-- Left Column -->\\r\\n         <div class=\\\"col-md-6\\\">\\r\\n            <fieldset>\\r\\n               <legend style=\\\"font-size:11px;font-weight: bold; width:auto;margin-bottom: -4px;\\\">Date Range Selection :\\r\\n               </legend>\\r\\n               <table>\\r\\n                  <tr>\\r\\n                     <td class=\\\"td-class\\\"><label class=\\\"smallBoldLabel\\\">From:(AD)</label></td>\\r\\n                     <td class=\\\"td-class\\\"><label class=\\\"smallBoldLabel\\\">To:(AD)</label></td>\\r\\n                  </tr>\\r\\n                  <tr>\\r\\n                     <td class=\\\"td-class\\\">\\r\\n                        <input type=\\\"date\\\" class=\\\"date-input form-control\\\" placeholder=\\\"Year Start Date\\\"\\r\\n                           [(ngModel)]=\\\"_reportFilterService.TrialBalanceObj.TrialBalance_DATE1\\\"\\r\\n                           (change)=\\\"changeEntryDate($event.target.value,'AD')\\\"\\r\\n                           max=\\\"{{masterService.date1 | date:'yyyy-MM-dd'}}\\\"\\r\\n                           min=\\\"{{masterService.date2 | date:'yyyy-MM-dd'}}\\\">\\r\\n                     </td>\\r\\n                     <td class=\\\"td-class\\\">\\r\\n                        <input type=\\\"date\\\" class=\\\"date-input form-control\\\" placeholder=\\\"Year Start Date\\\"\\r\\n                           [(ngModel)]=\\\"_reportFilterService.TrialBalanceObj.TrialBalance_DATE2\\\"\\r\\n                           (change)=\\\"changeEndDate($event.target.value,'AD')\\\"\\r\\n                           max=\\\"{{masterService.date1 | date:'yyyy-MM-dd'}}\\\"\\r\\n                           min=\\\"{{masterService.date2 | date:'yyyy-MM-dd'}}\\\">\\r\\n                     </td>\\r\\n                  </tr>\\r\\n                  <tr>\\r\\n                     <td class=\\\"td-class\\\">\\r\\n                      <nepali-date-picker name=\\\"nepaliDateFrom\\\" [id]=\\\"'nepaliDatefrom'\\\"\\r\\n                      (change)=\\\"changeEntryDate($event.detail.value,'BS')\\\"\\r\\n                      [label]=\\\"'From'\\\"\\r\\n                      [(ngModel)]=\\\"_reportFilterService.TrialBalanceObj.TrialBalance_BSDATE1\\\">\\r\\n                    </nepali-date-picker>\\r\\n                        <!-- <input id=\\\"nepaliDate\\\" style=\\\"text-align:center;\\\"\\r\\n                           class=\\\"nepali-calendar ndp-nepali-calendar date-input form-control\\\"\\r\\n                           [(ngModel)]=\\\"_reportFilterService.TrialBalanceObj.TrialBalance_BSDATE1\\\" type=\\\"text\\\"\\r\\n                           (change)=\\\"changeEntryDate($event.target.value,'BS')\\\" placeholder=\\\"yyyy-mm-dd\\\" /> -->\\r\\n\\r\\n                     </td>\\r\\n                     <td class=\\\"td-class\\\">\\r\\n                      <nepali-date-picker name=\\\"nepaliDateFrom\\\" [id]=\\\"'nepaliDateTo'\\\"\\r\\n                      (change)=\\\"changeEndDate($event.detail.value,'BS')\\\"\\r\\n                      [label]=\\\"'To'\\\"\\r\\n                      [(ngModel)]=\\\"_reportFilterService.TrialBalanceObj.TrialBalance_BSDATE2\\\">\\r\\n                    </nepali-date-picker>\\r\\n                        <!-- <input id=\\\"nepaliDate\\\" style=\\\"text-align:center;\\\"\\r\\n                           class=\\\"nepali-calendar ndp-nepali-calendar date-input form-control\\\"\\r\\n                           [(ngModel)]=\\\"_reportFilterService.TrialBalanceObj.TrialBalance_BSDATE2\\\" type=\\\"text\\\"\\r\\n                           (change)=\\\"changeEndDate($event.target.value,'BS')\\\" placeholder=\\\"yyyy-mm-dd\\\" /> -->\\r\\n                     </td>\\r\\n                  </tr>\\r\\n               </table>\\r\\n            </fieldset>\\r\\n\\r\\n<!--             \\r\\n            <fieldset *ngIf=\\\"userSetting.IS_NESTLE==1\\\">\\r\\n               <legend>Company Selection:</legend>\\r\\n               <select [(ngModel)]=\\\"_reportFilterService.TrialBalanceObj.TrialBalance_COMPANYTYPE\\\"\\r\\n                  style=\\\"height: 30px !important;\\\" class=\\\"form-control input-text\\\">\\r\\n                  <option value=\\\"DMS\\\">DMS</option>\\r\\n                  <option value=\\\"NONDMS\\\">NON DMS</option>\\r\\n               </select>\\r\\n            </fieldset> -->\\r\\n\\r\\n            <fieldset>\\r\\n               <legend>Division Selection:</legend>\\r\\n               <select [(ngModel)]=\\\"_reportFilterService.TrialBalanceObj.TrialBalance_DIV\\\"\\r\\n                  style=\\\"height: 30px !important;\\\" class=\\\"form-control input-text\\\">\\r\\n                  <option value=\\\"%\\\" *ngIf=\\\"masterService.userSetting.userwisedivision==0 ||  masterService.showAll\\\">ALL</option>\\r\\n                  <option *ngFor=\\\"let div of division\\\" value=\\\"{{ div.INITIAL }}\\\">\\r\\n                     {{ div.NAME }}\\r\\n                  </option>\\r\\n               </select>\\r\\n            </fieldset>\\r\\n            <fieldset>\\r\\n               <legend>Cost Center:</legend>\\r\\n               <select [(ngModel)]=\\\"_reportFilterService.TrialBalanceObj.TrialBalance_CostCenter\\\"\\r\\n                  style=\\\"height: 30px !important;\\\" class=\\\"form-control input-text\\\">\\r\\n                  <option value=\\\"%\\\"> </option>\\r\\n                  <option *ngFor=\\\"let i of CostcenterList\\\" value={{i.CCID}}>{{i.COSTCENTERNAME}}\\r\\n                  </option>\\r\\n               </select>\\r\\n            </fieldset>\\r\\n         </div>\\r\\n         <!-- Right Column -->\\r\\n         <div class=\\\"col-md-6\\\">\\r\\n            <fieldset style=\\\"padding-bottom: 5px;\\\">\\r\\n               <legend>Report Mode :</legend>\\r\\n               <label class=\\\"smallBoldLabel\\\"><input type=\\\"radio\\\" name=\\\"reportmode\\\"\\r\\n                     [(ngModel)]=\\\"_reportFilterService.TrialBalanceObj.TrialBalance_SUMMARYREPORT\\\" value=0>&nbsp;Detail\\r\\n                  Report </label>&nbsp;&nbsp;&nbsp;\\r\\n               <label class=\\\"smallBoldLabel\\\" style=\\\"clear : both;\\\"><input type=\\\"radio\\\" name=\\\"reportmode\\\"\\r\\n                     [(ngModel)]=\\\"_reportFilterService.TrialBalanceObj.TrialBalance_SUMMARYREPORT\\\" value=1>&nbsp;Summary\\r\\n                  Report\\r\\n               </label>\\r\\n               <label *ngIf=\\\"_reportFilterService.TrialBalanceObj.TrialBalance_SUMMARYREPORT==1\\\" class=\\\"smallBoldLabel\\\"\\r\\n                  style=\\\"margin-left: 5%;\\\">Levels :</label>&nbsp;&nbsp;&nbsp;\\r\\n               <input *ngIf=\\\"_reportFilterService.TrialBalanceObj.TrialBalance_SUMMARYREPORT==1\\\" type=\\\"number\\\"\\r\\n                  [(ngModel)]=\\\"_reportFilterService.TrialBalanceObj.TrialBalance_LEVELS\\\"\\r\\n                  style=\\\"width: 16%;height: 23px;margin-left: 2%;\\\">\\r\\n            </fieldset>\\r\\n            <fieldset style=\\\"padding-bottom: 5px;\\\">\\r\\n               <legend>Report Format :</legend>\\r\\n               <label class=\\\"smallBoldLabel\\\"><input type=\\\"radio\\\" name=\\\"reportformat\\\"\\r\\n                     [(ngModel)]=\\\"_reportFilterService.TrialBalanceObj.TrialBalance_LEDGERWISE\\\" value=0>&nbsp;A/C Group\\r\\n                  Wise Format</label>&nbsp;&nbsp;&nbsp;\\r\\n               <label class=\\\"smallBoldLabel\\\" style=\\\"clear : both;\\\"><input type=\\\"radio\\\" name=\\\"reportformat\\\"\\r\\n                     [(ngModel)]=\\\"_reportFilterService.TrialBalanceObj.TrialBalance_LEDGERWISE\\\" value=1>&nbsp;A/C Ledger\\r\\n                  Wise Format\\r\\n               </label>\\r\\n            </fieldset>\\r\\n\\r\\n            <fieldset>\\r\\n               <legend>Report Options :</legend>\\r\\n               <label class=\\\"smallBoldLabel\\\"><input type=\\\"checkbox\\\" (change)=\\\"checkValue()\\\"\\r\\n                     [(ngModel)]=\\\"_reportFilterService.TrialBalanceObj.TrialBalance_SHOWOPENINGTRIALONLY\\\">&nbsp;Show\\r\\n                  Opening Trial Balance Report Only</label><br>\\r\\n               <label class=\\\"smallBoldLabel\\\"><input type=\\\"checkbox\\\"\\r\\n                     [(ngModel)]=\\\"_reportFilterService.TrialBalanceObj.TrialBalance_SHOWSUBLEDGER\\\">&nbsp;Show Sub\\r\\n                  Ledger In Trial Balance</label><br>\\r\\n               <label class=\\\"smallBoldLabel\\\"><input type=\\\"checkbox\\\"\\r\\n                     [(ngModel)]=\\\"_reportFilterService.TrialBalanceObj.TrialBalance_SHOWDEBTORSCREDITORSDETAILS\\\">&nbsp;Show\\r\\n                  Debtors/Creditors Party List</label><br>\\r\\n                  <label class=\\\"smallBoldLabel\\\"><input type=\\\"checkbox\\\"\\r\\n                     [(ngModel)]=\\\"_reportFilterService.TrialBalanceObj.TrialBalance_SHOWSTOCKVALUE\\\">&nbsp;Show\\r\\n                  Closing\\r\\n                  Stock Value In Trial Balance</label><br>\\r\\n                  <label class=\\\"smallBoldLabel\\\"><input type=\\\"checkbox\\\"\\r\\n                     [(ngModel)]=\\\"_reportFilterService.TrialBalanceObj.TrialBalance_SHOWCLOSINGONPY\\\"\\r\\n                     [disabled]=\\\"_reportFilterService.TrialBalanceObj.TrialBalance_SHOWOPENINGTRIALONLY == 1\\\">&nbsp;Show\\r\\n                  Only\\r\\n                  Closing Balance In Report</label><br>\\r\\n               <!-- <label class=\\\"smallBoldLabel\\\"><input type=\\\"checkbox\\\"\\r\\n                     [(ngModel)]=\\\"_reportFilterService.TrialBalanceObj.TrialBalance_SHOWZEROBL\\\">&nbsp;Show Zero\\r\\n                  B/L A/C In Report</label> -->\\r\\n                  <label class=\\\"smallBoldLabel\\\"><input type=\\\"checkbox\\\" [checked]=\\\"_reportFilterService.TrialBalanceObj.TrialBalance_SHOWNETCLOSING == 1\\\"\\r\\n                     [(ngModel)]=\\\"_reportFilterService.TrialBalanceObj.TrialBalance_SHOWNETCLOSING\\\">&nbsp;Show Net Value in Opening/Closing Balance</label>\\r\\n            </fieldset>\\r\\n\\r\\n         </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"modal-footer\\\" style=\\\"width : 97%; margin : 0px auto;\\\">\\r\\n         <button class=\\\"btn btn-info confirm-btn\\\" type=\\\"button\\\" (click)=onload()>RUN</button>\\r\\n         <button type=\\\"button\\\" (click)=\\\"closeReportBox()\\\" title=\\\"Cancel\\\" class=\\\"btn btn-info\\\">Close</button>\\r\\n      </div>\\r\\n\\r\\n   </div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/ReportDialogs/Trial-Balance-Report/trial-balance-report.component.html\n// module id = 1764\n// module chunks = 0","module.exports = \"<div style=\\\"background-color : #ffffff; padding :1%; height : auto; width:50%; \\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"modal-header\\\">\\r\\n      <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" (click)=\\\"hide()\\\">&times;</button>\\r\\n      <h4 class=\\\"modal-title\\\">VAT Purchase Register Report</h4>\\r\\n    </div>\\r\\n    <div class=\\\"_left_section col-md-12\\\">\\r\\n      <fieldset style=\\\"width:352px\\\">\\r\\n        <legend style=\\\"font-size:11px;font-weight: bold; width:auto\\\">Date Range Selection :</legend>\\r\\n        <table>\\r\\n          <tr>\\r\\n            <td><label class=\\\"smallBoldLabel\\\">From:(AD)</label></td>\\r\\n            <td><label class=\\\"smallBoldLabel\\\">To:(AD)</label></td>\\r\\n          </tr>\\r\\n          <tr>\\r\\n            <td>\\r\\n              <label class=\\\"smallBoldLabel\\\"><input type=\\\"date\\\" style=\\\"width:152px; min-width:50%;\\\"\\r\\n                  placeholder=\\\"Year Start Date\\\" [(ngModel)]=\\\"VATpurchaseRegisterReport.DATE1\\\"\\r\\n                  (change)=\\\"changeEntryDate($event.target.value,'AD')\\\"></label>\\r\\n            </td>\\r\\n            <td>\\r\\n              <label class=\\\"smallBoldLabel\\\"><input type=\\\"date\\\" style=\\\"width:152px; min-width:50%;\\\"\\r\\n                  placeholder=\\\"Year Start Date\\\" [(ngModel)]=\\\"VATpurchaseRegisterReport.DATE\\\"\\r\\n                  (change)=\\\"changeEndDate($event.target.value,'AD')\\\"></label>\\r\\n            </td>\\r\\n          </tr>\\r\\n          <tr>\\r\\n            <td>\\r\\n              <label class=\\\"smallBoldLabel\\\"> <input id=\\\"nepaliDate\\\" style=\\\"width:152px;height:25px;text-align:center\\\"\\r\\n                  class=\\\"nepali-calendar ndp-nepali-calendar\\\" [(ngModel)]=\\\"VATpurchaseRegisterReport.BSDATE1\\\"\\r\\n                  type=\\\"text\\\" (change)=\\\"changeEntryDate($event.target.value,'BS')\\\" placeholder=\\\"yyyy-mm-dd\\\" />\\r\\n              </label>\\r\\n            </td>\\r\\n            <td>\\r\\n              <label class=\\\"smallBoldLabel\\\">\\r\\n                <input id=\\\"nepaliDate\\\" style=\\\"width:152px;height:25px;text-align:center\\\"\\r\\n                  class=\\\"nepali-calendar ndp-nepali-calendar\\\" [(ngModel)]=\\\"VATpurchaseRegisterReport.BSDATE2\\\"\\r\\n                  type=\\\"text\\\" (change)=\\\"changeEndDate($event.target.value,'BS')\\\" placeholder=\\\"yyyy-mm-dd\\\" />\\r\\n              </label>\\r\\n            </td>\\r\\n          </tr>\\r\\n        </table>\\r\\n      </fieldset>\\r\\n\\r\\n      <!-- Division Selection Start -->\\r\\n      <fieldset style=\\\"width:352px;\\\">\\r\\n        <legend>Division Selection:</legend>\\r\\n        <select class=\\\"form-control\\\" [(ngModel)]=\\\"this.VATpurchaseRegisterReport.DIV\\\" #division\\r\\n          (change)=\\\"divisionChanged()\\\">\\r\\n          <option value=\\\"%\\\" *ngIf=\\\"masterService.userSetting.userwisedivision==0\\\" selected>ALL</option>\\r\\n          <option *ngFor=\\\"let divs of divisionList;let i=index\\\" value=\\\"{{divs.INITIAL}}\\\">{{divs.NAME}}\\r\\n          </option>\\r\\n        </select>\\r\\n      </fieldset>\\r\\n      <!-- Division Selection End -->\\r\\n\\r\\n      <!-- V1,V2,V3 start-->\\r\\n      <fieldset>\\r\\n        <div class=\\\"checkbox\\\" style=\\\"padding-top:5px;width:200px;\\\">\\r\\n          <label class=\\\"smallBoldLabel\\\">\\r\\n            <input type=\\\"checkbox\\\" [(ngModel)]=\\\"this.VATpurchaseRegisterReport.isPI\\\">\\r\\n            Trading Purchase Transaction\\r\\n          </label>\\r\\n        </div>\\r\\n        <div class=\\\"checkbox\\\" style=\\\"padding-top:1px;width:200px;\\\">\\r\\n          <label class=\\\"smallBoldLabel\\\">\\r\\n            <input type=\\\"checkbox\\\" [(ngModel)]=\\\"this.VATpurchaseRegisterReport.isCP\\\">\\r\\n            Capital Purchase Transaction\\r\\n          </label>\\r\\n        </div>\\r\\n        <div class=\\\"checkbox\\\" style=\\\"padding-top:1px;width:200px;\\\">\\r\\n          <label class=\\\"smallBoldLabel\\\">\\r\\n            <input type=\\\"checkbox\\\" [(ngModel)]=\\\"this.VATpurchaseRegisterReport.isDN\\\">\\r\\n            Debit Note Transaction\\r\\n          </label>\\r\\n        </div>\\r\\n        <div class=\\\"checkbox\\\" style=\\\"padding-top:1px;width:200px;\\\">\\r\\n          <label class=\\\"smallBoldLabel\\\">\\r\\n            <input type=\\\"checkbox\\\" [(ngModel)]=\\\"this.VATpurchaseRegisterReport.isCN\\\">\\r\\n            Credit Note Transaction\\r\\n          </label>\\r\\n        </div>\\r\\n      </fieldset>\\r\\n      <!-- V1,V2,V3 end-->\\r\\n\\r\\n\\r\\n      <div style='margin-top:20px;'>\\r\\n        <button class=\\\"btn btn-info confirm-btn\\\" type=\\\"button\\\" (click)=onload()>RUN</button>\\r\\n        <button type=\\\"button\\\" (click)=\\\"cancel()\\\" title=\\\"Cancel\\\" class=\\\"btn btn-info\\\">Close</button>\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/ReportDialogs/VAT-Purchase-Register-Report/vat-purchase-register-report.component.html\n// module id = 1765\n// module chunks = 0","module.exports = \"<fieldset>\\r\\n    <legend><label class=\\\"smallBoldLabel\\\">&nbsp;Ledger Wise</label></legend>\\r\\n    <div>\\r\\n        <div class=\\\"col-md-10\\\">\\r\\n            <table>\\r\\n                <tr>\\r\\n                    <td colspan='2'><label class=\\\"smallBoldLabel\\\">ACCODE</label></td>\\r\\n                    <td colspan='5'><label class=\\\"smallBoldLabel\\\">ACNAME</label></td>\\r\\n                </tr>\\r\\n                <tr>\\r\\n                    <td colspan='2'>\\r\\n                        <label class=\\\"smallBoldLabel\\\">\\r\\n                            <input tabindex=\\\"2\\\" type=\\\"text\\\" class=\\\"form-control input-sm\\\"\\r\\n                                style=\\\"height: 26px;\\\"\\r\\n                                \\r\\n                                (keydown.enter)=\\\"accodeMultipleChanged($event.target.value)\\\"\\r\\n                                [(ngModel)]=\\\"_reportFilterService.ReportFilterObject.multipleACCODE\\\"\\r\\n                                max=\\\"{{masterService.date1 | date:'yyyy-MM-dd'}}\\\" min=\\\"{{masterService.date2 | date:'yyyy-MM-dd'}}\\\">\\r\\n                        </label>\\r\\n                    </td>\\r\\n                    <td colspan='5'>\\r\\n                        <div style=\\\"position: absolute; top: 34px;width: 152px;\\\">\\r\\n                            <label class=\\\"smallBoldLabel\\\">\\r\\n                                <input autocomplete=\\\"off\\\" tabindex=\\\"2\\\" ngui-auto-complete\\r\\n                                    class=\\\"form-control input-sm\\\"\\r\\n                                    \\r\\n                                    [source]=\\\"dropListItem.bind(this)\\\" max-num-list=\\\"25\\\"\\r\\n                                    [(ngModel)]=\\\"_reportFilterService.ReportFilterObject.multipleACNAME\\\" list-formatter=\\\"ACNAME\\\"\\r\\n                                    style=\\\"height: 26px;\\\"\\r\\n                                    (keydown.enter)=\\\"onEnterMulAcnameChange($event)\\\"\\r\\n                                    (ngModelChange)=\\\"itemMultipleChanged($event)\\\"\\r\\n                                    name=\\\"AcName\\\" display-property-name=\\\"ACNAME\\\"\\r\\n                                    max=\\\"{{masterService.date1 | date:'yyyy-MM-dd'}}\\\" min=\\\"{{masterService.date2 | date:'yyyy-MM-dd'}}\\\">\\r\\n                            </label>\\r\\n                        </div>\\r\\n                    </td>\\r\\n                </tr>\\r\\n            </table>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-2\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-info\\\"\\r\\n                (click)=\\\"addAccountToList()\\\">Add</button>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-12\\\">\\r\\n            <table style=\\\"height:175px;\\\">\\r\\n                <tr class=\\\"smallBoldLabel\\\">\\r\\n                    <th style=\\\"width:3px;\\\">S.No.</th>\\r\\n                    <th style=\\\"width:10px;\\\">Account</th>\\r\\n                    <th style=\\\"width:4px;\\\">Action</th>\\r\\n                </tr>\\r\\n                <tr *ngFor=\\\"let data of _reportFilterService.ReportFilterObject.multipleAccounts;let i = index\\\"\\r\\n                    class=\\\"smallBoldLabel\\\">\\r\\n                    <td style=\\\"width:3px;\\\">{{ i + 1 }}</td>\\r\\n                    <td style=\\\"width:10px;\\\">{{data.ACNAME}}</td>\\r\\n                    <td style=\\\"width:4px;\\\">\\r\\n                        <button type=\\\"button\\\" class=\\\"btn btn-info action-btn\\\"\\r\\n                            (click)=\\\"deleteAccount(i)\\\">Delete</button>\\r\\n                    </td>\\r\\n                </tr>\\r\\n            </table>\\r\\n        </div>\\r\\n    </div>\\r\\n</fieldset>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/ReportDialogs/account-filters/account-filters.component.html\n// module id = 1766\n// module chunks = 0","module.exports = \"<fieldset>\\r\\n    <legend>Account Selection: </legend>\\r\\n    <input type=\\\"text\\\" style=\\\"font-weight: bold;\\\" class=\\\"form-control\\\"\\r\\n        [disabled]=\\\"_reportFilterService.CashAndBankBookObj.CashBankBook_DETAILREPORT==0\\\"\\r\\n        [(ngModel)]=\\\"_reportFilterService.CashAndBankBookObj.ACCNAME\\\" placeholder=\\\"Press Enter or Tab for Account List\\\"\\r\\n        (keydown.Tab)=\\\"AccountEnterClicked($event)\\\" (keydown.enter)=\\\"AccountEnterClicked($event)\\\">\\r\\n</fieldset>\\r\\n\\r\\n<generic-popup-grid #genericGridCashBankBook [popupsettings]=\\\"gridPopupSettingsForAccountList\\\"\\r\\n    (onItemDoubleClick)=\\\"dblClickAccountSelect($event)\\\">\\r\\n</generic-popup-grid>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/ReportDialogs/account-list/account-list.component.html\n// module id = 1767\n// module chunks = 0","module.exports = \"<style>\\r\\n  .modal-content-main-area {\\r\\n    width: 100% !important;\\r\\n  }\\r\\n\\r\\n</style>\\r\\n\\r\\n<div>\\r\\n  <div class=\\\"modal-content modal-content-main-area\\\" style=\\\"width: 50% !important\\\">\\r\\n    <div>\\r\\n      <div class=\\\"modal-header\\\" style=\\\"padding: 0px;background: #8cccfb;\\\">\\r\\n        <button class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"closeReportBox()\\\">\\r\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n        <h4 class=\\\"modal-title\\\" style=\\\"text-align: center;\\\">\\r\\n          Select Date\\r\\n        </h4>\\r\\n      </div>\\r\\n      <div class=\\\"modal-body\\\">\\r\\n        <div class=\\\"clearfix\\\">\\r\\n          <div class=\\\"col-md-12\\\">\\r\\n            <div class=\\\"col-md-6 form-group\\\">\\r\\n              <div class=\\\"report-filter single-calendar\\\">\\r\\n                <label>Date Selection</label>\\r\\n                <input class=\\\"form-control\\\" type=\\\"text\\\" ngxDaterangepickerMd [(ngModel)]=\\\"selectedDate\\\"\\r\\n                  [showDropdowns]=\\\"true\\\" [showCustomRangeLabel]=\\\"true\\\" [alwaysShowCalendars]=\\\"true\\\" [locale]=\\\"locale\\\"\\r\\n                  [ranges]=\\\"ranges\\\" [linkedCalendars]=\\\"true\\\" [showCancel]=\\\"true\\\" placeholder=\\\"Date Range...\\\"\\r\\n                  (ngModelChange)=\\\"dateChanged($event)\\\" max=\\\"{{masterService.date1 | date:'yyyy-MM-dd'}}\\\" min=\\\"{{masterService.date2 | date:'yyyy-MM-dd'}}\\\"/>\\r\\n              </div>\\r\\n              <div class=\\\"cell-with-comment report-filter\\\">\\r\\n                <label>Supplier</label>\\r\\n                <input id=\\\"customerselectid\\\" type=\\\"text\\\"\\r\\n                autocomplete=\\\"off\\\" title=\\\"Enter or Tab to select\\\"\\r\\n                [(ngModel)]=\\\"ACNAME\\\" (keydown.tab)=\\\"customerEnterCommand($event)\\\"\\r\\n                (keydown.enter)=\\\"customerEnterCommand($event)\\\" (keydown)=\\\"preventInput($event)\\\"\\r\\n                class=\\\"form-control\\\" />\\r\\n\\r\\n                <span class=\\\"cell-comment\\\" style=\\\"margin-left: 27%\\\">\\r\\n                  press ENTER or TAB to Select Supplier\\r\\n                </span>\\r\\n              </div>\\r\\n              <div class=\\\"checkbox\\\">\\r\\n                <label>\\r\\n                  <input type=\\\"checkbox\\\" name=\\\"zerobl\\\" [(ngModel)]=\\\"accountpayable.reportparam.SHOWZEROBL\\\">\\r\\n                  Show Zero Balance?\\r\\n                </label>\\r\\n              </div>\\r\\n\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <hr style=\\\"margin-bottom: 0px !important\\\">\\r\\n        <div class=\\\"clearfix\\\" style=\\\"padding: 10px;\\\">\\r\\n\\r\\n          <button class=\\\"btn btn-info pull-right\\\" style=\\\"margin-left: 10px;\\\" (click)=onload()>RUN</button>\\r\\n          <button class=\\\"btn btn-info pull-right\\\" (click)=\\\"closeReportBox()\\\">Close</button>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"custom-genericGrid\\\" style=\\\"height: 200px;\\\">\\r\\n    <generic-popup-grid #genericGridCustomer [popupsettings]=\\\"gridPopupSettingsForCustomer\\\"\\r\\n      (onItemDoubleClick)=\\\"onCustomerSelected($event)\\\">\\r\\n    </generic-popup-grid>\\r\\n  </div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/ReportDialogs/account-payable/account-payable.component.html\n// module id = 1768\n// module chunks = 0","module.exports = \"<style>\\r\\n    .modal-content-main-area {\\r\\n      width: 100% !important;\\r\\n    }\\r\\n\\r\\n  </style>\\r\\n\\r\\n  <div>\\r\\n    <!-- Modal content -->\\r\\n    <div class=\\\"modal-content modal-content-main-area\\\" style=\\\"width: 50% !important\\\">\\r\\n      <div>\\r\\n        <div class=\\\"modal-header\\\" style=\\\"padding: 0px;background: #8cccfb;\\\">\\r\\n          <button class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"closeReportBox()\\\">\\r\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n          </button>\\r\\n          <h4 class=\\\"modal-title\\\" style=\\\"text-align: center;\\\">\\r\\n            Select Date\\r\\n          </h4>\\r\\n        </div>\\r\\n        <div class=\\\"modal-body\\\">\\r\\n          <div class=\\\"clearfix\\\">\\r\\n            <div class=\\\"col-md-12\\\">\\r\\n              <div class=\\\"col-md-6 form-group\\\">\\r\\n                <div class=\\\"report-filter single-calendar\\\">\\r\\n                  <label>Date Selection</label>\\r\\n                  <input class=\\\"form-control\\\" type=\\\"text\\\" ngxDaterangepickerMd [(ngModel)]=\\\"selectedDate\\\"\\r\\n                  [showDropdowns]=\\\"true\\\" [showCustomRangeLabel]=\\\"true\\\" [alwaysShowCalendars]=\\\"true\\\"\\r\\n                  [locale]=\\\"locale\\\" [ranges]=\\\"ranges\\\" [linkedCalendars]=\\\"true\\\" [showCancel]=\\\"true\\\"\\r\\n                  placeholder=\\\"Date Range...\\\" (ngModelChange)=\\\"dateChanged($event)\\\" />\\r\\n                </div>\\r\\n                <div class=\\\"cell-with-comment report-filter\\\">\\r\\n                  <label>Customer</label>\\r\\n                  <input id=\\\"customerselectid\\\" type=\\\"text\\\"\\r\\n                    autocomplete=\\\"off\\\" title=\\\"Enter or Tab to select\\\"\\r\\n                    [(ngModel)]=\\\"ACNAME\\\" (keydown.tab)=\\\"customerEnterCommand($event)\\\"\\r\\n                    (keydown.enter)=\\\"customerEnterCommand($event)\\\" (keydown)=\\\"preventInput($event)\\\"\\r\\n                    class=\\\"form-control\\\" />\\r\\n\\r\\n                  <span class=\\\"cell-comment\\\" style=\\\"margin-left: 27%\\\">\\r\\n                    press ENTER or TAB to Select Customer\\r\\n                  </span>\\r\\n                </div>\\r\\n                <div></div>\\r\\n                <div class=\\\"checkbox\\\">\\r\\n                  <label>\\r\\n                    <input type=\\\"checkbox\\\" name=\\\"zerobl\\\" [(ngModel)]=\\\"accountreceivable.reportparam.SHOWZEROBL\\\">\\r\\n                    Show Zero Balance?\\r\\n                  </label>\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <hr style=\\\"margin-bottom: 0px !important\\\">\\r\\n          <div class=\\\"clearfix\\\" style=\\\"padding: 10px;\\\">\\r\\n\\r\\n            <button class=\\\"btn btn-info pull-right\\\" style=\\\"margin-left: 10px;\\\" (click)=onload()>RUN</button>\\r\\n            <button class=\\\"btn btn-info pull-right\\\" (click)=\\\"closeReportBox()\\\">Close</button>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"custom-genericGrid\\\" style=\\\"height: 200px;\\\">\\r\\n      <generic-popup-grid #genericGridCustomer [popupsettings]=\\\"gridPopupSettingsForSupplier\\\"\\r\\n        (onItemDoubleClick)=\\\"onCustomerSelected($event)\\\">\\r\\n      </generic-popup-grid>\\r\\n    </div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/ReportDialogs/account-receivable/account-receivable.component.html\n// module id = 1769\n// module chunks = 0","module.exports = \"<style>\\r\\n  .modal-content-main-area {\\r\\n    width: 100% !important;\\r\\n  }\\r\\n\\r\\n</style>\\r\\n\\r\\n<div>\\r\\n  <!-- Modal content -->\\r\\n  <div class=\\\"modal-content modal-content-main-area\\\" style=\\\"width: 100% !important\\\">\\r\\n    <div>\\r\\n      <div class=\\\"modal-header\\\" style=\\\"padding: 0px;background: #8cccfb;\\\">\\r\\n        <button class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"closeReportBox()\\\">\\r\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n        <h4 class=\\\"modal-title\\\" style=\\\"text-align: center;\\\">\\r\\n          Select Date\\r\\n        </h4>\\r\\n      </div>\\r\\n      <div class=\\\"modal-body\\\">\\r\\n        <div class=\\\"clearfix\\\">\\r\\n          <div class=\\\"col-md-12\\\">\\r\\n            <div class=\\\"col-md-4 form-group\\\">\\r\\n              <div class=\\\"report-filter single-calendar\\\">\\r\\n                <label>Date Selection</label>\\r\\n                <input class=\\\"form-control\\\" type=\\\"text\\\" ngxDaterangepickerMd [(ngModel)]=\\\"selectedDate\\\"\\r\\n                [alwaysShowCalendars]=\\\"true\\\"\\r\\n                [singleDatePicker]=\\\"true\\\"\\r\\n                [autoApply]=\\\"true\\\"\\r\\n                placeholder=\\\"Date Range...\\\" (ngModelChange)=\\\"dateChanged($event)\\\" />\\r\\n              </div>\\r\\n              <div class=\\\"cell-with-comment report-filter\\\">\\r\\n                <label>Supplier</label>\\r\\n                <input id=\\\"customerselectid\\\" autocomplete=\\\"off\\\" title=\\\"Enter or Tab to select\\\"\\r\\n                  [(ngModel)]=\\\"ACNAME\\\" (keydown.tab)=\\\"customerEnterCommand($event)\\\"\\r\\n                  (keydown.enter)=\\\"customerEnterCommand($event)\\\" (keydown)=\\\"preventInput($event)\\\"\\r\\n                  class=\\\"form-control\\\" />\\r\\n\\r\\n                <span class=\\\"cell-comment\\\" style=\\\"margin-left: 27%\\\">\\r\\n                  press ENTER or TAB to Select Supplier\\r\\n                </span>\\r\\n              </div>\\r\\n              <div></div>\\r\\n\\r\\n              <div class=\\\"checkbox\\\">\\r\\n                <label>\\r\\n                  <input type=\\\"checkbox\\\" name=\\\"tc\\\" [(ngModel)]=\\\"agingpayable.reportparam.summaryreport\\\">\\r\\n                    Is Summary?\\r\\n                </label>\\r\\n              </div>\\r\\n\\r\\n            </div>\\r\\n            <div class=\\\"col-md-8\\\">\\r\\n              <h4 class=\\\"text-align\\\">Selected Accounts</h4>\\r\\n              <div class=\\\"clearfix\\\" style=\\\"height: 165px;overflow-y: scroll;\\\">\\r\\n                <table>\\r\\n                  <thead style=\\\"width: 98%;\\\">\\r\\n                    <th style=\\\"background-color: #e3e1df !important;\\\">ACNAME</th>\\r\\n                    <th style=\\\"background-color: #e3e1df !important;\\\">ACID</th>\\r\\n                    <th style=\\\"background-color: #e3e1df !important;\\\">ACTION</th>\\r\\n                  </thead>\\r\\n                  <tbody>\\r\\n                    <ng-container *ngIf=\\\"selectedVoucherList.length\\\">\\r\\n                      <tr *ngFor=\\\"let itm of selectedVoucherList;let i=index\\\">\\r\\n                        <td>\\r\\n                          {{itm?.ACNAME}}\\r\\n                        </td>\\r\\n                        <td>\\r\\n                          {{itm?.ACID}}\\r\\n                        </td>\\r\\n                        <td><i class=\\\"fa fa-trash\\\" (click)=\\\"removeFromSelectedList(i)\\\"></i></td>\\r\\n                      </tr>\\r\\n                    </ng-container>\\r\\n                  </tbody>\\r\\n                </table>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <hr style=\\\"margin-bottom: 0px !important\\\">\\r\\n        <div class=\\\"clearfix\\\" style=\\\"padding: 10px;\\\">\\r\\n\\r\\n          <button class=\\\"btn btn-info pull-right\\\" style=\\\"margin-left: 10px;\\\" (click)=onload()>RUN</button>\\r\\n          <button class=\\\"btn btn-info pull-right\\\" (click)=\\\"closeReportBox()\\\">Close</button>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"custom-genericGrid\\\" style=\\\"height: 200px;\\\">\\r\\n    <generic-popup-grid #genericGridSupplier [popupsettings]=\\\"gridPopupSettingsForCustomer\\\"\\r\\n      (onItemDoubleClick)=\\\"onCustomerSelected($event)\\\">\\r\\n    </generic-popup-grid>\\r\\n  </div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/ReportDialogs/aging-payable/aging-payable.component.html\n// module id = 1770\n// module chunks = 0","module.exports = \"<style>\\r\\n  .modal-content-main-area {\\r\\n    width: 100% !important;\\r\\n  }\\r\\n\\r\\n</style>\\r\\n\\r\\n<div>\\r\\n  <!-- Modal content -->\\r\\n  <div class=\\\"modal-content modal-content-main-area\\\" style=\\\"width: 100% !important\\\">\\r\\n    <div>\\r\\n      <div class=\\\"modal-header\\\" style=\\\"padding: 0px;background: #8cccfb;\\\">\\r\\n        <button class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"closeReportBox()\\\">\\r\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n        <h4 class=\\\"modal-title\\\" style=\\\"text-align: center;\\\">\\r\\n          Select Date\\r\\n        </h4>\\r\\n      </div>\\r\\n      <div class=\\\"modal-body\\\">\\r\\n        <div class=\\\"clearfix\\\">\\r\\n          <div class=\\\"col-md-12\\\">\\r\\n            <div class=\\\"col-md-4 form-group\\\">\\r\\n              <div class=\\\"report-filter single-calendar\\\">\\r\\n                <label>Date Selection</label>\\r\\n                <input class=\\\"form-control\\\" type=\\\"text\\\" ngxDaterangepickerMd [(ngModel)]=\\\"selectedDate\\\"\\r\\n                [alwaysShowCalendars]=\\\"true\\\"\\r\\n                [singleDatePicker]=\\\"true\\\"\\r\\n                [autoApply]=\\\"true\\\"\\r\\n                placeholder=\\\"Date Range...\\\" (ngModelChange)=\\\"dateChanged($event)\\\" />\\r\\n              </div>\\r\\n              <div class=\\\"cell-with-comment report-filter\\\">\\r\\n                <label>Customer</label>\\r\\n                <input id=\\\"customerselectid\\\" autocomplete=\\\"off\\\" title=\\\"Enter or Tab to select\\\"\\r\\n                [(ngModel)]=\\\"ACNAME\\\" (keydown.tab)=\\\"customerEnterCommand($event)\\\"\\r\\n                (keydown.enter)=\\\"customerEnterCommand($event)\\\" (keydown)=\\\"preventInput($event)\\\"\\r\\n                class=\\\"form-control\\\" />\\r\\n\\r\\n                <span class=\\\"cell-comment\\\" style=\\\"margin-left: 27%\\\">\\r\\n                  press ENTER or TAB to Select Customer\\r\\n                </span>\\r\\n              </div>\\r\\n              <div></div>\\r\\n\\r\\n              <div class=\\\"checkbox\\\">\\r\\n                <label>\\r\\n                  <input type=\\\"checkbox\\\" name=\\\"tc\\\" [(ngModel)]=\\\"agingreceivable.reportparam.summaryreport\\\">\\r\\n                    Is Summary?\\r\\n                </label>\\r\\n              </div>\\r\\n\\r\\n            </div>\\r\\n            <div class=\\\"col-md-8\\\">\\r\\n              <h4 class=\\\"text-align\\\">Selected Accounts</h4>\\r\\n              <div class=\\\"clearfix\\\" style=\\\"height: 165px;overflow-y: scroll;\\\">\\r\\n                <table>\\r\\n                  <thead style=\\\"width: 98%;\\\">\\r\\n                    <th style=\\\"background-color: #e3e1df !important;\\\">ACNAME</th>\\r\\n                    <th style=\\\"background-color: #e3e1df !important;\\\">ACID</th>\\r\\n                    <th style=\\\"background-color: #e3e1df !important;\\\">ACTION</th>\\r\\n                  </thead>\\r\\n                  <tbody>\\r\\n                    <ng-container *ngIf=\\\"selectedVoucherList.length\\\">\\r\\n                      <tr *ngFor=\\\"let itm of selectedVoucherList;let i=index\\\">\\r\\n                        <td>\\r\\n                          {{itm?.ACNAME}}\\r\\n                        </td>\\r\\n                        <td>\\r\\n                          {{itm?.ACID}}\\r\\n                        </td>\\r\\n                        <td><i class=\\\"fa fa-trash\\\" (click)=\\\"removeFromSelectedList(i)\\\"></i></td>\\r\\n                      </tr>\\r\\n                    </ng-container>\\r\\n                  </tbody>\\r\\n                </table>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <hr style=\\\"margin-bottom: 0px !important\\\">\\r\\n        <div class=\\\"clearfix\\\" style=\\\"padding: 10px;\\\">\\r\\n\\r\\n          <button class=\\\"btn btn-info pull-right\\\" style=\\\"margin-left: 10px;\\\" (click)=onload()>RUN</button>\\r\\n          <button class=\\\"btn btn-info pull-right\\\" (click)=\\\"closeReportBox()\\\">Close</button>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"custom-genericGrid\\\" style=\\\"height: 200px;\\\">\\r\\n    <generic-popup-grid #genericGridCustomer [popupsettings]=\\\"gridPopupSettingsForCustomer\\\"\\r\\n      (onItemDoubleClick)=\\\"onCustomerSelected($event)\\\">\\r\\n    </generic-popup-grid>\\r\\n  </div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/ReportDialogs/aging-receivable/aging-receivable.component.html\n// module id = 1771\n// module chunks = 0","module.exports = \"<style>\\r\\n    .action-btn {\\r\\n        width: 80%;\\r\\n        height: 80%;\\r\\n        display: block;\\r\\n        margin: 0 auto;\\r\\n        background-color: inherit;\\r\\n        border: none;\\r\\n    }\\r\\n    .input-text{\\r\\n        width : 100%; \\r\\n        /* height: 30px !important; */\\r\\n        font-weight: bold;\\r\\n    }\\r\\n</style>\\r\\n\\r\\n<fieldset>\\r\\n    <legend><label class=\\\"smallBoldLabel\\\">&nbsp;Area Wise</label></legend>\\r\\n    <div>\\r\\n        <div class=\\\"col-md-10\\\">\\r\\n            <select [(ngModel)]=\\\"_reportFilterService.ReportFilterObject.AreaWise\\\"\\r\\n            style=\\\"height: 30px !important;\\\" \\r\\n            class=\\\"form-control input-text\\\">\\r\\n                <!-- <option value=\\\"%\\\">ALL</option> -->\\r\\n                <option *ngFor=\\\"let i of AreaList\\\" [ngValue]=\\\"i\\\">\\r\\n                    {{i.AREA_NAME}}\\r\\n                </option>\\r\\n            </select>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-2\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-info\\\"\\r\\n                (click)=\\\"addAreaToList()\\\">Add</button>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-12\\\">\\r\\n            <table style=\\\"height:170px;\\\">\\r\\n                <tr class=\\\"smallBoldLabel\\\">\\r\\n                    <th style=\\\"width:3px;font-weight: bold;\\\">S.No.</th>\\r\\n                    <th style=\\\"width:10px;font-weight: bold;\\\">Area</th>\\r\\n                    <th style=\\\"width:4px;font-weight: bold;\\\">Action</th>\\r\\n                </tr>\\r\\n                <tr *ngFor=\\\"let data of _reportFilterService.ReportFilterObject.multipleAreas;let i = index\\\"\\r\\n                    class=\\\"smallBoldLabel\\\">\\r\\n                    <td style=\\\"width:3px;\\\">{{ i + 1 }}</td>\\r\\n                    <td style=\\\"width:10px;\\\">{{data.AREA_NAME}}</td>\\r\\n                    <td style=\\\"width:4px;\\\"> <button type=\\\"button\\\"\\r\\n                            class=\\\"action-btn\\\"\\r\\n                            (click)=\\\"deleteArea(i)\\\">Delete</button>\\r\\n                    </td>\\r\\n                </tr>\\r\\n            </table>\\r\\n        </div>\\r\\n    </div>\\r\\n</fieldset>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/ReportDialogs/area-filters/area-filters.component.html\n// module id = 1772\n// module chunks = 0","module.exports = \"<style>\\r\\n    .input-text{\\r\\n        width : 100%; \\r\\n        /* height: 30px !important; */\\r\\n        font-weight: bold;\\r\\n    }\\r\\n</style>\\r\\n\\r\\n<fieldset>\\r\\n    <legend>Area:</legend>\\r\\n    <select [(ngModel)]=\\\"_reportFilterService.ReportFilterObject.AreaWise\\\"\\r\\n    style=\\\"height: 30px !important;\\\" class=\\\"form-control input-text\\\">\\r\\n        <option value=0></option>\\r\\n        <option *ngFor=\\\"let i of AreaList\\\" value={{i.AREA_ID}}>{{i.AREA_NAME}}</option>\\r\\n    </select>\\r\\n</fieldset>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/ReportDialogs/area-list/area-list.component.html\n// module id = 1773\n// module chunks = 0","module.exports = \"<style>\\r\\n    .input-text {\\r\\n        width: 100%;\\r\\n        /* height: 30px !important; */\\r\\n        font-weight: bold;\\r\\n    }\\r\\n\\r\\n    label {\\r\\n        font-size: 12px;\\r\\n        margin: 0;\\r\\n    }\\r\\n\\r\\n    .td-class {\\r\\n        border: none !important;\\r\\n    }\\r\\n\\r\\n    .date-input {\\r\\n        width: 93%;\\r\\n        font-size: 12px !important;\\r\\n        height: 30px !important;\\r\\n    }\\r\\n\\r\\n    @media screen and (max-width:991px) {\\r\\n        .report-container {\\r\\n            width: 100% !important;\\r\\n        }\\r\\n\\r\\n        .report-height {\\r\\n            height: 52vh;\\r\\n            overflow: auto;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    @media screen and (max-width:767px) {\\r\\n        .smallBoldLabel {\\r\\n            width: auto !important;\\r\\n        }\\r\\n    }\\r\\n</style>\\r\\n\\r\\n<div class=\\\"container report-container\\\" style=\\\"background-color: #ffffff; padding: 1%; height: auto;\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"modal-header\\\" style=\\\"width: 97%; margin: 0px auto;\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" (click)=\\\"closeReportBox()\\\">&times;</button>\\r\\n            <h4 class=\\\"modal-title\\\">Depreciation Report (As per Company Norms)</h4>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-12 report-height\\\" style=\\\"padding-top: 2%;\\\">\\r\\n            <!-- Left Column -->\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n                <fieldset>\\r\\n                    <legend>Report Option</legend>\\r\\n                    <select style=\\\"height: 30px !important;\\\" class=\\\"form-control input-text\\\" [(ngModel)]=\\\"_reportFilterService.CompanyNormsObj.CompanyNorms_REPORTOPTION\\\">\\r\\n                        <option *ngFor=\\\"let option of REPORTOPTION\\\" [value]=\\\"option.Mode\\\">{{ option.ReportOptionName }}</option>\\r\\n                    </select>\\r\\n                </fieldset>\\r\\n                <!-- <div class=\\\"col-md-12 checkbox\\\" style=\\\"padding-top: 5px\\\">\\r\\n                    <label class=\\\"smallBoldLabel\\\" style=\\\"margin-left: 0px;\\\">\\r\\n                        <input type=\\\"checkbox\\\"  [(ngModel)]=\\\"_reportFilterService.CompanyNormsObj.CompanyNorms_INCLUDEOPENINGVALUE\\\">&nbsp;&nbsp;Include Opening Value\\r\\n                    </label>\\r\\n                </div> -->\\r\\n            </div>\\r\\n            <!-- Right Column -->\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n                <fieldset style=\\\"padding-bottom: 1px;\\\">\\r\\n                    <legend style=\\\"margin-bottom: -4px;\\\">Pool Selection</legend>\\r\\n                    <table>\\r\\n                        <tr style=\\\"overflow: hidden;\\\">\\r\\n                            <td style=\\\"border: none;\\\" class=\\\"smallBoldLabel\\\">Pool Name: </td>\\r\\n                            <td style=\\\"border: none; width: 70%;\\\">\\r\\n                                <select [(ngModel)]=\\\"_reportFilterService.CompanyNormsObj.CompanyNorms_POOLNAME\\\" (ngModelChange)=\\\"onPoolNameChange($event)\\\" style=\\\"height: 30px !important;\\\" class=\\\"form-control input-text\\\">\\r\\n                                    <option value=\\\"%\\\"></option>\\r\\n                                    <option *ngFor=\\\"let pool of poolName\\\" value=\\\"{{ pool.AssetGroupID }}\\\">{{ pool.GroupName }}</option>\\r\\n                                </select>\\r\\n                            </td>\\r\\n                        </tr>\\r\\n                    </table>\\r\\n                </fieldset>\\r\\n\\r\\n                <fieldset style=\\\"padding-bottom: 1px;\\\">\\r\\n                    <legend style=\\\"margin-bottom: -4px;\\\">Block Selection</legend>\\r\\n                    <table>\\r\\n                        <tr>\\r\\n                            <td style=\\\"border: none;\\\" class=\\\"smallBoldLabel\\\">Ledger Name: </td>\\r\\n                            <td style=\\\"border: none; width: 70%;\\\">\\r\\n                                <input  type=\\\"text\\\" class=\\\"form-control\\\" \\r\\n                                [(ngModel)]=\\\"_reportFilterService.CompanyNormsObj.CompanyNorms_LEDGERNAME\\\" \\r\\n                                (keydown.Enter)=\\\"LedgerNameEnterCommand()\\\" \\r\\n                                (keydown.Tab)=\\\"LedgerNameEnterCommand()\\\" \\r\\n                                autocomplete=\\\"off\\\" placeholder=\\\"Press Enter or Tab for Ledger List\\\">\\r\\n                            </td>\\r\\n                        </tr>\\r\\n                    </table>\\r\\n                </fieldset>\\r\\n                <fieldset style=\\\"padding-bottom: 1px;\\\">\\r\\n                    <legend style=\\\"margin-bottom: -4px;\\\">Item Selection</legend>\\r\\n                    <table>\\r\\n                        <tr>\\r\\n                            <td style=\\\"border: none;\\\" class=\\\"smallBoldLabel\\\">Asset Name: </td>\\r\\n                            <td style=\\\"border: none; width: 70%;\\\">\\r\\n                                <input type=\\\"text\\\" name=\\\"companynorms\\\" class=\\\"form-control\\\" \\r\\n                                [(ngModel)]=\\\"_reportFilterService.CompanyNormsObj.CompanyNorms_ASSETNAME\\\" \\r\\n                                (keydown.Enter)=\\\"AssetNameEnterCommand()\\\" \\r\\n                                (keydown.Tab)=\\\"AssetNameEnterCommand()\\\" \\r\\n                                (input)=\\\"clearAssetMcode()\\\"\\r\\n                                autocomplete=\\\"off\\\" placeholder=\\\"Press Enter or Tab for Asset List\\\">\\r\\n                            </td>\\r\\n                        </tr>\\r\\n                    </table>\\r\\n                </fieldset>\\r\\n                <fieldset style=\\\"padding-bottom: 1px;\\\">\\r\\n                    <legend style=\\\"margin-bottom: -4px;\\\">Asset Code Selection</legend>\\r\\n                    <table>\\r\\n                        <tr>\\r\\n                            <td style=\\\"border: none;\\\" class=\\\"smallBoldLabel\\\">Asset ID: </td>\\r\\n                            <td style=\\\"border: none; width: 70%;\\\">\\r\\n                                <input type=\\\"text\\\" name=\\\"companynorms\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"_reportFilterService.CompanyNormsObj.CompanyNorms_ASSETID\\\" (keydown.Enter)=\\\"AssetIdEnterCommand()\\\" (keydown.Tab)=\\\"AssetIdEnterCommand()\\\" autocomplete=\\\"off\\\" placeholder=\\\"Press Enter or Tab for ID List\\\">\\r\\n                            </td>\\r\\n                        </tr>\\r\\n                    </table>\\r\\n                </fieldset>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"modal-footer\\\" style=\\\"width: 97%; margin: 0px auto;\\\">\\r\\n            <button class=\\\"btn btn-info confirm-btn\\\" type=\\\"button\\\" (click)=\\\"onload()\\\">RUN</button>\\r\\n            <button type=\\\"button\\\" title=\\\"Cancel\\\" class=\\\"btn btn-info\\\" (click)=\\\"closeReportBox()\\\">Close</button>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<generic-popup-grid #genericGridLedgerList [popupsettings]=\\\"gridLedgerListPopupSettings\\\"\\r\\n        (onItemDoubleClick)=\\\"onLedgerSelect($event)\\\"></generic-popup-grid>\\r\\n\\r\\n    <generic-popup-grid #genericGridAssetNameList [popupsettings]=\\\"gridAssetNameListPopupSettings\\\"\\r\\n        (onItemDoubleClick)=\\\"onAssetNameSelect($event)\\\"></generic-popup-grid>\\r\\n\\r\\n        <generic-popup-grid #genericGridAssetIDList [popupsettings]=\\\"gridAssetIDListPopupSettings\\\"\\r\\n  (onItemDoubleClick)=\\\"onAssetIDSelect($event)\\\"></generic-popup-grid>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/ReportDialogs/companynorms-depreciation-report/companynorms-depreciation-report.component.html\n// module id = 1774\n// module chunks = 0","module.exports = \"\\r\\n<style>\\r\\n    .action-btn {\\r\\n        width: 80%;\\r\\n        height: 80%;\\r\\n        display: block;\\r\\n        margin: 0 auto;\\r\\n        background-color: inherit;\\r\\n        border: none;\\r\\n    }\\r\\n    .input-text{\\r\\n        width : 100%; \\r\\n        /* height: 30px !important; */\\r\\n        font-weight: bold;\\r\\n    }\\r\\n</style>\\r\\n\\r\\n <fieldset>\\r\\n    <legend><label class=\\\"smallBoldLabel\\\">&nbsp;Cost Center Wise</label></legend>\\r\\n    <div *ngIf=\\\"_reportFilterService.showAllcontactsInCC\\\" class=\\\"checkbox\\\" style=\\\"padding-top:5px;width:200px;\\\">\\r\\n        <label class=\\\"smallBoldLabel\\\">\\r\\n            <input type=\\\"checkbox\\\"\\r\\n                [(ngModel)]=\\\"_reportFilterService.ReportFilterObject.showAllContacts\\\"\\r\\n                (change)=\\\"checkValue()\\\">\\r\\n            Show All Cost Center\\r\\n        </label>\\r\\n    </div>\\r\\n    <div>\\r\\n        <div class=\\\"col-md-10\\\">\\r\\n            <select [(ngModel)]=\\\"_reportFilterService.ReportFilterObject.CCENTER\\\"\\r\\n            style=\\\"height: 30px !important;\\\" \\r\\n            class=\\\"form-control input-text\\\">\\r\\n                <option *ngFor=\\\"let i of CostcenterList\\\" [ngValue]=\\\"i\\\">\\r\\n                    {{i.COSTCENTERNAME}}\\r\\n                </option>\\r\\n            </select>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-2\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-info\\\" *ngIf=\\\"showMultipleCC\\\"\\r\\n                (click)=\\\"addCostcenterToList()\\\">Add</button>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-12\\\" *ngIf=\\\"showMultipleCC\\\">\\r\\n            <table style=\\\"height:150px;\\\">\\r\\n                <tr class=\\\"smallBoldLabel\\\">\\r\\n                    <th style=\\\"width:3px;font-weight: bold;\\\">S.No.</th>\\r\\n                    <th style=\\\"width:10px;font-weight: bold;\\\">Cost Center</th>\\r\\n                    <th style=\\\"width:4px;font-weight: bold;\\\">Action</th>\\r\\n                </tr>\\r\\n                <tr *ngFor=\\\"let data of _reportFilterService.ReportFilterObject.multipleCostcenter;let i = index\\\"\\r\\n                    class=\\\"smallBoldLabel\\\">\\r\\n                    <td style=\\\"width:3px;\\\">{{ i + 1 }}</td>\\r\\n                    <td style=\\\"width:10px;\\\">{{data.COSTCENTERNAME}}</td>\\r\\n                    <td style=\\\"width:4px;\\\">\\r\\n                        <button type=\\\"button\\\" class=\\\"action-btn\\\"\\r\\n                            (click)=\\\"deleteCostcenter(i)\\\">Delete</button>\\r\\n                    </td>\\r\\n                </tr>\\r\\n            </table>\\r\\n        </div>\\r\\n    </div>\\r\\n</fieldset>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/ReportDialogs/costcenter-filter/costcenter-filters.component.html\n// module id = 1775\n// module chunks = 0","module.exports = \"<style>\\r\\n    .input-text{\\r\\n         width : 100%; \\r\\n         /* height: 30px !important; */\\r\\n         font-weight: bold;\\r\\n     }\\r\\n </style>\\r\\n <fieldset>\\r\\n    <legend>Cost Center:</legend>\\r\\n    <select [(ngModel)]=\\\"_reportFilterService.ReportFilterObject.CostCenter\\\"\\r\\n    style=\\\"height: 30px !important;\\\" \\r\\n    class=\\\"form-control input-text\\\">\\r\\n        <option value=\\\"%\\\"> </option>\\r\\n        <option *ngFor=\\\"let i of CostcenterList\\\" value={{i.CCID}}>{{i.COSTCENTERNAME}}\\r\\n        </option>\\r\\n    </select>\\r\\n</fieldset>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/ReportDialogs/costcenter-list/costcenter-list.component.html\n// module id = 1776\n// module chunks = 0","module.exports = \"<style>\\r\\n   .input-text {\\r\\n      width: 100%;\\r\\n      /* height: 30px !important; */\\r\\n      font-weight: bold;\\r\\n   }\\r\\n\\r\\n   .td-class {\\r\\n      border: none !important;\\r\\n   }\\r\\n\\r\\n   .date-input {\\r\\n      width: 93%;\\r\\n      font-size: 12px !important;\\r\\n      height: 30px !important;\\r\\n   }\\r\\n\\r\\n   .ageing {\\r\\n      width: 15%;\\r\\n      float: left;\\r\\n      margin-right: 5%;\\r\\n      font-weight: bold;\\r\\n      font-size: 14px !important;\\r\\n   }\\r\\n      @media screen and (max-width:991px) {\\r\\n         .report-container{\\r\\n           width: 100% !important;\\r\\n    }\\r\\n    .report-height{\\r\\n        height:71vh; \\r\\n        overflow:auto;\\r\\n    }\\r\\n    }\\r\\n         @media screen and (max-width:767px) {\\r\\n            .smallBoldLabel{\\r\\n                  width: auto !important;\\r\\n            }\\r\\n            \\r\\n        \\r\\n    }\\r\\n</style>\\r\\n<div class=\\\"container report-container\\\" style=\\\"background-color : #ffffff; padding :1%; height : auto;  \\\">\\r\\n   <div class=\\\"row report-height\\\">\\r\\n      <div class=\\\"modal-header\\\" style=\\\"width : 97%; margin : 0px auto;\\\">\\r\\n         <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" (click)=\\\"closeReportBox()\\\">&times;</button>\\r\\n         <h4 class=\\\"modal-title\\\">Creditors Ageing Report</h4>\\r\\n      </div>\\r\\n      <!-- Left Column -->\\r\\n      <div class=\\\"col-md-6\\\" style=\\\"padding-top: 2%;\\\">\\r\\n         <fieldset style=\\\"width : 99%;\\\">\\r\\n            <legend>As on Date :</legend>\\r\\n\\r\\n            <table>\\r\\n               <tr>\\r\\n                  <td class=\\\"td-class\\\">\\r\\n                     <input type=\\\"date\\\" class=\\\"date-input form-control\\\" placeholder=\\\"Year Start Date\\\"\\r\\n                        [(ngModel)]=\\\"_reportFilterService.CreditorsAgeingObj.CreditorsAgeing_DATE1\\\"\\r\\n                        (change)=\\\"changestartDate($event.target.value,'AD')\\\" max=\\\"{{masterService.date1 | date:'yyyy-MM-dd'}}\\\" min=\\\"{{masterService.date2 | date:'yyyy-MM-dd'}}\\\">\\r\\n                  </td>\\r\\n                  <td class=\\\"td-class\\\">\\r\\n                    <nepali-date-picker name=\\\"nepaliDateFrom\\\" [id]=\\\"'nepaliDatefrom'\\\"\\r\\n                        (change)=\\\"changestartDate($event.detail.value,'BS')\\\"\\r\\n                        [label]=\\\"'From'\\\"\\r\\n                        [(ngModel)]=\\\"_reportFilterService.CreditorsAgeingObj.CreditorsAgeing_BSDATE1\\\">\\r\\n                        </nepali-date-picker>\\r\\n                     <!-- <input id=\\\"nepaliDate\\\" style=\\\"text-align:center;\\\"\\r\\n                        class=\\\"nepali-calendar ndp-nepali-calendar date-input form-control\\\"\\r\\n                        [(ngModel)]=\\\"_reportFilterService.CreditorsAgeingObj.CreditorsAgeing_BSDATE1\\\" type=\\\"text\\\"\\r\\n                        (change)=\\\"changestartDate($event.target.value,'BS')\\\" placeholder=\\\"yyyy-mm-dd\\\" max=\\\"{{masterService.date1 | date:'yyyy-MM-dd'}}\\\" min=\\\"{{masterService.date2 | date:'yyyy-MM-dd'}}\\\" /> -->\\r\\n                  </td>\\r\\n               </tr>\\r\\n            </table>\\r\\n         </fieldset>\\r\\n\\r\\n         <fieldset>\\r\\n            <legend>Division Selection:</legend>\\r\\n            <select [(ngModel)]=\\\"_reportFilterService.CreditorsAgeingObj.CreditorsAgeing_DIV\\\"\\r\\n               style=\\\"height: 30px !important;\\\" class=\\\"form-control input-text\\\">\\r\\n               <option value=\\\"%\\\" *ngIf=\\\"masterService.userSetting.userwisedivision==0 ||  masterService.showAll\\\">ALL</option>\\r\\n               <option *ngFor=\\\"let div of division\\\" value=\\\"{{ div.INITIAL }}\\\">\\r\\n                  {{ div.NAME }}\\r\\n               </option>\\r\\n            </select>\\r\\n         </fieldset>\\r\\n\\r\\n         <fieldset *ngIf=\\\"this.masterService.userSetting.enableCostCenter!=0\\\">\\r\\n            <legend>Cost Center:</legend>\\r\\n            <select [(ngModel)]=\\\"_reportFilterService.CreditorsAgeingObj.CreditorsAgeing_CostCenter\\\"\\r\\n               style=\\\"height: 30px !important;\\\" class=\\\"form-control input-text\\\">\\r\\n               <option value=\\\"%\\\"> </option>\\r\\n               <option *ngFor=\\\"let i of CostcenterList\\\" value={{i.CCID}}>{{i.COSTCENTERNAME}}\\r\\n               </option>\\r\\n            </select>\\r\\n         </fieldset>\\r\\n         <label class=\\\"smallBoldLabel\\\"><input type=\\\"checkbox\\\" name=\\\"showCred\\\"\\r\\n               (change)=\\\"$event.target.checked?(_reportFilterService.CreditorsAgeingObj.DOAGEINGOFOPENINGBL=1):(_reportFilterService.CreditorsAgeingObj.DOAGEINGOFOPENINGBL=0)\\\"\\r\\n               [checked]=\\\"_reportFilterService.CreditorsAgeingObj.DOAGEINGOFOPENINGBL == 1\\\">&nbsp;Ignore Aging of\\r\\n            Opening B/L </label><br>\\r\\n\\r\\n         <label class=\\\"smallBoldLabel\\\"><input type=\\\"checkbox\\\" name=\\\"showCred\\\"\\r\\n               (change)=\\\"$event.target.checked?(_reportFilterService.CreditorsAgeingObj.SHOWDPARTYDETAIL=1):(_reportFilterService.CreditorsAgeingObj.SHOWDPARTYDETAIL=0)\\\"\\r\\n               [checked]=\\\"_reportFilterService.CreditorsAgeingObj.SHOWDPARTYDETAIL == 1\\\">&nbsp;Show Party Detail\\r\\n            Info</label><br>\\r\\n         <label class=\\\"smallBoldLabel\\\"><input type=\\\"checkbox\\\" name=\\\"showCred\\\"\\r\\n               (change)=\\\"$event.target.checked?(_reportFilterService.CreditorsAgeing_SHOWBRANCHBL=1):(_reportFilterService.CreditorsAgeing_SHOWBRANCHBL=0)\\\"\\r\\n               [checked]=\\\"_reportFilterService.CreditorsAgeing_SHOWBRANCHBL == 1\\\">&nbsp;Do Not Show Branch Party B/L \\r\\n               in Debtors Report</label><br>\\r\\n\\r\\n      </div>\\r\\n      <!-- Right Column -->\\r\\n      <div class=\\\"col-md-6\\\" style=\\\"padding-top: 2%;\\\">\\r\\n         <fieldset>\\r\\n            <legend>\\r\\n               Ageing Paramter :\\r\\n            </legend>\\r\\n            <input type=\\\"text\\\" class=\\\"ageing form-control\\\" [(ngModel)]=\\\"_reportFilterService.StockAgeingObj.StockAgeing_AGE1\\\">\\r\\n            <input type=\\\"text\\\" class=\\\"ageing form-control\\\" [(ngModel)]=\\\"_reportFilterService.StockAgeingObj.StockAgeing_AGE2\\\">\\r\\n            <input type=\\\"text\\\" class=\\\"ageing form-control\\\" [(ngModel)]=\\\"_reportFilterService.StockAgeingObj.StockAgeing_AGE3\\\">\\r\\n            <input type=\\\"text\\\" class=\\\"ageing form-control\\\" [(ngModel)]=\\\"_reportFilterService.StockAgeingObj.StockAgeing_AGE4\\\">\\r\\n            <input  *ngIf=\\\"AgingValue>=5\\\" type=\\\"text\\\" class=\\\"ageing form-control\\\" [(ngModel)]=\\\"_reportFilterService.StockAgeingObj.StockAgeing_AGE5\\\">\\r\\n            <input  *ngIf=\\\"AgingValue>=6\\\" type=\\\"text\\\" class=\\\"ageing form-control\\\" [(ngModel)]=\\\"_reportFilterService.StockAgeingObj.StockAgeing_AGE6\\\">\\r\\n            <input  *ngIf=\\\"AgingValue>=7\\\" type=\\\"text\\\" class=\\\"ageing form-control\\\" [(ngModel)]=\\\"_reportFilterService.StockAgeingObj.StockAgeing_AGE7\\\">\\r\\n            <input  *ngIf=\\\"AgingValue>=8\\\" type=\\\"text\\\" class=\\\"ageing form-control\\\" [(ngModel)]=\\\"_reportFilterService.StockAgeingObj.StockAgeing_AGE8\\\">\\r\\n            <input *ngIf=\\\"AgingValue>=9\\\" type=\\\"text\\\" class=\\\"ageing form-control\\\" [(ngModel)]=\\\"_reportFilterService.StockAgeingObj.StockAgeing_AGE9\\\">\\r\\n            <input *ngIf=\\\"AgingValue>=10\\\" type=\\\"text\\\" class=\\\"ageing form-control\\\" [(ngModel)]=\\\"_reportFilterService.StockAgeingObj.StockAgeing_AGE10\\\">\\r\\n         </fieldset>\\r\\n         <fieldset>\\r\\n            <legend>Report Option</legend>\\r\\n            <div class=\\\"row\\\">\\r\\n               <div class=\\\"col-lg-4\\\">\\r\\n                  <label class=\\\"smallBoldLabel\\\" style=\\\"width: 256px;\\\"><input type=\\\"radio\\\" name=\\\"BalViewOpt\\\"\\r\\n                        [(ngModel)]=\\\"_reportFilterService.CreditorsAgeingObj.REPORTMODE\\\" value=0>&nbsp;Show All</label>\\r\\n\\r\\n               </div>\\r\\n            </div>\\r\\n            <label class=\\\"smallBoldLabel\\\"><input type=\\\"radio\\\" name=\\\"BalViewOpt\\\"\\r\\n                  [(ngModel)]=\\\"_reportFilterService.CreditorsAgeingObj.REPORTMODE\\\" value=1>&nbsp;Exclude Negative\\r\\n               Creditors B/L</label>\\r\\n            <label class=\\\"smallBoldLabel\\\"><input type=\\\"radio\\\" name=\\\"BalViewOpt\\\"\\r\\n                  [(ngModel)]=\\\"_reportFilterService.CreditorsAgeingObj.REPORTMODE\\\" value=2>&nbsp;Show Negative Creditors\\r\\n               B/L Only</label>\\r\\n               <label class=\\\"smallBoldLabel\\\"><input type=\\\"radio\\\" name=\\\"BalViewOpt\\\"\\r\\n                  [(ngModel)]=\\\"_reportFilterService.CreditorsAgeingObj.REPORTMODE\\\" value=3>&nbsp;Exclude Zero B/L Creditors</label>\\r\\n                  <label class=\\\"smallBoldLabel\\\"><input type=\\\"radio\\\" name=\\\"BalViewOpt\\\"\\r\\n                     [(ngModel)]=\\\"_reportFilterService.CreditorsAgeingObj.REPORTMODE\\\" value=4>&nbsp;Show Zero B/L Creditors</label>\\r\\n         </fieldset>\\r\\n\\r\\n         <fieldset>\\r\\n            <legend>Report Filter Option:</legend>\\r\\n            <div class=\\\"row\\\">\\r\\n               <div class=\\\"col-sm-5\\\"><label class=\\\"smallBoldLabel\\\">Area:</label></div>\\r\\n               <div class=\\\"col-sm-7\\\">\\r\\n                  <select [(ngModel)]=\\\"_reportFilterService.CreditorsAgeingObj.CreditorsAgeing_AreaWise\\\"\\r\\n                  style=\\\"height: 30px !important;\\\" class=\\\"form-control\\\">\\r\\n                      <option value=0></option>\\r\\n                      <option *ngFor=\\\"let i of AreaList\\\" value={{i.AREA_ID}}>{{i.AREA_NAME}}</option>\\r\\n                  </select>\\r\\n               </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"row\\\" style=\\\"margin-top: 10px;\\\">\\r\\n               <div class=\\\"col-sm-5\\\"><label class=\\\"smallBoldLabel\\\">Party Group:</label></div>\\r\\n               <div class=\\\"col-sm-7\\\">\\r\\n                  <select [(ngModel)]=\\\"_reportFilterService.CreditorsAgeingObj.CreditorsAgeing_PartyGroup\\\"\\r\\n                  style=\\\"height: 30px !important;\\\" class=\\\"form-control\\\">\\r\\n                      <option value='%'></option>\\r\\n                      <option *ngFor=\\\"let i of PartyGroupList\\\" value={{i.ACID}}>{{i.ACNAME}}</option>\\r\\n                  </select>\\r\\n               </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"row\\\" style=\\\"margin-top: 10px;\\\">\\r\\n               <div class=\\\"col-sm-5\\\"><label class=\\\"smallBoldLabel\\\">Party Category:</label></div>\\r\\n               <div class=\\\"col-sm-7\\\">\\r\\n                  <select [(ngModel)]=\\\"_reportFilterService.CreditorsAgeingObj.CreditorsAgeing_PartyCategory\\\"\\r\\n                  style=\\\"height: 30px !important;\\\" class=\\\"form-control\\\">\\r\\n                  <option value='%'></option>\\r\\n                  <option *ngFor=\\\"let i of PartyCategoryList\\\" value={{i.CATEGORY_ID}}>{{i.CATEGORYNAME}}</option>\\r\\n                  </select>\\r\\n               </div>\\r\\n            </div>\\r\\n               \\r\\n         </fieldset>\\r\\n\\r\\n         <fieldset>\\r\\n            <legend>Report Grouping Options :</legend>\\r\\n            <select [(ngModel)]=\\\"_reportFilterService.CreditorsAgeingObj.GROUPBY\\\" style=\\\"height: 30px !important;\\\"\\r\\n               class=\\\"form-control input-text\\\">\\r\\n               <option value=0></option>\\r\\n               <option value=1>Area Wise</option>\\r\\n               <option value=2>Party Group Wise</option>\\r\\n               <option value=3>Party Group Wise in Tree Format</option>\\r\\n               <option value=4>Party Category Wise</option>\\r\\n            </select>\\r\\n         </fieldset>\\r\\n\\r\\n\\r\\n         <label class=\\\"smallBoldLabel\\\"><input type=\\\"checkbox\\\" name=\\\"incpostdate\\\"\\r\\n            (change)=\\\"$event.target.checked?(_reportFilterService.CreditorsAgeingObj.CreditorsAgeingObj_INCLUDEPOSTEDTRANSACTION=1):(_reportFilterService.CreditorsAgeingObj.CreditorsAgeingObj_INCLUDEPOSTEDTRANSACTION=0)\\\"\\r\\n            [checked]=\\\"_reportFilterService.CreditorsAgeingObj.CreditorsAgeingObj_INCLUDEPOSTEDTRANSACTION == 1\\\">&nbsp;Include Post Dated\\r\\n         Transaction</label><br>\\r\\n      </div>\\r\\n      <div class=\\\"btn\\\" style=\\\"float : right;\\\">\\r\\n         <!-- <button type=\\\"button\\\"  title=\\\"onSave\\\" class=\\\"btn btn-info\\\">Run</button>    -->\\r\\n         <button class=\\\"btn btn-info confirm-btn\\\" type=\\\"button\\\" (click)=onload()>RUN</button>\\r\\n         <button type=\\\"button\\\" title=\\\"Cancel\\\" class=\\\"btn btn-info\\\" (click)=\\\"closeReportBox()\\\">Close</button>\\r\\n      </div>\\r\\n\\r\\n   </div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/ReportDialogs/creditors-aging-report/creditors-aging-report.component.html\n// module id = 1777\n// module chunks = 0","module.exports = \"<style>\\r\\n   .action-btn {\\r\\n      width: 80%;\\r\\n      height: 80%;\\r\\n      display: block;\\r\\n      margin: 0 auto;\\r\\n      background-color: inherit;\\r\\n      border: none;\\r\\n   }\\r\\n     .input-text{\\r\\n        width : 100%;\\r\\n        /* height: 30px !important; */\\r\\n        font-weight: bold;\\r\\n    }\\r\\n    .td-class{\\r\\n        border: none !important;\\r\\n    }\\r\\n    .date-input{\\r\\n        width: 93%;\\r\\n        font-size: 12px !important;\\r\\n        height: 30px !important;\\r\\n    }\\r\\n      @media screen and (max-width:991px) {\\r\\n         .report-container{\\r\\n           width: 100% !important;\\r\\n    }\\r\\n    .report-height{\\r\\n        height:52vh; \\r\\n        overflow:auto;\\r\\n    }\\r\\n    }\\r\\n         @media screen and (max-width:767px) {\\r\\n            .smallBoldLabel{\\r\\n                  width: auto !important;\\r\\n            }\\r\\n            \\r\\n        \\r\\n    }\\r\\n</style>\\r\\n\\r\\n<div class=\\\"container report-container\\\" style=\\\"background-color : #ffffff; padding :1%; height : auto;  \\\">\\r\\n   <div class=\\\"row report-height\\\">\\r\\n      <div class=\\\"modal-header\\\" style=\\\"width : 97%; margin : 0px auto;\\\">\\r\\n         <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" (click)=\\\"closeReportBox()\\\">&times;</button>\\r\\n         <h4 class=\\\"modal-title\\\">Creditors OutStanding Report</h4>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-12\\\">\\r\\n         <!-- Left Column -->\\r\\n         <div class=\\\"col-md-6\\\">\\r\\n            <fieldset style=\\\"width : 99%;\\\">\\r\\n               <legend>As on Date :</legend>\\r\\n               <table>\\r\\n                  <tr>\\r\\n                  </tr>\\r\\n                  <tr>\\r\\n                     <td class=\\\"td-class\\\">\\r\\n                           <input type=\\\"date\\\" class=\\\"date-input form-control\\\"\\r\\n                              placeholder=\\\"Year Start Date\\\" [(ngModel)]=\\\"_reportFilterService.CreditorsOutstandingObj.CreditorsOutstanding_DATE1\\\"\\r\\n                              (change)=\\\"changestartDate($event.target.value,'AD')\\\" max=\\\"{{masterService.date1 | date:'yyyy-MM-dd'}}\\\" min=\\\"{{masterService.date2 | date:'yyyy-MM-dd'}}\\\">\\r\\n                     </td>\\r\\n                     <td class=\\\"td-class\\\">\\r\\n                      <nepali-date-picker name=\\\"nepaliDateFrom\\\" [id]=\\\"'nepaliDatefrom'\\\"\\r\\n                      (change)=\\\"changestartDate($event.detail.value,'BS')\\\"\\r\\n                      [label]=\\\"'From'\\\"\\r\\n                      [(ngModel)]=\\\"_reportFilterService.CreditorsOutstandingObj.CreditorsOutstanding_BSDATE1\\\">\\r\\n                      </nepali-date-picker>\\r\\n                           <!-- <input id=\\\"nepaliDate\\\"\\r\\n                           style=\\\"text-align:center;\\\"\\r\\n                           class=\\\"nepali-calendar ndp-nepali-calendar date-input form-control\\\" [(ngModel)]=\\\"_reportFilterService.CreditorsOutstandingObj.CreditorsOutstanding_BSDATE1\\\"\\r\\n                              type=\\\"text\\\" (change)=\\\"changestartDate($event.target.value,'BS')\\\"\\r\\n                              placeholder=\\\"yyyy-mm-dd\\\" /> -->\\r\\n                     </td>\\r\\n                  </tr>\\r\\n               </table>\\r\\n            </fieldset>\\r\\n\\r\\n            <!-- <division-list></division-list> -->\\r\\n            <fieldset>\\r\\n               <legend>Division Selection:</legend>\\r\\n               <select [(ngModel)]=\\\"_reportFilterService.CreditorsOutstandingObj.CreditorsOutstanding_DIV\\\" style=\\\"height: 30px !important;\\\"\\r\\n               class=\\\"form-control input-text\\\">\\r\\n               <option value=\\\"%\\\" *ngIf=\\\"masterService.userSetting.userwisedivision==0 ||  masterService.showAll\\\">ALL</option>\\r\\n                   <option *ngFor=\\\"let div of division\\\" value=\\\"{{ div.INITIAL }}\\\">\\r\\n                       {{ div.NAME }}\\r\\n                   </option>\\r\\n               </select>\\r\\n           </fieldset>\\r\\n\\r\\n           <fieldset>\\r\\n            <legend>Cost Center:</legend>\\r\\n            <select [(ngModel)]=\\\"_reportFilterService.CreditorsOutstandingObj.CreditorsOutstanding_CostCenter\\\"\\r\\n            style=\\\"height: 30px !important;\\\"\\r\\n            class=\\\"form-control input-text\\\">\\r\\n                <option value=\\\"%\\\"> </option>\\r\\n                <option *ngFor=\\\"let i of CostcenterList\\\" value={{i.CCID}}>{{i.COSTCENTERNAME}}\\r\\n                </option>\\r\\n            </select>\\r\\n        </fieldset>\\r\\n\\r\\n            <fieldset>\\r\\n               <legend>Report Style:</legend>\\r\\n               <label class=\\\"smallBoldLabel\\\" style=\\\"padding-right:15px;\\\"><input type=\\\"radio\\\" name=\\\"BalViewOpt\\\"\\r\\n                     [(ngModel)]=\\\"_reportFilterService.CreditorsOutstandingObj.ISSUMMARY\\\" value=1>&nbsp;Summary\\r\\n                  Report</label>\\r\\n               <label class=\\\"smallBoldLabel\\\"><input type=\\\"radio\\\" name=\\\"BalViewOpt\\\"\\r\\n                     [(ngModel)]=\\\"_reportFilterService.CreditorsOutstandingObj.ISSUMMARY\\\" value=0>&nbsp;Detail Report</label>\\r\\n            </fieldset>\\r\\n         </div>\\r\\n         <!-- Right Column -->\\r\\n         <div class=\\\"col-md-6\\\">\\r\\n            <fieldset *ngIf=\\\"_reportFilterService.CreditorsOutstandingObj.ISSUMMARY == 1\\\">\\r\\n               <legend>Report Grouping Options :</legend>\\r\\n               <select [(ngModel)]=\\\"_reportFilterService.CreditorsOutstandingObj.GROUPBY\\\" style=\\\"height: 30px !important;\\\"\\r\\n               class=\\\"form-control input-text\\\">\\r\\n                  <option value=0></option>\\r\\n                  <option value=1>Area Wise</option>\\r\\n                  <option value=2>Party Group Wise</option>\\r\\n                  <option value=3>Party Group Wise in Tree Format</option>\\r\\n               </select>\\r\\n               <label class=\\\"smallBoldLabel\\\" style=\\\"padding-top:10px;\\\">\\r\\n                  <input type=\\\"checkbox\\\" name=\\\"showCred\\\"\\r\\n                  (change)=\\\"$event.target.checked?(_reportFilterService.CreditorsOutstandingObj.DOAGEINGOFOPENINGBL=1):(_reportFilterService.CreditorsOutstandingObj.DOAGEINGOFOPENINGBL=0)\\\"\\r\\n                     [(ngModel)]=\\\"_reportFilterService.CreditorsOutstandingObj.DOAGEINGOFOPENINGBL\\\">&nbsp;Ignore\\r\\n                  Aging of Opening B/L </label><br>\\r\\n\\r\\n                  \\r\\n               <fieldset>\\r\\n                  <legend>Report Filter Option:</legend>\\r\\n                  <div class=\\\"row\\\">\\r\\n                     <div class=\\\"col-sm-5\\\"><label class=\\\"smallBoldLabel\\\">Area:</label></div>\\r\\n                     <div class=\\\"col-sm-7\\\">\\r\\n                        <select [(ngModel)]=\\\"_reportFilterService.CreditorsOutstandingObj.CreditorsOutstanding_AreaWiseInSummary\\\"\\r\\n                        style=\\\"height: 30px !important;\\\" class=\\\"form-control\\\">\\r\\n                            <option value=0></option>\\r\\n                            <option *ngFor=\\\"let i of AreaList\\\" value={{i.AREA_ID}}>{{i.AREA_NAME}}</option>\\r\\n                        </select>\\r\\n                     </div>\\r\\n                  </div>\\r\\n\\r\\n                  <div class=\\\"row\\\" style=\\\"margin-top: 10px;\\\">\\r\\n                     <div class=\\\"col-sm-5\\\"><label class=\\\"smallBoldLabel\\\">Party Group:</label></div>\\r\\n                     <div class=\\\"col-sm-7\\\">\\r\\n                        <select [(ngModel)]=\\\"_reportFilterService.CreditorsOutstandingObj.CreditorsOutstanding_PartyGroup\\\"\\r\\n                        style=\\\"height: 30px !important;\\\" class=\\\"form-control\\\">\\r\\n                            <option value='%'></option>\\r\\n                            <option *ngFor=\\\"let i of PartyGroupList\\\" value={{i.ACID}}>{{i.ACNAME}}</option>\\r\\n                        </select>\\r\\n                     </div>\\r\\n                  </div>\\r\\n                     \\r\\n                  </fieldset>\\r\\n            </fieldset>\\r\\n\\r\\n            <fieldset *ngIf=\\\"_reportFilterService.CreditorsOutstandingObj.ISSUMMARY == 0\\\">\\r\\n               <legend>Report Options :</legend>\\r\\n               <select [(ngModel)]=\\\"_reportFilterService.CreditorsOutstandingObj.ReportType\\\" style=\\\"height: 30px !important;\\\"\\r\\n               class=\\\"form-control input-text\\\" (change)=\\\"checkValue()\\\">\\r\\n                  <option value=1>Supplier Wise</option>\\r\\n                  <option value=2>Area Wise</option>\\r\\n               </select>\\r\\n            </fieldset>\\r\\n\\r\\n            <div *ngIf=\\\"showCustomer && _reportFilterService.CreditorsOutstandingObj.ISSUMMARY=='0'\\\">\\r\\n               <fieldset>\\r\\n                  <legend><label class=\\\"smallBoldLabel\\\">&nbsp;Ledger Wise</label></legend>\\r\\n                  <div>\\r\\n                      <div class=\\\"col-md-10\\\">\\r\\n                          <input type=\\\"text\\\" style=\\\"font-weight: bold;\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"_reportFilterService.CreditorsOutstandingObj.multipleACNAME\\\"\\r\\n                      placeholder=\\\"Press Enter or Tab for Account List\\\" (keydown.Tab)=\\\"MultipleAccountEnterClicked($event)\\\"\\r\\n                      (keydown.enter)=\\\"MultipleAccountEnterClicked($event)\\\">\\r\\n\\r\\n                      </div>\\r\\n                      <div class=\\\"col-md-2\\\">\\r\\n                          <button type=\\\"button\\\" class=\\\"btn btn-info\\\"\\r\\n                              (click)=\\\"addAccountToList()\\\">Add</button>\\r\\n                      </div>\\r\\n                      <div class=\\\"col-md-12\\\">\\r\\n                          <table style=\\\"height:175px;\\\">\\r\\n                              <tr class=\\\"smallBoldLabel\\\">\\r\\n                                  <th style=\\\"width:3px;font-weight: bold;\\\">S.No.</th>\\r\\n                                  <th style=\\\"width:10px;font-weight: bold;\\\">Account</th>\\r\\n                                  <th style=\\\"width:4px;font-weight: bold;\\\">Action</th>\\r\\n                              </tr>\\r\\n                              <tr *ngFor=\\\"let data of _reportFilterService.CreditorsOutstandingObj.CreditorsOutstanding_multipleAccounts;let i = index\\\"\\r\\n                                  class=\\\"smallBoldLabel\\\">\\r\\n                                  <td style=\\\"width:3px;\\\">{{ i + 1 }}</td>\\r\\n                                  <td style=\\\"width:10px;\\\">{{data.ACNAME}}</td>\\r\\n                                  <td style=\\\"width:4px;\\\">\\r\\n                                      <button type=\\\"button\\\" class=\\\"action-btn\\\"\\r\\n                                          (click)=\\\"deleteAccount(i)\\\">Delete</button>\\r\\n                                  </td>\\r\\n                              </tr>\\r\\n                          </table>\\r\\n                      </div>\\r\\n                    </div>\\r\\n              </fieldset>\\r\\n            </div>\\r\\n\\r\\n            <div *ngIf=\\\"showArea && _reportFilterService.CreditorsOutstandingObj.ISSUMMARY==0\\\">\\r\\n               <fieldset>\\r\\n                  <legend>Area:</legend>\\r\\n                  <select [(ngModel)]=\\\"_reportFilterService.CreditorsOutstandingObj.CreditorsOutstanding_AreaWise\\\"\\r\\n                  style=\\\"height: 30px !important;\\\" class=\\\"form-control input-text\\\">\\r\\n                      <option value=0></option>\\r\\n                      <option *ngFor=\\\"let i of AreaList\\\" value={{i.AREA_ID}}>{{i.AREA_NAME}}</option>\\r\\n                  </select>\\r\\n              </fieldset>\\r\\n            </div>\\r\\n\\r\\n            <label class=\\\"smallBoldLabel\\\"><input type=\\\"checkbox\\\" name=\\\"incpostdate\\\"\\r\\n               (change)=\\\"$event.target.checked?(_reportFilterService.CreditorsOutstandingObj.CreditorsOutstanding_INCLUDEPOSTEDTRANSACTION=1):(_reportFilterService.CreditorsOutstandingObj.CreditorsOutstanding_INCLUDEPOSTEDTRANSACTION=0)\\\"\\r\\n               [checked]=\\\"_reportFilterService.CreditorsOutstandingObj.CreditorsOutstanding_INCLUDEPOSTEDTRANSACTION == 1\\\">&nbsp;Include Post Dated\\r\\n            Transaction</label><br>\\r\\n\\r\\n         </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"modal-footer\\\" style=\\\"width : 97%; margin : 0px auto;\\\">\\r\\n         <button class=\\\"btn btn-info confirm-btn\\\" type=\\\"button\\\" (click)=onload()>RUN</button>\\r\\n         <button type=\\\"button\\\" title=\\\"Cancel\\\" class=\\\"btn btn-info\\\" (click)=\\\"closeReportBox()\\\">Close</button>\\r\\n      </div>\\r\\n\\r\\n   </div>\\r\\n\\r\\n   <generic-popup-grid #genericGridMultipleAccountLedger [popupsettings]=\\\"gridPopupSettingsForMultipleAccountLedgerList\\\"\\r\\n   (onItemDoubleClick)=\\\"dblClickMultipleAccountSelect($event)\\\">\\r\\n</generic-popup-grid>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/ReportDialogs/creditors-outstanding-report/creditors-outstanding-report.component.html\n// module id = 1778\n// module chunks = 0","module.exports = \"<style>\\r\\n   .input-text {\\r\\n      width: 100%;\\r\\n      /* height: 30px !important; */\\r\\n      font-weight: bold;\\r\\n   }\\r\\n\\r\\n   .td-class {\\r\\n      border: none !important;\\r\\n   }\\r\\n\\r\\n   .date-input {\\r\\n      width: 93%;\\r\\n      font-size: 12px !important;\\r\\n      height: 30px !important;\\r\\n   }\\r\\n   .ageing{\\r\\n   width: 15%;\\r\\n    float: left;\\r\\n    margin-right: 5%;\\r\\n    font-weight: bold;\\r\\n    font-size: 14px !important;\\r\\n   }\\r\\n       @media screen and (max-width:991px) {\\r\\n         .report-container{\\r\\n           width: 100% !important;\\r\\n    }\\r\\n    .report-height{\\r\\n        height:71vh; \\r\\n        overflow:auto;\\r\\n    }\\r\\n    }\\r\\n         @media screen and (max-width:767px) {\\r\\n            .smallBoldLabel{\\r\\n                  width: auto !important;\\r\\n            }\\r\\n            \\r\\n        \\r\\n    }\\r\\n</style>\\r\\n<div class=\\\"container report-container\\\" style=\\\"background-color : #ffffff; padding :1%; height : auto;\\\">\\r\\n   <div class=\\\"row report-height\\\">\\r\\n      <div class=\\\"modal-header\\\" style=\\\"width : 97%; margin : 0px auto;\\\">\\r\\n         <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" (click)=\\\"closeReportBox()\\\">&times;</button>\\r\\n         <h4 class=\\\"modal-title\\\">Debtors Ageing Report</h4>\\r\\n      </div>\\r\\n      <!-- Left Column -->\\r\\n      <div class=\\\"col-md-6 \\\" style=\\\"padding-top: 2%;\\\">\\r\\n         <fieldset style=\\\"width : 99%;\\\">\\r\\n            <legend>As on Date :</legend>\\r\\n            <table>\\r\\n               <tr>\\r\\n                  <td class=\\\"td-class\\\">\\r\\n                        <input type=\\\"date\\\" class=\\\"date-input form-control\\\"\\r\\n                           placeholder=\\\"Year Start Date\\\" [(ngModel)]=\\\"_reportFilterService.DebtorsAgeingObj.DebtorsAgeing_DATE1\\\"\\r\\n                           (change)=\\\"changestartDate($event.target.value,'AD')\\\" max=\\\"{{masterService.date1 | date:'yyyy-MM-dd'}}\\\" min=\\\"{{masterService.date2 | date:'yyyy-MM-dd'}}\\\">\\r\\n                  </td>\\r\\n                  <td class=\\\"td-class\\\">\\r\\n                    <nepali-date-picker name=\\\"nepaliDateFrom\\\" [id]=\\\"'nepaliDatefrom'\\\"\\r\\n                        (change)=\\\"changestartDate($event.detail.value,'BS')\\\"\\r\\n                        [label]=\\\"'From'\\\"\\r\\n                        [(ngModel)]=\\\"_reportFilterService.DebtorsAgeingObj.DebtorsAgeing_BSDATE1\\\">\\r\\n                        </nepali-date-picker>\\r\\n                        <!-- <input id=\\\"nepaliDate\\\"\\r\\n                        style=\\\"text-align:center;\\\"\\r\\n                        class=\\\"nepali-calendar ndp-nepali-calendar date-input form-control\\\"\\r\\n                           [(ngModel)]=\\\"_reportFilterService.DebtorsAgeingObj.DebtorsAgeing_BSDATE1\\\" type=\\\"text\\\"\\r\\n                           (change)=\\\"changestartDate($event.target.value,'BS')\\\" placeholder=\\\"yyyy-mm-dd\\\" max=\\\"{{masterService.date1 | date:'yyyy-MM-dd'}}\\\" />  -->\\r\\n                  </td>\\r\\n               </tr>\\r\\n            </table>\\r\\n         </fieldset>\\r\\n\\r\\n         <fieldset>\\r\\n            <legend>Division Selection:</legend>\\r\\n            <select [(ngModel)]=\\\"_reportFilterService.DebtorsAgeingObj.DebtorsAgeing_DIV\\\" style=\\\"height: 30px !important;\\\" class=\\\"form-control input-text\\\">\\r\\n               <option value=\\\"%\\\" *ngIf=\\\"masterService.userSetting.userwisedivision==0 ||  masterService.showAll\\\">ALL</option>\\r\\n                <option *ngFor=\\\"let div of division\\\" value=\\\"{{ div.INITIAL }}\\\">\\r\\n                    {{ div.NAME }}\\r\\n                </option>\\r\\n            </select>\\r\\n        </fieldset>\\r\\n\\r\\n        <fieldset *ngIf=\\\"this.masterService.userSetting.enableCostCenter!=0\\\">\\r\\n            <legend>Cost Center:</legend>\\r\\n            <select [(ngModel)]=\\\"_reportFilterService.DebtorsAgeingObj.DebtorsAgeing_CostCenter\\\"\\r\\n            style=\\\"height: 30px !important;\\\" class=\\\"form-control input-text\\\">\\r\\n                <option value=\\\"%\\\"> </option>\\r\\n                <option *ngFor=\\\"let i of CostcenterList\\\" value={{i.CCID}}>{{i.COSTCENTERNAME}}\\r\\n                </option>\\r\\n            </select>\\r\\n        </fieldset>\\r\\n\\r\\n        <label class=\\\"smallBoldLabel\\\"><input type=\\\"checkbox\\\" name=\\\"showCred\\\"\\r\\n         (change)=\\\"$event.target.checked?(_reportFilterService.DebtorsAgeingObj.DOAGEINGOFOPENINGBL=1):(_reportFilterService.DebtorsAgeingObj.DOAGEINGOFOPENINGBL=0)\\\"\\r\\n         [checked]=\\\"_reportFilterService.DebtorsAgeingObj.DOAGEINGOFOPENINGBL == 1\\\">&nbsp;Ignore Ageing of\\r\\n         Opening B/L </label><br>\\r\\n\\r\\n         <label class=\\\"smallBoldLabel\\\" ><input type=\\\"checkbox\\\" name=\\\"showCred\\\"\\r\\n               (change)=\\\"$event.target.checked?(_reportFilterService.DebtorsAgeingObj.SHOWDPARTYDETAIL=1):(_reportFilterService.DebtorsAgeingObj.SHOWDPARTYDETAIL=0)\\\"\\r\\n               [checked]=\\\"_reportFilterService.DebtorsAgeingObj.SHOWDPARTYDETAIL == 1\\\">&nbsp;Show Party Detail\\r\\n            Info</label><br>\\r\\n         \\r\\n         <label class=\\\"smallBoldLabel\\\"><input type=\\\"checkbox\\\" name=\\\"showCred\\\"\\r\\n               (change)=\\\"$event.target.checked?(_reportFilterService.DebtorsAgeing_SHOWBRANCHBL=1):(_reportFilterService.DebtorsAgeing_SHOWBRANCHBL=0)\\\"\\r\\n               [checked]=\\\"_reportFilterService.DebtorsAgeing_SHOWBRANCHBL == 1\\\">&nbsp;Do Not Show Branch Party B/L \\r\\n               in Debtors Report</label><br>      \\r\\n\\r\\n      </div>\\r\\n      <!-- Right Column -->\\r\\n      <div class=\\\"col-md-6\\\" style=\\\"padding-top: 2%;\\\">\\r\\n         <fieldset>\\r\\n            <legend>Ageing Parameter :</legend>\\r\\n            <input type=\\\"text\\\" class=\\\"ageing form-control\\\" [(ngModel)]=\\\"_reportFilterService.StockAgeingObj.StockAgeing_AGE1\\\">\\r\\n            <input type=\\\"text\\\" class=\\\"ageing form-control\\\" [(ngModel)]=\\\" _reportFilterService.StockAgeingObj.StockAgeing_AGE2\\\">\\r\\n            <input type=\\\"text\\\" class=\\\"ageing form-control\\\" [(ngModel)]=\\\"_reportFilterService.StockAgeingObj.StockAgeing_AGE3\\\">\\r\\n            <input type=\\\"text\\\" class=\\\"ageing form-control\\\" [(ngModel)]=\\\"_reportFilterService.StockAgeingObj.StockAgeing_AGE4\\\">\\r\\n            <input *ngIf=\\\"AgingValue>=5\\\" type=\\\"text\\\" class=\\\"ageing form-control\\\" [(ngModel)]=\\\"_reportFilterService.StockAgeingObj.StockAgeing_AGE5\\\">\\r\\n            <input *ngIf=\\\"AgingValue>=6\\\" type=\\\"text\\\" class=\\\"ageing form-control\\\" [(ngModel)]=\\\"_reportFilterService.StockAgeingObj.StockAgeing_AGE6\\\">\\r\\n            <input *ngIf=\\\"AgingValue>=7\\\" type=\\\"text\\\" class=\\\"ageing form-control\\\" [(ngModel)]=\\\"_reportFilterService.StockAgeingObj.StockAgeing_AGE7\\\">\\r\\n            <input *ngIf=\\\"AgingValue>=8\\\" type=\\\"text\\\" class=\\\"ageing form-control\\\" [(ngModel)]=\\\"_reportFilterService.StockAgeingObj.StockAgeing_AGE8\\\">\\r\\n            <input *ngIf=\\\"AgingValue>=9\\\" type=\\\"text\\\" class=\\\"ageing form-control\\\" [(ngModel)]=\\\"_reportFilterService.StockAgeingObj.StockAgeing_AGE9\\\">\\r\\n            <input *ngIf=\\\"AgingValue>=10\\\" type=\\\"text\\\" class=\\\"ageing form-control\\\" [(ngModel)]=\\\"_reportFilterService.StockAgeingObj.StockAgeing_AGE10\\\">\\r\\n            <!-- <input type=\\\"text\\\" class=\\\"ageing form-control\\\"\\r\\n            [(ngModel)]=\\\"_reportFilterService.StockAgeingObj.StockAgeing_AGE1\\\">\\r\\n        <input type=\\\"text\\\" class=\\\"ageing form-control\\\"\\r\\n            [(ngModel)]=\\\"_reportFilterService.StockAgeingObj.StockAgeing_AGE2\\\">\\r\\n        <input type=\\\"text\\\" class=\\\"ageing form-control\\\"\\r\\n            [(ngModel)]=\\\"_reportFilterService.StockAgeingObj.StockAgeing_AGE3\\\">\\r\\n        <input type=\\\"text\\\" class=\\\"ageing form-control\\\"\\r\\n            [(ngModel)]=\\\"_reportFilterService.StockAgeingObj.StockAgeing_AGE4\\\">\\r\\n        <input *ngIf=\\\"AgingValue>=5\\\" type=\\\"text\\\" class=\\\"ageing form-control\\\" \\r\\n            [(ngModel)]=\\\"_reportFilterService.StockAgeingObj.StockAgeing_AGE5\\\">\\r\\n        <input *ngIf=\\\"AgingValue>=6\\\" type=\\\"text\\\" class=\\\"ageing form-control\\\"\\r\\n            [(ngModel)]=\\\"_reportFilterService.StockAgeingObj.StockAgeing_AGE6\\\">\\r\\n        <input *ngIf=\\\"AgingValue>=7\\\" type=\\\"text\\\" class=\\\"ageing form-control\\\"\\r\\n            [(ngModel)]=\\\"_reportFilterService.StockAgeingObj.StockAgeing_AGE7\\\">\\r\\n        <input *ngIf=\\\"AgingValue>=8\\\" type=\\\"text\\\" class=\\\"ageing form-control\\\"\\r\\n            [(ngModel)]=\\\"_reportFilterService.StockAgeingObj.StockAgeing_AGE8\\\">\\r\\n        <input *ngIf=\\\"AgingValue>=9\\\" type=\\\"text\\\" class=\\\"ageing form-control\\\"\\r\\n            [(ngModel)]=\\\"_reportFilterService.StockAgeingObj.StockAgeing_AGE9\\\">\\r\\n        <input *ngIf=\\\"AgingValue>=10\\\" type=\\\"text\\\" class=\\\"ageing form-control\\\"\\r\\n            [(ngModel)]=\\\"_reportFilterService.StockAgeingObj.StockAgeing_AGE10\\\"> -->\\r\\n\\r\\n         </fieldset>\\r\\n         \\r\\n         <fieldset>\\r\\n            <legend>Report Option</legend>\\r\\n            <div style=\\\"display: flex; flex-direction: row; justify-content: space-between;\\\">\\r\\n               <label class=\\\"smallBoldLabel\\\"><input type=\\\"radio\\\" name=\\\"BalViewOpt\\\"\\r\\n                  [(ngModel)]=\\\"_reportFilterService.DebtorsAgeingObj.REPORTMODE\\\" value=0>&nbsp;Show All</label><br>\\r\\n               <label class=\\\"smallBoldLabel\\\"><input type=\\\"radio\\\" name=\\\"BalViewOpt\\\"\\r\\n                     [(ngModel)]=\\\"_reportFilterService.DebtorsAgeingObj.REPORTMODE\\\" value=1>&nbsp;Exclude Negative\\r\\n                  Debtors B/L</label>\\r\\n            </div>\\r\\n            <div style=\\\"display: flex; flex-direction: row; justify-content: space-between;\\\">\\r\\n               <label class=\\\"smallBoldLabel\\\"><input type=\\\"radio\\\" name=\\\"BalViewOpt\\\"\\r\\n                     [(ngModel)]=\\\"_reportFilterService.DebtorsAgeingObj.REPORTMODE\\\" value=2>&nbsp;Show Negative Debtors\\r\\n                  B/L Only</label>\\r\\n                  <label class=\\\"smallBoldLabel\\\"><input type=\\\"radio\\\" name=\\\"BalViewOpt\\\"\\r\\n                     [(ngModel)]=\\\"_reportFilterService.DebtorsAgeingObj.REPORTMODE\\\" value=3>&nbsp;Exclude Zero B/L Creditors</label><br>\\r\\n            </div>\\r\\n                  <label class=\\\"smallBoldLabel\\\"><input type=\\\"radio\\\" name=\\\"BalViewOpt\\\"\\r\\n                     [(ngModel)]=\\\"_reportFilterService.DebtorsAgeingObj.REPORTMODE\\\" value=4>&nbsp;Show Zero B/L Creditors</label>\\r\\n         </fieldset>\\r\\n\\r\\n         <fieldset>\\r\\n            <legend>Report Filter Option:</legend>\\r\\n            <div class=\\\"row\\\">\\r\\n               <div class=\\\"col-sm-5\\\"><label class=\\\"smallBoldLabel\\\">Area:</label></div>\\r\\n               <div class=\\\"col-sm-7\\\">\\r\\n                  <select [(ngModel)]=\\\"_reportFilterService.DebtorsAgeingObj.DebtorsAgeing_AreaWise\\\"\\r\\n                  style=\\\"height: 30px !important;\\\" class=\\\"form-control\\\">\\r\\n                      <option value=0></option>\\r\\n                      <option *ngFor=\\\"let i of AreaList\\\" value={{i.AREA_ID}}>{{i.AREA_NAME}}</option>\\r\\n                  </select>\\r\\n               </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"row\\\" style=\\\"margin-top: 10px;\\\">\\r\\n               <div class=\\\"col-sm-5\\\"><label class=\\\"smallBoldLabel\\\">Party Group:</label></div>\\r\\n               <div class=\\\"col-sm-7\\\">\\r\\n                  <select [(ngModel)]=\\\"_reportFilterService.DebtorsAgeingObj.DebtorsAgeing_PartyGroup\\\"\\r\\n                  style=\\\"height: 30px !important;\\\" class=\\\"form-control\\\">\\r\\n                      <option value='%'></option>\\r\\n                      <option *ngFor=\\\"let i of PartyGroupList\\\" value={{i.ACID}}>{{i.ACNAME}}</option>\\r\\n                  </select>\\r\\n               </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"row\\\" style=\\\"margin-top: 10px;\\\">\\r\\n               <div class=\\\"col-sm-5\\\"><label class=\\\"smallBoldLabel\\\">Party Category:</label></div>\\r\\n               <div class=\\\"col-sm-7\\\">\\r\\n                  <select [(ngModel)]=\\\"_reportFilterService.DebtorsAgeingObj.DebtorsAgeing_PartyCategory\\\"\\r\\n                  style=\\\"height: 30px !important;\\\" class=\\\"form-control\\\">\\r\\n                  <option value='%'></option>\\r\\n                  <option *ngFor=\\\"let i of PartyCategoryList\\\" value={{i.CATEGORY_ID}}>{{i.CATEGORYNAME}}</option>\\r\\n                  </select>\\r\\n               </div>\\r\\n            </div>\\r\\n               \\r\\n            </fieldset>\\r\\n         <fieldset>\\r\\n            <legend>Report Grouping Options :</legend>\\r\\n            <select [(ngModel)]=\\\"_reportFilterService.DebtorsAgeingObj.GROUPBY\\\" style=\\\"height: 30px !important;\\\" class=\\\"form-control input-text\\\">\\r\\n               <option value=0></option>\\r\\n               <option value=1>Area Wise</option>\\r\\n               <option value=2>Party Group Wise</option>\\r\\n               <option value=3>Party Group Wise in Tree Format</option>\\r\\n               <option value=4>Party Category Wise</option>\\r\\n            </select>\\r\\n         </fieldset>\\r\\n\\r\\n         \\r\\n         <label class=\\\"smallBoldLabel\\\"><input type=\\\"checkbox\\\" name=\\\"incpostdate\\\"\\r\\n            (change)=\\\"$event.target.checked?(_reportFilterService.DebtorsAgeingObj.DebtorsAgeingObj_INCLUDEPOSTEDTRANSACTION=1):(_reportFilterService.DebtorsAgeingObj.DebtorsAgeingObj_INCLUDEPOSTEDTRANSACTION=0)\\\"\\r\\n            [checked]=\\\"_reportFilterService.DebtorsAgeingObj.DebtorsAgeingObj_INCLUDEPOSTEDTRANSACTION == 1\\\">&nbsp;Include Post Dated\\r\\n         Transaction</label><br>\\r\\n\\r\\n      </div>\\r\\n      <div class=\\\"btn\\\" style=\\\"float : right;\\\">\\r\\n         <button class=\\\"btn btn-info confirm-btn\\\" type=\\\"button\\\" (click)=onload()>RUN</button>\\r\\n         <button type=\\\"button\\\" title=\\\"Cancel\\\" class=\\\"btn btn-info\\\" (click)=\\\"closeReportBox()\\\">Close</button>\\r\\n      </div>\\r\\n\\r\\n   </div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/ReportDialogs/debotrs-aging-report/debtors-aging-report.component.html\n// module id = 1779\n// module chunks = 0","module.exports = \"<style>\\r\\n   .action-btn {\\r\\n      width: 80%;\\r\\n      height: 80%;\\r\\n      display: block;\\r\\n      margin: 0 auto;\\r\\n      background-color: inherit;\\r\\n      border: none;\\r\\n   }\\r\\n   .input-text{\\r\\n        width : 100%;\\r\\n        /* height: 30px !important; */\\r\\n        font-weight: bold;\\r\\n    }\\r\\n    .td-class{\\r\\n        border: none !important;\\r\\n    }\\r\\n    .date-input{\\r\\n        width: 93%;\\r\\n        font-size: 12px !important;\\r\\n        height: 30px !important;\\r\\n    }\\r\\n      @media screen and (max-width:991px) {\\r\\n         .report-container{\\r\\n           width: 100% !important;\\r\\n    }\\r\\n    .report-height{\\r\\n        height:52vh; \\r\\n        overflow:auto;\\r\\n    }\\r\\n    }\\r\\n         @media screen and (max-width:767px) {\\r\\n            .smallBoldLabel{\\r\\n                  width: auto !important;\\r\\n            }\\r\\n            \\r\\n        \\r\\n    }\\r\\n</style>\\r\\n\\r\\n<div class=\\\"container report-container \\\" style=\\\"background-color : #ffffff; padding :1%; height : auto;  \\\">\\r\\n   <div class=\\\"row\\\">\\r\\n      <div class=\\\"modal-header\\\" style=\\\"width : 97%; margin : 0px auto;\\\">\\r\\n         <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" (click)=\\\"closeReportBox()\\\">&times;</button>\\r\\n         <h4 class=\\\"modal-title\\\">Debtors Outstanding Report</h4>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-12 report-height\\\" style=\\\"padding-top: 2%;\\\">\\r\\n         <!-- Left Column -->\\r\\n         <div class=\\\"col-md-6\\\">\\r\\n            <fieldset style=\\\"width : 99%;\\\">\\r\\n               <legend>As on Date :</legend>\\r\\n\\r\\n               <table>\\r\\n                  <tr>\\r\\n                     <td class=\\\"td-class\\\">\\r\\n                           <input type=\\\"date\\\" class=\\\"date-input form-control\\\"\\r\\n                              placeholder=\\\"Year Start Date\\\" [(ngModel)]=\\\"_reportFilterService.DebtorsOutstandingObj.DebtorsOutstanding_DATE1\\\"\\r\\n                              (change)=\\\"changestartDate($event.target.value,'AD')\\\" max=\\\"{{masterService.date1 | date:'yyyy-MM-dd'}}\\\" min=\\\"{{masterService.date2 | date:'yyyy-MM-dd'}}\\\">\\r\\n                     </td>\\r\\n                     <td class=\\\"td-class\\\">\\r\\n                      <nepali-date-picker name=\\\"nepaliDateFrom\\\" [id]=\\\"'nepaliDatefrom'\\\"\\r\\n                      (change)=\\\"changestartDate($event.detail.value,'BS')\\\"\\r\\n                      [label]=\\\"'From'\\\"\\r\\n                      [(ngModel)]=\\\"_reportFilterService.DebtorsOutstandingObj.DebtorsOutstanding_BSDATE1\\\">\\r\\n                      </nepali-date-picker>\\r\\n                           <!-- <input id=\\\"nepaliDate\\\"\\r\\n                           style=\\\"text-align:center;\\\"\\r\\n                           class=\\\"nepali-calendar ndp-nepali-calendar date-input form-control\\\" [(ngModel)]=\\\"_reportFilterService.DebtorsOutstandingObj.DebtorsOutstanding_BSDATE1\\\"\\r\\n                              type=\\\"text\\\" (change)=\\\"changestartDate($event.target.value,'BS')\\\"\\r\\n                              placeholder=\\\"yyyy-mm-dd\\\" />  -->\\r\\n                     </td>\\r\\n                  </tr>\\r\\n               </table>\\r\\n            </fieldset>\\r\\n\\r\\n            <fieldset>\\r\\n               <legend>Division Selection:</legend>\\r\\n               <select [(ngModel)]=\\\"_reportFilterService.DebtorsOutstandingObj.DebtorsOutstanding_DIV\\\" style=\\\"height: 30px !important;\\\"\\r\\n               class=\\\"form-control input-text\\\">\\r\\n               <option value=\\\"%\\\" *ngIf=\\\"masterService.userSetting.userwisedivision==0 ||  masterService.showAll\\\">ALL</option>\\r\\n                   <option *ngFor=\\\"let div of division\\\" value=\\\"{{ div.INITIAL }}\\\">\\r\\n                       {{ div.NAME }}\\r\\n                   </option>\\r\\n               </select>\\r\\n           </fieldset>\\r\\n\\r\\n           <fieldset>\\r\\n            <legend>Cost Center:</legend>\\r\\n            <select [(ngModel)]=\\\"_reportFilterService.DebtorsOutstandingObj.DebtorsOutstanding_CostCenter\\\"\\r\\n            style=\\\"height: 30px !important;\\\"\\r\\n            class=\\\"form-control input-text\\\">\\r\\n                <option value=\\\"%\\\"> </option>\\r\\n                <option *ngFor=\\\"let i of CostcenterList\\\" value={{i.CCID}}>{{i.COSTCENTERNAME}}\\r\\n                </option>\\r\\n            </select>\\r\\n        </fieldset>\\r\\n            <fieldset>\\r\\n               <legend>Report Style:</legend>\\r\\n               <label class=\\\"smallBoldLabel\\\" style=\\\"padding-right:15px;\\\"><input type=\\\"radio\\\" name=\\\"BalViewOpt\\\"\\r\\n                     [(ngModel)]=\\\"_reportFilterService.DebtorsOutstandingObj.ISSUMMARY\\\" value=1>&nbsp;Summary Report</label>\\r\\n               <label class=\\\"smallBoldLabel\\\"><input type=\\\"radio\\\" name=\\\"BalViewOpt\\\"\\r\\n                     [(ngModel)]=\\\"_reportFilterService.DebtorsOutstandingObj.ISSUMMARY\\\" value=0>&nbsp;Detail Report</label>\\r\\n            </fieldset>\\r\\n\\r\\n         </div>\\r\\n         <!-- Right Column -->\\r\\n         <div class=\\\"col-md-6\\\">\\r\\n            <fieldset *ngIf=\\\"_reportFilterService.DebtorsOutstandingObj.ISSUMMARY == 1\\\">\\r\\n               <legend>Report Grouping Options :</legend>\\r\\n               <select [(ngModel)]=\\\"_reportFilterService.DebtorsOutstandingObj.GROUPBY\\\" style=\\\"height: 30px !important;\\\"\\r\\n               class=\\\"form-control input-text\\\">\\r\\n                  <option value=0></option>\\r\\n                  <option value=1>Area Wise</option>\\r\\n                  <option value=2>Party Group Wise</option>\\r\\n                  <option value=3>Party Group Wise in Tree Format</option>\\r\\n               </select>\\r\\n\\r\\n               <label class=\\\"smallBoldLabel\\\" style=\\\"padding-top:10px;\\\"><input type=\\\"checkbox\\\" name=\\\"showCred\\\"\\r\\n                  (change)=\\\"$event.target.checked?(_reportFilterService.DebtorsOutstandingObj.DOAGEINGOFOPENINGBL=1):(_reportFilterService.DebtorsOutstandingObj.DOAGEINGOFOPENINGBL=0)\\\"\\r\\n                     [(ngModel)]=\\\"_reportFilterService.DebtorsOutstandingObj.DOAGEINGOFOPENINGBL\\\">&nbsp;Ignore Aging of Opening B/L </label><br>\\r\\n\\r\\n                     <fieldset>\\r\\n                        <legend>Report Filter Option:</legend>\\r\\n                        <div class=\\\"row\\\">\\r\\n                           <div class=\\\"col-sm-5\\\"><label class=\\\"smallBoldLabel\\\">Area:</label></div>\\r\\n                           <div class=\\\"col-sm-7\\\">\\r\\n                              <select [(ngModel)]=\\\"_reportFilterService.DebtorsOutstandingObj.DebtorsOutstanding_AreaWiseInSummary\\\"\\r\\n                              style=\\\"height: 30px !important;\\\" class=\\\"form-control\\\">\\r\\n                                  <option value=0></option>\\r\\n                                  <option *ngFor=\\\"let i of AreaList\\\" value={{i.AREA_ID}}>{{i.AREA_NAME}}</option>\\r\\n                              </select>\\r\\n                           </div>\\r\\n                        </div>\\r\\n      \\r\\n                        <div class=\\\"row\\\" style=\\\"margin-top: 10px;\\\">\\r\\n                           <div class=\\\"col-sm-5\\\"><label class=\\\"smallBoldLabel\\\">Party Group:</label></div>\\r\\n                           <div class=\\\"col-sm-7\\\">\\r\\n                              <select [(ngModel)]=\\\"_reportFilterService.DebtorsOutstandingObj.DebtorsOutstanding_PartyGroup\\\"\\r\\n                              style=\\\"height: 30px !important;\\\" class=\\\"form-control\\\">\\r\\n                                  <option value='%'></option>\\r\\n                                  <option *ngFor=\\\"let i of PartyGroupList\\\" value={{i.ACID}}>{{i.ACNAME}}</option>\\r\\n                              </select>\\r\\n                           </div>\\r\\n                        </div>\\r\\n                           \\r\\n                        </fieldset>\\r\\n            </fieldset>\\r\\n\\r\\n            <fieldset *ngIf=\\\"_reportFilterService.DebtorsOutstandingObj.ISSUMMARY == 0\\\">\\r\\n               <legend>Report Options :</legend>\\r\\n               <select [(ngModel)]=\\\"_reportFilterService.DebtorsOutstandingObj.ReportType\\\" style=\\\"height: 30px !important;\\\"\\r\\n               class=\\\"form-control input-text\\\"\\r\\n                  (change)=\\\"checkValue()\\\">\\r\\n                  <option value=1>Customer Wise</option>\\r\\n                  <option value=2>Area Wise</option>\\r\\n                  <!-- <option value=3>Cost Center Wise</option> -->\\r\\n               </select>\\r\\n            </fieldset>\\r\\n\\r\\n            <div *ngIf=\\\"showCustomer && _reportFilterService.DebtorsOutstandingObj.ISSUMMARY=='0'\\\">\\r\\n                  <fieldset>\\r\\n                      <legend><label class=\\\"smallBoldLabel\\\">&nbsp;Ledger Wise</label></legend>\\r\\n                      <div>\\r\\n                          <div class=\\\"col-md-10\\\">\\r\\n                              <input type=\\\"text\\\" style=\\\"font-weight: bold;\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"_reportFilterService.DebtorsOutstandingObj.multipleACNAME\\\"\\r\\n                          placeholder=\\\"Press Enter or Tab for Account List\\\" (keydown.Tab)=\\\"MultipleAccountEnterClicked($event)\\\"\\r\\n                          (keydown.enter)=\\\"MultipleAccountEnterClicked($event)\\\">\\r\\n\\r\\n                          </div>\\r\\n                          <div class=\\\"col-md-2\\\">\\r\\n                              <button type=\\\"button\\\" class=\\\"btn btn-info\\\"\\r\\n                                  (click)=\\\"addAccountToList()\\\">Add</button>\\r\\n                          </div>\\r\\n                          <div class=\\\"col-md-12\\\">\\r\\n                              <table style=\\\"height:175px;\\\">\\r\\n                                  <tr class=\\\"smallBoldLabel\\\">\\r\\n                                      <th style=\\\"width:3px;font-weight: bold;\\\">S.No.</th>\\r\\n                                      <th style=\\\"width:10px;font-weight: bold;\\\">Account</th>\\r\\n                                      <th style=\\\"width:4px;font-weight: bold;\\\">Action</th>\\r\\n                                  </tr>\\r\\n                                  <tr *ngFor=\\\"let data of _reportFilterService.DebtorsOutstandingObj.DebtorsOutstanding_multipleAccounts;let i = index\\\"\\r\\n                                      class=\\\"smallBoldLabel\\\">\\r\\n                                      <td style=\\\"width:3px;\\\">{{ i + 1 }}</td>\\r\\n                                      <td style=\\\"width:10px;\\\">{{data.ACNAME}}</td>\\r\\n                                      <td style=\\\"width:4px;\\\">\\r\\n                                          <button type=\\\"button\\\" class=\\\"action-btn\\\"\\r\\n                                              (click)=\\\"deleteAccount(i)\\\">Delete</button>\\r\\n                                      </td>\\r\\n                                  </tr>\\r\\n                              </table>\\r\\n                          </div>\\r\\n                        </div>\\r\\n                  </fieldset>\\r\\n            </div>\\r\\n\\r\\n            <div *ngIf=\\\"showArea && _reportFilterService.DebtorsOutstandingObj.ISSUMMARY==0\\\">\\r\\n               <fieldset>\\r\\n                  <legend>Area:</legend>\\r\\n                  <select [(ngModel)]=\\\"_reportFilterService.DebtorsOutstandingObj.DebtorsOutstanding_AreaWise\\\"\\r\\n                  style=\\\"height: 30px !important;\\\" class=\\\"form-control input-text\\\">\\r\\n                      <option value=0></option>\\r\\n                      <option *ngFor=\\\"let i of AreaList\\\" value={{i.AREA_ID}}>{{i.AREA_NAME}}</option>\\r\\n                  </select>\\r\\n              </fieldset>\\r\\n            </div>\\r\\n\\r\\n            <label class=\\\"smallBoldLabel\\\"><input type=\\\"checkbox\\\" name=\\\"incpostdate\\\"\\r\\n               (change)=\\\"$event.target.checked?(_reportFilterService.DebtorsOutstandingObj.DebtorsOutstanding_INCLUDEPOSTEDTRANSACTION=1):(_reportFilterService.DebtorsOutstandingObj.DebtorsOutstanding_INCLUDEPOSTEDTRANSACTION=0)\\\"\\r\\n               [checked]=\\\"_reportFilterService.DebtorsOutstandingObj.DebtorsOutstanding_INCLUDEPOSTEDTRANSACTION == 1\\\">&nbsp;Include Post Dated\\r\\n            Transaction</label><br>\\r\\n         </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"modal-footer\\\" style=\\\"width : 97%; margin : 0px auto;\\\">\\r\\n         <button class=\\\"btn btn-info confirm-btn\\\" type=\\\"button\\\" (click)=onload()>RUN</button>\\r\\n         <button type=\\\"button\\\" title=\\\"Cancel\\\" class=\\\"btn btn-info\\\" (click)=\\\"closeReportBox()\\\">Close</button>\\r\\n      </div>\\r\\n\\r\\n   </div>\\r\\n\\r\\n   <generic-popup-grid #genericGridMultipleAccountLedger [popupsettings]=\\\"gridPopupSettingsForMultipleAccountLedgerList\\\"\\r\\n    (onItemDoubleClick)=\\\"dblClickMultipleAccountSelect($event)\\\">\\r\\n</generic-popup-grid>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/ReportDialogs/debtors-outstanding-report/debtors-outstanding-report.component.html\n// module id = 1780\n// module chunks = 0","module.exports = \"<style>\\r\\n    .input-text{\\r\\n         width : 100%; \\r\\n         /* height: 30px !important; */\\r\\n         font-weight: bold;\\r\\n     }\\r\\n </style>\\r\\n<fieldset>\\r\\n    <legend>Division Selection:</legend>\\r\\n    <select [(ngModel)]=\\\"_reportFilterService.ReportFilterObject.DIV\\\" style=\\\"height: 30px !important;\\\" \\r\\n    class=\\\"form-control input-text\\\">\\r\\n        <option value=\\\"%\\\" *ngIf=\\\"masterService.userSetting.userwisedivision==0\\\">ALL</option>\\r\\n        <option *ngFor=\\\"let div of division\\\" value=\\\"{{ div.INITIAL }}\\\">\\r\\n            {{ div.NAME }}\\r\\n        </option>\\r\\n    </select>\\r\\n</fieldset>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/ReportDialogs/division/division.component.html\n// module id = 1781\n// module chunks = 0","module.exports = \"<style>\\r\\n    .input-text {\\r\\n        width: 100%;\\r\\n        /* height: 30px !important; */\\r\\n        font-weight: bold;\\r\\n    }\\r\\n\\r\\n    label {\\r\\n        font-size: 12px;\\r\\n        margin: 0;\\r\\n    }\\r\\n\\r\\n    .td-class {\\r\\n        border: none !important;\\r\\n    }\\r\\n\\r\\n    .date-input {\\r\\n        width: 93%;\\r\\n        font-size: 12px !important;\\r\\n        height: 30px !important;\\r\\n    }\\r\\n\\r\\n    @media screen and (max-width:991px) {\\r\\n        .report-container {\\r\\n            width: 100% !important;\\r\\n        }\\r\\n\\r\\n        .report-height {\\r\\n            height: 52vh;\\r\\n            overflow: auto;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    @media screen and (max-width:767px) {\\r\\n        .smallBoldLabel {\\r\\n            width: auto !important;\\r\\n        }\\r\\n    }\\r\\n</style>\\r\\n\\r\\n<div class=\\\"container report-container\\\" style=\\\"background-color: #ffffff; padding: 1%; height: auto;\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"modal-header\\\" style=\\\"width: 97%; margin: 0px auto;\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" (click)=\\\"closeReportBox()\\\">&times;</button>\\r\\n            <h4 class=\\\"modal-title\\\">Fixed Assets Register Report</h4>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-12 report-height\\\" style=\\\"padding-top: 2%;\\\">\\r\\n            <!-- Left Column -->\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n                <fieldset>\\r\\n                    <legend>Report Option</legend>\\r\\n                    <select style=\\\"height: 30px !important;\\\" class=\\\"form-control input-text\\\" [(ngModel)]=\\\"_reportFilterService.FaarAssetObj.FaarAsset_REPORTOPTION\\\">\\r\\n                        <option *ngFor=\\\"let option of REPORTOPTION\\\" [value]=\\\"option.Mode\\\">{{ option.ReportOptionName }}</option>\\r\\n                    </select>\\r\\n                </fieldset>\\r\\n                <!-- <div class=\\\"col-md-12 checkbox\\\" style=\\\"padding-top: 5px\\\">\\r\\n                    <label class=\\\"smallBoldLabel\\\" style=\\\"margin-left: 0px;\\\">\\r\\n                        <input type=\\\"checkbox\\\"  [(ngModel)]=\\\"_reportFilterService.FaarAssetObj.FaarAsset_INCLUDEOPENINGVALUE\\\">&nbsp;&nbsp;Include Opening Value\\r\\n                    </label>\\r\\n                </div> -->\\r\\n            </div>\\r\\n            <!-- Right Column -->\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n                <fieldset style=\\\"padding-bottom: 1px;\\\">\\r\\n                    <legend style=\\\"margin-bottom: -4px;\\\">Pool Selection</legend>\\r\\n                    <table>\\r\\n                        <tr style=\\\"overflow: hidden;\\\">\\r\\n                            <td style=\\\"border: none;\\\" class=\\\"smallBoldLabel\\\">Pool Name: </td>\\r\\n                            <td style=\\\"border: none; width: 70%;\\\">\\r\\n                                <select [(ngModel)]=\\\"_reportFilterService.FaarAssetObj.FaarAsset_POOLNAME\\\" (ngModelChange)=\\\"onPoolNameChange($event)\\\" style=\\\"height: 30px !important;\\\" class=\\\"form-control input-text\\\">\\r\\n                                    <option value=\\\"%\\\"></option>\\r\\n                                    <option *ngFor=\\\"let pool of poolName\\\" value=\\\"{{ pool.AssetGroupID }}\\\">{{ pool.GroupName }}</option>\\r\\n                                </select>\\r\\n                            </td>\\r\\n                        </tr>\\r\\n                    </table>\\r\\n                </fieldset>\\r\\n\\r\\n                <fieldset style=\\\"padding-bottom: 1px;\\\">\\r\\n                    <legend style=\\\"margin-bottom: -4px;\\\">Block Selection</legend>\\r\\n                    <table>\\r\\n                        <tr>\\r\\n                            <td style=\\\"border: none;\\\" class=\\\"smallBoldLabel\\\">Ledger Name: </td>\\r\\n                            <td style=\\\"border: none; width: 70%;\\\">\\r\\n                                <input  type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"_reportFilterService.FaarAssetObj.FaarAsset_LEDGERNAME\\\" (keydown.Enter)=\\\"LedgerNameEnterCommand()\\\" (keydown.Tab)=\\\"LedgerNameEnterCommand()\\\" autocomplete=\\\"off\\\" placeholder=\\\"Press Enter or Tab for Ledger List\\\">\\r\\n                            </td>\\r\\n                        </tr>\\r\\n                    </table>\\r\\n                </fieldset>\\r\\n                <fieldset style=\\\"padding-bottom: 1px;\\\">\\r\\n                    <legend style=\\\"margin-bottom: -4px;\\\">Item Selection</legend>\\r\\n                    <table>\\r\\n                        <tr>\\r\\n                            <td style=\\\"border: none;\\\" class=\\\"smallBoldLabel\\\">Asset Name: </td>\\r\\n                            <td style=\\\"border: none; width: 70%;\\\">\\r\\n                                <input type=\\\"text\\\" name=\\\"companynorms\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"_reportFilterService.FaarAssetObj.FaarAsset_ASSETNAME\\\" (keydown.Enter)=\\\"AssetNameEnterCommand()\\\" (keydown.Tab)=\\\"AssetNameEnterCommand()\\\" (input)=\\\"clearAssetMcode()\\\" autocomplete=\\\"off\\\" placeholder=\\\"Press Enter or Tab for Asset List\\\">\\r\\n                            </td>\\r\\n                        </tr>\\r\\n                    </table>\\r\\n                </fieldset>\\r\\n                <fieldset style=\\\"padding-bottom: 1px;\\\">\\r\\n                    <legend style=\\\"margin-bottom: -4px;\\\">Asset Code Selection</legend>\\r\\n                    <table>\\r\\n                        <tr>\\r\\n                            <td style=\\\"border: none;\\\" class=\\\"smallBoldLabel\\\">Asset ID: </td>\\r\\n                            <td style=\\\"border: none; width: 70%;\\\">\\r\\n                                <input type=\\\"text\\\" name=\\\"companynorms\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"_reportFilterService.FaarAssetObj.FaarAsset_ASSETID\\\" (keydown.Enter)=\\\"AssetIdEnterCommand()\\\" (keydown.Tab)=\\\"AssetIdEnterCommand()\\\" autocomplete=\\\"off\\\" placeholder=\\\"Press Enter or Tab for ID List\\\">\\r\\n                            </td>\\r\\n                        </tr>\\r\\n                    </table>\\r\\n                </fieldset>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"modal-footer\\\" style=\\\"width: 97%; margin: 0px auto;\\\">\\r\\n            <button class=\\\"btn btn-info confirm-btn\\\" type=\\\"button\\\" (click)=\\\"onload()\\\">RUN</button>\\r\\n            <button type=\\\"button\\\" title=\\\"Cancel\\\" class=\\\"btn btn-info\\\" (click)=\\\"closeReportBox()\\\">Close</button>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<generic-popup-grid #genericGridLedgerList [popupsettings]=\\\"gridLedgerListPopupSettings\\\"\\r\\n        (onItemDoubleClick)=\\\"onLedgerSelect($event)\\\"></generic-popup-grid>\\r\\n\\r\\n    <generic-popup-grid #genericGridAssetNameList [popupsettings]=\\\"gridAssetNameListPopupSettings\\\"\\r\\n        (onItemDoubleClick)=\\\"onAssetNameSelect($event)\\\"></generic-popup-grid>\\r\\n\\r\\n        <generic-popup-grid #genericGridAssetIDList [popupsettings]=\\\"gridAssetIDListPopupSettings\\\"\\r\\n  (onItemDoubleClick)=\\\"onAssetIDSelect($event)\\\"></generic-popup-grid>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/ReportDialogs/faarasset-depreciation-report/faarasset-depreciation-report.component.html\n// module id = 1782\n// module chunks = 0","module.exports = \"<div style=\\\"background-color : #ffffff; padding :1%; height : auto; width:50%; \\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"modal-header\\\">\\r\\n      <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" (click)=\\\"hide()\\\">&times;</button>\\r\\n      <h4 class=\\\"modal-title\\\">One Lakh Above Purchase Report</h4>\\r\\n    </div>\\r\\n    <div class=\\\"_left_section col-md-12\\\">\\r\\n      <fieldset style=\\\"width:352px\\\">\\r\\n        <legend style=\\\"font-size:11px;font-weight: bold; width:auto\\\">Date Range Selection :</legend>\\r\\n        <table>\\r\\n          <tr>\\r\\n            <td><label class=\\\"smallBoldLabel\\\">From:(AD)</label></td>\\r\\n            <td><label class=\\\"smallBoldLabel\\\">To:(AD)</label></td>\\r\\n          </tr>\\r\\n          <tr>\\r\\n            <td>\\r\\n              <label class=\\\"smallBoldLabel\\\"><input type=\\\"date\\\" style=\\\"width:152px; min-width:50%;\\\"\\r\\n                  placeholder=\\\"Year Start Date\\\" [(ngModel)]=\\\"OneLakhAbovePurchaseReport.DATE1\\\"\\r\\n                  (change)=\\\"changeEntryDate($event.target.value,'AD')\\\"></label>\\r\\n            </td>\\r\\n            <td>\\r\\n              <label class=\\\"smallBoldLabel\\\"><input type=\\\"date\\\" style=\\\"width:152px; min-width:50%;\\\"\\r\\n                  placeholder=\\\"Year Start Date\\\" [(ngModel)]=\\\"OneLakhAbovePurchaseReport.DATE\\\"\\r\\n                  (change)=\\\"changeEndDate($event.target.value,'AD')\\\"></label>\\r\\n            </td>\\r\\n          </tr>\\r\\n          <tr>\\r\\n            <td>\\r\\n              <label class=\\\"smallBoldLabel\\\"> <input id=\\\"nepaliDate\\\" style=\\\"width:152px;height:25px;text-align:center\\\"\\r\\n                  class=\\\"nepali-calendar ndp-nepali-calendar\\\" [(ngModel)]=\\\"OneLakhAbovePurchaseReport.BSDATE1\\\"\\r\\n                  type=\\\"text\\\" (change)=\\\"changeEntryDate($event.target.value,'BS')\\\" placeholder=\\\"yyyy-mm-dd\\\" />\\r\\n              </label>\\r\\n            </td>\\r\\n            <td>\\r\\n              <label class=\\\"smallBoldLabel\\\">\\r\\n                <input id=\\\"nepaliDate\\\" style=\\\"width:152px;height:25px;text-align:center\\\"\\r\\n                  class=\\\"nepali-calendar ndp-nepali-calendar\\\" [(ngModel)]=\\\"OneLakhAbovePurchaseReport.BSDATE2\\\"\\r\\n                  type=\\\"text\\\" (change)=\\\"changeEndDate($event.target.value,'BS')\\\" placeholder=\\\"yyyy-mm-dd\\\" />\\r\\n              </label>\\r\\n            </td>\\r\\n          </tr>\\r\\n        </table>\\r\\n      </fieldset>\\r\\n\\r\\n      <!-- Division Selection Start -->\\r\\n      <fieldset style=\\\"width:352px;\\\">\\r\\n        <legend>Division Selection:</legend>\\r\\n        <select class=\\\"form-control\\\" [(ngModel)]=\\\"this.OneLakhAbovePurchaseReport.DIV\\\" #division\\r\\n          (change)=\\\"divisionChanged()\\\">\\r\\n          <option value=\\\"%\\\" *ngIf=\\\"masterService.userSetting.userwisedivision==0\\\" selected>ALL</option>\\r\\n          <option *ngFor=\\\"let divs of divisionList;let i=index\\\" value=\\\"{{divs.INITIAL}}\\\">{{divs.NAME}}\\r\\n          </option>\\r\\n        </select>\\r\\n      </fieldset>\\r\\n      <!-- Division Selection End -->\\r\\n\\r\\n      <!-- R1,R2,R3 start-->\\r\\n      <fieldset>\\r\\n        <div class=\\\"checkbox\\\" style=\\\"padding-top:5px;width:200px;\\\">\\r\\n          <label class=\\\"smallBoldLabel\\\">\\r\\n            <input type=\\\"checkbox\\\" [(ngModel)]=\\\"this.OneLakhAbovePurchaseReport.isR1\\\">\\r\\n            Credit Sales Only\\r\\n          </label>\\r\\n        </div>\\r\\n        <div class=\\\"checkbox\\\" style=\\\"padding-top:1px;width:200px;\\\">\\r\\n          <label class=\\\"smallBoldLabel\\\">\\r\\n            <input type=\\\"checkbox\\\" [(ngModel)]=\\\"this.OneLakhAbovePurchaseReport.isR2\\\">\\r\\n            Non Credit Sales With Pan No Only\\r\\n          </label>\\r\\n        </div>\\r\\n        <div class=\\\"checkbox\\\" style=\\\"padding-top:1px;width:300px;\\\">\\r\\n          <label class=\\\"smallBoldLabel\\\">\\r\\n            <input type=\\\"checkbox\\\" [(ngModel)]=\\\"this.OneLakhAbovePurchaseReport.isR3\\\">\\r\\n            Non Credit Sales Without Pan No Only\\r\\n          </label>\\r\\n        </div>\\r\\n      </fieldset>\\r\\n      <!-- R1,R2,R3 end-->\\r\\n\\r\\n      <div style='margin-top:20px;'>\\r\\n        <button class=\\\"btn btn-info confirm-btn\\\" type=\\\"button\\\" (click)=onload()>RUN</button>\\r\\n        <button type=\\\"button\\\" (click)=\\\"cancel()\\\" title=\\\"Cancel\\\" class=\\\"btn btn-info\\\">Close</button>\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/ReportDialogs/one-lakh-above-PURCHASE-report/one-lakh-above-PURCHASE-report.component.html\n// module id = 1783\n// module chunks = 0","module.exports = \"<style>\\r\\n    .input-text {\\r\\n        width: 100%;\\r\\n        /* height: 30px !important; */\\r\\n        font-weight: bold;\\r\\n    }\\r\\n\\r\\n    .td-class {\\r\\n        border: none !important;\\r\\n    }\\r\\n\\r\\n    .date-input {\\r\\n        width: 93%;\\r\\n        font-size: 12px !important;\\r\\n        height: 30px !important;\\r\\n    }\\r\\n      @media screen and (max-width:991px) {\\r\\n         .report-container{\\r\\n           width: 100% !important;\\r\\n    }\\r\\n    .report-height{\\r\\n        height:52vh; \\r\\n        overflow:auto;\\r\\n    }\\r\\n    }\\r\\n         @media screen and (max-width:767px) {\\r\\n            .smallBoldLabel{\\r\\n                  width: auto !important;\\r\\n            }\\r\\n            \\r\\n        \\r\\n    }\\r\\n</style>\\r\\n<div class=\\\"container report-container\\\" style=\\\"background-color : #ffffff; padding :1%; height : auto;  \\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"modal-header\\\" style=\\\"width : 97%; margin : 0px auto;\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" (click)=\\\"closeReportBox()\\\">&times;</button>\\r\\n            <h4 class=\\\"modal-title\\\">Voucher Register Report</h4>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-12 report-height\\\">\\r\\n            <!-- Left Column -->\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n                <fieldset>\\r\\n                    <legend>Voucher Name:</legend>\\r\\n                    <select [(ngModel)]=\\\"_reportFilterService.VoucherRegisterObj.VTYPE\\\" style=\\\"height: 30px !important;\\\"\\r\\n                        class=\\\"form-control input-text\\\" (change)=\\\"OnVoucherSelect()\\\">\\r\\n                        <option value=\\\"%\\\">All</option>\\r\\n                        <option *ngFor=\\\"let vt of voucherTypeList\\\" value=\\\"{{ vt.VOUCHER_ID }}\\\">\\r\\n                            {{ vt.VOUCHER_NAME }}\\r\\n                        </option>\\r\\n                    </select>\\r\\n                </fieldset>\\r\\n\\r\\n                <div *ngIf=\\\"showVoucherTable\\\">\\r\\n                    <fieldset>\\r\\n                        <legend><label class=\\\"smallBoldLabel\\\">&nbsp;Voucher Type Selection</label></legend>\\r\\n                        <div>\\r\\n                            <div class=\\\"col-md-2\\\">\\r\\n                                <button type=\\\"button\\\" class=\\\"btn btn-info\\\"\\r\\n                                    (click)=\\\"addVoucherList()\\\">Add</button>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-md-12\\\">\\r\\n                                <table style=\\\"height:175px; overflow: scroll;\\\">\\r\\n                                    <tr class=\\\"smallBoldLabel\\\">\\r\\n                                        <th style=\\\"width:3px;font-weight: bold;\\\">S.No.</th>\\r\\n                                        <th style=\\\"width:10px;font-weight: bold;\\\">Voucher Name</th>\\r\\n                                        <th style=\\\"width:4px;font-weight: bold;\\\">Action</th>\\r\\n                                    </tr>\\r\\n                                    <tr *ngFor=\\\"let data of this._reportFilterService.VoucherRegisterObj.VoucherRegister_MultipleVoucher;let i = index\\\"\\r\\n                                        class=\\\"smallBoldLabel\\\">\\r\\n                                        <td style=\\\"width:3px;\\\">{{ i + 1 }}</td>\\r\\n                                        <td style=\\\"width:10px;\\\">{{data.VOUCHER_NAME}}</td>\\r\\n                                        <td style=\\\"width:4px;\\\">\\r\\n                                            <button type=\\\"button\\\" class=\\\"action-btn\\\"\\r\\n                                                (click)=\\\"deleteVoucher(i)\\\">Delete</button>\\r\\n                                        </td>\\r\\n                                    </tr>\\r\\n                                </table>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </fieldset>\\r\\n                </div>\\r\\n\\r\\n\\r\\n                <div class=\\\"row\\\" style=\\\"margin-left: 5px;padding-bottom: 3px;padding-top: 3px;\\\">\\r\\n                    <label class=\\\"smallBoldLabel\\\" style=\\\"clear : both;\\\"><input type=\\\"radio\\\" name=\\\"BalViewOpt\\\"\\r\\n                            [(ngModel)]=\\\"_reportFilterService.VoucherRegisterObj.REPORTMODEVR\\\" value=0>&nbsp;Report on\\r\\n                        Date Range </label>\\r\\n                </div>\\r\\n\\r\\n                <fieldset>\\r\\n                    <legend style=\\\"font-size:11px;font-weight: bold; width:auto;margin-bottom: -4px;\\\">Date Range\\r\\n                        Selection :</legend>\\r\\n                    <table>\\r\\n                        <tr>\\r\\n                            <td class=\\\"td-class\\\"><label class=\\\"smallBoldLabel\\\">From:(AD)</label></td>\\r\\n                            <td class=\\\"td-class\\\"><label class=\\\"smallBoldLabel\\\">To:(AD)</label></td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td class=\\\"td-class\\\">\\r\\n                                <input type=\\\"date\\\" class=\\\"date-input form-control\\\" placeholder=\\\"Year Start Date\\\"\\r\\n                                    [(ngModel)]=\\\"_reportFilterService.VoucherRegisterObj.VoucherRegister_DATE1\\\"\\r\\n                                    (change)=\\\"changeEntryDate($event.target.value,'AD')\\\" max=\\\"{{masterService.date1 | date:'yyyy-MM-dd'}}\\\" min=\\\"{{masterService.date2 | date:'yyyy-MM-dd'}}\\\">\\r\\n                            </td>\\r\\n                            <td class=\\\"td-class\\\">\\r\\n                                <input type=\\\"date\\\" class=\\\"date-input form-control\\\" placeholder=\\\"Year Start Date\\\"\\r\\n                                    [(ngModel)]=\\\"_reportFilterService.VoucherRegisterObj.VoucherRegister_DATE2\\\"\\r\\n                                    (change)=\\\"changeEndDate($event.target.value,'AD')\\\" max=\\\"{{masterService.date1 | date:'yyyy-MM-dd'}}\\\" min=\\\"{{masterService.date2 | date:'yyyy-MM-dd'}}\\\">\\r\\n                            </td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td class=\\\"td-class\\\">\\r\\n                              <nepali-date-picker name=\\\"nepaliDateFrom\\\" [id]=\\\"'nepaliDatefrom'\\\"\\r\\n                              (change)=\\\"changeEntryDate($event.detail.value,'BS')\\\"\\r\\n                              [label]=\\\"'From'\\\"\\r\\n                              [(ngModel)]=\\\"_reportFilterService.VoucherRegisterObj.VoucherRegister_BSDATE1\\\">\\r\\n                            </nepali-date-picker>\\r\\n                                <!-- <input id=\\\"nepaliDate\\\" style=\\\"text-align:center;\\\"\\r\\n                                    class=\\\"nepali-calendar ndp-nepali-calendar date-input form-control\\\"\\r\\n                                    [(ngModel)]=\\\"_reportFilterService.VoucherRegisterObj.VoucherRegister_BSDATE1\\\"\\r\\n                                    type=\\\"text\\\" (change)=\\\"changeEntryDate($event.target.value,'BS')\\\"\\r\\n                                    placeholder=\\\"yyyy-mm-dd\\\" /> -->\\r\\n                            </td>\\r\\n                            <td class=\\\"td-class\\\">\\r\\n                              <nepali-date-picker name=\\\"nepaliDateFrom\\\" [id]=\\\"'nepaliDateTo'\\\"\\r\\n                              (change)=\\\"changeEndDate($event.detail.value,'BS')\\\"\\r\\n                              [label]=\\\"'To'\\\"\\r\\n                              [(ngModel)]=\\\"_reportFilterService.VoucherRegisterObj.VoucherRegister_BSDATE2\\\">\\r\\n                            </nepali-date-picker>\\r\\n                                <!-- <input id=\\\"nepaliDate\\\" style=\\\"text-align:center;\\\"\\r\\n                                    class=\\\"nepali-calendar ndp-nepali-calendar date-input form-control\\\"\\r\\n                                    [(ngModel)]=\\\"_reportFilterService.VoucherRegisterObj.VoucherRegister_BSDATE2\\\"\\r\\n                                    type=\\\"text\\\" (change)=\\\"changeEndDate($event.target.value,'BS')\\\"\\r\\n                                    placeholder=\\\"yyyy-mm-dd\\\" /> -->\\r\\n                            </td>\\r\\n                        </tr>\\r\\n                    </table>\\r\\n                </fieldset>\\r\\n                <fieldset style=\\\"padding-bottom: 5px;\\\">\\r\\n                    <legend>Report Option</legend>\\r\\n                    <label class=\\\"smallBoldLabel\\\"><input type=\\\"radio\\\" name=\\\"BalViewOpt1\\\"\\r\\n                            [(ngModel)]=\\\"_reportFilterService.VoucherRegisterObj.REPORT_TYPE\\\" value=0>&nbsp;Summary\\r\\n                        Report </label>&nbsp;&nbsp;&nbsp;\\r\\n                    <label class=\\\"smallBoldLabel\\\" style=\\\"clear : both;\\\"><input type=\\\"radio\\\" name=\\\"BalViewOpt1\\\"\\r\\n                            [(ngModel)]=\\\"_reportFilterService.VoucherRegisterObj.REPORT_TYPE\\\" value=1>&nbsp;Detail\\r\\n                        Report\\r\\n                    </label>\\r\\n\\r\\n                </fieldset>\\r\\n                <!-- <costcenter-list></costcenter-list> -->\\r\\n            </div>\\r\\n            <!-- Right Column -->\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n                <!-- <division-list></division-list> -->\\r\\n\\r\\n                <fieldset>\\r\\n                    <legend>Division Selection:</legend>\\r\\n                    <select [(ngModel)]=\\\"_reportFilterService.VoucherRegisterObj.VoucherRegister_DIV\\\"\\r\\n                        style=\\\"height: 30px !important;\\\" class=\\\"form-control input-text\\\">\\r\\n                        <option value=\\\"%\\\" *ngIf=\\\"masterService.userSetting.userwisedivision==0 ||  masterService.showAll\\\">ALL</option>\\r\\n                        <option *ngFor=\\\"let div of division\\\" value=\\\"{{ div.INITIAL }}\\\">\\r\\n                            {{ div.NAME }}\\r\\n                        </option>\\r\\n                    </select>\\r\\n                </fieldset>\\r\\n\\r\\n                <div class=\\\"row\\\" style=\\\"margin-left: 5px;padding-bottom: 3px;padding-top: 3px;\\\">\\r\\n                    <label class=\\\"smallBoldLabel\\\" style=\\\"clear : both;\\\"><input type=\\\"radio\\\" name=\\\"BalViewOpt\\\"\\r\\n                            [(ngModel)]=\\\"_reportFilterService.VoucherRegisterObj.REPORTMODEVR\\\" value=1>&nbsp;Report on\\r\\n                        Voucher no Range </label>\\r\\n                </div>\\r\\n                <fieldset>\\r\\n                    <table>\\r\\n                        <tr>\\r\\n                            <td style=\\\"border: none;\\\" class=\\\"smallBoldLabel\\\">From</td>\\r\\n                            <td style=\\\"border: none;width: 70%;\\\"><input type=\\\"text\\\" style=\\\"height: 30px !important;width: 50%;\\r\\n                            font-weight: bold;\\\" class=\\\"form-control\\\" name=\\\"fromVno\\\"\\r\\n                                    [disabled]=\\\"_reportFilterService.VoucherRegisterObj.REPORTMODEVR == 0\\\"\\r\\n                                    [(ngModel)]=\\\"_reportFilterService.VoucherRegisterObj.FROM_VNO\\\"> </td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td style=\\\"border: none;\\\" class=\\\"smallBoldLabel\\\">To</td>\\r\\n                            <td style=\\\"border: none;width: 70%;\\\"><input type=\\\"text\\\" style=\\\"height: 30px !important;width: 50%;\\r\\n                            font-weight: bold;\\\" class=\\\"form-control\\\" name=\\\"toVno\\\"\\r\\n                                    [disabled]=\\\"_reportFilterService.VoucherRegisterObj.REPORTMODEVR == 0\\\"\\r\\n                                    [(ngModel)]=\\\"_reportFilterService.VoucherRegisterObj.TO_VNO\\\"></td>\\r\\n                        </tr>\\r\\n                    </table>\\r\\n                </fieldset>\\r\\n\\r\\n\\r\\n                <fieldset style=\\\"padding-bottom: 1px;\\\">\\r\\n                    <legend>Report Filter By</legend>\\r\\n                    <table>\\r\\n                        <tr>\\r\\n                            <td style=\\\"border: none;\\\" class=\\\"smallBoldLabel\\\">Account Name</td>\\r\\n                            <td style=\\\"border: none;width: 70%;\\\">\\r\\n                                <!-- <select [(ngModel)]=\\\"_reportFilterService.VoucherRegisterObj.VoucherRegister_ACID\\\" class=\\\"smallBoldLabel\\\"\\r\\n                            style=\\\"width : 100%;\\\">\\r\\n                            <option value=\\\"\\\"></option>\\r\\n                            <ng-container *ngFor = \\\"let it of allAccountList\\\" >\\r\\n                                <option value=\\\"it.ACID\\\" >{{it.ACNAME}} </option>\\r\\n                            </ng-container>\\r\\n                          </select>\\r\\n                        -->\\r\\n                                <!-- <div style=\\\"position: absolute;\\\">\\r\\n                               <label class=\\\"smallBoldLabel\\\">\\r\\n                                <input tabindex=\\\"2\\\" ngui-auto-complete\\r\\n                                class=\\\"form-control input-lg\\\"\\r\\n                                [source]=\\\"dropListItem.bind(this)\\\"\\r\\n                                autocomplete=\\\"off\\\"\\r\\n                                 max-num-list=\\\"25\\\"\\r\\n                                [(ngModel)]=\\\"_reportFilterService.VoucherRegisterObj.VoucherRegister_ACCNAME\\\" list-formatter=\\\"ACNAME\\\"\\r\\n                                style=\\\"height: 26px;width: 210px;\\\"\\r\\n                                (keydown.enter)=\\\"onEnterAcnameChange($event)\\\"\\r\\n                                (ngModelChange)=\\\"itemChanged($event)\\\" name=\\\"AcName\\\"\\r\\n                                display-property-name=\\\"ACNAME\\\">\\r\\n                               </label>\\r\\n                           </div>  -->\\r\\n                                <input type=\\\"text\\\" style=\\\"font-weight: bold;\\\" class=\\\"form-control\\\"\\r\\n                                    [(ngModel)]=\\\"_reportFilterService.VoucherRegisterObj.VoucherRegister_ACCNAME\\\"\\r\\n                                    placeholder=\\\"Press Enter or Tab for Account List\\\"\\r\\n                                    (keydown.Tab)=\\\"AccountEnterClicked($event)\\\"\\r\\n                                    (keydown.enter)=\\\"AccountEnterClicked($event)\\\">\\r\\n\\r\\n                            </td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td style=\\\"border: none;\\\" class=\\\"smallBoldLabel\\\">Entry User </td>\\r\\n                            <td style=\\\"border: none;width: 70%;\\\">\\r\\n                                <select [(ngModel)]=\\\"_reportFilterService.VoucherRegisterObj.USER\\\"\\r\\n                                    style=\\\"height: 30px !important;\\\" class=\\\"form-control input-text\\\">\\r\\n                                    <option value=\\\"\\\"></option>\\r\\n                                    <ng-container *ngFor=\\\"let it of userList\\\">\\r\\n                                        <option value=\\\"{{it.username}}\\\">{{it.username}} </option>\\r\\n                                    </ng-container>\\r\\n\\r\\n                                </select>\\r\\n                            </td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td style=\\\"border: none;\\\" class=\\\"smallBoldLabel\\\">Cost Center </td>\\r\\n                            <td style=\\\"border: none;width: 70%;\\\">\\r\\n                                <select [(ngModel)]=\\\"_reportFilterService.VoucherRegisterObj.CCENTER\\\"\\r\\n                                    style=\\\"height: 30px !important;\\\" class=\\\"form-control input-text\\\">\\r\\n                                    <option value=\\\"%\\\"> </option>\\r\\n                                    <ng-container *ngFor=\\\"let item of costlists\\\">\\r\\n                                        <option value=\\\"{{item.CCID}}\\\">{{item.COSTCENTERNAME}}</option>\\r\\n                                    </ng-container>\\r\\n\\r\\n                                </select>\\r\\n                            </td>\\r\\n                        </tr>\\r\\n\\r\\n                    </table>\\r\\n\\r\\n                </fieldset>\\r\\n\\r\\n\\r\\n\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"modal-footer\\\" style=\\\"width : 97%; margin : 0px auto;\\\">\\r\\n            <button class=\\\"btn btn-info confirm-btn\\\" type=\\\"button\\\" (click)=onload()>RUN</button>\\r\\n            <button type=\\\"button\\\" (click)=\\\"closeReportBox()\\\" title=\\\"Cancel\\\" class=\\\"btn btn-info\\\">Close</button>\\r\\n        </div>\\r\\n\\r\\n    </div>\\r\\n\\r\\n    <generic-popup-grid #genericGridACListParty [popupsettings]=\\\"gridACListPartyPopupSettings\\\"\\r\\n        (onItemDoubleClick)=\\\"onAcPartySelect($event)\\\"></generic-popup-grid>\\r\\n\\r\\n    <generic-popup-grid #genericGridAccountList [popupsettings]=\\\"gridPopupSettingsForAccountList\\\"\\r\\n        (onItemDoubleClick)=\\\"dblClickAccountSelect($event)\\\">\\r\\n    </generic-popup-grid>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/ReportDialogs/voucher-register-report/voucher-register-report.component.html\n// module id = 1784\n// module chunks = 0","module.exports = \"<style>\\r\\n  .Regular {\\r\\n    font-weight: inherit;\\r\\n    font-size: inherit;\\r\\n    height: 20px !important;\\r\\n    color: inherit;\\r\\n  }\\r\\n\\r\\n  .Bold {\\r\\n    font-weight: bold;\\r\\n    font-size: inherit;\\r\\n    height: 23px !important;\\r\\n    color: inherit;\\r\\n  }\\r\\n\\r\\n  .Regulartd {\\r\\n    white-space: inherit;\\r\\n    /* height: 17px; */\\r\\n    line-height: 10px;\\r\\n    overflow: hidden;\\r\\n    padding-left: 5px;\\r\\n    padding-right: 3px\\r\\n  }\\r\\n\\r\\n  .Boldtd {\\r\\n    white-space: inherit;\\r\\n    /* height: 35px; */\\r\\n    overflow: hidden;\\r\\n    padding-left: 5px;\\r\\n    padding-right: 3px;\\r\\n    line-height: 10px;\\r\\n  }\\r\\n\\r\\n  .toggable-sidebar {\\r\\n    position: absolute;\\r\\n    right: -280px;\\r\\n    transition: 0.3s;\\r\\n    padding: 10px;\\r\\n    width: 260px;\\r\\n    text-decoration: none;\\r\\n    font-size: 20px;\\r\\n    border-radius: 0 5px 5px 0;\\r\\n    background: #c0c0c0;\\r\\n    color: #000000;\\r\\n    height: 8%;\\r\\n    /* width: 20%; */\\r\\n    margin: 0px;\\r\\n    border: 1px solid #f1ebeb;\\r\\n  }\\r\\n\\r\\n  .mySidenav-show {\\r\\n    right: 0 !important;\\r\\n  }\\r\\n\\r\\n  .btn-toggler {\\r\\n    position: absolute;\\r\\n    left: -45px;\\r\\n    top: 3px;\\r\\n    background: #8cccfb !important;\\r\\n    border-color: #8cccfb !important;\\r\\n    padding: 5px 12px 5px 5px !important;\\r\\n    font-size: 10px !important;\\r\\n    width: 45px !important;\\r\\n  }\\r\\n\\r\\n  .toggler-btn-icon-reverse {\\r\\n    transform: rotate(180deg);\\r\\n  }\\r\\n.reportFormsFields input{\\r\\nheight: 23px !important;\\r\\n}\\r\\n.reportFormsFields select{\\r\\nheight: 32px !important;\\r\\n}\\r\\n  .bold_text {\\r\\n    font-weight: bold;\\r\\n  }\\r\\n\\r\\n  .highlighted {\\r\\n    background: silver;\\r\\n    color: black;\\r\\n  }\\r\\n\\r\\n  .notdisplay {\\r\\n    display:none;\\r\\n  }\\r\\n\\r\\n  .label_size {\\r\\n    font-size: 12px;\\r\\n  }\\r\\n  \\r\\n  .BoldLarge {\\r\\n    font-weight: bold;\\r\\n    font-size: inherit;\\r\\n    height: 40px !important;\\r\\n    color: inherit;\\r\\n  }\\r\\n\\r\\n  .FinalBoldLarge {\\r\\n    font-weight: bold;\\r\\n    font-size: inherit;\\r\\n    line-height: 40px !important;\\r\\n    color: inherit;\\r\\n  }\\r\\n\\r\\n  .FinalBoldtd {\\r\\n    white-space: inherit;\\r\\n    /* height: 35px; */\\r\\n    overflow: hidden;\\r\\n    padding-left: 5px;\\r\\n    padding-right: 3px;\\r\\n    line-height: 10px;\\r\\n    font-weight: bold;\\r\\n  }\\r\\n\\r\\n  .BoldLargeRed {\\r\\n    font-weight: bold;\\r\\n    font-size: inherit;\\r\\n    height: 40px !important;\\r\\n    color: red !important;\\r\\n  }\\r\\n\\r\\n  .FinalBoldLargeRed {\\r\\n    font-weight: bold;\\r\\n    font-size: inherit;\\r\\n    line-height: 40px !important;\\r\\n    color: red !important;\\r\\n  }\\r\\n\\r\\n  pre{\\r\\n    color: inherit;\\r\\n  }\\r\\n\\r\\n  .noRightBorder {\\r\\n    border-right:none !important;\\r\\n  }\\r\\n\\r\\n  .noLeftBorder {\\r\\n    border-left:none !important;\\r\\n  }\\r\\n  .form-input{\\r\\n    display: flex;\\r\\n    align-items: center;\\r\\n    margin-bottom: 7px;\\r\\n  }\\r\\n  .form-input label{\\r\\n    width: 45%;\\r\\n  }\\r\\n  .format-btn{\\r\\n    margin-right: 7px;\\r\\n  }\\r\\n  @media screen and (max-width:991px) {\\r\\n    .LoadSheetMenus tbody{\\r\\n      display: flex !important;\\r\\n      overflow-y: inherit !important;\\r\\n\\r\\n    }\\r\\n    .LoadSheetMenus tbody tr{\\r\\n     \\r\\n      table-layout: initial !important;\\r\\n\\r\\n    }\\r\\n    .table-containerHeight{\\r\\n      height: 58vh;\\r\\n    }\\r\\n    \\r\\n  }\\r\\n</style>\\r\\n\\r\\n<div class=\\\"clearfix\\\" style=\\\"background: #fff;\\\">\\r\\n  <div class=\\\"col-md-12\\\" style=\\\"margin-top: 12px;\\\">\\r\\n    <label style=\\\"font-size:18px;margin-left: 19px; font-family:Roboto, Arial, sans-serif;\\\" class=\\\"modal-title bold_text\\\">{{reportDisplayName | titlecase}}&nbsp;&nbsp;</label>\\r\\n    <ng-container *ngIf=\\\"reportparam && reportname\\\">\\r\\n      <b><label *ngIf=\\\"labelDisplayName\\\" class=\\\"label_size\\\">{{labelDisplayName}}:&nbsp;</label>\\r\\n        <label *ngIf=\\\"ledgerDisplayName\\\" class=\\\"label_size\\\">{{ledgerDisplayName}}&nbsp;&nbsp;</label>\\r\\n        <label *ngIf=\\\"subledgerlabelDisplayName\\\" class=\\\"label_size\\\">{{subledgerlabelDisplayName}}:&nbsp;</label>\\r\\n        <label *ngIf=\\\"subledgerDisplayName\\\" class=\\\"label_size\\\">{{subledgerDisplayName}}&nbsp;&nbsp;</label>\\r\\n        <label class=\\\"label_size\\\" style=\\\"font-family:Roboto, Arial, sans-serif;\\\"\\r\\n          *ngIf=\\\"(reportparam.DATE1 || reportparam.DATE2 || reportparam.DATE) && (reportname!='vat register report' && reportname!='vat register report_1')\\\">@As\\r\\n          On Dated:&nbsp;</label>\\r\\n        <label class=\\\"label_size\\\" style=\\\"font-family:Roboto, Arial, sans-serif;\\\"\\r\\n          *ngIf=\\\"reportparam.DATE1 && (reportname!='vat register report' && reportname!='vat register report_1')\\\">{{reportparam.DATE1}}&nbsp;&nbsp;</label>\\r\\n        <label class=\\\"label_size\\\" style=\\\"font-family:Roboto, Arial, sans-serif;\\\"\\r\\n          *ngIf=\\\"reportparam.DATE && (reportname!='vat register report' && reportname!='vat register report_1')\\\">{{reportparam.DATE}}&nbsp;&nbsp;</label>\\r\\n        <label class=\\\"label_size\\\" style=\\\"font-family:Roboto, Arial, sans-serif;\\\"\\r\\n          *ngIf=\\\"reportparam.DATE2 && (reportname!='vat register report' && reportname!='vat register report_1')\\\">To&nbsp;</label>\\r\\n        <label class=\\\"label_size\\\" style=\\\"font-family:Roboto, Arial, sans-serif;\\\"\\r\\n          *ngIf=\\\"reportparam.DATE2 && (reportname!='vat register report' && reportname!='vat register report_1')\\\">{{reportparam.DATE2}}</label>\\r\\n        <label class=\\\"label_size\\\" style=\\\"font-family:Roboto, Arial, sans-serif;\\\"\\r\\n          *ngIf=\\\"reportparam.DATE1 && reportparam.DATE2 && (reportname!='vat register report' && reportname!='vat register report_1')\\\">({{FromdateInAD}}\\r\\n          - {{TodateInAD}})</label></b>\\r\\n      <b><label class=\\\"label_size\\\" style=\\\"font-family:Roboto, Arial, sans-serif;\\\"\\r\\n          *ngIf=\\\"reportparam.DATE && (reportname!='vat register report' && reportname!='vat register report_1')\\\">({{FromdateInAD}})</label></b>\\r\\n      <b><label class=\\\"label_size\\\" style=\\\"font-family:Roboto, Arial, sans-serif;\\\" *ngIf=\\\"reportmodeisZero == 0\\\">(@As On Dated:</label>&nbsp;<label\\r\\n          *ngIf=\\\"reportmodeisZero == 0\\\">{{reportparam.DATE1}}&nbsp;</label>\\r\\n        <label  class=\\\"label_size\\\" style=\\\"font-family:Roboto, Arial, sans-serif;\\\" *ngIf=\\\"reportmodeisZero == 0\\\">To&nbsp;</label><label\\r\\n          *ngIf=\\\"reportmodeisZero == 0\\\">{{reportparam.DATE2}}</label>\\r\\n        <label *ngIf=\\\"reportmodeisZero == 0\\\" style=\\\"font-family:Roboto, Arial, sans-serif;\\\" class=\\\"label_size\\\">({{FromdateInAD}} - {{TodateInAD}}))</label></b>\\r\\n        <b><label class=\\\"label_size\\\" style=\\\"width: auto; font-family:Roboto, Arial, sans-serif;\\\"\\r\\n          *ngIf=\\\"divisionDisplayName\\\" >@Division: {{divisionDisplayName}}&nbsp;</label></b>\\r\\n          <b><label class=\\\"label_size\\\" style=\\\"width: auto; font-family:Roboto, Arial, sans-serif;\\\"\\r\\n            *ngIf=\\\"costcenterCategoryDisplayName\\\" >@Cost Center Category: {{costcenterCategoryDisplayName}}&nbsp;</label></b>\\r\\n          <b><label class=\\\"label_size\\\" style=\\\"width: auto; font-family:Roboto, Arial, sans-serif;\\\"\\r\\n          *ngIf=\\\"costcenterDisplayName\\\" >@Cost Center: {{costcenterDisplayName}}&nbsp;</label></b>\\r\\n        <!-- <b><label *ngIf=\\\"costcenterDisplayName\\\" style=\\\"font-family:Roboto, Arial, sans-serif;\\\" class=\\\"label_size\\\">@Cost Center:&nbsp;</label><label\\r\\n            *ngIf=\\\"costcenterDisplayName\\\">{{costcenterDisplayName}}</label></b> -->\\r\\n      <b><label *ngIf=\\\"reportmodeisZero == 1\\\" style=\\\"font-family:Roboto, Arial, sans-serif;\\\" class=\\\"label_size\\\">(@Voucher Range From&nbsp;</label><label\\r\\n          *ngIf=\\\"reportmodeisZero == 1\\\">{{reportparam.FROM_VNO}}</label>\\r\\n        <label *ngIf=\\\"reportmodeisZero == 1\\\" style=\\\"font-family:Roboto, Arial, sans-serif;\\\"class=\\\"label_size\\\">To</label>&nbsp;<label\\r\\n          *ngIf=\\\"reportmodeisZero == 1\\\">{{reportparam.TO_VNO}})</label></b>\\r\\n      <b><label *ngIf=\\\"detailreportDisplayName\\\" style=\\\"font-family:Roboto, Arial, sans-serif;\\\" class=\\\"label_size\\\">{{detailreportDisplayName}}</label></b>\\r\\n      <b><label class=\\\"label_size\\\" style=\\\"font-family:Roboto, Arial, sans-serif;\\\"\\r\\n          *ngIf=\\\"accountDisplayName && (reportname=='vat register report' || reportname=='vat register report_1' ||\\r\\n          this.reportname == 'Cash/Bank Book Report' || this.reportname == 'Cash/Bank Book Report_1' ||this.reportname == 'Cash/Bank Book Report_2')\\\">(@Account:&nbsp;</label>\\r\\n        <label class=\\\"label_size\\\" style=\\\"font-family:Roboto, Arial, sans-serif;\\\"\\r\\n          *ngIf=\\\"accountDisplayName && (reportname=='vat register report' || reportname=='vat register report_1' ||\\r\\n          this.reportname == 'Cash/Bank Book Report' || this.reportname == 'Cash/Bank Book Report_1' ||this.reportname == 'Cash/Bank Book Report_2')\\\">{{accountDisplayName}})</label></b>\\r\\n      <b><label class=\\\"label_size\\\" style=\\\"font-family:Roboto, Arial, sans-serif;\\\"\\r\\n          *ngIf=\\\"entryuserDisplayName && (reportname=='vat register report' || reportname=='vat register report_1' || reportname=='Day Book Report' || reportname=='Day Book Report_1')\\\">(@User:&nbsp;</label>\\r\\n        <label class=\\\"label_size\\\" style=\\\"font-family:Roboto, Arial, sans-serif;\\\"\\r\\n          *ngIf=\\\"entryuserDisplayName && (reportname=='vat register report' || reportname=='vat register report_1' || reportname=='Day Book Report' || reportname=='Day Book Report_1')\\\">{{entryuserDisplayName}})</label></b>\\r\\n      <b><label class=\\\"label_size\\\" style=\\\"font-family:Roboto, Arial, sans-serif;\\\" *ngIf=\\\"supplierDisplayName\\\">(@Supplier:&nbsp;</label><label\\r\\n          *ngIf=\\\"supplierDisplayName\\\">{{supplierDisplayName}})</label></b>\\r\\n      <b><label class=\\\"label_size\\\" style=\\\"font-family:Roboto, Arial, sans-serif;\\\" *ngIf=\\\"voucherDisplayName\\\">(@Voucher No:&nbsp;</label><label\\r\\n          *ngIf=\\\"voucherDisplayName\\\">{{voucherDisplayName}})</label></b>\\r\\n      <b><label class=\\\"label_size\\\" style=\\\"font-family:Roboto, Arial, sans-serif;\\\" *ngIf=\\\"reportTypeDisplay\\\"></label><label\\r\\n          *ngIf=\\\"reportTypeDisplay\\\">{{reportTypeDisplay}}</label></b>\\r\\n      <b><label class=\\\"label_size\\\" style=\\\"width: auto; font-family:Roboto, Arial, sans-serif;\\\"\\r\\n          *ngIf=\\\"AreawiseDisplayName\\\" >@Area: {{AreawiseDisplayName}}&nbsp;</label></b>\\r\\n      <b><label class=\\\"label_size\\\" style=\\\"width: auto; font-family:Roboto, Arial, sans-serif;\\\"\\r\\n          *ngIf=\\\"PartyGroupDisplayName\\\" >@PartyGroup: {{PartyGroupDisplayName}}&nbsp;</label></b>\\r\\n      <b><label class=\\\"label_size\\\" style=\\\"width: auto; font-family:Roboto, Arial, sans-serif;\\\"\\r\\n          *ngIf=\\\"PartyCategoryDisplayName\\\" >@PartyCategory: {{PartyCategoryDisplayName}}&nbsp;</label></b>\\r\\n          <b><label class=\\\"label_size\\\" style=\\\"width: auto; font-family:Roboto, Arial, sans-serif;\\\"\\r\\n            *ngIf=\\\"INTERVALNAME\\\" >@Interval: {{INTERVALNAME}}&nbsp;</label></b>\\r\\n   \\r\\n          \\r\\n    </ng-container>\\r\\n    <!-- <ng-container *ngIf=\\\"reportname && reportname =='Additional Cost Detail Report'\\\">\\r\\n      <button type=\\\"button\\\" class=\\\"btn btn-info\\\" (click)=\\\"SaveReport()\\\">Save</button>\\r\\n    </ng-container> -->\\r\\n    <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" style=\\\"margin-right: 3%;margin-top: 5px;\\\"\\r\\n      (click)=\\\"closeReport(this.activeurlpath)\\\">&times;</button>\\r\\n  </div>\\r\\n  <div class=\\\" plainBackGround toggable-sidebar\\\" [ngClass]=\\\"{ 'mySidenav-show': hideShow }\\\">\\r\\n    <button class=\\\"btn btn-info btn-toggler\\\" (click)=\\\"hideShow = !hideShow\\\">\\r\\n      <span class=\\\"glyphicon glyphicon-search\\\"></span>\\r\\n      <i class=\\\" fa fa-angle-double-left\\\" [ngClass]=\\\"{ 'toggler-btn-icon-reverse': hideShow }\\\"></i>\\r\\n    </button>\\r\\n    <input class=\\\"form-control\\\" style=\\\"width: 250px;height:25px;\\r\\n                  margin-right: 50px;\\r\\n                  margin-bottom: 10px;\\\" type=\\\"text\\\" name=\\\"search\\\" [(ngModel)]=\\\"filter\\\" placeholder=\\\"Search in report\\\">\\r\\n  </div>\\r\\n</div>\\r\\n<div class=\\\"clearfix\\\"  style=\\\"background: #fff;\\\">\\r\\n  <div style=\\\"float:left;width:3%; margin-left: 10px;\\\">\\r\\n    <table class=\\\"LoadSheetMenus\\\" style=\\\"margin-left:-7px; \\\">\\r\\n      <tr style=\\\"height:30px;width:30px\\\">\\r\\n        <td style=\\\"border: 1pt solid black;\\\" class=\\\"cell-with-comment\\\">\\r\\n          <i (click)=\\\"fiterClickEvent()\\\" tooltip-placement=\\\"right\\\" tooltip=\\\"Main filters\\\" style=\\\"margin:5px\\\"><span\\r\\n              class=\\\"glyphicon glyphicon-filter\\\" tooltip=\\\"Main filters\\\">\\r\\n            </span></i>\\r\\n          <span class=\\\"cell-comment\\\">\\r\\n            View Report Dialog Box [F2]\\r\\n          </span>\\r\\n        </td>\\r\\n      </tr>\\r\\n      <!-- <tr style=\\\"height:30px;width:30px\\\">\\r\\n        <td style=\\\"border: 1pt solid black;\\\">\\r\\n          <i (click)=\\\"SettingClickEvent()\\\" style=\\\"margin:5px\\\"> <span class=\\\"glyphicon glyphicon-grain\\\"></span></i>\\r\\n        </td>\\r\\n      </tr> -->\\r\\n      <tr style=\\\"height:30px;width:30px\\\">\\r\\n        <td style=\\\"border: 1pt solid black;\\\" class=\\\"cell-with-comment\\\">\\r\\n          <i (click)=\\\"ExportReportInExcel('xlsx')\\\" style=\\\"margin:5px\\\"> <span class=\\\"glyphicon glyphicon-export\\\"></span></i>\\r\\n          <span class=\\\"cell-comment\\\">\\r\\n            Save To Excel [F9]\\r\\n          </span>\\r\\n        </td>\\r\\n      </tr>\\r\\n      <tr style=\\\"height:30px;width:30px\\\">\\r\\n        <td style=\\\"border: 1pt solid black;\\\">\\r\\n          <i (click)=\\\"SaveInReportColumnFormat()\\\" style=\\\"margin:5px\\\"> <span\\r\\n              class=\\\"glyphicon glyphicon-tasks\\\"></span></i>\\r\\n        </td>\\r\\n      </tr>\\r\\n      <tr style=\\\"height:30px;width:30px\\\">\\r\\n        <td style=\\\"border: 1pt solid black;\\\" class=\\\"cell-with-comment\\\">\\r\\n          <i (click)=\\\"showPreviouslyLoadedReports()\\\" style=\\\"margin:5px\\\"> <span\\r\\n              class=\\\"glyphicon glyphicon-open-file\\\"></span></i>\\r\\n          <span class=\\\"cell-comment\\\">\\r\\n            Open Report List [Shift+Tab]\\r\\n          </span>\\r\\n        </td>\\r\\n      </tr>\\r\\n      <tr style=\\\"height:30px;width:30px\\\">\\r\\n        <td style=\\\"border: 1pt solid black;\\\" class=\\\"cell-with-comment\\\">\\r\\n          <i (click)=\\\"printExcelFormat()\\\" style=\\\"margin:5px\\\"> <span class=\\\"glyphicon glyphicon-print\\\"></span></i>\\r\\n          <span class=\\\"cell-comment\\\">\\r\\n            Print Excel Format [Shift+P]\\r\\n          </span>\\r\\n        </td>\\r\\n      </tr>\\r\\n      <tr style=\\\"height:30px;width:30px\\\">\\r\\n        <td style=\\\"border: 1pt solid black;\\\" class=\\\"cell-with-comment\\\">\\r\\n          <i (click)=\\\"ExportReportInExcel('zip')\\\" style=\\\"margin:5px\\\"> <span class=\\\"glyphicon glyphicon-download\\\"></span></i>\\r\\n          <span class=\\\"cell-comment\\\">\\r\\n            Save To Excel in Zip\\r\\n          </span>\\r\\n        </td>\\r\\n      </tr>\\r\\n      <!-- <tr style=\\\"height:30px;width:30px\\\" *ngIf=\\\"(reportname == 'Debtors Report' || reportname == 'Debtors Report_1')\\\">\\r\\n        <td style=\\\"border: 1pt solid black;\\\" class=\\\"cell-with-comment\\\">\\r\\n          <i (click)=\\\"showcellpayPopup()\\\" style=\\\"margin:5px\\\"> <span class=\\\"glyphicon glyphicon-hand-right\\\"></span></i>\\r\\n          <span class=\\\"cell-comment\\\">\\r\\n            Cellpay Payment\\r\\n          </span>\\r\\n        </td>\\r\\n      </tr> -->\\r\\n\\r\\n    </table>\\r\\n\\r\\n  </div>\\r\\n  <div style=\\\"float:right;width:96%\\\" class=\\\"report-table\\\">\\r\\n    <div class=\\\"widgets\\\">\\r\\n      <div class=\\\"row table-container table-containerHeight\\\">\\r\\n        <table id=\\\"BlueHeaderResizableTable\\\" #reportHtmlTable\\r\\n          style=\\\"font-size:12px; width: 98%;overflow-x :auto;overflow-y :scroll;height:93%;\\\" class=\\\"reportTabel\\\">\\r\\n          <thead *ngIf=\\\"optionalreportHeaders.length\\\" style=\\\"width: 100%;font-weight: bold;\\\" [ngClass]=\\\"{'table-first-header':optionalreportHeaders.length}\\\">\\r\\n            <tr style=\\\"height: 25px;\\\">\\r\\n              <th *ngFor=\\\"let column1 of optionalreportHeaders;let id=index\\\" [style.text-align]=\\\"column1['alignment']\\\"\\r\\n                [attr.colspan]=\\\"column1.colspan\\\" width=\\\"{{column1.width}}\\\" style=\\\"font-weight: bold;text-align: center;\\\"\\r\\n              [ngClass]=\\\"(((column1.mappingName=='MAIN GROUP'  || column1.mappingName=='MAINGROUP' || column1.mappingName=='SUB GROUP_A' || column1.mappingName=='SUBGROUP_A' ||\\r\\n              column1.mappingName=='SUB GROUP_B' || column1.mappingName=='SUBGROUP_B' ||column1.mappingName=='SUB GROUP_C' || column1.mappingName=='SUBGROUP_C' ||\\r\\n              column1.mappingName=='CATEGORY') && this.reportparam.SHOWGROUPING == 0)?'notdisplay':'') || \\r\\n              (((column1.mappingName=='SL_BL' || column1.mappingName=='BL_SL' || column1.mappingName=='SL_BL_A' || column1.mappingName=='BL_SL_A') && this.reportparam.SHOWSUBLEDGER == 0)?'notdisplay':'')\\\">\\r\\n              {{column1['colGroup']}}\\r\\n              </th>\\r\\n            </tr>\\r\\n\\r\\n          </thead>\\r\\n          <thead style=\\\"width: 100%;\\\" [ngClass]=\\\"{'table-second-header':optionalreportHeaders.length, 'table-first-header':!optionalreportHeaders.length}\\\">\\r\\n              <tr style=\\\"height: 25px;\\\">\\r\\n                <!-- <th *ngIf=\\\"(reportname == 'Debtors Report' || reportname == 'Debtors Report_1') && mergereportHeaders.length\\\" style=\\\"width: 20px;\\\"></th> -->\\r\\n                <th *ngFor=\\\"let column1 of mergereportHeaders;let i=index\\\" style=\\\"font-weight: bold;text-align: center;\\\"\\r\\n                  width=\\\"{{column1.width}}\\\" [ngStyle]=\\\"getReportHeadingStyles()\\\" [ngClass]=\\\"[(((column1.mappingName=='MAIN GROUP'  || column1.mappingName=='MAINGROUP' || column1.mappingName=='SUB GROUP_A' || column1.mappingName=='SUBGROUP_A' ||\\r\\n                                          column1.mappingName=='SUB GROUP_B' || column1.mappingName=='SUBGROUP_B' ||column1.mappingName=='SUB GROUP_C' || column1.mappingName=='SUBGROUP_C' ||\\r\\n                                          column1.mappingName=='CATEGORY') && this.reportparam.SHOWGROUPING == 0)?'notdisplay':'') || \\r\\n                                          (((column1.mappingName=='SL_BL' || column1.mappingName=='BL_SL' || column1.mappingName=='SL_BL_A' || column1.mappingName=='BL_SL_A') && this.reportparam.SHOWSUBLEDGER == 0)?'notdisplay':''),\\r\\n                                          (reportname=='Profit Loss Report' || reportname=='Balance Sheet Report') && ShowLineInFinalReport==0? ((i+1 == 2 || i+1 == 3 || i+1 == 4) ? 'noRightBorder':'') : '',\\r\\n                                          (reportname=='Profit Loss Report' || reportname=='Balance Sheet Report') && ShowLineInFinalReport==0? ((i+1 == 3 || i+1 == 4 || i+1 == 5) ? 'noLeftBorder':'') : '',\\r\\n                                          (reportname == 'PLACCOUNT' || reportname=='BALANCESHEET') && ShowLineInFinalReport==0 ? ((i+1 == 1 || i+1 == 2 || i+1 == 3 || i+1 == 7 || i+1 == 8 || i+1 == 9) ? 'noRightBorder':'') : '',\\r\\n                                          (reportname == 'PLACCOUNT' || reportname=='BALANCESHEET') && ShowLineInFinalReport==0 ? ((i+1 == 2 || i+1 == 3 || i+1 == 4 || i+1 == 8 || i+1 == 9 || i+1 == 10) ? 'noLeftBorder':'') : ''\\r\\n                                          ]\\\">\\r\\n                  {{column1.colHeader}}\\r\\n                </th>\\r\\n              </tr>\\r\\n          </thead>\\r\\n            <tbody style=\\\"width: fit-content;\\\" #body>\\r\\n              <ng-container *ngIf=\\\"reportname!='PLACCOUNT' && reportname!='BALANCESHEET'\\\">\\r\\n                <tr\\r\\n                *ngFor=\\\" let data of reportData | filter:filter | paginate: { itemsPerPage: rowsperpage, currentPage: p };let i=index\\\"\\r\\n                (dblclick)=\\\"drillDownReport(data)\\\" (contextmenu)=\\\"onRightClick($event,data)\\\"\\r\\n                [ngClass]=\\\"[data.FFLG=='B'?'Bold':'Regular',data.FFLG=='BL'?'BoldLarge':'Regular',data.FFLG=='BR'?'BoldLargeRed':'Regular']\\\" [class.active]=\\\"i == HighlightRow\\\" (click)=\\\"clicked(i)\\\">\\r\\n  <!-- <td *ngIf=\\\"(reportname == 'Debtors Report' || reportname == 'Debtors Report_1') && reportData.length\\\" style=\\\"width: 20px;\\\">\\r\\n    <input type=\\\"checkbox\\\" [(ngModel)]=\\\"data.isCheck\\\" (change)=\\\"checkData(i,data)\\\">\\r\\n  </td> -->\\r\\n                <td [ngClass]=\\\"[(data.FFLG=='B')? 'Boldtd':'Regulartd' , \\r\\n                (reportname=='Profit Loss Report' || reportname=='Balance Sheet Report') && ShowLineInFinalReport==0 ? ((id+1 == 2 || id+1 == 3 || id+1 == 4) ? 'noRightBorder':'') : '',\\r\\n                (reportname=='Profit Loss Report' || reportname=='Balance Sheet Report') && ShowLineInFinalReport==0? ((id+1 == 3 || id+1 == 4 || id+1 == 5) ? 'noLeftBorder':'') : '',\\r\\n                (((column.mappingName=='MAIN GROUP' || column.mappingName=='MAINGROUP' || column.mappingName=='SUB GROUP_A' || \\r\\n                column.mappingName=='SUBGROUP_A' || column.mappingName=='SUB GROUP_B' || column.mappingName=='SUBGROUP_B' ||column.mappingName=='SUB GROUP_C' || \\r\\n                column.mappingName=='SUBGROUP_C' ||\\r\\n                column.mappingName=='CATEGORY')  && this.reportparam.SHOWGROUPING == 0)? 'notdisplay':'') || \\r\\n                (((column.mappingName=='SL_BL' || column.mappingName=='BL_SL' || column.mappingName=='SL_BL_A' || column.mappingName=='BL_SL_A') && this.reportparam.SHOWSUBLEDGER == 0)?'notdisplay':'')\\r\\n\\r\\n                ]\\\"\\r\\n                 *ngFor=\\\"let column of reportHeaders;let id=index\\\"\\r\\n                  width=\\\"{{column.width}}\\\" [style.text-align]=\\\"column.alignment==0?'inherit':'end'\\\" style=\\\"height: 20px !important;\\\">\\r\\n   \\r\\n                   <pre style=\\\"margin: 0 !important;overflow: hidden;\\\" [ngStyle]=\\\"getReportDetailStyles()\\\">{{data[column.mappingName]}}</pre>\\r\\n                   </td>\\r\\n              </tr>\\r\\n              </ng-container>\\r\\n              <ng-container *ngIf=\\\"reportname=='PLACCOUNT' || reportname=='BALANCESHEET'\\\">\\r\\n                <tr style=\\\"width:100%;\\\"\\r\\n                *ngFor=\\\" let data of reportData | filter:filter | paginate: { itemsPerPage: rowsperpage, currentPage: p };let i=index\\\"\\r\\n                (dblclick)=\\\"drillDownReport(data)\\\" (contextmenu)=\\\"onRightClick($event,data)\\\" [class.active]=\\\"i == HighlightRow\\\" >\\r\\n                <ng-container *ngFor=\\\"let column of reportHeaders;let j=index\\\">\\r\\n                  <td [ngClass]=\\\"[(data.FFLG1=='B')? 'FinalBoldtd':'Regulartd' ,(data.FFLG1=='BL')? 'FinalBoldLarge':'Regulartd',(data.FFLG1=='BR')? 'FinalBoldLargeRed':'Regulartd',\\r\\n                   (((column.mappingName=='MAIN GROUP' || column.mappingName=='MAINGROUP' || column.mappingName=='SUB GROUP_A' || \\r\\n                  column.mappingName=='SUBGROUP_A' || column.mappingName=='SUB GROUP_B' || column.mappingName=='SUBGROUP_B' ||column.mappingName=='SUB GROUP_C' || \\r\\n                  column.mappingName=='SUBGROUP_C' ||\\r\\n                  column.mappingName=='CATEGORY')  && this.reportparam.SHOWGROUPING == 0)? 'notdisplay':'') ||\\r\\n                  (((column.mappingName=='SL_BL' || column.mappingName=='BL_SL' || column.mappingName=='SL_BL_A' || column.mappingName=='BL_SL_A') && this.reportparam.SHOWSUBLEDGER == 0)?'notdisplay':''),\\r\\n                  ((j+1 == 1 || j+1 == 2 || j+1 == 3) && ShowLineInFinalReport==0 ? 'noRightBorder':''),\\r\\n                  ((j+1 == 2 || j+1 == 3 || j+1 == 4) && ShowLineInFinalReport==0? 'noLeftBorder':''),\\r\\n                  ((j+1 == 7 || j+1 == 8 || j+1 == 9) && ShowLineInFinalReport==0? 'noRightBorder':''),\\r\\n                  ((j+1 == 8 || j+1 == 9 || j+1 == 10) && ShowLineInFinalReport==0? 'noLeftBorder':'')\\r\\n                  ]\\\"\\r\\n                   *ngIf=\\\"j+1<=leftcolumnnumber+1\\\"\\r\\n                    width=\\\"{{column.width}}\\\" [style.text-align]=\\\"column.alignment==0?'inherit':'end'\\\" style=\\\"height: 20px !important;\\\" (click)=\\\"clickedPL(j,column)\\\">\\r\\n     \\r\\n                     <pre style=\\\"margin: 0 !important;overflow: hidden;\\\" [ngStyle]=\\\"getReportDetailStyles()\\\">{{data[column.mappingName]}}</pre>\\r\\n                     </td>\\r\\n                </ng-container>\\r\\n                <ng-container *ngFor=\\\"let column of reportHeaders;let k=index\\\">\\r\\n                  <td [ngClass]=\\\"[(data.FFLG2=='B')? 'FinalBoldtd':'Regulartd' ,(data.FFLG2=='BL')? 'FinalBoldLarge':'Regulartd',(data.FFLG2=='BR')? 'FinalBoldLargeRed':'Regulartd',\\r\\n                   (((column.mappingName=='MAIN GROUP' || column.mappingName=='MAINGROUP' || column.mappingName=='SUB GROUP_A' || \\r\\n                  column.mappingName=='SUBGROUP_A' || column.mappingName=='SUB GROUP_B' || column.mappingName=='SUBGROUP_B' ||column.mappingName=='SUB GROUP_C' || \\r\\n                  column.mappingName=='SUBGROUP_C' ||\\r\\n                  column.mappingName=='CATEGORY')  && this.reportparam.SHOWGROUPING == 0)? 'notdisplay':'') ||\\r\\n                  (((column.mappingName=='SL_BL' || column.mappingName=='BL_SL' || column.mappingName=='SL_BL_A' || column.mappingName=='BL_SL_A') && this.reportparam.SHOWSUBLEDGER == 0)?'notdisplay':''),\\r\\n                  ((k+1 == 1 || k+1 == 2 || k+1 == 3) && ShowLineInFinalReport==0? 'noRightBorder':''),\\r\\n                  ((k+1 == 2 || k+1 == 3 || k+1 == 4) && ShowLineInFinalReport==0? 'noLeftBorder':''),\\r\\n                  ((k+1 == 7 || k+1 == 8 || k+1 == 9) && ShowLineInFinalReport==0? 'noRightBorder':''),\\r\\n                  ((k+1 == 8 || k+1 == 9 || k+1 == 10) && ShowLineInFinalReport==0? 'noLeftBorder':'')\\r\\n                  ]\\\"\\r\\n                   *ngIf=\\\"k+1 >= rightcolumnnumber\\\"\\r\\n                    width=\\\"{{column.width}}\\\" [style.text-align]=\\\"column.alignment==0?'inherit':'end'\\\" style=\\\"height: 20px !important;\\\">\\r\\n     \\r\\n                     <pre style=\\\"margin: 0 !important;overflow: hidden;  \\\" [ngStyle]=\\\"getReportDetailStyles()\\\">{{data[column.mappingName]}}</pre>\\r\\n                     </td>\\r\\n                </ng-container>\\r\\n               \\r\\n              </tr>\\r\\n              </ng-container>\\r\\n \\r\\n            </tbody>\\r\\n       \\r\\n          <tfoot style=\\\"margin-bottom: 0.5%;width: 100%;\\\">\\r\\n            <tr *ngFor=\\\" let data of reportFooter\\\"\\r\\n              style=\\\"font-weight: bold;font-size: inherit;height: 20px !important;color: inherit;\\\">\\r\\n              <!-- <td *ngIf=\\\"(reportname == 'Debtors Report' || reportname == 'Debtors Report_1') && reportFooter.length\\\" style=\\\"height: 30px !important;background: #ABDCFB;width: 20px;\\\">\\r\\n              </td> -->\\r\\n              <td *ngFor=\\\"let column of reportHeaders;let i=index\\\" width=\\\"{{column.width}}\\\"\\r\\n                [style.text-align]=\\\"column.alignment==0?'inherit':'end'\\\"\\r\\n                 style=\\\"height: 30px !important;background: #ABDCFB;\\\"\\r\\n                  [ngClass]=\\\"[(((column.mappingName=='MAIN GROUP'  || column.mappingName=='MAINGROUP' || column.mappingName=='SUB GROUP_A' || column.mappingName=='SUBGROUP_A' ||\\r\\n                  column.mappingName=='SUB GROUP_B' || column.mappingName=='SUBGROUP_B' ||column.mappingName=='SUB GROUP_C' || column.mappingName=='SUBGROUP_C' ||\\r\\n                  column.mappingName=='CATEGORY') && this.reportparam.SHOWGROUPING == 0)?'notdisplay':'') || \\r\\n                  (((column.mappingName=='SL_BL' || column.mappingName=='BL_SL' || column.mappingName=='SL_BL_A' || column.mappingName=='BL_SL_A') && this.reportparam.SHOWSUBLEDGER == 0)?'notdisplay':''),\\r\\n                  (reportname=='Profit Loss Report' || reportname=='Balance Sheet Report') && ShowLineInFinalReport==0 ? ((i+1 == 2 || i+1 == 3 || i+1 == 4) ? 'noRightBorder':'') : '',\\r\\n                  (reportname=='Profit Loss Report' || reportname=='Balance Sheet Report') && ShowLineInFinalReport==0 ? ((i+1 == 3 || i+1 == 4 || i+1 == 5) ? 'noLeftBorder':'') : '',\\r\\n                  (reportname == 'PLACCOUNT' || reportname=='BALANCESHEET') && ShowLineInFinalReport==0 ? ((i+1 == 1 || i+1 == 2 || i+1 == 3 || i+1 == 7 || i+1 == 8 || i+1 == 9) ? 'noRightBorder':'') : '',\\r\\n                  (reportname == 'PLACCOUNT' || reportname=='BALANCESHEET') && ShowLineInFinalReport==0 ? ((i+1 == 2 || i+1 == 3 || i+1 == 4 || i+1 == 8 || i+1 == 9 || i+1 == 10) ? 'noLeftBorder':'') : ''\\r\\n                  ]\\\">\\r\\n                  <pre style=\\\"margin: 0 !important;overflow: hidden; \\\"\\r\\n                   [ngStyle]=\\\"getReportFooterStyles()\\\">{{data[column.mappingName]}}</pre>\\r\\n                  </td>\\r\\n            </tr>\\r\\n          </tfoot>\\r\\n          <div>\\r\\n            <!-- <div style=\\\"margin-left: 455px;\\\">\\r\\n              <label>Rows Per Page:</label>\\r\\n              <input type=\\\"number\\\" style=\\\"width: 5%;\\\" [(ngModel)]=\\\"rowsperpage\\\"  >\\r\\n            </div> -->\\r\\n            <div style=\\\"text-align: center;margin-bottom: -14px;\\\">\\r\\n              <pagination-controls (pageChange)=\\\"p = $event\\\" (click)=\\\"clickNext()\\\"></pagination-controls>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n\\r\\n        </table>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<div class=\\\"modal fade\\\" bsModal #childModal=\\\"bs-modal\\\" role=\\\"dialog\\\">\\r\\n  <div class=\\\"modal-dialog\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <div class=\\\"modal-header\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" (click)=\\\"this.childModal.hide()\\\">&times;</button>\\r\\n        <h4 class=\\\"modal-title\\\">Information</h4>\\r\\n      </div>\\r\\n      <div class=\\\"modal-body\\\">\\r\\n        {{DialogMessage}}\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"modal-sticky\\\" *ngIf=\\\"showReportColumnFormatPopup\\\"\\r\\n  style=\\\"overflow: auto;right: 5%;width: 90%;z-index: 9999999\\\">\\r\\n\\r\\n  <div class=\\\"modal-content modal-content-main-area reportFormsFields\\\">\\r\\n\\r\\n    <div class=\\\"row\\\" style=\\\"display: flex; margin: 10px 0px;\\\">\\r\\n      <div class=\\\"col-md-2\\\">\\r\\n        <h4 class=\\\"modal-title\\\" id=\\\"myModalLabel\\\">Report Format </h4>\\r\\n      </div>\\r\\n      <div class=\\\"col-lg-10\\\" style=\\\"display: flex; justify-content: right;\\\">\\r\\n        <div class=\\\"format-btn\\\"*ngIf=\\\"ReportColumnName.length > 0\\\" >\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"refreshReportColumns()\\\">Refresh</button>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"format-btn\\\">\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"exportReportFormat()\\\">Export Format</button>\\r\\n        </div>\\r\\n        <div class=\\\"format-btn\\\" >\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"OkCommand()\\\">Save</button>\\r\\n        </div>\\r\\n        \\r\\n        <div class=\\\"format-btn\\\" >\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"CancelCommand()\\\">Cancel</button>\\r\\n        </div>\\r\\n\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n    <div  style=\\\" margin-top: 5px; margin-bottom: 15px; display:flex; \\\">\\r\\n      \\r\\n     \\r\\n      <div class=\\\"col-md-12\\\">\\r\\n        <div class=\\\"row\\\" style=\\\"display:flex\\\">\\r\\n          <div class=\\\"col-lg-4\\\">\\r\\n            <div class=\\\"form-input\\\">\\r\\n              <label class=\\\" label\\\">Report Name</label>\\r\\n             <div >\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" [readonly]=\\\"true\\\" style=\\\"color: black;\\\" [(ngModel)]=\\\"reportname\\\">\\r\\n          </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-input\\\">\\r\\n              <label class=\\\" label\\\" >Report Title</label>\\r\\n              <div >\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"reportTitle\\\" >\\r\\n              </div>\\r\\n\\r\\n            </div>\\r\\n            <div class=\\\"form-input\\\">\\r\\n              <label class=\\\" label\\\">Rows Per Column</label>\\r\\n              <div >\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"rowsperpage\\\" >\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-input\\\">\\r\\n              <label class=\\\" label\\\" >Has Dynamic Columns?</label>\\r\\n              <div class=\\\"\\\">\\r\\n                <select name=\\\"dynamic\\\" id=\\\"dynamiccolumn\\\" [(ngModel)]=\\\"hasDynamicColumns\\\" class=\\\"form-control\\\" style=\\\"padding:0 !important; height:23px !important; font-size: 12px !important;\\\">\\r\\n                  <option value=\\\"1\\\">YES</option>\\r\\n                  <option value=\\\"0\\\">NO</option>\\r\\n                </select>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n          </div>\\r\\n          <div class=\\\"col-lg-4\\\">\\r\\n            <div class=\\\"form-input\\\">\\r\\n              <label class=\\\" label\\\" >Has Dynamic Headers?</label>\\r\\n              <div class=\\\"\\\">\\r\\n                <select name=\\\"dynamicheaders\\\" id=\\\"dynamicheader\\\" [(ngModel)]=\\\"hasDynamicHeaders\\\" class=\\\"form-control input-text-element\\\" style=\\\" height:23px !important;padding:0 !important; font-size: 12px !important;\\\">\\r\\n                  <option value=1>YES</option>\\r\\n                  <option value=0>NO</option>\\r\\n                </select>\\r\\n              </div>\\r\\n              \\r\\n            </div>\\r\\n            <div class=\\\"form-input\\\">\\r\\n              <label class=\\\" label\\\" style=\\\" white-space: nowrap;\\\">Dynamic Column Level</label>\\r\\n              <div class=\\\"\\\">\\r\\n                <input type=\\\"number\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"dynamicColumnLevel\\\"\\r\\n                 \\r\\n                >\\r\\n  \\r\\n              </div>\\r\\n              \\r\\n            </div>\\r\\n            <div class=\\\"form-input\\\">\\r\\n              <label class=\\\" label\\\" style=\\\" white-space: nowrap;\\\">Dynamic Column Width</label>\\r\\n              <div class=\\\"\\\">\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"dynamicColumnWidth\\\"\\r\\n                >\\r\\n  \\r\\n              </div>\\r\\n              \\r\\n            </div>\\r\\n            <div class=\\\"form-input\\\">\\r\\n              <label class=\\\" label\\\" style=\\\"white-space: nowrap;\\\">Left Columns</label>\\r\\n              <div class=\\\"\\\">\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"leftcolumnnumber\\\" >\\r\\n              </div>\\r\\n              \\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"col-lg-4\\\">\\r\\n            <div class=\\\"form-input\\\">\\r\\n              <label class=\\\" label\\\" style=\\\"white-space: nowrap;\\\">Right Columns</label>\\r\\n              <div class=\\\"\\\">\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"rightcolumnnumber\\\" >\\r\\n              </div>\\r\\n\\r\\n            </div>\\r\\n            <div class=\\\"form-input\\\">\\r\\n              <label class=\\\" label\\\">Merge Header?</label>\\r\\n              <div class=\\\"\\\">\\r\\n                <select name=\\\"mergeheader\\\" id=\\\"_mergeheader\\\" [(ngModel)]=\\\"MergeReportHeader\\\" class=\\\"form-control\\\" \\r\\n                style=\\\" height:23px !important; font-size: 12px !important; padding:0 !important;\\\">\\r\\n                  <option value=1>YES</option>\\r\\n                  <option value=0>NO</option>\\r\\n                </select>\\r\\n              </div>\\r\\n              \\r\\n            </div>\\r\\n            <div class=\\\"form-input\\\">\\r\\n              <label class=\\\" label\\\" style=\\\"white-space: nowrap;\\\">Show Line in Final Reports?</label>\\r\\n              <div class=\\\"\\\">\\r\\n                <select name=\\\"lineinfinalreports\\\" id=\\\"_showline\\\" [(ngModel)]=\\\"ShowLineInFinalReport\\\" class=\\\"form-control input-text-element\\\" style=\\\"font-size: 11px; height: 23px !important; padding:0 !important;\\\">\\r\\n                  <option value=1>YES</option>\\r\\n                  <option value=0>NO</option>\\r\\n                </select>\\r\\n              </div>\\r\\n              \\r\\n            </div>\\r\\n\\r\\n          </div>\\r\\n\\r\\n        </div>\\r\\n       \\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n    \\r\\n    <div class=\\\"table-responsive\\\">\\r\\n\\r\\n      <table class=\\\"table\\\" style=\\\"display: grid;\\\">\\r\\n        <thead>\\r\\n          <tr>\\r\\n            <th style=\\\"width: 55px; \\\">SI NO </th>\\r\\n            <th scope=\\\"col\\\" style=\\\"width: 190px; \\\">Column Name</th>\\r\\n            <th scope=\\\"col\\\" style=\\\"width: 190px; \\\">Mapping Name</th>\\r\\n            <th scope=\\\"col\\\" style=\\\"width: 60px; \\\">Show</th>\\r\\n            <th scope=\\\"col\\\" style=\\\"width: 90px; \\\">Col Width</th>\\r\\n            <th scope=\\\"col\\\" style=\\\"width: 100px; \\\">Format</th>\\r\\n            <th scope=\\\"col\\\" style=\\\"width: 75px; \\\">Align</th>\\r\\n            <th scope=\\\"col\\\" style=\\\"width: 120px; \\\">Column Position</th>\\r\\n            <th scope=\\\"col\\\" style=\\\"width: 120px; \\\">Merge Header</th>\\r\\n            <th scope=\\\"col\\\" style=\\\"width: 120px; \\\">Group Summary</th>\\r\\n            <!-- <th scope=\\\"col\\\" style=\\\"width: 140px; \\\">GS Function</th> -->\\r\\n            <th scope=\\\"col\\\" style=\\\"width: 120px; \\\">Table Summary</th>\\r\\n            <!-- <th scope=\\\"col\\\" style=\\\"width: 140px; \\\">TS Function</th> -->\\r\\n          </tr>\\r\\n        </thead>\\r\\n        <tbody>\\r\\n          <tr *ngFor=\\\" let column of ReportColumnName; let i= index ;\\\">\\r\\n            <td style=\\\"width: 55px; \\\">{{i+1}}</td>\\r\\n            <!-- input type=\\\"checkbox\\\" name=\\\"mergeVat\\\" (change)=\\\"$event.target.checked?(ReportParameters.MergeVatAc=1):(ReportParameters.MergeVatAc=0)\\\" [checked]=\\\"ReportParameters.MergeVatAc == 1\\\" -->\\r\\n            <td style=\\\"width: 190px;line-height: 32px; \\\">\\r\\n              <input type=\\\"text\\\" style=\\\"height:26px;margin-top: 2px;\\\" class=\\\"form-control\\\"\\r\\n                [(ngModel)]=\\\"column.ColumnName\\\">\\r\\n            </td>\\r\\n            <td style=\\\"width: 190px;line-height: 32px; \\\">\\r\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" [readonly]=\\\"true\\\"\\r\\n                style=\\\"color: black;height:26px;margin-top: 2px;\\\" [(ngModel)]=\\\"column.MappingName\\\">\\r\\n            </td>\\r\\n            <td style=\\\"width: 60px;line-height: 32px; \\\">\\r\\n              <input type=\\\"checkbox\\\" class=\\\"form-control\\\" style=\\\"height:26px;margin-top: 2px;\\\"\\r\\n                (change)=\\\"column.Show = $event.target.checked?1:0\\\" [(ngModel)]=\\\"column.Show\\\">\\r\\n            </td>\\r\\n            <td style=\\\"width: 90px;line-height: 32px; \\\">\\r\\n              <input type=\\\"number\\\" style=\\\"height:26px;margin-top: 2px;\\\" class=\\\"form-control\\\"\\r\\n                [(ngModel)]=\\\"column.ColWidth\\\">\\r\\n            </td>\\r\\n            <td style=\\\"width: 100px;line-height: 32px; \\\">\\r\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" style=\\\"height:26px;margin-top: 2px;\\\" [(ngModel)]=\\\"column.Format\\\">\\r\\n            </td>\\r\\n            <td style=\\\"width: 75px;line-height: 32px; \\\">\\r\\n              <input type=\\\"number\\\" class=\\\"form-control\\\" style=\\\"height:26px;margin-top: 2px;\\\" [(ngModel)]=\\\"column.Align\\\">\\r\\n            </td>\\r\\n            <td style=\\\"width: 120px;line-height: 32px; \\\">\\r\\n              <input type=\\\"number\\\" class=\\\"form-control\\\" style=\\\"height:26px;margin-top: 2px;\\\"\\r\\n                [(ngModel)]=\\\"column.ColumnPosition\\\">\\r\\n            </td>\\r\\n            <td style=\\\"width: 120px;line-height: 32px; \\\">\\r\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" style=\\\"height:26px;margin-top: 2px;\\\"\\r\\n                [(ngModel)]=\\\"column.ColGroup\\\">\\r\\n            </td>\\r\\n            <td style=\\\"width: 120px;line-height: 32px; \\\">\\r\\n              <input type=\\\"checkbox\\\" class=\\\"form-control\\\" (change)=\\\"column.GroupSummary = $event.target.checked?1:0\\\"\\r\\n                style=\\\"height:26px;margin-top: 2px;\\\" [(ngModel)]=\\\"column.GroupSummary\\\">\\r\\n            </td>\\r\\n            <!-- <td style=\\\"width: 140px; \\\"><input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"column.GSFunction\\\"></td> -->\\r\\n            <td style=\\\"width: 120px;line-height: 32px; \\\">\\r\\n              <input type=\\\"checkbox\\\" (change)=\\\"column.TableSummary = $event.target.checked?1:0\\\" class=\\\"form-control\\\"\\r\\n                style=\\\"height:26px;margin-top: 2px;\\\" [(ngModel)]=\\\"column.TableSummary\\\">\\r\\n            </td>\\r\\n            <!-- <td style=\\\"width: 140px; \\\"><input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"column.TSFunction\\\"></td> -->\\r\\n          </tr>\\r\\n\\r\\n        </tbody>\\r\\n      </table>\\r\\n\\r\\n    </div>\\r\\n\\r\\n    <!-- <div class=\\\"modal-footer\\\">\\r\\n      <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"OkCommand()\\\">Save</button>\\r\\n\\r\\n      <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"CancelCommand()\\\">Cancel</button>\\r\\n    </div> -->\\r\\n  </div>\\r\\n\\r\\n</div>\\r\\n\\r\\n<div class=\\\"modal-sticky\\\" *ngIf=\\\"showReportListDialog\\\" style=\\\"overflow: auto;right: 40%;width: 30%;z-index: 9999999\\\">\\r\\n\\r\\n  <div class=\\\"modal-content modal-content-main-area\\\" #datatable>\\r\\n    <div style=\\\"height: 28px; margin-top: 5px; \\\">\\r\\n      <div class=\\\"col-md-12\\\">\\r\\n        <h4 class=\\\"modal-title\\\" id=\\\"myModalLabel\\\">Loaded Report List</h4>\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"table-responsive\\\">\\r\\n\\r\\n      <table class=\\\"table\\\" style=\\\"display: grid;\\\">\\r\\n        <thead>\\r\\n          <tr>\\r\\n            <th style=\\\"width: 10px; \\\">S.N.</th>\\r\\n            <th>Report Name</th>\\r\\n            <!-- <th style=\\\"width: 1%;\\\" ></th> -->\\r\\n\\r\\n          </tr>\\r\\n        </thead>\\r\\n        <tbody>\\r\\n          <tr *ngFor=\\\" let column of previouslyLoadedReportsList; let i= index ;\\\"\\r\\n            (click)=\\\"onClickLoadedReportList(i,column)\\\" [class.highlighted]=\\\"i === selectedRowIndex\\\">\\r\\n            <td style=\\\"width: 52px; \\\">{{i+1}}</td>\\r\\n            <td #reportnameinlist id=\\\"reportname{{i}}\\\">{{column.reportname}}</td>\\r\\n            <!-- <td style=\\\"width: 1%; cursor: pointer;\\\" (click)=\\\"popReportandClose(column.activeurlpath)\\\">&times;</td> -->\\r\\n          </tr>\\r\\n\\r\\n        </tbody>\\r\\n      </table>\\r\\n\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"modal-footer\\\">\\r\\n      <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"CancelReportList()\\\">Cancel</button>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n</div>\\r\\n\\r\\n<!-- cellpay payment voucher list -->\\r\\n\\r\\n<div class=\\\"modal-sticky\\\" *ngIf=\\\"showCellPayPaymentPopup\\\"\\r\\n  style=\\\"overflow: auto;right: 5%;width: 90%;z-index: 9999999\\\">\\r\\n\\r\\n  <div class=\\\"modal-content modal-content-main-area\\\">\\r\\n    <div style=\\\"height: 28px; margin-top: 5px; \\\">\\r\\n      <div class=\\\"col-md-2\\\">\\r\\n        <h4 class=\\\"modal-title\\\" id=\\\"myModalLabel\\\">Cellpay Payment</h4>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-12\\\">\\r\\n        <div style=\\\"display: flex;\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n          <label class=\\\"col-md-4 label\\\" style=\\\"margin-top: 4px;width: 137px;\\\">Voucher No</label>\\r\\n          <div class=\\\"col-md-3\\\" style=\\\"width:55%;margin-left:4px;\\\">\\r\\n\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" [readonly]=\\\"true\\\" style=\\\"color: black;width: 195px;\\\" [(ngModel)]=\\\"this._trnMainService.TrnMainObj.VCHRNO\\\" disabled>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"row\\\" style=\\\"margin-top:-21px;margin-left: 112px;\\\">\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"OkCellpayCommand()\\\">Save</button>\\r\\n        </div>\\r\\n        \\r\\n        <div class=\\\"row\\\" style=\\\"margin-top:-21px;margin-left:28px\\\">\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"CancelCellpayCommand()\\\">Cancel</button>\\r\\n        </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-12\\\">\\r\\n        <div style=\\\"display: flex;\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n          <label class=\\\"col-md-4 label\\\" style=\\\"margin-top: 4px;width: 137px;\\\">Payment Mode</label>\\r\\n          <div class=\\\"col-md-3\\\" style=\\\"width:55%;margin-left:4px;\\\">\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" [readonly]=\\\"true\\\" style=\\\"color: black;width: 195px;\\\" [(ngModel)]=\\\"this._trnMainService.TrnMainObj.TRNMODE\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\">\\r\\n          <label class=\\\"col-md-4 label\\\" style=\\\"margin-top: 4px;width: 137px;\\\">Cash/Bank</label>\\r\\n          <div class=\\\"col-md-3\\\" style=\\\"width:55%;margin-left:4px;\\\">\\r\\n            <!-- <input type=\\\"text\\\" class=\\\"form-control\\\" [readonly]=\\\"true\\\" style=\\\"color: black;width: 195px;\\\" [(ngModel)]=\\\"this._trnMainService.TrnMainObj.TRNMODE\\\"> -->\\r\\n            <input type=\\\"text\\\"  class=\\\"form-control\\\" [(ngModel)]=\\\"_trnMainService.TrnMainObj.TRNACName\\\" name=\\\"TRNAC\\\" \\r\\n              autocomplete=\\\"off\\\" placeholder=\\\"press ENTER to Select A/C\\\" (keydown.Enter)=\\\"showAcPartyList()\\\" />\\r\\n          </div>\\r\\n        </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"table-responsive\\\">\\r\\n\\r\\n      <table class=\\\"table\\\" style=\\\"display: grid;\\\">\\r\\n        <thead>\\r\\n          <tr>\\r\\n            <th style=\\\"width: 55px; \\\">SNO </th>\\r\\n            <th scope=\\\"col\\\" style=\\\"width: 190px; \\\">Ledger</th>\\r\\n            <th scope=\\\"col\\\" style=\\\"width: 190px; \\\">Amount</th>\\r\\n            <th scope=\\\"col\\\" style=\\\"width: 190px; \\\">Narration</th>\\r\\n            <th scope=\\\"col\\\" style=\\\"width: 190px; \\\">Bank Code</th>\\r\\n            <th scope=\\\"col\\\" style=\\\"width: 190px; \\\">Bank Name</th>\\r\\n          </tr>\\r\\n        </thead>\\r\\n        <tbody>\\r\\n          <tr *ngFor=\\\" let data of this._trnMainService.TrnMainObj.TrntranList; let i= index ;\\\">\\r\\n            <td style=\\\"width: 55px; \\\">{{i+1}}</td>\\r\\n            <td style=\\\"width: 190px;line-height: 32px; \\\">\\r\\n              <input type=\\\"text\\\" style=\\\"height:26px;margin-top: 2px;\\\" class=\\\"form-control\\\"\\r\\n                [(ngModel)]=\\\"data.acitem.ACNAME\\\" disabled>\\r\\n            </td>\\r\\n            <td style=\\\"width: 190px;line-height: 32px; \\\">\\r\\n              <input type=\\\"text\\\" style=\\\"height:26px;margin-top: 2px;\\\" class=\\\"form-control\\\"\\r\\n                [(ngModel)]=\\\"data.DRAMNT\\\" (change)=\\\"AddCellPayFee()\\\" [disabled]=\\\"data.disableCellPayRow == true\\\">\\r\\n            </td>\\r\\n            <td style=\\\"width: 190px;line-height: 32px; \\\">\\r\\n              <input type=\\\"text\\\" style=\\\"height:26px;margin-top: 2px;\\\" class=\\\"form-control\\\"\\r\\n                [(ngModel)]=\\\"data.NARATION\\\" [disabled]=\\\"data.disableCellPayRow == true\\\">\\r\\n            </td>\\r\\n            <td style=\\\"width: 190px;line-height: 32px; \\\">\\r\\n              <input type=\\\"text\\\" style=\\\"height:26px;margin-top: 2px;\\\" class=\\\"form-control\\\"\\r\\n                [(ngModel)]=\\\"data.ChequeNo\\\" [disabled]=\\\"data.disableCellPayRow == true\\\">\\r\\n            </td>\\r\\n            <td style=\\\"width: 190px;line-height: 32px; \\\">\\r\\n              <input type=\\\"text\\\" style=\\\"height:26px;margin-top: 2px;\\\" class=\\\"form-control\\\"\\r\\n                [(ngModel)]=\\\"data.BANKNAME\\\" (keyup.Enter)=\\\"AddCellPayFee()\\\" [disabled]=\\\"data.disableCellPayRow == true\\\">\\r\\n            </td>\\r\\n          </tr>\\r\\n\\r\\n        </tbody>\\r\\n      </table>\\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n</div>\\r\\n<!-- cellpaypayment end -->\\r\\n\\r\\n\\r\\n<div *ngIf=\\\"contextMenuView.show==true\\\">\\r\\n  <app-contextmenu [data]=\\\"contextMenuView\\\"></app-contextmenu>\\r\\n</div>\\r\\n\\r\\n\\r\\n<generic-popup-grid #genericGridACListParty [popupsettings]=\\\"gridACListPartyPopupSettings\\\"\\r\\n  (onItemDoubleClick)=\\\"onAcPartySelect($event)\\\"></generic-popup-grid>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/Reports/components/ReportMain/ReportMain.html\n// module id = 1785\n// module chunks = 0","module.exports = \"<div #modalcontainer class=\\\"modal-container\\\" (mouseout)=\\\"hideContextMenuWithTimer($event)\\\" (mouseover)=\\\"clearContextMenuHideTimer()\\\"\\r\\n     [style.left.px]=\\\"containerPosX\\\" [style.top.px]=\\\"containerPosY\\\">\\r\\n  <div class=\\\"modal-tip\\\" ngClass=\\\"{{isArrowUpward ? 'modal-tip-upward-arrow' : 'modal-tip-downward-arrow'}}\\\"></div>\\r\\n  <ul id=\\\"left-container\\\" class=\\\"left-container\\\">\\r\\n    <li *ngFor=\\\"let item of data.menuItems\\\">\\r\\n      <a (click)=\\\"callSubscriber(item)\\\" href=\\\"javascript:void(0)\\\">{{item.label}}</a>\\r\\n    </li>\\r\\n  </ul>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/Reports/context-menu/context-menu.component.html\n// module id = 1786\n// module chunks = 0","module.exports = function isBuffer(arg) {\n  return arg && typeof arg === 'object'\n    && typeof arg.copy === 'function'\n    && typeof arg.fill === 'function'\n    && typeof arg.readUInt8 === 'function';\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/util/support/isBufferBrowser.js\n// module id = 1879\n// module chunks = 0","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { NguiAutoCompleteModule } from '@ngui/auto-complete';\r\nimport TreeModule from 'angular-tree-component';\r\nimport { ModalModule } from 'ng2-bootstrap';\r\nimport { ContextMenuModule } from 'ngx-contextmenu';\r\nimport { NgxDaterangepickerMd } from 'ngx-daterangepicker-material';\r\nimport { NgxPaginationModule } from 'ngx-pagination';\r\nimport { AutoCompleteModule } from 'primeng/components/autocomplete/autocomplete';\r\nimport { TransactionService } from '../../common/Transaction Components/transaction.service';\r\nimport { NepaliDatePickerModule } from '../../common/nepali-date-picker/nepali-date-picker.module';\r\nimport { GenericPopupGridModule } from '../../common/popupLists/generic-grid/generic-popup-grid.module';\r\nimport { CanActivateTeam } from '../../common/services/permission/guard.service';\r\nimport { Ng2SearchPipeModule } from '../../node_modules/ng2-search-filter';\r\nimport { NgaModule } from '../../theme/nga.module';\r\nimport { AccountLedgerReport } from '../ReportDialogs/AccountLedgerReport/account-ledger-report.component';\r\nimport { ActualVsBudgetReport } from '../ReportDialogs/ActualVsBudget-Report/actualvsbudget-report.component';\r\nimport { AdditionalCostItemwiseReport } from '../ReportDialogs/AdditionalCost-Itemwise-Report/additionalcost-itemwise-report.component';\r\nimport { AdditionalCostVoucherwiseReport } from '../ReportDialogs/AdditionalCost-Voucherwise-Report/additionalcost-voucherwise-report.component';\r\nimport { BalanceSheetReport } from '../ReportDialogs/BalanceSheetReport/balance-sheet-report.component';\r\nimport { BillTrackingReport } from '../ReportDialogs/BillTrackingReport/billtracking-report.component';\r\nimport { CashBankBookReport } from '../ReportDialogs/CashAndBankBookReport/cash-and-bank-book-report.component';\r\nimport { CashBookReport } from '../ReportDialogs/CashBookReport/cashbookreport.component';\r\nimport { ConsolidatedBalanceSheetReport } from '../ReportDialogs/Consolidated-Balance-Sheet-Report/consolidated-balance-sheet-report.component';\r\nimport { ConsolidatedProfitLossReport } from '../ReportDialogs/Consolidated-Profit&Loss-Report/consolidated-profit-loss-report.component';\r\nimport { ConsolidatedTrialBalanceReport } from '../ReportDialogs/Consolidated-Trial-Report/consolidated-trial-balance-report.component';\r\nimport { CreditorsReport } from '../ReportDialogs/Creditors Report/creditorsreport.component';\r\nimport { CrediotrsBillTrackingReport } from '../ReportDialogs/CreditorsBillTrackingReport/creditors-billtracking-report.component';\r\nimport { CurrentStockWarehousWiseReportAccount } from '../ReportDialogs/CurrentStockWarehousewiseReportAccount/currentstock-warehousewisereport-account.component';\r\nimport { DateFilters } from '../ReportDialogs/DateFilters/date-filters.component';\r\nimport { DayBookReport } from '../ReportDialogs/DayBookReport/day-book-report.component';\r\nimport { DebitNoteRegisterReportComponent } from '../ReportDialogs/Debit-Note-Register-Report/debitnote-register-report.component';\r\nimport { DebtorsReport } from '../ReportDialogs/Debtors Report/debtorsreport.component';\r\nimport { DueVoucherReport } from '../ReportDialogs/DueVoucherReport/duevoucherreport';\r\nimport { GstPurchaseSummary } from '../ReportDialogs/GST-Purchase-Summary/gst-purchase-summary.component';\r\nimport { GstSalesSummary } from '../ReportDialogs/GST-Sales-Summary/gst-sales-summary.component';\r\nimport { IncomeTaxDepreciationReport } from '../ReportDialogs/IncomeTax-Depreciation-Report/incometax-depreciation-report.component';\r\nimport { JournalBook } from '../ReportDialogs/JournalBook/journalbook.component';\r\nimport { LocalPurchaseCostAllocationReport } from '../ReportDialogs/LocalPurchasecost-allocation-report/localpurchasecost-allocation-report.component';\r\nimport { MasterDialogReport } from '../ReportDialogs/MasterDialogReport/MasterDialogReport';\r\nimport { MonthlySalesPaymentReport } from '../ReportDialogs/MonthlySalesPaymentReport/monthly-sales-payement-report.component';\r\nimport { OneLakhAboveSALESreportComponent } from '../ReportDialogs/One-Lakh-Above-SALES-Report/one-lakh-above-SALES-report.component';\r\nimport { PartyLedger } from '../ReportDialogs/PartyLedger/partyLedger.component';\r\nimport { PartyLedgerReport } from '../ReportDialogs/PartyLedgerReport/party-ledger-report.component';\r\nimport { PostDatedChequeVoucherReport } from '../ReportDialogs/PostDatedChequeVoucherReport/post-dated-chequereport.component';\r\nimport { ProfitLossReport } from '../ReportDialogs/ProfitLossReport/profit-loss-report.component';\r\nimport { PurchaseBookReport } from '../ReportDialogs/PurchaseBookReport/PurchaseBookReport';\r\nimport { SalesBookReport } from '../ReportDialogs/SalesBookReport/salesbookreport';\r\nimport { SalesReturnReportDetail } from '../ReportDialogs/SalesReturnReportDetail/salesreturn-reportdetail.component';\r\nimport { SalesReturnSummaryReport } from '../ReportDialogs/SalesReturnSummaryReport/salesreturn-summary-report.component';\r\nimport { SalesReturnSummaryRetailerReport } from '../ReportDialogs/SalesReturnSummaryRetailerReport/salesreturnsummary-retailerreport.component';\r\nimport { StockAbcAnalysisReportAccount } from '../ReportDialogs/StockAbcAnalysisReportAccount/stockabc-analysisreport-account.component';\r\nimport { StockLedgerReportAccount } from '../ReportDialogs/StockLedgerReportAcc/stock-ledger-report-account.component';\r\nimport { StockSummaryReportAccount } from '../ReportDialogs/StockSummaryReportAccount/stocksummary-report-account.component';\r\nimport { StockValuationReport } from '../ReportDialogs/StockValuationReport/stock-valuation-report.component';\r\nimport { SubLedgerAcbaseReport } from '../ReportDialogs/SubLedgerAcbaseReport/sub-ledger-acbase-report.component';\r\nimport { SubLedgerReport } from '../ReportDialogs/SubLedgerReport/sub-ledger-report.component';\r\nimport { SummaryLedgerReport } from '../ReportDialogs/SummaryLedgerReport/summaryledgerreport.component';\r\nimport { SummaryPartyLedger } from '../ReportDialogs/SummaryPartyLedger/summary-party-ledger.component';\r\nimport { TDSReport } from '../ReportDialogs/TDS Report/tds-report.comnponent';\r\nimport { TrialBalanceReport } from '../ReportDialogs/Trial-Balance-Report/trial-balance-report.component';\r\nimport { VATpurchaseRegisterReportComponent } from '../ReportDialogs/VAT-Purchase-Register-Report/vat-purchase-register-report.component';\r\nimport { AccountFilters } from '../ReportDialogs/account-filters/account-filters.component';\r\nimport { AccountList } from '../ReportDialogs/account-list/account-list.component';\r\nimport { AccountPayableReport } from '../ReportDialogs/account-payable/account-payable.component';\r\nimport { AccountReceivableReport } from '../ReportDialogs/account-receivable/account-receivable.component';\r\nimport { AgingPayableReport } from '../ReportDialogs/aging-payable/aging-payable.component';\r\nimport { AgingReceivableReport } from '../ReportDialogs/aging-receivable/aging-receivable.component';\r\nimport { AreaFilters } from '../ReportDialogs/area-filters/area-filters.component';\r\nimport { AreaList } from '../ReportDialogs/area-list/area-list.component';\r\nimport { CompanyNormsDepreciationReport } from '../ReportDialogs/companynorms-depreciation-report/companynorms-deprecaition-report.component';\r\nimport { CostcenterFilters } from '../ReportDialogs/costcenter-filter/costcenter-filters.component';\r\nimport { CostcenterList } from '../ReportDialogs/costcenter-list/costcenter-list.component';\r\nimport { CreditorsAgingReport } from '../ReportDialogs/creditors-aging-report/creditors-aging-report.component';\r\nimport { CreditorsOutstandingReport } from '../ReportDialogs/creditors-outstanding-report/creditors-outstanding-report.component';\r\nimport { DebtorsAgingReport } from '../ReportDialogs/debotrs-aging-report/debtors-aging-report.component';\r\nimport { DebtorsOutstandingReport } from '../ReportDialogs/debtors-outstanding-report/debtors-outstanding-report.component';\r\nimport { DivisionComponent } from '../ReportDialogs/division/division.component';\r\nimport { FaarAssetDepreciationReport } from '../ReportDialogs/faarasset-depreciation-report/faarasset-depreciation-report.component';\r\nimport { OneLakhAbovePURCHASEreportComponent } from '../ReportDialogs/one-lakh-above-PURCHASE-report/one-lakh-above-PURCHASE-report.component';\r\nimport { VoucherRegister } from '../ReportDialogs/voucher-register-report/voucher-register-report.component';\r\nimport { ReportsComponent } from './Reports.component';\r\nimport { routing } from './Reports.routing';\r\nimport { ReportMain } from './components/ReportMain/ReportMain';\r\nimport { ContextmenuComponent } from './context-menu/context-menu.component';\r\nimport { CashCollectionVoucherReport } from '../ReportDialogs/Cash-Collection-Voucher-Report/cash-collection-voucher-report.component';\r\n\r\n\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    NgaModule,\r\n    routing,\r\n    ReactiveFormsModule,\r\n    NguiAutoCompleteModule,\r\n    ModalModule.forRoot(),\r\n    NgxPaginationModule,\r\n    AutoCompleteModule,\r\n    Ng2SearchPipeModule,\r\n    NgxDaterangepickerMd.forRoot(),\r\n    GenericPopupGridModule.forRoot(),\r\n    TreeModule,\r\n    ContextMenuModule,\r\n    NepaliDatePickerModule\r\n    ],\r\n  declarations: [\r\n    ContextmenuComponent,\r\n    ReportsComponent,\r\n    ReportMain,\r\n    MasterDialogReport,\r\n    AccountPayableReport,\r\n    AccountReceivableReport,\r\n    GstSalesSummary,\r\n    GstPurchaseSummary,\r\n    AgingPayableReport,\r\n      AgingReceivableReport,\r\n      PurchaseBookReport,\r\n      CashBookReport,\r\n      SalesBookReport,\r\n      JournalBook,\r\n      DueVoucherReport,\r\n      CreditorsReport,\r\n      DebtorsReport,\r\n      PartyLedger,\r\n      DebtorsAgingReport,\r\n      CreditorsAgingReport,\r\n      DebtorsOutstandingReport,\r\n      CreditorsOutstandingReport,\r\n      SummaryLedgerReport,\r\n      AccountLedgerReport,\r\n      SummaryPartyLedger,\r\n      PartyLedgerReport,\r\n      DateFilters,\r\n      CostcenterFilters,\r\n      DebitNoteRegisterReportComponent,\r\n      VATpurchaseRegisterReportComponent,\r\n      OneLakhAbovePURCHASEreportComponent,\r\n      OneLakhAboveSALESreportComponent,\r\n      DivisionComponent,\r\n      CostcenterList,\r\n      AreaList,\r\n      AreaFilters,\r\n      AccountList,\r\n      AccountFilters,\r\n      VoucherRegister,\r\n      CashBankBookReport,\r\n      DayBookReport,\r\n      SubLedgerReport,\r\n      SubLedgerAcbaseReport,\r\n      TrialBalanceReport,\r\n      ActualVsBudgetReport,\r\n      AdditionalCostItemwiseReport,\r\n      AdditionalCostVoucherwiseReport,\r\n      // NepaliDatePickerComponent\r\n      SalesReturnSummaryReport, SalesReturnSummaryRetailerReport, SalesReturnReportDetail,\r\n      StockAbcAnalysisReportAccount,\r\n      StockValuationReport,\r\n      StockSummaryReportAccount,\r\n      CurrentStockWarehousWiseReportAccount,\r\n      StockLedgerReportAccount,\r\n      ConsolidatedTrialBalanceReport,\r\n      ProfitLossReport,BalanceSheetReport,\r\n      TDSReport,\r\n      ConsolidatedBalanceSheetReport,\r\n      ConsolidatedProfitLossReport,\r\n      BillTrackingReport,\r\n      CrediotrsBillTrackingReport,\r\n      PostDatedChequeVoucherReport,\r\n      MonthlySalesPaymentReport,\r\n      LocalPurchaseCostAllocationReport,\r\n      IncomeTaxDepreciationReport,\r\n      CompanyNormsDepreciationReport,\r\n      FaarAssetDepreciationReport,\r\n      CashCollectionVoucherReport\r\n  ],\r\n  providers: [\r\n    CanActivateTeam,TransactionService\r\n    // ReportMainService\r\n  ],\r\n  exports: [],\r\n  entryComponents:\r\n    [MasterDialogReport],\r\n})\r\nexport class ReportModule {\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/pages/Reports/Reports.module.ts"],"mappings":";;;;;AAAA;;;;;;;;ACAA;AAGA;AACA;AACA;AAEA;AAKA;AACA;AACA;AACA;AACA;AACA;AAWA;AAiDA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AA3DA;AAMA;AAMA;AACA;AAGA;AACA;AAKA;AACA;AACA;AACA;AAGA;AACA;AACA;AAGA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAwNA;AA6WA;AACA;AACA;AAzjsBA;AAAA;;AAAA;AAEA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AARA;AANA;AACA;AACA;AACA;AACA;AACA;AAmDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA5DA;AAAA;;;;;;;;;;;;;;;;;;;;;AC5BA;AAEA;AACA;AACA;AACA;AACA;AAIA;AACA;AAIA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;;;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAGA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AArZA;AAFA;AAGA;AADA;AAAA;;;;;;;;;;;;;;;;;;;;ACdhPA;AAFA;AAGA;AADA;AAAA;;;;;;;;;;;;;;;;;;;ACfA;;;;;;;;ACCA;AACA;AAaA;AAIA;AAAA;AACA;AAJA;AAKA;AACA;AACA;AAEA;AACA;AAEA;AAGA;AAAA;AAhBA;AALA;AACA;AACA;AACA;AACA;AAMA;AADA;AAJA;AAAA;;;;;;;;;;;;ACfA;AAEA;AAOA;AACA;AAAA;AAEA;AAEA;AAAA;AALA;AALA;AACA;AACA;AACA;AAGA;AADA;AAAA;;;;;;;;;;;;ACTA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAQA;AA6FA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAhGA;AASA;AACA;AACA;AACA;AACA;AAIA;AAMA;AAIA;AACA;AAMA;AACA;AAUA;AASA;AAEA;AAQA;AAGA;AAEA;AAGA;AAOA;AAGA;AAghGA;AACA;AAhgh0GA;AAAA;AAAA;AAAA;AAKA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;AAAA;AACA;;AAEA;;AAHA;AAkDA;AAAA;AAAA;AAAA;AA8BA;AAAA;AAAA;AAAA;AAmxBA;AAAA;AAAA;AAAA;AAqPA;AADA;;AACA;;AA2EA;AA5qCA;AALA;AACA;AACA;AACA;AACA;AA+FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAxGA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3BA;AAKA;AAJA;AAKA;AACA;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;;;;;;;;;;;ACjkBA;AACA;AAEA;AAGA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAUA;AA+BA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA7BA;AACA;AAEA;AACA;AACA;AAOA;AAEA;AAEA;AAEA;AAEA;AAkjBA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AA/isBA;AAAA;AAAA;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AA1BA;AAPA;AACA;AACA;AACA;AAGA;AAiCA;AACA;AACA;AACA;AACA;AACA;AACA;AAtCA;AAAA;;;;;;;;;;;;;;;;;;;;;;;ACxBA;AAGA;AAEA;AACA;AACA;AACA;AACA;AAeA;AAuBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAtBA;AACA;AACA;AAKA;AACA;AACA;AAEA;AAKA;AAGA;AAMA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAGA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAGA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAIA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAheA;AAAA;;AAAA;AAOA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AArBA;AANA;AACA;AACA;AACA;AACA;AAyBA;AAvBA;AAAA;;;;;;;;;;;;;;;;;ACxBA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAaA;AAiBA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAnBA;AAEA;AACA;AACA;AAEA;AAEA;AAEA;AAEA;AAEA;AAMA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAGA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AAAA;AA3TA;AAAA;;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAdA;AANA;AACA;AACA;AACA;AACA;AAqBA;AAFA;AACA;AAEA;AApBA;AAAA;;;;;;;;;;;;;;;;;ACrBA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAaA;AAgBA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAlBA;AAEA;AACA;AACA;AAEA;AAEA;AAEA;AAEA;AAEA;AAKA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AAAA;AAxTA;AAAA;;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAdA;AANA;AACA;AACA;AACA;AACA;AAoBA;AAFA;AACA;AAEA;AAnBA;AAAA;;;;;;;;;;;;;;;;;ACtBA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAaA;AAUA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAZA;AAIA;AAEA;AAEA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AAzQA;AAAA;;AAAA;AATA;AANA;AACA;AACA;AACA;AACA;AAeA;AAHA;AACA;AACA;AAZA;AAAA;;;;;;;;;;;;;;;;;ACrBA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAOA;AAaA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAdjRA;AAAA;AAAA;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;AAAA;AAAA;AAVA;AALA;AACA;AACA;AACA;AACA;AAcA;AACA;AACA;AACA;AACA;AAjBA;AAAA;;;;;;;;;;;;;;;;;;;AChBA;AACA;AAEA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAOA;AA8BA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AA3BA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AAKA;AAEA;AAEA;AAEA;AAUA;AACA;AAEA;AACA;AACA;AACA;AAGA;AACA;AAEA;AAKA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAGA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAEA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAhZA;AAAA;AAAA;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AA5BA;AALA;AACA;AACA;AACA;AACA;AA+BA;AACA;AACA;AACA;AACA;AAlCA;AAAA;;;;;;;;;;;;;;;;;;;;;ACnBA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAWA;AAYA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAZA;AACA;AACA;AACA;AAEA;AAEA;AAOA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAzUA;AAAA;;AAAA;AACA;AAAA;AAAA;AAAA;AAVA;AANA;AACA;AACA;AACA;AACA;AAgBA;AAFA;AACA;AAGA;AAhBA;AAAA;;;;;;;;;;;;;;;;;;ACpBA;AACA;AACA;AAmBA;AAMA;AAAA;AAAA;AAAA;AAAA;AALA;AACA;AACA;AAEA;AAwFA;AACA;AACA;AACA;AACA;AAzFA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAQA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAOA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAGA;AAAA;AAjKA;AAAA;;AAAA;AALA;AAPA;AACA;AACA;AACA;AAEA;AAQA;AAAA;AANA;AAAA;;;;;;;;;;;;;ACrBA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAaA;AASA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAXA;AAIA;AAGA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AA3KA;AAAA;;AAAA;AARA;AANA;AACA;AACA;AACA;AACA;AAcA;AAHA;AACA;AACA;AAXA;AAAA;;;;;;;;;;;;;;;;;ACrBA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAaA;AASA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAXA;AAIA;AAGA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AA7KA;AAAA;;AAAA;AARA;AANA;AACA;AACA;AACA;AACA;AAcA;AAHA;AACA;AACA;AAXA;AAAA;;;;;;;;;;;;;;;;;ACpBA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAaA;AAWA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAdA;AACA;AACA;AAIA;AAGA;AAMA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAAA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAGA;AAAA;AA5PA;AAAA;;AAAA;AAVA;AANA;AACA;AACA;AACA;AACA;AAiBA;AAJA;AACA;AACA;AACA;AAdA;AAAA;;;;;;;;;;;;;;;;;ACrBA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAaA;AAaA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAdA;AACA;AACA;AAIA;AACA;AACA;AACA;AAEA;AAIA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAGA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAAA;AACA;AAGA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AA7UA;AAAA;;AAAA;AAZA;AANA;AACA;AACA;AACA;AACA;AAeA;AAAA;AAEA;AAfA;AAAA;;;;;;;;;;;;;;;;;;ACvBA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAOA;AAaA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAdcA;AACA;AACA;AACA;AACA;AAjBA;AAAA;;;;;;;;;;;;;;;;;;;AChBA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAaA;AAMA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AARA;AACA;AAEA;AAMA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AAjKA;AAAA;;AAAA;AALA;AANA;AACA;AACA;AACA;AACA;AAYA;AAJA;AACA;AACA;AACA;AATA;AAAA;;;;;;;;;;;;;;;;;;ACrBA;AACA;AACA;AACA;AASA;AAMA;AAAA;AACA;AACA;AAHA;AAIA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAtDA;AAPA;AACA;AACA;AACA;AACA;AAEA;AAOA;AACA;AACA;AARA;AAAA;;;;;;;;;;;;;;ACZA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAaA;AASA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAXA;AACA;AACA;AACA;AACA;AAGA;AAMA;AACA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AAEA;AAEA;AAAA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AAAA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAIA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AA1WA;AAAA;;AAAA;AARA;AANA;AACA;AACA;AACA;AACA;AAcA;AAHA;AACA;AACA;AAXA;AAAA;;;;;;;;;;;;;;;;;;;;ACvBA;AACA;AAOA;AASA;AAAA;AAAA;AARA;AAGA;AAEA;AAIA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AAhFA;AAAA;AAAA;AAAA;AAGA;AAAA;;AAAA;AACA;AAAA;;AAAA;AAPA;AALA;AACA;AACA;AACA;AACA;AAUA;AATA;AAAA;;;;;;;;;;;;ACPA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAaA;AAgBA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAnBA;AACA;AACA;AAIA;AACA;AACA;AACA;AAGA;AAEA;AAMA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAAA;AA3WA;AADA;AACA;AAAA;AAGA;AAAA;;AAAA;AAfA;AANA;AACA;AACA;AACA;AACA;AAsBA;AAJA;AACA;AACA;AACA;AAnBA;AAAA;;;;;;;;;;;;;;;;;;;ACvBA;AACA;AACA;AACA;AAgBA;AAMA;AAAA;AAAA;AAAA;AAAA;AALA;AACA;AAGA;AAmDA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AA/DA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAkBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AAAA;AA5FA;AAAA;;AAAA;AALA;AAPA;AACA;AACA;AACA;AAEA;AAQA;AAAA;AANA;AAAA;;;;;;;;;;;;;;;ACpBA;AACA;AAEA;AAEA;AAUA;AAkBA;AAAA;AAAA;AAfA;AAEA;AACA;AACA;AACA;AACA;AACA;AAGA;AAGA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAxBA;AA0BA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAnDA;AAAA;;AAAA;AACA;AAAA;;AAAA;AAjBA;AAPA;AACA;AACA;AACA;AACA;AAEA;AAmBA;AAlBA;AAAA;;;;;;;;;;;;;;;ACfA;AACA;AAEA;AAEA;AAUA;AAkBA;AAAA;AAAA;AAfA;AAEA;AACA;AACA;AACA;AACA;AACA;AAGA;AAGA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAxBA;AA0BA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AAGA;AACA;AACA;AAEA;AAGA;AACA;AACA;AACA;AACA;AAAA;AArDA;AAAA;;AAAA;AACA;AAAA;;AAAA;AAjBA;AAPA;AACA;AACA;AACA;AACA;AAEA;AAmBA;AAlBA;AAAA;;;;;;;;;;;;;;;ACfA;AACA;AAEA;AACA;AACA;AACA;AAcA;AAYA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAXA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAGA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAGA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;AA9GA;AAAA;;AAAA;AAVA;AANA;AACA;AACA;AACA;AACA;AAcA;AAZA;AAAA;;;;;;;;;;;;;;;;ACnBA;AACA;AAGA;AA6BA;AAOA;AAAA;AAAA;AAAA;AAAA;AANA;AACA;AACA;AAEA;AAIA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AAAA;AAtFA;AAAA;;AAAA;AALA;AArBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAQA;AAAA;AAPA;AAAA;;;;;;;;;;;;;AClCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAUA;AAeA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAjBA;AACA;AAGA;AAEA;AAGA;AAGA;AAOA;AAGA;AAEA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AA9JA;AAAA;;AAAA;AACA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAZA;AANA;AACA;AACA;AACA;AACA;AAmBA;AAFA;AACA;AAhBA;AAAA;;;;;;;;;;;;;;;;;;ACjBA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAWA;AAYA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAZA;AACA;AACA;AACA;AAEA;AAEA;AAQA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AAAA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAjOA;AAAA;;AAAA;AACA;AAAA;AAAA;AAAA;AAVA;AANA;AACA;AACA;AACA;AACA;AAgBA;AAFA;AACA;AAGA;AAhBA;AAAA;;;;;;;;;;;;;;;;;;ACpzGA;AAAA;AAAA;AAAA;AAGA;AAAA;;AAAA;AACA;AAAA;;AAAA;AAPA;AALA;AACA;AACA;AACA;AACA;AAWA;AAVA;AAAA;;;;;;;;;;;;ACRA;AACA;AAEA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAOA;AA+BA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AA5BA;AACA;AAEA;AAEA;AACA;AAGA;AACA;AAKA;AAEA;AAEA;AAEA;AAUA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAKA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAAA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAhsBA;AAAA;AAAA;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AA7BA;AALA;AACA;AACA;AACA;AACA;AAgCA;AACA;AACA;AACA;AACA;AAnCA;AAAA;;;;;;;;;;;;;;;;;;;;;AClBA;AACA;AACA;AACA;AAqBA;AAOA;AAAA;AAAA;AAAA;AAAA;AANA;AACA;AACA;AAGA;AAyHA;AACA;AACA;AACA;AACA;AAuEA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAjNA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;;;;;;;;;AASA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAQA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAOA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAsBA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AAAA;AA7OA;AAAA;;AAAA;AANA;AAPA;AACA;AACA;AACA;AAEA;AASA;AAAA;AAPA;AAAA;;;;;;;;;;;;;;;ACzBA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAWA;AAcA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAjBA;AACA;AAIA;AAEA;AAGA;AAEA;AAMA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AAIA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAhVA;AAAA;AAAA;AAAA;AAGA;AADA;AACA;AAAA;AAGA;AAAA;;AAAA;AAbA;AANA;AACA;AACA;AACA;AACA;AAoBA;AAJA;AACA;AACA;AACA;AAjBA;AAAA;;;;;;;;;;;;;;;;;;;;ACtBA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAaA;AAUA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAZA;AAIA;AAEA;AAEA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AArQA;AAAA;;AAAA;AATA;AANA;AACA;AACA;AACA;AACA;AAeA;AAHA;AACA;AACA;AAZA;AAAA;;;;;;;;;;;;;;;;;ACpBA;AACA;AAEA;AAgCA;AAOA;AAAA;AAAA;AAAA;AAAA;AANA;AACA;AACA;AAGA;AA+FA;AACA;AACA;AACA;AACA;AAhvKA;AAAA;;AAAA;AANA;AAtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAQA;AAAA;AAPA;AAAA;;;;;;;;;;;;;ACnCA;AACA;AACA;AACA;AAgCA;AAOA;AAAA;AAAA;AAAA;AAAA;AANA;AACA;AACA;AAEA;AA8DA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AA6DA;AACA;AACA;AACA;AACA;AAxIA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AAkhNA;AAAA;;AAAA;AALA;AArBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAQA;AAAA;AAPA;AAAA;;;;;;;;;;;;;;;ACpCA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAaA;AAeA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAjBA;AAEA;AACA;AACA;AAEA;AAEA;AAEA;AAEA;AAMA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AArOA;AAAA;;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAZA;AANA;AACA;AACA;AACA;AACA;AAmBA;AAFA;AACA;AAEA;AAlBA;AAAA;;;;;;;;;;;;;;;;;ACrBA;AACA;AAEA;AAEA;AACA;AAEA;AAaA;AAQA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAVA;AAEA;AACA;AACA;AAEA;AAKA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AA7KA;AAAA;;AAAA;AAPA;AANA;AACA;AACA;AACA;AACA;AAYA;AAFA;AACA;AAEA;AAXA;AAAA;;;;;;;;;;;;;;;;ACrBA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAaA;AAaA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAfjSA;AAAA;;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAVA;AANA;AACA;AACA;AACA;AACA;AAiBA;AAFA;AACA;AAEA;AAhBA;AAAA;;;;;;;;;;;;;;;;;ACpBA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAaA;AAaA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAftNA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAGA;AAAA;;AAAA;AAZA;AANA;AACA;AACA;AACA;AACA;AAmBA;AAJA;AACA;AACA;AACA;AAhBA;AAAA;;;;;;;;;;;;;;;;;;;ACxBA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAaA;AAWA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAXA;AAEA;AAEA;AAEA;AAMA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AA9MA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAGA;AAAA;;AAAA;AAVA;AANA;AACA;AACA;AACA;AACA;AAiBA;AAJA;AACA;AACA;AACA;AAdA;AAAA;;;;;;;;;;;;;;;;;;;ACtBA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAaA;AAaA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAfxSA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAGA;AAAA;;AAAA;AAZA;AANA;AACA;AACA;AACA;AACA;AAmBA;AAJA;AACA;AACA;AACA;AAhBA;AAAA;;;;;;;;;;;;;;;;;;;ACtBA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAaA;AAWA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAZA;AAEA;AAEA;AACA;AAQA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAIA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAKA;AAAA;AAnJA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAEA;AAAA;;AAAA;AARA;AANA;AACA;AACA;AACA;AACA;AAiBA;AAJA;AACA;AACA;AACA;AAdA;AAAA;;;;;;;;;;;;;;;;;;;ACvBA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAaA;AAmBA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAtBA;AACA;AACA;AAEA;AAMA;AAEA;AAEA;AAEA;AA+RA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AA/RA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AAjXA;AAAA;;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAhBA;AANA;AACA;AACA;AACA;AACA;AAyBA;AAJA;AACA;AACA;AACA;AAtBA;AAAA;;;;;;;;;;;;;;;;;;;;ACvBA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAaA;AAmBA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAtBA;AACA;AACA;AAEA;AAMA;AAEA;AAEA;AAEA;AAuUA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAvhaA;AAAA;;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAhBA;AANA;AACA;AACA;AACA;AACA;AAyBA;AAJA;AACA;AACA;AACA;AAtBA;AAAA;;;;;;;;;;;;;;;;;;;;;ACxBA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAYA;AAiDA;AAIA;AAJA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AA1CA;AAEA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAMA;AAGA;AAGA;AACA;AAEA;AAEA;AAiVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA1VA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAqqBA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAuCA;AAAA;;AAAA;AA7CA;AATA;AACA;AACA;AACA;AACA;AACA;AAGA;AAkDA;AACA;AACA;AAnDA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;AClDA;AACA;AAEA;AACA;AACA;AAEA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAWA;AA4BA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAnBA;AAEA;AACA;AACA;AAKA;AACA;AAEA;AACA;AAEA;AA0XA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AArqBA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAAA;AAhgBA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAiBA;AAAA;;AAAA;AA3BA;AARA;AACA;AACA;AACA;AACA;AACA;AACA;AA8BA;AACA;AACA;AACA;AA/BA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;AClDA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAaA;AAoBA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAtBA;AACA;AACA;AACA;AACA;AAGA;AAIA;AAIA;AAGA;AAMA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAGA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAzWA;AAAA;;AAAA;AAGA;AADA;AACA;AAAA;AAIA;AADA;AACA;AAAA;AAGA;AADA;AACA;AAAA;AAlBA;AANA;AACA;AACA;AACA;AACA;AAyBA;AAHA;AACA;AACA;AAtBA;AAAA;;;;;;;;;;;;;;;;;;ACrBA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAaA;AAWA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAbA;AACA;AACA;AAIA;AAGA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAAA;AA3SA;AAAA;;AAAA;AAVA;AANA;AACA;AACA;AACA;AACA;AAgBA;AAHA;AACA;AACA;AAbA;AAAA;;;;;;;;;;;;;;;;;ACtBA;AACA;AAOA;AAUA;AAAA;AAAA;AATA;AAGA;AAEA;AAKA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AA/GA;AAAA;AAAA;AAAA;AAGA;AAAA;;AAAA;AACA;AAAA;;AAAA;AAPA;AALA;AACA;AACA;AACA;AACA;AAWA;AAVA;AAAA;;;;;;;;;;;;ACRA;AACA;AACA;AACA;AAEA;AAQA;AAIA;AAAA;AAAA;AAAA;AAAA;AAFA;AAiCA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAhEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAsCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAjHA;AANA;AACA;AACA;AACA;AACA;AACA;AAKA;AAJA;AAAA;;;;;;;;;;;;;;;;ACbA;AACA;AACA;AAGA;AAOA;AAOA;AAAA;AAAA;AACA;AANA;AACA;AAGA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAAA;AA9CA;AAAA;AAAA;AAAA;AALA;AALA;AACA;AACA;AACA;AACA;AAQA;AACA;AARA;AAAA;;;;;;;;;;;;;;ACZA;AACA;AAEA;AACA;AACA;AAUA;AAuBA;AAAA;AAAA;AArBA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAGA;AAoCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAxDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA0BA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAKA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AArHA;AAAA;AAAA;AAAA;AAoBA;AAAA;;AAAA;AACA;AAAA;;AAAA;AAtBA;AAPA;AACA;AACA;AACA;AACA;AAEA;AAwBA;AAvBA;AAAA;;;;;;;;;;;;;;;;ACfA;AACA;AACA;AACA;AAQA;AAsBA;AAAA;AApBA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAGA;AAoCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAxDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA0BA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAnHA;AAAA;AAAA;AAAA;AAmBA;AAAA;;AAAA;AACA;AAAA;;AAAA;AArBA;AALA;AACA;AACA;AACA;AACA;AAuBA;AAtBA;AAAA;;;;;;;;;;;;;;;ACXA;AACA;AAEA;AACA;AACA;AACA;AAUA;AAkBA;AAAA;AAAA;AAAA;AAhBA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAwBA;AAgBA;AACA;AAtCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAAA;AAvFA;AAAA;AAAA;AAAA;AAeA;AAAA;;AAAA;AACA;AAAA;;AAAA;AAjBA;AAPA;AACA;AACA;AACA;AACA;AAEA;AAmBA;AAlBA;AAAA;;;;;;;;;;;;;;;;;AChBA;AACA;AACA;AACA;AACA;AACA;AAUA;AAmBA;AAAA;AAAA;AAAA;AAjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAwCA;AACA;AAtCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAAA;AAxFA;AAAA;AAAA;AAAA;AAgBA;AAAA;;AAAA;AACA;AAAA;;AAAA;AAlBA;AAPA;AACA;AACA;AACA;AACA;AAEA;AAoBA;AAnBA;AAAA;;;;;;;;;;;;;;;;;ACfA;AACA;AACA;AAQA;AAIA;AAAA;AAAA;AAAA;AAHA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAAA;AA5CA;AALA;AACA;AACA;AACA;AACA;AAKA;AAJA;AAAA;;;;;;;;;;;;;ACVA;AACA;AACA;AAOA;AAGA;AAAA;AAAA;AAAA;AAFA;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAdA;AALA;AACA;AACA;AACA;AACA;AAIA;AAHA;AAAA;;;;;;;;;;;;;ACTA;AAEA;AACA;AACA;AACA;AACA;AACA;AAQA;AAgCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA/BA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AAIA;AAIA;AAIA;AAGA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAIA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AAjPA;AAAA;;AAAA;AAGA;AADA;AACA;AAAA;AAIA;AADA;AACA;AAAA;AAIA;AADA;AACA;AAAA;AA7BA;AANA;AACA;AACA;AACA;AACA;AAkCA;AAhCA;AAAA;;;;;;;;;;;;;;;;ACfA;AACA;AACA;AAQA;AAIA;AAAA;AAAA;AAAA;AAHA;AAIA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AAAA;AAxDA;AALA;AACA;AACA;AACA;AACA;AAKA;AAJA;AAAA;;;;;;;;;;;;;ACVA;AACA;AACA;AAOA;AAGA;AAAA;AAAA;AAAA;AAFA;AAGA;AACA;AACA;AAEA;AAGA;AACA;AAAA;AAZA;AALA;AACA;AACA;AACA;AACA;AAIA;AAHA;AAAA;;;;;;;;;;;;;ACRA;AACA;AAEA;AAEA;AACA;AACA;AAeA;AAYA;AAIA;AAJA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAbA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAQA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAGA;AAGA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAAA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AApUA;AAAA;;AAAA;AAXA;AAPA;AACA;AACA;AACA;AAEA;AAgBA;AAFA;AACA;AAEA;AAfA;AAAA;;;;;;;;;;;;;;;;ACtBA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAaA;AAcA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAhBA;AACA;AAGA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAMA;AACA;AAEA;AACA;AAEA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAAA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AA7TA;AAAA;;AAAA;AACA;AAAA;AAAA;AAAA;AAZA;AANA;AACA;AACA;AACA;AACA;AAkBA;AAFA;AACA;AAfA;AAAA;;;;;;;;;;;;;;;;;ACrBA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAeA;AAYA;AAIA;AAJA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAbA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAQA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAGA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAIA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAAA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAGA;AAAA;AAzVA;AAAA;;AAAA;AAXA;AAPA;AACA;AACA;AACA;AAEA;AAiBA;AAHA;AACA;AACA;AAdA;AAAA;;;;;;;;;;;;;;;;;;ACxBA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAaA;AAcA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAhBA;AACA;AAGA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAMA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AA5TA;AAAA;;AAAA;AACA;AAAA;AAAA;AAAA;AAZA;AANA;AACA;AACA;AACA;AACA;AAkBA;AAFA;AACA;AAEA;AAjBA;AAAA;;;;;;;;;;;;;;;;;ACtBA;AACA;AACA;AACA;AAUA;AAGA;AAAA;AAAA;AACA;AACA;AAJA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAOA;AAAA;AAvBA;AAPA;AACA;AACA;AACA;AACA;AAEA;AAIA;AACA;AACA;AALA;AAAA;;;;;;;;;;;;;;ACbA;AAEA;AACA;AACA;AACA;AACA;AACA;AAQA;AAgCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA/BA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AAIA;AAIA;AAIA;AAGA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAIA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AA9OA;AAAA;;AAAA;AAGA;AADA;AACA;AAAA;AAIA;AADA;AACA;AAAA;AAIA;AADA;AACA;AAAA;AA7BA;AANA;AACA;AACA;AACA;AACA;AAkCA;AAhCA;AAAA;;;;;;;;;;;;;;;;ACfA;AACA;AAOA;AAUA;AAAA;AAAA;AATA;AAGA;AAEA;AAKA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AA3GA;AAAA;AAAA;AAAA;AAGA;AAAA;;AAAA;AACA;AAAA;;AAAA;AAPA;AALA;AACA;AACA;AACA;AACA;AAWA;AAVA;AAAA;;;;;;;;;;;;ACPA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAaA;AAmBA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AArBA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAGA;AAIA;AACA;AAuQA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AA1QA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AAEA;AAAA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAAA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AAAA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AAEA;AAGA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAAA;AAEA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAWA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAIA;AAAA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AAldA;AADA;AACA;AAAA;AAOA;AAAA;AAAA;AAAA;AAEA;AAAA;;AAAA;AAlBA;AANA;AACA;AACA;AACA;AACA;AAwBA;AAHA;AACA;AACA;AArBA;AAAA;;;;;;;;;;;;;;;;;;;;ACxBA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAOA;AACA;AACA;AAEA;;;;;;;;;;;;;;AC5EA;AACA;AACA;AAOA;AAWA;AAAA;AALA;AACA;AACA;AAIA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAzGA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AALA;AALA;AACA;AACA;AACA;AACA;AAYA;AAAA;AAXA;AAAA;;;;;;;;;;;;;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACtoGA;AAAA;AACA;AAAA;AAAA;AADA;AAhsourceRoot":""}